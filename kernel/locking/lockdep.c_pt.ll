; ModuleID = '/llk/IR_all_yes/kernel/locking/lockdep.c_pt.bc'
source_filename = "../kernel/locking/lockdep.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+lockdep_recursion\22, \22a\22\09"
module asm "\09.weak\09__crc_lockdep_recursion\09\09\09\09"
module asm "\09.long\09__crc_lockdep_recursion\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lockdep_recursion:\09\09\09\09\09"
module asm "\09.asciz \09\22lockdep_recursion\22\09\09\09\09\09"
module asm "__kstrtabns_lockdep_recursion:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+lockdep_register_key\22, \22a\22\09"
module asm "\09.weak\09__crc_lockdep_register_key\09\09\09\09"
module asm "\09.long\09__crc_lockdep_register_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lockdep_register_key:\09\09\09\09\09"
module asm "\09.asciz \09\22lockdep_register_key\22\09\09\09\09\09"
module asm "__kstrtabns_lockdep_register_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+lockdep_hardirqs_on_prepare\22, \22a\22\09"
module asm "\09.weak\09__crc_lockdep_hardirqs_on_prepare\09\09\09\09"
module asm "\09.long\09__crc_lockdep_hardirqs_on_prepare\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lockdep_hardirqs_on_prepare:\09\09\09\09\09"
module asm "\09.asciz \09\22lockdep_hardirqs_on_prepare\22\09\09\09\09\09"
module asm "__kstrtabns_lockdep_hardirqs_on_prepare:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+lockdep_hardirqs_on\22, \22a\22\09"
module asm "\09.weak\09__crc_lockdep_hardirqs_on\09\09\09\09"
module asm "\09.long\09__crc_lockdep_hardirqs_on\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lockdep_hardirqs_on:\09\09\09\09\09"
module asm "\09.asciz \09\22lockdep_hardirqs_on\22\09\09\09\09\09"
module asm "__kstrtabns_lockdep_hardirqs_on:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+lockdep_hardirqs_off\22, \22a\22\09"
module asm "\09.weak\09__crc_lockdep_hardirqs_off\09\09\09\09"
module asm "\09.long\09__crc_lockdep_hardirqs_off\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lockdep_hardirqs_off:\09\09\09\09\09"
module asm "\09.asciz \09\22lockdep_hardirqs_off\22\09\09\09\09\09"
module asm "__kstrtabns_lockdep_hardirqs_off:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+lockdep_init_map_type\22, \22a\22\09"
module asm "\09.weak\09__crc_lockdep_init_map_type\09\09\09\09"
module asm "\09.long\09__crc_lockdep_init_map_type\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lockdep_init_map_type:\09\09\09\09\09"
module asm "\09.asciz \09\22lockdep_init_map_type\22\09\09\09\09\09"
module asm "__kstrtabns_lockdep_init_map_type:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__lockdep_no_validate__\22, \22a\22\09"
module asm "\09.weak\09__crc___lockdep_no_validate__\09\09\09\09"
module asm "\09.long\09__crc___lockdep_no_validate__\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___lockdep_no_validate__:\09\09\09\09\09"
module asm "\09.asciz \09\22__lockdep_no_validate__\22\09\09\09\09\09"
module asm "__kstrtabns___lockdep_no_validate__:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+lock_set_class\22, \22a\22\09"
module asm "\09.weak\09__crc_lock_set_class\09\09\09\09"
module asm "\09.long\09__crc_lock_set_class\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lock_set_class:\09\09\09\09\09"
module asm "\09.asciz \09\22lock_set_class\22\09\09\09\09\09"
module asm "__kstrtabns_lock_set_class:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+lock_downgrade\22, \22a\22\09"
module asm "\09.weak\09__crc_lock_downgrade\09\09\09\09"
module asm "\09.long\09__crc_lock_downgrade\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lock_downgrade:\09\09\09\09\09"
module asm "\09.asciz \09\22lock_downgrade\22\09\09\09\09\09"
module asm "__kstrtabns_lock_downgrade:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+read_lock_is_recursive\22, \22a\22\09"
module asm "\09.weak\09__crc_read_lock_is_recursive\09\09\09\09"
module asm "\09.long\09__crc_read_lock_is_recursive\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_read_lock_is_recursive:\09\09\09\09\09"
module asm "\09.asciz \09\22read_lock_is_recursive\22\09\09\09\09\09"
module asm "__kstrtabns_read_lock_is_recursive:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+lock_acquire\22, \22a\22\09"
module asm "\09.weak\09__crc_lock_acquire\09\09\09\09"
module asm "\09.long\09__crc_lock_acquire\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lock_acquire:\09\09\09\09\09"
module asm "\09.asciz \09\22lock_acquire\22\09\09\09\09\09"
module asm "__kstrtabns_lock_acquire:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+lock_release\22, \22a\22\09"
module asm "\09.weak\09__crc_lock_release\09\09\09\09"
module asm "\09.long\09__crc_lock_release\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lock_release:\09\09\09\09\09"
module asm "\09.asciz \09\22lock_release\22\09\09\09\09\09"
module asm "__kstrtabns_lock_release:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+lock_is_held_type\22, \22a\22\09"
module asm "\09.weak\09__crc_lock_is_held_type\09\09\09\09"
module asm "\09.long\09__crc_lock_is_held_type\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lock_is_held_type:\09\09\09\09\09"
module asm "\09.asciz \09\22lock_is_held_type\22\09\09\09\09\09"
module asm "__kstrtabns_lock_is_held_type:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+lock_pin_lock\22, \22a\22\09"
module asm "\09.weak\09__crc_lock_pin_lock\09\09\09\09"
module asm "\09.long\09__crc_lock_pin_lock\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lock_pin_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22lock_pin_lock\22\09\09\09\09\09"
module asm "__kstrtabns_lock_pin_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+lock_repin_lock\22, \22a\22\09"
module asm "\09.weak\09__crc_lock_repin_lock\09\09\09\09"
module asm "\09.long\09__crc_lock_repin_lock\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lock_repin_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22lock_repin_lock\22\09\09\09\09\09"
module asm "__kstrtabns_lock_repin_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+lock_unpin_lock\22, \22a\22\09"
module asm "\09.weak\09__crc_lock_unpin_lock\09\09\09\09"
module asm "\09.long\09__crc_lock_unpin_lock\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lock_unpin_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22lock_unpin_lock\22\09\09\09\09\09"
module asm "__kstrtabns_lock_unpin_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+lock_contended\22, \22a\22\09"
module asm "\09.weak\09__crc_lock_contended\09\09\09\09"
module asm "\09.long\09__crc_lock_contended\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lock_contended:\09\09\09\09\09"
module asm "\09.asciz \09\22lock_contended\22\09\09\09\09\09"
module asm "__kstrtabns_lock_contended:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+lock_acquired\22, \22a\22\09"
module asm "\09.weak\09__crc_lock_acquired\09\09\09\09"
module asm "\09.long\09__crc_lock_acquired\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lock_acquired:\09\09\09\09\09"
module asm "\09.asciz \09\22lock_acquired\22\09\09\09\09\09"
module asm "__kstrtabns_lock_acquired:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+lockdep_unregister_key\22, \22a\22\09"
module asm "\09.weak\09__crc_lockdep_unregister_key\09\09\09\09"
module asm "\09.long\09__crc_lockdep_unregister_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lockdep_unregister_key:\09\09\09\09\09"
module asm "\09.asciz \09\22lockdep_unregister_key\22\09\09\09\09\09"
module asm "__kstrtabns_lockdep_unregister_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+debug_check_no_locks_freed\22, \22a\22\09"
module asm "\09.weak\09__crc_debug_check_no_locks_freed\09\09\09\09"
module asm "\09.long\09__crc_debug_check_no_locks_freed\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_debug_check_no_locks_freed:\09\09\09\09\09"
module asm "\09.asciz \09\22debug_check_no_locks_freed\22\09\09\09\09\09"
module asm "__kstrtabns_debug_check_no_locks_freed:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+debug_check_no_locks_held\22, \22a\22\09"
module asm "\09.weak\09__crc_debug_check_no_locks_held\09\09\09\09"
module asm "\09.long\09__crc_debug_check_no_locks_held\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_debug_check_no_locks_held:\09\09\09\09\09"
module asm "\09.asciz \09\22debug_check_no_locks_held\22\09\09\09\09\09"
module asm "__kstrtabns_debug_check_no_locks_held:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+debug_show_all_locks\22, \22a\22\09"
module asm "\09.weak\09__crc_debug_show_all_locks\09\09\09\09"
module asm "\09.long\09__crc_debug_show_all_locks\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_debug_show_all_locks:\09\09\09\09\09"
module asm "\09.asciz \09\22debug_show_all_locks\22\09\09\09\09\09"
module asm "__kstrtabns_debug_show_all_locks:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+debug_show_held_locks\22, \22a\22\09"
module asm "\09.weak\09__crc_debug_show_held_locks\09\09\09\09"
module asm "\09.long\09__crc_debug_show_held_locks\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_debug_show_held_locks:\09\09\09\09\09"
module asm "\09.asciz \09\22debug_show_held_locks\22\09\09\09\09\09"
module asm "__kstrtabns_debug_show_held_locks:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+lockdep_rcu_suspicious\22, \22a\22\09"
module asm "\09.weak\09__crc_lockdep_rcu_suspicious\09\09\09\09"
module asm "\09.long\09__crc_lockdep_rcu_suspicious\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lockdep_rcu_suspicious:\09\09\09\09\09"
module asm "\09.asciz \09\22lockdep_rcu_suspicious\22\09\09\09\09\09"
module asm "__kstrtabns_lockdep_rcu_suspicious:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_event_fields = type { ptr, %union.anon.1 }
%union.anon.1 = type { %struct.anon }
%struct.anon = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.2, %struct.trace_event, ptr, ptr, %union.anon.4, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.2 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.4 = type { ptr }
%union.anon.99 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.100 = type { %struct.bpf_raw_event_map }
%union.anon.101 = type { %struct.bpf_raw_event_map }
%union.anon.102 = type { %struct.bpf_raw_event_map }
%struct.kernel_param_ops = type { i32, ptr, ptr, ptr }
%struct.kernel_param = type { ptr, ptr, ptr, i16, i8, i8, %union.anon.74 }
%union.anon.74 = type { ptr }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.lock_class_stats = type { [4 x i32], [4 x i32], %struct.lock_time, %struct.lock_time, %struct.lock_time, %struct.lock_time, [4 x i32] }
%struct.lock_time = type { i64, i64, i64, i32 }
%struct.lock_class = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, ptr, i32, i32, i32, [10 x ptr], i32, ptr, i8, i8, i8, [4 x i32], [4 x i32] }
%struct.hlist_head = type { ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.lockdep_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8192 x i32] }
%struct.lock_class_key = type { %union.anon.0 }
%union.anon.0 = type { %struct.hlist_node }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.63, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.34 }
%struct.llist_node = type { ptr }
%union.anon.34 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.rb_node = type { i32, ptr, ptr }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.36 }
%union.anon.36 = type { %struct.anon.37 }
%struct.anon.37 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.kuid_t = type { i32 }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.spinlock = type { %union.anon.5 }
%union.anon.5 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.3 }
%union.anon.3 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.tlbflush_unmap_batch = type {}
%union.anon.63 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.lock_chain = type { i32, %struct.hlist_node, i64 }
%struct.circular_queue = type { [4096 x ptr], i32, i32 }
%struct.lock_list = type { %struct.list_head, ptr, ptr, ptr, i16, i8, i8, ptr }
%struct.delayed_free = type { %struct.callback_head, i32, i32, [2 x %struct.pending_free] }
%struct.pending_free = type { %struct.list_head, [2048 x i32] }
%struct.uts_namespace = type { %struct.new_utsname, ptr, ptr, %struct.ns_common }
%struct.new_utsname = type { [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8] }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.trace_event_raw_lock_acquire = type { %struct.trace_entry, i32, i32, ptr, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.trace_event_raw_lock = type { %struct.trace_entry, i32, ptr, [0 x i8] }
%struct.__raw_tickets = type { i16, i16 }
%struct.lock_trace = type { %struct.hlist_node, i32, i32, [0 x i32] }
%struct.lockdep_subclass_key = type { i8 }
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, ptr, %struct.sigpending, %struct.hlist_head, i32, i32, ptr, i32, i32, ptr, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x ptr], ptr, i32, ptr, ptr, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.task_io_accounting, i64, [16 x %struct.rlimit], %struct.pacct_struct, ptr, i32, ptr, i8, i16, i16, ptr, %struct.mutex, %struct.rw_semaphore }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.atomic64_t = type { i64 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i32, i32 }
%struct.pacct_struct = type { i32, i32, i32, i64, i64, i32, i32 }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }

@__tpstrtab_lock_acquire = internal constant [13 x i8] c"lock_acquire\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_lock_acquire = dso_local global %struct.static_call_key { ptr @__traceiter_lock_acquire }, align 4
@__tracepoint_lock_acquire = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_lock_acquire, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_lock_acquire, ptr null, ptr @__traceiter_lock_acquire, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_lock_acquire = internal constant ptr @__tracepoint_lock_acquire, section "__tracepoints_ptrs", align 4
@__tpstrtab_lock_release = internal constant [13 x i8] c"lock_release\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_lock_release = dso_local global %struct.static_call_key { ptr @__traceiter_lock_release }, align 4
@__tracepoint_lock_release = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_lock_release, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_lock_release, ptr null, ptr @__traceiter_lock_release, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_lock_release = internal constant ptr @__tracepoint_lock_release, section "__tracepoints_ptrs", align 4
@__tpstrtab_lock_contended = internal constant [15 x i8] c"lock_contended\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_lock_contended = dso_local global %struct.static_call_key { ptr @__traceiter_lock_contended }, align 4
@__tracepoint_lock_contended = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_lock_contended, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_lock_contended, ptr null, ptr @__traceiter_lock_contended, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_lock_contended = internal constant ptr @__tracepoint_lock_contended, section "__tracepoints_ptrs", align 4
@__tpstrtab_lock_acquired = internal constant [14 x i8] c"lock_acquired\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_lock_acquired = dso_local global %struct.static_call_key { ptr @__traceiter_lock_acquired }, align 4
@__tracepoint_lock_acquired = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_lock_acquired, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_lock_acquired, ptr null, ptr @__traceiter_lock_acquired, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_lock_acquired = internal constant ptr @__tracepoint_lock_acquired, section "__tracepoints_ptrs", align 4
@str__lock__trace_system_name = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"lock\00", [27 x i8] zeroinitializer }, align 32
@trace_event_fields_lock_acquire = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.137, %union.anon.1 { %struct.anon { ptr @.str.138, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.139, %union.anon.1 { %struct.anon { ptr @.str.140, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.141, %union.anon.1 { %struct.anon { ptr @.str.142, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_lock_acquire = internal global %struct.trace_event_class { ptr @str__lock__trace_system_name, ptr @trace_event_raw_event_lock_acquire, ptr @perf_trace_lock_acquire, ptr @trace_event_reg, ptr @trace_event_fields_lock_acquire, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_lock_acquire, i64 24), ptr getelementptr (i8, ptr @event_class_lock_acquire, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_lock_acquire = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_lock_acquire, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_lock_acquire = internal global { [113 x i8], [47 x i8] } { [113 x i8] c"\22%p %s%s%s\22, REC->lockdep_addr, (REC->flags & 1) ? \22try \22 : \22\22, (REC->flags & 2) ? \22read \22 : \22\22, __get_str(name)\00", [47 x i8] zeroinitializer }, align 32
@event_lock_acquire = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_lock_acquire, %union.anon.2 { ptr @__tracepoint_lock_acquire }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_lock_acquire }, ptr @print_fmt_lock_acquire, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_lock_acquire = internal global ptr @event_lock_acquire, section "_ftrace_events", align 4
@trace_event_fields_lock = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.139, %union.anon.1 { %struct.anon { ptr @.str.140, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.141, %union.anon.1 { %struct.anon { ptr @.str.142, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_lock = internal global %struct.trace_event_class { ptr @str__lock__trace_system_name, ptr @trace_event_raw_event_lock, ptr @perf_trace_lock, ptr @trace_event_reg, ptr @trace_event_fields_lock, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_lock, i64 24), ptr getelementptr (i8, ptr @event_class_lock, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_lock = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_lock, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_lock = internal global { [44 x i8], [52 x i8] } { [44 x i8] c"\22%p %s\22, REC->lockdep_addr, __get_str(name)\00", [52 x i8] zeroinitializer }, align 32
@event_lock_release = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_lock, %union.anon.2 { ptr @__tracepoint_lock_release }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_lock }, ptr @print_fmt_lock, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_lock_release = internal global ptr @event_lock_release, section "_ftrace_events", align 4
@event_lock_contended = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_lock, %union.anon.2 { ptr @__tracepoint_lock_contended }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_lock }, ptr @print_fmt_lock, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_lock_contended = internal global ptr @event_lock_contended, section "_ftrace_events", align 4
@event_lock_acquired = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_lock, %union.anon.2 { ptr @__tracepoint_lock_acquired }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_lock }, ptr @print_fmt_lock, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_lock_acquired = internal global ptr @event_lock_acquired, section "_ftrace_events", align 4
@__bpf_trace_tp_map_lock_acquire = internal global %union.anon.99 { %struct.bpf_raw_event_map { ptr @__tracepoint_lock_acquire, ptr @__bpf_trace_lock_acquire, i32 7, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_lock_release = internal global %union.anon.100 { %struct.bpf_raw_event_map { ptr @__tracepoint_lock_release, ptr @__bpf_trace_lock, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_lock_contended = internal global %union.anon.101 { %struct.bpf_raw_event_map { ptr @__tracepoint_lock_contended, ptr @__bpf_trace_lock, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_lock_acquired = internal global %union.anon.102 { %struct.bpf_raw_event_map { ptr @__tracepoint_lock_acquired, ptr @__bpf_trace_lock, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@prove_locking = dso_local global { i32, [28 x i8] } { i32 1, [28 x i8] zeroinitializer }, align 32
@__param_str_prove_locking = internal constant [22 x i8] c"lockdep.prove_locking\00", align 1
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 4
@__param_prove_locking = internal constant %struct.kernel_param { ptr @__param_str_prove_locking, ptr null, ptr @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.74 { ptr @prove_locking } }, section "__param", align 4
@__UNIQUE_ID_prove_lockingtype289 = internal constant [35 x i8] c"lockdep.parmtype=prove_locking:int\00", section ".modinfo", align 1
@lock_stat = dso_local global { i32, [28 x i8] } { i32 1, [28 x i8] zeroinitializer }, align 32
@__param_str_lock_stat = internal constant [18 x i8] c"lockdep.lock_stat\00", align 1
@__param_lock_stat = internal constant %struct.kernel_param { ptr @__param_str_lock_stat, ptr null, ptr @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.74 { ptr @lock_stat } }, section "__param", align 4
@__UNIQUE_ID_lock_stattype290 = internal constant [31 x i8] c"lockdep.parmtype=lock_stat:int\00", section ".modinfo", align 1
@lockdep_recursion = weak dso_local global i32 0, section ".data..percpu", align 4
@__kstrtab_lockdep_recursion = external dso_local constant [0 x i8], align 1
@__kstrtabns_lockdep_recursion = external dso_local constant [0 x i8], align 1
@__ksymtab_lockdep_recursion = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lockdep_recursion to i32), ptr @__kstrtab_lockdep_recursion, ptr @__kstrtabns_lockdep_recursion }, section "___ksymtab_gpl+lockdep_recursion", align 4
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_lock_stats = weak dso_local global [8192 x %struct.lock_class_stats] zeroinitializer, section ".data..percpu", align 8
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@lock_classes = dso_local global { [8192 x %struct.lock_class], [262144 x i8] } zeroinitializer, align 32
@all_lock_classes = dso_local global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @all_lock_classes, ptr @all_lock_classes }, [24 x i8] zeroinitializer }, align 32
@lockdep_selftest_task_struct = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@stack_trace_hash = internal global { [16384 x %struct.hlist_head], [16384 x i8] } zeroinitializer, align 32
@check_consistency = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@__param_str_check_consistency = internal constant [26 x i8] c"lockdep.check_consistency\00", align 1
@__param_check_consistency = internal constant %struct.kernel_param { ptr @__param_str_check_consistency, ptr null, ptr @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.74 { ptr @check_consistency } }, section "__param", align 4
@__UNIQUE_ID_check_consistencytype312 = internal constant [39 x i8] c"lockdep.parmtype=check_consistency:int\00", section ".modinfo", align 1
@lockdep_register_key.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"kernel/locking/lockdep.c\00", [39 x i8] zeroinitializer }, align 32
@lockdep_register_key.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.1 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"RCU-list traversed in non-reader section!\00", [54 x i8] zeroinitializer }, align 32
@lockdep_register_key.__already_done.2 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_lockdep_register_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_lockdep_register_key = external dso_local constant [0 x i8], align 1
@__ksymtab_lockdep_register_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lockdep_register_key to i32), ptr @__kstrtab_lockdep_register_key, ptr @__kstrtabns_lockdep_register_key }, section "___ksymtab_gpl+lockdep_register_key", align 4
@print_shortest_lock_dependencies._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.3, ptr @.str.4, ptr @.str, i32 2384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"%*s ... acquired at:\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"print_shortest_lock_dependencies\00", [63 x i8] zeroinitializer }, align 32
@print_shortest_lock_dependencies._entry_ptr = internal global ptr @print_shortest_lock_dependencies._entry, section ".printk_index", align 4
@.str.5 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@print_shortest_lock_dependencies._entry.6 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.7, ptr @.str.4, ptr @.str, i32 2386, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"\0A\00", [30 x i8] zeroinitializer }, align 32
@print_shortest_lock_dependencies._entry_ptr.8 = internal global ptr @print_shortest_lock_dependencies._entry.6, section ".printk_index", align 4
@print_shortest_lock_dependencies._entry.9 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.10, ptr @.str.4, ptr @.str, i32 2389, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"lockdep:%s bad path found in chain graph\0A\00", [54 x i8] zeroinitializer }, align 32
@print_shortest_lock_dependencies._entry_ptr.11 = internal global ptr @print_shortest_lock_dependencies._entry.9, section ".printk_index", align 4
@print_shortest_lock_dependencies_backwards._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.3, ptr @.str.12, ptr @.str, i32 2432, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"print_shortest_lock_dependencies_backwards\00", [53 x i8] zeroinitializer }, align 32
@print_shortest_lock_dependencies_backwards._entry_ptr = internal global ptr @print_shortest_lock_dependencies_backwards._entry, section ".printk_index", align 4
@print_shortest_lock_dependencies_backwards._entry.13 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.7, ptr @.str.12, ptr @.str, i32 2434, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_shortest_lock_dependencies_backwards._entry_ptr.14 = internal global ptr @print_shortest_lock_dependencies_backwards._entry.13, section ".printk_index", align 4
@print_shortest_lock_dependencies_backwards._entry.15 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.10, ptr @.str.12, ptr @.str, i32 2444, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_shortest_lock_dependencies_backwards._entry_ptr.16 = internal global ptr @print_shortest_lock_dependencies_backwards._entry.15, section ".printk_index", align 4
@chain_hlocks = internal global { [327680 x i16], [163840 x i8] } zeroinitializer, align 32
@lock_chains_in_use = internal global { [2048 x i32], [2048 x i8] } zeroinitializer, align 32
@print_irqtrace_events._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.17, ptr @.str.18, ptr @.str, i32 4089, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"irq event stamp: %u\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"print_irqtrace_events\00", [42 x i8] zeroinitializer }, align 32
@print_irqtrace_events._entry_ptr = internal global ptr @print_irqtrace_events._entry, section ".printk_index", align 4
@print_irqtrace_events._entry.19 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.20, ptr @.str.18, ptr @.str, i32 4092, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"hardirqs last  enabled at (%u): [<%px>] %pS\0A\00", [51 x i8] zeroinitializer }, align 32
@print_irqtrace_events._entry_ptr.21 = internal global ptr @print_irqtrace_events._entry.19, section ".printk_index", align 4
@print_irqtrace_events._entry.22 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.23, ptr @.str.18, ptr @.str, i32 4095, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"hardirqs last disabled at (%u): [<%px>] %pS\0A\00", [51 x i8] zeroinitializer }, align 32
@print_irqtrace_events._entry_ptr.24 = internal global ptr @print_irqtrace_events._entry.22, section ".printk_index", align 4
@print_irqtrace_events._entry.25 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.26, ptr @.str.18, ptr @.str, i32 4098, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"softirqs last  enabled at (%u): [<%px>] %pS\0A\00", [51 x i8] zeroinitializer }, align 32
@print_irqtrace_events._entry_ptr.27 = internal global ptr @print_irqtrace_events._entry.25, section ".printk_index", align 4
@print_irqtrace_events._entry.28 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.29, ptr @.str.18, ptr @.str, i32 4101, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"softirqs last disabled at (%u): [<%px>] %pS\0A\00", [51 x i8] zeroinitializer }, align 32
@print_irqtrace_events._entry_ptr.30 = internal global ptr @print_irqtrace_events._entry.28, section ".printk_index", align 4
@debug_locks = external dso_local global i32, section ".data..read_mostly", align 4
@hardirqs_enabled = external dso_local global i32, section ".data..percpu", align 4
@lockdep_stats = weak dso_local global %struct.lockdep_stats zeroinitializer, section ".data..percpu", align 4
@oops_in_progress = external dso_local local_unnamed_addr global i32, align 4
@debug_locks_silent = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@.str.31 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"DEBUG_LOCKS_WARN_ON(%s)\00", [40 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"!irqs_disabled()\00", [47 x i8] zeroinitializer }, align 32
@early_boot_irqs_disabled = external dso_local local_unnamed_addr global i8, align 1
@.str.33 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"early_boot_irqs_disabled\00", [39 x i8] zeroinitializer }, align 32
@hardirq_context = external dso_local global i32, section ".data..percpu", align 4
@.str.34 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"lockdep_hardirq_context()\00", [38 x i8] zeroinitializer }, align 32
@__kstrtab_lockdep_hardirqs_on_prepare = external dso_local constant [0 x i8], align 1
@__kstrtabns_lockdep_hardirqs_on_prepare = external dso_local constant [0 x i8], align 1
@__ksymtab_lockdep_hardirqs_on_prepare = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lockdep_hardirqs_on_prepare to i32), ptr @__kstrtab_lockdep_hardirqs_on_prepare, ptr @__kstrtabns_lockdep_hardirqs_on_prepare }, section "___ksymtab_gpl+lockdep_hardirqs_on_prepare", align 4
@.str.35 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"current->hardirq_chain_key != current->curr_chain_key\00", [42 x i8] zeroinitializer }, align 32
@lockdep_hardirqs_on.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_lockdep_hardirqs_on = external dso_local constant [0 x i8], align 1
@__kstrtabns_lockdep_hardirqs_on = external dso_local constant [0 x i8], align 1
@__ksymtab_lockdep_hardirqs_on = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lockdep_hardirqs_on to i32), ptr @__kstrtab_lockdep_hardirqs_on, ptr @__kstrtabns_lockdep_hardirqs_on }, section "___ksymtab_gpl+lockdep_hardirqs_on", align 4
@lockdep_hardirqs_off.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@lockdep_hardirqs_off.__already_done.39 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_lockdep_hardirqs_off = external dso_local constant [0 x i8], align 1
@__kstrtabns_lockdep_hardirqs_off = external dso_local constant [0 x i8], align 1
@__ksymtab_lockdep_hardirqs_off = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lockdep_hardirqs_off to i32), ptr @__kstrtab_lockdep_hardirqs_off, ptr @__kstrtabns_lockdep_hardirqs_off }, section "___ksymtab_gpl+lockdep_hardirqs_off", align 4
@lockdep_softirqs_on.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@lockdep_softirqs_on.__already_done.40 = internal unnamed_addr global i1 false, section ".data.once", align 1
@lockdep_softirqs_off.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.41 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"!softirq_count()\00", [47 x i8] zeroinitializer }, align 32
@lockdep_softirqs_off.__already_done.42 = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.43 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"!name\00", [26 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"NULL\00", [27 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"!key\00", [27 x i8] zeroinitializer }, align 32
@lockdep_init_map_type._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.46, ptr @.str.47, ptr @.str, i32 4812, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\013BUG: key %px has not been registered!\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"lockdep_init_map_type\00", [42 x i8] zeroinitializer }, align 32
@lockdep_init_map_type._entry_ptr = internal global ptr @lockdep_init_map_type._entry, section ".printk_index", align 4
@.str.48 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"1\00", [30 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"!lockdep_enabled()\00", [45 x i8] zeroinitializer }, align 32
@__kstrtab_lockdep_init_map_type = external dso_local constant [0 x i8], align 1
@__kstrtabns_lockdep_init_map_type = external dso_local constant [0 x i8], align 1
@__ksymtab_lockdep_init_map_type = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lockdep_init_map_type to i32), ptr @__kstrtab_lockdep_init_map_type, ptr @__kstrtabns_lockdep_init_map_type }, section "___ksymtab_gpl+lockdep_init_map_type", align 4
@__lockdep_no_validate__ = dso_local global %struct.lock_class_key zeroinitializer, align 4
@__kstrtab___lockdep_no_validate__ = external dso_local constant [0 x i8], align 1
@__kstrtabns___lockdep_no_validate__ = external dso_local constant [0 x i8], align 1
@__ksymtab___lockdep_no_validate__ = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__lockdep_no_validate__ to i32), ptr @__kstrtab___lockdep_no_validate__, ptr @__kstrtabns___lockdep_no_validate__ }, section "___ksymtab_gpl+__lockdep_no_validate__", align 4
@__kstrtab_lock_set_class = external dso_local constant [0 x i8], align 1
@__kstrtabns_lock_set_class = external dso_local constant [0 x i8], align 1
@__ksymtab_lock_set_class = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lock_set_class to i32), ptr @__kstrtab_lock_set_class, ptr @__kstrtabns_lock_set_class }, section "___ksymtab_gpl+lock_set_class", align 4
@__kstrtab_lock_downgrade = external dso_local constant [0 x i8], align 1
@__kstrtabns_lock_downgrade = external dso_local constant [0 x i8], align 1
@__ksymtab_lock_downgrade = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lock_downgrade to i32), ptr @__kstrtab_lock_downgrade, ptr @__kstrtabns_lock_downgrade }, section "___ksymtab_gpl+lock_downgrade", align 4
@__kstrtab_read_lock_is_recursive = external dso_local constant [0 x i8], align 1
@__kstrtabns_read_lock_is_recursive = external dso_local constant [0 x i8], align 1
@__ksymtab_read_lock_is_recursive = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @read_lock_is_recursive to i32), ptr @__kstrtab_read_lock_is_recursive, ptr @__kstrtabns_read_lock_is_recursive }, section "___ksymtab_gpl+read_lock_is_recursive", align 4
@__kstrtab_lock_acquire = external dso_local constant [0 x i8], align 1
@__kstrtabns_lock_acquire = external dso_local constant [0 x i8], align 1
@__ksymtab_lock_acquire = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lock_acquire to i32), ptr @__kstrtab_lock_acquire, ptr @__kstrtabns_lock_acquire }, section "___ksymtab_gpl+lock_acquire", align 4
@__kstrtab_lock_release = external dso_local constant [0 x i8], align 1
@__kstrtabns_lock_release = external dso_local constant [0 x i8], align 1
@__ksymtab_lock_release = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lock_release to i32), ptr @__kstrtab_lock_release, ptr @__kstrtabns_lock_release }, section "___ksymtab_gpl+lock_release", align 4
@__kstrtab_lock_is_held_type = external dso_local constant [0 x i8], align 1
@__kstrtabns_lock_is_held_type = external dso_local constant [0 x i8], align 1
@__ksymtab_lock_is_held_type = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lock_is_held_type to i32), ptr @__kstrtab_lock_is_held_type, ptr @__kstrtabns_lock_is_held_type }, section "___ksymtab_gpl+lock_is_held_type", align 4
@_kbl_addr_lock_is_held_type = internal global i32 ptrtoint (ptr @lock_is_held_type to i32), section "_kprobe_blacklist", align 4
@__kstrtab_lock_pin_lock = external dso_local constant [0 x i8], align 1
@__kstrtabns_lock_pin_lock = external dso_local constant [0 x i8], align 1
@__ksymtab_lock_pin_lock = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lock_pin_lock to i32), ptr @__kstrtab_lock_pin_lock, ptr @__kstrtabns_lock_pin_lock }, section "___ksymtab_gpl+lock_pin_lock", align 4
@__kstrtab_lock_repin_lock = external dso_local constant [0 x i8], align 1
@__kstrtabns_lock_repin_lock = external dso_local constant [0 x i8], align 1
@__ksymtab_lock_repin_lock = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lock_repin_lock to i32), ptr @__kstrtab_lock_repin_lock, ptr @__kstrtabns_lock_repin_lock }, section "___ksymtab_gpl+lock_repin_lock", align 4
@__kstrtab_lock_unpin_lock = external dso_local constant [0 x i8], align 1
@__kstrtabns_lock_unpin_lock = external dso_local constant [0 x i8], align 1
@__ksymtab_lock_unpin_lock = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lock_unpin_lock to i32), ptr @__kstrtab_lock_unpin_lock, ptr @__kstrtabns_lock_unpin_lock }, section "___ksymtab_gpl+lock_unpin_lock", align 4
@__kstrtab_lock_contended = external dso_local constant [0 x i8], align 1
@__kstrtabns_lock_contended = external dso_local constant [0 x i8], align 1
@__ksymtab_lock_contended = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lock_contended to i32), ptr @__kstrtab_lock_contended, ptr @__kstrtabns_lock_contended }, section "___ksymtab_gpl+lock_contended", align 4
@__kstrtab_lock_acquired = external dso_local constant [0 x i8], align 1
@__kstrtabns_lock_acquired = external dso_local constant [0 x i8], align 1
@__ksymtab_lock_acquired = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lock_acquired to i32), ptr @__kstrtab_lock_acquired, ptr @__kstrtabns_lock_acquired }, section "___ksymtab_gpl+lock_acquired", align 4
@nr_hardirq_chains = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@nr_softirq_chains = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@nr_process_chains = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@chainhash_table = internal global { [32768 x %struct.hlist_head], [32768 x i8] } zeroinitializer, align 32
@lockdep_unregister_key.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@lockdep_unregister_key.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@lockdep_unregister_key.__already_done.50 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_lockdep_unregister_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_lockdep_unregister_key = external dso_local constant [0 x i8], align 1
@__ksymtab_lockdep_unregister_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lockdep_unregister_key to i32), ptr @__kstrtab_lockdep_unregister_key, ptr @__kstrtabns_lockdep_unregister_key }, section "___ksymtab_gpl+lockdep_unregister_key", align 4
@lockdep_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.51, ptr @.str.52, ptr @.str, i32 6333, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [74 x i8], [54 x i8] } { [74 x i8] c"Lock dependency validator: Copyright (c) 2006 Red Hat, Inc., Ingo Molnar\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"lockdep_init\00", [19 x i8] zeroinitializer }, align 32
@lockdep_init._entry_ptr = internal global ptr @lockdep_init._entry, section ".printk_index", align 4
@lockdep_init._entry.53 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.54, ptr @.str.52, ptr @.str, i32 6335, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"... MAX_LOCKDEP_SUBCLASSES:  %lu\0A\00", [62 x i8] zeroinitializer }, align 32
@lockdep_init._entry_ptr.55 = internal global ptr @lockdep_init._entry.53, section ".printk_index", align 4
@lockdep_init._entry.56 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.57, ptr @.str.52, ptr @.str, i32 6336, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"... MAX_LOCK_DEPTH:          %lu\0A\00", [62 x i8] zeroinitializer }, align 32
@lockdep_init._entry_ptr.58 = internal global ptr @lockdep_init._entry.56, section ".printk_index", align 4
@lockdep_init._entry.59 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.60, ptr @.str.52, ptr @.str, i32 6337, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"... MAX_LOCKDEP_KEYS:        %lu\0A\00", [62 x i8] zeroinitializer }, align 32
@lockdep_init._entry_ptr.61 = internal global ptr @lockdep_init._entry.59, section ".printk_index", align 4
@lockdep_init._entry.62 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.63, ptr @.str.52, ptr @.str, i32 6338, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"... CLASSHASH_SIZE:          %lu\0A\00", [62 x i8] zeroinitializer }, align 32
@lockdep_init._entry_ptr.64 = internal global ptr @lockdep_init._entry.62, section ".printk_index", align 4
@lockdep_init._entry.65 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.66, ptr @.str.52, ptr @.str, i32 6339, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"... MAX_LOCKDEP_ENTRIES:     %lu\0A\00", [62 x i8] zeroinitializer }, align 32
@lockdep_init._entry_ptr.67 = internal global ptr @lockdep_init._entry.65, section ".printk_index", align 4
@lockdep_init._entry.68 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.69, ptr @.str.52, ptr @.str, i32 6340, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"... MAX_LOCKDEP_CHAINS:      %lu\0A\00", [62 x i8] zeroinitializer }, align 32
@lockdep_init._entry_ptr.70 = internal global ptr @lockdep_init._entry.68, section ".printk_index", align 4
@lockdep_init._entry.71 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.72, ptr @.str.52, ptr @.str, i32 6341, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"... CHAINHASH_SIZE:          %lu\0A\00", [62 x i8] zeroinitializer }, align 32
@lockdep_init._entry_ptr.73 = internal global ptr @lockdep_init._entry.71, section ".printk_index", align 4
@lockdep_init._entry.74 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.75, ptr @.str.52, ptr @.str, i32 6358, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c" memory used by lock dependency info: %zu kB\0A\00", [50 x i8] zeroinitializer }, align 32
@lockdep_init._entry_ptr.76 = internal global ptr @lockdep_init._entry.74, section ".printk_index", align 4
@lockdep_init._entry.77 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.78, ptr @.str.52, ptr @.str, i32 6363, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c" memory used for stack traces: %zu kB\0A\00", [57 x i8] zeroinitializer }, align 32
@lockdep_init._entry_ptr.79 = internal global ptr @lockdep_init._entry.77, section ".printk_index", align 4
@lockdep_init._entry.80 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.81, ptr @.str.52, ptr @.str, i32 6367, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c" per task-struct memory footprint: %zu bytes\0A\00", [50 x i8] zeroinitializer }, align 32
@lockdep_init._entry_ptr.82 = internal global ptr @lockdep_init._entry.80, section ".printk_index", align 4
@__kstrtab_debug_check_no_locks_freed = external dso_local constant [0 x i8], align 1
@__kstrtabns_debug_check_no_locks_freed = external dso_local constant [0 x i8], align 1
@__ksymtab_debug_check_no_locks_freed = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @debug_check_no_locks_freed to i32), ptr @__kstrtab_debug_check_no_locks_freed, ptr @__kstrtabns_debug_check_no_locks_freed }, section "___ksymtab_gpl+debug_check_no_locks_freed", align 4
@__kstrtab_debug_check_no_locks_held = external dso_local constant [0 x i8], align 1
@__kstrtabns_debug_check_no_locks_held = external dso_local constant [0 x i8], align 1
@__ksymtab_debug_check_no_locks_held = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @debug_check_no_locks_held to i32), ptr @__kstrtab_debug_check_no_locks_held, ptr @__kstrtabns_debug_check_no_locks_held }, section "___ksymtab_gpl+debug_check_no_locks_held", align 4
@debug_show_all_locks._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.83, ptr @.str.84, ptr @.str, i32 6461, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\014INFO: lockdep is turned off.\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"debug_show_all_locks\00", [43 x i8] zeroinitializer }, align 32
@debug_show_all_locks._entry_ptr = internal global ptr @debug_show_all_locks._entry, section ".printk_index", align 4
@debug_show_all_locks._entry.85 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.86, ptr @.str.84, ptr @.str, i32 6464, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\014\0AShowing all locks held in the system:\0A\00", [54 x i8] zeroinitializer }, align 32
@debug_show_all_locks._entry_ptr.87 = internal global ptr @debug_show_all_locks._entry.85, section ".printk_index", align 4
@init_task = external dso_local global %struct.task_struct, align 128
@debug_show_all_locks.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@debug_show_all_locks._entry.88 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @.str.84, ptr @.str, i32 6476, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"\014\0A\00", [28 x i8] zeroinitializer }, align 32
@debug_show_all_locks._entry_ptr.90 = internal global ptr @debug_show_all_locks._entry.88, section ".printk_index", align 4
@debug_show_all_locks._entry.91 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.92, ptr @.str.84, ptr @.str, i32 6477, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\014=============================================\0A\0A\00", [46 x i8] zeroinitializer }, align 32
@debug_show_all_locks._entry_ptr.93 = internal global ptr @debug_show_all_locks._entry.91, section ".printk_index", align 4
@__kstrtab_debug_show_all_locks = external dso_local constant [0 x i8], align 1
@__kstrtabns_debug_show_all_locks = external dso_local constant [0 x i8], align 1
@__ksymtab_debug_show_all_locks = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @debug_show_all_locks to i32), ptr @__kstrtab_debug_show_all_locks, ptr @__kstrtabns_debug_show_all_locks }, section "___ksymtab_gpl+debug_show_all_locks", align 4
@debug_show_held_locks._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.94, ptr @.str.95, ptr @.str, i32 6489, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"INFO: lockdep is turned off.\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"debug_show_held_locks\00", [42 x i8] zeroinitializer }, align 32
@debug_show_held_locks._entry_ptr = internal global ptr @debug_show_held_locks._entry, section ".printk_index", align 4
@__kstrtab_debug_show_held_locks = external dso_local constant [0 x i8], align 1
@__kstrtabns_debug_show_held_locks = external dso_local constant [0 x i8], align 1
@__ksymtab_debug_show_held_locks = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @debug_show_held_locks to i32), ptr @__kstrtab_debug_show_held_locks, ptr @__kstrtabns_debug_show_held_locks }, section "___ksymtab_gpl+debug_show_held_locks", align 4
@lockdep_sys_exit._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @.str.96, ptr @.str, i32 6503, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"lockdep_sys_exit\00", [47 x i8] zeroinitializer }, align 32
@lockdep_sys_exit._entry_ptr = internal global ptr @lockdep_sys_exit._entry, section ".printk_index", align 4
@lockdep_sys_exit._entry.97 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.98, ptr @.str.96, ptr @.str, i32 6504, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\014================================================\0A\00", [44 x i8] zeroinitializer }, align 32
@lockdep_sys_exit._entry_ptr.99 = internal global ptr @lockdep_sys_exit._entry.97, section ".printk_index", align 4
@lockdep_sys_exit._entry.100 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.101, ptr @.str.96, ptr @.str, i32 6505, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\014WARNING: lock held when returning to user space!\0A\00", [44 x i8] zeroinitializer }, align 32
@lockdep_sys_exit._entry_ptr.102 = internal global ptr @lockdep_sys_exit._entry.100, section ".printk_index", align 4
@lockdep_sys_exit._entry.103 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.104, ptr @.str.96, ptr @.str, i32 6507, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\014------------------------------------------------\0A\00", [44 x i8] zeroinitializer }, align 32
@lockdep_sys_exit._entry_ptr.105 = internal global ptr @lockdep_sys_exit._entry.103, section ".printk_index", align 4
@lockdep_sys_exit._entry.106 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.107, ptr @.str.96, ptr @.str, i32 6509, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\014%s/%d is leaving the kernel with locks still held!\0A\00", [42 x i8] zeroinitializer }, align 32
@lockdep_sys_exit._entry_ptr.108 = internal global ptr @lockdep_sys_exit._entry.106, section ".printk_index", align 4
@lockdep_rcu_suspicious._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @.str.109, ptr @.str, i32 6526, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"lockdep_rcu_suspicious\00", [41 x i8] zeroinitializer }, align 32
@lockdep_rcu_suspicious._entry_ptr = internal global ptr @lockdep_rcu_suspicious._entry, section ".printk_index", align 4
@lockdep_rcu_suspicious._entry.110 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.111, ptr @.str.109, ptr @.str, i32 6527, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\014=============================\0A\00", [63 x i8] zeroinitializer }, align 32
@lockdep_rcu_suspicious._entry_ptr.112 = internal global ptr @lockdep_rcu_suspicious._entry.110, section ".printk_index", align 4
@lockdep_rcu_suspicious._entry.113 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.114, ptr @.str.109, ptr @.str, i32 6528, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\014WARNING: suspicious RCU usage\0A\00", [63 x i8] zeroinitializer }, align 32
@lockdep_rcu_suspicious._entry_ptr.115 = internal global ptr @lockdep_rcu_suspicious._entry.113, section ".printk_index", align 4
@lockdep_rcu_suspicious._entry.116 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.117, ptr @.str.109, ptr @.str, i32 6530, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\014-----------------------------\0A\00", [63 x i8] zeroinitializer }, align 32
@lockdep_rcu_suspicious._entry_ptr.118 = internal global ptr @lockdep_rcu_suspicious._entry.116, section ".printk_index", align 4
@lockdep_rcu_suspicious._entry.119 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.120, ptr @.str.109, ptr @.str, i32 6531, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"\014%s:%d %s!\0A\00", [19 x i8] zeroinitializer }, align 32
@lockdep_rcu_suspicious._entry_ptr.121 = internal global ptr @lockdep_rcu_suspicious._entry.119, section ".printk_index", align 4
@lockdep_rcu_suspicious._entry.122 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.123, ptr @.str.109, ptr @.str, i32 6532, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"\014\0Aother info that might help us debug this:\0A\0A\00", [49 x i8] zeroinitializer }, align 32
@lockdep_rcu_suspicious._entry_ptr.124 = internal global ptr @lockdep_rcu_suspicious._entry.122, section ".printk_index", align 4
@lockdep_rcu_suspicious._entry.125 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.126, ptr @.str.109, ptr @.str, i32 6538, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\014\0A%srcu_scheduler_active = %d, debug_locks = %d\0A%s\00", [44 x i8] zeroinitializer }, align 32
@lockdep_rcu_suspicious._entry_ptr.127 = internal global ptr @lockdep_rcu_suspicious._entry.125, section ".printk_index", align 4
@.str.128 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"RCU used illegally from offline CPU!\0A\00", [58 x i8] zeroinitializer }, align 32
@rcu_scheduler_active = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@.str.129 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"Possible false positive due to lockdep disabling via debug_locks = 0\0A\00", [58 x i8] zeroinitializer }, align 32
@lockdep_rcu_suspicious._entry.130 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.131, ptr @.str.109, ptr @.str, i32 6559, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\014RCU used illegally from extended quiescent state!\0A\00", [43 x i8] zeroinitializer }, align 32
@lockdep_rcu_suspicious._entry_ptr.132 = internal global ptr @lockdep_rcu_suspicious._entry.130, section ".printk_index", align 4
@lockdep_rcu_suspicious._entry.133 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.134, ptr @.str.109, ptr @.str, i32 6562, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"\014\0Astack backtrace:\0A\00", [43 x i8] zeroinitializer }, align 32
@lockdep_rcu_suspicious._entry_ptr.135 = internal global ptr @lockdep_rcu_suspicious._entry.133, section ".printk_index", align 4
@__kstrtab_lockdep_rcu_suspicious = external dso_local constant [0 x i8], align 1
@__kstrtabns_lockdep_rcu_suspicious = external dso_local constant [0 x i8], align 1
@__ksymtab_lockdep_rcu_suspicious = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lockdep_rcu_suspicious to i32), ptr @__kstrtab_lockdep_rcu_suspicious, ptr @__kstrtabns_lockdep_rcu_suspicious }, section "___ksymtab_gpl+lockdep_rcu_suspicious", align 4
@__pcpu_scope_lockdep_recursion = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@__pcpu_unique_lockdep_recursion = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@nr_list_entries = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@nr_lock_classes = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@nr_zapped_classes = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@__pcpu_unique_cpu_lock_stats = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@nr_stack_trace_entries = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@max_lockdep_depth = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@__pcpu_scope_lockdep_stats = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@__pcpu_unique_lockdep_stats = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@max_bfs_queue_depth = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@lock_chains = dso_local global { [65536 x %struct.lock_chain], [262144 x i8] } zeroinitializer, align 32
@nr_zapped_lock_chains = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@nr_free_chain_hlocks = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@nr_lost_chain_hlocks = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@nr_large_chain_blocks = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@.str.136 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"(null)\00", [25 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"flags\00", [26 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"__data_loc char[]\00", [46 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"name\00", [27 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"void *\00", [25 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"lockdep_addr\00", [19 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"%p %s%s%s\0A\00", [21 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"try \00", [27 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"read \00", [26 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"%p %s\0A\00", [25 x i8] zeroinitializer }, align 32
@_stext = external dso_local global [0 x i8], align 1
@_end = external dso_local global [0 x i8], align 1
@system_state = external dso_local local_unnamed_addr global i32, align 4
@__init_begin = external dso_local global [0 x i8], align 1
@__init_end = external dso_local global [0 x i8], align 1
@lock_keys_hash = internal global { [4096 x %struct.hlist_head], [4096 x i8] } zeroinitializer, align 32
@__lock = internal global %struct.arch_spinlock_t zeroinitializer, align 4
@__owner = internal unnamed_addr global ptr null, align 4
@lock_cq = internal global { %struct.circular_queue, [4120 x i8] } zeroinitializer, align 32
@__bfs.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.147 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"__owner != current\00", [45 x i8] zeroinitializer }, align 32
@lockdep_dependency_gen_id = internal global { i32, [28 x i8] } zeroinitializer, align 32
@print_lock_class_header._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.148, ptr @.str.149, ptr @.str, i32 2298, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%*s->\00", [26 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"print_lock_class_header\00", [40 x i8] zeroinitializer }, align 32
@print_lock_class_header._entry_ptr = internal global ptr @print_lock_class_header._entry, section ".printk_index", align 4
@print_lock_class_header._entry.150 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.151, ptr @.str.149, ptr @.str, i32 2301, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"\01c ops: %lu\00", [20 x i8] zeroinitializer }, align 32
@print_lock_class_header._entry_ptr.152 = internal global ptr @print_lock_class_header._entry.150, section ".printk_index", align 4
@print_lock_class_header._entry.153 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.154, ptr @.str.149, ptr @.str, i32 2303, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"\01c {\0A\00", [26 x i8] zeroinitializer }, align 32
@print_lock_class_header._entry_ptr.155 = internal global ptr @print_lock_class_header._entry.153, section ".printk_index", align 4
@print_lock_class_header._entry.156 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.157, ptr @.str.149, ptr @.str, i32 2309, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"%*s   %s\00", [23 x i8] zeroinitializer }, align 32
@print_lock_class_header._entry_ptr.158 = internal global ptr @print_lock_class_header._entry.156, section ".printk_index", align 4
@usage_str = internal constant { [11 x ptr], [52 x i8] } { [11 x ptr] [ptr @.str.183, ptr @.str.184, ptr @.str.185, ptr @.str.186, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.190, ptr @.str.191, ptr @.str.192, ptr @.str.193], [52 x i8] zeroinitializer }, align 32
@print_lock_class_header._entry.159 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.160, ptr @.str.149, ptr @.str, i32 2310, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"\01c at:\0A\00", [24 x i8] zeroinitializer }, align 32
@print_lock_class_header._entry_ptr.161 = internal global ptr @print_lock_class_header._entry.159, section ".printk_index", align 4
@print_lock_class_header._entry.162 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.163, ptr @.str.149, ptr @.str, i32 2314, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"%*s }\0A\00", [25 x i8] zeroinitializer }, align 32
@print_lock_class_header._entry_ptr.164 = internal global ptr @print_lock_class_header._entry.162, section ".printk_index", align 4
@print_lock_class_header._entry.165 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.166, ptr @.str.149, ptr @.str, i32 2317, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"%*s ... key      at: [<%px>] %pS\0A\00", [62 x i8] zeroinitializer }, align 32
@print_lock_class_header._entry_ptr.167 = internal global ptr @print_lock_class_header._entry.165, section ".printk_index", align 4
@print_lock_name._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.168, ptr @.str.169, ptr @.str, i32 707, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"\01c (\00", [27 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"print_lock_name\00", [16 x i8] zeroinitializer }, align 32
@print_lock_name._entry_ptr = internal global ptr @print_lock_name._entry, section ".printk_index", align 4
@print_lock_name._entry.170 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.171, ptr @.str.169, ptr @.str, i32 711, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"\01c){%s}-{%d:%d}\00", [16 x i8] zeroinitializer }, align 32
@print_lock_name._entry_ptr.172 = internal global ptr @print_lock_name._entry.170, section ".printk_index", align 4
@__print_lock_name._entry = internal constant %struct.pi_entry { ptr @.str.173, ptr @.str.174, ptr @.str, i32 691, ptr null, ptr null }, align 1
@.str.173 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"\01c%s\00", [27 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"__print_lock_name\00", [46 x i8] zeroinitializer }, align 32
@__print_lock_name._entry_ptr = internal global ptr @__print_lock_name._entry, section ".printk_index", align 4
@__print_lock_name._entry.175 = internal constant %struct.pi_entry { ptr @.str.173, ptr @.str.174, ptr @.str, i32 693, ptr null, ptr null }, align 1
@__print_lock_name._entry_ptr.176 = internal global ptr @__print_lock_name._entry.175, section ".printk_index", align 4
@__print_lock_name._entry.177 = internal constant %struct.pi_entry { ptr @.str.178, ptr @.str.174, ptr @.str, i32 695, ptr null, ptr null }, align 1
@.str.178 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"\01c#%d\00", [26 x i8] zeroinitializer }, align 32
@__print_lock_name._entry_ptr.179 = internal global ptr @__print_lock_name._entry.177, section ".printk_index", align 4
@__print_lock_name._entry.180 = internal constant %struct.pi_entry { ptr @.str.181, ptr @.str.174, ptr @.str, i32 697, ptr null, ptr null }, align 1
@.str.181 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"\01c/%d\00", [26 x i8] zeroinitializer }, align 32
@__print_lock_name._entry_ptr.182 = internal global ptr @__print_lock_name._entry.180, section ".printk_index", align 4
@.str.183 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"IN-HARDIRQ-W\00", [19 x i8] zeroinitializer }, align 32
@.str.184 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"IN-HARDIRQ-R\00", [19 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"HARDIRQ-ON-W\00", [19 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"HARDIRQ-ON-R\00", [19 x i8] zeroinitializer }, align 32
@.str.187 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"IN-SOFTIRQ-W\00", [19 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"IN-SOFTIRQ-R\00", [19 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"SOFTIRQ-ON-W\00", [19 x i8] zeroinitializer }, align 32
@.str.190 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"SOFTIRQ-ON-R\00", [19 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"INITIAL USE\00", [20 x i8] zeroinitializer }, align 32
@.str.192 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"INITIAL READ USE\00", [47 x i8] zeroinitializer }, align 32
@.str.193 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"IN-NMI\00", [25 x i8] zeroinitializer }, align 32
@lockdep_recursion_finish.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@mark_lock.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@mark_lock._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.195, ptr @.str.196, ptr @.str, i32 4617, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"\0Amarked lock as {%s}:\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"mark_lock\00", [22 x i8] zeroinitializer }, align 32
@mark_lock._entry_ptr = internal global ptr @mark_lock._entry, section ".printk_index", align 4
@lock_classes_in_use = internal global { [256 x i32], [256 x i8] } zeroinitializer, align 32
@stack_trace = internal global { [524288 x i32], [262144 x i8] } zeroinitializer, align 32
@.str.197 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"BUG: MAX_STACK_TRACE_ENTRIES too low!\00", [58 x i8] zeroinitializer }, align 32
@print_lockdep_off._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.198, ptr @.str.199, ptr @.str, i32 492, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"\017%s\0A\00", [26 x i8] zeroinitializer }, align 32
@.str.199 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"print_lockdep_off\00", [46 x i8] zeroinitializer }, align 32
@print_lockdep_off._entry_ptr = internal global ptr @print_lockdep_off._entry, section ".printk_index", align 4
@print_lockdep_off._entry.200 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.201, ptr @.str.199, ptr @.str, i32 493, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.201 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\017turning off the locking correctness validator.\0A\00", [46 x i8] zeroinitializer }, align 32
@print_lockdep_off._entry_ptr.202 = internal global ptr @print_lockdep_off._entry.200, section ".printk_index", align 4
@print_lockdep_off._entry.203 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.204, ptr @.str.199, ptr @.str, i32 495, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\017Please attach the output of /proc/lock_stat to the bug report\0A\00", [63 x i8] zeroinitializer }, align 32
@print_lockdep_off._entry_ptr.205 = internal global ptr @print_lockdep_off._entry.203, section ".printk_index", align 4
@print_usage_bug._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @.str.206, ptr @.str, i32 3906, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"print_usage_bug\00", [16 x i8] zeroinitializer }, align 32
@print_usage_bug._entry_ptr = internal global ptr @print_usage_bug._entry, section ".printk_index", align 4
@print_usage_bug._entry.207 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.208, ptr @.str.206, ptr @.str, i32 3907, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.208 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\014================================\0A\00", [60 x i8] zeroinitializer }, align 32
@print_usage_bug._entry_ptr.209 = internal global ptr @print_usage_bug._entry.207, section ".printk_index", align 4
@print_usage_bug._entry.210 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.211, ptr @.str.206, ptr @.str, i32 3908, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\014WARNING: inconsistent lock state\0A\00", [60 x i8] zeroinitializer }, align 32
@print_usage_bug._entry_ptr.212 = internal global ptr @print_usage_bug._entry.210, section ".printk_index", align 4
@print_usage_bug._entry.213 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.214, ptr @.str.206, ptr @.str, i32 3910, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\014--------------------------------\0A\00", [60 x i8] zeroinitializer }, align 32
@print_usage_bug._entry_ptr.215 = internal global ptr @print_usage_bug._entry.213, section ".printk_index", align 4
@print_usage_bug._entry.216 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.217, ptr @.str.206, ptr @.str, i32 3913, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.217 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\014inconsistent {%s} -> {%s} usage.\0A\00", [60 x i8] zeroinitializer }, align 32
@print_usage_bug._entry_ptr.218 = internal global ptr @print_usage_bug._entry.216, section ".printk_index", align 4
@print_usage_bug._entry.219 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.220, ptr @.str.206, ptr @.str, i32 3920, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\014%s/%d [HC%u[%lu]:SC%u[%lu]:HE%u:SE%u] takes:\0A\00", [48 x i8] zeroinitializer }, align 32
@print_usage_bug._entry_ptr.221 = internal global ptr @print_usage_bug._entry.219, section ".printk_index", align 4
@print_usage_bug._entry.222 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.223, ptr @.str.206, ptr @.str, i32 3923, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.223 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\014{%s} state was registered at:\0A\00", [63 x i8] zeroinitializer }, align 32
@print_usage_bug._entry_ptr.224 = internal global ptr @print_usage_bug._entry.222, section ".printk_index", align 4
@print_usage_bug._entry.225 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.226, ptr @.str.206, ptr @.str, i32 3927, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\014\0Aother info that might help us debug this:\0A\00", [50 x i8] zeroinitializer }, align 32
@print_usage_bug._entry_ptr.227 = internal global ptr @print_usage_bug._entry.225, section ".printk_index", align 4
@print_usage_bug._entry.228 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.134, ptr @.str.206, ptr @.str, i32 3932, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_usage_bug._entry_ptr.229 = internal global ptr @print_usage_bug._entry.228, section ".printk_index", align 4
@print_usage_bug_scenario._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.230, ptr @.str.231, ptr @.str, i32 3886, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c" Possible unsafe locking scenario:\0A\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"print_usage_bug_scenario\00", [39 x i8] zeroinitializer }, align 32
@print_usage_bug_scenario._entry_ptr = internal global ptr @print_usage_bug_scenario._entry, section ".printk_index", align 4
@print_usage_bug_scenario._entry.232 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.233, ptr @.str.231, ptr @.str, i32 3887, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.233 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"       CPU0\0A\00", [19 x i8] zeroinitializer }, align 32
@print_usage_bug_scenario._entry_ptr.234 = internal global ptr @print_usage_bug_scenario._entry.232, section ".printk_index", align 4
@print_usage_bug_scenario._entry.235 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.236, ptr @.str.231, ptr @.str, i32 3888, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.236 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"       ----\0A\00", [19 x i8] zeroinitializer }, align 32
@print_usage_bug_scenario._entry_ptr.237 = internal global ptr @print_usage_bug_scenario._entry.235, section ".printk_index", align 4
@print_usage_bug_scenario._entry.238 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.239, ptr @.str.231, ptr @.str, i32 3889, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.239 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"  lock(\00", [24 x i8] zeroinitializer }, align 32
@print_usage_bug_scenario._entry_ptr.240 = internal global ptr @print_usage_bug_scenario._entry.238, section ".printk_index", align 4
@print_usage_bug_scenario._entry.241 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.242, ptr @.str.231, ptr @.str, i32 3891, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.242 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"\01c);\0A\00", [26 x i8] zeroinitializer }, align 32
@print_usage_bug_scenario._entry_ptr.243 = internal global ptr @print_usage_bug_scenario._entry.241, section ".printk_index", align 4
@print_usage_bug_scenario._entry.244 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.245, ptr @.str.231, ptr @.str, i32 3892, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.245 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"  <Interrupt>\0A\00", [17 x i8] zeroinitializer }, align 32
@print_usage_bug_scenario._entry_ptr.246 = internal global ptr @print_usage_bug_scenario._entry.244, section ".printk_index", align 4
@print_usage_bug_scenario._entry.247 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.248, ptr @.str.231, ptr @.str, i32 3893, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.248 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"    lock(\00", [22 x i8] zeroinitializer }, align 32
@print_usage_bug_scenario._entry_ptr.249 = internal global ptr @print_usage_bug_scenario._entry.247, section ".printk_index", align 4
@print_usage_bug_scenario._entry.250 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.242, ptr @.str.231, ptr @.str, i32 3895, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_usage_bug_scenario._entry_ptr.251 = internal global ptr @print_usage_bug_scenario._entry.250, section ".printk_index", align 4
@print_usage_bug_scenario._entry.252 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.253, ptr @.str.231, ptr @.str, i32 3896, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.253 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"\0A *** DEADLOCK ***\0A\0A\00", [43 x i8] zeroinitializer }, align 32
@print_usage_bug_scenario._entry_ptr.254 = internal global ptr @print_usage_bug_scenario._entry.252, section ".printk_index", align 4
@find_usage_backwards.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.255 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"entry->class->wait_type_inner < LD_WAIT_CONFIG\00", [49 x i8] zeroinitializer }, align 32
@.str.256 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"lockdep bfs error:%d\0A\00", [42 x i8] zeroinitializer }, align 32
@print_irq_inversion_bug._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @.str.257, ptr @.str, i32 3968, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.257 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"print_irq_inversion_bug\00", [40 x i8] zeroinitializer }, align 32
@print_irq_inversion_bug._entry_ptr = internal global ptr @print_irq_inversion_bug._entry, section ".printk_index", align 4
@print_irq_inversion_bug._entry.258 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.259, ptr @.str.257, ptr @.str, i32 3969, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.259 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\014========================================================\0A\00", [36 x i8] zeroinitializer }, align 32
@print_irq_inversion_bug._entry_ptr.260 = internal global ptr @print_irq_inversion_bug._entry.258, section ".printk_index", align 4
@print_irq_inversion_bug._entry.261 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.262, ptr @.str.257, ptr @.str, i32 3970, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.262 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\014WARNING: possible irq lock inversion dependency detected\0A\00", [36 x i8] zeroinitializer }, align 32
@print_irq_inversion_bug._entry_ptr.263 = internal global ptr @print_irq_inversion_bug._entry.261, section ".printk_index", align 4
@print_irq_inversion_bug._entry.264 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.265, ptr @.str.257, ptr @.str, i32 3972, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.265 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\014--------------------------------------------------------\0A\00", [36 x i8] zeroinitializer }, align 32
@print_irq_inversion_bug._entry_ptr.266 = internal global ptr @print_irq_inversion_bug._entry.264, section ".printk_index", align 4
@print_irq_inversion_bug._entry.267 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.268, ptr @.str.257, ptr @.str, i32 3974, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.268 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\014%s/%d just changed the state of lock:\0A\00", [55 x i8] zeroinitializer }, align 32
@print_irq_inversion_bug._entry_ptr.269 = internal global ptr @print_irq_inversion_bug._entry.267, section ".printk_index", align 4
@print_irq_inversion_bug._entry.270 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.271, ptr @.str.257, ptr @.str, i32 3977, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.271 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\014but this lock took another, %s-unsafe lock in the past:\0A\00", [37 x i8] zeroinitializer }, align 32
@print_irq_inversion_bug._entry_ptr.272 = internal global ptr @print_irq_inversion_bug._entry.270, section ".printk_index", align 4
@print_irq_inversion_bug._entry.273 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.274, ptr @.str.257, ptr @.str, i32 3979, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.274 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\014but this lock was taken by another, %s-safe lock in the past:\0A\00", [63 x i8] zeroinitializer }, align 32
@print_irq_inversion_bug._entry_ptr.275 = internal global ptr @print_irq_inversion_bug._entry.273, section ".printk_index", align 4
@print_irq_inversion_bug._entry.276 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.277, ptr @.str.257, ptr @.str, i32 3981, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.277 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\014\0A\0Aand interrupts could create inverse lock ordering between them.\0A\0A\00", [58 x i8] zeroinitializer }, align 32
@print_irq_inversion_bug._entry_ptr.278 = internal global ptr @print_irq_inversion_bug._entry.276, section ".printk_index", align 4
@print_irq_inversion_bug._entry.279 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.226, ptr @.str.257, ptr @.str, i32 3983, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_irq_inversion_bug._entry_ptr.280 = internal global ptr @print_irq_inversion_bug._entry.279, section ".printk_index", align 4
@print_irq_inversion_bug._entry.281 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.282, ptr @.str.257, ptr @.str, i32 3989, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.282 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\014lockdep:%s bad path found in chain graph\0A\00", [52 x i8] zeroinitializer }, align 32
@print_irq_inversion_bug._entry_ptr.283 = internal global ptr @print_irq_inversion_bug._entry.281, section ".printk_index", align 4
@print_irq_inversion_bug._entry.284 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.285, ptr @.str.257, ptr @.str, i32 4005, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.285 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\014\0Athe shortest dependencies between 2nd lock and 1st lock:\0A\00", [35 x i8] zeroinitializer }, align 32
@print_irq_inversion_bug._entry_ptr.286 = internal global ptr @print_irq_inversion_bug._entry.284, section ".printk_index", align 4
@print_irq_inversion_bug._entry.287 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.134, ptr @.str.257, ptr @.str, i32 4011, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_irq_inversion_bug._entry_ptr.288 = internal global ptr @print_irq_inversion_bug._entry.287, section ".printk_index", align 4
@print_irq_lock_scenario._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.289, ptr @.str.290, ptr @.str, i32 2480, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.289 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Chain exists of:\0A  \00", [44 x i8] zeroinitializer }, align 32
@.str.290 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"print_irq_lock_scenario\00", [40 x i8] zeroinitializer }, align 32
@print_irq_lock_scenario._entry_ptr = internal global ptr @print_irq_lock_scenario._entry, section ".printk_index", align 4
@print_irq_lock_scenario._entry.291 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.292, ptr @.str.290, ptr @.str, i32 2482, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.292 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"\01c --> \00", [24 x i8] zeroinitializer }, align 32
@print_irq_lock_scenario._entry_ptr.293 = internal global ptr @print_irq_lock_scenario._entry.291, section ".printk_index", align 4
@print_irq_lock_scenario._entry.294 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.292, ptr @.str.290, ptr @.str, i32 2484, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_irq_lock_scenario._entry_ptr.295 = internal global ptr @print_irq_lock_scenario._entry.294, section ".printk_index", align 4
@print_irq_lock_scenario._entry.296 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.297, ptr @.str.290, ptr @.str, i32 2486, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.297 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"\01c\0A\0A\00", [27 x i8] zeroinitializer }, align 32
@print_irq_lock_scenario._entry_ptr.298 = internal global ptr @print_irq_lock_scenario._entry.296, section ".printk_index", align 4
@print_irq_lock_scenario._entry.299 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.300, ptr @.str.290, ptr @.str, i32 2489, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.300 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c" Possible interrupt unsafe locking scenario:\0A\0A\00", [49 x i8] zeroinitializer }, align 32
@print_irq_lock_scenario._entry_ptr.301 = internal global ptr @print_irq_lock_scenario._entry.299, section ".printk_index", align 4
@print_irq_lock_scenario._entry.302 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.303, ptr @.str.290, ptr @.str, i32 2490, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.303 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"       CPU0                    CPU1\0A\00", [59 x i8] zeroinitializer }, align 32
@print_irq_lock_scenario._entry_ptr.304 = internal global ptr @print_irq_lock_scenario._entry.302, section ".printk_index", align 4
@print_irq_lock_scenario._entry.305 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.306, ptr @.str.290, ptr @.str, i32 2491, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.306 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"       ----                    ----\0A\00", [59 x i8] zeroinitializer }, align 32
@print_irq_lock_scenario._entry_ptr.307 = internal global ptr @print_irq_lock_scenario._entry.305, section ".printk_index", align 4
@print_irq_lock_scenario._entry.308 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.239, ptr @.str.290, ptr @.str, i32 2492, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_irq_lock_scenario._entry_ptr.309 = internal global ptr @print_irq_lock_scenario._entry.308, section ".printk_index", align 4
@print_irq_lock_scenario._entry.310 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.242, ptr @.str.290, ptr @.str, i32 2494, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_irq_lock_scenario._entry_ptr.311 = internal global ptr @print_irq_lock_scenario._entry.310, section ".printk_index", align 4
@print_irq_lock_scenario._entry.312 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.313, ptr @.str.290, ptr @.str, i32 2495, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.313 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"                               local_irq_disable();\0A\00", [43 x i8] zeroinitializer }, align 32
@print_irq_lock_scenario._entry_ptr.314 = internal global ptr @print_irq_lock_scenario._entry.312, section ".printk_index", align 4
@print_irq_lock_scenario._entry.315 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.316, ptr @.str.290, ptr @.str, i32 2496, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.316 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"                               lock(\00", [59 x i8] zeroinitializer }, align 32
@print_irq_lock_scenario._entry_ptr.317 = internal global ptr @print_irq_lock_scenario._entry.315, section ".printk_index", align 4
@print_irq_lock_scenario._entry.318 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.242, ptr @.str.290, ptr @.str, i32 2498, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_irq_lock_scenario._entry_ptr.319 = internal global ptr @print_irq_lock_scenario._entry.318, section ".printk_index", align 4
@print_irq_lock_scenario._entry.320 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.316, ptr @.str.290, ptr @.str, i32 2499, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_irq_lock_scenario._entry_ptr.321 = internal global ptr @print_irq_lock_scenario._entry.320, section ".printk_index", align 4
@print_irq_lock_scenario._entry.322 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.242, ptr @.str.290, ptr @.str, i32 2501, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_irq_lock_scenario._entry_ptr.323 = internal global ptr @print_irq_lock_scenario._entry.322, section ".printk_index", align 4
@print_irq_lock_scenario._entry.324 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.245, ptr @.str.290, ptr @.str, i32 2502, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_irq_lock_scenario._entry_ptr.325 = internal global ptr @print_irq_lock_scenario._entry.324, section ".printk_index", align 4
@print_irq_lock_scenario._entry.326 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.248, ptr @.str.290, ptr @.str, i32 2503, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_irq_lock_scenario._entry_ptr.327 = internal global ptr @print_irq_lock_scenario._entry.326, section ".printk_index", align 4
@print_irq_lock_scenario._entry.328 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.242, ptr @.str.290, ptr @.str, i32 2505, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_irq_lock_scenario._entry_ptr.329 = internal global ptr @print_irq_lock_scenario._entry.328, section ".printk_index", align 4
@print_irq_lock_scenario._entry.330 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.253, ptr @.str.290, ptr @.str, i32 2506, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_irq_lock_scenario._entry_ptr.331 = internal global ptr @print_irq_lock_scenario._entry.330, section ".printk_index", align 4
@state_rnames = internal constant { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.332, ptr @.str.333], [24 x i8] zeroinitializer }, align 32
@state_names = internal constant { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.334, ptr @.str.335], [24 x i8] zeroinitializer }, align 32
@.str.332 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"HARDIRQ-READ\00", [19 x i8] zeroinitializer }, align 32
@.str.333 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"SOFTIRQ-READ\00", [19 x i8] zeroinitializer }, align 32
@.str.334 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"HARDIRQ\00", [24 x i8] zeroinitializer }, align 32
@.str.335 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"SOFTIRQ\00", [24 x i8] zeroinitializer }, align 32
@find_usage_forwards.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@state_verbose_f = internal constant { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @HARDIRQ_verbose, ptr @SOFTIRQ_verbose], [24 x i8] zeroinitializer }, align 32
@print_lock._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.336, ptr @.str.337, ptr @.str, i32 741, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.336 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"\01c<RELEASED>\0A\00", [18 x i8] zeroinitializer }, align 32
@.str.337 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"print_lock\00", [21 x i8] zeroinitializer }, align 32
@print_lock._entry_ptr = internal global ptr @print_lock._entry, section ".printk_index", align 4
@print_lock._entry.338 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.339, ptr @.str.337, ptr @.str, i32 745, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.339 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"\01c%px\00", [26 x i8] zeroinitializer }, align 32
@print_lock._entry_ptr.340 = internal global ptr @print_lock._entry.338, section ".printk_index", align 4
@print_lock._entry.341 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.342, ptr @.str.337, ptr @.str, i32 747, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.342 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"\01c, at: %pS\0A\00", [19 x i8] zeroinitializer }, align 32
@print_lock._entry_ptr.343 = internal global ptr @print_lock._entry.341, section ".printk_index", align 4
@is_dynamic_key.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@is_dynamic_key.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@classhash_table = internal global { [4096 x %struct.hlist_head], [4096 x i8] } zeroinitializer, align 32
@register_lock_class.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@free_lock_classes = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @free_lock_classes, ptr @free_lock_classes }, [24 x i8] zeroinitializer }, align 32
@.str.344 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"BUG: MAX_LOCKDEP_KEYS too low!\00", [33 x i8] zeroinitializer }, align 32
@register_lock_class.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@register_lock_class.__already_done.345 = internal unnamed_addr global i1 false, section ".data.once", align 1
@register_lock_class.__already_done.346 = internal unnamed_addr global i1 false, section ".data.once", align 1
@register_lock_class._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.347, ptr @.str.348, ptr @.str, i32 1324, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.347 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"\0Anew class %px: %s\00", [45 x i8] zeroinitializer }, align 32
@.str.348 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"register_lock_class\00", [44 x i8] zeroinitializer }, align 32
@register_lock_class._entry_ptr = internal global ptr @register_lock_class._entry, section ".printk_index", align 4
@register_lock_class._entry.349 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.178, ptr @.str.348, ptr @.str, i32 1326, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@register_lock_class._entry_ptr.350 = internal global ptr @register_lock_class._entry.349, section ".printk_index", align 4
@register_lock_class._entry.351 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.352, ptr @.str.348, ptr @.str, i32 1327, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.352 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"\01c\0A\00", [28 x i8] zeroinitializer }, align 32
@register_lock_class._entry_ptr.353 = internal global ptr @register_lock_class._entry.351, section ".printk_index", align 4
@.str.354 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"class->subclass != subclass\00", [36 x i8] zeroinitializer }, align 32
@look_up_lock_class._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.355, ptr @.str.356, ptr @.str, i32 869, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.355 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\013BUG: looking up invalid subclass: %u\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.356 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"look_up_lock_class\00", [45 x i8] zeroinitializer }, align 32
@look_up_lock_class._entry_ptr = internal global ptr @look_up_lock_class._entry, section ".printk_index", align 4
@look_up_lock_class._entry.357 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.358, ptr @.str.356, ptr @.str, i32 871, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.358 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\013turning off the locking correctness validator.\0A\00", [46 x i8] zeroinitializer }, align 32
@look_up_lock_class._entry_ptr.359 = internal global ptr @look_up_lock_class._entry.357, section ".printk_index", align 4
@look_up_lock_class.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@assign_lock_key._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.361, ptr @.str.362, ptr @.str, i32 947, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.361 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\013INFO: trying to register non-static key.\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.362 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"assign_lock_key\00", [16 x i8] zeroinitializer }, align 32
@assign_lock_key._entry_ptr = internal global ptr @assign_lock_key._entry, section ".printk_index", align 4
@assign_lock_key._entry.363 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.364, ptr @.str.362, ptr @.str, i32 948, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.364 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013The code is fine but needs lockdep annotation, or maybe\0A\00", [37 x i8] zeroinitializer }, align 32
@assign_lock_key._entry_ptr.365 = internal global ptr @assign_lock_key._entry.363, section ".printk_index", align 4
@assign_lock_key._entry.366 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.367, ptr @.str.362, ptr @.str, i32 949, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.367 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\013you didn't initialize this object before use?\0A\00", [47 x i8] zeroinitializer }, align 32
@assign_lock_key._entry_ptr.368 = internal global ptr @assign_lock_key._entry.366, section ".printk_index", align 4
@assign_lock_key._entry.369 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.358, ptr @.str.362, ptr @.str, i32 950, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@assign_lock_key._entry_ptr.370 = internal global ptr @assign_lock_key._entry.369, section ".printk_index", align 4
@.str.371 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"lockdep_hardirqs_enabled()\00", [37 x i8] zeroinitializer }, align 32
@check_flags._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.372, ptr @.str.373, ptr @.str, i32 5480, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.372 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"possible reason: unannotated irqs-off.\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.373 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"check_flags\00", [20 x i8] zeroinitializer }, align 32
@check_flags._entry_ptr = internal global ptr @check_flags._entry, section ".printk_index", align 4
@.str.374 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"!lockdep_hardirqs_enabled()\00", [36 x i8] zeroinitializer }, align 32
@check_flags._entry.375 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.376, ptr @.str.373, ptr @.str, i32 5484, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.376 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"possible reason: unannotated irqs-on.\0A\00", [57 x i8] zeroinitializer }, align 32
@check_flags._entry_ptr.377 = internal global ptr @check_flags._entry.375, section ".printk_index", align 4
@.str.378 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"current->softirqs_enabled\00", [38 x i8] zeroinitializer }, align 32
@.str.379 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"!current->softirqs_enabled\00", [37 x i8] zeroinitializer }, align 32
@.str.380 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"!depth\00", [25 x i8] zeroinitializer }, align 32
@.str.381 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"curr->lockdep_depth != depth - merged\00", [58 x i8] zeroinitializer }, align 32
@.str.382 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"!hlock->nest_lock\00", [46 x i8] zeroinitializer }, align 32
@print_unlock_imbalance_bug._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @.str.383, ptr @.str, i32 5065, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.383 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"print_unlock_imbalance_bug\00", [37 x i8] zeroinitializer }, align 32
@print_unlock_imbalance_bug._entry_ptr = internal global ptr @print_unlock_imbalance_bug._entry, section ".printk_index", align 4
@print_unlock_imbalance_bug._entry.384 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.385, ptr @.str.383, ptr @.str, i32 5066, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.385 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\014=====================================\0A\00", [55 x i8] zeroinitializer }, align 32
@print_unlock_imbalance_bug._entry_ptr.386 = internal global ptr @print_unlock_imbalance_bug._entry.384, section ".printk_index", align 4
@print_unlock_imbalance_bug._entry.387 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.388, ptr @.str.383, ptr @.str, i32 5067, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.388 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\014WARNING: bad unlock balance detected!\0A\00", [55 x i8] zeroinitializer }, align 32
@print_unlock_imbalance_bug._entry_ptr.389 = internal global ptr @print_unlock_imbalance_bug._entry.387, section ".printk_index", align 4
@print_unlock_imbalance_bug._entry.390 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.391, ptr @.str.383, ptr @.str, i32 5069, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.391 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\014-------------------------------------\0A\00", [55 x i8] zeroinitializer }, align 32
@print_unlock_imbalance_bug._entry_ptr.392 = internal global ptr @print_unlock_imbalance_bug._entry.390, section ".printk_index", align 4
@print_unlock_imbalance_bug._entry.393 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.394, ptr @.str.383, ptr @.str, i32 5071, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.394 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\014%s/%d is trying to release lock (\00", [60 x i8] zeroinitializer }, align 32
@print_unlock_imbalance_bug._entry_ptr.395 = internal global ptr @print_unlock_imbalance_bug._entry.393, section ".printk_index", align 4
@print_unlock_imbalance_bug._entry.396 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.397, ptr @.str.383, ptr @.str, i32 5073, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.397 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"\01c) at:\0A\00", [23 x i8] zeroinitializer }, align 32
@print_unlock_imbalance_bug._entry_ptr.398 = internal global ptr @print_unlock_imbalance_bug._entry.396, section ".printk_index", align 4
@.str.399 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@print_unlock_imbalance_bug._entry.400 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.401, ptr @.str.383, ptr @.str, i32 5075, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.401 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\014but there are no more locks to release!\0A\00", [53 x i8] zeroinitializer }, align 32
@print_unlock_imbalance_bug._entry_ptr.402 = internal global ptr @print_unlock_imbalance_bug._entry.400, section ".printk_index", align 4
@print_unlock_imbalance_bug._entry.403 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.226, ptr @.str.383, ptr @.str, i32 5076, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_unlock_imbalance_bug._entry_ptr.404 = internal global ptr @print_unlock_imbalance_bug._entry.403, section ".printk_index", align 4
@print_unlock_imbalance_bug._entry.405 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.134, ptr @.str.383, ptr @.str, i32 5079, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_unlock_imbalance_bug._entry_ptr.406 = internal global ptr @print_unlock_imbalance_bug._entry.405, section ".printk_index", align 4
@print_lockdep_cache._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.173, ptr @.str.407, ptr @.str, i32 723, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.407 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"print_lockdep_cache\00", [44 x i8] zeroinitializer }, align 32
@print_lockdep_cache._entry_ptr = internal global ptr @print_lockdep_cache._entry, section ".printk_index", align 4
@print_ip_sym._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.408, ptr @.str.409, ptr @.str.410, i32 170, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.408 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"%s[<%px>] %pS\0A\00", [17 x i8] zeroinitializer }, align 32
@.str.409 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"print_ip_sym\00", [19 x i8] zeroinitializer }, align 32
@.str.410 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/kallsyms.h\00", [39 x i8] zeroinitializer }, align 32
@print_ip_sym._entry_ptr = internal global ptr @print_ip_sym._entry, section ".printk_index", align 4
@.str.411 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"hm#1, depth: %u [%u], %016Lx != %016Lx\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.412 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"!test_bit(hlock->class_idx, lock_classes_in_use)\00", [47 x i8] zeroinitializer }, align 32
@.str.413 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"hm#2, depth: %u [%u], %016Lx != %016Lx\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.414 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"downgrading a read lock\00", [40 x i8] zeroinitializer }, align 32
@.str.415 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"merged\00", [25 x i8] zeroinitializer }, align 32
@.str.416 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"curr->lockdep_depth != depth\00", [35 x i8] zeroinitializer }, align 32
@.str.417 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/trace/events/lock.h\00", [36 x i8] zeroinitializer }, align 32
@trace_lock_acquire.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.418 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.419 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@__lock_acquire._entry = internal constant %struct.pi_entry { ptr @.str.420, ptr @.str.421, ptr @.str, i32 4914, ptr null, ptr null }, align 1
@.str.420 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"\0Aacquire class [%px] %s\00", [40 x i8] zeroinitializer }, align 32
@.str.421 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"__lock_acquire\00", [17 x i8] zeroinitializer }, align 32
@__lock_acquire._entry_ptr = internal global ptr @__lock_acquire._entry, section ".printk_index", align 4
@__lock_acquire._entry.422 = internal constant %struct.pi_entry { ptr @.str.178, ptr @.str.421, ptr @.str, i32 4916, ptr null, ptr null }, align 1
@__lock_acquire._entry_ptr.423 = internal global ptr @__lock_acquire._entry.422, section ".printk_index", align 4
@__lock_acquire._entry.424 = internal constant %struct.pi_entry { ptr @.str.352, ptr @.str.421, ptr @.str, i32 4917, ptr null, ptr null }, align 1
@__lock_acquire._entry_ptr.425 = internal global ptr @__lock_acquire._entry.424, section ".printk_index", align 4
@.str.426 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"depth >= MAX_LOCK_DEPTH\00", [40 x i8] zeroinitializer }, align 32
@.str.427 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"hlock->references < references\00", [33 x i8] zeroinitializer }, align 32
@.str.429 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"!test_bit(class_idx, lock_classes_in_use)\00", [54 x i8] zeroinitializer }, align 32
@.str.430 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"chain_key != INITIAL_CHAIN_KEY\00", [33 x i8] zeroinitializer }, align 32
@__lock_acquire.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__lock_acquire.__already_done.431 = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.432 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"BUG: MAX_LOCK_DEPTH too low!\00", [35 x i8] zeroinitializer }, align 32
@__lock_acquire._entry.433 = internal constant %struct.pi_entry { ptr @.str.434, ptr @.str.421, ptr @.str, i32 5041, ptr null, ptr null }, align 1
@.str.434 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"\017depth: %i  max: %lu!\0A\00", [40 x i8] zeroinitializer }, align 32
@__lock_acquire._entry_ptr.435 = internal global ptr @__lock_acquire._entry.433, section ".printk_index", align 4
@print_lock_invalid_wait_context._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @.str.436, ptr @.str, i32 4661, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.436 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"print_lock_invalid_wait_context\00", [32 x i8] zeroinitializer }, align 32
@print_lock_invalid_wait_context._entry_ptr = internal global ptr @print_lock_invalid_wait_context._entry, section ".printk_index", align 4
@print_lock_invalid_wait_context._entry.437 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.111, ptr @.str.436, ptr @.str, i32 4662, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_lock_invalid_wait_context._entry_ptr.438 = internal global ptr @print_lock_invalid_wait_context._entry.437, section ".printk_index", align 4
@print_lock_invalid_wait_context._entry.439 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.440, ptr @.str.436, ptr @.str, i32 4663, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.440 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\014[ BUG: Invalid wait context ]\0A\00", [63 x i8] zeroinitializer }, align 32
@print_lock_invalid_wait_context._entry_ptr.441 = internal global ptr @print_lock_invalid_wait_context._entry.439, section ".printk_index", align 4
@print_lock_invalid_wait_context._entry.442 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.117, ptr @.str.436, ptr @.str, i32 4665, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_lock_invalid_wait_context._entry_ptr.443 = internal global ptr @print_lock_invalid_wait_context._entry.442, section ".printk_index", align 4
@print_lock_invalid_wait_context._entry.444 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.445, ptr @.str.436, ptr @.str, i32 4667, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.445 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"\014%s/%d is trying to lock:\0A\00", [36 x i8] zeroinitializer }, align 32
@print_lock_invalid_wait_context._entry_ptr.446 = internal global ptr @print_lock_invalid_wait_context._entry.444, section ".printk_index", align 4
@print_lock_invalid_wait_context._entry.447 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.448, ptr @.str.436, ptr @.str, i32 4670, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.448 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\014other info that might help us debug this:\0A\00", [51 x i8] zeroinitializer }, align 32
@print_lock_invalid_wait_context._entry_ptr.449 = internal global ptr @print_lock_invalid_wait_context._entry.447, section ".printk_index", align 4
@print_lock_invalid_wait_context._entry.450 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.451, ptr @.str.436, ptr @.str, i32 4673, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.451 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"\014context-{%d:%d}\0A\00", [45 x i8] zeroinitializer }, align 32
@print_lock_invalid_wait_context._entry_ptr.452 = internal global ptr @print_lock_invalid_wait_context._entry.450, section ".printk_index", align 4
@print_lock_invalid_wait_context._entry.453 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.454, ptr @.str.436, ptr @.str, i32 4677, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.454 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"\014stack backtrace:\0A\00", [44 x i8] zeroinitializer }, align 32
@print_lock_invalid_wait_context._entry_ptr.455 = internal global ptr @print_lock_invalid_wait_context._entry.453, section ".printk_index", align 4
@print_lock_nested_lock_not_held._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @.str.456, ptr @.str, i32 4849, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.456 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"print_lock_nested_lock_not_held\00", [32 x i8] zeroinitializer }, align 32
@print_lock_nested_lock_not_held._entry_ptr = internal global ptr @print_lock_nested_lock_not_held._entry, section ".printk_index", align 4
@print_lock_nested_lock_not_held._entry.457 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.458, ptr @.str.456, ptr @.str, i32 4850, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.458 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\014==================================\0A\00", [58 x i8] zeroinitializer }, align 32
@print_lock_nested_lock_not_held._entry_ptr.459 = internal global ptr @print_lock_nested_lock_not_held._entry.457, section ".printk_index", align 4
@print_lock_nested_lock_not_held._entry.460 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.461, ptr @.str.456, ptr @.str, i32 4851, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.461 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\014WARNING: Nested lock was not taken\0A\00", [58 x i8] zeroinitializer }, align 32
@print_lock_nested_lock_not_held._entry_ptr.462 = internal global ptr @print_lock_nested_lock_not_held._entry.460, section ".printk_index", align 4
@print_lock_nested_lock_not_held._entry.463 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.464, ptr @.str.456, ptr @.str, i32 4853, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.464 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\014----------------------------------\0A\00", [58 x i8] zeroinitializer }, align 32
@print_lock_nested_lock_not_held._entry_ptr.465 = internal global ptr @print_lock_nested_lock_not_held._entry.463, section ".printk_index", align 4
@print_lock_nested_lock_not_held._entry.466 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.445, ptr @.str.456, ptr @.str, i32 4855, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_lock_nested_lock_not_held._entry_ptr.467 = internal global ptr @print_lock_nested_lock_not_held._entry.466, section ".printk_index", align 4
@print_lock_nested_lock_not_held._entry.468 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.469, ptr @.str.456, ptr @.str, i32 4858, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.469 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\014\0Abut this task is not holding:\0A\00", [62 x i8] zeroinitializer }, align 32
@print_lock_nested_lock_not_held._entry_ptr.470 = internal global ptr @print_lock_nested_lock_not_held._entry.468, section ".printk_index", align 4
@print_lock_nested_lock_not_held._entry.471 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.472, ptr @.str.456, ptr @.str, i32 4859, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.472 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"\014%s\0A\00", [26 x i8] zeroinitializer }, align 32
@print_lock_nested_lock_not_held._entry_ptr.473 = internal global ptr @print_lock_nested_lock_not_held._entry.471, section ".printk_index", align 4
@print_lock_nested_lock_not_held._entry.474 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.134, ptr @.str.456, ptr @.str, i32 4861, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_lock_nested_lock_not_held._entry_ptr.475 = internal global ptr @print_lock_nested_lock_not_held._entry.474, section ".printk_index", align 4
@print_lock_nested_lock_not_held._entry.476 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.226, ptr @.str.456, ptr @.str, i32 4864, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_lock_nested_lock_not_held._entry_ptr.477 = internal global ptr @print_lock_nested_lock_not_held._entry.476, section ".printk_index", align 4
@print_lock_nested_lock_not_held._entry.478 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.134, ptr @.str.456, ptr @.str, i32 4867, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_lock_nested_lock_not_held._entry_ptr.479 = internal global ptr @print_lock_nested_lock_not_held._entry.478, section ".printk_index", align 4
@lookup_chain_cache_add._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.480, ptr @.str.481, ptr @.str, i32 3725, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.480 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"\0Ahash chain already cached, key: %016Lx tail class: [%px] %s\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.481 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"lookup_chain_cache_add\00", [41 x i8] zeroinitializer }, align 32
@lookup_chain_cache_add._entry_ptr = internal global ptr @lookup_chain_cache_add._entry, section ".printk_index", align 4
@lookup_chain_cache_add._entry.482 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.483, ptr @.str.481, ptr @.str, i32 3733, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.483 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\0Anew hash chain, key: %016Lx tail class: [%px] %s\0A\00", [45 x i8] zeroinitializer }, align 32
@lookup_chain_cache_add._entry_ptr.484 = internal global ptr @lookup_chain_cache_add._entry.482, section ".printk_index", align 4
@lookup_chain_cache.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@lookup_chain_cache.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.485 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"chain->depth != curr->lockdep_depth - (i - 1)\00", [50 x i8] zeroinitializer }, align 32
@.str.486 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"chain_hlocks[chain->base + j] != id\00", [60 x i8] zeroinitializer }, align 32
@print_collision._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @.str.487, ptr @.str, i32 3542, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.487 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"print_collision\00", [16 x i8] zeroinitializer }, align 32
@print_collision._entry_ptr = internal global ptr @print_collision._entry, section ".printk_index", align 4
@print_collision._entry.488 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.489, ptr @.str.487, ptr @.str, i32 3543, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.489 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\014============================\0A\00", [32 x i8] zeroinitializer }, align 32
@print_collision._entry_ptr.490 = internal global ptr @print_collision._entry.488, section ".printk_index", align 4
@print_collision._entry.491 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.492, ptr @.str.487, ptr @.str, i32 3544, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.492 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\014WARNING: chain_key collision\0A\00", [32 x i8] zeroinitializer }, align 32
@print_collision._entry_ptr.493 = internal global ptr @print_collision._entry.491, section ".printk_index", align 4
@print_collision._entry.494 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.495, ptr @.str.487, ptr @.str, i32 3546, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.495 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\014----------------------------\0A\00", [32 x i8] zeroinitializer }, align 32
@print_collision._entry_ptr.496 = internal global ptr @print_collision._entry.494, section ".printk_index", align 4
@print_collision._entry.497 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.498, ptr @.str.487, ptr @.str, i32 3547, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.498 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"\014%s/%d: \00", [22 x i8] zeroinitializer }, align 32
@print_collision._entry_ptr.499 = internal global ptr @print_collision._entry.497, section ".printk_index", align 4
@print_collision._entry.500 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.501, ptr @.str.487, ptr @.str, i32 3548, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.501 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\014Hash chain already cached but the contents don't match!\0A\00", [37 x i8] zeroinitializer }, align 32
@print_collision._entry_ptr.502 = internal global ptr @print_collision._entry.500, section ".printk_index", align 4
@print_collision._entry.503 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.504, ptr @.str.487, ptr @.str, i32 3550, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.504 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"\014Held locks:\00", [18 x i8] zeroinitializer }, align 32
@print_collision._entry_ptr.505 = internal global ptr @print_collision._entry.503, section ".printk_index", align 4
@print_collision._entry.506 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.507, ptr @.str.487, ptr @.str, i32 3553, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.507 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"\014Locks in cached chain:\00", [39 x i8] zeroinitializer }, align 32
@print_collision._entry_ptr.508 = internal global ptr @print_collision._entry.506, section ".printk_index", align 4
@print_collision._entry.509 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.134, ptr @.str.487, ptr @.str, i32 3556, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_collision._entry_ptr.510 = internal global ptr @print_collision._entry.509, section ".printk_index", align 4
@print_chain_keys_held_locks._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.511, ptr @.str.512, ptr @.str, i32 3510, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.511 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"depth: %u (irq_context %u)\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.512 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"print_chain_keys_held_locks\00", [36 x i8] zeroinitializer }, align 32
@print_chain_keys_held_locks._entry_ptr = internal global ptr @print_chain_keys_held_locks._entry, section ".printk_index", align 4
@print_chain_key_iteration._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.513, ptr @.str.514, ptr @.str, i32 3497, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.513 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c" hlock_id:%d -> chain_key:%016Lx\00", [63 x i8] zeroinitializer }, align 32
@.str.514 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"print_chain_key_iteration\00", [38 x i8] zeroinitializer }, align 32
@print_chain_key_iteration._entry_ptr = internal global ptr @print_chain_key_iteration._entry, section ".printk_index", align 4
@print_chain_keys_chain._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.515, ptr @.str.516, ptr @.str, i32 3528, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.515 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"depth: %u\0A\00", [21 x i8] zeroinitializer }, align 32
@.str.516 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"print_chain_keys_chain\00", [41 x i8] zeroinitializer }, align 32
@print_chain_keys_chain._entry_ptr = internal global ptr @print_chain_keys_chain._entry, section ".printk_index", align 4
@print_chain_keys_chain._entry.517 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.7, ptr @.str.516, ptr @.str, i32 3534, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_chain_keys_chain._entry_ptr.518 = internal global ptr @print_chain_keys_chain._entry.517, section ".printk_index", align 4
@.str.519 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"BUG: MAX_LOCKDEP_CHAINS too low!\00", [63 x i8] zeroinitializer }, align 32
@.str.520 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"BUG: MAX_LOCKDEP_CHAIN_HLOCKS too low!\00", [57 x i8] zeroinitializer }, align 32
@add_chain_cache.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@chain_block_buckets = internal global { [16 x i32], [32 x i8] } zeroinitializer, align 32
@chain_block_next.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@print_deadlock_bug._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @.str.521, ptr @.str, i32 2940, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.521 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"print_deadlock_bug\00", [45 x i8] zeroinitializer }, align 32
@print_deadlock_bug._entry_ptr = internal global ptr @print_deadlock_bug._entry, section ".printk_index", align 4
@print_deadlock_bug._entry.522 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.523, ptr @.str.521, ptr @.str, i32 2941, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.523 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\014============================================\0A\00", [48 x i8] zeroinitializer }, align 32
@print_deadlock_bug._entry_ptr.524 = internal global ptr @print_deadlock_bug._entry.522, section ".printk_index", align 4
@print_deadlock_bug._entry.525 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.526, ptr @.str.521, ptr @.str, i32 2942, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.526 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\014WARNING: possible recursive locking detected\0A\00", [48 x i8] zeroinitializer }, align 32
@print_deadlock_bug._entry_ptr.527 = internal global ptr @print_deadlock_bug._entry.525, section ".printk_index", align 4
@print_deadlock_bug._entry.528 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.529, ptr @.str.521, ptr @.str, i32 2944, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.529 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\014--------------------------------------------\0A\00", [48 x i8] zeroinitializer }, align 32
@print_deadlock_bug._entry_ptr.530 = internal global ptr @print_deadlock_bug._entry.528, section ".printk_index", align 4
@print_deadlock_bug._entry.531 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.532, ptr @.str.521, ptr @.str, i32 2946, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.532 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\014%s/%d is trying to acquire lock:\0A\00", [60 x i8] zeroinitializer }, align 32
@print_deadlock_bug._entry_ptr.533 = internal global ptr @print_deadlock_bug._entry.531, section ".printk_index", align 4
@print_deadlock_bug._entry.534 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.535, ptr @.str.521, ptr @.str, i32 2948, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.535 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\014\0Abut task is already holding lock:\0A\00", [58 x i8] zeroinitializer }, align 32
@print_deadlock_bug._entry_ptr.536 = internal global ptr @print_deadlock_bug._entry.534, section ".printk_index", align 4
@print_deadlock_bug._entry.537 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.226, ptr @.str.521, ptr @.str, i32 2951, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_deadlock_bug._entry_ptr.538 = internal global ptr @print_deadlock_bug._entry.537, section ".printk_index", align 4
@print_deadlock_bug._entry.539 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.134, ptr @.str.521, ptr @.str, i32 2955, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_deadlock_bug._entry_ptr.540 = internal global ptr @print_deadlock_bug._entry.539, section ".printk_index", align 4
@print_deadlock_scenario._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.230, ptr @.str.541, ptr @.str, i32 2920, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.541 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"print_deadlock_scenario\00", [40 x i8] zeroinitializer }, align 32
@print_deadlock_scenario._entry_ptr = internal global ptr @print_deadlock_scenario._entry, section ".printk_index", align 4
@print_deadlock_scenario._entry.542 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.233, ptr @.str.541, ptr @.str, i32 2921, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_deadlock_scenario._entry_ptr.543 = internal global ptr @print_deadlock_scenario._entry.542, section ".printk_index", align 4
@print_deadlock_scenario._entry.544 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.236, ptr @.str.541, ptr @.str, i32 2922, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_deadlock_scenario._entry_ptr.545 = internal global ptr @print_deadlock_scenario._entry.544, section ".printk_index", align 4
@print_deadlock_scenario._entry.546 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.239, ptr @.str.541, ptr @.str, i32 2923, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_deadlock_scenario._entry_ptr.547 = internal global ptr @print_deadlock_scenario._entry.546, section ".printk_index", align 4
@print_deadlock_scenario._entry.548 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.242, ptr @.str.541, ptr @.str, i32 2925, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_deadlock_scenario._entry_ptr.549 = internal global ptr @print_deadlock_scenario._entry.548, section ".printk_index", align 4
@print_deadlock_scenario._entry.550 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.239, ptr @.str.541, ptr @.str, i32 2926, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_deadlock_scenario._entry_ptr.551 = internal global ptr @print_deadlock_scenario._entry.550, section ".printk_index", align 4
@print_deadlock_scenario._entry.552 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.242, ptr @.str.541, ptr @.str, i32 2928, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_deadlock_scenario._entry_ptr.553 = internal global ptr @print_deadlock_scenario._entry.552, section ".printk_index", align 4
@print_deadlock_scenario._entry.554 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.253, ptr @.str.541, ptr @.str, i32 2929, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_deadlock_scenario._entry_ptr.555 = internal global ptr @print_deadlock_scenario._entry.554, section ".printk_index", align 4
@print_deadlock_scenario._entry.556 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.557, ptr @.str.541, ptr @.str, i32 2930, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.557 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c" May be due to missing lock nesting notation\0A\0A\00", [49 x i8] zeroinitializer }, align 32
@print_deadlock_scenario._entry_ptr.558 = internal global ptr @print_deadlock_scenario._entry.556, section ".printk_index", align 4
@check_prev_add.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.559 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"Detected use-after-free of lock class %px/%s\0A\00", [50 x i8] zeroinitializer }, align 32
@check_prev_add.__already_done.560 = internal unnamed_addr global i1 false, section ".data.once", align 1
@check_noncircular.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@print_circular_bug._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.561, ptr @.str.562, ptr @.str, i32 2014, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.561 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\0Aother info that might help us debug this:\0A\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.562 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"print_circular_bug\00", [45 x i8] zeroinitializer }, align 32
@print_circular_bug._entry_ptr = internal global ptr @print_circular_bug._entry, section ".printk_index", align 4
@print_circular_bug._entry.563 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.564, ptr @.str.562, ptr @.str, i32 2020, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.564 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"\0Astack backtrace:\0A\00", [45 x i8] zeroinitializer }, align 32
@print_circular_bug._entry_ptr.565 = internal global ptr @print_circular_bug._entry.563, section ".printk_index", align 4
@print_circular_bug_header._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @.str.566, ptr @.str, i32 1905, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.566 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"print_circular_bug_header\00", [38 x i8] zeroinitializer }, align 32
@print_circular_bug_header._entry_ptr = internal global ptr @print_circular_bug_header._entry, section ".printk_index", align 4
@print_circular_bug_header._entry.567 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.568, ptr @.str.566, ptr @.str, i32 1906, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.568 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\014======================================================\0A\00", [38 x i8] zeroinitializer }, align 32
@print_circular_bug_header._entry_ptr.569 = internal global ptr @print_circular_bug_header._entry.567, section ".printk_index", align 4
@print_circular_bug_header._entry.570 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.571, ptr @.str.566, ptr @.str, i32 1907, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.571 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\014WARNING: possible circular locking dependency detected\0A\00", [38 x i8] zeroinitializer }, align 32
@print_circular_bug_header._entry_ptr.572 = internal global ptr @print_circular_bug_header._entry.570, section ".printk_index", align 4
@print_circular_bug_header._entry.573 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.574, ptr @.str.566, ptr @.str, i32 1909, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.574 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\014------------------------------------------------------\0A\00", [38 x i8] zeroinitializer }, align 32
@print_circular_bug_header._entry_ptr.575 = internal global ptr @print_circular_bug_header._entry.573, section ".printk_index", align 4
@print_circular_bug_header._entry.576 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.532, ptr @.str.566, ptr @.str, i32 1911, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_circular_bug_header._entry_ptr.577 = internal global ptr @print_circular_bug_header._entry.576, section ".printk_index", align 4
@print_circular_bug_header._entry.578 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.535, ptr @.str.566, ptr @.str, i32 1914, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_circular_bug_header._entry_ptr.579 = internal global ptr @print_circular_bug_header._entry.578, section ".printk_index", align 4
@print_circular_bug_header._entry.580 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.581, ptr @.str.566, ptr @.str, i32 1917, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.581 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\014\0Awhich lock already depends on the new lock.\0A\0A\00", [47 x i8] zeroinitializer }, align 32
@print_circular_bug_header._entry_ptr.582 = internal global ptr @print_circular_bug_header._entry.580, section ".printk_index", align 4
@print_circular_bug_header._entry.583 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.584, ptr @.str.566, ptr @.str, i32 1918, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.584 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\014\0Athe existing dependency chain (in reverse order) is:\0A\00", [39 x i8] zeroinitializer }, align 32
@print_circular_bug_header._entry_ptr.585 = internal global ptr @print_circular_bug_header._entry.583, section ".printk_index", align 4
@print_circular_bug_entry._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.586, ptr @.str.587, ptr @.str, i32 1835, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.586 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"\0A-> #%u\00", [24 x i8] zeroinitializer }, align 32
@.str.587 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"print_circular_bug_entry\00", [39 x i8] zeroinitializer }, align 32
@print_circular_bug_entry._entry_ptr = internal global ptr @print_circular_bug_entry._entry, section ".printk_index", align 4
@print_circular_bug_entry._entry.588 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.589, ptr @.str.587, ptr @.str, i32 1837, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.589 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"\01c:\0A\00", [27 x i8] zeroinitializer }, align 32
@print_circular_bug_entry._entry_ptr.590 = internal global ptr @print_circular_bug_entry._entry.588, section ".printk_index", align 4
@print_circular_lock_scenario._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.289, ptr @.str.591, ptr @.str, i32 1864, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.591 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"print_circular_lock_scenario\00", [35 x i8] zeroinitializer }, align 32
@print_circular_lock_scenario._entry_ptr = internal global ptr @print_circular_lock_scenario._entry, section ".printk_index", align 4
@print_circular_lock_scenario._entry.592 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.292, ptr @.str.591, ptr @.str, i32 1866, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_circular_lock_scenario._entry_ptr.593 = internal global ptr @print_circular_lock_scenario._entry.592, section ".printk_index", align 4
@print_circular_lock_scenario._entry.594 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.292, ptr @.str.591, ptr @.str, i32 1868, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_circular_lock_scenario._entry_ptr.595 = internal global ptr @print_circular_lock_scenario._entry.594, section ".printk_index", align 4
@print_circular_lock_scenario._entry.596 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.297, ptr @.str.591, ptr @.str, i32 1870, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_circular_lock_scenario._entry_ptr.597 = internal global ptr @print_circular_lock_scenario._entry.596, section ".printk_index", align 4
@print_circular_lock_scenario._entry.598 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.230, ptr @.str.591, ptr @.str, i32 1873, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_circular_lock_scenario._entry_ptr.599 = internal global ptr @print_circular_lock_scenario._entry.598, section ".printk_index", align 4
@print_circular_lock_scenario._entry.600 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.303, ptr @.str.591, ptr @.str, i32 1874, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_circular_lock_scenario._entry_ptr.601 = internal global ptr @print_circular_lock_scenario._entry.600, section ".printk_index", align 4
@print_circular_lock_scenario._entry.602 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.306, ptr @.str.591, ptr @.str, i32 1875, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_circular_lock_scenario._entry_ptr.603 = internal global ptr @print_circular_lock_scenario._entry.602, section ".printk_index", align 4
@print_circular_lock_scenario._entry.604 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.239, ptr @.str.591, ptr @.str, i32 1876, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_circular_lock_scenario._entry_ptr.605 = internal global ptr @print_circular_lock_scenario._entry.604, section ".printk_index", align 4
@print_circular_lock_scenario._entry.606 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.242, ptr @.str.591, ptr @.str, i32 1878, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_circular_lock_scenario._entry_ptr.607 = internal global ptr @print_circular_lock_scenario._entry.606, section ".printk_index", align 4
@print_circular_lock_scenario._entry.608 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.316, ptr @.str.591, ptr @.str, i32 1879, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_circular_lock_scenario._entry_ptr.609 = internal global ptr @print_circular_lock_scenario._entry.608, section ".printk_index", align 4
@print_circular_lock_scenario._entry.610 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.242, ptr @.str.591, ptr @.str, i32 1881, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_circular_lock_scenario._entry_ptr.611 = internal global ptr @print_circular_lock_scenario._entry.610, section ".printk_index", align 4
@print_circular_lock_scenario._entry.612 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.316, ptr @.str.591, ptr @.str, i32 1882, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_circular_lock_scenario._entry_ptr.613 = internal global ptr @print_circular_lock_scenario._entry.612, section ".printk_index", align 4
@print_circular_lock_scenario._entry.614 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.242, ptr @.str.591, ptr @.str, i32 1884, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_circular_lock_scenario._entry_ptr.615 = internal global ptr @print_circular_lock_scenario._entry.614, section ".printk_index", align 4
@print_circular_lock_scenario._entry.616 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.239, ptr @.str.591, ptr @.str, i32 1885, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_circular_lock_scenario._entry_ptr.617 = internal global ptr @print_circular_lock_scenario._entry.616, section ".printk_index", align 4
@print_circular_lock_scenario._entry.618 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.242, ptr @.str.591, ptr @.str, i32 1887, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_circular_lock_scenario._entry_ptr.619 = internal global ptr @print_circular_lock_scenario._entry.618, section ".printk_index", align 4
@print_circular_lock_scenario._entry.620 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.253, ptr @.str.591, ptr @.str, i32 1888, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_circular_lock_scenario._entry_ptr.621 = internal global ptr @print_circular_lock_scenario._entry.620, section ".printk_index", align 4
@.str.622 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"ret == BFS_RNOMATCH\00", [44 x i8] zeroinitializer }, align 32
@.str.623 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ret == -1\00", [22 x i8] zeroinitializer }, align 32
@print_bad_irq_dependency._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @.str.624, ptr @.str, i32 2524, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.624 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"print_bad_irq_dependency\00", [39 x i8] zeroinitializer }, align 32
@print_bad_irq_dependency._entry_ptr = internal global ptr @print_bad_irq_dependency._entry, section ".printk_index", align 4
@print_bad_irq_dependency._entry.625 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.626, ptr @.str.624, ptr @.str, i32 2525, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.626 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\014=====================================================\0A\00", [39 x i8] zeroinitializer }, align 32
@print_bad_irq_dependency._entry_ptr.627 = internal global ptr @print_bad_irq_dependency._entry.625, section ".printk_index", align 4
@print_bad_irq_dependency._entry.628 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.629, ptr @.str.624, ptr @.str, i32 2527, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.629 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\014WARNING: %s-safe -> %s-unsafe lock order detected\0A\00", [43 x i8] zeroinitializer }, align 32
@print_bad_irq_dependency._entry_ptr.630 = internal global ptr @print_bad_irq_dependency._entry.628, section ".printk_index", align 4
@print_bad_irq_dependency._entry.631 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.632, ptr @.str.624, ptr @.str, i32 2529, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.632 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\014-----------------------------------------------------\0A\00", [39 x i8] zeroinitializer }, align 32
@print_bad_irq_dependency._entry_ptr.633 = internal global ptr @print_bad_irq_dependency._entry.631, section ".printk_index", align 4
@print_bad_irq_dependency._entry.634 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.635, ptr @.str.624, ptr @.str, i32 2535, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.635 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\014%s/%d [HC%u[%lu]:SC%u[%lu]:HE%u:SE%u] is trying to acquire:\0A\00", [33 x i8] zeroinitializer }, align 32
@print_bad_irq_dependency._entry_ptr.636 = internal global ptr @print_bad_irq_dependency._entry.634, section ".printk_index", align 4
@print_bad_irq_dependency._entry.637 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.638, ptr @.str.624, ptr @.str, i32 2538, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.638 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\014\0Aand this task is already holding:\0A\00", [58 x i8] zeroinitializer }, align 32
@print_bad_irq_dependency._entry_ptr.639 = internal global ptr @print_bad_irq_dependency._entry.637, section ".printk_index", align 4
@print_bad_irq_dependency._entry.640 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.641, ptr @.str.624, ptr @.str, i32 2540, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.641 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\014which would create a new lock dependency:\0A\00", [51 x i8] zeroinitializer }, align 32
@print_bad_irq_dependency._entry_ptr.642 = internal global ptr @print_bad_irq_dependency._entry.640, section ".printk_index", align 4
@print_bad_irq_dependency._entry.643 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.644, ptr @.str.624, ptr @.str, i32 2542, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.644 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"\01c ->\00", [26 x i8] zeroinitializer }, align 32
@print_bad_irq_dependency._entry_ptr.645 = internal global ptr @print_bad_irq_dependency._entry.643, section ".printk_index", align 4
@print_bad_irq_dependency._entry.646 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.352, ptr @.str.624, ptr @.str, i32 2544, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_bad_irq_dependency._entry_ptr.647 = internal global ptr @print_bad_irq_dependency._entry.646, section ".printk_index", align 4
@print_bad_irq_dependency._entry.648 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.649, ptr @.str.624, ptr @.str, i32 2547, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.649 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\014\0Abut this new dependency connects a %s-irq-safe lock:\0A\00", [39 x i8] zeroinitializer }, align 32
@print_bad_irq_dependency._entry_ptr.650 = internal global ptr @print_bad_irq_dependency._entry.648, section ".printk_index", align 4
@print_bad_irq_dependency._entry.651 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.652, ptr @.str.624, ptr @.str, i32 2549, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.652 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\014\0A... which became %s-irq-safe at:\0A\00", [59 x i8] zeroinitializer }, align 32
@print_bad_irq_dependency._entry_ptr.653 = internal global ptr @print_bad_irq_dependency._entry.651, section ".printk_index", align 4
@print_bad_irq_dependency._entry.654 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.655, ptr @.str.624, ptr @.str, i32 2553, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.655 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"\014\0Ato a %s-irq-unsafe lock:\0A\00", [35 x i8] zeroinitializer }, align 32
@print_bad_irq_dependency._entry_ptr.656 = internal global ptr @print_bad_irq_dependency._entry.654, section ".printk_index", align 4
@print_bad_irq_dependency._entry.657 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.658, ptr @.str.624, ptr @.str, i32 2555, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.658 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\014\0A... which became %s-irq-unsafe at:\0A\00", [57 x i8] zeroinitializer }, align 32
@print_bad_irq_dependency._entry_ptr.659 = internal global ptr @print_bad_irq_dependency._entry.657, section ".printk_index", align 4
@print_bad_irq_dependency._entry.660 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.661, ptr @.str.624, ptr @.str, i32 2556, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.661 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"\014...\00", [26 x i8] zeroinitializer }, align 32
@print_bad_irq_dependency._entry_ptr.662 = internal global ptr @print_bad_irq_dependency._entry.660, section ".printk_index", align 4
@print_bad_irq_dependency._entry.663 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.123, ptr @.str.624, ptr @.str, i32 2560, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_bad_irq_dependency._entry_ptr.664 = internal global ptr @print_bad_irq_dependency._entry.663, section ".printk_index", align 4
@print_bad_irq_dependency._entry.665 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.666, ptr @.str.624, ptr @.str, i32 2566, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.666 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\014\0Athe dependencies between %s-irq-safe lock and the holding lock:\0A\00", [60 x i8] zeroinitializer }, align 32
@print_bad_irq_dependency._entry_ptr.667 = internal global ptr @print_bad_irq_dependency._entry.665, section ".printk_index", align 4
@print_bad_irq_dependency._entry.668 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.669, ptr @.str.624, ptr @.str, i32 2569, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.669 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\014\0Athe dependencies between the lock to be acquired\00", [44 x i8] zeroinitializer }, align 32
@print_bad_irq_dependency._entry_ptr.670 = internal global ptr @print_bad_irq_dependency._entry.668, section ".printk_index", align 4
@print_bad_irq_dependency._entry.671 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.672, ptr @.str.624, ptr @.str, i32 2570, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.672 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"\014 and %s-irq-unsafe lock:\0A\00", [36 x i8] zeroinitializer }, align 32
@print_bad_irq_dependency._entry_ptr.673 = internal global ptr @print_bad_irq_dependency._entry.671, section ".printk_index", align 4
@print_bad_irq_dependency._entry.674 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.134, ptr @.str.624, ptr @.str, i32 2576, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_bad_irq_dependency._entry_ptr.675 = internal global ptr @print_bad_irq_dependency._entry.674, section ".printk_index", align 4
@list_entries_in_use = internal global { [1024 x i32], [1024 x i8] } zeroinitializer, align 32
@.str.676 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"BUG: MAX_LOCKDEP_ENTRIES too low!\00", [62 x i8] zeroinitializer }, align 32
@list_entries = internal global { [32768 x %struct.lock_list], [229376 x i8] } zeroinitializer, align 32
@trace_lock_release.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.677 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"releasing a pinned lock\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.678 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"pinning an unheld lock\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.679 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"unpinning an unpinned lock\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.680 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"pin count corrupted\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.681 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"unpinning an unheld lock\0A\00", [38 x i8] zeroinitializer }, align 32
@trace_lock_contended.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@print_lock_contention_bug._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @.str.682, ptr @.str, i32 5755, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.682 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"print_lock_contention_bug\00", [38 x i8] zeroinitializer }, align 32
@print_lock_contention_bug._entry_ptr = internal global ptr @print_lock_contention_bug._entry, section ".printk_index", align 4
@print_lock_contention_bug._entry.683 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.684, ptr @.str.682, ptr @.str, i32 5756, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.684 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\014=================================\0A\00", [59 x i8] zeroinitializer }, align 32
@print_lock_contention_bug._entry_ptr.685 = internal global ptr @print_lock_contention_bug._entry.683, section ".printk_index", align 4
@print_lock_contention_bug._entry.686 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.687, ptr @.str.682, ptr @.str, i32 5757, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.687 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\014WARNING: bad contention detected!\0A\00", [59 x i8] zeroinitializer }, align 32
@print_lock_contention_bug._entry_ptr.688 = internal global ptr @print_lock_contention_bug._entry.686, section ".printk_index", align 4
@print_lock_contention_bug._entry.689 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.690, ptr @.str.682, ptr @.str, i32 5759, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.690 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\014---------------------------------\0A\00", [59 x i8] zeroinitializer }, align 32
@print_lock_contention_bug._entry_ptr.691 = internal global ptr @print_lock_contention_bug._entry.689, section ".printk_index", align 4
@print_lock_contention_bug._entry.692 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.693, ptr @.str.682, ptr @.str, i32 5761, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.693 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\014%s/%d is trying to contend lock (\00", [60 x i8] zeroinitializer }, align 32
@print_lock_contention_bug._entry_ptr.694 = internal global ptr @print_lock_contention_bug._entry.692, section ".printk_index", align 4
@print_lock_contention_bug._entry.695 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.397, ptr @.str.682, ptr @.str, i32 5763, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_lock_contention_bug._entry_ptr.696 = internal global ptr @print_lock_contention_bug._entry.695, section ".printk_index", align 4
@print_lock_contention_bug._entry.697 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.698, ptr @.str.682, ptr @.str, i32 5765, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.698 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\014but there are no locks held!\0A\00", [32 x i8] zeroinitializer }, align 32
@print_lock_contention_bug._entry_ptr.699 = internal global ptr @print_lock_contention_bug._entry.697, section ".printk_index", align 4
@print_lock_contention_bug._entry.700 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.226, ptr @.str.682, ptr @.str, i32 5766, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_lock_contention_bug._entry_ptr.701 = internal global ptr @print_lock_contention_bug._entry.700, section ".printk_index", align 4
@print_lock_contention_bug._entry.702 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.134, ptr @.str.682, ptr @.str, i32 5769, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_lock_contention_bug._entry_ptr.703 = internal global ptr @print_lock_contention_bug._entry.702, section ".printk_index", align 4
@trace_lock_acquired.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@init_data_structures_once.ds_initialized = internal unnamed_addr global i1 false, section ".data..read_mostly", align 1
@init_data_structures_once.rcu_head_initialized = internal unnamed_addr global i1 false, section ".data..read_mostly", align 1
@delayed_free = internal global { %struct.delayed_free, [4096 x i8] } zeroinitializer, align 32
@check_data_structures.once = internal global { i1, [31 x i8] } zeroinitializer, align 32
@__check_data_structures._entry = internal constant %struct.pi_entry { ptr @.str.704, ptr @.str.705, ptr @.str, i32 1065, ptr null, ptr null }, align 1
@.str.704 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\016class %px/%s is not in any class list\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.705 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"__check_data_structures\00", [40 x i8] zeroinitializer }, align 32
@__check_data_structures._entry_ptr = internal global ptr @__check_data_structures._entry, section ".printk_index", align 4
@.str.706 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"(?)\00", [28 x i8] zeroinitializer }, align 32
@__check_data_structures.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__check_data_structures._entry.707 = internal constant %struct.pi_entry { ptr @.str.708, ptr @.str.705, ptr @.str, i32 1098, ptr null, ptr null }, align 1
@.str.708 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\016list entry %d is not in any class list; class %s <> %s\0A\00", [38 x i8] zeroinitializer }, align 32
@__check_data_structures._entry_ptr.709 = internal global ptr @__check_data_structures._entry.707, section ".printk_index", align 4
@__check_data_structures._entry.710 = internal constant %struct.pi_entry { ptr @.str.711, ptr @.str.705, ptr @.str, i32 1115, ptr null, ptr null }, align 1
@.str.711 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\016list entry %d occurs in a class list; class %s <> %s\0A\00", [40 x i8] zeroinitializer }, align 32
@__check_data_structures._entry_ptr.712 = internal global ptr @__check_data_structures._entry.710, section ".printk_index", align 4
@class_lock_list_valid._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.713, ptr @.str.714, ptr @.str, i32 1003, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.713 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\016class %s: mismatch for lock entry %ld; class %s <> %s\00", [40 x i8] zeroinitializer }, align 32
@.str.714 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"class_lock_list_valid\00", [42 x i8] zeroinitializer }, align 32
@class_lock_list_valid._entry_ptr = internal global ptr @class_lock_list_valid._entry, section ".printk_index", align 4
@check_lock_chain_key._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.715, ptr @.str.716, ptr @.str, i32 1030, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.715 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\016chain %lld: key %#llx <> %#llx\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.716 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"check_lock_chain_key\00", [43 x i8] zeroinitializer }, align 32
@check_lock_chain_key._entry_ptr = internal global ptr @check_lock_chain_key._entry, section ".printk_index", align 4
@reinit_class.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@reinit_class.__already_done.717 = internal unnamed_addr global i1 false, section ".data.once", align 1
@reinit_class.__already_done.718 = internal unnamed_addr global i1 false, section ".data.once", align 1
@reinit_class.__already_done.719 = internal unnamed_addr global i1 false, section ".data.once", align 1
@reinit_class.__already_done.720 = internal unnamed_addr global i1 false, section ".data.once", align 1
@reinit_class.__already_done.721 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__lockdep_reset_lock.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@zap_class.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@zap_class.__already_done.722 = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.723 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"%s() failed for class %s\0A\00", [38 x i8] zeroinitializer }, align 32
@__func__.zap_class = private unnamed_addr constant [10 x i8] c"zap_class\00", align 1
@remove_class_from_lock_chains.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@lock_class_cache_is_registered.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__lockdep_free_key_range.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@call_rcu_zapped.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@call_rcu_zapped.__already_done.724 = internal unnamed_addr global i1 false, section ".data.once", align 1
@free_zapped_rcu.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@print_freed_lock_bug._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @.str.725, ptr @.str, i32 6379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.725 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"print_freed_lock_bug\00", [43 x i8] zeroinitializer }, align 32
@print_freed_lock_bug._entry_ptr = internal global ptr @print_freed_lock_bug._entry, section ".printk_index", align 4
@print_freed_lock_bug._entry.726 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.727, ptr @.str.725, ptr @.str, i32 6380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.727 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"\014=========================\0A\00", [35 x i8] zeroinitializer }, align 32
@print_freed_lock_bug._entry_ptr.728 = internal global ptr @print_freed_lock_bug._entry.726, section ".printk_index", align 4
@print_freed_lock_bug._entry.729 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.730, ptr @.str.725, ptr @.str, i32 6381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.730 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"\014WARNING: held lock freed!\0A\00", [35 x i8] zeroinitializer }, align 32
@print_freed_lock_bug._entry_ptr.731 = internal global ptr @print_freed_lock_bug._entry.729, section ".printk_index", align 4
@print_freed_lock_bug._entry.732 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.733, ptr @.str.725, ptr @.str, i32 6383, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.733 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"\014-------------------------\0A\00", [35 x i8] zeroinitializer }, align 32
@print_freed_lock_bug._entry_ptr.734 = internal global ptr @print_freed_lock_bug._entry.732, section ".printk_index", align 4
@print_freed_lock_bug._entry.735 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.736, ptr @.str.725, ptr @.str, i32 6385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.736 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\014%s/%d is freeing memory %px-%px, with a lock still held there!\0A\00", [62 x i8] zeroinitializer }, align 32
@print_freed_lock_bug._entry_ptr.737 = internal global ptr @print_freed_lock_bug._entry.735, section ".printk_index", align 4
@print_freed_lock_bug._entry.738 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.134, ptr @.str.725, ptr @.str, i32 6389, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_freed_lock_bug._entry_ptr.739 = internal global ptr @print_freed_lock_bug._entry.738, section ".printk_index", align 4
@print_held_locks_bug._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @.str.740, ptr @.str, i32 6437, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.740 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"print_held_locks_bug\00", [43 x i8] zeroinitializer }, align 32
@print_held_locks_bug._entry_ptr = internal global ptr @print_held_locks_bug._entry, section ".printk_index", align 4
@print_held_locks_bug._entry.741 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.742, ptr @.str.740, ptr @.str, i32 6438, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.742 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\014====================================\0A\00", [56 x i8] zeroinitializer }, align 32
@print_held_locks_bug._entry_ptr.743 = internal global ptr @print_held_locks_bug._entry.741, section ".printk_index", align 4
@print_held_locks_bug._entry.744 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.745, ptr @.str.740, ptr @.str, i32 6440, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.745 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\014WARNING: %s/%d still has locks held!\0A\00", [56 x i8] zeroinitializer }, align 32
@print_held_locks_bug._entry_ptr.746 = internal global ptr @print_held_locks_bug._entry.744, section ".printk_index", align 4
@print_held_locks_bug._entry.747 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.748, ptr @.str.740, ptr @.str, i32 6442, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.748 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\014------------------------------------\0A\00", [56 x i8] zeroinitializer }, align 32
@print_held_locks_bug._entry_ptr.749 = internal global ptr @print_held_locks_bug._entry.747, section ".printk_index", align 4
@print_held_locks_bug._entry.750 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.134, ptr @.str.740, ptr @.str, i32 6444, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@print_held_locks_bug._entry_ptr.751 = internal global ptr @print_held_locks_bug._entry.750, section ".printk_index", align 4
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.752 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.753 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@lockdep_print_held_locks._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.754, ptr @.str.755, ptr @.str, i32 755, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.754 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"no locks held by %s/%d.\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.755 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"lockdep_print_held_locks\00", [39 x i8] zeroinitializer }, align 32
@lockdep_print_held_locks._entry_ptr = internal global ptr @lockdep_print_held_locks._entry, section ".printk_index", align 4
@lockdep_print_held_locks._entry.756 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.757, ptr @.str.755, ptr @.str, i32 758, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.757 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"%d lock%s held by %s/%d:\0A\00", [38 x i8] zeroinitializer }, align 32
@lockdep_print_held_locks._entry_ptr.758 = internal global ptr @lockdep_print_held_locks._entry.756, section ".printk_index", align 4
@.str.759 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"s\00", [30 x i8] zeroinitializer }, align 32
@lockdep_print_held_locks._entry.760 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.761, ptr @.str.755, ptr @.str, i32 766, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.761 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c" #%d: \00", [25 x i8] zeroinitializer }, align 32
@lockdep_print_held_locks._entry_ptr.762 = internal global ptr @lockdep_print_held_locks._entry.760, section ".printk_index", align 4
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.763 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@print_kernel_ident._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.764, ptr @.str.765, ptr @.str, i32 776, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.764 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"%s %.*s %s\0A\00", [20 x i8] zeroinitializer }, align 32
@.str.765 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"print_kernel_ident\00", [45 x i8] zeroinitializer }, align 32
@print_kernel_ident._entry_ptr = internal global ptr @print_kernel_ident._entry, section ".printk_index", align 4
@.str.766 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c" \00", [30 x i8] zeroinitializer }, align 32
@init_uts_ns = external dso_local global %struct.uts_namespace, align 4
@___asan_gen_.767 = private unnamed_addr constant [29 x i8] c"str__lock__trace_system_name\00", align 1
@___asan_gen_.768 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.769 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.768, i32 36, i32 1 }
@___asan_gen_.770 = private unnamed_addr constant [32 x i8] c"trace_event_fields_lock_acquire\00", align 1
@___asan_gen_.773 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_lock_acquire\00", align 1
@___asan_gen_.776 = private unnamed_addr constant [23 x i8] c"print_fmt_lock_acquire\00", align 1
@___asan_gen_.779 = private unnamed_addr constant [19 x i8] c"event_lock_acquire\00", align 1
@___asan_gen_.782 = private unnamed_addr constant [24 x i8] c"trace_event_fields_lock\00", align 1
@___asan_gen_.785 = private unnamed_addr constant [28 x i8] c"trace_event_type_funcs_lock\00", align 1
@___asan_gen_.788 = private unnamed_addr constant [15 x i8] c"print_fmt_lock\00", align 1
@___asan_gen_.791 = private unnamed_addr constant [19 x i8] c"event_lock_release\00", align 1
@___asan_gen_.793 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1872, i32 58, i32 1 }
@___asan_gen_.794 = private unnamed_addr constant [21 x i8] c"event_lock_contended\00", align 1
@___asan_gen_.796 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1872, i32 67, i32 1 }
@___asan_gen_.797 = private unnamed_addr constant [20 x i8] c"event_lock_acquired\00", align 1
@___asan_gen_.799 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1872, i32 74, i32 1 }
@___asan_gen_.800 = private unnamed_addr constant [14 x i8] c"prove_locking\00", align 1
@___asan_gen_.802 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 67, i32 5 }
@___asan_gen_.803 = private unnamed_addr constant [10 x i8] c"lock_stat\00", align 1
@___asan_gen_.805 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 74, i32 5 }
@___asan_gen_.806 = private unnamed_addr constant [13 x i8] c"lock_classes\00", align 1
@___asan_gen_.808 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 189, i32 19 }
@___asan_gen_.809 = private unnamed_addr constant [17 x i8] c"all_lock_classes\00", align 1
@___asan_gen_.811 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 341, i32 1 }
@___asan_gen_.812 = private unnamed_addr constant [29 x i8] c"lockdep_selftest_task_struct\00", align 1
@___asan_gen_.814 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 134, i32 28 }
@___asan_gen_.815 = private unnamed_addr constant [17 x i8] c"stack_trace_hash\00", align 1
@___asan_gen_.817 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 521, i32 26 }
@___asan_gen_.818 = private unnamed_addr constant [18 x i8] c"check_consistency\00", align 1
@___asan_gen_.820 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1123, i32 5 }
@___asan_gen_.823 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1193, i32 6 }
@___asan_gen_.826 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1200, i32 2 }
@___asan_gen_.838 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2384, i32 3 }
@___asan_gen_.844 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2386, i32 3 }
@___asan_gen_.850 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2389, i32 4 }
@___asan_gen_.856 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2432, i32 4 }
@___asan_gen_.859 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2434, i32 4 }
@___asan_gen_.862 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2444, i32 4 }
@___asan_gen_.863 = private unnamed_addr constant [13 x i8] c"chain_hlocks\00", align 1
@___asan_gen_.865 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3230, i32 12 }
@___asan_gen_.866 = private unnamed_addr constant [19 x i8] c"lock_chains_in_use\00", align 1
@___asan_gen_.868 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3229, i32 8 }
@___asan_gen_.877 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4089, i32 2 }
@___asan_gen_.883 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4090, i32 2 }
@___asan_gen_.889 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4093, i32 2 }
@___asan_gen_.895 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4096, i32 2 }
@___asan_gen_.901 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4099, i32 2 }
@___asan_gen_.907 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4273, i32 6 }
@___asan_gen_.910 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4279, i32 6 }
@___asan_gen_.913 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4286, i32 6 }
@___asan_gen_.916 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4349, i32 2 }
@___asan_gen_.919 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4470, i32 3 }
@___asan_gen_.922 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4790, i32 6 }
@___asan_gen_.925 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4791, i32 16 }
@___asan_gen_.928 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4804, i32 6 }
@___asan_gen_.937 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4812, i32 4 }
@___asan_gen_.940 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4813, i32 3 }
@___asan_gen_.943 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4824, i32 7 }
@___asan_gen_.944 = private unnamed_addr constant [18 x i8] c"nr_hardirq_chains\00", align 1
@___asan_gen_.946 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 599, i32 14 }
@___asan_gen_.947 = private unnamed_addr constant [18 x i8] c"nr_softirq_chains\00", align 1
@___asan_gen_.949 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 600, i32 14 }
@___asan_gen_.950 = private unnamed_addr constant [18 x i8] c"nr_process_chains\00", align 1
@___asan_gen_.952 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 601, i32 14 }
@___asan_gen_.953 = private unnamed_addr constant [16 x i8] c"chainhash_table\00", align 1
@___asan_gen_.955 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 392, i32 26 }
@___asan_gen_.964 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6333, i32 2 }
@___asan_gen_.970 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6335, i32 2 }
@___asan_gen_.976 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6336, i32 2 }
@___asan_gen_.982 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6337, i32 2 }
@___asan_gen_.988 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6338, i32 2 }
@___asan_gen_.994 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6339, i32 2 }
@___asan_gen_.1000 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6340, i32 2 }
@___asan_gen_.1006 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6341, i32 2 }
@___asan_gen_.1012 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6343, i32 2 }
@___asan_gen_.1018 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6361, i32 2 }
@___asan_gen_.1024 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6366, i32 2 }
@___asan_gen_.1033 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6461, i32 3 }
@___asan_gen_.1039 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6464, i32 2 }
@___asan_gen_.1045 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6476, i32 2 }
@___asan_gen_.1051 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6477, i32 2 }
@___asan_gen_.1060 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6489, i32 3 }
@___asan_gen_.1066 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6503, i32 3 }
@___asan_gen_.1072 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6504, i32 3 }
@___asan_gen_.1078 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6505, i32 3 }
@___asan_gen_.1084 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6507, i32 3 }
@___asan_gen_.1090 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6508, i32 3 }
@___asan_gen_.1096 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6526, i32 2 }
@___asan_gen_.1102 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6527, i32 2 }
@___asan_gen_.1108 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6528, i32 2 }
@___asan_gen_.1114 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6530, i32 2 }
@___asan_gen_.1120 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6531, i32 2 }
@___asan_gen_.1126 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6532, i32 2 }
@___asan_gen_.1138 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6533, i32 2 }
@___asan_gen_.1144 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6559, i32 3 }
@___asan_gen_.1150 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6562, i32 2 }
@___asan_gen_.1151 = private unnamed_addr constant [16 x i8] c"nr_list_entries\00", align 1
@___asan_gen_.1153 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 171, i32 15 }
@___asan_gen_.1154 = private unnamed_addr constant [16 x i8] c"nr_lock_classes\00", align 1
@___asan_gen_.1156 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 184, i32 15 }
@___asan_gen_.1157 = private unnamed_addr constant [18 x i8] c"nr_zapped_classes\00", align 1
@___asan_gen_.1159 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 185, i32 15 }
@___asan_gen_.1160 = private unnamed_addr constant [23 x i8] c"nr_stack_trace_entries\00", align 1
@___asan_gen_.1162 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 499, i32 15 }
@___asan_gen_.1163 = private unnamed_addr constant [18 x i8] c"max_lockdep_depth\00", align 1
@___asan_gen_.1165 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 602, i32 14 }
@___asan_gen_.1166 = private unnamed_addr constant [20 x i8] c"max_bfs_queue_depth\00", align 1
@___asan_gen_.1168 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1431, i32 14 }
@___asan_gen_.1169 = private unnamed_addr constant [12 x i8] c"lock_chains\00", align 1
@___asan_gen_.1171 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3228, i32 19 }
@___asan_gen_.1172 = private unnamed_addr constant [22 x i8] c"nr_zapped_lock_chains\00", align 1
@___asan_gen_.1174 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3231, i32 15 }
@___asan_gen_.1175 = private unnamed_addr constant [21 x i8] c"nr_free_chain_hlocks\00", align 1
@___asan_gen_.1177 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3232, i32 14 }
@___asan_gen_.1178 = private unnamed_addr constant [21 x i8] c"nr_lost_chain_hlocks\00", align 1
@___asan_gen_.1180 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3233, i32 14 }
@___asan_gen_.1181 = private unnamed_addr constant [22 x i8] c"nr_large_chain_blocks\00", align 1
@___asan_gen_.1183 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3234, i32 14 }
@___asan_gen_.1216 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1872, i32 39, i32 1 }
@___asan_gen_.1217 = private unnamed_addr constant [15 x i8] c"lock_keys_hash\00", align 1
@___asan_gen_.1219 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 183, i32 26 }
@___asan_gen_.1220 = private unnamed_addr constant [8 x i8] c"lock_cq\00", align 1
@___asan_gen_.1222 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1429, i32 30 }
@___asan_gen_.1225 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 131, i32 9 }
@___asan_gen_.1226 = private unnamed_addr constant [26 x i8] c"lockdep_dependency_gen_id\00", align 1
@___asan_gen_.1228 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1433, i32 21 }
@___asan_gen_.1237 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2298, i32 2 }
@___asan_gen_.1243 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2301, i32 2 }
@___asan_gen_.1249 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2303, i32 2 }
@___asan_gen_.1255 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2309, i32 11 }
@___asan_gen_.1256 = private unnamed_addr constant [10 x i8] c"usage_str\00", align 1
@___asan_gen_.1258 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 622, i32 20 }
@___asan_gen_.1264 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2310, i32 11 }
@___asan_gen_.1270 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2314, i32 2 }
@___asan_gen_.1276 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2316, i32 2 }
@___asan_gen_.1285 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 707, i32 2 }
@___asan_gen_.1291 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 709, i32 2 }
@___asan_gen_.1297 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 691, i32 3 }
@___asan_gen_.1300 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 695, i32 4 }
@___asan_gen_.1303 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 697, i32 4 }
@___asan_gen_.1330 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 627, i32 16 }
@___asan_gen_.1333 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 628, i32 21 }
@___asan_gen_.1336 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 630, i32 24 }
@___asan_gen_.1345 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4617, i32 3 }
@___asan_gen_.1346 = private unnamed_addr constant [20 x i8] c"lock_classes_in_use\00", align 1
@___asan_gen_.1348 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 190, i32 8 }
@___asan_gen_.1349 = private unnamed_addr constant [12 x i8] c"stack_trace\00", align 1
@___asan_gen_.1351 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 520, i32 22 }
@___asan_gen_.1354 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 548, i32 21 }
@___asan_gen_.1363 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 492, i32 2 }
@___asan_gen_.1369 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 493, i32 2 }
@___asan_gen_.1375 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 495, i32 2 }
@___asan_gen_.1381 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3906, i32 2 }
@___asan_gen_.1387 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3907, i32 2 }
@___asan_gen_.1393 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3908, i32 2 }
@___asan_gen_.1399 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3910, i32 2 }
@___asan_gen_.1405 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3912, i32 2 }
@___asan_gen_.1411 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3915, i32 2 }
@___asan_gen_.1417 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3923, i32 2 }
@___asan_gen_.1423 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3927, i32 2 }
@___asan_gen_.1426 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3932, i32 2 }
@___asan_gen_.1435 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3886, i32 2 }
@___asan_gen_.1441 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3887, i32 2 }
@___asan_gen_.1447 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3888, i32 2 }
@___asan_gen_.1453 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3889, i32 2 }
@___asan_gen_.1459 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3891, i32 2 }
@___asan_gen_.1465 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3892, i32 2 }
@___asan_gen_.1471 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3893, i32 2 }
@___asan_gen_.1474 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3895, i32 2 }
@___asan_gen_.1480 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3896, i32 2 }
@___asan_gen_.1483 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2248, i32 7 }
@___asan_gen_.1486 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2032, i32 2 }
@___asan_gen_.1492 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3968, i32 2 }
@___asan_gen_.1498 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3969, i32 2 }
@___asan_gen_.1504 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3970, i32 2 }
@___asan_gen_.1510 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3972, i32 2 }
@___asan_gen_.1516 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3973, i32 2 }
@___asan_gen_.1522 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3977, i32 3 }
@___asan_gen_.1528 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3979, i32 3 }
@___asan_gen_.1534 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3981, i32 2 }
@___asan_gen_.1537 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3983, i32 2 }
@___asan_gen_.1543 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3989, i32 4 }
@___asan_gen_.1549 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4005, i32 2 }
@___asan_gen_.1552 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4011, i32 2 }
@___asan_gen_.1561 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2480, i32 3 }
@___asan_gen_.1567 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2482, i32 3 }
@___asan_gen_.1570 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2484, i32 3 }
@___asan_gen_.1576 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2486, i32 3 }
@___asan_gen_.1582 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2489, i32 2 }
@___asan_gen_.1588 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2490, i32 2 }
@___asan_gen_.1594 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2491, i32 2 }
@___asan_gen_.1597 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2492, i32 2 }
@___asan_gen_.1600 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2494, i32 2 }
@___asan_gen_.1606 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2495, i32 2 }
@___asan_gen_.1612 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2496, i32 2 }
@___asan_gen_.1615 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2498, i32 2 }
@___asan_gen_.1618 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2499, i32 2 }
@___asan_gen_.1621 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2501, i32 2 }
@___asan_gen_.1624 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2502, i32 2 }
@___asan_gen_.1627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2503, i32 2 }
@___asan_gen_.1630 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2505, i32 2 }
@___asan_gen_.1633 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2506, i32 2 }
@___asan_gen_.1634 = private unnamed_addr constant [13 x i8] c"state_rnames\00", align 1
@___asan_gen_.1636 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2587, i32 20 }
@___asan_gen_.1637 = private unnamed_addr constant [12 x i8] c"state_names\00", align 1
@___asan_gen_.1639 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2580, i32 20 }
@___asan_gen_.1648 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1650, i32 7, i32 1 }
@___asan_gen_.1650 = private unnamed_addr constant [35 x i8] c"../kernel/locking/lockdep_states.h\00", align 1
@___asan_gen_.1651 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1650, i32 8, i32 1 }
@___asan_gen_.1652 = private unnamed_addr constant [16 x i8] c"state_verbose_f\00", align 1
@___asan_gen_.1654 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4120, i32 14 }
@___asan_gen_.1663 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 741, i32 3 }
@___asan_gen_.1669 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 745, i32 2 }
@___asan_gen_.1675 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 747, i32 2 }
@___asan_gen_.1676 = private unnamed_addr constant [16 x i8] c"classhash_table\00", align 1
@___asan_gen_.1678 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 381, i32 26 }
@___asan_gen_.1679 = private unnamed_addr constant [18 x i8] c"free_lock_classes\00", align 1
@___asan_gen_.1681 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 342, i32 8 }
@___asan_gen_.1684 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1294, i32 21 }
@___asan_gen_.1693 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1324, i32 3 }
@___asan_gen_.1696 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1326, i32 4 }
@___asan_gen_.1702 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1327, i32 3 }
@___asan_gen_.1705 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1347, i32 6 }
@___asan_gen_.1714 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 868, i32 3 }
@___asan_gen_.1720 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 870, i32 3 }
@___asan_gen_.1729 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 947, i32 3 }
@___asan_gen_.1735 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 948, i32 3 }
@___asan_gen_.1741 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 949, i32 3 }
@___asan_gen_.1744 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 950, i32 3 }
@___asan_gen_.1747 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5479, i32 7 }
@___asan_gen_.1756 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5480, i32 4 }
@___asan_gen_.1759 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5483, i32 7 }
@___asan_gen_.1765 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5484, i32 4 }
@___asan_gen_.1768 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5497, i32 4 }
@___asan_gen_.1771 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5500, i32 4 }
@___asan_gen_.1774 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5206, i32 6 }
@___asan_gen_.1777 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5231, i32 6 }
@___asan_gen_.1780 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5109, i32 7 }
@___asan_gen_.1786 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5065, i32 2 }
@___asan_gen_.1792 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5066, i32 2 }
@___asan_gen_.1798 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5067, i32 2 }
@___asan_gen_.1804 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5069, i32 2 }
@___asan_gen_.1810 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5070, i32 2 }
@___asan_gen_.1816 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5073, i32 2 }
@___asan_gen_.1819 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5074, i32 15 }
@___asan_gen_.1825 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5075, i32 2 }
@___asan_gen_.1828 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5076, i32 2 }
@___asan_gen_.1831 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5079, i32 2 }
@___asan_gen_.1837 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 723, i32 2 }
@___asan_gen_.1848 = private unnamed_addr constant [28 x i8] c"../include/linux/kallsyms.h\00", align 1
@___asan_gen_.1849 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1848, i32 170, i32 2 }
@___asan_gen_.1852 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3844, i32 4 }
@___asan_gen_.1855 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3855, i32 7 }
@___asan_gen_.1858 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3870, i32 3 }
@___asan_gen_.1861 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5263, i32 2 }
@___asan_gen_.1864 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5271, i32 6 }
@___asan_gen_.1867 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5278, i32 6 }
@___asan_gen_.1872 = private unnamed_addr constant [31 x i8] c"../include/trace/events/lock.h\00", align 1
@___asan_gen_.1873 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1872, i32 13, i32 1 }
@___asan_gen_.1875 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.1876 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1875, i32 108, i32 2 }
@___asan_gen_.1882 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4914, i32 3 }
@___asan_gen_.1885 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4930, i32 6 }
@___asan_gen_.1888 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4947, i32 8 }
@___asan_gen_.1891 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4997, i32 6 }
@___asan_gen_.1894 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5005, i32 7 }
@___asan_gen_.1897 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5039, i32 21 }
@___asan_gen_.1900 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5040, i32 3 }
@___asan_gen_.1906 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4661, i32 2 }
@___asan_gen_.1909 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4662, i32 2 }
@___asan_gen_.1915 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4663, i32 2 }
@___asan_gen_.1918 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4665, i32 2 }
@___asan_gen_.1924 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4667, i32 2 }
@___asan_gen_.1930 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4670, i32 2 }
@___asan_gen_.1936 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4673, i32 2 }
@___asan_gen_.1942 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4677, i32 2 }
@___asan_gen_.1948 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4849, i32 2 }
@___asan_gen_.1954 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4850, i32 2 }
@___asan_gen_.1960 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4851, i32 2 }
@___asan_gen_.1966 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4853, i32 2 }
@___asan_gen_.1969 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4855, i32 2 }
@___asan_gen_.1975 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4858, i32 2 }
@___asan_gen_.1981 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4859, i32 2 }
@___asan_gen_.1984 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4861, i32 2 }
@___asan_gen_.1987 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4864, i32 2 }
@___asan_gen_.1990 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 4867, i32 2 }
@___asan_gen_.1999 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3722, i32 4 }
@___asan_gen_.2005 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3732, i32 3 }
@___asan_gen_.2008 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3576, i32 6 }
@___asan_gen_.2011 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3584, i32 7 }
@___asan_gen_.2017 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3542, i32 2 }
@___asan_gen_.2023 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3543, i32 2 }
@___asan_gen_.2029 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3544, i32 2 }
@___asan_gen_.2035 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3546, i32 2 }
@___asan_gen_.2041 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3547, i32 2 }
@___asan_gen_.2047 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3548, i32 2 }
@___asan_gen_.2053 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3550, i32 2 }
@___asan_gen_.2059 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3553, i32 2 }
@___asan_gen_.2062 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3556, i32 2 }
@___asan_gen_.2071 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3509, i32 2 }
@___asan_gen_.2080 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3495, i32 2 }
@___asan_gen_.2089 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3528, i32 2 }
@___asan_gen_.2092 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3534, i32 3 }
@___asan_gen_.2095 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3648, i32 21 }
@___asan_gen_.2098 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3666, i32 21 }
@___asan_gen_.2099 = private unnamed_addr constant [20 x i8] c"chain_block_buckets\00", align 1
@___asan_gen_.2101 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3257, i32 12 }
@___asan_gen_.2107 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2940, i32 2 }
@___asan_gen_.2113 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2941, i32 2 }
@___asan_gen_.2119 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2942, i32 2 }
@___asan_gen_.2125 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2944, i32 2 }
@___asan_gen_.2131 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2945, i32 2 }
@___asan_gen_.2137 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2948, i32 2 }
@___asan_gen_.2140 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2951, i32 2 }
@___asan_gen_.2143 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2955, i32 2 }
@___asan_gen_.2149 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2920, i32 2 }
@___asan_gen_.2152 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2921, i32 2 }
@___asan_gen_.2155 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2922, i32 2 }
@___asan_gen_.2158 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2923, i32 2 }
@___asan_gen_.2161 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2925, i32 2 }
@___asan_gen_.2164 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2926, i32 2 }
@___asan_gen_.2167 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2928, i32 2 }
@___asan_gen_.2170 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2929, i32 2 }
@___asan_gen_.2176 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2930, i32 2 }
@___asan_gen_.2179 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 3042, i32 3 }
@___asan_gen_.2188 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2014, i32 2 }
@___asan_gen_.2194 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2020, i32 2 }
@___asan_gen_.2200 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1905, i32 2 }
@___asan_gen_.2206 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1906, i32 2 }
@___asan_gen_.2212 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1907, i32 2 }
@___asan_gen_.2218 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1909, i32 2 }
@___asan_gen_.2221 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1910, i32 2 }
@___asan_gen_.2224 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1914, i32 2 }
@___asan_gen_.2230 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1917, i32 2 }
@___asan_gen_.2236 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1918, i32 2 }
@___asan_gen_.2245 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1835, i32 2 }
@___asan_gen_.2251 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1837, i32 2 }
@___asan_gen_.2257 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1864, i32 3 }
@___asan_gen_.2260 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1866, i32 3 }
@___asan_gen_.2263 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1868, i32 3 }
@___asan_gen_.2266 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1870, i32 3 }
@___asan_gen_.2269 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1873, i32 2 }
@___asan_gen_.2272 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1874, i32 2 }
@___asan_gen_.2275 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1875, i32 2 }
@___asan_gen_.2278 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1876, i32 2 }
@___asan_gen_.2281 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1878, i32 2 }
@___asan_gen_.2284 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1879, i32 2 }
@___asan_gen_.2287 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1881, i32 2 }
@___asan_gen_.2290 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1882, i32 2 }
@___asan_gen_.2293 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1884, i32 2 }
@___asan_gen_.2296 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1885, i32 2 }
@___asan_gen_.2299 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1887, i32 2 }
@___asan_gen_.2302 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1888, i32 2 }
@___asan_gen_.2305 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2803, i32 6 }
@___asan_gen_.2308 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2813, i32 6 }
@___asan_gen_.2314 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2524, i32 2 }
@___asan_gen_.2320 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2525, i32 2 }
@___asan_gen_.2326 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2526, i32 2 }
@___asan_gen_.2332 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2529, i32 2 }
@___asan_gen_.2338 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2530, i32 2 }
@___asan_gen_.2344 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2538, i32 2 }
@___asan_gen_.2350 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2540, i32 2 }
@___asan_gen_.2356 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2542, i32 2 }
@___asan_gen_.2359 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2544, i32 2 }
@___asan_gen_.2365 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2546, i32 2 }
@___asan_gen_.2371 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2549, i32 2 }
@___asan_gen_.2377 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2553, i32 2 }
@___asan_gen_.2383 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2555, i32 2 }
@___asan_gen_.2389 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2556, i32 2 }
@___asan_gen_.2392 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2560, i32 2 }
@___asan_gen_.2398 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2566, i32 2 }
@___asan_gen_.2404 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2569, i32 2 }
@___asan_gen_.2410 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2570, i32 2 }
@___asan_gen_.2413 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 2576, i32 2 }
@___asan_gen_.2414 = private unnamed_addr constant [20 x i8] c"list_entries_in_use\00", align 1
@___asan_gen_.2416 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 173, i32 8 }
@___asan_gen_.2419 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1367, i32 21 }
@___asan_gen_.2420 = private unnamed_addr constant [13 x i8] c"list_entries\00", align 1
@___asan_gen_.2422 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 172, i32 25 }
@___asan_gen_.2425 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5323, i32 2 }
@___asan_gen_.2428 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5415, i32 2 }
@___asan_gen_.2431 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5451, i32 8 }
@___asan_gen_.2434 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5456, i32 8 }
@___asan_gen_.2437 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5463, i32 2 }
@___asan_gen_.2443 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5755, i32 2 }
@___asan_gen_.2449 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5756, i32 2 }
@___asan_gen_.2455 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5757, i32 2 }
@___asan_gen_.2461 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5759, i32 2 }
@___asan_gen_.2467 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5760, i32 2 }
@___asan_gen_.2470 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5763, i32 2 }
@___asan_gen_.2476 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5765, i32 2 }
@___asan_gen_.2479 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5766, i32 2 }
@___asan_gen_.2482 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 5769, i32 2 }
@___asan_gen_.2483 = private unnamed_addr constant [13 x i8] c"delayed_free\00", align 1
@___asan_gen_.2485 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 371, i32 3 }
@___asan_gen_.2486 = private unnamed_addr constant [27 x i8] c"check_data_structures.once\00", align 1
@___asan_gen_.2495 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1064, i32 4 }
@___asan_gen_.2498 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1095, i32 4 }
@___asan_gen_.2501 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1110, i32 4 }
@___asan_gen_.2510 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 997, i32 4 }
@___asan_gen_.2519 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 1027, i32 3 }
@___asan_gen_.2522 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6004, i32 3 }
@___asan_gen_.2528 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6379, i32 2 }
@___asan_gen_.2534 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6380, i32 2 }
@___asan_gen_.2540 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6381, i32 2 }
@___asan_gen_.2546 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6383, i32 2 }
@___asan_gen_.2552 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6384, i32 2 }
@___asan_gen_.2555 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6389, i32 2 }
@___asan_gen_.2561 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6437, i32 2 }
@___asan_gen_.2567 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6438, i32 2 }
@___asan_gen_.2573 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6439, i32 2 }
@___asan_gen_.2579 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6442, i32 2 }
@___asan_gen_.2582 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 6444, i32 2 }
@___asan_gen_.2588 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2614, i32 695, i32 2 }
@___asan_gen_.2597 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 755, i32 3 }
@___asan_gen_.2606 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 757, i32 3 }
@___asan_gen_.2612 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 766, i32 3 }
@___asan_gen_.2614 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.2615 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2614, i32 723, i32 2 }
@___asan_gen_.2616 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.2625 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.2626 = private constant [28 x i8] c"../kernel/locking/lockdep.c\00", align 1
@___asan_gen_.2627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2626, i32 773, i32 2 }
@llvm.compiler.used = appending global [945 x ptr] [ptr @__UNIQUE_ID_check_consistencytype312, ptr @__UNIQUE_ID_lock_stattype290, ptr @__UNIQUE_ID_prove_lockingtype289, ptr @__bpf_trace_tp_map_lock_acquire, ptr @__bpf_trace_tp_map_lock_acquired, ptr @__bpf_trace_tp_map_lock_contended, ptr @__bpf_trace_tp_map_lock_release, ptr @__check_data_structures._entry, ptr @__check_data_structures._entry.707, ptr @__check_data_structures._entry.710, ptr @__check_data_structures._entry_ptr, ptr @__check_data_structures._entry_ptr.709, ptr @__check_data_structures._entry_ptr.712, ptr @__event_lock_acquire, ptr @__event_lock_acquired, ptr @__event_lock_contended, ptr @__event_lock_release, ptr @__ksymtab___lockdep_no_validate__, ptr @__ksymtab_debug_check_no_locks_freed, ptr @__ksymtab_debug_check_no_locks_held, ptr @__ksymtab_debug_show_all_locks, ptr @__ksymtab_debug_show_held_locks, ptr @__ksymtab_lock_acquire, ptr @__ksymtab_lock_acquired, ptr @__ksymtab_lock_contended, ptr @__ksymtab_lock_downgrade, ptr @__ksymtab_lock_is_held_type, ptr @__ksymtab_lock_pin_lock, ptr @__ksymtab_lock_release, ptr @__ksymtab_lock_repin_lock, ptr @__ksymtab_lock_set_class, ptr @__ksymtab_lock_unpin_lock, ptr @__ksymtab_lockdep_hardirqs_off, ptr @__ksymtab_lockdep_hardirqs_on, ptr @__ksymtab_lockdep_hardirqs_on_prepare, ptr @__ksymtab_lockdep_init_map_type, ptr @__ksymtab_lockdep_rcu_suspicious, ptr @__ksymtab_lockdep_recursion, ptr @__ksymtab_lockdep_register_key, ptr @__ksymtab_lockdep_unregister_key, ptr @__ksymtab_read_lock_is_recursive, ptr @__lock_acquire._entry, ptr @__lock_acquire._entry.422, ptr @__lock_acquire._entry.424, ptr @__lock_acquire._entry.433, ptr @__lock_acquire._entry_ptr, ptr @__lock_acquire._entry_ptr.423, ptr @__lock_acquire._entry_ptr.425, ptr @__lock_acquire._entry_ptr.435, ptr @__param_check_consistency, ptr @__param_lock_stat, ptr @__param_prove_locking, ptr @__print_lock_name._entry, ptr @__print_lock_name._entry.175, ptr @__print_lock_name._entry.177, ptr @__print_lock_name._entry.180, ptr @__print_lock_name._entry_ptr, ptr @__print_lock_name._entry_ptr.176, ptr @__print_lock_name._entry_ptr.179, ptr @__print_lock_name._entry_ptr.182, ptr @__tracepoint_lock_acquire, ptr @__tracepoint_lock_acquired, ptr @__tracepoint_lock_contended, ptr @__tracepoint_lock_release, ptr @__tracepoint_ptr_lock_acquire, ptr @__tracepoint_ptr_lock_acquired, ptr @__tracepoint_ptr_lock_contended, ptr @__tracepoint_ptr_lock_release, ptr @_kbl_addr_lock_is_held_type, ptr @assign_lock_key._entry, ptr @assign_lock_key._entry.363, ptr @assign_lock_key._entry.366, ptr @assign_lock_key._entry.369, ptr @assign_lock_key._entry_ptr, ptr @assign_lock_key._entry_ptr.365, ptr @assign_lock_key._entry_ptr.368, ptr @assign_lock_key._entry_ptr.370, ptr @check_flags._entry, ptr @check_flags._entry.375, ptr @check_flags._entry_ptr, ptr @check_flags._entry_ptr.377, ptr @check_lock_chain_key._entry, ptr @check_lock_chain_key._entry_ptr, ptr @class_lock_list_valid._entry, ptr @class_lock_list_valid._entry_ptr, ptr @debug_show_all_locks._entry, ptr @debug_show_all_locks._entry.85, ptr @debug_show_all_locks._entry.88, ptr @debug_show_all_locks._entry.91, ptr @debug_show_all_locks._entry_ptr, ptr @debug_show_all_locks._entry_ptr.87, ptr @debug_show_all_locks._entry_ptr.90, ptr @debug_show_all_locks._entry_ptr.93, ptr @debug_show_held_locks._entry, ptr @debug_show_held_locks._entry_ptr, ptr @event_class_lock, ptr @event_class_lock_acquire, ptr @event_lock_acquire, ptr @event_lock_acquired, ptr @event_lock_contended, ptr @event_lock_release, ptr @lockdep_init._entry, ptr @lockdep_init._entry.53, ptr @lockdep_init._entry.56, ptr @lockdep_init._entry.59, ptr @lockdep_init._entry.62, ptr @lockdep_init._entry.65, ptr @lockdep_init._entry.68, ptr @lockdep_init._entry.71, ptr @lockdep_init._entry.74, ptr @lockdep_init._entry.77, ptr @lockdep_init._entry.80, ptr @lockdep_init._entry_ptr, ptr @lockdep_init._entry_ptr.55, ptr @lockdep_init._entry_ptr.58, ptr @lockdep_init._entry_ptr.61, ptr @lockdep_init._entry_ptr.64, ptr @lockdep_init._entry_ptr.67, ptr @lockdep_init._entry_ptr.70, ptr @lockdep_init._entry_ptr.73, ptr @lockdep_init._entry_ptr.76, ptr @lockdep_init._entry_ptr.79, ptr @lockdep_init._entry_ptr.82, ptr @lockdep_init_map_type._entry, ptr @lockdep_init_map_type._entry_ptr, ptr @lockdep_print_held_locks._entry, ptr @lockdep_print_held_locks._entry.756, ptr @lockdep_print_held_locks._entry.760, ptr @lockdep_print_held_locks._entry_ptr, ptr @lockdep_print_held_locks._entry_ptr.758, ptr @lockdep_print_held_locks._entry_ptr.762, ptr @lockdep_rcu_suspicious._entry, ptr @lockdep_rcu_suspicious._entry.110, ptr @lockdep_rcu_suspicious._entry.113, ptr @lockdep_rcu_suspicious._entry.116, ptr @lockdep_rcu_suspicious._entry.119, ptr @lockdep_rcu_suspicious._entry.122, ptr @lockdep_rcu_suspicious._entry.125, ptr @lockdep_rcu_suspicious._entry.130, ptr @lockdep_rcu_suspicious._entry.133, ptr @lockdep_rcu_suspicious._entry_ptr, ptr @lockdep_rcu_suspicious._entry_ptr.112, ptr @lockdep_rcu_suspicious._entry_ptr.115, ptr @lockdep_rcu_suspicious._entry_ptr.118, ptr @lockdep_rcu_suspicious._entry_ptr.121, ptr @lockdep_rcu_suspicious._entry_ptr.124, ptr @lockdep_rcu_suspicious._entry_ptr.127, ptr @lockdep_rcu_suspicious._entry_ptr.132, ptr @lockdep_rcu_suspicious._entry_ptr.135, ptr @lockdep_sys_exit._entry, ptr @lockdep_sys_exit._entry.100, ptr @lockdep_sys_exit._entry.103, ptr @lockdep_sys_exit._entry.106, ptr @lockdep_sys_exit._entry.97, ptr @lockdep_sys_exit._entry_ptr, ptr @lockdep_sys_exit._entry_ptr.102, ptr @lockdep_sys_exit._entry_ptr.105, ptr @lockdep_sys_exit._entry_ptr.108, ptr @lockdep_sys_exit._entry_ptr.99, ptr @look_up_lock_class._entry, ptr @look_up_lock_class._entry.357, ptr @look_up_lock_class._entry_ptr, ptr @look_up_lock_class._entry_ptr.359, ptr @lookup_chain_cache_add._entry, ptr @lookup_chain_cache_add._entry.482, ptr @lookup_chain_cache_add._entry_ptr, ptr @lookup_chain_cache_add._entry_ptr.484, ptr @mark_lock._entry, ptr @mark_lock._entry_ptr, ptr @print_bad_irq_dependency._entry, ptr @print_bad_irq_dependency._entry.625, ptr @print_bad_irq_dependency._entry.628, ptr @print_bad_irq_dependency._entry.631, ptr @print_bad_irq_dependency._entry.634, ptr @print_bad_irq_dependency._entry.637, ptr @print_bad_irq_dependency._entry.640, ptr @print_bad_irq_dependency._entry.643, ptr @print_bad_irq_dependency._entry.646, ptr @print_bad_irq_dependency._entry.648, ptr @print_bad_irq_dependency._entry.651, ptr @print_bad_irq_dependency._entry.654, ptr @print_bad_irq_dependency._entry.657, ptr @print_bad_irq_dependency._entry.660, ptr @print_bad_irq_dependency._entry.663, ptr @print_bad_irq_dependency._entry.665, ptr @print_bad_irq_dependency._entry.668, ptr @print_bad_irq_dependency._entry.671, ptr @print_bad_irq_dependency._entry.674, ptr @print_bad_irq_dependency._entry_ptr, ptr @print_bad_irq_dependency._entry_ptr.627, ptr @print_bad_irq_dependency._entry_ptr.630, ptr @print_bad_irq_dependency._entry_ptr.633, ptr @print_bad_irq_dependency._entry_ptr.636, ptr @print_bad_irq_dependency._entry_ptr.639, ptr @print_bad_irq_dependency._entry_ptr.642, ptr @print_bad_irq_dependency._entry_ptr.645, ptr @print_bad_irq_dependency._entry_ptr.647, ptr @print_bad_irq_dependency._entry_ptr.650, ptr @print_bad_irq_dependency._entry_ptr.653, ptr @print_bad_irq_dependency._entry_ptr.656, ptr @print_bad_irq_dependency._entry_ptr.659, ptr @print_bad_irq_dependency._entry_ptr.662, ptr @print_bad_irq_dependency._entry_ptr.664, ptr @print_bad_irq_dependency._entry_ptr.667, ptr @print_bad_irq_dependency._entry_ptr.670, ptr @print_bad_irq_dependency._entry_ptr.673, ptr @print_bad_irq_dependency._entry_ptr.675, ptr @print_chain_key_iteration._entry, ptr @print_chain_key_iteration._entry_ptr, ptr @print_chain_keys_chain._entry, ptr @print_chain_keys_chain._entry.517, ptr @print_chain_keys_chain._entry_ptr, ptr @print_chain_keys_chain._entry_ptr.518, ptr @print_chain_keys_held_locks._entry, ptr @print_chain_keys_held_locks._entry_ptr, ptr @print_circular_bug._entry, ptr @print_circular_bug._entry.563, ptr @print_circular_bug._entry_ptr, ptr @print_circular_bug._entry_ptr.565, ptr @print_circular_bug_entry._entry, ptr @print_circular_bug_entry._entry.588, ptr @print_circular_bug_entry._entry_ptr, ptr @print_circular_bug_entry._entry_ptr.590, ptr @print_circular_bug_header._entry, ptr @print_circular_bug_header._entry.567, ptr @print_circular_bug_header._entry.570, ptr @print_circular_bug_header._entry.573, ptr @print_circular_bug_header._entry.576, ptr @print_circular_bug_header._entry.578, ptr @print_circular_bug_header._entry.580, ptr @print_circular_bug_header._entry.583, ptr @print_circular_bug_header._entry_ptr, ptr @print_circular_bug_header._entry_ptr.569, ptr @print_circular_bug_header._entry_ptr.572, ptr @print_circular_bug_header._entry_ptr.575, ptr @print_circular_bug_header._entry_ptr.577, ptr @print_circular_bug_header._entry_ptr.579, ptr @print_circular_bug_header._entry_ptr.582, ptr @print_circular_bug_header._entry_ptr.585, ptr @print_circular_lock_scenario._entry, ptr @print_circular_lock_scenario._entry.592, ptr @print_circular_lock_scenario._entry.594, ptr @print_circular_lock_scenario._entry.596, ptr @print_circular_lock_scenario._entry.598, ptr @print_circular_lock_scenario._entry.600, ptr @print_circular_lock_scenario._entry.602, ptr @print_circular_lock_scenario._entry.604, ptr @print_circular_lock_scenario._entry.606, ptr @print_circular_lock_scenario._entry.608, ptr @print_circular_lock_scenario._entry.610, ptr @print_circular_lock_scenario._entry.612, ptr @print_circular_lock_scenario._entry.614, ptr @print_circular_lock_scenario._entry.616, ptr @print_circular_lock_scenario._entry.618, ptr @print_circular_lock_scenario._entry.620, ptr @print_circular_lock_scenario._entry_ptr, ptr @print_circular_lock_scenario._entry_ptr.593, ptr @print_circular_lock_scenario._entry_ptr.595, ptr @print_circular_lock_scenario._entry_ptr.597, ptr @print_circular_lock_scenario._entry_ptr.599, ptr @print_circular_lock_scenario._entry_ptr.601, ptr @print_circular_lock_scenario._entry_ptr.603, ptr @print_circular_lock_scenario._entry_ptr.605, ptr @print_circular_lock_scenario._entry_ptr.607, ptr @print_circular_lock_scenario._entry_ptr.609, ptr @print_circular_lock_scenario._entry_ptr.611, ptr @print_circular_lock_scenario._entry_ptr.613, ptr @print_circular_lock_scenario._entry_ptr.615, ptr @print_circular_lock_scenario._entry_ptr.617, ptr @print_circular_lock_scenario._entry_ptr.619, ptr @print_circular_lock_scenario._entry_ptr.621, ptr @print_collision._entry, ptr @print_collision._entry.488, ptr @print_collision._entry.491, ptr @print_collision._entry.494, ptr @print_collision._entry.497, ptr @print_collision._entry.500, ptr @print_collision._entry.503, ptr @print_collision._entry.506, ptr @print_collision._entry.509, ptr @print_collision._entry_ptr, ptr @print_collision._entry_ptr.490, ptr @print_collision._entry_ptr.493, ptr @print_collision._entry_ptr.496, ptr @print_collision._entry_ptr.499, ptr @print_collision._entry_ptr.502, ptr @print_collision._entry_ptr.505, ptr @print_collision._entry_ptr.508, ptr @print_collision._entry_ptr.510, ptr @print_deadlock_bug._entry, ptr @print_deadlock_bug._entry.522, ptr @print_deadlock_bug._entry.525, ptr @print_deadlock_bug._entry.528, ptr @print_deadlock_bug._entry.531, ptr @print_deadlock_bug._entry.534, ptr @print_deadlock_bug._entry.537, ptr @print_deadlock_bug._entry.539, ptr @print_deadlock_bug._entry_ptr, ptr @print_deadlock_bug._entry_ptr.524, ptr @print_deadlock_bug._entry_ptr.527, ptr @print_deadlock_bug._entry_ptr.530, ptr @print_deadlock_bug._entry_ptr.533, ptr @print_deadlock_bug._entry_ptr.536, ptr @print_deadlock_bug._entry_ptr.538, ptr @print_deadlock_bug._entry_ptr.540, ptr @print_deadlock_scenario._entry, ptr @print_deadlock_scenario._entry.542, ptr @print_deadlock_scenario._entry.544, ptr @print_deadlock_scenario._entry.546, ptr @print_deadlock_scenario._entry.548, ptr @print_deadlock_scenario._entry.550, ptr @print_deadlock_scenario._entry.552, ptr @print_deadlock_scenario._entry.554, ptr @print_deadlock_scenario._entry.556, ptr @print_deadlock_scenario._entry_ptr, ptr @print_deadlock_scenario._entry_ptr.543, ptr @print_deadlock_scenario._entry_ptr.545, ptr @print_deadlock_scenario._entry_ptr.547, ptr @print_deadlock_scenario._entry_ptr.549, ptr @print_deadlock_scenario._entry_ptr.551, ptr @print_deadlock_scenario._entry_ptr.553, ptr @print_deadlock_scenario._entry_ptr.555, ptr @print_deadlock_scenario._entry_ptr.558, ptr @print_freed_lock_bug._entry, ptr @print_freed_lock_bug._entry.726, ptr @print_freed_lock_bug._entry.729, ptr @print_freed_lock_bug._entry.732, ptr @print_freed_lock_bug._entry.735, ptr @print_freed_lock_bug._entry.738, ptr @print_freed_lock_bug._entry_ptr, ptr @print_freed_lock_bug._entry_ptr.728, ptr @print_freed_lock_bug._entry_ptr.731, ptr @print_freed_lock_bug._entry_ptr.734, ptr @print_freed_lock_bug._entry_ptr.737, ptr @print_freed_lock_bug._entry_ptr.739, ptr @print_held_locks_bug._entry, ptr @print_held_locks_bug._entry.741, ptr @print_held_locks_bug._entry.744, ptr @print_held_locks_bug._entry.747, ptr @print_held_locks_bug._entry.750, ptr @print_held_locks_bug._entry_ptr, ptr @print_held_locks_bug._entry_ptr.743, ptr @print_held_locks_bug._entry_ptr.746, ptr @print_held_locks_bug._entry_ptr.749, ptr @print_held_locks_bug._entry_ptr.751, ptr @print_ip_sym._entry, ptr @print_ip_sym._entry_ptr, ptr @print_irq_inversion_bug._entry, ptr @print_irq_inversion_bug._entry.258, ptr @print_irq_inversion_bug._entry.261, ptr @print_irq_inversion_bug._entry.264, ptr @print_irq_inversion_bug._entry.267, ptr @print_irq_inversion_bug._entry.270, ptr @print_irq_inversion_bug._entry.273, ptr @print_irq_inversion_bug._entry.276, ptr @print_irq_inversion_bug._entry.279, ptr @print_irq_inversion_bug._entry.281, ptr @print_irq_inversion_bug._entry.284, ptr @print_irq_inversion_bug._entry.287, ptr @print_irq_inversion_bug._entry_ptr, ptr @print_irq_inversion_bug._entry_ptr.260, ptr @print_irq_inversion_bug._entry_ptr.263, ptr @print_irq_inversion_bug._entry_ptr.266, ptr @print_irq_inversion_bug._entry_ptr.269, ptr @print_irq_inversion_bug._entry_ptr.272, ptr @print_irq_inversion_bug._entry_ptr.275, ptr @print_irq_inversion_bug._entry_ptr.278, ptr @print_irq_inversion_bug._entry_ptr.280, ptr @print_irq_inversion_bug._entry_ptr.283, ptr @print_irq_inversion_bug._entry_ptr.286, ptr @print_irq_inversion_bug._entry_ptr.288, ptr @print_irq_lock_scenario._entry, ptr @print_irq_lock_scenario._entry.291, ptr @print_irq_lock_scenario._entry.294, ptr @print_irq_lock_scenario._entry.296, ptr @print_irq_lock_scenario._entry.299, ptr @print_irq_lock_scenario._entry.302, ptr @print_irq_lock_scenario._entry.305, ptr @print_irq_lock_scenario._entry.308, ptr @print_irq_lock_scenario._entry.310, ptr @print_irq_lock_scenario._entry.312, ptr @print_irq_lock_scenario._entry.315, ptr @print_irq_lock_scenario._entry.318, ptr @print_irq_lock_scenario._entry.320, ptr @print_irq_lock_scenario._entry.322, ptr @print_irq_lock_scenario._entry.324, ptr @print_irq_lock_scenario._entry.326, ptr @print_irq_lock_scenario._entry.328, ptr @print_irq_lock_scenario._entry.330, ptr @print_irq_lock_scenario._entry_ptr, ptr @print_irq_lock_scenario._entry_ptr.293, ptr @print_irq_lock_scenario._entry_ptr.295, ptr @print_irq_lock_scenario._entry_ptr.298, ptr @print_irq_lock_scenario._entry_ptr.301, ptr @print_irq_lock_scenario._entry_ptr.304, ptr @print_irq_lock_scenario._entry_ptr.307, ptr @print_irq_lock_scenario._entry_ptr.309, ptr @print_irq_lock_scenario._entry_ptr.311, ptr @print_irq_lock_scenario._entry_ptr.314, ptr @print_irq_lock_scenario._entry_ptr.317, ptr @print_irq_lock_scenario._entry_ptr.319, ptr @print_irq_lock_scenario._entry_ptr.321, ptr @print_irq_lock_scenario._entry_ptr.323, ptr @print_irq_lock_scenario._entry_ptr.325, ptr @print_irq_lock_scenario._entry_ptr.327, ptr @print_irq_lock_scenario._entry_ptr.329, ptr @print_irq_lock_scenario._entry_ptr.331, ptr @print_irqtrace_events._entry, ptr @print_irqtrace_events._entry.19, ptr @print_irqtrace_events._entry.22, ptr @print_irqtrace_events._entry.25, ptr @print_irqtrace_events._entry.28, ptr @print_irqtrace_events._entry_ptr, ptr @print_irqtrace_events._entry_ptr.21, ptr @print_irqtrace_events._entry_ptr.24, ptr @print_irqtrace_events._entry_ptr.27, ptr @print_irqtrace_events._entry_ptr.30, ptr @print_kernel_ident._entry, ptr @print_kernel_ident._entry_ptr, ptr @print_lock._entry, ptr @print_lock._entry.338, ptr @print_lock._entry.341, ptr @print_lock._entry_ptr, ptr @print_lock._entry_ptr.340, ptr @print_lock._entry_ptr.343, ptr @print_lock_class_header._entry, ptr @print_lock_class_header._entry.150, ptr @print_lock_class_header._entry.153, ptr @print_lock_class_header._entry.156, ptr @print_lock_class_header._entry.159, ptr @print_lock_class_header._entry.162, ptr @print_lock_class_header._entry.165, ptr @print_lock_class_header._entry_ptr, ptr @print_lock_class_header._entry_ptr.152, ptr @print_lock_class_header._entry_ptr.155, ptr @print_lock_class_header._entry_ptr.158, ptr @print_lock_class_header._entry_ptr.161, ptr @print_lock_class_header._entry_ptr.164, ptr @print_lock_class_header._entry_ptr.167, ptr @print_lock_contention_bug._entry, ptr @print_lock_contention_bug._entry.683, ptr @print_lock_contention_bug._entry.686, ptr @print_lock_contention_bug._entry.689, ptr @print_lock_contention_bug._entry.692, ptr @print_lock_contention_bug._entry.695, ptr @print_lock_contention_bug._entry.697, ptr @print_lock_contention_bug._entry.700, ptr @print_lock_contention_bug._entry.702, ptr @print_lock_contention_bug._entry_ptr, ptr @print_lock_contention_bug._entry_ptr.685, ptr @print_lock_contention_bug._entry_ptr.688, ptr @print_lock_contention_bug._entry_ptr.691, ptr @print_lock_contention_bug._entry_ptr.694, ptr @print_lock_contention_bug._entry_ptr.696, ptr @print_lock_contention_bug._entry_ptr.699, ptr @print_lock_contention_bug._entry_ptr.701, ptr @print_lock_contention_bug._entry_ptr.703, ptr @print_lock_invalid_wait_context._entry, ptr @print_lock_invalid_wait_context._entry.437, ptr @print_lock_invalid_wait_context._entry.439, ptr @print_lock_invalid_wait_context._entry.442, ptr @print_lock_invalid_wait_context._entry.444, ptr @print_lock_invalid_wait_context._entry.447, ptr @print_lock_invalid_wait_context._entry.450, ptr @print_lock_invalid_wait_context._entry.453, ptr @print_lock_invalid_wait_context._entry_ptr, ptr @print_lock_invalid_wait_context._entry_ptr.438, ptr @print_lock_invalid_wait_context._entry_ptr.441, ptr @print_lock_invalid_wait_context._entry_ptr.443, ptr @print_lock_invalid_wait_context._entry_ptr.446, ptr @print_lock_invalid_wait_context._entry_ptr.449, ptr @print_lock_invalid_wait_context._entry_ptr.452, ptr @print_lock_invalid_wait_context._entry_ptr.455, ptr @print_lock_name._entry, ptr @print_lock_name._entry.170, ptr @print_lock_name._entry_ptr, ptr @print_lock_name._entry_ptr.172, ptr @print_lock_nested_lock_not_held._entry, ptr @print_lock_nested_lock_not_held._entry.457, ptr @print_lock_nested_lock_not_held._entry.460, ptr @print_lock_nested_lock_not_held._entry.463, ptr @print_lock_nested_lock_not_held._entry.466, ptr @print_lock_nested_lock_not_held._entry.468, ptr @print_lock_nested_lock_not_held._entry.471, ptr @print_lock_nested_lock_not_held._entry.474, ptr @print_lock_nested_lock_not_held._entry.476, ptr @print_lock_nested_lock_not_held._entry.478, ptr @print_lock_nested_lock_not_held._entry_ptr, ptr @print_lock_nested_lock_not_held._entry_ptr.459, ptr @print_lock_nested_lock_not_held._entry_ptr.462, ptr @print_lock_nested_lock_not_held._entry_ptr.465, ptr @print_lock_nested_lock_not_held._entry_ptr.467, ptr @print_lock_nested_lock_not_held._entry_ptr.470, ptr @print_lock_nested_lock_not_held._entry_ptr.473, ptr @print_lock_nested_lock_not_held._entry_ptr.475, ptr @print_lock_nested_lock_not_held._entry_ptr.477, ptr @print_lock_nested_lock_not_held._entry_ptr.479, ptr @print_lockdep_cache._entry, ptr @print_lockdep_cache._entry_ptr, ptr @print_lockdep_off._entry, ptr @print_lockdep_off._entry.200, ptr @print_lockdep_off._entry.203, ptr @print_lockdep_off._entry_ptr, ptr @print_lockdep_off._entry_ptr.202, ptr @print_lockdep_off._entry_ptr.205, ptr @print_shortest_lock_dependencies, ptr @print_shortest_lock_dependencies._entry, ptr @print_shortest_lock_dependencies._entry.6, ptr @print_shortest_lock_dependencies._entry.9, ptr @print_shortest_lock_dependencies._entry_ptr, ptr @print_shortest_lock_dependencies._entry_ptr.11, ptr @print_shortest_lock_dependencies._entry_ptr.8, ptr @print_shortest_lock_dependencies_backwards, ptr @print_shortest_lock_dependencies_backwards._entry, ptr @print_shortest_lock_dependencies_backwards._entry.13, ptr @print_shortest_lock_dependencies_backwards._entry.15, ptr @print_shortest_lock_dependencies_backwards._entry_ptr, ptr @print_shortest_lock_dependencies_backwards._entry_ptr.14, ptr @print_shortest_lock_dependencies_backwards._entry_ptr.16, ptr @print_unlock_imbalance_bug._entry, ptr @print_unlock_imbalance_bug._entry.384, ptr @print_unlock_imbalance_bug._entry.387, ptr @print_unlock_imbalance_bug._entry.390, ptr @print_unlock_imbalance_bug._entry.393, ptr @print_unlock_imbalance_bug._entry.396, ptr @print_unlock_imbalance_bug._entry.400, ptr @print_unlock_imbalance_bug._entry.403, ptr @print_unlock_imbalance_bug._entry.405, ptr @print_unlock_imbalance_bug._entry_ptr, ptr @print_unlock_imbalance_bug._entry_ptr.386, ptr @print_unlock_imbalance_bug._entry_ptr.389, ptr @print_unlock_imbalance_bug._entry_ptr.392, ptr @print_unlock_imbalance_bug._entry_ptr.395, ptr @print_unlock_imbalance_bug._entry_ptr.398, ptr @print_unlock_imbalance_bug._entry_ptr.402, ptr @print_unlock_imbalance_bug._entry_ptr.404, ptr @print_unlock_imbalance_bug._entry_ptr.406, ptr @print_usage_bug._entry, ptr @print_usage_bug._entry.207, ptr @print_usage_bug._entry.210, ptr @print_usage_bug._entry.213, ptr @print_usage_bug._entry.216, ptr @print_usage_bug._entry.219, ptr @print_usage_bug._entry.222, ptr @print_usage_bug._entry.225, ptr @print_usage_bug._entry.228, ptr @print_usage_bug._entry_ptr, ptr @print_usage_bug._entry_ptr.209, ptr @print_usage_bug._entry_ptr.212, ptr @print_usage_bug._entry_ptr.215, ptr @print_usage_bug._entry_ptr.218, ptr @print_usage_bug._entry_ptr.221, ptr @print_usage_bug._entry_ptr.224, ptr @print_usage_bug._entry_ptr.227, ptr @print_usage_bug._entry_ptr.229, ptr @print_usage_bug_scenario._entry, ptr @print_usage_bug_scenario._entry.232, ptr @print_usage_bug_scenario._entry.235, ptr @print_usage_bug_scenario._entry.238, ptr @print_usage_bug_scenario._entry.241, ptr @print_usage_bug_scenario._entry.244, ptr @print_usage_bug_scenario._entry.247, ptr @print_usage_bug_scenario._entry.250, ptr @print_usage_bug_scenario._entry.252, ptr @print_usage_bug_scenario._entry_ptr, ptr @print_usage_bug_scenario._entry_ptr.234, ptr @print_usage_bug_scenario._entry_ptr.237, ptr @print_usage_bug_scenario._entry_ptr.240, ptr @print_usage_bug_scenario._entry_ptr.243, ptr @print_usage_bug_scenario._entry_ptr.246, ptr @print_usage_bug_scenario._entry_ptr.249, ptr @print_usage_bug_scenario._entry_ptr.251, ptr @print_usage_bug_scenario._entry_ptr.254, ptr @register_lock_class._entry, ptr @register_lock_class._entry.349, ptr @register_lock_class._entry.351, ptr @register_lock_class._entry_ptr, ptr @register_lock_class._entry_ptr.350, ptr @register_lock_class._entry_ptr.353, ptr @str__lock__trace_system_name, ptr @trace_event_fields_lock_acquire, ptr @trace_event_type_funcs_lock_acquire, ptr @print_fmt_lock_acquire, ptr @trace_event_fields_lock, ptr @trace_event_type_funcs_lock, ptr @print_fmt_lock, ptr @prove_locking, ptr @lock_stat, ptr @lock_classes, ptr @all_lock_classes, ptr @lockdep_selftest_task_struct, ptr @stack_trace_hash, ptr @check_consistency, ptr @.str, ptr @.str.1, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.7, ptr @.str.10, ptr @.str.12, ptr @chain_hlocks, ptr @lock_chains_in_use, ptr @.str.17, ptr @.str.18, ptr @.str.20, ptr @.str.23, ptr @.str.26, ptr @.str.29, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.41, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @nr_hardirq_chains, ptr @nr_softirq_chains, ptr @nr_process_chains, ptr @chainhash_table, ptr @.str.51, ptr @.str.52, ptr @.str.54, ptr @.str.57, ptr @.str.60, ptr @.str.63, ptr @.str.66, ptr @.str.69, ptr @.str.72, ptr @.str.75, ptr @.str.78, ptr @.str.81, ptr @.str.83, ptr @.str.84, ptr @.str.86, ptr @.str.89, ptr @.str.92, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.98, ptr @.str.101, ptr @.str.104, ptr @.str.107, ptr @.str.109, ptr @.str.111, ptr @.str.114, ptr @.str.117, ptr @.str.120, ptr @.str.123, ptr @.str.126, ptr @.str.128, ptr @.str.129, ptr @.str.131, ptr @.str.134, ptr @nr_list_entries, ptr @nr_lock_classes, ptr @nr_zapped_classes, ptr @nr_stack_trace_entries, ptr @max_lockdep_depth, ptr @max_bfs_queue_depth, ptr @lock_chains, ptr @nr_zapped_lock_chains, ptr @nr_free_chain_hlocks, ptr @nr_lost_chain_hlocks, ptr @nr_large_chain_blocks, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @lock_keys_hash, ptr @lock_cq, ptr @.str.147, ptr @lockdep_dependency_gen_id, ptr @.str.148, ptr @.str.149, ptr @.str.151, ptr @.str.154, ptr @.str.157, ptr @usage_str, ptr @.str.160, ptr @.str.163, ptr @.str.166, ptr @.str.168, ptr @.str.169, ptr @.str.171, ptr @.str.173, ptr @.str.174, ptr @.str.178, ptr @.str.181, ptr @.str.183, ptr @.str.184, ptr @.str.185, ptr @.str.186, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.190, ptr @.str.191, ptr @.str.192, ptr @.str.193, ptr @.str.195, ptr @.str.196, ptr @lock_classes_in_use, ptr @stack_trace, ptr @.str.197, ptr @.str.198, ptr @.str.199, ptr @.str.201, ptr @.str.204, ptr @.str.206, ptr @.str.208, ptr @.str.211, ptr @.str.214, ptr @.str.217, ptr @.str.220, ptr @.str.223, ptr @.str.226, ptr @.str.230, ptr @.str.231, ptr @.str.233, ptr @.str.236, ptr @.str.239, ptr @.str.242, ptr @.str.245, ptr @.str.248, ptr @.str.253, ptr @.str.255, ptr @.str.256, ptr @.str.257, ptr @.str.259, ptr @.str.262, ptr @.str.265, ptr @.str.268, ptr @.str.271, ptr @.str.274, ptr @.str.277, ptr @.str.282, ptr @.str.285, ptr @.str.289, ptr @.str.290, ptr @.str.292, ptr @.str.297, ptr @.str.300, ptr @.str.303, ptr @.str.306, ptr @.str.313, ptr @.str.316, ptr @state_rnames, ptr @state_names, ptr @.str.332, ptr @.str.333, ptr @.str.334, ptr @.str.335, ptr @state_verbose_f, ptr @.str.336, ptr @.str.337, ptr @.str.339, ptr @.str.342, ptr @classhash_table, ptr @free_lock_classes, ptr @.str.344, ptr @.str.347, ptr @.str.348, ptr @.str.352, ptr @.str.354, ptr @.str.355, ptr @.str.356, ptr @.str.358, ptr @.str.361, ptr @.str.362, ptr @.str.364, ptr @.str.367, ptr @.str.371, ptr @.str.372, ptr @.str.373, ptr @.str.374, ptr @.str.376, ptr @.str.378, ptr @.str.379, ptr @.str.380, ptr @.str.381, ptr @.str.382, ptr @.str.383, ptr @.str.385, ptr @.str.388, ptr @.str.391, ptr @.str.394, ptr @.str.397, ptr @.str.399, ptr @.str.401, ptr @.str.407, ptr @.str.408, ptr @.str.409, ptr @.str.410, ptr @.str.411, ptr @.str.412, ptr @.str.413, ptr @.str.414, ptr @.str.415, ptr @.str.416, ptr @.str.417, ptr @.str.418, ptr @.str.419, ptr @.str.420, ptr @.str.421, ptr @.str.426, ptr @.str.427, ptr @.str.429, ptr @.str.430, ptr @.str.432, ptr @.str.434, ptr @.str.436, ptr @.str.440, ptr @.str.445, ptr @.str.448, ptr @.str.451, ptr @.str.454, ptr @.str.456, ptr @.str.458, ptr @.str.461, ptr @.str.464, ptr @.str.469, ptr @.str.472, ptr @.str.480, ptr @.str.481, ptr @.str.483, ptr @.str.485, ptr @.str.486, ptr @.str.487, ptr @.str.489, ptr @.str.492, ptr @.str.495, ptr @.str.498, ptr @.str.501, ptr @.str.504, ptr @.str.507, ptr @.str.511, ptr @.str.512, ptr @.str.513, ptr @.str.514, ptr @.str.515, ptr @.str.516, ptr @.str.519, ptr @.str.520, ptr @chain_block_buckets, ptr @.str.521, ptr @.str.523, ptr @.str.526, ptr @.str.529, ptr @.str.532, ptr @.str.535, ptr @.str.541, ptr @.str.557, ptr @.str.559, ptr @.str.561, ptr @.str.562, ptr @.str.564, ptr @.str.566, ptr @.str.568, ptr @.str.571, ptr @.str.574, ptr @.str.581, ptr @.str.584, ptr @.str.586, ptr @.str.587, ptr @.str.589, ptr @.str.591, ptr @.str.622, ptr @.str.623, ptr @.str.624, ptr @.str.626, ptr @.str.629, ptr @.str.632, ptr @.str.635, ptr @.str.638, ptr @.str.641, ptr @.str.644, ptr @.str.649, ptr @.str.652, ptr @.str.655, ptr @.str.658, ptr @.str.661, ptr @.str.666, ptr @.str.669, ptr @.str.672, ptr @list_entries_in_use, ptr @.str.676, ptr @list_entries, ptr @.str.677, ptr @.str.678, ptr @.str.679, ptr @.str.680, ptr @.str.681, ptr @.str.682, ptr @.str.684, ptr @.str.687, ptr @.str.690, ptr @.str.693, ptr @.str.698, ptr @delayed_free, ptr @check_data_structures.once, ptr @.str.704, ptr @.str.705, ptr @.str.706, ptr @.str.708, ptr @.str.711, ptr @.str.713, ptr @.str.714, ptr @.str.715, ptr @.str.716, ptr @.str.723, ptr @.str.725, ptr @.str.727, ptr @.str.730, ptr @.str.733, ptr @.str.736, ptr @.str.740, ptr @.str.742, ptr @.str.745, ptr @.str.748, ptr @.str.752, ptr @.str.753, ptr @.str.754, ptr @.str.755, ptr @.str.757, ptr @.str.759, ptr @.str.761, ptr @.str.763, ptr @.str.764, ptr @.str.765, ptr @.str.766], section "llvm.metadata"
@0 = internal global [621 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__lock__trace_system_name to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.767 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_lock_acquire to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_lock_acquire to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_lock_acquire to i32), i32 113, i32 160, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_lock_acquire to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.779 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_lock to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_lock to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.788 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_lock_release to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.793 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_lock_contended to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.796 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_lock_acquired to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @prove_locking to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.802 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lock_stat to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.803 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lock_classes to i32), i32 1081344, i32 1343488, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @all_lock_classes to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.809 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_selftest_task_struct to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.812 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @stack_trace_hash to i32), i32 65536, i32 81920, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.817 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_consistency to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_shortest_lock_dependencies._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.838 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.838 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.838 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.838 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_shortest_lock_dependencies._entry.6 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_shortest_lock_dependencies._entry.9 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.850 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.850 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_shortest_lock_dependencies_backwards._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.856 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.856 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_shortest_lock_dependencies_backwards._entry.13 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_shortest_lock_dependencies_backwards._entry.15 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.862 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @chain_hlocks to i32), i32 655360, i32 819200, i32 ptrtoint (ptr @___asan_gen_.863 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.865 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lock_chains_in_use to i32), i32 8192, i32 10240, i32 ptrtoint (ptr @___asan_gen_.866 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irqtrace_events._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irqtrace_events._entry.19 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.883 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.883 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irqtrace_events._entry.22 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.889 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.889 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irqtrace_events._entry.25 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.895 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.895 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irqtrace_events._entry.28 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.907 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.907 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.910 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.913 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.919 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.922 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.925 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_init_map_type._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.937 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.937 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.937 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.940 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.943 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nr_hardirq_chains to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.944 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.946 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nr_softirq_chains to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.949 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nr_process_chains to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.950 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.952 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @chainhash_table to i32), i32 131072, i32 163840, i32 ptrtoint (ptr @___asan_gen_.953 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.955 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.964 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 74, i32 128, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.964 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.964 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_init._entry.53 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.970 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.970 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_init._entry.56 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.976 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.976 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_init._entry.59 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_init._entry.62 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.988 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.988 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_init._entry.65 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_init._entry.68 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1000 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1000 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_init._entry.71 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1006 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1006 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_init._entry.74 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1012 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1012 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_init._entry.77 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1018 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1018 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_init._entry.80 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @debug_show_all_locks._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1033 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1033 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1033 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @debug_show_all_locks._entry.85 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1039 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1039 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @debug_show_all_locks._entry.88 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1045 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1045 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @debug_show_all_locks._entry.91 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @debug_show_held_locks._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1060 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1060 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1060 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_sys_exit._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1066 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1066 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_sys_exit._entry.97 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_sys_exit._entry.100 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_sys_exit._entry.103 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1084 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1084 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_sys_exit._entry.106 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1090 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1090 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_rcu_suspicious._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1096 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1096 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_rcu_suspicious._entry.110 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1102 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1102 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_rcu_suspicious._entry.113 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1108 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1108 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_rcu_suspicious._entry.116 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1114 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1114 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_rcu_suspicious._entry.119 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_rcu_suspicious._entry.122 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_rcu_suspicious._entry.125 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1138 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1138 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1138 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1138 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_rcu_suspicious._entry.130 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1144 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1144 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_rcu_suspicious._entry.133 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nr_list_entries to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1151 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1153 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nr_lock_classes to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1154 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1156 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nr_zapped_classes to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1157 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1159 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nr_stack_trace_entries to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1160 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1162 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @max_lockdep_depth to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1163 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1165 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @max_bfs_queue_depth to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1166 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1168 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lock_chains to i32), i32 1572864, i32 1835008, i32 ptrtoint (ptr @___asan_gen_.1169 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1171 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nr_zapped_lock_chains to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1172 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1174 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nr_free_chain_hlocks to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1175 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1177 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nr_lost_chain_hlocks to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1178 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1180 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nr_large_chain_blocks to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1181 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1183 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lock_keys_hash to i32), i32 16384, i32 20480, i32 ptrtoint (ptr @___asan_gen_.1217 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1219 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lock_cq to i32), i32 16392, i32 20512, i32 ptrtoint (ptr @___asan_gen_.1220 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1222 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1225 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_dependency_gen_id to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1226 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1228 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_class_header._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1237 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1237 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1237 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_class_header._entry.150 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1243 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1243 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_class_header._entry.153 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_class_header._entry.156 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1255 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1255 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @usage_str to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_class_header._entry.159 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1264 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1264 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_class_header._entry.162 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_class_header._entry.165 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1276 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1276 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_name._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_name._entry.170 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1291 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1291 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1300 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1303 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.184 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1330 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1333 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mark_lock._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lock_classes_in_use to i32), i32 1024, i32 1280, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1348 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @stack_trace to i32), i32 2097152, i32 2359296, i32 ptrtoint (ptr @___asan_gen_.1349 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1351 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lockdep_off._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lockdep_off._entry.200 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1369 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1369 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lockdep_off._entry.203 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_usage_bug._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_usage_bug._entry.207 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_usage_bug._entry.210 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_usage_bug._entry.213 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1399 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1399 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_usage_bug._entry.216 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_usage_bug._entry.219 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_usage_bug._entry.222 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_usage_bug._entry.225 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1423 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1423 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_usage_bug._entry.228 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_usage_bug_scenario._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_usage_bug_scenario._entry.232 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_usage_bug_scenario._entry.235 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.236 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_usage_bug_scenario._entry.238 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.239 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_usage_bug_scenario._entry.241 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_usage_bug_scenario._entry.244 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1465 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.245 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1465 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_usage_bug_scenario._entry.247 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.248 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_usage_bug_scenario._entry.250 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_usage_bug_scenario._entry.252 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.253 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.255 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.256 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1486 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_inversion_bug._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.257 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_inversion_bug._entry.258 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.259 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_inversion_bug._entry.261 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.262 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_inversion_bug._entry.264 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.265 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_inversion_bug._entry.267 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_inversion_bug._entry.270 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.271 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_inversion_bug._entry.273 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1528 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.274 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1528 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_inversion_bug._entry.276 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.277 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_inversion_bug._entry.279 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_inversion_bug._entry.281 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.282 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_inversion_bug._entry.284 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.285 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_inversion_bug._entry.287 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1552 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_lock_scenario._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.289 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.290 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_lock_scenario._entry.291 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.292 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_lock_scenario._entry.294 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_lock_scenario._entry.296 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1576 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.297 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1576 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_lock_scenario._entry.299 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1582 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.300 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1582 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_lock_scenario._entry.302 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.303 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_lock_scenario._entry.305 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.306 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_lock_scenario._entry.308 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_lock_scenario._entry.310 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_lock_scenario._entry.312 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.313 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_lock_scenario._entry.315 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.316 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_lock_scenario._entry.318 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1615 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_lock_scenario._entry.320 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1618 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_lock_scenario._entry.322 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_lock_scenario._entry.324 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_lock_scenario._entry.326 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_lock_scenario._entry.328 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_irq_lock_scenario._entry.330 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @state_rnames to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1634 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @state_names to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1637 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.332 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.333 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.334 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.335 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @state_verbose_f to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1652 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1663 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.336 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1663 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.337 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1663 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock._entry.338 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.339 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock._entry.341 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.342 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @classhash_table to i32), i32 16384, i32 20480, i32 ptrtoint (ptr @___asan_gen_.1676 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1678 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @free_lock_classes to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1679 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.344 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @register_lock_class._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1693 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.347 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1693 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.348 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1693 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @register_lock_class._entry.349 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @register_lock_class._entry.351 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1702 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.352 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1702 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.354 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @look_up_lock_class._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.355 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.356 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @look_up_lock_class._entry.357 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1720 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.358 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1720 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @assign_lock_key._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.361 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.362 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @assign_lock_key._entry.363 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.364 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @assign_lock_key._entry.366 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.367 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @assign_lock_key._entry.369 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1744 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.371 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1747 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_flags._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1756 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.372 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1756 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.373 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1756 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.374 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_flags._entry.375 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.376 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1765 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.378 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1768 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.379 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1771 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.380 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.381 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1777 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.382 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1780 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_unlock_imbalance_bug._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1786 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.383 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1786 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_unlock_imbalance_bug._entry.384 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.385 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_unlock_imbalance_bug._entry.387 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1798 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.388 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1798 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_unlock_imbalance_bug._entry.390 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.391 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_unlock_imbalance_bug._entry.393 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1810 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.394 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1810 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_unlock_imbalance_bug._entry.396 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1816 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.397 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1816 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.399 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1819 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_unlock_imbalance_bug._entry.400 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1825 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.401 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1825 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_unlock_imbalance_bug._entry.403 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_unlock_imbalance_bug._entry.405 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lockdep_cache._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.407 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_ip_sym._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.408 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.409 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.410 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.411 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1852 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.412 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1855 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.413 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1858 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.414 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.415 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1864 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.416 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.417 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.418 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.419 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1876 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.420 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1882 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.421 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1882 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.426 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1885 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.427 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.429 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.430 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1894 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.432 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.434 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_invalid_wait_context._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.436 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_invalid_wait_context._entry.437 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_invalid_wait_context._entry.439 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.440 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_invalid_wait_context._entry.442 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1918 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_invalid_wait_context._entry.444 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1924 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.445 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1924 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_invalid_wait_context._entry.447 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1930 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.448 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1930 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_invalid_wait_context._entry.450 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1936 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.451 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1936 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_invalid_wait_context._entry.453 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1942 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.454 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1942 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_nested_lock_not_held._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1948 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.456 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1948 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_nested_lock_not_held._entry.457 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.458 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_nested_lock_not_held._entry.460 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.461 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_nested_lock_not_held._entry.463 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.464 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_nested_lock_not_held._entry.466 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1969 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_nested_lock_not_held._entry.468 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1975 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.469 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1975 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_nested_lock_not_held._entry.471 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1981 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.472 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1981 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_nested_lock_not_held._entry.474 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1984 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_nested_lock_not_held._entry.476 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1987 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_nested_lock_not_held._entry.478 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1990 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lookup_chain_cache_add._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.480 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.481 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lookup_chain_cache_add._entry.482 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.483 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.485 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.486 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2011 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_collision._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2017 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.487 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2017 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_collision._entry.488 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2023 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.489 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2023 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_collision._entry.491 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2029 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.492 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2029 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_collision._entry.494 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2035 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.495 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2035 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_collision._entry.497 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2041 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.498 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2041 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_collision._entry.500 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2047 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.501 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2047 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_collision._entry.503 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2053 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.504 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2053 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_collision._entry.506 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2059 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.507 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2059 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_collision._entry.509 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_chain_keys_held_locks._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2071 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.511 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2071 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.512 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2071 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_chain_key_iteration._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2080 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.513 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2080 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.514 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2080 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_chain_keys_chain._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2089 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.515 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2089 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.516 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2089 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_chain_keys_chain._entry.517 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2092 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.519 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.520 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @chain_block_buckets to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2101 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_deadlock_bug._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2107 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.521 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2107 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_deadlock_bug._entry.522 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2113 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.523 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2113 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_deadlock_bug._entry.525 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.526 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_deadlock_bug._entry.528 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.529 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2125 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_deadlock_bug._entry.531 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.532 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_deadlock_bug._entry.534 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2137 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.535 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2137 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_deadlock_bug._entry.537 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_deadlock_bug._entry.539 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2143 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_deadlock_scenario._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2149 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.541 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2149 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_deadlock_scenario._entry.542 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2152 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_deadlock_scenario._entry.544 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2155 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_deadlock_scenario._entry.546 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2158 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_deadlock_scenario._entry.548 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2161 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_deadlock_scenario._entry.550 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_deadlock_scenario._entry.552 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2167 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_deadlock_scenario._entry.554 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2170 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_deadlock_scenario._entry.556 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.557 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2176 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.559 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2179 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_bug._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.561 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.562 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2188 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_bug._entry.563 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2194 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.564 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2194 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_bug_header._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.566 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_bug_header._entry.567 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2206 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.568 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2206 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_bug_header._entry.570 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2212 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.571 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2212 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_bug_header._entry.573 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.574 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_bug_header._entry.576 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_bug_header._entry.578 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2224 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_bug_header._entry.580 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2230 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.581 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2230 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_bug_header._entry.583 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.584 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_bug_entry._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.586 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.587 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_bug_entry._entry.588 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.589 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_lock_scenario._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2257 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.591 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2257 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_lock_scenario._entry.592 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2260 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_lock_scenario._entry.594 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_lock_scenario._entry.596 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2266 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_lock_scenario._entry.598 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2269 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_lock_scenario._entry.600 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2272 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_lock_scenario._entry.602 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2275 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_lock_scenario._entry.604 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2278 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_lock_scenario._entry.606 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_lock_scenario._entry.608 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2284 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_lock_scenario._entry.610 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2287 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_lock_scenario._entry.612 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_lock_scenario._entry.614 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2293 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_lock_scenario._entry.616 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2296 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_lock_scenario._entry.618 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_circular_lock_scenario._entry.620 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.622 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.623 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2308 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_irq_dependency._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2314 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.624 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2314 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_irq_dependency._entry.625 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.626 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_irq_dependency._entry.628 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2326 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.629 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2326 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_irq_dependency._entry.631 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.632 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_irq_dependency._entry.634 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.635 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_irq_dependency._entry.637 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.638 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_irq_dependency._entry.640 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2350 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.641 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2350 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_irq_dependency._entry.643 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2356 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.644 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2356 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_irq_dependency._entry.646 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2359 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_irq_dependency._entry.648 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2365 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.649 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2365 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_irq_dependency._entry.651 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2371 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.652 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2371 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_irq_dependency._entry.654 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2377 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.655 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2377 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_irq_dependency._entry.657 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.658 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2383 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_irq_dependency._entry.660 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2389 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.661 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2389 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_irq_dependency._entry.663 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2392 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_irq_dependency._entry.665 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.666 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_irq_dependency._entry.668 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.669 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_irq_dependency._entry.671 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.672 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_bad_irq_dependency._entry.674 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2413 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @list_entries_in_use to i32), i32 4096, i32 5120, i32 ptrtoint (ptr @___asan_gen_.2414 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.676 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @list_entries to i32), i32 917504, i32 1146880, i32 ptrtoint (ptr @___asan_gen_.2420 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.677 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2425 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.678 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.679 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2431 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.680 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2434 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.681 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_contention_bug._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.682 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_contention_bug._entry.683 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.684 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_contention_bug._entry.686 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.687 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_contention_bug._entry.689 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.690 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_contention_bug._entry.692 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.693 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_contention_bug._entry.695 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_contention_bug._entry.697 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.698 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_contention_bug._entry.700 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_lock_contention_bug._entry.702 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @delayed_free to i32), i32 16416, i32 20512, i32 ptrtoint (ptr @___asan_gen_.2483 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2485 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_data_structures.once to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.2486 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.704 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2495 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.705 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2495 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.706 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2495 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.708 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.711 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @class_lock_list_valid._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.713 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.714 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_lock_chain_key._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.715 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.716 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.723 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_freed_lock_bug._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2528 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.725 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2528 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_freed_lock_bug._entry.726 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.727 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_freed_lock_bug._entry.729 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.730 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_freed_lock_bug._entry.732 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2546 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.733 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2546 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_freed_lock_bug._entry.735 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2552 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.736 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2552 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_freed_lock_bug._entry.738 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2555 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_held_locks_bug._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.740 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_held_locks_bug._entry.741 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.742 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_held_locks_bug._entry.744 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.745 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_held_locks_bug._entry.747 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.748 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_held_locks_bug._entry.750 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2582 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.752 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.753 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_print_held_locks._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.754 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.755 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_print_held_locks._entry.756 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.757 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.759 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lockdep_print_held_locks._entry.760 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.761 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.763 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2615 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_kernel_ident._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2616 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.764 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.765 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.766 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.2625 to i32), i32 ptrtoint (ptr @___asan_gen_.2626 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2627 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_lock_acquire(ptr nocapture readnone %__data, ptr noundef %lock, i32 noundef %subclass, i32 noundef %trylock, i32 noundef %read, i32 noundef %check, ptr noundef %next_lock, i32 noundef %ip) #0 align 64 {
entry:
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_lock_acquire, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %lock, i32 noundef %subclass, i32 noundef %trylock, i32 noundef %read, i32 noundef %check, ptr noundef %next_lock, i32 noundef %ip) #28
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_lock_release(ptr nocapture readnone %__data, ptr noundef %lock, i32 noundef %ip) #0 align 64 {
entry:
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_lock_release, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %lock, i32 noundef %ip) #28
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_lock_contended(ptr nocapture readnone %__data, ptr noundef %lock, i32 noundef %ip) #0 align 64 {
entry:
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_lock_contended, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %lock, i32 noundef %ip) #28
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_lock_acquired(ptr nocapture readnone %__data, ptr noundef %lock, i32 noundef %ip) #0 align 64 {
entry:
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_lock_acquired, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %lock, i32 noundef %ip) #28
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_lock_acquire(ptr noundef %__data, ptr noundef %lock, i32 noundef %subclass, i32 noundef %trylock, i32 noundef %read, i32 noundef %check, ptr nocapture noundef readnone %next_lock, i32 noundef %ip) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #28
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !1500

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !1501

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #28
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %name.i = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 2
  %3 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %name.i, align 4
  %tobool.not.i30 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i30, ptr @.str.136, ptr %4
  %call.i31 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #29
  %add = add i32 %call.i31, 21
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #28
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %add.i = shl i32 %call.i31, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_lock_acquire, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %tobool6.not = icmp ne i32 %trylock, 0
  %cond = zext i1 %tobool6.not to i32
  %tobool7.not = icmp eq i32 %read, 0
  %cond8 = select i1 %tobool7.not, i32 0, i32 2
  %or = or i32 %cond8, %cond
  %flags = getelementptr inbounds %struct.trace_event_raw_lock_acquire, ptr %call3, i32 0, i32 1
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %or, ptr %flags, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %7 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %name.i, align 4
  %tobool11.not = icmp eq ptr %8, null
  %spec.select = select i1 %tobool11.not, ptr @.str.136, ptr %8
  %call14 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #30
  %lockdep_addr = getelementptr inbounds %struct.trace_event_raw_lock_acquire, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %lockdep_addr to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %lock, ptr %lockdep_addr, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #28
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #28
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_lock_acquire(ptr noundef %__data, ptr noundef %lock, i32 noundef %subclass, i32 noundef %trylock, i32 noundef %read, i32 noundef %check, ptr nocapture noundef readnone %next_lock, i32 noundef %ip) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #28
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1502
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #28
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1502
  %name.i = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 2
  %2 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %name.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.136, ptr %3
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #29
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65556
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i54.not = icmp eq ptr %17, null
  br i1 %tobool.not.i54.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %add12 = add i32 %call.i, 32
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #28
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #28
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #28
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !1491) #28
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_lock_acquire, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %tobool17.not = icmp ne i32 %trylock, 0
  %cond = zext i1 %tobool17.not to i32
  %tobool18.not = icmp eq i32 %read, 0
  %cond19 = select i1 %tobool18.not, i32 0, i32 2
  %or = or i32 %cond19, %cond
  %flags = getelementptr inbounds %struct.trace_event_raw_lock_acquire, ptr %call13, i32 0, i32 1
  %30 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %or, ptr %flags, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %31 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %name.i, align 4
  %tobool23.not = icmp eq ptr %32, null
  %spec.select = select i1 %tobool23.not, ptr @.str.136, ptr %32
  %call26 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #30
  %lockdep_addr = getelementptr inbounds %struct.trace_event_raw_lock_acquire, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %lockdep_addr to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %lock, ptr %lockdep_addr, align 4
  %34 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rctx, align 4
  %36 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %35, ptr noundef %__data, i64 noundef 1, ptr noundef %37, ptr noundef %13, ptr noundef null) #28
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #28
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #28
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_lock(ptr noundef %__data, ptr noundef %lock, i32 noundef %ip) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #28
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !1500

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !1501

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #28
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %name.i = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 2
  %3 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %name.i, align 4
  %tobool.not.i23 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i23, ptr @.str.136, ptr %4
  %call.i24 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #29
  %add = add i32 %call.i24, 17
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #28
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %add.i = shl i32 %call.i24, 16
  %or.i = add i32 %add.i, 65552
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_lock, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 16
  %6 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %name.i, align 4
  %tobool8.not = icmp eq ptr %7, null
  %spec.select = select i1 %tobool8.not, ptr @.str.136, ptr %7
  %call10 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #30
  %lockdep_addr = getelementptr inbounds %struct.trace_event_raw_lock, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %lockdep_addr to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %lock, ptr %lockdep_addr, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #28
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #28
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_lock(ptr noundef %__data, ptr noundef %lock, i32 noundef %ip) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #28
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1502
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #28
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1502
  %name.i = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 2
  %2 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %name.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.136, ptr %3
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #29
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65552
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i47.not = icmp eq ptr %17, null
  br i1 %tobool.not.i47.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %add12 = add i32 %call.i, 28
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #28
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #28
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #28
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !1491) #28
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_lock, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 16
  %30 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %name.i, align 4
  %tobool20.not = icmp eq ptr %31, null
  %spec.select = select i1 %tobool20.not, ptr @.str.136, ptr %31
  %call22 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #30
  %lockdep_addr = getelementptr inbounds %struct.trace_event_raw_lock, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %lockdep_addr to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %lock, ptr %lockdep_addr, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %13, ptr noundef null) #28
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #28
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #28
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_lock_acquire(ptr noundef %__data, ptr noundef %lock, i32 noundef %subclass, i32 noundef %trylock, i32 noundef %read, i32 noundef %check, ptr noundef %next_lock, i32 noundef %ip) #0 align 64 {
entry:
  %0 = ptrtoint ptr %lock to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %subclass to i64
  %conv8 = zext i32 %trylock to i64
  %conv12 = zext i32 %read to i64
  %conv16 = zext i32 %check to i64
  %1 = ptrtoint ptr %next_lock to i32
  %conv20 = zext i32 %1 to i64
  %conv24 = zext i32 %ip to i64
  tail call void @bpf_trace_run7(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20, i64 noundef %conv24) #28
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_lock(ptr noundef %__data, ptr noundef %lock, i32 noundef %ip) #0 align 64 {
entry:
  %0 = ptrtoint ptr %lock to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %ip to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #28
  ret void
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lock_stats(ptr noalias nocapture sret(%struct.lock_class_stats) align 8 %agg.result, ptr noundef %class) local_unnamed_addr #3 align 64 {
entry:
  %0 = call ptr @memset(ptr %agg.result, i32 0, i32 176)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %1 = load i32, ptr @nr_cpu_ids, align 4
  %call117 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #31
  %cmp118 = icmp ult i32 %call117, %1
  br i1 %cmp118, label %for.body.lr.ph, label %for.end34

for.body.lr.ph:                                   ; preds = %entry
  %sub.ptr.lhs.cast = ptrtoint ptr %class to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, ptrtoint (ptr @lock_classes to i32)
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 132
  %read_waittime20 = getelementptr inbounds %struct.lock_class_stats, ptr %agg.result, i32 0, i32 2
  %max1.i = getelementptr inbounds %struct.lock_class_stats, ptr %agg.result, i32 0, i32 2, i32 1
  %nr8.i = getelementptr inbounds %struct.lock_class_stats, ptr %agg.result, i32 0, i32 2, i32 3
  %total14.i = getelementptr inbounds %struct.lock_class_stats, ptr %agg.result, i32 0, i32 2, i32 2
  %write_waittime21 = getelementptr inbounds %struct.lock_class_stats, ptr %agg.result, i32 0, i32 3
  %max1.i57 = getelementptr inbounds %struct.lock_class_stats, ptr %agg.result, i32 0, i32 3, i32 1
  %nr8.i63 = getelementptr inbounds %struct.lock_class_stats, ptr %agg.result, i32 0, i32 3, i32 3
  %total14.i68 = getelementptr inbounds %struct.lock_class_stats, ptr %agg.result, i32 0, i32 3, i32 2
  %read_holdtime22 = getelementptr inbounds %struct.lock_class_stats, ptr %agg.result, i32 0, i32 4
  %max1.i77 = getelementptr inbounds %struct.lock_class_stats, ptr %agg.result, i32 0, i32 4, i32 1
  %nr8.i83 = getelementptr inbounds %struct.lock_class_stats, ptr %agg.result, i32 0, i32 4, i32 3
  %total14.i88 = getelementptr inbounds %struct.lock_class_stats, ptr %agg.result, i32 0, i32 4, i32 2
  %write_holdtime23 = getelementptr inbounds %struct.lock_class_stats, ptr %agg.result, i32 0, i32 5
  %max1.i97 = getelementptr inbounds %struct.lock_class_stats, ptr %agg.result, i32 0, i32 5, i32 1
  %nr8.i103 = getelementptr inbounds %struct.lock_class_stats, ptr %agg.result, i32 0, i32 5, i32 3
  %total14.i108 = getelementptr inbounds %struct.lock_class_stats, ptr %agg.result, i32 0, i32 5, i32 2
  %arrayidx8.1 = getelementptr [4 x i32], ptr %agg.result, i32 0, i32 1
  %arrayidx8.2 = getelementptr [4 x i32], ptr %agg.result, i32 0, i32 2
  %arrayidx8.3 = getelementptr [4 x i32], ptr %agg.result, i32 0, i32 3
  %arrayidx15 = getelementptr %struct.lock_class_stats, ptr %agg.result, i32 0, i32 1, i32 0
  %arrayidx15.1 = getelementptr %struct.lock_class_stats, ptr %agg.result, i32 0, i32 1, i32 1
  %arrayidx15.2 = getelementptr %struct.lock_class_stats, ptr %agg.result, i32 0, i32 1, i32 2
  %arrayidx15.3 = getelementptr %struct.lock_class_stats, ptr %agg.result, i32 0, i32 1, i32 3
  %arrayidx29 = getelementptr %struct.lock_class_stats, ptr %agg.result, i32 0, i32 6, i32 0
  %arrayidx29.1 = getelementptr %struct.lock_class_stats, ptr %agg.result, i32 0, i32 6, i32 1
  %arrayidx29.2 = getelementptr %struct.lock_class_stats, ptr %agg.result, i32 0, i32 6, i32 2
  %arrayidx29.3 = getelementptr %struct.lock_class_stats, ptr %agg.result, i32 0, i32 6, i32 3
  br label %for.body

for.body:                                         ; preds = %lock_time_add.exit113, %for.body.lr.ph
  %call119 = phi i32 [ %call117, %for.body.lr.ph ], [ %call, %lock_time_add.exit113 ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call119
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx, align 4
  %add = add i32 %3, ptrtoint (ptr @cpu_lock_stats to i32)
  %4 = inttoptr i32 %add to ptr
  %arrayidx2 = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div
  %5 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx2, align 4
  %7 = ptrtoint ptr %agg.result to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %agg.result, align 8
  %add9 = add i32 %8, %6
  store i32 %add9, ptr %agg.result, align 8
  %arrayidx6.1 = getelementptr [4 x i32], ptr %arrayidx2, i32 0, i32 1
  %9 = ptrtoint ptr %arrayidx6.1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx6.1, align 4
  %11 = ptrtoint ptr %arrayidx8.1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx8.1, align 4
  %add9.1 = add i32 %12, %10
  store i32 %add9.1, ptr %arrayidx8.1, align 4
  %arrayidx6.2 = getelementptr [4 x i32], ptr %arrayidx2, i32 0, i32 2
  %13 = ptrtoint ptr %arrayidx6.2 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx6.2, align 4
  %15 = ptrtoint ptr %arrayidx8.2 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx8.2, align 8
  %add9.2 = add i32 %16, %14
  store i32 %add9.2, ptr %arrayidx8.2, align 8
  %arrayidx6.3 = getelementptr [4 x i32], ptr %arrayidx2, i32 0, i32 3
  %17 = ptrtoint ptr %arrayidx6.3 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx6.3, align 4
  %19 = ptrtoint ptr %arrayidx8.3 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx8.3, align 4
  %add9.3 = add i32 %20, %18
  store i32 %add9.3, ptr %arrayidx8.3, align 4
  %arrayidx13 = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 1, i32 0
  %21 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx13, align 4
  %23 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx15, align 8
  %add16 = add i32 %24, %22
  store i32 %add16, ptr %arrayidx15, align 8
  %arrayidx13.1 = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 1, i32 1
  %25 = ptrtoint ptr %arrayidx13.1 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %arrayidx13.1, align 4
  %27 = ptrtoint ptr %arrayidx15.1 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx15.1, align 4
  %add16.1 = add i32 %28, %26
  store i32 %add16.1, ptr %arrayidx15.1, align 4
  %arrayidx13.2 = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 1, i32 2
  %29 = ptrtoint ptr %arrayidx13.2 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %arrayidx13.2, align 4
  %31 = ptrtoint ptr %arrayidx15.2 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %arrayidx15.2, align 8
  %add16.2 = add i32 %32, %30
  store i32 %add16.2, ptr %arrayidx15.2, align 8
  %arrayidx13.3 = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 1, i32 3
  %33 = ptrtoint ptr %arrayidx13.3 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx13.3, align 4
  %35 = ptrtoint ptr %arrayidx15.3 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %arrayidx15.3, align 4
  %add16.3 = add i32 %36, %34
  store i32 %add16.3, ptr %arrayidx15.3, align 4
  %read_waittime = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 2
  %nr.i = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 2, i32 3
  %37 = ptrtoint ptr %nr.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %nr.i, align 8
  %tobool.not.i = icmp eq i32 %38, 0
  br i1 %tobool.not.i, label %lock_time_add.exit, label %if.end.i

if.end.i:                                         ; preds = %for.body
  %max.i = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 2, i32 1
  %39 = ptrtoint ptr %max.i to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %max.i, align 8
  %41 = ptrtoint ptr %max1.i to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %max1.i, align 8
  %cmp.i = icmp sgt i64 %40, %42
  br i1 %cmp.i, label %if.then2.i, label %if.end5.i

if.then2.i:                                       ; preds = %if.end.i
  %43 = ptrtoint ptr %max1.i to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 %40, ptr %max1.i, align 8
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then2.i, %if.end.i
  %44 = ptrtoint ptr %read_waittime to i32
  call void @__asan_load8_noabort(i32 %44)
  %45 = load i64, ptr %read_waittime, align 8
  %46 = ptrtoint ptr %read_waittime20 to i32
  call void @__asan_load8_noabort(i32 %46)
  %47 = load i64, ptr %read_waittime20, align 8
  %cmp7.i = icmp slt i64 %45, %47
  br i1 %cmp7.i, label %if.then10.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end5.i
  %48 = ptrtoint ptr %nr8.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %nr8.i, align 8
  %tobool9.not.i = icmp eq i32 %49, 0
  br i1 %tobool9.not.i, label %if.then10.i, label %if.end13.i

if.then10.i:                                      ; preds = %lor.lhs.false.i, %if.end5.i
  %50 = ptrtoint ptr %read_waittime20 to i32
  call void @__asan_store8_noabort(i32 %50)
  store i64 %45, ptr %read_waittime20, align 8
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.then10.i, %lor.lhs.false.i
  %total.i = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 2, i32 2
  %51 = ptrtoint ptr %total.i to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %total.i, align 8
  %53 = ptrtoint ptr %total14.i to i32
  call void @__asan_load8_noabort(i32 %53)
  %54 = load i64, ptr %total14.i, align 8
  %add.i = add i64 %54, %52
  store i64 %add.i, ptr %total14.i, align 8
  %55 = ptrtoint ptr %nr8.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %nr8.i, align 8
  %add17.i = add i32 %56, %38
  store i32 %add17.i, ptr %nr8.i, align 8
  br label %lock_time_add.exit

lock_time_add.exit:                               ; preds = %if.end13.i, %for.body
  %write_waittime = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 3
  %nr.i54 = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 3, i32 3
  %57 = ptrtoint ptr %nr.i54 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %nr.i54, align 8
  %tobool.not.i55 = icmp eq i32 %58, 0
  br i1 %tobool.not.i55, label %lock_time_add.exit73, label %if.end.i59

if.end.i59:                                       ; preds = %lock_time_add.exit
  %max.i56 = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 3, i32 1
  %59 = ptrtoint ptr %max.i56 to i32
  call void @__asan_load8_noabort(i32 %59)
  %60 = load i64, ptr %max.i56, align 8
  %61 = ptrtoint ptr %max1.i57 to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %max1.i57, align 8
  %cmp.i58 = icmp sgt i64 %60, %62
  br i1 %cmp.i58, label %if.then2.i60, label %if.end5.i62

if.then2.i60:                                     ; preds = %if.end.i59
  %63 = ptrtoint ptr %max1.i57 to i32
  call void @__asan_store8_noabort(i32 %63)
  store i64 %60, ptr %max1.i57, align 8
  br label %if.end5.i62

if.end5.i62:                                      ; preds = %if.then2.i60, %if.end.i59
  %64 = ptrtoint ptr %write_waittime to i32
  call void @__asan_load8_noabort(i32 %64)
  %65 = load i64, ptr %write_waittime, align 8
  %66 = ptrtoint ptr %write_waittime21 to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %write_waittime21, align 8
  %cmp7.i61 = icmp slt i64 %65, %67
  br i1 %cmp7.i61, label %if.then10.i66, label %lor.lhs.false.i65

lor.lhs.false.i65:                                ; preds = %if.end5.i62
  %68 = ptrtoint ptr %nr8.i63 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %nr8.i63, align 8
  %tobool9.not.i64 = icmp eq i32 %69, 0
  br i1 %tobool9.not.i64, label %if.then10.i66, label %if.end13.i72

if.then10.i66:                                    ; preds = %lor.lhs.false.i65, %if.end5.i62
  %70 = ptrtoint ptr %write_waittime21 to i32
  call void @__asan_store8_noabort(i32 %70)
  store i64 %65, ptr %write_waittime21, align 8
  br label %if.end13.i72

if.end13.i72:                                     ; preds = %if.then10.i66, %lor.lhs.false.i65
  %total.i67 = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 3, i32 2
  %71 = ptrtoint ptr %total.i67 to i32
  call void @__asan_load8_noabort(i32 %71)
  %72 = load i64, ptr %total.i67, align 8
  %73 = ptrtoint ptr %total14.i68 to i32
  call void @__asan_load8_noabort(i32 %73)
  %74 = load i64, ptr %total14.i68, align 8
  %add.i69 = add i64 %74, %72
  store i64 %add.i69, ptr %total14.i68, align 8
  %75 = ptrtoint ptr %nr8.i63 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %nr8.i63, align 8
  %add17.i71 = add i32 %76, %58
  store i32 %add17.i71, ptr %nr8.i63, align 8
  br label %lock_time_add.exit73

lock_time_add.exit73:                             ; preds = %if.end13.i72, %lock_time_add.exit
  %read_holdtime = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 4
  %nr.i74 = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 4, i32 3
  %77 = ptrtoint ptr %nr.i74 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %nr.i74, align 8
  %tobool.not.i75 = icmp eq i32 %78, 0
  br i1 %tobool.not.i75, label %lock_time_add.exit93, label %if.end.i79

if.end.i79:                                       ; preds = %lock_time_add.exit73
  %max.i76 = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 4, i32 1
  %79 = ptrtoint ptr %max.i76 to i32
  call void @__asan_load8_noabort(i32 %79)
  %80 = load i64, ptr %max.i76, align 8
  %81 = ptrtoint ptr %max1.i77 to i32
  call void @__asan_load8_noabort(i32 %81)
  %82 = load i64, ptr %max1.i77, align 8
  %cmp.i78 = icmp sgt i64 %80, %82
  br i1 %cmp.i78, label %if.then2.i80, label %if.end5.i82

if.then2.i80:                                     ; preds = %if.end.i79
  %83 = ptrtoint ptr %max1.i77 to i32
  call void @__asan_store8_noabort(i32 %83)
  store i64 %80, ptr %max1.i77, align 8
  br label %if.end5.i82

if.end5.i82:                                      ; preds = %if.then2.i80, %if.end.i79
  %84 = ptrtoint ptr %read_holdtime to i32
  call void @__asan_load8_noabort(i32 %84)
  %85 = load i64, ptr %read_holdtime, align 8
  %86 = ptrtoint ptr %read_holdtime22 to i32
  call void @__asan_load8_noabort(i32 %86)
  %87 = load i64, ptr %read_holdtime22, align 8
  %cmp7.i81 = icmp slt i64 %85, %87
  br i1 %cmp7.i81, label %if.then10.i86, label %lor.lhs.false.i85

lor.lhs.false.i85:                                ; preds = %if.end5.i82
  %88 = ptrtoint ptr %nr8.i83 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %nr8.i83, align 8
  %tobool9.not.i84 = icmp eq i32 %89, 0
  br i1 %tobool9.not.i84, label %if.then10.i86, label %if.end13.i92

if.then10.i86:                                    ; preds = %lor.lhs.false.i85, %if.end5.i82
  %90 = ptrtoint ptr %read_holdtime22 to i32
  call void @__asan_store8_noabort(i32 %90)
  store i64 %85, ptr %read_holdtime22, align 8
  br label %if.end13.i92

if.end13.i92:                                     ; preds = %if.then10.i86, %lor.lhs.false.i85
  %total.i87 = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 4, i32 2
  %91 = ptrtoint ptr %total.i87 to i32
  call void @__asan_load8_noabort(i32 %91)
  %92 = load i64, ptr %total.i87, align 8
  %93 = ptrtoint ptr %total14.i88 to i32
  call void @__asan_load8_noabort(i32 %93)
  %94 = load i64, ptr %total14.i88, align 8
  %add.i89 = add i64 %94, %92
  store i64 %add.i89, ptr %total14.i88, align 8
  %95 = ptrtoint ptr %nr8.i83 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %nr8.i83, align 8
  %add17.i91 = add i32 %96, %78
  store i32 %add17.i91, ptr %nr8.i83, align 8
  br label %lock_time_add.exit93

lock_time_add.exit93:                             ; preds = %if.end13.i92, %lock_time_add.exit73
  %write_holdtime = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 5
  %nr.i94 = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 5, i32 3
  %97 = ptrtoint ptr %nr.i94 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %nr.i94, align 8
  %tobool.not.i95 = icmp eq i32 %98, 0
  br i1 %tobool.not.i95, label %lock_time_add.exit113, label %if.end.i99

if.end.i99:                                       ; preds = %lock_time_add.exit93
  %max.i96 = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 5, i32 1
  %99 = ptrtoint ptr %max.i96 to i32
  call void @__asan_load8_noabort(i32 %99)
  %100 = load i64, ptr %max.i96, align 8
  %101 = ptrtoint ptr %max1.i97 to i32
  call void @__asan_load8_noabort(i32 %101)
  %102 = load i64, ptr %max1.i97, align 8
  %cmp.i98 = icmp sgt i64 %100, %102
  br i1 %cmp.i98, label %if.then2.i100, label %if.end5.i102

if.then2.i100:                                    ; preds = %if.end.i99
  %103 = ptrtoint ptr %max1.i97 to i32
  call void @__asan_store8_noabort(i32 %103)
  store i64 %100, ptr %max1.i97, align 8
  br label %if.end5.i102

if.end5.i102:                                     ; preds = %if.then2.i100, %if.end.i99
  %104 = ptrtoint ptr %write_holdtime to i32
  call void @__asan_load8_noabort(i32 %104)
  %105 = load i64, ptr %write_holdtime, align 8
  %106 = ptrtoint ptr %write_holdtime23 to i32
  call void @__asan_load8_noabort(i32 %106)
  %107 = load i64, ptr %write_holdtime23, align 8
  %cmp7.i101 = icmp slt i64 %105, %107
  br i1 %cmp7.i101, label %if.then10.i106, label %lor.lhs.false.i105

lor.lhs.false.i105:                               ; preds = %if.end5.i102
  %108 = ptrtoint ptr %nr8.i103 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %nr8.i103, align 8
  %tobool9.not.i104 = icmp eq i32 %109, 0
  br i1 %tobool9.not.i104, label %if.then10.i106, label %if.end13.i112

if.then10.i106:                                   ; preds = %lor.lhs.false.i105, %if.end5.i102
  %110 = ptrtoint ptr %write_holdtime23 to i32
  call void @__asan_store8_noabort(i32 %110)
  store i64 %105, ptr %write_holdtime23, align 8
  br label %if.end13.i112

if.end13.i112:                                    ; preds = %if.then10.i106, %lor.lhs.false.i105
  %total.i107 = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 5, i32 2
  %111 = ptrtoint ptr %total.i107 to i32
  call void @__asan_load8_noabort(i32 %111)
  %112 = load i64, ptr %total.i107, align 8
  %113 = ptrtoint ptr %total14.i108 to i32
  call void @__asan_load8_noabort(i32 %113)
  %114 = load i64, ptr %total14.i108, align 8
  %add.i109 = add i64 %114, %112
  store i64 %add.i109, ptr %total14.i108, align 8
  %115 = ptrtoint ptr %nr8.i103 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %nr8.i103, align 8
  %add17.i111 = add i32 %116, %98
  store i32 %add17.i111, ptr %nr8.i103, align 8
  br label %lock_time_add.exit113

lock_time_add.exit113:                            ; preds = %if.end13.i112, %lock_time_add.exit93
  %arrayidx27 = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 6, i32 0
  %117 = ptrtoint ptr %arrayidx27 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %arrayidx27, align 4
  %119 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %arrayidx29, align 8
  %add30 = add i32 %120, %118
  store i32 %add30, ptr %arrayidx29, align 8
  %arrayidx27.1 = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 6, i32 1
  %121 = ptrtoint ptr %arrayidx27.1 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %arrayidx27.1, align 4
  %123 = ptrtoint ptr %arrayidx29.1 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %arrayidx29.1, align 4
  %add30.1 = add i32 %124, %122
  store i32 %add30.1, ptr %arrayidx29.1, align 4
  %arrayidx27.2 = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 6, i32 2
  %125 = ptrtoint ptr %arrayidx27.2 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %arrayidx27.2, align 4
  %127 = ptrtoint ptr %arrayidx29.2 to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %arrayidx29.2, align 8
  %add30.2 = add i32 %128, %126
  store i32 %add30.2, ptr %arrayidx29.2, align 8
  %arrayidx27.3 = getelementptr [8192 x %struct.lock_class_stats], ptr %4, i32 0, i32 %sub.ptr.div, i32 6, i32 3
  %129 = ptrtoint ptr %arrayidx27.3 to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %arrayidx27.3, align 4
  %131 = ptrtoint ptr %arrayidx29.3 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %arrayidx29.3, align 4
  %add30.3 = add i32 %132, %130
  store i32 %add30.3, ptr %arrayidx29.3, align 4
  %call = tail call i32 @cpumask_next(i32 noundef %call119, ptr noundef nonnull @__cpu_possible_mask) #31
  %cmp = icmp ult i32 %call, %1
  br i1 %cmp, label %for.body, label %for.end34

for.end34:                                        ; preds = %lock_time_add.exit113, %entry
  ret void
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @clear_lock_stats(ptr noundef %class) local_unnamed_addr #3 align 64 {
entry:
  %call8 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #31
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %cmp9 = icmp ult i32 %call8, %0
  br i1 %cmp9, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %sub.ptr.lhs.cast = ptrtoint ptr %class to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, ptrtoint (ptr @lock_classes to i32)
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 132
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %call10 = phi i32 [ %call8, %for.body.lr.ph ], [ %call, %for.body ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call10
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %arrayidx, align 4
  %add = add i32 %2, ptrtoint (ptr @cpu_lock_stats to i32)
  %3 = inttoptr i32 %add to ptr
  %arrayidx2 = getelementptr [8192 x %struct.lock_class_stats], ptr %3, i32 0, i32 %sub.ptr.div
  %4 = call ptr @memset(ptr %arrayidx2, i32 0, i32 176)
  %call = tail call i32 @cpumask_next(i32 noundef %call10, ptr noundef nonnull @__cpu_possible_mask) #31
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %5 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call, %5
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  %contention_point = getelementptr inbounds %struct.lock_class, ptr %class, i32 0, i32 14
  %6 = call ptr @memset(ptr %contention_point, i32 0, i32 32)
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define dso_local void @lockdep_init_task(ptr nocapture noundef writeonly %task) local_unnamed_addr #5 align 64 {
entry:
  %lockdep_depth = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 142
  %0 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %lockdep_depth, align 8
  %curr_chain_key = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 141
  %1 = ptrtoint ptr %curr_chain_key to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 -1, ptr %curr_chain_key, align 16
  %lockdep_recursion = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 143
  %2 = ptrtoint ptr %lockdep_recursion to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %lockdep_recursion, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define dso_local void @lockdep_set_selftest_task(ptr noundef %task) local_unnamed_addr #6 align 64 {
entry:
  store ptr %task, ptr @lockdep_selftest_task_struct, align 4
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local i64 @lockdep_stack_trace_count() local_unnamed_addr #7 align 64 {
entry:
  br label %for.body

for.body:                                         ; preds = %for.inc15, %entry
  %c.027 = phi i64 [ 0, %entry ], [ %c.1, %for.inc15 ]
  %i.026 = phi i32 [ 0, %entry ], [ %inc16, %for.inc15 ]
  %arrayidx = getelementptr [16384 x %struct.hlist_head], ptr @stack_trace_hash, i32 0, i32 %i.026
  br label %for.cond2

for.cond2:                                        ; preds = %for.cond2, %for.body
  %c.1 = phi i64 [ %c.027, %for.body ], [ %inc, %for.cond2 ]
  %trace.0.in = phi ptr [ %arrayidx, %for.body ], [ %trace.0, %for.cond2 ]
  %0 = ptrtoint ptr %trace.0.in to i32
  call void @__asan_load4_noabort(i32 %0)
  %trace.0 = load ptr, ptr %trace.0.in, align 4
  %tobool3.not = icmp eq ptr %trace.0, null
  %inc = add i64 %c.1, 1
  br i1 %tobool3.not, label %for.inc15, label %for.cond2

for.inc15:                                        ; preds = %for.cond2
  %inc16 = add nuw nsw i32 %i.026, 1
  %exitcond.not = icmp eq i32 %inc16, 16384
  br i1 %exitcond.not, label %for.end17, label %for.body

for.end17:                                        ; preds = %for.inc15
  ret i64 %c.1
}

; Function Attrs: nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i64 @lockdep_stack_hash_count() local_unnamed_addr #8 align 64 {
entry:
  br label %for.body

for.body:                                         ; preds = %for.body, %entry
  %i.06 = phi i32 [ 0, %entry ], [ %inc1, %for.body ]
  %c.05 = phi i64 [ 0, %entry ], [ %spec.select, %for.body ]
  %arrayidx = getelementptr [16384 x %struct.hlist_head], ptr @stack_trace_hash, i32 0, i32 %i.06
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %arrayidx, align 4
  %tobool.not.i.not = icmp ne ptr %1, null
  %inc = zext i1 %tobool.not.i.not to i64
  %spec.select = add i64 %c.05, %inc
  %inc1 = add nuw nsw i32 %i.06, 1
  %exitcond.not = icmp eq i32 %inc1, 16384
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  ret i64 %spec.select
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__get_key_name(ptr noundef %key, ptr noundef %str) local_unnamed_addr #0 align 64 {
entry:
  %0 = ptrtoint ptr %key to i32
  %call = tail call ptr @kallsyms_lookup(i32 noundef %0, ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef %str) #28
  ret ptr %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kallsyms_lookup(i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @get_usage_chars(ptr nocapture noundef readonly %class, ptr nocapture noundef writeonly %usage) local_unnamed_addr #9 align 64 {
entry:
  %usage_mask.i = getelementptr inbounds %struct.lock_class, ptr %class, i32 0, i32 7
  %0 = ptrtoint ptr %usage_mask.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %usage_mask.i, align 4
  %and.i = and i32 %1, 4
  %tobool.not.i = icmp eq i32 %and.i, 0
  %and8.i = and i32 %1, 1
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  %spec.select.i = select i1 %tobool9.not.i, i8 43, i8 63
  %spec.select17.i = select i1 %tobool9.not.i, i8 46, i8 45
  %c.0.i = select i1 %tobool.not.i, i8 %spec.select17.i, i8 %spec.select.i
  %2 = ptrtoint ptr %usage to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 %c.0.i, ptr %usage, align 1
  %3 = load i32, ptr %usage_mask.i, align 4
  %and.i23 = and i32 %3, 8
  %tobool.not.i24 = icmp eq i32 %and.i23, 0
  %and8.i25 = and i32 %3, 2
  %tobool9.not.i26 = icmp eq i32 %and8.i25, 0
  %spec.select.i27 = select i1 %tobool9.not.i26, i8 43, i8 63
  %spec.select17.i28 = select i1 %tobool9.not.i26, i8 46, i8 45
  %c.0.i29 = select i1 %tobool.not.i24, i8 %spec.select17.i28, i8 %spec.select.i27
  %arrayidx3 = getelementptr i8, ptr %usage, i32 1
  %4 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %c.0.i29, ptr %arrayidx3, align 1
  %5 = load i32, ptr %usage_mask.i, align 4
  %and.i31 = and i32 %5, 64
  %tobool.not.i32 = icmp eq i32 %and.i31, 0
  %and8.i33 = and i32 %5, 16
  %tobool9.not.i34 = icmp eq i32 %and8.i33, 0
  %spec.select.i35 = select i1 %tobool9.not.i34, i8 43, i8 63
  %spec.select17.i36 = select i1 %tobool9.not.i34, i8 46, i8 45
  %c.0.i37 = select i1 %tobool.not.i32, i8 %spec.select17.i36, i8 %spec.select.i35
  %arrayidx6 = getelementptr i8, ptr %usage, i32 2
  %6 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %c.0.i37, ptr %arrayidx6, align 1
  %7 = load i32, ptr %usage_mask.i, align 4
  %and.i39 = and i32 %7, 128
  %tobool.not.i40 = icmp eq i32 %and.i39, 0
  %and8.i41 = and i32 %7, 32
  %tobool9.not.i42 = icmp eq i32 %and8.i41, 0
  %spec.select.i43 = select i1 %tobool9.not.i42, i8 43, i8 63
  %spec.select17.i44 = select i1 %tobool9.not.i42, i8 46, i8 45
  %c.0.i45 = select i1 %tobool.not.i40, i8 %spec.select17.i44, i8 %spec.select.i43
  %arrayidx9 = getelementptr i8, ptr %usage, i32 3
  %8 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %c.0.i45, ptr %arrayidx9, align 1
  %arrayidx10 = getelementptr i8, ptr %usage, i32 4
  %9 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 0, ptr %arrayidx10, align 1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lockdep_register_key(ptr noundef %key) #0 align 64 {
entry:
  %0 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_state to i32))
  %1 = load i32, ptr @system_state, align 4
  %cmp.i.i = icmp ugt i32 %1, 1
  %cmp.not.i.i.i.i = icmp uge ptr %key, @__init_begin
  %add.ptr.i.i.i.i = getelementptr i8, ptr %key, i32 1
  %cmp1.i.i.i.i = icmp ule ptr %add.ptr.i.i.i.i, @__init_end
  %2 = and i1 %cmp.not.i.i.i.i, %cmp1.i.i.i.i
  %narrow.i.i = and i1 %2, %cmp.i.i
  br i1 %narrow.i.i, label %if.end38, label %if.end.i

if.end.i:                                         ; preds = %entry
  %cmp.not.i = icmp uge ptr %key, @_stext
  %cmp1.i = icmp ult ptr %key, @_end
  %or.cond.i = and i1 %cmp.not.i, %cmp1.i
  br i1 %or.cond.i, label %land.rhs, label %if.end3.i

if.end3.i:                                        ; preds = %if.end.i
  %call4.i = tail call zeroext i1 @is_kernel_percpu_address(i32 noundef %0) #28
  br i1 %call4.i, label %land.rhs, label %if.end6.i

if.end6.i:                                        ; preds = %if.end3.i
  %call7.i = tail call zeroext i1 @is_module_address(i32 noundef %0) #28
  br i1 %call7.i, label %land.rhs, label %static_obj.exit

static_obj.exit:                                  ; preds = %if.end6.i
  %call8.i = tail call zeroext i1 @is_module_percpu_address(i32 noundef %0) #28
  br i1 %call8.i, label %land.rhs, label %if.end38

land.rhs:                                         ; preds = %static_obj.exit, %if.end6.i, %if.end3.i, %if.end.i
  %.b185 = load i1, ptr @lockdep_register_key.__already_done, align 1
  br i1 %.b185, label %cleanup, label %if.then, !prof !1500

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @lockdep_register_key.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1193, i32 noundef 9, ptr noundef null) #28
  br label %cleanup

if.end38:                                         ; preds = %static_obj.exit, %entry
  %mul.i.i.i = mul i32 %0, 1640531527
  %shr.i.i = lshr i32 %mul.i.i.i, 20
  %add.ptr.i = getelementptr %struct.hlist_head, ptr @lock_keys_hash, i32 %shr.i.i
  %3 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28, !srcloc !1503
  %call45 = tail call fastcc i32 @graph_lock()
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %do.body143, label %do.body49

do.body49:                                        ; preds = %if.end38
  %call50 = tail call i32 @rcu_read_lock_any_held() #28
  %tobool51.not = icmp eq i32 %call50, 0
  br i1 %tobool51.not, label %land.lhs.true, label %do.end59

land.lhs.true:                                    ; preds = %do.body49
  %call52 = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %do.end59, label %land.lhs.true54

land.lhs.true54:                                  ; preds = %land.lhs.true
  %.b181184 = load i1, ptr @lockdep_register_key.__warned, align 1
  br i1 %.b181184, label %do.end59, label %if.then56

if.then56:                                        ; preds = %land.lhs.true54
  store i1 true, ptr @lockdep_register_key.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1200, ptr noundef nonnull @.str.1)
  br label %do.end59

do.end59:                                         ; preds = %if.then56, %land.lhs.true54, %land.lhs.true, %do.body49
  %4 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %add.ptr.i, align 4
  %tobool66.not = icmp eq ptr %5, null
  br i1 %tobool66.not, label %out_unlock.critedge, label %for.body

for.body:                                         ; preds = %for.inc.critedge, %do.end59
  %k.0194 = phi ptr [ %7, %for.inc.critedge ], [ %5, %do.end59 ]
  %cmp70 = icmp eq ptr %k.0194, %key
  br i1 %cmp70, label %land.rhs79, label %for.inc.critedge

land.rhs79:                                       ; preds = %for.body
  %.b182183 = load i1, ptr @lockdep_register_key.__already_done.2, align 1
  br i1 %.b182183, label %out_unlock, label %if.then90, !prof !1500

if.then90:                                        ; preds = %land.rhs79
  store i1 true, ptr @lockdep_register_key.__already_done.2, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1201, i32 noundef 9, ptr noundef null) #28
  br label %out_unlock

for.inc.critedge:                                 ; preds = %for.body
  %6 = ptrtoint ptr %k.0194 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %k.0194, align 4
  %tobool68.not = icmp eq ptr %7, null
  br i1 %tobool68.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc.critedge
  %8 = ptrtoint ptr %key to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %key, align 4
  %pprev.i = getelementptr inbounds %struct.hlist_node, ptr %key, i32 0, i32 1
  %9 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %add.ptr.i, ptr %pprev.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #28, !srcloc !1504
  %10 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %key, ptr %add.ptr.i, align 4
  br i1 %tobool66.not, label %out_unlock, label %do.body49.i

do.body49.i:                                      ; preds = %for.end
  %pprev51.i = getelementptr inbounds %struct.hlist_node, ptr %5, i32 0, i32 1
  %11 = ptrtoint ptr %pprev51.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %key, ptr %pprev51.i, align 4
  br label %out_unlock

out_unlock.critedge:                              ; preds = %do.end59
  %12 = ptrtoint ptr %key to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %5, ptr %key, align 4
  %pprev.i.c = getelementptr inbounds %struct.hlist_node, ptr %key, i32 0, i32 1
  %13 = ptrtoint ptr %pprev.i.c to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %add.ptr.i, ptr %pprev.i.c, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #28, !srcloc !1504
  %14 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %key, ptr %add.ptr.i, align 4
  br label %out_unlock

out_unlock:                                       ; preds = %out_unlock.critedge, %do.body49.i, %for.end, %if.then90, %land.rhs79
  tail call fastcc void @lockdep_unlock() #28
  br label %do.body143

do.body143:                                       ; preds = %out_unlock, %if.end38
  %15 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i = and i32 %15, 128
  %tobool151.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool151.not, label %if.then160, label %do.end163, !prof !1501

if.then160:                                       ; preds = %do.body143
  tail call void @warn_bogus_irq_restore() #28
  br label %do.end163

do.end163:                                        ; preds = %if.then160, %do.body143
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %3) #28, !srcloc !1506
  br label %cleanup

cleanup:                                          ; preds = %do.end163, %if.then, %land.rhs
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @static_obj(ptr noundef %obj) unnamed_addr #0 align 64 {
entry:
  %0 = ptrtoint ptr %obj to i32
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_state to i32))
  %1 = load i32, ptr @system_state, align 4
  %cmp.i = icmp ugt i32 %1, 1
  %cmp.not.i.i.i = icmp uge ptr %obj, @__init_begin
  %add.ptr.i.i.i = getelementptr i8, ptr %obj, i32 1
  %cmp1.i.i.i = icmp ule ptr %add.ptr.i.i.i, @__init_end
  %2 = and i1 %cmp.not.i.i.i, %cmp1.i.i.i
  %narrow.i = and i1 %2, %cmp.i
  br i1 %narrow.i, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %cmp.not = icmp uge ptr %obj, @_stext
  %cmp1 = icmp ult ptr %obj, @_end
  %or.cond = and i1 %cmp.not, %cmp1
  br i1 %or.cond, label %cleanup, label %if.end3

if.end3:                                          ; preds = %if.end
  %call4 = tail call zeroext i1 @is_kernel_percpu_address(i32 noundef %0) #28
  br i1 %call4, label %cleanup, label %if.end6

if.end6:                                          ; preds = %if.end3
  %call7 = tail call zeroext i1 @is_module_address(i32 noundef %0) #28
  br i1 %call7, label %cleanup, label %lor.rhs

lor.rhs:                                          ; preds = %if.end6
  %call8 = tail call zeroext i1 @is_module_percpu_address(i32 noundef %0) #28
  %phi.cast = zext i1 %call8 to i32
  br label %cleanup

cleanup:                                          ; preds = %lor.rhs, %if.end6, %if.end3, %if.end, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 1, %if.end ], [ 1, %if.end3 ], [ 1, %if.end6 ], [ %phi.cast, %lor.rhs ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @arch_local_irq_save() unnamed_addr #10 align 64 {
entry:
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28, !srcloc !1503
  ret i32 %0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @graph_lock() unnamed_addr #0 align 64 {
entry:
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %0 = load i32, ptr @oops_in_progress, align 4
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.end50.i

land.lhs.true.i:                                  ; preds = %entry
  %1 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i = and i32 %1, 128
  %tobool10.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool10.not.i, label %do.end16.i, label %if.end50.i, !prof !1501

do.end16.i:                                       ; preds = %land.lhs.true.i
  %call17.i = tail call i32 @debug_locks_off() #28
  %tobool18.not.i = icmp eq i32 %call17.i, 0
  br i1 %tobool18.not.i, label %if.end50.i, label %land.lhs.true19.i

land.lhs.true19.i:                                ; preds = %do.end16.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %2 = load i32, ptr @debug_locks_silent, align 4
  %tobool20.not.i = icmp eq i32 %2, 0
  br i1 %tobool20.not.i, label %do.end33.i, label %if.end50.i

do.end33.i:                                       ; preds = %land.lhs.true19.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 110, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.32) #28
  br label %if.end50.i

if.end50.i:                                       ; preds = %do.end33.i, %land.lhs.true19.i, %do.end16.i, %land.lhs.true.i, %entry
  %3 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i71.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i71.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %6
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %8, ptrtoint (ptr @lockdep_recursion to i32)
  %9 = inttoptr i32 %add.i to ptr
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 4
  %add64.i = add i32 %11, 1
  store i32 %add64.i, ptr %9, align 4
  tail call void @llvm.prefetch.p0(ptr nonnull @__lock, i32 1, i32 3, i32 1) #28
  %12 = tail call { i32, i32, i32 } asm sideeffect "1:\09ldrex\09$0, [$3]\0A\09add\09$1, $0, $4\0A\09strex\09$2, $1, [$3]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,r,I,~{cc}"(ptr nonnull @__lock, i32 65536) #28, !srcloc !1507
  %asmresult.i.i = extractvalue { i32, i32, i32 } %12, 0
  %lockval.sroa.0.0.extract.shift.i.i = lshr i32 %asmresult.i.i, 16
  %conv31.i.i = and i32 %asmresult.i.i, 65535
  %cmp.not2.i.i = icmp eq i32 %lockval.sroa.0.0.extract.shift.i.i, %conv31.i.i
  br i1 %cmp.not2.i.i, label %lockdep_lock.exit, label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i, %if.end50.i
  tail call void asm sideeffect "wfe", "~{memory}"() #28, !srcloc !1508
  %13 = load volatile i16, ptr getelementptr inbounds (%struct.__raw_tickets, ptr @__lock, i32 0, i32 1), align 2
  %conv3.i.i = zext i16 %13 to i32
  %cmp.not.i.i = icmp eq i32 %lockval.sroa.0.0.extract.shift.i.i, %conv3.i.i
  br i1 %cmp.not.i.i, label %lockdep_lock.exit, label %while.body.i.i

lockdep_lock.exit:                                ; preds = %while.body.i.i, %if.end50.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #28, !srcloc !1509
  %task.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %14 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i, align 8
  store ptr %15, ptr @__owner, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %16 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %16, 0
  br i1 %tobool.not, label %if.then, label %return

if.then:                                          ; preds = %lockdep_lock.exit
  tail call fastcc void @lockdep_unlock()
  br label %return

return:                                           ; preds = %if.then, %lockdep_lock.exit
  %retval.0 = phi i32 [ 0, %if.then ], [ 1, %lockdep_lock.exit ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_any_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lockdep_rcu_suspicious(ptr noundef %file, i32 noundef %line, ptr noundef %s) #0 align 64 {
entry:
  %0 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %4 = load volatile i32, ptr @debug_locks, align 4
  %call5 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.89) #32
  %call10 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.111) #32
  %call15 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.114) #32
  %call3.i = tail call i32 @strcspn(ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef nonnull @.str.766) #28
  %call7.i = tail call ptr @print_tainted() #28
  %call8.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.764, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 2), i32 noundef %call3.i, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef %call7.i) #32
  %call20 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.117) #32
  %call25 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.120, ptr noundef %file, i32 noundef %line, ptr noundef %s) #32
  %call30 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.123) #32
  %call35 = tail call zeroext i1 @rcu_lockdep_current_cpu_online() #28
  %cond = select i1 %call35, ptr @.str.5, ptr @.str.128
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_scheduler_active to i32))
  %5 = load i32, ptr @rcu_scheduler_active, align 4
  %tobool.not = icmp eq i32 %4, 0
  %cond36 = select i1 %tobool.not, ptr @.str.129, ptr @.str.5
  %call37 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.126, ptr noundef nonnull %cond, i32 noundef %5, i32 noundef %4, ptr noundef nonnull %cond36) #32
  %call38 = tail call zeroext i1 @rcu_is_watching() #28
  br i1 %call38, label %if.end, label %do.end41

do.end41:                                         ; preds = %entry
  %call43 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.131) #32
  br label %if.end

if.end:                                           ; preds = %do.end41, %entry
  tail call fastcc void @lockdep_print_held_locks(ptr noundef %3)
  %call48 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134) #32
  tail call void @dump_stack() #32
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @arch_irqs_disabled() unnamed_addr #10 align 64 {
entry:
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i = and i32 %0, 128
  ret i32 %and.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @arch_local_irq_restore(i32 noundef %flags) unnamed_addr #10 align 64 {
entry:
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %flags) #28, !srcloc !1506
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @lockdep_count_forward_deps(ptr noundef %class) local_unnamed_addr #0 align 64 {
entry:
  %count.i = alloca i32, align 4
  %target_entry.i = alloca ptr, align 4
  %this = alloca %struct.lock_list, align 4
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %this) #28
  %0 = getelementptr inbounds %struct.lock_list, ptr %this, i32 0, i32 1
  %1 = getelementptr inbounds %struct.lock_list, ptr %this, i32 0, i32 6
  %2 = getelementptr inbounds %struct.lock_list, ptr %this, i32 0, i32 7
  %3 = call ptr @memset(ptr %this, i32 255, i32 24)
  %4 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %class, ptr %0, align 4
  %5 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %2, align 4
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 0, ptr %1, align 1
  %7 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28, !srcloc !1503
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %8 = load i32, ptr @oops_in_progress, align 4
  %tobool.not.i = icmp eq i32 %8, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.end50.i

land.lhs.true.i:                                  ; preds = %entry
  %9 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i = and i32 %9, 128
  %tobool10.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool10.not.i, label %do.end16.i, label %if.end50.i, !prof !1501

do.end16.i:                                       ; preds = %land.lhs.true.i
  %call17.i = tail call i32 @debug_locks_off() #28
  %tobool18.not.i = icmp eq i32 %call17.i, 0
  br i1 %tobool18.not.i, label %if.end50.i, label %land.lhs.true19.i

land.lhs.true19.i:                                ; preds = %do.end16.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %10 = load i32, ptr @debug_locks_silent, align 4
  %tobool20.not.i = icmp eq i32 %10, 0
  br i1 %tobool20.not.i, label %do.end33.i, label %if.end50.i

do.end33.i:                                       ; preds = %land.lhs.true19.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 110, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.32) #28
  br label %if.end50.i

if.end50.i:                                       ; preds = %do.end33.i, %land.lhs.true19.i, %do.end16.i, %land.lhs.true.i, %entry
  %11 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i71.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i71.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %14
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %16, ptrtoint (ptr @lockdep_recursion to i32)
  %17 = inttoptr i32 %add.i to ptr
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %17, align 4
  %add64.i = add i32 %19, 1
  store i32 %add64.i, ptr %17, align 4
  tail call void @llvm.prefetch.p0(ptr nonnull @__lock, i32 1, i32 3, i32 1) #28
  %20 = tail call { i32, i32, i32 } asm sideeffect "1:\09ldrex\09$0, [$3]\0A\09add\09$1, $0, $4\0A\09strex\09$2, $1, [$3]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,r,I,~{cc}"(ptr nonnull @__lock, i32 65536) #28, !srcloc !1507
  %asmresult.i.i = extractvalue { i32, i32, i32 } %20, 0
  %lockval.sroa.0.0.extract.shift.i.i = lshr i32 %asmresult.i.i, 16
  %conv31.i.i = and i32 %asmresult.i.i, 65535
  %cmp.not2.i.i = icmp eq i32 %lockval.sroa.0.0.extract.shift.i.i, %conv31.i.i
  br i1 %cmp.not2.i.i, label %lockdep_lock.exit, label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i, %if.end50.i
  tail call void asm sideeffect "wfe", "~{memory}"() #28, !srcloc !1508
  %21 = load volatile i16, ptr getelementptr inbounds (%struct.__raw_tickets, ptr @__lock, i32 0, i32 1), align 2
  %conv3.i.i = zext i16 %21 to i32
  %cmp.not.i.i = icmp eq i32 %lockval.sroa.0.0.extract.shift.i.i, %conv3.i.i
  br i1 %cmp.not.i.i, label %lockdep_lock.exit, label %while.body.i.i

lockdep_lock.exit:                                ; preds = %while.body.i.i, %if.end50.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #28, !srcloc !1509
  %task.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %22 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task.i, align 8
  store ptr %23, ptr @__owner, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %count.i) #28
  %24 = ptrtoint ptr %count.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 0, ptr %count.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %target_entry.i) #28
  %call.i.i = call fastcc i32 @__bfs(ptr noundef nonnull %this, ptr noundef nonnull %count.i, ptr noundef nonnull @noop_count, ptr noundef null, ptr noundef nonnull %target_entry.i, i32 noundef 16) #28
  %25 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %count.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %target_entry.i) #28
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %count.i) #28
  call fastcc void @lockdep_unlock()
  %27 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i17 = and i32 %27, 128
  %tobool.not = icmp eq i32 %and.i.i17, 0
  br i1 %tobool.not, label %if.then, label %do.end14, !prof !1501

if.then:                                          ; preds = %lockdep_lock.exit
  call void @warn_bogus_irq_restore() #28
  br label %do.end14

do.end14:                                         ; preds = %if.then, %lockdep_lock.exit
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %7) #28, !srcloc !1506
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %this) #28
  ret i32 %26
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @lockdep_unlock() unnamed_addr #10 align 64 {
entry:
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %0 = load i32, ptr @oops_in_progress, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.lhs.true, label %if.end50

land.lhs.true:                                    ; preds = %entry
  %1 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i = and i32 %1, 128
  %tobool10.not = icmp eq i32 %and.i, 0
  br i1 %tobool10.not, label %do.end16, label %if.end50, !prof !1501

do.end16:                                         ; preds = %land.lhs.true
  %call17 = tail call i32 @debug_locks_off() #28
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %if.end50, label %land.lhs.true19

land.lhs.true19:                                  ; preds = %do.end16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %2 = load i32, ptr @debug_locks_silent, align 4
  %tobool20.not = icmp eq i32 %2, 0
  br i1 %tobool20.not, label %do.end33, label %if.end50

do.end33:                                         ; preds = %land.lhs.true19
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 119, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.32) #28
  br label %if.end50

if.end50:                                         ; preds = %do.end33, %land.lhs.true19, %do.end16, %land.lhs.true, %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %3 = load i32, ptr @debug_locks, align 4
  %tobool52.not = icmp eq i32 %3, 0
  br i1 %tobool52.not, label %if.end109, label %land.lhs.true53

land.lhs.true53:                                  ; preds = %if.end50
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %4 = load i32, ptr @oops_in_progress, align 4
  %tobool55.not = icmp eq i32 %4, 0
  br i1 %tobool55.not, label %land.lhs.true56, label %if.end109

land.lhs.true56:                                  ; preds = %land.lhs.true53
  %5 = load ptr, ptr @__owner, align 4
  %6 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i130 = and i32 %6, -16384
  %7 = inttoptr i32 %and.i130 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task, align 8
  %cmp58.not = icmp eq ptr %5, %9
  br i1 %cmp58.not, label %if.end109, label %do.end69, !prof !1500

do.end69:                                         ; preds = %land.lhs.true56
  %call70 = tail call i32 @debug_locks_off() #28
  %tobool71.not = icmp eq i32 %call70, 0
  br i1 %tobool71.not, label %do.end126, label %land.lhs.true72

land.lhs.true72:                                  ; preds = %do.end69
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %10 = load i32, ptr @debug_locks_silent, align 4
  %tobool73.not = icmp eq i32 %10, 0
  br i1 %tobool73.not, label %do.end87, label %do.end126

do.end87:                                         ; preds = %land.lhs.true72
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 121, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.147) #28
  br label %do.end126

if.end109:                                        ; preds = %land.lhs.true56, %land.lhs.true53, %if.end50
  store ptr null, ptr @__owner, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #28, !srcloc !1510
  %11 = load i16, ptr getelementptr inbounds (%struct.__raw_tickets, ptr @__lock, i32 0, i32 1), align 2
  %inc.i = add i16 %11, 1
  store i16 %inc.i, ptr getelementptr inbounds (%struct.__raw_tickets, ptr @__lock, i32 0, i32 1), align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #28, !srcloc !1511
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #28, !srcloc !1512
  %12 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i131 = and i32 %12, -16384
  %13 = inttoptr i32 %and.i131 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %15
  %16 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx, align 4
  %add = add i32 %17, ptrtoint (ptr @lockdep_recursion to i32)
  %18 = inttoptr i32 %add to ptr
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %18, align 4
  %add122 = add i32 %20, -1
  store i32 %add122, ptr %18, align 4
  br label %do.end126

do.end126:                                        ; preds = %if.end109, %do.end87, %land.lhs.true72, %do.end69
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @lockdep_count_backward_deps(ptr noundef %class) local_unnamed_addr #0 align 64 {
entry:
  %count.i = alloca i32, align 4
  %target_entry.i = alloca ptr, align 4
  %this = alloca %struct.lock_list, align 4
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %this) #28
  %0 = getelementptr inbounds %struct.lock_list, ptr %this, i32 0, i32 1
  %1 = getelementptr inbounds %struct.lock_list, ptr %this, i32 0, i32 6
  %2 = getelementptr inbounds %struct.lock_list, ptr %this, i32 0, i32 7
  %3 = call ptr @memset(ptr %this, i32 255, i32 24)
  %4 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %class, ptr %0, align 4
  %5 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %2, align 4
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 0, ptr %1, align 1
  %7 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28, !srcloc !1503
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %8 = load i32, ptr @oops_in_progress, align 4
  %tobool.not.i = icmp eq i32 %8, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.end50.i

land.lhs.true.i:                                  ; preds = %entry
  %9 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i = and i32 %9, 128
  %tobool10.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool10.not.i, label %do.end16.i, label %if.end50.i, !prof !1501

do.end16.i:                                       ; preds = %land.lhs.true.i
  %call17.i = tail call i32 @debug_locks_off() #28
  %tobool18.not.i = icmp eq i32 %call17.i, 0
  br i1 %tobool18.not.i, label %if.end50.i, label %land.lhs.true19.i

land.lhs.true19.i:                                ; preds = %do.end16.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %10 = load i32, ptr @debug_locks_silent, align 4
  %tobool20.not.i = icmp eq i32 %10, 0
  br i1 %tobool20.not.i, label %do.end33.i, label %if.end50.i

do.end33.i:                                       ; preds = %land.lhs.true19.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 110, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.32) #28
  br label %if.end50.i

if.end50.i:                                       ; preds = %do.end33.i, %land.lhs.true19.i, %do.end16.i, %land.lhs.true.i, %entry
  %11 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i71.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i71.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %14
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %16, ptrtoint (ptr @lockdep_recursion to i32)
  %17 = inttoptr i32 %add.i to ptr
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %17, align 4
  %add64.i = add i32 %19, 1
  store i32 %add64.i, ptr %17, align 4
  tail call void @llvm.prefetch.p0(ptr nonnull @__lock, i32 1, i32 3, i32 1) #28
  %20 = tail call { i32, i32, i32 } asm sideeffect "1:\09ldrex\09$0, [$3]\0A\09add\09$1, $0, $4\0A\09strex\09$2, $1, [$3]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,r,I,~{cc}"(ptr nonnull @__lock, i32 65536) #28, !srcloc !1507
  %asmresult.i.i = extractvalue { i32, i32, i32 } %20, 0
  %lockval.sroa.0.0.extract.shift.i.i = lshr i32 %asmresult.i.i, 16
  %conv31.i.i = and i32 %asmresult.i.i, 65535
  %cmp.not2.i.i = icmp eq i32 %lockval.sroa.0.0.extract.shift.i.i, %conv31.i.i
  br i1 %cmp.not2.i.i, label %lockdep_lock.exit, label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i, %if.end50.i
  tail call void asm sideeffect "wfe", "~{memory}"() #28, !srcloc !1508
  %21 = load volatile i16, ptr getelementptr inbounds (%struct.__raw_tickets, ptr @__lock, i32 0, i32 1), align 2
  %conv3.i.i = zext i16 %21 to i32
  %cmp.not.i.i = icmp eq i32 %lockval.sroa.0.0.extract.shift.i.i, %conv3.i.i
  br i1 %cmp.not.i.i, label %lockdep_lock.exit, label %while.body.i.i

lockdep_lock.exit:                                ; preds = %while.body.i.i, %if.end50.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #28, !srcloc !1509
  %task.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %22 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task.i, align 8
  store ptr %23, ptr @__owner, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %count.i) #28
  %24 = ptrtoint ptr %count.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 0, ptr %count.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %target_entry.i) #28
  %call.i.i = call fastcc i32 @__bfs(ptr noundef nonnull %this, ptr noundef nonnull %count.i, ptr noundef nonnull @noop_count, ptr noundef null, ptr noundef nonnull %target_entry.i, i32 noundef 24) #28
  %25 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %count.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %target_entry.i) #28
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %count.i) #28
  call fastcc void @lockdep_unlock()
  %27 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i17 = and i32 %27, 128
  %tobool.not = icmp eq i32 %and.i.i17, 0
  br i1 %tobool.not, label %if.then, label %do.end14, !prof !1501

if.then:                                          ; preds = %lockdep_lock.exit
  call void @warn_bogus_irq_restore() #28
  br label %do.end14

do.end14:                                         ; preds = %if.then, %lockdep_lock.exit
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %7) #28, !srcloc !1506
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %this) #28
  ret i32 %26
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @print_shortest_lock_dependencies(ptr noundef readonly %leaf, ptr noundef readnone %root) #0 align 64 {
entry:
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i, %entry
  %child.addr.0.i = phi ptr [ %leaf, %entry ], [ %1, %while.cond.i ]
  %depth.0.i = phi i32 [ 0, %entry ], [ %inc.i, %while.cond.i ]
  %parent.i.i = getelementptr inbounds %struct.lock_list, ptr %child.addr.0.i, i32 0, i32 7
  %0 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent.i.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  %inc.i = add i32 %depth.0.i, 1
  br i1 %tobool.not.i, label %do.body, label %while.cond.i

do.body:                                          ; preds = %if.end, %while.cond.i
  %depth.0 = phi i32 [ %dec, %if.end ], [ %depth.0.i, %while.cond.i ]
  %entry1.0 = phi ptr [ %9, %if.end ], [ %leaf, %while.cond.i ]
  %class = getelementptr inbounds %struct.lock_list, ptr %entry1.0, i32 0, i32 1
  %2 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %class, align 4
  tail call fastcc void @print_lock_class_header(ptr noundef %3, i32 noundef %depth.0)
  %call3 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.3, i32 noundef %depth.0, ptr noundef nonnull @.str.5) #32
  %trace = getelementptr inbounds %struct.lock_list, ptr %entry1.0, i32 0, i32 3
  %4 = ptrtoint ptr %trace to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %trace, align 4
  %entries.i = getelementptr inbounds %struct.lock_trace, ptr %5, i32 0, i32 3
  %nr_entries.i = getelementptr inbounds %struct.lock_trace, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %nr_entries.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nr_entries.i, align 4
  tail call void @stack_trace_print(ptr noundef %entries.i, i32 noundef %7, i32 noundef 2) #28
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.7) #32
  %cmp = icmp ne i32 %depth.0, 0
  %cmp9.not = icmp eq ptr %entry1.0, %root
  %or.cond = select i1 %cmp, i1 true, i1 %cmp9.not
  br i1 %or.cond, label %if.end, label %do.end12

do.end12:                                         ; preds = %do.body
  %call14 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.4) #32
  br label %do.end18

if.end:                                           ; preds = %do.body
  %parent.i = getelementptr inbounds %struct.lock_list, ptr %entry1.0, i32 0, i32 7
  %8 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %parent.i, align 4
  %tobool.not = icmp ne ptr %9, null
  %dec = add i32 %depth.0, -1
  %cmp17 = icmp sgt i32 %dec, -1
  %or.cond28 = and i1 %cmp17, %tobool.not
  br i1 %or.cond28, label %do.body, label %do.end18

do.end18:                                         ; preds = %if.end, %do.end12
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_lock_class_header(ptr noundef %class, i32 noundef %depth) unnamed_addr #0 align 64 {
entry:
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.148, i32 noundef %depth, ptr noundef nonnull @.str.5) #32
  tail call fastcc void @print_lock_name(ptr noundef %class)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %call7.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #31
  %cmp8.i = icmp ult i32 %call7.i, %0
  br i1 %cmp8.i, label %do.body.lr.ph.i, label %debug_class_ops_read.exit

do.body.lr.ph.i:                                  ; preds = %entry
  %sub.ptr.lhs.cast.i = ptrtoint ptr %class to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, ptrtoint (ptr @lock_classes to i32)
  %sub.ptr.div.i = sdiv exact i32 %sub.ptr.sub.i, 132
  %arrayidx.i = getelementptr %struct.lockdep_stats, ptr @lockdep_stats, i32 0, i32 16, i32 %sub.ptr.div.i
  %1 = ptrtoint ptr %arrayidx.i to i32
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i, %do.body.lr.ph.i
  %call10.i = phi i32 [ %call7.i, %do.body.lr.ph.i ], [ %call.i, %do.body.i ]
  %ops.09.i = phi i32 [ 0, %do.body.lr.ph.i ], [ %add3.i, %do.body.i ]
  %arrayidx2.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call10.i
  %2 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx2.i, align 4
  %add.i = add i32 %3, %1
  %4 = inttoptr i32 %add.i to ptr
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %4, align 4
  %add3.i = add i32 %6, %ops.09.i
  %call.i = tail call i32 @cpumask_next(i32 noundef %call10.i, ptr noundef nonnull @__cpu_possible_mask) #31
  %cmp.i = icmp ult i32 %call.i, %0
  br i1 %cmp.i, label %do.body.i, label %debug_class_ops_read.exit

debug_class_ops_read.exit:                        ; preds = %do.body.i, %entry
  %ops.0.lcssa.i = phi i32 [ 0, %entry ], [ %add3.i, %do.body.i ]
  %call6 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.151, i32 noundef %ops.0.lcssa.i) #32
  %call11 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.154) #32
  %usage_mask = getelementptr inbounds %struct.lock_class, ptr %class, i32 0, i32 7
  br label %for.body

for.body:                                         ; preds = %for.inc, %debug_class_ops_read.exit
  %bit.050 = phi i32 [ 0, %debug_class_ops_read.exit ], [ %inc, %for.inc ]
  %7 = ptrtoint ptr %usage_mask to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %usage_mask, align 4
  %shl = shl nuw nsw i32 1, %bit.050
  %and = and i32 %8, %shl
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  %arrayidx = getelementptr [11 x ptr], ptr @usage_str, i32 0, i32 %bit.050
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx, align 4
  %call16 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.157, i32 noundef %depth, ptr noundef nonnull @.str.5, ptr noundef %10) #32
  %add = add i32 %call16, %depth
  %call21 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.160) #32
  %add22 = add i32 %add, %call21
  %arrayidx23 = getelementptr %struct.lock_class, ptr %class, i32 0, i32 8, i32 %bit.050
  %11 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx23, align 4
  %entries.i = getelementptr inbounds %struct.lock_trace, ptr %12, i32 0, i32 3
  %nr_entries.i = getelementptr inbounds %struct.lock_trace, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %nr_entries.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %nr_entries.i, align 4
  tail call void @stack_trace_print(ptr noundef %entries.i, i32 noundef %14, i32 noundef %add22) #28
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body
  %inc = add nuw nsw i32 %bit.050, 1
  %exitcond.not = icmp eq i32 %inc, 10
  br i1 %exitcond.not, label %do.end26, label %for.body

do.end26:                                         ; preds = %for.inc
  %call28 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.163, i32 noundef %depth, ptr noundef nonnull @.str.5) #32
  %key = getelementptr inbounds %struct.lock_class, ptr %class, i32 0, i32 4
  %15 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %key, align 4
  %call34 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.166, i32 noundef %depth, ptr noundef nonnull @.str.5, ptr noundef %16, ptr noundef %16) #32
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #11

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @print_shortest_lock_dependencies_backwards(ptr noundef readonly %leaf, ptr noundef readnone %root) #0 align 64 {
entry:
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i, %entry
  %child.addr.0.i = phi ptr [ %leaf, %entry ], [ %1, %while.cond.i ]
  %depth.0.i = phi i32 [ 0, %entry ], [ %inc.i, %while.cond.i ]
  %parent.i.i = getelementptr inbounds %struct.lock_list, ptr %child.addr.0.i, i32 0, i32 7
  %0 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent.i.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  %inc.i = add i32 %depth.0.i, 1
  br i1 %tobool.not.i, label %do.body, label %while.cond.i

do.body:                                          ; preds = %if.end17, %while.cond.i
  %depth.0 = phi i32 [ %dec, %if.end17 ], [ %depth.0.i, %while.cond.i ]
  %trace.0 = phi ptr [ %7, %if.end17 ], [ null, %while.cond.i ]
  %entry1.0 = phi ptr [ %9, %if.end17 ], [ %leaf, %while.cond.i ]
  %class = getelementptr inbounds %struct.lock_list, ptr %entry1.0, i32 0, i32 1
  %2 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %class, align 4
  tail call fastcc void @print_lock_class_header(ptr noundef %3, i32 noundef %depth.0)
  %tobool.not = icmp eq ptr %trace.0, null
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %do.body
  %call3 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.3, i32 noundef %depth.0, ptr noundef nonnull @.str.5) #32
  %entries.i = getelementptr inbounds %struct.lock_trace, ptr %trace.0, i32 0, i32 3
  %nr_entries.i = getelementptr inbounds %struct.lock_trace, ptr %trace.0, i32 0, i32 2
  %4 = ptrtoint ptr %nr_entries.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nr_entries.i, align 4
  tail call void @stack_trace_print(ptr noundef %entries.i, i32 noundef %5, i32 noundef 2) #28
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.7) #32
  br label %if.end

if.end:                                           ; preds = %do.end, %do.body
  %cmp = icmp ne i32 %depth.0, 0
  %cmp10.not = icmp eq ptr %entry1.0, %root
  %or.cond = select i1 %cmp, i1 true, i1 %cmp10.not
  br i1 %or.cond, label %if.end17, label %do.end14

do.end14:                                         ; preds = %if.end
  %call16 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.12) #32
  br label %do.end22

if.end17:                                         ; preds = %if.end
  %trace9 = getelementptr inbounds %struct.lock_list, ptr %entry1.0, i32 0, i32 3
  %6 = ptrtoint ptr %trace9 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %trace9, align 4
  %parent.i = getelementptr inbounds %struct.lock_list, ptr %entry1.0, i32 0, i32 7
  %8 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %parent.i, align 4
  %tobool20.not = icmp ne ptr %9, null
  %dec = add i32 %depth.0, -1
  %cmp21 = icmp sgt i32 %dec, -1
  %or.cond33 = and i1 %cmp21, %tobool20.not
  br i1 %or.cond33, label %do.body, label %do.end22

do.end22:                                         ; preds = %if.end17, %do.end14
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local nonnull ptr @lock_chain_get_class(ptr nocapture noundef readonly %chain, i32 noundef %i) local_unnamed_addr #12 align 64 {
entry:
  %0 = ptrtoint ptr %chain to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load = load i32, ptr %chain, align 8
  %bf.clear = and i32 %bf.load, 16777215
  %add = add i32 %bf.clear, %i
  %arrayidx = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %add
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %arrayidx, align 2
  %3 = and i16 %2, 8191
  %and.i = zext i16 %3 to i32
  %add.ptr = getelementptr %struct.lock_class, ptr @lock_classes, i32 %and.i
  ret ptr %add.ptr
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @lockdep_next_lockchain(i32 noundef %i) local_unnamed_addr #0 align 64 {
entry:
  %add = add i32 %i, 1
  %call = tail call i32 @_find_next_bit_be(ptr noundef nonnull @lock_chains_in_use, i32 noundef 65536, i32 noundef %add) #28
  %cmp = icmp ult i32 %call, 65536
  %spec.select = select i1 %cmp, i32 %call, i32 -2
  ret i32 %spec.select
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_bit_be(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @lock_chain_count() local_unnamed_addr #0 align 64 {
entry:
  %call4.i = tail call i32 @__bitmap_weight(ptr noundef nonnull @lock_chains_in_use, i32 noundef 65536) #28
  ret i32 %call4.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @print_irqtrace_events(ptr nocapture noundef readonly %curr) local_unnamed_addr #0 align 64 {
entry:
  %irqtrace = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 135
  %0 = ptrtoint ptr %irqtrace to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %irqtrace, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.17, i32 noundef %1) #32
  %hardirq_enable_event = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 135, i32 3
  %2 = ptrtoint ptr %hardirq_enable_event to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %hardirq_enable_event, align 4
  %hardirq_enable_ip = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 135, i32 1
  %4 = ptrtoint ptr %hardirq_enable_ip to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %hardirq_enable_ip, align 4
  %6 = inttoptr i32 %5 to ptr
  %call6 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.20, i32 noundef %3, ptr noundef %6, ptr noundef %6) #32
  %hardirq_disable_event = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 135, i32 4
  %7 = ptrtoint ptr %hardirq_disable_event to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %hardirq_disable_event, align 4
  %hardirq_disable_ip = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 135, i32 2
  %9 = ptrtoint ptr %hardirq_disable_ip to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %hardirq_disable_ip, align 4
  %11 = inttoptr i32 %10 to ptr
  %call12 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.23, i32 noundef %8, ptr noundef %11, ptr noundef %11) #32
  %softirq_enable_event = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 135, i32 8
  %12 = ptrtoint ptr %softirq_enable_event to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %softirq_enable_event, align 4
  %softirq_enable_ip = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 135, i32 6
  %14 = ptrtoint ptr %softirq_enable_ip to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %softirq_enable_ip, align 4
  %16 = inttoptr i32 %15 to ptr
  %call18 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.26, i32 noundef %13, ptr noundef %16, ptr noundef %16) #32
  %softirq_disable_event = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 135, i32 7
  %17 = ptrtoint ptr %softirq_disable_event to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %softirq_disable_event, align 4
  %softirq_disable_ip = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 135, i32 5
  %19 = ptrtoint ptr %softirq_disable_ip to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %softirq_disable_ip, align 4
  %21 = inttoptr i32 %20 to ptr
  %call24 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.29, i32 noundef %18, ptr noundef %21, ptr noundef %21) #32
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lockdep_hardirqs_on_prepare(i32 %ip) #0 align 64 {
entry:
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %return, label %if.end, !prof !1501

if.end:                                           ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %4, 15728640
  %tobool4.not = icmp eq i32 %and, 0
  br i1 %tobool4.not, label %if.end12, label %return, !prof !1500

if.end12:                                         ; preds = %if.end
  %5 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %8, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1513
  %9 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, ptrtoint (ptr @lockdep_recursion to i32)
  %15 = inttoptr i32 %add to ptr
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %15, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1514
  %18 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i340 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i340 to ptr
  %preempt_count.i.i341 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i341 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i341, align 4
  %sub.i = add i32 %21, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i341, align 4
  %tobool32.not = icmp eq i32 %17, 0
  br i1 %tobool32.not, label %if.end40, label %return, !prof !1500

if.end40:                                         ; preds = %if.end12
  %22 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i342 = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i342 to ptr
  %preempt_count.i.i343 = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i343 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i343, align 4
  %add.i344 = add i32 %25, 1
  store volatile i32 %add.i344, ptr %preempt_count.i.i343, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1515
  %26 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu, align 4
  %arrayidx64 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %27
  %28 = ptrtoint ptr %arrayidx64 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx64, align 4
  %add65 = add i32 %29, ptrtoint (ptr @hardirqs_enabled to i32)
  %30 = inttoptr i32 %add65 to ptr
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %30, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1516
  %33 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i345 = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i345 to ptr
  %preempt_count.i.i346 = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i346 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i346, align 4
  %sub.i347 = add i32 %36, -1
  store volatile i32 %sub.i347, ptr %preempt_count.i.i346, align 4
  %tobool72.not = icmp eq i32 %32, 0
  br i1 %tobool72.not, label %if.end133, label %do.body81, !prof !1500

do.body81:                                        ; preds = %if.end40
  %37 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28, !srcloc !1503
  %38 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %cpu, align 4
  %arrayidx101 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %39
  %40 = ptrtoint ptr %arrayidx101 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %arrayidx101, align 4
  %add102 = add i32 %41, ptrtoint (ptr getelementptr inbounds (%struct.lockdep_stats, ptr @lockdep_stats, i32 0, i32 4) to i32)
  %42 = inttoptr i32 %add102 to ptr
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %42, align 4
  %add103 = add i32 %44, 1
  store i32 %add103, ptr %42, align 4
  %45 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i355 = and i32 %45, 128
  %tobool114.not = icmp eq i32 %and.i.i355, 0
  br i1 %tobool114.not, label %if.then123, label %do.end126, !prof !1501

if.then123:                                       ; preds = %do.body81
  tail call void @warn_bogus_irq_restore() #28
  br label %do.end126

do.end126:                                        ; preds = %if.then123, %do.body81
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %37) #28, !srcloc !1506
  br label %return

if.end133:                                        ; preds = %if.end40
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %46 = load i32, ptr @oops_in_progress, align 4
  %tobool135.not = icmp eq i32 %46, 0
  br i1 %tobool135.not, label %land.lhs.true, label %if.end330

land.lhs.true:                                    ; preds = %if.end133
  %47 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i356 = and i32 %47, 128
  %tobool153.not = icmp eq i32 %and.i356, 0
  br i1 %tobool153.not, label %do.end165, label %if.end204, !prof !1501

do.end165:                                        ; preds = %land.lhs.true
  %call166 = tail call i32 @debug_locks_off() #28
  %tobool167.not = icmp eq i32 %call166, 0
  br i1 %tobool167.not, label %return, label %land.lhs.true168

land.lhs.true168:                                 ; preds = %do.end165
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %48 = load i32, ptr @debug_locks_silent, align 4
  %tobool169.not = icmp eq i32 %48, 0
  br i1 %tobool169.not, label %do.end182, label %return

do.end182:                                        ; preds = %land.lhs.true168
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4273, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.32) #28
  br label %return

if.end204:                                        ; preds = %land.lhs.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %.pr = load i32, ptr @oops_in_progress, align 4
  %tobool206.not = icmp eq i32 %.pr, 0
  br i1 %tobool206.not, label %land.lhs.true207, label %if.end330

land.lhs.true207:                                 ; preds = %if.end204
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @early_boot_irqs_disabled to i32))
  %49 = load i8, ptr @early_boot_irqs_disabled, align 1, !range !1517
  %tobool208.not = icmp eq i8 %49, 0
  br i1 %tobool208.not, label %land.lhs.true261, label %do.end218, !prof !1500

do.end218:                                        ; preds = %land.lhs.true207
  %call219 = tail call i32 @debug_locks_off() #28
  %tobool220.not = icmp eq i32 %call219, 0
  br i1 %tobool220.not, label %return, label %land.lhs.true221

land.lhs.true221:                                 ; preds = %do.end218
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %50 = load i32, ptr @debug_locks_silent, align 4
  %tobool222.not = icmp eq i32 %50, 0
  br i1 %tobool222.not, label %do.end236, label %return

do.end236:                                        ; preds = %land.lhs.true221
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4279, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.33) #28
  br label %return

land.lhs.true261:                                 ; preds = %land.lhs.true207
  %51 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %cpu, align 4
  %arrayidx277 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %52
  %53 = ptrtoint ptr %arrayidx277 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %arrayidx277, align 4
  %add278 = add i32 %54, ptrtoint (ptr @hardirq_context to i32)
  %55 = inttoptr i32 %add278 to ptr
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %55, align 4
  %tobool280.not = icmp eq i32 %57, 0
  br i1 %tobool280.not, label %if.end330, label %do.end290, !prof !1500

do.end290:                                        ; preds = %land.lhs.true261
  %call291 = tail call i32 @debug_locks_off() #28
  %tobool292.not = icmp eq i32 %call291, 0
  br i1 %tobool292.not, label %return, label %land.lhs.true293

land.lhs.true293:                                 ; preds = %do.end290
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %58 = load i32, ptr @debug_locks_silent, align 4
  %tobool294.not = icmp eq i32 %58, 0
  br i1 %tobool294.not, label %do.end308, label %return

do.end308:                                        ; preds = %land.lhs.true293
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4286, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.34) #28
  br label %return

if.end330:                                        ; preds = %land.lhs.true261, %if.end204, %if.end133
  %task = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %59 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %task, align 8
  %curr_chain_key = getelementptr inbounds %struct.task_struct, ptr %60, i32 0, i32 141
  %61 = ptrtoint ptr %curr_chain_key to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %curr_chain_key, align 16
  %hardirq_chain_key = getelementptr inbounds %struct.task_struct, ptr %60, i32 0, i32 137
  %63 = ptrtoint ptr %hardirq_chain_key to i32
  call void @__asan_store8_noabort(i32 %63)
  store i64 %62, ptr %hardirq_chain_key, align 8
  %64 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i348 = and i32 %64, -16384
  %65 = inttoptr i32 %and.i.i348 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %65, i32 0, i32 3
  %66 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %67
  %68 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %arrayidx.i, align 4
  %add.i349 = add i32 %69, ptrtoint (ptr @lockdep_recursion to i32)
  %70 = inttoptr i32 %add.i349 to ptr
  %71 = ptrtoint ptr %70 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %70, align 4
  %add7.i = add i32 %72, 1
  store i32 %add7.i, ptr %70, align 4
  %73 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i357 = and i32 %73, -16384
  %74 = inttoptr i32 %and.i.i357 to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %74, i32 0, i32 2
  %75 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %task.i, align 8
  %lockdep_depth.i.i = getelementptr inbounds %struct.task_struct, ptr %76, i32 0, i32 142
  %77 = ptrtoint ptr %lockdep_depth.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %lockdep_depth.i.i, align 8
  %cmp32.i.i = icmp sgt i32 %78, 0
  br i1 %cmp32.i.i, label %for.body.lr.ph.i.i, label %if.end.i

for.body.lr.ph.i.i:                               ; preds = %if.end330
  %held_locks.i.i = getelementptr inbounds %struct.task_struct, ptr %76, i32 0, i32 144
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i, %for.body.lr.ph.i.i
  %i.033.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.inc.i.i ]
  %read.i.i = getelementptr %struct.held_lock, ptr %held_locks.i.i, i32 %i.033.i.i, i32 6
  %79 = ptrtoint ptr %read.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %bf.load.i.i = load i32, ptr %read.i.i, align 8
  %80 = and i32 %bf.load.i.i, 8192
  %tobool15.not.i.i = icmp eq i32 %80, 0
  br i1 %tobool15.not.i.i, label %for.inc.i.i, label %if.end17.i.i

if.end17.i.i:                                     ; preds = %for.body.i.i
  %81 = and i32 %bf.load.i.i, 49152
  %tobool.not.i.not.i = icmp eq i32 %81, 0
  %spec.select.i.i = select i1 %tobool.not.i.not.i, i32 2, i32 3
  %add.ptr.i.i = getelementptr %struct.held_lock, ptr %held_locks.i.i, i32 %i.033.i.i
  %call.i.i = tail call fastcc i32 @mark_lock(ptr noundef %76, ptr noundef %add.ptr.i.i, i32 noundef %spec.select.i.i) #28
  %tobool18.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool18.not.i.i, label %__trace_hardirqs_on_caller.exit, label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.end17.i.i, %for.body.i.i
  %inc.i.i = add nuw nsw i32 %i.033.i.i, 1
  %82 = ptrtoint ptr %lockdep_depth.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %lockdep_depth.i.i, align 8
  %cmp.i.i = icmp slt i32 %inc.i.i, %83
  br i1 %cmp.i.i, label %for.body.i.i, label %if.end.i

if.end.i:                                         ; preds = %for.inc.i.i, %if.end330
  %softirqs_enabled.i = getelementptr inbounds %struct.task_struct, ptr %76, i32 0, i32 138
  %84 = ptrtoint ptr %softirqs_enabled.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %softirqs_enabled.i, align 32
  %tobool2.not.i = icmp eq i32 %85, 0
  br i1 %tobool2.not.i, label %__trace_hardirqs_on_caller.exit, label %if.then3.i

if.then3.i:                                       ; preds = %if.end.i
  %86 = ptrtoint ptr %lockdep_depth.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %lockdep_depth.i.i, align 8
  %cmp32.i9.i = icmp sgt i32 %87, 0
  br i1 %cmp32.i9.i, label %for.body.lr.ph.i11.i, label %__trace_hardirqs_on_caller.exit

for.body.lr.ph.i11.i:                             ; preds = %if.then3.i
  %held_locks.i10.i = getelementptr inbounds %struct.task_struct, ptr %76, i32 0, i32 144
  br label %for.body.i20.i

for.body.i20.i:                                   ; preds = %for.inc.i29.i, %for.body.lr.ph.i11.i
  %i.033.i12.i = phi i32 [ 0, %for.body.lr.ph.i11.i ], [ %inc.i27.i, %for.inc.i29.i ]
  %read.i14.i = getelementptr %struct.held_lock, ptr %held_locks.i10.i, i32 %i.033.i12.i, i32 6
  %88 = ptrtoint ptr %read.i14.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %bf.load.i15.i = load i32, ptr %read.i14.i, align 8
  %89 = and i32 %bf.load.i15.i, 8192
  %tobool15.not.i22.i = icmp eq i32 %89, 0
  br i1 %tobool15.not.i22.i, label %for.inc.i29.i, label %if.end17.i26.i

if.end17.i26.i:                                   ; preds = %for.body.i20.i
  %90 = and i32 %bf.load.i15.i, 49152
  %tobool.not.i16.not.i = icmp eq i32 %90, 0
  %spec.select.i18.i = select i1 %tobool.not.i16.not.i, i32 6, i32 7
  %add.ptr.i13.i = getelementptr %struct.held_lock, ptr %held_locks.i10.i, i32 %i.033.i12.i
  %call.i24.i = tail call fastcc i32 @mark_lock(ptr noundef %76, ptr noundef %add.ptr.i13.i, i32 noundef %spec.select.i18.i) #28
  %tobool18.not.i25.i = icmp eq i32 %call.i24.i, 0
  br i1 %tobool18.not.i25.i, label %__trace_hardirqs_on_caller.exit, label %for.inc.i29.i

for.inc.i29.i:                                    ; preds = %if.end17.i26.i, %for.body.i20.i
  %inc.i27.i = add nuw nsw i32 %i.033.i12.i, 1
  %91 = ptrtoint ptr %lockdep_depth.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %lockdep_depth.i.i, align 8
  %cmp.i28.i = icmp slt i32 %inc.i27.i, %92
  br i1 %cmp.i28.i, label %for.body.i20.i, label %__trace_hardirqs_on_caller.exit

__trace_hardirqs_on_caller.exit:                  ; preds = %for.inc.i29.i, %if.end17.i26.i, %if.then3.i, %if.end.i, %if.end17.i.i
  %93 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i350 = and i32 %93, -16384
  %94 = inttoptr i32 %and.i.i350 to ptr
  %cpu.i351 = getelementptr inbounds %struct.thread_info, ptr %94, i32 0, i32 3
  %95 = ptrtoint ptr %cpu.i351 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %cpu.i351, align 4
  %arrayidx.i352 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %96
  %97 = ptrtoint ptr %arrayidx.i352 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %arrayidx.i352, align 4
  %add.i353 = add i32 %98, ptrtoint (ptr @lockdep_recursion to i32)
  %99 = inttoptr i32 %add.i353 to ptr
  %100 = ptrtoint ptr %99 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %99, align 4
  %add7.i354 = add i32 %101, -1
  store i32 %add7.i354, ptr %99, align 4
  %tobool.not.i = icmp eq i32 %add7.i354, 0
  br i1 %tobool.not.i, label %return, label %land.rhs.i

land.rhs.i:                                       ; preds = %__trace_hardirqs_on_caller.exit
  %.b76.i = load i1, ptr @lockdep_recursion_finish.__already_done, align 1
  br i1 %.b76.i, label %if.then50.i, label %if.then.i, !prof !1500

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @lockdep_recursion_finish.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 438, i32 noundef 9, ptr noundef null) #28
  br label %if.then50.i

if.then50.i:                                      ; preds = %if.then.i, %land.rhs.i
  %102 = ptrtoint ptr %cpu.i351 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %cpu.i351, align 4
  %arrayidx66.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %103
  %104 = ptrtoint ptr %arrayidx66.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %arrayidx66.i, align 4
  %add67.i = add i32 %105, ptrtoint (ptr @lockdep_recursion to i32)
  %106 = inttoptr i32 %add67.i to ptr
  %107 = ptrtoint ptr %106 to i32
  call void @__asan_store4_noabort(i32 %107)
  store i32 0, ptr %106, align 4
  br label %return

return:                                           ; preds = %if.then50.i, %__trace_hardirqs_on_caller.exit, %do.end308, %land.lhs.true293, %do.end290, %do.end236, %land.lhs.true221, %do.end218, %do.end182, %land.lhs.true168, %do.end165, %do.end126, %if.end12, %if.end, %entry
  ret void
}

; Function Attrs: inlinehint mustprogress nofree nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc ptr @current_thread_info() unnamed_addr #13 align 64 {
entry:
  %0 = tail call i32 @llvm.read_register.i32(metadata !1491)
  %and = and i32 %0, -16384
  %1 = inttoptr i32 %and to ptr
  ret ptr %1
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @arch_local_save_flags() unnamed_addr #10 align 64 {
entry:
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  ret i32 %0
}

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @arch_irqs_disabled_flags(i32 noundef %flags) unnamed_addr #14 align 64 {
entry:
  %and = and i32 %flags, 128
  ret i32 %and
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_locks_off() local_unnamed_addr #2

; Function Attrs: noinline noprofile nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @lockdep_hardirqs_on(i32 noundef %ip) #15 section ".noinstr.text" align 64 {
entry:
  %call = tail call fastcc ptr @current_thread_info() #33
  %task = getelementptr inbounds %struct.thread_info, ptr %call, i32 0, i32 2
  %0 = load ptr, ptr %task, align 8
  %irqtrace = getelementptr inbounds %struct.task_struct, ptr %0, i32 0, i32 135
  %1 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %cleanup, label %if.end, !prof !1501

if.end:                                           ; preds = %entry
  %2 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %4, 15728640
  %tobool5.not = icmp eq i32 %and, 0
  br i1 %tobool5.not, label %if.end13, label %cleanup, !prof !1500

if.end13:                                         ; preds = %if.end
  %5 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %7 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %7, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1518
  %cpu = getelementptr inbounds %struct.thread_info, ptr %call, i32 0, i32 3
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = load i32, ptr %arrayidx, align 4
  %add = add i32 %9, ptrtoint (ptr @lockdep_recursion to i32)
  %10 = inttoptr i32 %add to ptr
  %11 = load volatile i32, ptr %10, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1519
  %12 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i379 = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i379 to ptr
  %preempt_count.i.i380 = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 1
  %14 = load volatile i32, ptr %preempt_count.i.i380, align 4
  %sub.i = add i32 %14, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i380, align 4
  %tobool33.not = icmp eq i32 %11, 0
  br i1 %tobool33.not, label %if.end41, label %cleanup, !prof !1500

if.end41:                                         ; preds = %if.end13
  %15 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i381 = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i.i381 to ptr
  %preempt_count.i.i382 = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 1
  %17 = load volatile i32, ptr %preempt_count.i.i382, align 4
  %add.i383 = add i32 %17, 1
  store volatile i32 %add.i383, ptr %preempt_count.i.i382, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1520
  %18 = load i32, ptr %cpu, align 4
  %arrayidx65 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %18
  %19 = load i32, ptr %arrayidx65, align 4
  %add66 = add i32 %19, ptrtoint (ptr @hardirqs_enabled to i32)
  %20 = inttoptr i32 %add66 to ptr
  %21 = load volatile i32, ptr %20, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1521
  %22 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i384 = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i384 to ptr
  %preempt_count.i.i385 = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = load volatile i32, ptr %preempt_count.i.i385, align 4
  %sub.i386 = add i32 %24, -1
  store volatile i32 %sub.i386, ptr %preempt_count.i.i385, align 4
  %tobool73.not = icmp eq i32 %21, 0
  br i1 %tobool73.not, label %if.end128, label %do.body76

do.body76:                                        ; preds = %if.end41
  %call83 = tail call fastcc i32 @arch_local_irq_save()
  %25 = load i32, ptr %cpu, align 4
  %arrayidx96 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %25
  %26 = load i32, ptr %arrayidx96, align 4
  %add97 = add i32 %26, ptrtoint (ptr getelementptr inbounds (%struct.lockdep_stats, ptr @lockdep_stats, i32 0, i32 4) to i32)
  %27 = inttoptr i32 %add97 to ptr
  %28 = load i32, ptr %27, align 4
  %add98 = add i32 %28, 1
  store i32 %add98, ptr %27, align 4
  %call108 = tail call fastcc i32 @arch_irqs_disabled()
  %tobool109.not = icmp eq i32 %call108, 0
  br i1 %tobool109.not, label %if.then118, label %do.end121, !prof !1501

if.then118:                                       ; preds = %do.body76
  tail call void @warn_bogus_irq_restore() #28
  br label %do.end121

do.end121:                                        ; preds = %if.then118, %do.body76
  tail call fastcc void @arch_local_irq_restore(i32 noundef %call83)
  br label %cleanup

if.end128:                                        ; preds = %if.end41
  %29 = load i32, ptr @oops_in_progress, align 4
  %tobool130.not = icmp eq i32 %29, 0
  br i1 %tobool130.not, label %land.lhs.true, label %if.end254

land.lhs.true:                                    ; preds = %if.end128
  %call137 = tail call fastcc i32 @arch_local_save_flags()
  %call147 = tail call fastcc i32 @arch_irqs_disabled_flags(i32 noundef %call137)
  %tobool148.not = icmp eq i32 %call147, 0
  br i1 %tobool148.not, label %do.end160, label %if.end199, !prof !1501

do.end160:                                        ; preds = %land.lhs.true
  %call161 = tail call i32 @debug_locks_off() #28
  %tobool162 = icmp eq i32 %call161, 0
  %30 = load i32, ptr @debug_locks_silent, align 4
  %tobool164 = icmp ne i32 %30, 0
  %or.cond = select i1 %tobool162, i1 true, i1 %tobool164
  br i1 %or.cond, label %cleanup, label %do.end177

do.end177:                                        ; preds = %do.end160
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4342, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.32) #28
  br label %cleanup

if.end199:                                        ; preds = %land.lhs.true
  %.pr = load i32, ptr @oops_in_progress, align 4
  %tobool201.not = icmp eq i32 %.pr, 0
  br i1 %tobool201.not, label %land.lhs.true202, label %if.end254

land.lhs.true202:                                 ; preds = %if.end199
  %31 = load ptr, ptr %task, align 8
  %hardirq_chain_key = getelementptr inbounds %struct.task_struct, ptr %31, i32 0, i32 137
  %32 = load i64, ptr %hardirq_chain_key, align 8
  %curr_chain_key = getelementptr inbounds %struct.task_struct, ptr %31, i32 0, i32 141
  %33 = load i64, ptr %curr_chain_key, align 16
  %cmp207.not = icmp eq i64 %32, %33
  br i1 %cmp207.not, label %if.end254, label %do.end218, !prof !1500

do.end218:                                        ; preds = %land.lhs.true202
  %call219 = tail call i32 @debug_locks_off() #28
  %tobool220 = icmp eq i32 %call219, 0
  %34 = load i32, ptr @debug_locks_silent, align 4
  %tobool222 = icmp ne i32 %34, 0
  %or.cond370 = select i1 %tobool220, i1 true, i1 %tobool222
  br i1 %or.cond370, label %if.end254, label %do.end236

do.end236:                                        ; preds = %do.end218
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4350, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.35) #28
  br label %if.end254

if.end254:                                        ; preds = %do.end236, %do.end218, %land.lhs.true202, %if.end199, %if.end128
  %35 = load i32, ptr %cpu, align 4
  %arrayidx271 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %35
  %36 = load i32, ptr %arrayidx271, align 4
  %add272 = add i32 %36, ptrtoint (ptr @hardirqs_enabled to i32)
  %37 = inttoptr i32 %add272 to ptr
  store i32 1, ptr %37, align 4
  %hardirq_enable_ip = getelementptr inbounds %struct.task_struct, ptr %0, i32 0, i32 135, i32 1
  store i32 %ip, ptr %hardirq_enable_ip, align 4
  %38 = load i32, ptr %irqtrace, align 4
  %inc = add i32 %38, 1
  store i32 %inc, ptr %irqtrace, align 4
  %hardirq_enable_event = getelementptr inbounds %struct.task_struct, ptr %0, i32 0, i32 135, i32 3
  store i32 %inc, ptr %hardirq_enable_event, align 4
  %call284 = tail call fastcc i32 @arch_local_save_flags()
  %call294 = tail call fastcc i32 @arch_irqs_disabled_flags(i32 noundef %call284)
  %tobool295.not = icmp eq i32 %call294, 0
  %.b377 = load i1, ptr @lockdep_hardirqs_on.__already_done, align 1
  %lnot305 = xor i1 %.b377, true
  %39 = select i1 %tobool295.not, i1 %lnot305, i1 false
  br i1 %39, label %if.then313, label %if.end340, !prof !1501

if.then313:                                       ; preds = %if.end254
  store i1 true, ptr @lockdep_hardirqs_on.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4357, i32 noundef 9, ptr noundef null) #28
  br label %if.end340

if.end340:                                        ; preds = %if.then313, %if.end254
  %40 = load i32, ptr %cpu, align 4
  %arrayidx363 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %40
  %41 = load i32, ptr %arrayidx363, align 4
  %add364 = add i32 %41, ptrtoint (ptr getelementptr inbounds (%struct.lockdep_stats, ptr @lockdep_stats, i32 0, i32 2) to i32)
  %42 = inttoptr i32 %add364 to ptr
  %43 = load i32, ptr %42, align 4
  %add365 = add i32 %43, 1
  store i32 %add365, ptr %42, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end340, %do.end177, %do.end160, %do.end121, %if.end13, %if.end, %entry
  ret void
}

; Function Attrs: noinline noprofile nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @lockdep_hardirqs_off(i32 noundef %ip) #15 section ".noinstr.text" align 64 {
entry:
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end330, label %if.end, !prof !1501

if.end:                                           ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %3, 15728640
  %tobool4.not = icmp eq i32 %and, 0
  br i1 %tobool4.not, label %if.else, label %if.end330

if.else:                                          ; preds = %if.end
  %call13 = tail call fastcc ptr @current_thread_info() #33
  %cpu = getelementptr inbounds %struct.thread_info, ptr %call13, i32 0, i32 3
  %4 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %4
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr @lockdep_recursion to i32)
  %6 = inttoptr i32 %add to ptr
  %7 = load i32, ptr %6, align 4
  %tobool15.not = icmp eq i32 %7, 0
  br i1 %tobool15.not, label %if.end18, label %if.end330

if.end18:                                         ; preds = %if.else
  %8 = load i32, ptr @oops_in_progress, align 4
  %tobool19.not = icmp eq i32 %8, 0
  br i1 %tobool19.not, label %land.lhs.true, label %if.end84

land.lhs.true:                                    ; preds = %if.end18
  %call22 = tail call fastcc i32 @arch_local_save_flags()
  %call32 = tail call fastcc i32 @arch_irqs_disabled_flags(i32 noundef %call22)
  %tobool33.not = icmp eq i32 %call32, 0
  br i1 %tobool33.not, label %do.end45, label %if.end84, !prof !1501

do.end45:                                         ; preds = %land.lhs.true
  %call46 = tail call i32 @debug_locks_off() #28
  %tobool47 = icmp eq i32 %call46, 0
  %9 = load i32, ptr @debug_locks_silent, align 4
  %tobool49 = icmp ne i32 %9, 0
  %or.cond = select i1 %tobool47, i1 true, i1 %tobool49
  br i1 %or.cond, label %if.end330, label %do.end62

do.end62:                                         ; preds = %do.end45
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4384, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.32) #28
  br label %if.end330

if.end84:                                         ; preds = %land.lhs.true, %if.end18
  %10 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1522
  %13 = load i32, ptr %cpu, align 4
  %arrayidx107 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %13
  %14 = load i32, ptr %arrayidx107, align 4
  %add108 = add i32 %14, ptrtoint (ptr @hardirqs_enabled to i32)
  %15 = inttoptr i32 %add108 to ptr
  %16 = load volatile i32, ptr %15, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1523
  %17 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i342 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i.i342 to ptr
  %preempt_count.i.i343 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 1
  %19 = load volatile i32, ptr %preempt_count.i.i343, align 4
  %sub.i = add i32 %19, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i343, align 4
  %tobool115.not = icmp eq i32 %16, 0
  br i1 %tobool115.not, label %if.else232, label %if.then116

if.then116:                                       ; preds = %if.end84
  %task = getelementptr inbounds %struct.thread_info, ptr %call13, i32 0, i32 2
  %20 = load ptr, ptr %task, align 8
  %irqtrace = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 135
  %21 = load i32, ptr %cpu, align 4
  %arrayidx133 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %21
  %22 = load i32, ptr %arrayidx133, align 4
  %add134 = add i32 %22, ptrtoint (ptr @hardirqs_enabled to i32)
  %23 = inttoptr i32 %add134 to ptr
  store i32 0, ptr %23, align 4
  %hardirq_disable_ip = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 135, i32 2
  store i32 %ip, ptr %hardirq_disable_ip, align 4
  %24 = load i32, ptr %irqtrace, align 4
  %inc = add i32 %24, 1
  store i32 %inc, ptr %irqtrace, align 4
  %hardirq_disable_event = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 135, i32 4
  store i32 %inc, ptr %hardirq_disable_event, align 4
  %call146 = tail call fastcc i32 @arch_local_save_flags()
  %call156 = tail call fastcc i32 @arch_irqs_disabled_flags(i32 noundef %call146)
  %tobool157.not = icmp eq i32 %call156, 0
  %.b340 = load i1, ptr @lockdep_hardirqs_off.__already_done, align 1
  %lnot167 = xor i1 %.b340, true
  %25 = select i1 %tobool157.not, i1 %lnot167, i1 false
  br i1 %25, label %if.then175, label %if.end202, !prof !1501

if.then175:                                       ; preds = %if.then116
  store i1 true, ptr @lockdep_hardirqs_off.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4396, i32 noundef 9, ptr noundef null) #28
  br label %if.end202

if.end202:                                        ; preds = %if.then175, %if.then116
  %26 = load i32, ptr %cpu, align 4
  %arrayidx225 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %26
  %27 = load i32, ptr %arrayidx225, align 4
  %add226 = add i32 %27, ptrtoint (ptr getelementptr inbounds (%struct.lockdep_stats, ptr @lockdep_stats, i32 0, i32 3) to i32)
  %28 = inttoptr i32 %add226 to ptr
  %29 = load i32, ptr %28, align 4
  %add227 = add i32 %29, 1
  store i32 %add227, ptr %28, align 4
  br label %if.end330

if.else232:                                       ; preds = %if.end84
  %call241 = tail call fastcc i32 @arch_local_save_flags()
  %call251 = tail call fastcc i32 @arch_irqs_disabled_flags(i32 noundef %call241)
  %tobool252.not = icmp eq i32 %call251, 0
  %.b338339 = load i1, ptr @lockdep_hardirqs_off.__already_done.39, align 1
  %lnot264 = xor i1 %.b338339, true
  %30 = select i1 %tobool252.not, i1 %lnot264, i1 false
  br i1 %30, label %if.then273, label %if.end300, !prof !1501

if.then273:                                       ; preds = %if.else232
  store i1 true, ptr @lockdep_hardirqs_off.__already_done.39, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4398, i32 noundef 9, ptr noundef null) #28
  br label %if.end300

if.end300:                                        ; preds = %if.then273, %if.else232
  %31 = load i32, ptr %cpu, align 4
  %arrayidx323 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %31
  %32 = load i32, ptr %arrayidx323, align 4
  %add324 = add i32 %32, ptrtoint (ptr getelementptr inbounds (%struct.lockdep_stats, ptr @lockdep_stats, i32 0, i32 5) to i32)
  %33 = inttoptr i32 %add324 to ptr
  %34 = load i32, ptr %33, align 4
  %add325 = add i32 %34, 1
  store i32 %add325, ptr %33, align 4
  br label %if.end330

if.end330:                                        ; preds = %if.end300, %if.end202, %do.end62, %do.end45, %if.else, %if.end, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lockdep_softirqs_on(i32 noundef %ip) local_unnamed_addr #0 align 64 {
entry:
  %0 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %irqtrace = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 135
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %4 = load i32, ptr @debug_locks, align 4
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %cleanup, label %if.end.i, !prof !1524

if.end.i:                                         ; preds = %entry
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %5 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %6, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1525
  %7 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %12, ptrtoint (ptr @lockdep_recursion to i32)
  %13 = inttoptr i32 %add.i to ptr
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %13, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1526
  %16 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i26.i = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i.i26.i to ptr
  %preempt_count.i.i27.i = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %preempt_count.i.i27.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %preempt_count.i.i27.i, align 4
  %sub.i.i = add i32 %19, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i27.i, align 4
  %tobool19.not.i = icmp eq i32 %15, 0
  br i1 %tobool19.not.i, label %lockdep_enabled.exit, label %cleanup, !prof !1527

lockdep_enabled.exit:                             ; preds = %if.end.i
  %task.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 2
  %20 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %task.i, align 8
  %lockdep_recursion.i = getelementptr inbounds %struct.task_struct, ptr %21, i32 0, i32 143
  %22 = ptrtoint ptr %lockdep_recursion.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %lockdep_recursion.i, align 4
  %tobool23.not.i = icmp eq i32 %23, 0
  br i1 %tobool23.not.i, label %if.end, label %cleanup, !prof !1500

if.end:                                           ; preds = %lockdep_enabled.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %24 = load i32, ptr @oops_in_progress, align 4
  %tobool4.not = icmp eq i32 %24, 0
  br i1 %tobool4.not, label %land.lhs.true, label %if.end65

land.lhs.true:                                    ; preds = %if.end
  %25 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i318 = and i32 %25, 128
  %tobool14.not = icmp eq i32 %and.i318, 0
  br i1 %tobool14.not, label %do.end26, label %if.end65, !prof !1501

do.end26:                                         ; preds = %land.lhs.true
  %call27 = tail call i32 @debug_locks_off() #28
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %cleanup, label %land.lhs.true29

land.lhs.true29:                                  ; preds = %do.end26
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %26 = load i32, ptr @debug_locks_silent, align 4
  %tobool30.not = icmp eq i32 %26, 0
  br i1 %tobool30.not, label %do.end43, label %cleanup

do.end43:                                         ; preds = %land.lhs.true29
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4417, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.32) #28
  br label %cleanup

if.end65:                                         ; preds = %land.lhs.true, %if.end
  %27 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %task, align 8
  %softirqs_enabled = getelementptr inbounds %struct.task_struct, ptr %28, i32 0, i32 138
  %29 = ptrtoint ptr %softirqs_enabled to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %softirqs_enabled, align 32
  %tobool68.not = icmp eq i32 %30, 0
  br i1 %tobool68.not, label %if.end158, label %if.then69

if.then69:                                        ; preds = %if.end65
  %31 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i319 = and i32 %31, 128
  %tobool88.not = icmp eq i32 %and.i319, 0
  br i1 %tobool88.not, label %land.rhs, label %if.end133

land.rhs:                                         ; preds = %if.then69
  %.b303 = load i1, ptr @lockdep_softirqs_on.__already_done, align 1
  br i1 %.b303, label %if.end133, label %if.then106, !prof !1500

if.then106:                                       ; preds = %land.rhs
  store i1 true, ptr @lockdep_softirqs_on.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4421, i32 noundef 9, ptr noundef null) #28
  br label %if.end133

if.end133:                                        ; preds = %if.then106, %land.rhs, %if.then69
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %32 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %33
  %34 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %arrayidx, align 4
  %add = add i32 %35, ptrtoint (ptr getelementptr inbounds (%struct.lockdep_stats, ptr @lockdep_stats, i32 0, i32 8) to i32)
  %36 = inttoptr i32 %add to ptr
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %36, align 4
  %add153 = add i32 %38, 1
  store i32 %add153, ptr %36, align 4
  br label %cleanup

if.end158:                                        ; preds = %if.end65
  %39 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i305 = and i32 %39, -16384
  %40 = inttoptr i32 %and.i.i305 to ptr
  %cpu.i306 = getelementptr inbounds %struct.thread_info, ptr %40, i32 0, i32 3
  %41 = ptrtoint ptr %cpu.i306 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %cpu.i306, align 4
  %arrayidx.i307 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %42
  %43 = ptrtoint ptr %arrayidx.i307 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx.i307, align 4
  %add.i308 = add i32 %44, ptrtoint (ptr @lockdep_recursion to i32)
  %45 = inttoptr i32 %add.i308 to ptr
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %45, align 4
  %add7.i = add i32 %47, 1
  store i32 %add7.i, ptr %45, align 4
  %48 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %task, align 8
  %softirqs_enabled161 = getelementptr inbounds %struct.task_struct, ptr %49, i32 0, i32 138
  %50 = ptrtoint ptr %softirqs_enabled161 to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 1, ptr %softirqs_enabled161, align 32
  %softirq_enable_ip = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 135, i32 6
  %51 = ptrtoint ptr %softirq_enable_ip to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %ip, ptr %softirq_enable_ip, align 4
  %52 = ptrtoint ptr %irqtrace to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %irqtrace, align 4
  %inc = add i32 %53, 1
  store i32 %inc, ptr %irqtrace, align 4
  %softirq_enable_event = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 135, i32 8
  %54 = ptrtoint ptr %softirq_enable_event to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %inc, ptr %softirq_enable_event, align 4
  %55 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i320 = and i32 %55, 128
  %tobool181.not = icmp eq i32 %and.i320, 0
  br i1 %tobool181.not, label %land.rhs191, label %if.end229

land.rhs191:                                      ; preds = %if.end158
  %.b301302 = load i1, ptr @lockdep_softirqs_on.__already_done.40, align 1
  br i1 %.b301302, label %if.end229, label %if.then202, !prof !1500

if.then202:                                       ; preds = %land.rhs191
  store i1 true, ptr @lockdep_softirqs_on.__already_done.40, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4432, i32 noundef 9, ptr noundef null) #28
  br label %if.end229

if.end229:                                        ; preds = %if.then202, %land.rhs191, %if.end158
  %cpu251 = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %56 = ptrtoint ptr %cpu251 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %cpu251, align 4
  %arrayidx252 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %57
  %58 = ptrtoint ptr %arrayidx252 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %arrayidx252, align 4
  %add253 = add i32 %59, ptrtoint (ptr getelementptr inbounds (%struct.lockdep_stats, ptr @lockdep_stats, i32 0, i32 6) to i32)
  %60 = inttoptr i32 %add253 to ptr
  %61 = ptrtoint ptr %60 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %60, align 4
  %add254 = add i32 %62, 1
  store i32 %add254, ptr %60, align 4
  %63 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i = and i32 %63, -16384
  %64 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %64, i32 0, i32 1
  %65 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i309 = add i32 %66, 1
  store volatile i32 %add.i309, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1528
  %67 = ptrtoint ptr %cpu251 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %cpu251, align 4
  %arrayidx280 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %68
  %69 = ptrtoint ptr %arrayidx280 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %arrayidx280, align 4
  %add281 = add i32 %70, ptrtoint (ptr @hardirqs_enabled to i32)
  %71 = inttoptr i32 %add281 to ptr
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %71, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1529
  %74 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i310 = and i32 %74, -16384
  %75 = inttoptr i32 %and.i.i.i310 to ptr
  %preempt_count.i.i311 = getelementptr inbounds %struct.thread_info, ptr %75, i32 0, i32 1
  %76 = ptrtoint ptr %preempt_count.i.i311 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %preempt_count.i.i311, align 4
  %sub.i = add i32 %77, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i311, align 4
  %tobool288.not = icmp eq i32 %73, 0
  br i1 %tobool288.not, label %if.end293, label %if.then289

if.then289:                                       ; preds = %if.end229
  %78 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %task, align 8
  %lockdep_depth.i = getelementptr inbounds %struct.task_struct, ptr %79, i32 0, i32 142
  %80 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %lockdep_depth.i, align 8
  %cmp32.i = icmp sgt i32 %81, 0
  br i1 %cmp32.i, label %for.body.lr.ph.i, label %if.end293

for.body.lr.ph.i:                                 ; preds = %if.then289
  %held_locks.i = getelementptr inbounds %struct.task_struct, ptr %79, i32 0, i32 144
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %i.033.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i ]
  %read.i = getelementptr %struct.held_lock, ptr %held_locks.i, i32 %i.033.i, i32 6
  %82 = ptrtoint ptr %read.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %bf.load.i = load i32, ptr %read.i, align 8
  %83 = and i32 %bf.load.i, 8192
  %tobool15.not.i = icmp eq i32 %83, 0
  br i1 %tobool15.not.i, label %for.inc.i, label %if.end17.i

if.end17.i:                                       ; preds = %for.body.i
  %84 = and i32 %bf.load.i, 49152
  %tobool.not.i321.not = icmp eq i32 %84, 0
  %spec.select.i = select i1 %tobool.not.i321.not, i32 6, i32 7
  %add.ptr.i = getelementptr %struct.held_lock, ptr %held_locks.i, i32 %i.033.i
  %call.i = tail call fastcc i32 @mark_lock(ptr noundef %79, ptr noundef %add.ptr.i, i32 noundef %spec.select.i) #28
  %tobool18.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool18.not.i, label %if.end293, label %for.inc.i

for.inc.i:                                        ; preds = %if.end17.i, %for.body.i
  %inc.i = add nuw nsw i32 %i.033.i, 1
  %85 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %lockdep_depth.i, align 8
  %cmp.i = icmp slt i32 %inc.i, %86
  br i1 %cmp.i, label %for.body.i, label %if.end293

if.end293:                                        ; preds = %for.inc.i, %if.end17.i, %if.then289, %if.end229
  %87 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i312 = and i32 %87, -16384
  %88 = inttoptr i32 %and.i.i312 to ptr
  %cpu.i313 = getelementptr inbounds %struct.thread_info, ptr %88, i32 0, i32 3
  %89 = ptrtoint ptr %cpu.i313 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %cpu.i313, align 4
  %arrayidx.i314 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %90
  %91 = ptrtoint ptr %arrayidx.i314 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %arrayidx.i314, align 4
  %add.i315 = add i32 %92, ptrtoint (ptr @lockdep_recursion to i32)
  %93 = inttoptr i32 %add.i315 to ptr
  %94 = ptrtoint ptr %93 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %93, align 4
  %add7.i316 = add i32 %95, -1
  store i32 %add7.i316, ptr %93, align 4
  %tobool.not.i317 = icmp eq i32 %add7.i316, 0
  br i1 %tobool.not.i317, label %cleanup, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.end293
  %.b76.i = load i1, ptr @lockdep_recursion_finish.__already_done, align 1
  br i1 %.b76.i, label %if.then50.i, label %if.then.i, !prof !1500

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @lockdep_recursion_finish.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 438, i32 noundef 9, ptr noundef null) #28
  br label %if.then50.i

if.then50.i:                                      ; preds = %if.then.i, %land.rhs.i
  %96 = ptrtoint ptr %cpu.i313 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %cpu.i313, align 4
  %arrayidx66.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %97
  %98 = ptrtoint ptr %arrayidx66.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %arrayidx66.i, align 4
  %add67.i = add i32 %99, ptrtoint (ptr @lockdep_recursion to i32)
  %100 = inttoptr i32 %add67.i to ptr
  %101 = ptrtoint ptr %100 to i32
  call void @__asan_store4_noabort(i32 %101)
  store i32 0, ptr %100, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then50.i, %if.end293, %if.end133, %do.end43, %land.lhs.true29, %do.end26, %lockdep_enabled.exit, %if.end.i, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lockdep_softirqs_off(i32 noundef %ip) local_unnamed_addr #0 align 64 {
entry:
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %if.end312, label %if.end.i, !prof !1524

if.end.i:                                         ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %4, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1525
  %5 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add.i to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1526
  %14 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i26.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i26.i to ptr
  %preempt_count.i.i27.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i27.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i27.i, align 4
  %sub.i.i = add i32 %17, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i27.i, align 4
  %tobool19.not.i = icmp eq i32 %13, 0
  br i1 %tobool19.not.i, label %lockdep_enabled.exit, label %if.end312, !prof !1527

lockdep_enabled.exit:                             ; preds = %if.end.i
  %task.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %18 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task.i, align 8
  %lockdep_recursion.i = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 143
  %20 = ptrtoint ptr %lockdep_recursion.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %lockdep_recursion.i, align 4
  %tobool23.not.i = icmp eq i32 %21, 0
  br i1 %tobool23.not.i, label %if.end, label %if.end312, !prof !1500

if.end:                                           ; preds = %lockdep_enabled.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %22 = load i32, ptr @oops_in_progress, align 4
  %tobool3.not = icmp eq i32 %22, 0
  br i1 %tobool3.not, label %land.lhs.true, label %if.end64

land.lhs.true:                                    ; preds = %if.end
  %23 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i = and i32 %23, 128
  %tobool13.not = icmp eq i32 %and.i, 0
  br i1 %tobool13.not, label %do.end25, label %if.end64, !prof !1501

do.end25:                                         ; preds = %land.lhs.true
  %call26 = tail call i32 @debug_locks_off() #28
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %if.end312, label %land.lhs.true28

land.lhs.true28:                                  ; preds = %do.end25
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %24 = load i32, ptr @debug_locks_silent, align 4
  %tobool29.not = icmp eq i32 %24, 0
  br i1 %tobool29.not, label %do.end42, label %if.end312

do.end42:                                         ; preds = %land.lhs.true28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4454, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.32) #28
  br label %if.end312

if.end64:                                         ; preds = %land.lhs.true, %if.end
  %25 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i326 = and i32 %25, -16384
  %26 = inttoptr i32 %and.i326 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %26, i32 0, i32 2
  %27 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %task, align 8
  %softirqs_enabled = getelementptr inbounds %struct.task_struct, ptr %28, i32 0, i32 138
  %29 = ptrtoint ptr %softirqs_enabled to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %softirqs_enabled, align 32
  %tobool66.not = icmp eq i32 %30, 0
  br i1 %tobool66.not, label %if.else, label %if.then67

if.then67:                                        ; preds = %if.end64
  %irqtrace = getelementptr inbounds %struct.task_struct, ptr %28, i32 0, i32 135
  %31 = ptrtoint ptr %softirqs_enabled to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 0, ptr %softirqs_enabled, align 32
  %softirq_disable_ip = getelementptr inbounds %struct.task_struct, ptr %28, i32 0, i32 135, i32 5
  %32 = ptrtoint ptr %softirq_disable_ip to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %ip, ptr %softirq_disable_ip, align 4
  %33 = ptrtoint ptr %irqtrace to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %irqtrace, align 4
  %inc = add i32 %34, 1
  store i32 %inc, ptr %irqtrace, align 4
  %softirq_disable_event = getelementptr inbounds %struct.task_struct, ptr %28, i32 0, i32 135, i32 7
  %35 = ptrtoint ptr %softirq_disable_event to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %inc, ptr %softirq_disable_event, align 4
  %36 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i327 = and i32 %36, 128
  %tobool91.not = icmp eq i32 %and.i327, 0
  br i1 %tobool91.not, label %land.rhs, label %if.end136

land.rhs:                                         ; preds = %if.then67
  %.b323 = load i1, ptr @lockdep_softirqs_off.__already_done, align 1
  br i1 %.b323, label %if.end136, label %if.then109, !prof !1500

if.then109:                                       ; preds = %land.rhs
  store i1 true, ptr @lockdep_softirqs_off.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4466, i32 noundef 9, ptr noundef null) #28
  br label %if.end136

if.end136:                                        ; preds = %if.then109, %land.rhs, %if.then67
  %cpu = getelementptr inbounds %struct.thread_info, ptr %26, i32 0, i32 3
  %37 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %38
  %39 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx, align 4
  %add = add i32 %40, ptrtoint (ptr getelementptr inbounds (%struct.lockdep_stats, ptr @lockdep_stats, i32 0, i32 7) to i32)
  %41 = inttoptr i32 %add to ptr
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %41, align 4
  %add156 = add i32 %43, 1
  store i32 %add156, ptr %41, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %44 = load i32, ptr @oops_in_progress, align 4
  %tobool162.not = icmp eq i32 %44, 0
  br i1 %tobool162.not, label %land.lhs.true163, label %if.end312

land.lhs.true163:                                 ; preds = %if.end136
  %45 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i325 = and i32 %45, -16384
  %46 = inttoptr i32 %and.i.i325 to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %46, i32 0, i32 1
  %47 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %48, 65280
  %tobool165.not = icmp eq i32 %and, 0
  br i1 %tobool165.not, label %do.end177, label %if.end312, !prof !1501

do.end177:                                        ; preds = %land.lhs.true163
  %call178 = tail call i32 @debug_locks_off() #28
  %tobool179.not = icmp eq i32 %call178, 0
  br i1 %tobool179.not, label %if.end312, label %land.lhs.true180

land.lhs.true180:                                 ; preds = %do.end177
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %49 = load i32, ptr @debug_locks_silent, align 4
  %tobool181.not = icmp eq i32 %49, 0
  br i1 %tobool181.not, label %do.end195, label %if.end312

do.end195:                                        ; preds = %land.lhs.true180
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4470, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.41) #28
  br label %if.end312

if.else:                                          ; preds = %if.end64
  %50 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i328 = and i32 %50, 128
  %tobool234.not = icmp eq i32 %and.i328, 0
  br i1 %tobool234.not, label %land.rhs244, label %if.end282

land.rhs244:                                      ; preds = %if.else
  %.b321322 = load i1, ptr @lockdep_softirqs_off.__already_done.42, align 1
  br i1 %.b321322, label %if.end282, label %if.then255, !prof !1500

if.then255:                                       ; preds = %land.rhs244
  store i1 true, ptr @lockdep_softirqs_off.__already_done.42, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4472, i32 noundef 9, ptr noundef null) #28
  br label %if.end282

if.end282:                                        ; preds = %if.then255, %land.rhs244, %if.else
  %cpu304 = getelementptr inbounds %struct.thread_info, ptr %26, i32 0, i32 3
  %51 = ptrtoint ptr %cpu304 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %cpu304, align 4
  %arrayidx305 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %52
  %53 = ptrtoint ptr %arrayidx305 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %arrayidx305, align 4
  %add306 = add i32 %54, ptrtoint (ptr getelementptr inbounds (%struct.lockdep_stats, ptr @lockdep_stats, i32 0, i32 9) to i32)
  %55 = inttoptr i32 %add306 to ptr
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %55, align 4
  %add307 = add i32 %57, 1
  store i32 %add307, ptr %55, align 4
  br label %if.end312

if.end312:                                        ; preds = %if.end282, %do.end195, %land.lhs.true180, %do.end177, %land.lhs.true163, %if.end136, %do.end42, %land.lhs.true28, %do.end25, %lockdep_enabled.exit, %if.end.i, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lockdep_init_map_type(ptr noundef %lock, ptr noundef %name, ptr noundef %key, i32 noundef %subclass, i8 noundef zeroext %inner, i8 noundef zeroext %outer, i8 noundef zeroext %lock_type) #0 align 64 {
entry:
  %uglygep = getelementptr i8, ptr %lock, i32 4
  %0 = ptrtoint ptr %uglygep to i32
  call void @__asan_storeN_noabort(i32 %0, i32 8)
  store i64 0, ptr %uglygep, align 4
  %1 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cpu, align 4
  %cpu1 = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 6
  %5 = ptrtoint ptr %cpu1 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cpu1, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %6 = load i32, ptr @oops_in_progress, align 4
  %tobool.not = icmp eq i32 %6, 0
  %tobool2.not = icmp eq ptr %name, null
  %or.cond = and i1 %tobool2.not, %tobool.not
  br i1 %or.cond, label %do.end, label %if.end43, !prof !1530

do.end:                                           ; preds = %entry
  %call6 = tail call i32 @debug_locks_off() #28
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.then41, label %land.lhs.true8

land.lhs.true8:                                   ; preds = %do.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %7 = load i32, ptr @debug_locks_silent, align 4
  %tobool9.not = icmp eq i32 %7, 0
  br i1 %tobool9.not, label %do.end22, label %if.then41

do.end22:                                         ; preds = %land.lhs.true8
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4790, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.43) #28
  br label %if.then41

if.then41:                                        ; preds = %do.end22, %land.lhs.true8, %do.end
  %name42 = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 2
  %8 = ptrtoint ptr %name42 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr @.str.44, ptr %name42, align 4
  br label %cleanup260

if.end43:                                         ; preds = %entry
  %name44 = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 2
  %9 = ptrtoint ptr %name44 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %name, ptr %name44, align 4
  %wait_type_outer = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 3
  %10 = ptrtoint ptr %wait_type_outer to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 %outer, ptr %wait_type_outer, align 4
  %wait_type_inner = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 4
  %11 = ptrtoint ptr %wait_type_inner to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %inner, ptr %wait_type_inner, align 1
  %lock_type45 = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 5
  %12 = ptrtoint ptr %lock_type45 to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %lock_type, ptr %lock_type45, align 2
  %tobool49.not = icmp eq ptr %key, null
  %or.cond283 = and i1 %tobool49.not, %tobool.not
  br i1 %or.cond283, label %do.end61, label %if.end101, !prof !1530

do.end61:                                         ; preds = %if.end43
  %call62 = tail call i32 @debug_locks_off() #28
  %tobool63.not = icmp eq i32 %call62, 0
  br i1 %tobool63.not, label %cleanup260, label %land.lhs.true64

land.lhs.true64:                                  ; preds = %do.end61
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %13 = load i32, ptr @debug_locks_silent, align 4
  %tobool65.not = icmp eq i32 %13, 0
  br i1 %tobool65.not, label %do.end79, label %cleanup260

do.end79:                                         ; preds = %land.lhs.true64
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4804, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.45) #28
  br label %cleanup260

if.end101:                                        ; preds = %if.end43
  %14 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_state to i32))
  %15 = load i32, ptr @system_state, align 4
  %cmp.i.i = icmp ugt i32 %15, 1
  %cmp.not.i.i.i.i = icmp uge ptr %key, @__init_begin
  %add.ptr.i.i.i.i = getelementptr i8, ptr %key, i32 1
  %cmp1.i.i.i.i = icmp ule ptr %add.ptr.i.i.i.i, @__init_end
  %16 = and i1 %cmp.not.i.i.i.i, %cmp1.i.i.i.i
  %narrow.i.i = and i1 %16, %cmp.i.i
  br i1 %narrow.i.i, label %land.lhs.true104, label %if.end.i296

if.end.i296:                                      ; preds = %if.end101
  %cmp.not.i = icmp uge ptr %key, @_stext
  %cmp1.i = icmp ult ptr %key, @_end
  %or.cond.i = and i1 %cmp.not.i, %cmp1.i
  br i1 %or.cond.i, label %if.end158, label %if.end3.i

if.end3.i:                                        ; preds = %if.end.i296
  %call4.i = tail call zeroext i1 @is_kernel_percpu_address(i32 noundef %14) #28
  br i1 %call4.i, label %if.end158, label %if.end6.i

if.end6.i:                                        ; preds = %if.end3.i
  %call7.i = tail call zeroext i1 @is_module_address(i32 noundef %14) #28
  br i1 %call7.i, label %if.end158, label %static_obj.exit

static_obj.exit:                                  ; preds = %if.end6.i
  %call8.i = tail call zeroext i1 @is_module_percpu_address(i32 noundef %14) #28
  br i1 %call8.i, label %if.end158, label %land.lhs.true104

land.lhs.true104:                                 ; preds = %static_obj.exit, %if.end101
  %call105 = tail call fastcc zeroext i1 @is_dynamic_key(ptr noundef %key)
  br i1 %call105, label %if.end158, label %if.then106

if.then106:                                       ; preds = %land.lhs.true104
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %17 = load i32, ptr @debug_locks, align 4
  %tobool107.not = icmp eq i32 %17, 0
  br i1 %tobool107.not, label %if.end114, label %do.end111

do.end111:                                        ; preds = %if.then106
  %call113 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.46, ptr noundef %key) #32
  br label %if.end114

if.end114:                                        ; preds = %do.end111, %if.then106
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %18 = load i32, ptr @oops_in_progress, align 4
  %tobool116.not = icmp eq i32 %18, 0
  br i1 %tobool116.not, label %do.end120, label %cleanup260

do.end120:                                        ; preds = %if.end114
  %call121 = tail call i32 @debug_locks_off() #28
  %tobool122.not = icmp eq i32 %call121, 0
  br i1 %tobool122.not, label %cleanup260, label %land.lhs.true123

land.lhs.true123:                                 ; preds = %do.end120
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %19 = load i32, ptr @debug_locks_silent, align 4
  %tobool124.not = icmp eq i32 %19, 0
  br i1 %tobool124.not, label %do.end138, label %cleanup260

do.end138:                                        ; preds = %land.lhs.true123
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4813, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %cleanup260

if.end158:                                        ; preds = %land.lhs.true104, %static_obj.exit, %if.end6.i, %if.end3.i, %if.end.i296
  %20 = ptrtoint ptr %lock to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %key, ptr %lock, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %21 = load i32, ptr @debug_locks, align 4
  %tobool160.not = icmp eq i32 %21, 0
  %tobool171.not = icmp eq i32 %subclass, 0
  %or.cond284 = or i1 %tobool171.not, %tobool160.not
  br i1 %or.cond284, label %cleanup260, label %if.then172, !prof !1531

if.then172:                                       ; preds = %if.end158
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %22 = load i32, ptr @oops_in_progress, align 4
  %tobool174.not = icmp eq i32 %22, 0
  br i1 %tobool174.not, label %if.end.i, label %do.body229

if.end.i:                                         ; preds = %if.then172
  %23 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %26, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1525
  %27 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 3
  %29 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %30
  %31 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %32, ptrtoint (ptr @lockdep_recursion to i32)
  %33 = inttoptr i32 %add.i to ptr
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %33, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1526
  %36 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i26.i = and i32 %36, -16384
  %37 = inttoptr i32 %and.i.i.i26.i to ptr
  %preempt_count.i.i27.i = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 1
  %38 = ptrtoint ptr %preempt_count.i.i27.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %preempt_count.i.i27.i, align 4
  %sub.i.i = add i32 %39, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i27.i, align 4
  %tobool19.not.i = icmp eq i32 %35, 0
  br i1 %tobool19.not.i, label %lockdep_enabled.exit, label %do.end188, !prof !1527

lockdep_enabled.exit:                             ; preds = %if.end.i
  %task.i = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 2
  %40 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %task.i, align 8
  %lockdep_recursion.i = getelementptr inbounds %struct.task_struct, ptr %41, i32 0, i32 143
  %42 = ptrtoint ptr %lockdep_recursion.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %lockdep_recursion.i, align 4
  %tobool23.not.i = icmp eq i32 %43, 0
  br i1 %tobool23.not.i, label %do.body229, label %do.end188, !prof !1500

do.end188:                                        ; preds = %lockdep_enabled.exit, %if.end.i
  %call189 = tail call i32 @debug_locks_off() #28
  %tobool190.not = icmp eq i32 %call189, 0
  br i1 %tobool190.not, label %cleanup260, label %land.lhs.true191

land.lhs.true191:                                 ; preds = %do.end188
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %44 = load i32, ptr @debug_locks_silent, align 4
  %tobool192.not = icmp eq i32 %44, 0
  br i1 %tobool192.not, label %do.end206, label %cleanup260

do.end206:                                        ; preds = %land.lhs.true191
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4824, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.49) #28
  br label %cleanup260

do.body229:                                       ; preds = %lockdep_enabled.exit, %if.then172
  %45 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28, !srcloc !1503
  %46 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i286 = and i32 %46, -16384
  %47 = inttoptr i32 %and.i.i286 to ptr
  %cpu.i287 = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 3
  %48 = ptrtoint ptr %cpu.i287 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %cpu.i287, align 4
  %arrayidx.i288 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %49
  %50 = ptrtoint ptr %arrayidx.i288 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %arrayidx.i288, align 4
  %add.i289 = add i32 %51, ptrtoint (ptr @lockdep_recursion to i32)
  %52 = inttoptr i32 %add.i289 to ptr
  %53 = ptrtoint ptr %52 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %52, align 4
  %add7.i = add i32 %54, 1
  store i32 %add7.i, ptr %52, align 4
  %call235 = tail call fastcc ptr @register_lock_class(ptr noundef %lock, i32 noundef %subclass, i32 noundef 1)
  %55 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i290 = and i32 %55, -16384
  %56 = inttoptr i32 %and.i.i290 to ptr
  %cpu.i291 = getelementptr inbounds %struct.thread_info, ptr %56, i32 0, i32 3
  %57 = ptrtoint ptr %cpu.i291 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %cpu.i291, align 4
  %arrayidx.i292 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %58
  %59 = ptrtoint ptr %arrayidx.i292 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %arrayidx.i292, align 4
  %add.i293 = add i32 %60, ptrtoint (ptr @lockdep_recursion to i32)
  %61 = inttoptr i32 %add.i293 to ptr
  %62 = ptrtoint ptr %61 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %61, align 4
  %add7.i294 = add i32 %63, -1
  store i32 %add7.i294, ptr %61, align 4
  %tobool.not.i295 = icmp eq i32 %add7.i294, 0
  br i1 %tobool.not.i295, label %lockdep_recursion_finish.exit, label %land.rhs.i

land.rhs.i:                                       ; preds = %do.body229
  %.b76.i = load i1, ptr @lockdep_recursion_finish.__already_done, align 1
  br i1 %.b76.i, label %if.then50.i, label %if.then.i, !prof !1500

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @lockdep_recursion_finish.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 438, i32 noundef 9, ptr noundef null) #28
  br label %if.then50.i

if.then50.i:                                      ; preds = %if.then.i, %land.rhs.i
  %64 = ptrtoint ptr %cpu.i291 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %cpu.i291, align 4
  %arrayidx66.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %65
  %66 = ptrtoint ptr %arrayidx66.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %arrayidx66.i, align 4
  %add67.i = add i32 %67, ptrtoint (ptr @lockdep_recursion to i32)
  %68 = inttoptr i32 %add67.i to ptr
  %69 = ptrtoint ptr %68 to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 0, ptr %68, align 4
  br label %lockdep_recursion_finish.exit

lockdep_recursion_finish.exit:                    ; preds = %if.then50.i, %do.body229
  %70 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i298 = and i32 %70, 128
  %tobool244.not = icmp eq i32 %and.i.i298, 0
  br i1 %tobool244.not, label %if.then253, label %do.end256, !prof !1501

if.then253:                                       ; preds = %lockdep_recursion_finish.exit
  tail call void @warn_bogus_irq_restore() #28
  br label %do.end256

do.end256:                                        ; preds = %if.then253, %lockdep_recursion_finish.exit
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %45) #28, !srcloc !1506
  br label %cleanup260

cleanup260:                                       ; preds = %do.end256, %do.end206, %land.lhs.true191, %do.end188, %if.end158, %do.end138, %land.lhs.true123, %do.end120, %if.end114, %do.end79, %land.lhs.true64, %do.end61, %if.then41
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @is_dynamic_key(ptr noundef %key) unnamed_addr #0 align 64 {
entry:
  %0 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_state to i32))
  %1 = load i32, ptr @system_state, align 4
  %cmp.i.i = icmp ugt i32 %1, 1
  %cmp.not.i.i.i.i = icmp uge ptr %key, @__init_begin
  %add.ptr.i.i.i.i = getelementptr i8, ptr %key, i32 1
  %cmp1.i.i.i.i = icmp ule ptr %add.ptr.i.i.i.i, @__init_end
  %2 = and i1 %cmp.not.i.i.i.i, %cmp1.i.i.i.i
  %narrow.i.i = and i1 %2, %cmp.i.i
  br i1 %narrow.i.i, label %if.end38, label %if.end.i

if.end.i:                                         ; preds = %entry
  %cmp.not.i = icmp uge ptr %key, @_stext
  %cmp1.i = icmp ult ptr %key, @_end
  %or.cond.i = and i1 %cmp.not.i, %cmp1.i
  br i1 %or.cond.i, label %land.rhs, label %if.end3.i

if.end3.i:                                        ; preds = %if.end.i
  %call4.i = tail call zeroext i1 @is_kernel_percpu_address(i32 noundef %0) #28
  br i1 %call4.i, label %land.rhs, label %if.end6.i

if.end6.i:                                        ; preds = %if.end3.i
  %call7.i = tail call zeroext i1 @is_module_address(i32 noundef %0) #28
  br i1 %call7.i, label %land.rhs, label %static_obj.exit

static_obj.exit:                                  ; preds = %if.end6.i
  %call8.i = tail call zeroext i1 @is_module_percpu_address(i32 noundef %0) #28
  br i1 %call8.i, label %land.rhs, label %if.end38

land.rhs:                                         ; preds = %static_obj.exit, %if.end6.i, %if.end3.i, %if.end.i
  %.b94 = load i1, ptr @is_dynamic_key.__already_done, align 1
  br i1 %.b94, label %cleanup, label %if.then, !prof !1500

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @is_dynamic_key.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1219, i32 noundef 9, ptr noundef null) #28
  br label %cleanup

if.end38:                                         ; preds = %static_obj.exit, %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %3 = load i32, ptr @debug_locks, align 4
  %tobool39.not = icmp eq i32 %3, 0
  br i1 %tobool39.not, label %cleanup, label %if.end41

if.end41:                                         ; preds = %if.end38
  %mul.i.i.i = mul i32 %0, 1640531527
  %shr.i.i = lshr i32 %mul.i.i.i, 20
  %add.ptr.i = getelementptr %struct.hlist_head, ptr @lock_keys_hash, i32 %shr.i.i
  %4 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %7, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1532
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #28
  %call.i = tail call zeroext i1 @rcu_is_watching() #28
  br i1 %call.i, label %rcu_read_lock.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end41
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %rcu_read_lock.exit, label %land.lhs.true2.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %rcu_read_lock.exit, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true2.i
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.752, i32 noundef 696, ptr noundef nonnull @.str.753) #28
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i, %land.lhs.true.i, %if.end41
  %call44 = tail call i32 @rcu_read_lock_any_held() #28
  %tobool45.not = icmp eq i32 %call44, 0
  br i1 %tobool45.not, label %land.lhs.true, label %for.cond.preheader

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call46 = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool47.not = icmp eq i32 %call46, 0
  br i1 %tobool47.not, label %for.cond.preheader, label %land.lhs.true48

land.lhs.true48:                                  ; preds = %land.lhs.true
  %.b9293 = load i1, ptr @is_dynamic_key.__warned, align 1
  br i1 %.b9293, label %for.cond.preheader, label %if.then50

if.then50:                                        ; preds = %land.lhs.true48
  store i1 true, ptr @is_dynamic_key.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1233, ptr noundef nonnull @.str.1)
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then50, %land.lhs.true48, %land.lhs.true, %rcu_read_lock.exit
  br label %for.cond

for.cond:                                         ; preds = %for.cond, %for.cond.preheader
  %k.0.in = phi ptr [ %k.0, %for.cond ], [ %add.ptr.i, %for.cond.preheader ]
  %8 = ptrtoint ptr %k.0.in to i32
  call void @__asan_load4_noabort(i32 %8)
  %k.0 = load volatile ptr, ptr %k.0.in, align 4
  %tobool62.not = icmp eq ptr %k.0, null
  %cmp = icmp eq ptr %k.0, %key
  %or.cond = or i1 %tobool62.not, %cmp
  br i1 %or.cond, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond
  %9 = xor i1 %tobool62.not, true
  %call.i97 = tail call zeroext i1 @rcu_is_watching() #28
  br i1 %call.i97, label %rcu_read_unlock.exit, label %land.lhs.true.i100

land.lhs.true.i100:                               ; preds = %for.end
  %call1.i98 = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool.not.i99 = icmp eq i32 %call1.i98, 0
  br i1 %tobool.not.i99, label %rcu_read_unlock.exit, label %land.lhs.true2.i102

land.lhs.true2.i102:                              ; preds = %land.lhs.true.i100
  %.b4.i101 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i101, label %rcu_read_unlock.exit, label %if.then.i103

if.then.i103:                                     ; preds = %land.lhs.true2.i102
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.752, i32 noundef 724, ptr noundef nonnull @.str.763) #28
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i103, %land.lhs.true2.i102, %land.lhs.true.i100, %for.end
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1533
  %10 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %sub.i.i.i = add i32 %13, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void @rcu_read_unlock_strict() #28
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #28
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit, %if.end38, %if.then, %land.rhs
  %retval.0 = phi i1 [ %9, %rcu_read_unlock.exit ], [ false, %if.then ], [ true, %if.end38 ], [ false, %land.rhs ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @register_lock_class(ptr noundef %lock, i32 noundef %subclass, i32 noundef %force) unnamed_addr #0 align 64 {
entry:
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %0 = load i32, ptr @oops_in_progress, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.lhs.true, label %if.end50

land.lhs.true:                                    ; preds = %entry
  %1 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i = and i32 %1, 128
  %tobool10.not = icmp eq i32 %and.i, 0
  br i1 %tobool10.not, label %do.end16, label %if.end50, !prof !1501

do.end16:                                         ; preds = %land.lhs.true
  %call17 = tail call i32 @debug_locks_off() #28
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %if.end50, label %land.lhs.true19

land.lhs.true19:                                  ; preds = %do.end16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %2 = load i32, ptr @debug_locks_silent, align 4
  %tobool20.not = icmp eq i32 %2, 0
  br i1 %tobool20.not, label %do.end33, label %if.end50

do.end33:                                         ; preds = %land.lhs.true19
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1256, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.32) #28
  br label %if.end50

if.end50:                                         ; preds = %do.end33, %land.lhs.true19, %do.end16, %land.lhs.true, %entry
  %call52 = tail call fastcc ptr @look_up_lock_class(ptr noundef %lock, i32 noundef %subclass)
  %tobool53.not = icmp eq ptr %call52, null
  br i1 %tobool53.not, label %if.end61, label %out_set_class_cache, !prof !1501

if.end61:                                         ; preds = %if.end50
  %3 = ptrtoint ptr %lock to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %lock, align 4
  %tobool63.not = icmp eq ptr %4, null
  br i1 %tobool63.not, label %if.then64, label %if.else

if.then64:                                        ; preds = %if.end61
  %call65 = tail call fastcc zeroext i1 @assign_lock_key(ptr noundef %lock)
  br i1 %call65, label %if.end76, label %cleanup

if.else:                                          ; preds = %if.end61
  %call69 = tail call fastcc i32 @static_obj(ptr noundef nonnull %4)
  %tobool70.not = icmp eq i32 %call69, 0
  br i1 %tobool70.not, label %land.lhs.true71, label %if.end76

land.lhs.true71:                                  ; preds = %if.else
  %5 = ptrtoint ptr %lock to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %lock, align 4
  %call73 = tail call fastcc zeroext i1 @is_dynamic_key(ptr noundef %6)
  br i1 %call73, label %if.end76, label %cleanup

if.end76:                                         ; preds = %land.lhs.true71, %if.else, %if.then64
  %7 = ptrtoint ptr %lock to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %lock, align 4
  %add.ptr = getelementptr %struct.lockdep_subclass_key, ptr %8, i32 %subclass
  %9 = ptrtoint ptr %add.ptr to i32
  %mul.i.i = mul i32 %9, 1640531527
  %shr.i = lshr i32 %mul.i.i, 20
  %add.ptr79 = getelementptr %struct.hlist_head, ptr @classhash_table, i32 %shr.i
  %call80 = tail call fastcc i32 @graph_lock()
  %tobool81.not = icmp eq i32 %call80, 0
  br i1 %tobool81.not, label %cleanup, label %do.body84

do.body84:                                        ; preds = %if.end76
  %call85 = tail call i32 @rcu_read_lock_any_held() #28
  %tobool86.not = icmp eq i32 %call85, 0
  br i1 %tobool86.not, label %land.lhs.true87, label %for.cond.preheader

land.lhs.true87:                                  ; preds = %do.body84
  %call88 = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool89.not = icmp eq i32 %call88, 0
  br i1 %tobool89.not, label %for.cond.preheader, label %land.lhs.true90

land.lhs.true90:                                  ; preds = %land.lhs.true87
  %.b529 = load i1, ptr @register_lock_class.__warned, align 1
  br i1 %.b529, label %for.cond.preheader, label %if.then92

if.then92:                                        ; preds = %land.lhs.true90
  store i1 true, ptr @register_lock_class.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1279, ptr noundef nonnull @.str.1)
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then92, %land.lhs.true90, %land.lhs.true87, %do.body84
  br label %for.cond

for.cond:                                         ; preds = %for.body, %for.cond.preheader
  %class.0.in = phi ptr [ %class.0, %for.body ], [ %add.ptr79, %for.cond.preheader ]
  %10 = ptrtoint ptr %class.0.in to i32
  call void @__asan_load4_noabort(i32 %10)
  %class.0 = load volatile ptr, ptr %class.0.in, align 4
  %tobool105.not = icmp eq ptr %class.0, null
  br i1 %tobool105.not, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond
  %key106 = getelementptr inbounds %struct.lock_class, ptr %class.0, i32 0, i32 4
  %11 = ptrtoint ptr %key106 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %key106, align 4
  %cmp107 = icmp eq ptr %12, %add.ptr
  br i1 %cmp107, label %out_unlock_set, label %for.cond

for.end:                                          ; preds = %for.cond
  tail call fastcc void @init_data_structures_once()
  %13 = load volatile ptr, ptr @free_lock_classes, align 4
  %cmp132.not = icmp eq ptr %13, @free_lock_classes
  %add.ptr137 = getelementptr i8, ptr %13, i32 -8
  %tobool141.not537 = icmp eq ptr %add.ptr137, null
  %tobool141.not = or i1 %cmp132.not, %tobool141.not537
  br i1 %tobool141.not, label %if.then142, label %if.end147

if.then142:                                       ; preds = %for.end
  %call.i = tail call i32 @debug_locks_off() #28
  tail call fastcc void @lockdep_unlock() #28
  %tobool144.not = icmp eq i32 %call.i, 0
  br i1 %tobool144.not, label %cleanup, label %if.end146

if.end146:                                        ; preds = %if.then142
  tail call fastcc void @print_lockdep_off(ptr noundef nonnull @.str.344)
  tail call void @dump_stack() #32
  br label %cleanup

if.end147:                                        ; preds = %for.end
  %14 = load i32, ptr @nr_lock_classes, align 4
  %inc = add i32 %14, 1
  store i32 %inc, ptr @nr_lock_classes, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %add.ptr137 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, ptrtoint (ptr @lock_classes to i32)
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 132
  %rem.i = and i32 %sub.ptr.div, 31
  %shl.i = shl nuw i32 1, %rem.i
  %div2.i = lshr i32 %sub.ptr.div, 5
  %add.ptr.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div2.i
  %15 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %add.ptr.i, align 4
  %or.i = or i32 %16, %shl.i
  store i32 %or.i, ptr %add.ptr.i, align 4
  %17 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i532 = and i32 %17, 128
  %tobool166.not = icmp eq i32 %and.i532, 0
  br i1 %tobool166.not, label %land.rhs, label %if.end211

land.rhs:                                         ; preds = %if.end147
  %.b523528 = load i1, ptr @register_lock_class.__already_done, align 1
  br i1 %.b523528, label %if.end211, label %if.then184, !prof !1500

if.then184:                                       ; preds = %land.rhs
  store i1 true, ptr @register_lock_class.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1300, i32 noundef 9, ptr noundef null) #28
  br label %if.end211

if.end211:                                        ; preds = %if.then184, %land.rhs, %if.end147
  %18 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i533 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i533 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 3
  %20 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %21
  %22 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx, align 4
  %add = add i32 %23, ptrtoint (ptr getelementptr inbounds (%struct.lockdep_stats, ptr @lockdep_stats, i32 0, i32 10) to i32)
  %24 = inttoptr i32 %add to ptr
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %24, align 4
  %add231 = add i32 %26, 1
  store i32 %add231, ptr %24, align 4
  %key236 = getelementptr i8, ptr %13, i32 24
  %27 = ptrtoint ptr %key236 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %add.ptr, ptr %key236, align 4
  %name = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 2
  %28 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %name, align 4
  %name237 = getelementptr i8, ptr %13, i32 84
  %30 = ptrtoint ptr %name237 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %29, ptr %name237, align 4
  %subclass238 = getelementptr i8, ptr %13, i32 28
  %31 = ptrtoint ptr %subclass238 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %subclass, ptr %subclass238, align 4
  %locks_before = getelementptr i8, ptr %13, i32 16
  %32 = ptrtoint ptr %locks_before to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile ptr, ptr %locks_before, align 4
  %cmp.i.not = icmp eq ptr %33, %locks_before
  br i1 %cmp.i.not, label %if.end289, label %land.rhs251

land.rhs251:                                      ; preds = %if.end211
  %.b524527 = load i1, ptr @register_lock_class.__already_done.345, align 1
  br i1 %.b524527, label %if.end289, label %if.then262, !prof !1500

if.then262:                                       ; preds = %land.rhs251
  store i1 true, ptr @register_lock_class.__already_done.345, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1304, i32 noundef 9, ptr noundef null) #28
  br label %if.end289

if.end289:                                        ; preds = %if.then262, %land.rhs251, %if.end211
  %locks_after = getelementptr i8, ptr %13, i32 8
  %34 = ptrtoint ptr %locks_after to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile ptr, ptr %locks_after, align 4
  %cmp.i534.not = icmp eq ptr %35, %locks_after
  br i1 %cmp.i534.not, label %if.end347, label %land.rhs309

land.rhs309:                                      ; preds = %if.end289
  %.b525526 = load i1, ptr @register_lock_class.__already_done.346, align 1
  br i1 %.b525526, label %if.end347, label %if.then320, !prof !1500

if.then320:                                       ; preds = %land.rhs309
  store i1 true, ptr @register_lock_class.__already_done.346, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1305, i32 noundef 9, ptr noundef null) #28
  br label %if.end347

if.end347:                                        ; preds = %if.then320, %land.rhs309, %if.end289
  %call355 = tail call fastcc i32 @count_matching_names(ptr noundef nonnull %add.ptr137)
  %name_version = getelementptr i8, ptr %13, i32 80
  %36 = ptrtoint ptr %name_version to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %call355, ptr %name_version, align 4
  %wait_type_inner = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 4
  %37 = ptrtoint ptr %wait_type_inner to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %wait_type_inner, align 1
  %wait_type_inner356 = getelementptr i8, ptr %13, i32 88
  %39 = ptrtoint ptr %wait_type_inner356 to i32
  call void @__asan_store1_noabort(i32 %39)
  store i8 %38, ptr %wait_type_inner356, align 4
  %wait_type_outer = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 3
  %40 = ptrtoint ptr %wait_type_outer to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %wait_type_outer, align 4
  %wait_type_outer357 = getelementptr i8, ptr %13, i32 89
  %42 = ptrtoint ptr %wait_type_outer357 to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 %41, ptr %wait_type_outer357, align 1
  %lock_type = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 5
  %43 = ptrtoint ptr %lock_type to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %lock_type, align 2
  %lock_type358 = getelementptr i8, ptr %13, i32 90
  %45 = ptrtoint ptr %lock_type358 to i32
  call void @__asan_store1_noabort(i32 %45)
  store i8 %44, ptr %lock_type358, align 2
  %46 = ptrtoint ptr %add.ptr79 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %add.ptr79, align 4
  %48 = ptrtoint ptr %add.ptr137 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %47, ptr %add.ptr137, align 4
  %pprev.i = getelementptr i8, ptr %13, i32 -4
  %49 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store volatile ptr %add.ptr79, ptr %pprev.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #28, !srcloc !1504
  %50 = ptrtoint ptr %add.ptr79 to i32
  call void @__asan_store4_noabort(i32 %50)
  store volatile ptr %add.ptr137, ptr %add.ptr79, align 4
  %tobool.not.i = icmp eq ptr %47, null
  br i1 %tobool.not.i, label %hlist_add_head_rcu.exit, label %do.body49.i

do.body49.i:                                      ; preds = %if.end347
  %pprev51.i = getelementptr inbounds %struct.hlist_node, ptr %47, i32 0, i32 1
  %51 = ptrtoint ptr %pprev51.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store volatile ptr %add.ptr137, ptr %pprev51.i, align 4
  br label %hlist_add_head_rcu.exit

hlist_add_head_rcu.exit:                          ; preds = %do.body49.i, %if.end347
  tail call fastcc void @list_move_tail(ptr noundef %13, ptr noundef nonnull @all_lock_classes)
  br label %out_unlock_set

out_unlock_set:                                   ; preds = %hlist_add_head_rcu.exit, %for.body
  %class.1 = phi ptr [ %add.ptr137, %hlist_add_head_rcu.exit ], [ %class.0, %for.body ]
  tail call fastcc void @lockdep_unlock() #28
  br label %out_set_class_cache

out_set_class_cache:                              ; preds = %out_unlock_set, %if.end50
  %class.2 = phi ptr [ %call52, %if.end50 ], [ %class.1, %out_unlock_set ]
  %tobool391.not = icmp ne i32 %subclass, 0
  %tobool392.not = icmp eq i32 %force, 0
  %or.cond = and i1 %tobool391.not, %tobool392.not
  br i1 %or.cond, label %if.else395, label %if.then393

if.then393:                                       ; preds = %out_set_class_cache
  %class_cache = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 1
  br label %if.end402.sink.split

if.else395:                                       ; preds = %out_set_class_cache
  %cmp396 = icmp ult i32 %subclass, 2
  br i1 %cmp396, label %if.then398, label %if.end402

if.then398:                                       ; preds = %if.else395
  %arrayidx400 = getelementptr %struct.lockdep_map, ptr %lock, i32 0, i32 1, i32 1
  br label %if.end402.sink.split

if.end402.sink.split:                             ; preds = %if.then398, %if.then393
  %arrayidx400.sink = phi ptr [ %arrayidx400, %if.then398 ], [ %class_cache, %if.then393 ]
  %52 = ptrtoint ptr %arrayidx400.sink to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %class.2, ptr %arrayidx400.sink, align 4
  br label %if.end402

if.end402:                                        ; preds = %if.end402.sink.split, %if.else395
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %53 = load i32, ptr @oops_in_progress, align 4
  %tobool404.not = icmp eq i32 %53, 0
  br i1 %tobool404.not, label %land.lhs.true405, label %cleanup

land.lhs.true405:                                 ; preds = %if.end402
  %subclass406 = getelementptr inbounds %struct.lock_class, ptr %class.2, i32 0, i32 5
  %54 = ptrtoint ptr %subclass406 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %subclass406, align 4
  %cmp407.not = icmp eq i32 %55, %subclass
  br i1 %cmp407.not, label %cleanup, label %do.end418, !prof !1500

do.end418:                                        ; preds = %land.lhs.true405
  %call419 = tail call i32 @debug_locks_off() #28
  %tobool420.not = icmp eq i32 %call419, 0
  br i1 %tobool420.not, label %cleanup, label %land.lhs.true421

land.lhs.true421:                                 ; preds = %do.end418
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %56 = load i32, ptr @debug_locks_silent, align 4
  %tobool422.not = icmp eq i32 %56, 0
  br i1 %tobool422.not, label %do.end436, label %cleanup

do.end436:                                        ; preds = %land.lhs.true421
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1347, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.354) #28
  br label %cleanup

cleanup:                                          ; preds = %do.end436, %land.lhs.true421, %do.end418, %land.lhs.true405, %if.end402, %if.end146, %if.then142, %if.end76, %land.lhs.true71, %if.then64
  %retval.0 = phi ptr [ null, %if.end146 ], [ null, %if.then64 ], [ null, %land.lhs.true71 ], [ null, %if.end76 ], [ null, %if.then142 ], [ %class.2, %if.end402 ], [ %class.2, %land.lhs.true405 ], [ null, %do.end418 ], [ null, %land.lhs.true421 ], [ null, %do.end436 ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lock_set_class(ptr noundef %lock, ptr noundef %name, ptr noundef %key, i32 noundef %subclass, i32 noundef %ip) #0 align 64 {
entry:
  %merged.i = alloca i32, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %cleanup, label %if.end.i, !prof !1524

if.end.i:                                         ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %4, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1525
  %5 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add.i to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1526
  %14 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i26.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i26.i to ptr
  %preempt_count.i.i27.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i27.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i27.i, align 4
  %sub.i.i = add i32 %17, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i27.i, align 4
  %tobool19.not.i = icmp eq i32 %13, 0
  br i1 %tobool19.not.i, label %lockdep_enabled.exit, label %cleanup, !prof !1527

lockdep_enabled.exit:                             ; preds = %if.end.i
  %task.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %18 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task.i, align 8
  %lockdep_recursion.i = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 143
  %20 = ptrtoint ptr %lockdep_recursion.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %lockdep_recursion.i, align 4
  %tobool23.not.i = icmp eq i32 %21, 0
  br i1 %tobool23.not.i, label %do.body, label %cleanup, !prof !1500

do.body:                                          ; preds = %lockdep_enabled.exit
  %22 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28, !srcloc !1503
  %23 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i33 = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i33 to ptr
  %cpu.i34 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 3
  %25 = ptrtoint ptr %cpu.i34 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cpu.i34, align 4
  %arrayidx.i35 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %26
  %27 = ptrtoint ptr %arrayidx.i35 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx.i35, align 4
  %add.i36 = add i32 %28, ptrtoint (ptr @lockdep_recursion to i32)
  %29 = inttoptr i32 %add.i36 to ptr
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %29, align 4
  %add7.i = add i32 %31, 1
  store i32 %add7.i, ptr %29, align 4
  tail call fastcc void @check_flags(i32 noundef %22)
  %32 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i43 = and i32 %32, -16384
  %33 = inttoptr i32 %and.i.i43 to ptr
  %task.i44 = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 2
  %34 = ptrtoint ptr %task.i44 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %task.i44, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %merged.i) #28
  %36 = ptrtoint ptr %merged.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 0, ptr %merged.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %37 = load i32, ptr @debug_locks, align 4
  %tobool.not.i45 = icmp eq i32 %37, 0
  br i1 %tobool.not.i45, label %__lock_set_class.exit.thread, label %if.end.i46, !prof !1501

if.end.i46:                                       ; preds = %do.body
  %lockdep_depth.i = getelementptr inbounds %struct.task_struct, ptr %35, i32 0, i32 142
  %38 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %lockdep_depth.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %40 = load i32, ptr @oops_in_progress, align 4
  %tobool4.not.i = icmp eq i32 %40, 0
  %tobool5.not.i = icmp eq i32 %39, 0
  %or.cond.i = select i1 %tobool4.not.i, i1 %tobool5.not.i, i1 false
  br i1 %or.cond.i, label %do.end.i, label %if.end52.i, !prof !1530

do.end.i:                                         ; preds = %if.end.i46
  %call15.i = tail call i32 @debug_locks_off() #28
  %tobool16.not.i = icmp eq i32 %call15.i, 0
  br i1 %tobool16.not.i, label %__lock_set_class.exit.thread, label %land.lhs.true17.i

land.lhs.true17.i:                                ; preds = %do.end.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %41 = load i32, ptr @debug_locks_silent, align 4
  %tobool18.not.i = icmp eq i32 %41, 0
  br i1 %tobool18.not.i, label %do.end31.i, label %__lock_set_class.exit.thread

do.end31.i:                                       ; preds = %land.lhs.true17.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5206, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.380) #28
  br label %__lock_set_class.exit.thread

if.end52.i:                                       ; preds = %if.end.i46
  %sub.i.i47 = add i32 %39, -1
  %held_locks.i.i = getelementptr inbounds %struct.task_struct, ptr %35, i32 0, i32 144
  %add.ptr.i.i = getelementptr %struct.held_lock, ptr %held_locks.i.i, i32 %sub.i.i47
  %call.i.i = tail call fastcc i32 @match_held_lock(ptr noundef %add.ptr.i.i, ptr noundef %lock) #28
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %find_held_lock.exit.i

if.end.i.i:                                       ; preds = %if.end52.i
  %dec.i.i = add i32 %39, -2
  %cmp27.i.i = icmp sgt i32 %dec.i.i, -1
  br i1 %cmp27.i.i, label %for.body.i.i, label %if.then55.i

for.body.i.i:                                     ; preds = %for.inc.i.i, %if.end.i.i
  %i.029.i.i = phi i32 [ %dec12.i.i, %for.inc.i.i ], [ %dec.i.i, %if.end.i.i ]
  %prev_hlock.028.i.i = phi ptr [ %hlock.030.i.i, %for.inc.i.i ], [ %add.ptr.i.i, %if.end.i.i ]
  %hlock.030.i.i = getelementptr %struct.held_lock, ptr %prev_hlock.028.i.i, i32 -1
  %irq_context.i.i = getelementptr inbounds %struct.held_lock, ptr %prev_hlock.028.i.i, i32 0, i32 6
  %42 = ptrtoint ptr %irq_context.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %bf.load.i.i = load i32, ptr %irq_context.i.i, align 8
  %irq_context1.i.i = getelementptr %struct.held_lock, ptr %prev_hlock.028.i.i, i32 -1, i32 6
  %43 = ptrtoint ptr %irq_context1.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %bf.load2.i.i = load i32, ptr %irq_context1.i.i, align 8
  %bf.lshr25.i.i = xor i32 %bf.load2.i.i, %bf.load.i.i
  %44 = and i32 %bf.lshr25.i.i, 393216
  %cmp5.not.i.i = icmp eq i32 %44, 0
  br i1 %cmp5.not.i.i, label %if.end7.i.i, label %if.then55.i

if.end7.i.i:                                      ; preds = %for.body.i.i
  %call8.i.i = tail call fastcc i32 @match_held_lock(ptr noundef %hlock.030.i.i, ptr noundef %lock) #28
  %tobool9.not.i.i = icmp eq i32 %call8.i.i, 0
  br i1 %tobool9.not.i.i, label %for.inc.i.i, label %find_held_lock.exit.i

for.inc.i.i:                                      ; preds = %if.end7.i.i
  %dec12.i.i = add nsw i32 %i.029.i.i, -1
  %cmp.i.i = icmp sgt i32 %i.029.i.i, 0
  br i1 %cmp.i.i, label %for.body.i.i, label %if.then55.i

find_held_lock.exit.i:                            ; preds = %if.end7.i.i, %if.end52.i
  %ret.0.i.i = phi ptr [ %add.ptr.i.i, %if.end52.i ], [ %hlock.030.i.i, %if.end7.i.i ]
  %i.1.i.i = phi i32 [ %sub.i.i47, %if.end52.i ], [ %i.029.i.i, %if.end7.i.i ]
  %tobool54.not.i = icmp eq ptr %ret.0.i.i, null
  br i1 %tobool54.not.i, label %if.then55.i, label %if.end56.i

if.then55.i:                                      ; preds = %find_held_lock.exit.i, %for.inc.i.i, %for.body.i.i, %if.end.i.i
  tail call fastcc void @print_unlock_imbalance_bug(ptr noundef %35, ptr noundef %lock, i32 noundef %ip) #28
  br label %__lock_set_class.exit.thread

if.end56.i:                                       ; preds = %find_held_lock.exit.i
  %wait_type_inner.i = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 4
  %45 = ptrtoint ptr %wait_type_inner.i to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %wait_type_inner.i, align 1
  tail call void @lockdep_init_map_type(ptr noundef %lock, ptr noundef %name, ptr noundef %key, i32 noundef 0, i8 noundef zeroext %46, i8 noundef zeroext 0, i8 noundef zeroext 0) #28
  %call57.i = tail call fastcc ptr @register_lock_class(ptr noundef %lock, i32 noundef %subclass, i32 noundef 0) #28
  %sub.ptr.lhs.cast.i = ptrtoint ptr %call57.i to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, ptrtoint (ptr @lock_classes to i32)
  %sub.ptr.div.i = sdiv exact i32 %sub.ptr.sub.i, 132
  %class_idx.i = getelementptr inbounds %struct.held_lock, ptr %ret.0.i.i, i32 0, i32 6
  %47 = ptrtoint ptr %class_idx.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %bf.load.i = load i32, ptr %class_idx.i, align 8
  %bf.shl.i = shl i32 %sub.ptr.div.i, 19
  %bf.clear.i = and i32 %bf.load.i, 524287
  %bf.set.i = or i32 %bf.shl.i, %bf.clear.i
  store i32 %bf.set.i, ptr %class_idx.i, align 8
  %48 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %i.1.i.i, ptr %lockdep_depth.i, align 8
  %49 = ptrtoint ptr %ret.0.i.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %ret.0.i.i, align 8
  %curr_chain_key.i = getelementptr inbounds %struct.task_struct, ptr %35, i32 0, i32 141
  %51 = ptrtoint ptr %curr_chain_key.i to i32
  call void @__asan_store8_noabort(i32 %51)
  store i64 %50, ptr %curr_chain_key.i, align 16
  %call59.i = call fastcc i32 @reacquire_held_locks(ptr noundef %35, i32 noundef %39, i32 noundef %i.1.i.i, ptr noundef nonnull %merged.i) #28
  %tobool60.not.i = icmp eq i32 %call59.i, 0
  br i1 %tobool60.not.i, label %if.end62.i, label %__lock_set_class.exit.thread

if.end62.i:                                       ; preds = %if.end56.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %52 = load i32, ptr @oops_in_progress, align 4
  %tobool64.not.i = icmp eq i32 %52, 0
  br i1 %tobool64.not.i, label %land.lhs.true65.i, label %if.then6

land.lhs.true65.i:                                ; preds = %if.end62.i
  %53 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %lockdep_depth.i, align 8
  %55 = ptrtoint ptr %merged.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %merged.i, align 4
  %sub.i = sub i32 %39, %56
  %cmp.not.i = icmp eq i32 %54, %sub.i
  br i1 %cmp.not.i, label %if.then6, label %do.end76.i, !prof !1500

do.end76.i:                                       ; preds = %land.lhs.true65.i
  %call77.i = tail call i32 @debug_locks_off() #28
  %tobool78.not.i = icmp eq i32 %call77.i, 0
  br i1 %tobool78.not.i, label %__lock_set_class.exit.thread, label %land.lhs.true79.i

land.lhs.true79.i:                                ; preds = %do.end76.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %57 = load i32, ptr @debug_locks_silent, align 4
  %tobool80.not.i = icmp eq i32 %57, 0
  br i1 %tobool80.not.i, label %do.end94.i, label %__lock_set_class.exit.thread

do.end94.i:                                       ; preds = %land.lhs.true79.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5231, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.381) #28
  br label %__lock_set_class.exit.thread

__lock_set_class.exit.thread:                     ; preds = %do.end94.i, %land.lhs.true79.i, %do.end76.i, %if.end56.i, %if.then55.i, %do.end31.i, %land.lhs.true17.i, %do.end.i, %do.body
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %merged.i) #28
  br label %if.end8

if.then6:                                         ; preds = %land.lhs.true65.i, %if.end62.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %merged.i) #28
  %58 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %58, -16384
  %59 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %59, i32 0, i32 2
  %60 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %task, align 8
  tail call fastcc void @check_chain_key(ptr noundef %61)
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %__lock_set_class.exit.thread
  %62 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i37 = and i32 %62, -16384
  %63 = inttoptr i32 %and.i.i37 to ptr
  %cpu.i38 = getelementptr inbounds %struct.thread_info, ptr %63, i32 0, i32 3
  %64 = ptrtoint ptr %cpu.i38 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %cpu.i38, align 4
  %arrayidx.i39 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %65
  %66 = ptrtoint ptr %arrayidx.i39 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %arrayidx.i39, align 4
  %add.i40 = add i32 %67, ptrtoint (ptr @lockdep_recursion to i32)
  %68 = inttoptr i32 %add.i40 to ptr
  %69 = ptrtoint ptr %68 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %68, align 4
  %add7.i41 = add i32 %70, -1
  store i32 %add7.i41, ptr %68, align 4
  %tobool.not.i42 = icmp eq i32 %add7.i41, 0
  br i1 %tobool.not.i42, label %lockdep_recursion_finish.exit, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.end8
  %.b76.i = load i1, ptr @lockdep_recursion_finish.__already_done, align 1
  br i1 %.b76.i, label %if.then50.i, label %if.then.i, !prof !1500

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @lockdep_recursion_finish.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 438, i32 noundef 9, ptr noundef null) #28
  br label %if.then50.i

if.then50.i:                                      ; preds = %if.then.i, %land.rhs.i
  %71 = ptrtoint ptr %cpu.i38 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %cpu.i38, align 4
  %arrayidx66.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %72
  %73 = ptrtoint ptr %arrayidx66.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %arrayidx66.i, align 4
  %add67.i = add i32 %74, ptrtoint (ptr @lockdep_recursion to i32)
  %75 = inttoptr i32 %add67.i to ptr
  %76 = ptrtoint ptr %75 to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 0, ptr %75, align 4
  br label %lockdep_recursion_finish.exit

lockdep_recursion_finish.exit:                    ; preds = %if.then50.i, %if.end8
  %77 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i49 = and i32 %77, 128
  %tobool17.not = icmp eq i32 %and.i.i49, 0
  br i1 %tobool17.not, label %if.then26, label %do.end29, !prof !1501

if.then26:                                        ; preds = %lockdep_recursion_finish.exit
  tail call void @warn_bogus_irq_restore() #28
  br label %do.end29

do.end29:                                         ; preds = %if.then26, %lockdep_recursion_finish.exit
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %22) #28, !srcloc !1506
  br label %cleanup

cleanup:                                          ; preds = %do.end29, %lockdep_enabled.exit, %if.end.i, %entry
  ret void
}

; Function Attrs: noinline noprofile nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @check_flags(i32 noundef %flags) unnamed_addr #15 section ".noinstr.text" align 64 {
entry:
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %do.end297, label %do.end

do.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @arch_irqs_disabled_flags(i32 noundef %flags)
  %tobool2.not = icmp eq i32 %call, 0
  %1 = load i32, ptr @oops_in_progress, align 4
  %tobool80.not = icmp eq i32 %1, 0
  br i1 %tobool2.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %do.end
  br i1 %tobool80.not, label %land.lhs.true, label %if.end171

land.lhs.true:                                    ; preds = %if.then3
  %2 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %4, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1534
  %call21 = tail call fastcc ptr @current_thread_info() #33
  %cpu = getelementptr inbounds %struct.thread_info, ptr %call21, i32 0, i32 3
  %5 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %5
  %6 = load i32, ptr %arrayidx, align 4
  %add = add i32 %6, ptrtoint (ptr @hardirqs_enabled to i32)
  %7 = inttoptr i32 %add to ptr
  %8 = load volatile i32, ptr %7, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1535
  %9 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i308 = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i308 to ptr
  %preempt_count.i.i309 = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = load volatile i32, ptr %preempt_count.i.i309, align 4
  %sub.i = add i32 %11, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i309, align 4
  %tobool28.not = icmp eq i32 %8, 0
  br i1 %tobool28.not, label %if.end171, label %do.end34, !prof !1500

do.end34:                                         ; preds = %land.lhs.true
  %call35 = tail call i32 @debug_locks_off() #28
  %tobool36 = icmp eq i32 %call35, 0
  %12 = load i32, ptr @debug_locks_silent, align 4
  %tobool38 = icmp ne i32 %12, 0
  %or.cond = select i1 %tobool36, i1 true, i1 %tobool38
  br i1 %or.cond, label %if.end171.sink.split, label %do.end51

do.end51:                                         ; preds = %do.end34
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5479, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.371) #28
  br label %if.end171.sink.split

if.else:                                          ; preds = %do.end
  br i1 %tobool80.not, label %land.lhs.true81, label %if.end171

land.lhs.true81:                                  ; preds = %if.else
  %13 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i310 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i310 to ptr
  %preempt_count.i.i311 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = load volatile i32, ptr %preempt_count.i.i311, align 4
  %add.i312 = add i32 %15, 1
  store volatile i32 %add.i312, ptr %preempt_count.i.i311, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1536
  %call103 = tail call fastcc ptr @current_thread_info() #33
  %cpu104 = getelementptr inbounds %struct.thread_info, ptr %call103, i32 0, i32 3
  %16 = load i32, ptr %cpu104, align 4
  %arrayidx105 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %16
  %17 = load i32, ptr %arrayidx105, align 4
  %add106 = add i32 %17, ptrtoint (ptr @hardirqs_enabled to i32)
  %18 = inttoptr i32 %add106 to ptr
  %19 = load volatile i32, ptr %18, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1537
  %20 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i313 = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i313 to ptr
  %preempt_count.i.i314 = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = load volatile i32, ptr %preempt_count.i.i314, align 4
  %sub.i315 = add i32 %22, -1
  store volatile i32 %sub.i315, ptr %preempt_count.i.i314, align 4
  %tobool113.not = icmp eq i32 %19, 0
  br i1 %tobool113.not, label %do.end125, label %if.end171, !prof !1501

do.end125:                                        ; preds = %land.lhs.true81
  %call126 = tail call i32 @debug_locks_off() #28
  %tobool127 = icmp eq i32 %call126, 0
  %23 = load i32, ptr @debug_locks_silent, align 4
  %tobool129 = icmp ne i32 %23, 0
  %or.cond298 = select i1 %tobool127, i1 true, i1 %tobool129
  br i1 %or.cond298, label %if.end171.sink.split, label %do.end143

do.end143:                                        ; preds = %do.end125
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5483, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.374) #28
  br label %if.end171.sink.split

if.end171.sink.split:                             ; preds = %do.end143, %do.end125, %do.end51, %do.end34
  %.str.376.sink = phi ptr [ @.str.372, %do.end34 ], [ @.str.372, %do.end51 ], [ @.str.376, %do.end125 ], [ @.str.376, %do.end143 ]
  %call169 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull %.str.376.sink) #32
  br label %if.end171

if.end171:                                        ; preds = %if.end171.sink.split, %land.lhs.true81, %if.else, %land.lhs.true, %if.then3
  %24 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %26, 983040
  %tobool173.not = icmp eq i32 %and, 0
  br i1 %tobool173.not, label %if.then174, label %if.end289

if.then174:                                       ; preds = %if.end171
  %27 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i316 = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i316 to ptr
  %preempt_count.i317 = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 1
  %29 = load volatile i32, ptr %preempt_count.i317, align 4
  %and176 = and i32 %29, 65280
  %tobool177.not = icmp eq i32 %and176, 0
  %30 = load i32, ptr @oops_in_progress, align 4
  %tobool233.not = icmp eq i32 %30, 0
  br i1 %tobool177.not, label %if.else231, label %if.then178

if.then178:                                       ; preds = %if.then174
  br i1 %tobool233.not, label %land.lhs.true181, label %if.end289

land.lhs.true181:                                 ; preds = %if.then178
  %call182 = tail call fastcc ptr @current_thread_info() #33
  %task = getelementptr inbounds %struct.thread_info, ptr %call182, i32 0, i32 2
  %31 = load ptr, ptr %task, align 8
  %softirqs_enabled = getelementptr inbounds %struct.task_struct, ptr %31, i32 0, i32 138
  %32 = load i32, ptr %softirqs_enabled, align 32
  %tobool183.not = icmp eq i32 %32, 0
  br i1 %tobool183.not, label %if.end289, label %do.end193, !prof !1500

do.end193:                                        ; preds = %land.lhs.true181
  %call194 = tail call i32 @debug_locks_off() #28
  %tobool195 = icmp eq i32 %call194, 0
  %33 = load i32, ptr @debug_locks_silent, align 4
  %tobool197 = icmp ne i32 %33, 0
  %or.cond299 = select i1 %tobool195, i1 true, i1 %tobool197
  br i1 %or.cond299, label %if.end289, label %do.end211

do.end211:                                        ; preds = %do.end193
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5497, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.378) #28
  br label %if.end289

if.else231:                                       ; preds = %if.then174
  br i1 %tobool233.not, label %land.lhs.true234, label %if.end289

land.lhs.true234:                                 ; preds = %if.else231
  %call235 = tail call fastcc ptr @current_thread_info() #33
  %task236 = getelementptr inbounds %struct.thread_info, ptr %call235, i32 0, i32 2
  %34 = load ptr, ptr %task236, align 8
  %softirqs_enabled237 = getelementptr inbounds %struct.task_struct, ptr %34, i32 0, i32 138
  %35 = load i32, ptr %softirqs_enabled237, align 32
  %tobool238.not = icmp eq i32 %35, 0
  br i1 %tobool238.not, label %do.end250, label %if.end289, !prof !1501

do.end250:                                        ; preds = %land.lhs.true234
  %call251 = tail call i32 @debug_locks_off() #28
  %tobool252 = icmp eq i32 %call251, 0
  %36 = load i32, ptr @debug_locks_silent, align 4
  %tobool254 = icmp ne i32 %36, 0
  %or.cond300 = select i1 %tobool252, i1 true, i1 %tobool254
  br i1 %or.cond300, label %if.end289, label %do.end268

do.end268:                                        ; preds = %do.end250
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5500, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.379) #28
  br label %if.end289

if.end289:                                        ; preds = %do.end268, %do.end250, %land.lhs.true234, %if.else231, %do.end211, %do.end193, %land.lhs.true181, %if.then178, %if.end171
  %37 = load i32, ptr @debug_locks, align 4
  %tobool290.not = icmp eq i32 %37, 0
  br i1 %tobool290.not, label %if.then291, label %do.end297

if.then291:                                       ; preds = %if.end289
  %call292 = tail call fastcc ptr @current_thread_info() #33
  %task293 = getelementptr inbounds %struct.thread_info, ptr %call292, i32 0, i32 2
  %38 = load ptr, ptr %task293, align 8
  tail call void @print_irqtrace_events(ptr noundef %38)
  br label %do.end297

do.end297:                                        ; preds = %if.then291, %if.end289, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @check_chain_key(ptr noundef readonly %curr) unnamed_addr #0 align 64 {
entry:
  %lockdep_depth = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 142
  %0 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %lockdep_depth, align 8
  %cmp164.not = icmp eq i32 %1, 0
  br i1 %cmp164.not, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %held_locks = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 144
  br label %for.body

for.body:                                         ; preds = %if.end85, %for.body.lr.ph
  %prev_hlock.0167 = phi ptr [ null, %for.body.lr.ph ], [ %add.ptr, %if.end85 ]
  %i.0166 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end85 ]
  %chain_key.0165 = phi i64 [ -1, %for.body.lr.ph ], [ %or.i151, %if.end85 ]
  %add.ptr = getelementptr %struct.held_lock, ptr %held_locks, i32 %i.0166
  %2 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %add.ptr, align 8
  %cmp1.not = icmp eq i64 %chain_key.0165, %3
  br i1 %cmp1.not, label %if.end19, label %if.then

if.then:                                          ; preds = %for.body
  %call = tail call i32 @debug_locks_off() #28
  %4 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %lockdep_depth, align 8
  %6 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %add.ptr, align 8
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3847, i32 noundef 9, ptr noundef nonnull @.str.411, i32 noundef %5, i32 noundef %i.0166, i64 noundef %chain_key.0165, i64 noundef %7) #28
  br label %cleanup

if.end19:                                         ; preds = %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %8 = load i32, ptr @oops_in_progress, align 4
  %tobool20.not = icmp eq i32 %8, 0
  br i1 %tobool20.not, label %land.lhs.true, label %if.end74

land.lhs.true:                                    ; preds = %if.end19
  %class_idx = getelementptr %struct.held_lock, ptr %held_locks, i32 %i.0166, i32 6
  %9 = ptrtoint ptr %class_idx to i32
  call void @__asan_load4_noabort(i32 %9)
  %bf.load = load i32, ptr %class_idx, align 8
  %bf.lshr = lshr i32 %bf.load, 19
  %div3.i = lshr i32 %bf.load, 24
  %arrayidx.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %arrayidx.i, align 4
  %and.i = and i32 %bf.lshr, 31
  %12 = shl nuw i32 1, %and.i
  %13 = and i32 %12, %11
  %tobool22.not = icmp eq i32 %13, 0
  br i1 %tobool22.not, label %do.end34, label %if.end74, !prof !1501

do.end34:                                         ; preds = %land.lhs.true
  %call35 = tail call i32 @debug_locks_off() #28
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %cleanup, label %land.lhs.true37

land.lhs.true37:                                  ; preds = %do.end34
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %14 = load i32, ptr @debug_locks_silent, align 4
  %tobool38.not = icmp eq i32 %14, 0
  br i1 %tobool38.not, label %do.end52, label %cleanup

do.end52:                                         ; preds = %land.lhs.true37
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3855, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.412) #28
  br label %cleanup

if.end74:                                         ; preds = %land.lhs.true, %if.end19
  %tobool75.not = icmp eq ptr %prev_hlock.0167, null
  %extract.t = trunc i64 %chain_key.0165 to i32
  %extract = lshr i64 %chain_key.0165, 32
  %extract.t153 = trunc i64 %extract to i32
  br i1 %tobool75.not, label %if.end85, label %land.lhs.true76

land.lhs.true76:                                  ; preds = %if.end74
  %irq_context = getelementptr inbounds %struct.held_lock, ptr %prev_hlock.0167, i32 0, i32 6
  %15 = ptrtoint ptr %irq_context to i32
  call void @__asan_load4_noabort(i32 %15)
  %bf.load77 = load i32, ptr %irq_context, align 8
  %irq_context79 = getelementptr %struct.held_lock, ptr %held_locks, i32 %i.0166, i32 6
  %16 = ptrtoint ptr %irq_context79 to i32
  call void @__asan_load4_noabort(i32 %16)
  %bf.load80 = load i32, ptr %irq_context79, align 8
  %bf.lshr78146 = xor i32 %bf.load80, %bf.load77
  %17 = and i32 %bf.lshr78146, 393216
  %cmp83.not = icmp eq i32 %17, 0
  %spec.select = select i1 %cmp83.not, i64 %chain_key.0165, i64 -1
  %extract.t152 = trunc i64 %spec.select to i32
  %extract154 = lshr i64 %spec.select, 32
  %extract.t155 = trunc i64 %extract154 to i32
  br label %if.end85

if.end85:                                         ; preds = %land.lhs.true76, %if.end74
  %chain_key.1.off0 = phi i32 [ %extract.t, %if.end74 ], [ %extract.t152, %land.lhs.true76 ]
  %chain_key.1.off32 = phi i32 [ %extract.t153, %if.end74 ], [ %extract.t155, %land.lhs.true76 ]
  %class_idx.i = getelementptr %struct.held_lock, ptr %held_locks, i32 %i.0166, i32 6
  %18 = ptrtoint ptr %class_idx.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %bf.load.i = load i32, ptr %class_idx.i, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 19
  %19 = lshr i32 %bf.load.i, 1
  %shl.i = and i32 %19, 24576
  %or.i = sub i32 %bf.lshr.i, %chain_key.1.off32
  %sub.i = add i32 %or.i, %shl.i
  %or.i.i = tail call i32 @llvm.fshl.i32(i32 %chain_key.1.off32, i32 %chain_key.1.off32, i32 4) #28
  %xor.i = xor i32 %sub.i, %or.i.i
  %add.i = add i32 %chain_key.1.off32, %chain_key.1.off0
  %sub2.i = sub i32 %chain_key.1.off0, %xor.i
  %or.i60.i = tail call i32 @llvm.fshl.i32(i32 %xor.i, i32 %xor.i, i32 6) #28
  %xor4.i = xor i32 %sub2.i, %or.i60.i
  %add5.i = add i32 %xor.i, %add.i
  %sub6.i = sub i32 %add.i, %xor4.i
  %or.i61.i = tail call i32 @llvm.fshl.i32(i32 %xor4.i, i32 %xor4.i, i32 8) #28
  %xor8.i = xor i32 %sub6.i, %or.i61.i
  %add9.i = add i32 %xor4.i, %add5.i
  %sub10.i = sub i32 %add5.i, %xor8.i
  %or.i62.i = tail call i32 @llvm.fshl.i32(i32 %xor8.i, i32 %xor8.i, i32 16) #28
  %xor12.i = xor i32 %sub10.i, %or.i62.i
  %add13.i = add i32 %xor8.i, %add9.i
  %sub14.i = sub i32 %add9.i, %xor12.i
  %or.i63.i = tail call i32 @llvm.fshl.i32(i32 %xor12.i, i32 %xor12.i, i32 19) #28
  %xor16.i = xor i32 %sub14.i, %or.i63.i
  %add17.i = add i32 %xor12.i, %add13.i
  %sub18.i = sub i32 %add13.i, %xor16.i
  %or.i64.i = tail call i32 @llvm.fshl.i32(i32 %xor16.i, i32 %xor16.i, i32 4) #28
  %xor20.i = xor i32 %sub18.i, %or.i64.i
  %add21.i = add i32 %add17.i, %xor16.i
  %conv22.i = zext i32 %add21.i to i64
  %conv23.i = zext i32 %xor20.i to i64
  %shl.i150 = shl nuw i64 %conv23.i, 32
  %or.i151 = or i64 %shl.i150, %conv22.i
  %inc = add nuw i32 %i.0166, 1
  %exitcond.not = icmp eq i32 %inc, %1
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %if.end85, %entry
  %chain_key.0.lcssa = phi i64 [ -1, %entry ], [ %or.i151, %if.end85 ]
  %curr_chain_key = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 141
  %20 = ptrtoint ptr %curr_chain_key to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %curr_chain_key, align 16
  %cmp88.not = icmp eq i64 %chain_key.0.lcssa, %21
  br i1 %cmp88.not, label %cleanup, label %if.then90

if.then90:                                        ; preds = %for.end
  %call91 = tail call i32 @debug_locks_off() #28
  %22 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %lockdep_depth, align 8
  %24 = ptrtoint ptr %curr_chain_key to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %curr_chain_key, align 16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3873, i32 noundef 9, ptr noundef nonnull @.str.413, i32 noundef %23, i32 noundef %1, i64 noundef %chain_key.0.lcssa, i64 noundef %25) #28
  br label %cleanup

cleanup:                                          ; preds = %if.then90, %for.end, %do.end52, %land.lhs.true37, %do.end34, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lock_downgrade(ptr noundef %lock, i32 noundef %ip) #0 align 64 {
entry:
  %merged.i = alloca i32, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %cleanup, label %if.end.i, !prof !1524

if.end.i:                                         ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %4, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1525
  %5 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add.i to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1526
  %14 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i26.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i26.i to ptr
  %preempt_count.i.i27.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i27.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i27.i, align 4
  %sub.i.i = add i32 %17, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i27.i, align 4
  %tobool19.not.i = icmp eq i32 %13, 0
  br i1 %tobool19.not.i, label %lockdep_enabled.exit, label %cleanup, !prof !1527

lockdep_enabled.exit:                             ; preds = %if.end.i
  %task.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %18 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task.i, align 8
  %lockdep_recursion.i = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 143
  %20 = ptrtoint ptr %lockdep_recursion.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %lockdep_recursion.i, align 4
  %tobool23.not.i = icmp eq i32 %21, 0
  br i1 %tobool23.not.i, label %do.body, label %cleanup, !prof !1500

do.body:                                          ; preds = %lockdep_enabled.exit
  %22 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28, !srcloc !1503
  %23 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i33 = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i33 to ptr
  %cpu.i34 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 3
  %25 = ptrtoint ptr %cpu.i34 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cpu.i34, align 4
  %arrayidx.i35 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %26
  %27 = ptrtoint ptr %arrayidx.i35 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx.i35, align 4
  %add.i36 = add i32 %28, ptrtoint (ptr @lockdep_recursion to i32)
  %29 = inttoptr i32 %add.i36 to ptr
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %29, align 4
  %add7.i = add i32 %31, 1
  store i32 %add7.i, ptr %29, align 4
  tail call fastcc void @check_flags(i32 noundef %22)
  %32 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i43 = and i32 %32, -16384
  %33 = inttoptr i32 %and.i.i43 to ptr
  %task.i44 = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 2
  %34 = ptrtoint ptr %task.i44 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %task.i44, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %merged.i) #28
  %36 = ptrtoint ptr %merged.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 0, ptr %merged.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %37 = load i32, ptr @debug_locks, align 4
  %tobool.not.i45 = icmp eq i32 %37, 0
  br i1 %tobool.not.i45, label %__lock_downgrade.exit.thread, label %if.end.i46, !prof !1501

if.end.i46:                                       ; preds = %do.body
  %lockdep_depth.i = getelementptr inbounds %struct.task_struct, ptr %35, i32 0, i32 142
  %38 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %lockdep_depth.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %40 = load i32, ptr @oops_in_progress, align 4
  %tobool4.not.i = icmp eq i32 %40, 0
  %tobool5.not.i = icmp eq i32 %39, 0
  %or.cond.i = select i1 %tobool4.not.i, i1 %tobool5.not.i, i1 false
  br i1 %or.cond.i, label %do.end.i, label %if.end52.i, !prof !1530

do.end.i:                                         ; preds = %if.end.i46
  %call15.i = tail call i32 @debug_locks_off() #28
  %tobool16.not.i = icmp eq i32 %call15.i, 0
  br i1 %tobool16.not.i, label %__lock_downgrade.exit.thread, label %land.lhs.true17.i

land.lhs.true17.i:                                ; preds = %do.end.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %41 = load i32, ptr @debug_locks_silent, align 4
  %tobool18.not.i = icmp eq i32 %41, 0
  br i1 %tobool18.not.i, label %do.end31.i, label %__lock_downgrade.exit.thread

do.end31.i:                                       ; preds = %land.lhs.true17.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5251, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.380) #28
  br label %__lock_downgrade.exit.thread

if.end52.i:                                       ; preds = %if.end.i46
  %sub.i.i47 = add i32 %39, -1
  %held_locks.i.i = getelementptr inbounds %struct.task_struct, ptr %35, i32 0, i32 144
  %add.ptr.i.i = getelementptr %struct.held_lock, ptr %held_locks.i.i, i32 %sub.i.i47
  %call.i.i = tail call fastcc i32 @match_held_lock(ptr noundef %add.ptr.i.i, ptr noundef %lock) #28
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %find_held_lock.exit.i

if.end.i.i:                                       ; preds = %if.end52.i
  %dec.i.i = add i32 %39, -2
  %cmp27.i.i = icmp sgt i32 %dec.i.i, -1
  br i1 %cmp27.i.i, label %for.body.i.i, label %if.then55.i

for.body.i.i:                                     ; preds = %for.inc.i.i, %if.end.i.i
  %i.029.i.i = phi i32 [ %dec12.i.i, %for.inc.i.i ], [ %dec.i.i, %if.end.i.i ]
  %prev_hlock.028.i.i = phi ptr [ %hlock.030.i.i, %for.inc.i.i ], [ %add.ptr.i.i, %if.end.i.i ]
  %hlock.030.i.i = getelementptr %struct.held_lock, ptr %prev_hlock.028.i.i, i32 -1
  %irq_context.i.i = getelementptr inbounds %struct.held_lock, ptr %prev_hlock.028.i.i, i32 0, i32 6
  %42 = ptrtoint ptr %irq_context.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %bf.load.i.i = load i32, ptr %irq_context.i.i, align 8
  %irq_context1.i.i = getelementptr %struct.held_lock, ptr %prev_hlock.028.i.i, i32 -1, i32 6
  %43 = ptrtoint ptr %irq_context1.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %bf.load2.i.i = load i32, ptr %irq_context1.i.i, align 8
  %bf.lshr25.i.i = xor i32 %bf.load2.i.i, %bf.load.i.i
  %44 = and i32 %bf.lshr25.i.i, 393216
  %cmp5.not.i.i = icmp eq i32 %44, 0
  br i1 %cmp5.not.i.i, label %if.end7.i.i, label %if.then55.i

if.end7.i.i:                                      ; preds = %for.body.i.i
  %call8.i.i = tail call fastcc i32 @match_held_lock(ptr noundef %hlock.030.i.i, ptr noundef %lock) #28
  %tobool9.not.i.i = icmp eq i32 %call8.i.i, 0
  br i1 %tobool9.not.i.i, label %for.inc.i.i, label %find_held_lock.exit.i

for.inc.i.i:                                      ; preds = %if.end7.i.i
  %dec12.i.i = add nsw i32 %i.029.i.i, -1
  %cmp.i.i = icmp sgt i32 %i.029.i.i, 0
  br i1 %cmp.i.i, label %for.body.i.i, label %if.then55.i

find_held_lock.exit.i:                            ; preds = %if.end7.i.i, %if.end52.i
  %ret.0.i.i = phi ptr [ %add.ptr.i.i, %if.end52.i ], [ %hlock.030.i.i, %if.end7.i.i ]
  %i.1.i.i = phi i32 [ %sub.i.i47, %if.end52.i ], [ %i.029.i.i, %if.end7.i.i ]
  %tobool54.not.i = icmp eq ptr %ret.0.i.i, null
  br i1 %tobool54.not.i, label %if.then55.i, label %if.end56.i

if.then55.i:                                      ; preds = %find_held_lock.exit.i, %for.inc.i.i, %for.body.i.i, %if.end.i.i
  tail call fastcc void @print_unlock_imbalance_bug(ptr noundef %35, ptr noundef %lock, i32 noundef %ip) #28
  br label %__lock_downgrade.exit.thread

if.end56.i:                                       ; preds = %find_held_lock.exit.i
  %45 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %i.1.i.i, ptr %lockdep_depth.i, align 8
  %46 = ptrtoint ptr %ret.0.i.i to i32
  call void @__asan_load8_noabort(i32 %46)
  %47 = load i64, ptr %ret.0.i.i, align 8
  %curr_chain_key.i = getelementptr inbounds %struct.task_struct, ptr %35, i32 0, i32 141
  %48 = ptrtoint ptr %curr_chain_key.i to i32
  call void @__asan_store8_noabort(i32 %48)
  store i64 %47, ptr %curr_chain_key.i, align 16
  %read.i = getelementptr inbounds %struct.held_lock, ptr %ret.0.i.i, i32 0, i32 6
  %49 = ptrtoint ptr %read.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %bf.load.i = load i32, ptr %read.i, align 8
  %50 = and i32 %bf.load.i, 49152
  %tobool59.not.i = icmp eq i32 %50, 0
  br i1 %tobool59.not.i, label %if.end81.i, label %do.end75.i, !prof !1500

do.end75.i:                                       ; preds = %if.end56.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5263, i32 noundef 9, ptr noundef nonnull @.str.414) #28
  br label %if.end81.i

if.end81.i:                                       ; preds = %do.end75.i, %if.end56.i
  %51 = ptrtoint ptr %read.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %bf.load90.i = load i32, ptr %read.i, align 8
  %bf.clear91.i = and i32 %bf.load90.i, -49153
  %bf.set.i = or i32 %bf.clear91.i, 16384
  store i32 %bf.set.i, ptr %read.i, align 8
  %acquire_ip.i = getelementptr inbounds %struct.held_lock, ptr %ret.0.i.i, i32 0, i32 1
  %52 = ptrtoint ptr %acquire_ip.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %ip, ptr %acquire_ip.i, align 8
  %call92.i = call fastcc i32 @reacquire_held_locks(ptr noundef %35, i32 noundef %39, i32 noundef %i.1.i.i, ptr noundef nonnull %merged.i) #28
  %tobool93.not.i = icmp eq i32 %call92.i, 0
  br i1 %tobool93.not.i, label %if.end95.i, label %__lock_downgrade.exit.thread

if.end95.i:                                       ; preds = %if.end81.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %53 = load i32, ptr @oops_in_progress, align 4
  %tobool97.not.i = icmp eq i32 %53, 0
  br i1 %tobool97.not.i, label %land.lhs.true98.i, label %if.then6

land.lhs.true98.i:                                ; preds = %if.end95.i
  %54 = ptrtoint ptr %merged.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %merged.i, align 4
  %tobool99.not.i = icmp eq i32 %55, 0
  br i1 %tobool99.not.i, label %land.lhs.true152.i, label %do.end109.i, !prof !1500

do.end109.i:                                      ; preds = %land.lhs.true98.i
  %call110.i = tail call i32 @debug_locks_off() #28
  %tobool111.not.i = icmp eq i32 %call110.i, 0
  br i1 %tobool111.not.i, label %__lock_downgrade.exit.thread, label %land.lhs.true112.i

land.lhs.true112.i:                               ; preds = %do.end109.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %56 = load i32, ptr @debug_locks_silent, align 4
  %tobool113.not.i = icmp eq i32 %56, 0
  br i1 %tobool113.not.i, label %do.end127.i, label %__lock_downgrade.exit.thread

do.end127.i:                                      ; preds = %land.lhs.true112.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5271, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.415) #28
  br label %__lock_downgrade.exit.thread

land.lhs.true152.i:                               ; preds = %land.lhs.true98.i
  %57 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %lockdep_depth.i, align 8
  %cmp.not.i = icmp eq i32 %58, %39
  br i1 %cmp.not.i, label %if.then6, label %do.end163.i, !prof !1500

do.end163.i:                                      ; preds = %land.lhs.true152.i
  %call164.i = tail call i32 @debug_locks_off() #28
  %tobool165.not.i = icmp eq i32 %call164.i, 0
  br i1 %tobool165.not.i, label %__lock_downgrade.exit.thread, label %land.lhs.true166.i

land.lhs.true166.i:                               ; preds = %do.end163.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %59 = load i32, ptr @debug_locks_silent, align 4
  %tobool167.not.i = icmp eq i32 %59, 0
  br i1 %tobool167.not.i, label %do.end181.i, label %__lock_downgrade.exit.thread

do.end181.i:                                      ; preds = %land.lhs.true166.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5278, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.416) #28
  br label %__lock_downgrade.exit.thread

__lock_downgrade.exit.thread:                     ; preds = %do.end181.i, %land.lhs.true166.i, %do.end163.i, %do.end127.i, %land.lhs.true112.i, %do.end109.i, %if.end81.i, %if.then55.i, %do.end31.i, %land.lhs.true17.i, %do.end.i, %do.body
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %merged.i) #28
  br label %if.end8

if.then6:                                         ; preds = %land.lhs.true152.i, %if.end95.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %merged.i) #28
  %60 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %60, -16384
  %61 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %61, i32 0, i32 2
  %62 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %task, align 8
  tail call fastcc void @check_chain_key(ptr noundef %63)
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %__lock_downgrade.exit.thread
  %64 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i37 = and i32 %64, -16384
  %65 = inttoptr i32 %and.i.i37 to ptr
  %cpu.i38 = getelementptr inbounds %struct.thread_info, ptr %65, i32 0, i32 3
  %66 = ptrtoint ptr %cpu.i38 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %cpu.i38, align 4
  %arrayidx.i39 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %67
  %68 = ptrtoint ptr %arrayidx.i39 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %arrayidx.i39, align 4
  %add.i40 = add i32 %69, ptrtoint (ptr @lockdep_recursion to i32)
  %70 = inttoptr i32 %add.i40 to ptr
  %71 = ptrtoint ptr %70 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %70, align 4
  %add7.i41 = add i32 %72, -1
  store i32 %add7.i41, ptr %70, align 4
  %tobool.not.i42 = icmp eq i32 %add7.i41, 0
  br i1 %tobool.not.i42, label %lockdep_recursion_finish.exit, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.end8
  %.b76.i = load i1, ptr @lockdep_recursion_finish.__already_done, align 1
  br i1 %.b76.i, label %if.then50.i, label %if.then.i, !prof !1500

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @lockdep_recursion_finish.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 438, i32 noundef 9, ptr noundef null) #28
  br label %if.then50.i

if.then50.i:                                      ; preds = %if.then.i, %land.rhs.i
  %73 = ptrtoint ptr %cpu.i38 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %cpu.i38, align 4
  %arrayidx66.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %74
  %75 = ptrtoint ptr %arrayidx66.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %arrayidx66.i, align 4
  %add67.i = add i32 %76, ptrtoint (ptr @lockdep_recursion to i32)
  %77 = inttoptr i32 %add67.i to ptr
  %78 = ptrtoint ptr %77 to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 0, ptr %77, align 4
  br label %lockdep_recursion_finish.exit

lockdep_recursion_finish.exit:                    ; preds = %if.then50.i, %if.end8
  %79 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i49 = and i32 %79, 128
  %tobool17.not = icmp eq i32 %and.i.i49, 0
  br i1 %tobool17.not, label %if.then26, label %do.end29, !prof !1501

if.then26:                                        ; preds = %lockdep_recursion_finish.exit
  tail call void @warn_bogus_irq_restore() #28
  br label %do.end29

do.end29:                                         ; preds = %if.then26, %lockdep_recursion_finish.exit
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %22) #28, !srcloc !1506
  br label %cleanup

cleanup:                                          ; preds = %do.end29, %lockdep_enabled.exit, %if.end.i, %entry
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @read_lock_is_recursive() #16 align 64 {
entry:
  ret i1 true
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lock_acquire(ptr noundef %lock, i32 noundef %subclass, i32 noundef %trylock, i32 noundef %read, i32 noundef %check, ptr noundef %nest_lock, i32 noundef %ip) #0 align 64 {
entry:
  %hlock = alloca %struct.held_lock, align 8
  tail call fastcc void @trace_lock_acquire(ptr noundef %lock, i32 noundef %subclass, i32 noundef %trylock, i32 noundef %read, i32 noundef %check, ptr noundef %nest_lock, i32 noundef %ip)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %cleanup, label %if.end.i

if.end.i:                                         ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %4, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1525
  %5 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add.i to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1526
  %14 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i26.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i26.i to ptr
  %preempt_count.i.i27.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i27.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i27.i, align 4
  %sub.i.i = add i32 %17, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i27.i, align 4
  %tobool19.not.i = icmp eq i32 %13, 0
  br i1 %tobool19.not.i, label %lockdep_enabled.exit, label %if.then4, !prof !1527

lockdep_enabled.exit:                             ; preds = %if.end.i
  %task.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %18 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task.i, align 8
  %lockdep_recursion.i = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 143
  %20 = ptrtoint ptr %lockdep_recursion.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %lockdep_recursion.i, align 4
  %tobool23.not.i = icmp eq i32 %21, 0
  br i1 %tobool23.not.i, label %do.body, label %if.then4, !prof !1500

if.then4:                                         ; preds = %lockdep_enabled.exit, %if.end.i
  %22 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i93 = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i93 to ptr
  %cpu.i94 = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 3
  %24 = ptrtoint ptr %cpu.i94 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %cpu.i94, align 4
  %arrayidx.i95 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %25
  %26 = ptrtoint ptr %arrayidx.i95 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx.i95, align 4
  %add.i96 = add i32 %27, ptrtoint (ptr @lockdep_recursion to i32)
  %28 = inttoptr i32 %add.i96 to ptr
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %28, align 4
  %tobool.not.i97 = icmp eq i32 %30, 0
  br i1 %tobool.not.i97, label %lockdep_nmi.exit, label %cleanup

lockdep_nmi.exit:                                 ; preds = %if.then4
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i, align 4
  %and.i = and i32 %32, 15728640
  %tobool9.not.i = icmp ne i32 %and.i, 0
  %tobool6.not = icmp eq i32 %trylock, 0
  %or.cond = and i1 %tobool6.not, %tobool9.not.i
  br i1 %or.cond, label %if.then7, label %cleanup

if.then7:                                         ; preds = %lockdep_nmi.exit
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %hlock) #28
  %33 = call ptr @memset(ptr %hlock, i32 255, i32 48)
  %acquire_ip = getelementptr inbounds %struct.held_lock, ptr %hlock, i32 0, i32 1
  %34 = ptrtoint ptr %acquire_ip to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %ip, ptr %acquire_ip, align 8
  %instance = getelementptr inbounds %struct.held_lock, ptr %hlock, i32 0, i32 2
  %35 = ptrtoint ptr %instance to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %lock, ptr %instance, align 4
  %nest_lock8 = getelementptr inbounds %struct.held_lock, ptr %hlock, i32 0, i32 3
  %36 = ptrtoint ptr %nest_lock8 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %nest_lock, ptr %nest_lock8, align 8
  %irq_context = getelementptr inbounds %struct.held_lock, ptr %hlock, i32 0, i32 6
  %bf.value15 = shl i32 %read, 14
  %bf.shl16 = and i32 %bf.value15, 49152
  %bf.value21 = shl i32 %check, 13
  %bf.shl22 = and i32 %bf.value21, 8192
  %bf.set = or i32 %bf.shl16, %bf.shl22
  %bf.set27 = or i32 %bf.set, -258048
  %37 = ptrtoint ptr %irq_context to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %bf.set27, ptr %irq_context, align 8
  call fastcc void @verify_lock_unused(ptr noundef %lock, ptr noundef nonnull %hlock, i32 noundef %subclass)
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %hlock) #28
  br label %cleanup

do.body:                                          ; preds = %lockdep_enabled.exit
  %38 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28, !srcloc !1503
  tail call fastcc void @check_flags(i32 noundef %38)
  %39 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i83 = and i32 %39, -16384
  %40 = inttoptr i32 %and.i.i83 to ptr
  %cpu.i84 = getelementptr inbounds %struct.thread_info, ptr %40, i32 0, i32 3
  %41 = ptrtoint ptr %cpu.i84 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %cpu.i84, align 4
  %arrayidx.i85 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %42
  %43 = ptrtoint ptr %arrayidx.i85 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx.i85, align 4
  %add.i86 = add i32 %44, ptrtoint (ptr @lockdep_recursion to i32)
  %45 = inttoptr i32 %add.i86 to ptr
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %45, align 4
  %add7.i = add i32 %47, 1
  store i32 %add7.i, ptr %45, align 4
  %and.i100 = and i32 %38, 128
  %call41 = tail call fastcc i32 @__lock_acquire(ptr noundef %lock, i32 noundef %subclass, i32 noundef %trylock, i32 noundef %read, i32 noundef %check, i32 noundef %and.i100, ptr noundef %nest_lock, i32 noundef %ip, i32 noundef 0, i32 noundef 0)
  %48 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i87 = and i32 %48, -16384
  %49 = inttoptr i32 %and.i.i87 to ptr
  %cpu.i88 = getelementptr inbounds %struct.thread_info, ptr %49, i32 0, i32 3
  %50 = ptrtoint ptr %cpu.i88 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %cpu.i88, align 4
  %arrayidx.i89 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %51
  %52 = ptrtoint ptr %arrayidx.i89 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %arrayidx.i89, align 4
  %add.i90 = add i32 %53, ptrtoint (ptr @lockdep_recursion to i32)
  %54 = inttoptr i32 %add.i90 to ptr
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %54, align 4
  %add7.i91 = add i32 %56, -1
  store i32 %add7.i91, ptr %54, align 4
  %tobool.not.i92 = icmp eq i32 %add7.i91, 0
  br i1 %tobool.not.i92, label %lockdep_recursion_finish.exit, label %land.rhs.i

land.rhs.i:                                       ; preds = %do.body
  %.b76.i = load i1, ptr @lockdep_recursion_finish.__already_done, align 1
  br i1 %.b76.i, label %if.then50.i, label %if.then.i, !prof !1500

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @lockdep_recursion_finish.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 438, i32 noundef 9, ptr noundef null) #28
  br label %if.then50.i

if.then50.i:                                      ; preds = %if.then.i, %land.rhs.i
  %57 = ptrtoint ptr %cpu.i88 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %cpu.i88, align 4
  %arrayidx66.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %58
  %59 = ptrtoint ptr %arrayidx66.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %arrayidx66.i, align 4
  %add67.i = add i32 %60, ptrtoint (ptr @lockdep_recursion to i32)
  %61 = inttoptr i32 %add67.i to ptr
  %62 = ptrtoint ptr %61 to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 0, ptr %61, align 4
  br label %lockdep_recursion_finish.exit

lockdep_recursion_finish.exit:                    ; preds = %if.then50.i, %do.body
  %63 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i101 = and i32 %63, 128
  %tobool50.not = icmp eq i32 %and.i.i101, 0
  br i1 %tobool50.not, label %if.then59, label %do.end62, !prof !1501

if.then59:                                        ; preds = %lockdep_recursion_finish.exit
  tail call void @warn_bogus_irq_restore() #28
  br label %do.end62

do.end62:                                         ; preds = %if.then59, %lockdep_recursion_finish.exit
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %38) #28, !srcloc !1506
  br label %cleanup

cleanup:                                          ; preds = %do.end62, %if.then7, %lockdep_nmi.exit, %if.then4, %entry
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_lock_acquire(ptr noundef %lock, i32 noundef %subclass, i32 noundef %trylock, i32 noundef %read, i32 noundef %check, ptr noundef %next_lock, i32 noundef %ip) unnamed_addr #10 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_lock_acquire, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_lock_acquire, %do.body)) #28
          to label %if.end48 [label %do.body], !srcloc !1538

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1500

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.419, i32 noundef 108, i32 noundef 9, ptr noundef null) #28
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %if.end31

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1539
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_lock_acquire, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i, %if.end31
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i ], [ %13, %if.end31 ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %lock, i32 noundef %subclass, i32 noundef %trylock, i32 noundef %read, i32 noundef %check, ptr noundef %next_lock, i32 noundef %ip) #28
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1540
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1540
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !1500

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.419, i32 noundef 108, i32 noundef 9, ptr noundef null) #28
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1541
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_lock_acquire, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #28
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_lock_acquire.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_lock_acquire.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.417, i32 noundef 37, ptr noundef nonnull @.str.418)
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1542
  %38 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @verify_lock_unused(ptr nocapture noundef readonly %lock, ptr nocapture noundef %hlock, i32 noundef %subclass) unnamed_addr #0 align 64 {
entry:
  %call = tail call fastcc ptr @look_up_lock_class(ptr noundef %lock, i32 noundef %subclass)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %read = getelementptr inbounds %struct.held_lock, ptr %hlock, i32 0, i32 6
  %0 = ptrtoint ptr %read to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load = load i32, ptr %read, align 8
  %1 = and i32 %bf.load, 49152
  %tobool1.not = icmp eq i32 %1, 0
  %spec.select = select i1 %tobool1.not, i32 768, i32 256
  %usage_mask = getelementptr inbounds %struct.lock_class, ptr %call, i32 0, i32 7
  %2 = ptrtoint ptr %usage_mask to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %usage_mask, align 4
  %and = and i32 %spec.select, %3
  %tobool4.not = icmp eq i32 %and, 0
  br i1 %tobool4.not, label %cleanup, label %if.end6

if.end6:                                          ; preds = %if.end
  %sub.ptr.lhs.cast = ptrtoint ptr %call to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, ptrtoint (ptr @lock_classes to i32)
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 132
  %bf.shl = shl i32 %sub.ptr.div, 19
  %bf.clear8 = and i32 %bf.load, 524287
  %bf.set = or i32 %bf.clear8, %bf.shl
  %4 = ptrtoint ptr %read to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %bf.set, ptr %read, align 8
  %5 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task, align 8
  tail call fastcc void @print_usage_bug(ptr noundef %8, ptr noundef %hlock, i32 noundef 8, i32 noundef 10)
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__lock_acquire(ptr noundef %lock, i32 noundef %subclass, i32 noundef %trylock, i32 noundef %read, i32 noundef %check, i32 noundef %hardirqs_off, ptr noundef %nest_lock, i32 noundef %ip, i32 noundef %references, i32 noundef %pin_count) unnamed_addr #0 align 64 {
entry:
  %__next.i.i.i.i.i.i = alloca ptr, align 4
  %mask.addr.i.i.i.i.i = alloca i32, align 4
  %target_entry1.i.i.i.i = alloca ptr, align 4
  %target_entry.i.i.i.i = alloca ptr, align 4
  %this.i.i.i.i = alloca %struct.lock_list, align 4
  %that.i.i.i.i = alloca %struct.lock_list, align 4
  %trace.i.i = alloca ptr, align 4
  %0 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i700 = and i32 %0, -16384
  %1 = inttoptr i32 %and.i700 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %4 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %cleanup, label %if.end, !prof !1501

if.end:                                           ; preds = %entry
  %5 = load i32, ptr @prove_locking, align 4
  %tobool4.not = icmp eq i32 %5, 0
  br i1 %tobool4.not, label %if.then5, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %6 = ptrtoint ptr %lock to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %lock, align 4
  %cmp = icmp eq ptr %7, @__lockdep_no_validate__
  br i1 %cmp, label %if.then5, label %if.end6

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %lor.lhs.false
  %check.addr.0 = phi i32 [ 0, %if.then5 ], [ %check, %lor.lhs.false ]
  %cmp7 = icmp ult i32 %subclass, 2
  br i1 %cmp7, label %if.end9, label %if.then19

if.end9:                                          ; preds = %if.end6
  %arrayidx = getelementptr %struct.lockdep_map, ptr %lock, i32 0, i32 1, i32 %subclass
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 4
  %tobool10.not = icmp eq ptr %9, null
  br i1 %tobool10.not, label %if.then19, label %if.end24, !prof !1501

if.then19:                                        ; preds = %if.end9, %if.end6
  %call20 = tail call fastcc ptr @register_lock_class(ptr noundef %lock, i32 noundef %subclass, i32 noundef 0)
  %tobool21.not = icmp eq ptr %call20, null
  br i1 %tobool21.not, label %cleanup, label %if.end24

if.end24:                                         ; preds = %if.then19, %if.end9
  %class.1 = phi ptr [ %call20, %if.then19 ], [ %9, %if.end9 ]
  %sub.ptr.lhs.cast.i = ptrtoint ptr %class.1 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, ptrtoint (ptr @lock_classes to i32)
  %sub.ptr.div.i = sdiv exact i32 %sub.ptr.sub.i, 132
  %10 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28, !srcloc !1503
  %arrayidx.i701 = getelementptr %struct.lockdep_stats, ptr @lockdep_stats, i32 0, i32 16, i32 %sub.ptr.div.i
  %11 = ptrtoint ptr %arrayidx.i701 to i32
  %12 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i702 = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i702 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %cpu.i, align 4
  %arrayidx14.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %15
  %16 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx14.i, align 4
  %add.i = add i32 %17, %11
  %18 = inttoptr i32 %add.i to ptr
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %18, align 4
  %add15.i = add i32 %20, 1
  store i32 %add15.i, ptr %18, align 4
  %21 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i.i = and i32 %21, 128
  %tobool.not.i703 = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i703, label %if.then.i704, label %debug_class_ops_inc.exit, !prof !1501

if.then.i704:                                     ; preds = %if.end24
  tail call void @warn_bogus_irq_restore() #28
  br label %debug_class_ops_inc.exit

debug_class_ops_inc.exit:                         ; preds = %if.then.i704, %if.end24
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %10) #28, !srcloc !1506
  %lockdep_depth = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 142
  %22 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %lockdep_depth, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %24 = load i32, ptr @oops_in_progress, align 4
  %tobool45.not = icmp eq i32 %24, 0
  %cmp46 = icmp ugt i32 %23, 47
  %or.cond = select i1 %tobool45.not, i1 %cmp46, i1 false
  br i1 %or.cond, label %do.end56, label %if.end95, !prof !1530

do.end56:                                         ; preds = %debug_class_ops_inc.exit
  %call57 = tail call i32 @debug_locks_off() #28
  %tobool58.not = icmp eq i32 %call57, 0
  br i1 %tobool58.not, label %cleanup, label %land.lhs.true59

land.lhs.true59:                                  ; preds = %do.end56
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %25 = load i32, ptr @debug_locks_silent, align 4
  %tobool60.not = icmp eq i32 %25, 0
  br i1 %tobool60.not, label %do.end73, label %cleanup

do.end73:                                         ; preds = %land.lhs.true59
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4930, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.426) #28
  br label %cleanup

if.end95:                                         ; preds = %debug_class_ops_inc.exit
  %tobool96.not = icmp eq i32 %23, 0
  br i1 %tobool96.not, label %if.end242, label %if.then97

if.then97:                                        ; preds = %if.end95
  %held_locks = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 144
  %add.ptr = getelementptr %struct.held_lock, ptr %held_locks, i32 %23
  %add.ptr98 = getelementptr %struct.held_lock, ptr %add.ptr, i32 -1
  %class_idx99 = getelementptr inbounds %struct.held_lock, ptr %add.ptr98, i32 0, i32 6
  %26 = ptrtoint ptr %class_idx99 to i32
  call void @__asan_load4_noabort(i32 %26)
  %bf.load = load i32, ptr %class_idx99, align 8
  %bf.lshr = lshr i32 %bf.load, 19
  %cmp100 = icmp ne i32 %bf.lshr, %sub.ptr.div.i
  %tobool102.not = icmp eq ptr %nest_lock, null
  %or.cond692 = or i1 %tobool102.not, %cmp100
  br i1 %or.cond692, label %if.end242, label %if.then103

if.then103:                                       ; preds = %if.then97
  %tobool104.not = icmp eq i32 %references, 0
  %spec.select = select i1 %tobool104.not, i32 1, i32 %references
  %bf.clear = and i32 %bf.load, 4095
  %tobool109.not = icmp eq i32 %bf.clear, 0
  br i1 %tobool109.not, label %if.then110, label %if.end117

if.then110:                                       ; preds = %if.then103
  %bf.clear116 = and i32 %bf.load, -4096
  %bf.set = or i32 %bf.clear116, 1
  %27 = ptrtoint ptr %class_idx99 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %bf.set, ptr %class_idx99, align 8
  br label %if.end117

if.end117:                                        ; preds = %if.then110, %if.then103
  %28 = ptrtoint ptr %class_idx99 to i32
  call void @__asan_load4_noabort(i32 %28)
  %bf.load119 = load i32, ptr %class_idx99, align 8
  %add = add i32 %bf.load119, %spec.select
  %bf.value122 = and i32 %add, 4095
  %bf.clear123 = and i32 %bf.load119, -4096
  %bf.set124 = or i32 %bf.value122, %bf.clear123
  store i32 %bf.set124, ptr %class_idx99, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %29 = load i32, ptr @oops_in_progress, align 4
  %tobool126.not = icmp eq i32 %29, 0
  %cmp131 = icmp slt i32 %bf.value122, %spec.select
  %or.cond693 = select i1 %tobool126.not, i1 %cmp131, i1 false
  br i1 %or.cond693, label %do.end141, label %cleanup, !prof !1530

do.end141:                                        ; preds = %if.end117
  %call142 = tail call i32 @debug_locks_off() #28
  %tobool143.not = icmp eq i32 %call142, 0
  br i1 %tobool143.not, label %cleanup, label %land.lhs.true144

land.lhs.true144:                                 ; preds = %do.end141
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %30 = load i32, ptr @debug_locks_silent, align 4
  %tobool145.not = icmp eq i32 %30, 0
  br i1 %tobool145.not, label %do.end159, label %cleanup

do.end159:                                        ; preds = %land.lhs.true144
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4947, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.427) #28
  br label %cleanup

if.end242:                                        ; preds = %if.then97, %if.end95
  %held_locks184 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 144
  %add.ptr186 = getelementptr %struct.held_lock, ptr %held_locks184, i32 %23
  %class_idx243 = getelementptr %struct.held_lock, ptr %held_locks184, i32 %23, i32 6
  %31 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %31)
  %bf.load244 = load i32, ptr %class_idx243, align 8
  %bf.shl = shl i32 %sub.ptr.div.i, 19
  %bf.clear246 = and i32 %bf.load244, 524287
  %bf.set247 = or i32 %bf.clear246, %bf.shl
  store i32 %bf.set247, ptr %class_idx243, align 8
  %acquire_ip = getelementptr %struct.held_lock, ptr %held_locks184, i32 %23, i32 1
  %32 = ptrtoint ptr %acquire_ip to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %ip, ptr %acquire_ip, align 8
  %instance = getelementptr %struct.held_lock, ptr %held_locks184, i32 %23, i32 2
  %33 = ptrtoint ptr %instance to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %lock, ptr %instance, align 4
  %nest_lock248 = getelementptr %struct.held_lock, ptr %held_locks184, i32 %23, i32 3
  %34 = ptrtoint ptr %nest_lock248 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %nest_lock, ptr %nest_lock248, align 8
  %35 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i705 = and i32 %35, -16384
  %36 = inttoptr i32 %and.i.i705 to ptr
  %cpu.i706 = getelementptr inbounds %struct.thread_info, ptr %36, i32 0, i32 3
  %37 = ptrtoint ptr %cpu.i706 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %cpu.i706, align 4
  %arrayidx.i707 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %38
  %39 = ptrtoint ptr %arrayidx.i707 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx.i707, align 4
  %add.i708 = add i32 %40, ptrtoint (ptr @hardirq_context to i32)
  %41 = inttoptr i32 %add.i708 to ptr
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %41, align 4
  %tobool.not.i709 = icmp eq i32 %43, 0
  %mul.i = select i1 %tobool.not.i709, i32 0, i32 2
  %softirq_context.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 139
  %44 = ptrtoint ptr %softirq_context.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %softirq_context.i, align 4
  %tobool9.i = icmp ne i32 %45, 0
  %lnot.ext13.i = zext i1 %tobool9.i to i32
  %add15.i710 = or i32 %mul.i, %lnot.ext13.i
  %bf.value251 = shl nuw nsw i32 %add15.i710, 17
  %bf.set254 = or i32 %bf.value251, %bf.shl
  %bf.value257 = shl i32 %trylock, 16
  %bf.shl258 = and i32 %bf.value257, 65536
  %bf.set260 = or i32 %bf.set254, %bf.shl258
  %bf.value263 = shl i32 %read, 14
  %bf.shl264 = and i32 %bf.value263, 49152
  %bf.set266 = or i32 %bf.set260, %bf.shl264
  %bf.value269 = shl i32 %check.addr.0, 13
  %bf.shl270 = and i32 %bf.value269, 8192
  %bf.set272 = or i32 %bf.set266, %bf.shl270
  %tobool273.not = icmp eq i32 %hardirqs_off, 0
  %bf.shl281 = select i1 %tobool273.not, i32 0, i32 4096
  %bf.value286 = and i32 %references, 4095
  %bf.clear287 = or i32 %bf.set272, %bf.shl281
  %bf.set288 = or i32 %bf.clear287, %bf.value286
  %46 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %bf.set288, ptr %class_idx243, align 8
  %waittime_stamp = getelementptr %struct.held_lock, ptr %held_locks184, i32 %23, i32 4
  %47 = ptrtoint ptr %waittime_stamp to i32
  call void @__asan_store8_noabort(i32 %47)
  store i64 0, ptr %waittime_stamp, align 8
  %call.i.i = tail call i64 @sched_clock() #28
  %holdtime_stamp = getelementptr %struct.held_lock, ptr %held_locks184, i32 %23, i32 5
  %48 = ptrtoint ptr %holdtime_stamp to i32
  call void @__asan_store8_noabort(i32 %48)
  store i64 %call.i.i, ptr %holdtime_stamp, align 8
  %pin_count290 = getelementptr %struct.held_lock, ptr %held_locks184, i32 %23, i32 7
  %49 = ptrtoint ptr %pin_count290 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %pin_count, ptr %pin_count290, align 4
  %50 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %50)
  %bf.load.i.i = load i32, ptr %class_idx243, align 8
  %bf.lshr.i.i = lshr i32 %bf.load.i.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i.i = lshr i32 %bf.load.i.i, 24
  %arrayidx.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i.i
  %51 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i711 = and i32 %bf.lshr.i.i, 31
  %53 = shl nuw i32 1, %and.i.i.i711
  %54 = and i32 %53, %52
  %tobool.not.i.i = icmp eq i32 %54, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.end33.i.i

if.then.i.i:                                      ; preds = %if.end242
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %55 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i.i = icmp eq i32 %55, 0
  br i1 %tobool2.not.i.i, label %do.end.i.i, label %hlock_class.exit.i

do.end.i.i:                                       ; preds = %if.then.i.i
  %call4.i.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %hlock_class.exit.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %do.end.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %56 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i.i = icmp eq i32 %56, 0
  br i1 %tobool6.not.i.i, label %do.end15.i.i, label %hlock_class.exit.i

do.end15.i.i:                                     ; preds = %land.lhs.true.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit.i

if.end33.i.i:                                     ; preds = %if.end242
  %add.ptr.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i.i
  br label %hlock_class.exit.i

hlock_class.exit.i:                               ; preds = %if.end33.i.i, %do.end15.i.i, %land.lhs.true.i.i, %do.end.i.i, %if.then.i.i
  %retval.0.i.i = phi ptr [ %add.ptr.i.i, %if.end33.i.i ], [ null, %do.end15.i.i ], [ null, %land.lhs.true.i.i ], [ null, %do.end.i.i ], [ null, %if.then.i.i ]
  %wait_type_inner.i = getelementptr inbounds %struct.lock_class, ptr %retval.0.i.i, i32 0, i32 11
  %57 = ptrtoint ptr %wait_type_inner.i to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %wait_type_inner.i, align 4
  %59 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %59)
  %bf.load.i3.i = load i32, ptr %class_idx243, align 8
  %bf.lshr.i4.i = lshr i32 %bf.load.i3.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i5.i = lshr i32 %bf.load.i3.i, 24
  %arrayidx.i.i6.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i5.i
  %60 = ptrtoint ptr %arrayidx.i.i6.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %arrayidx.i.i6.i, align 4
  %and.i.i7.i = and i32 %bf.lshr.i4.i, 31
  %62 = shl nuw i32 1, %and.i.i7.i
  %63 = and i32 %62, %61
  %tobool.not.i8.i = icmp eq i32 %63, 0
  br i1 %tobool.not.i8.i, label %if.then.i10.i, label %if.end33.i18.i

if.then.i10.i:                                    ; preds = %hlock_class.exit.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %64 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i9.i = icmp eq i32 %64, 0
  br i1 %tobool2.not.i9.i, label %do.end.i13.i, label %hlock_class.exit20.i

do.end.i13.i:                                     ; preds = %if.then.i10.i
  %call4.i11.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i12.i = icmp eq i32 %call4.i11.i, 0
  br i1 %tobool5.not.i12.i, label %hlock_class.exit20.i, label %land.lhs.true.i15.i

land.lhs.true.i15.i:                              ; preds = %do.end.i13.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %65 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i14.i = icmp eq i32 %65, 0
  br i1 %tobool6.not.i14.i, label %do.end15.i16.i, label %hlock_class.exit20.i

do.end15.i16.i:                                   ; preds = %land.lhs.true.i15.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit20.i

if.end33.i18.i:                                   ; preds = %hlock_class.exit.i
  %add.ptr.i17.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i4.i
  br label %hlock_class.exit20.i

hlock_class.exit20.i:                             ; preds = %if.end33.i18.i, %do.end15.i16.i, %land.lhs.true.i15.i, %do.end.i13.i, %if.then.i10.i
  %retval.0.i19.i = phi ptr [ %add.ptr.i17.i, %if.end33.i18.i ], [ null, %do.end15.i16.i ], [ null, %land.lhs.true.i15.i ], [ null, %do.end.i13.i ], [ null, %if.then.i10.i ]
  %wait_type_outer.i = getelementptr inbounds %struct.lock_class, ptr %retval.0.i19.i, i32 0, i32 12
  %66 = ptrtoint ptr %wait_type_outer.i to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %wait_type_outer.i, align 1
  %tobool.not.i712 = icmp eq i8 %58, 0
  br i1 %tobool.not.i712, label %check_wait_context.exit, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %hlock_class.exit20.i
  %68 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %68)
  %bf.load.i = load i32, ptr %class_idx243, align 8
  %69 = and i32 %bf.load.i, 65536
  %tobool2.not.i = icmp eq i32 %69, 0
  br i1 %tobool2.not.i, label %if.end.i, label %check_wait_context.exit

if.end.i:                                         ; preds = %lor.lhs.false.i
  %tobool3.not.i = icmp eq i8 %67, 0
  %spec.select.i = select i1 %tobool3.not.i, i8 %58, i8 %67
  %70 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %lockdep_depth, align 8
  %72 = add i32 %71, -1
  %smin.i = tail call i32 @llvm.smin.i32(i32 %72, i32 -1) #28
  %73 = add nsw i32 %smin.i, 1
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i716, %if.end.i
  %depth.0.in.i = phi i32 [ %71, %if.end.i ], [ %depth.0.i, %for.body.i716 ]
  %depth.0.i = add i32 %depth.0.in.i, -1
  %cmp.i715 = icmp sgt i32 %depth.0.i, -1
  br i1 %cmp.i715, label %for.body.i716, label %for.end.i

for.body.i716:                                    ; preds = %for.cond.i
  %irq_context.i = getelementptr %struct.held_lock, ptr %held_locks184, i32 %depth.0.i, i32 6
  %74 = ptrtoint ptr %irq_context.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %bf.load6.i = load i32, ptr %irq_context.i, align 8
  %bf.lshr71.i = xor i32 %bf.load6.i, %bf.load.i
  %75 = and i32 %bf.lshr71.i, 393216
  %cmp13.not.i = icmp eq i32 %75, 0
  br i1 %cmp13.not.i, label %for.cond.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i716, %for.cond.i
  %depth.0.in.lcssa.i = phi i32 [ %depth.0.in.i, %for.body.i716 ], [ %73, %for.cond.i ]
  %76 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i21.i = and i32 %76, -16384
  %77 = inttoptr i32 %and.i.i21.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %77, i32 0, i32 3
  %78 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %79
  %80 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %81, ptrtoint (ptr @hardirq_context to i32)
  %82 = inttoptr i32 %add.i.i to ptr
  %83 = ptrtoint ptr %82 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %82, align 4
  %tobool.not.i22.i = icmp eq i32 %84, 0
  br i1 %tobool.not.i22.i, label %if.else.i.i, label %if.then.i23.i

if.then.i23.i:                                    ; preds = %for.end.i
  %hardirq_threaded.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 136
  %85 = ptrtoint ptr %hardirq_threaded.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %hardirq_threaded.i.i, align 16
  %tobool8.not.i.i = icmp eq i32 %86, 0
  br i1 %tobool8.not.i.i, label %lor.lhs.false.i.i, label %task_wait_context.exit.i

lor.lhs.false.i.i:                                ; preds = %if.then.i23.i
  %irq_config.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 140
  %87 = ptrtoint ptr %irq_config.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %irq_config.i.i, align 8
  %tobool9.not.i.i = icmp eq i32 %88, 0
  %extract.t48.i = select i1 %tobool9.not.i.i, i8 2, i8 3
  br label %task_wait_context.exit.i

if.else.i.i:                                      ; preds = %for.end.i
  %89 = ptrtoint ptr %softirq_context.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %softirq_context.i, align 4
  %tobool11.not.i.i = icmp eq i32 %90, 0
  %extract.t.i = select i1 %tobool11.not.i.i, i8 5, i8 3
  br label %task_wait_context.exit.i

task_wait_context.exit.i:                         ; preds = %if.else.i.i, %lor.lhs.false.i.i, %if.then.i23.i
  %retval.0.i24.off0.i = phi i8 [ 3, %if.then.i23.i ], [ %extract.t.i, %if.else.i.i ], [ %extract.t48.i, %lor.lhs.false.i.i ]
  %cmp1949.i = icmp slt i32 %depth.0.in.lcssa.i, %71
  br i1 %cmp1949.i, label %for.body21.i, label %for.end40.i

for.body21.i:                                     ; preds = %hlock_class.exit43.i, %task_wait_context.exit.i
  %depth.151.i = phi i32 [ %inc39.i, %hlock_class.exit43.i ], [ %depth.0.in.lcssa.i, %task_wait_context.exit.i ]
  %curr_inner.050.i = phi i8 [ %curr_inner.1.i, %hlock_class.exit43.i ], [ %retval.0.i24.off0.i, %task_wait_context.exit.i ]
  %class_idx1.i25.i = getelementptr %struct.held_lock, ptr %held_locks184, i32 %depth.151.i, i32 6
  %91 = ptrtoint ptr %class_idx1.i25.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %bf.load.i26.i = load i32, ptr %class_idx1.i25.i, align 8
  %bf.lshr.i27.i = lshr i32 %bf.load.i26.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i28.i = lshr i32 %bf.load.i26.i, 24
  %arrayidx.i.i29.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i28.i
  %92 = ptrtoint ptr %arrayidx.i.i29.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile i32, ptr %arrayidx.i.i29.i, align 4
  %and.i.i30.i = and i32 %bf.lshr.i27.i, 31
  %94 = shl nuw i32 1, %and.i.i30.i
  %95 = and i32 %94, %93
  %tobool.not.i31.i = icmp eq i32 %95, 0
  br i1 %tobool.not.i31.i, label %if.then.i33.i, label %if.end33.i41.i

if.then.i33.i:                                    ; preds = %for.body21.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %96 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i32.i = icmp eq i32 %96, 0
  br i1 %tobool2.not.i32.i, label %do.end.i36.i, label %hlock_class.exit43.i

do.end.i36.i:                                     ; preds = %if.then.i33.i
  %call4.i34.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i35.i = icmp eq i32 %call4.i34.i, 0
  br i1 %tobool5.not.i35.i, label %hlock_class.exit43.i, label %land.lhs.true.i38.i

land.lhs.true.i38.i:                              ; preds = %do.end.i36.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %97 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i37.i = icmp eq i32 %97, 0
  br i1 %tobool6.not.i37.i, label %do.end15.i39.i, label %hlock_class.exit43.i

do.end15.i39.i:                                   ; preds = %land.lhs.true.i38.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit43.i

if.end33.i41.i:                                   ; preds = %for.body21.i
  %add.ptr.i40.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i27.i
  br label %hlock_class.exit43.i

hlock_class.exit43.i:                             ; preds = %if.end33.i41.i, %do.end15.i39.i, %land.lhs.true.i38.i, %do.end.i36.i, %if.then.i33.i
  %retval.0.i42.i = phi ptr [ %add.ptr.i40.i, %if.end33.i41.i ], [ null, %do.end15.i39.i ], [ null, %land.lhs.true.i38.i ], [ null, %do.end.i36.i ], [ null, %if.then.i33.i ]
  %wait_type_inner27.i = getelementptr inbounds %struct.lock_class, ptr %retval.0.i42.i, i32 0, i32 11
  %98 = ptrtoint ptr %wait_type_inner27.i to i32
  call void @__asan_load1_noabort(i32 %98)
  %99 = load i8, ptr %wait_type_inner27.i, align 4
  %tobool28.not.i = icmp eq i8 %99, 0
  %100 = tail call i8 @llvm.umin.i8(i8 %curr_inner.050.i, i8 %99) #28
  %curr_inner.1.i = select i1 %tobool28.not.i, i8 %curr_inner.050.i, i8 %100
  %inc39.i = add nsw i32 %depth.151.i, 1
  %101 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %lockdep_depth, align 8
  %cmp19.i = icmp slt i32 %inc39.i, %102
  br i1 %cmp19.i, label %for.body21.i, label %for.end40.i

for.end40.i:                                      ; preds = %hlock_class.exit43.i, %task_wait_context.exit.i
  %curr_inner.0.lcssa.i = phi i8 [ %retval.0.i24.off0.i, %task_wait_context.exit.i ], [ %curr_inner.1.i, %hlock_class.exit43.i ]
  %cmp43.i = icmp ugt i8 %spec.select.i, %curr_inner.0.lcssa.i
  br i1 %cmp43.i, label %if.then45.i, label %check_wait_context.exit

if.then45.i:                                      ; preds = %for.end40.i
  %call.i.i717 = tail call i32 @debug_locks_off() #28
  %tobool.not.i44.i = icmp eq i32 %call.i.i717, 0
  br i1 %tobool.not.i44.i, label %check_wait_context.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then45.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %103 = load i32, ptr @debug_locks_silent, align 4
  %tobool1.not.i.i = icmp eq i32 %103, 0
  br i1 %tobool1.not.i.i, label %do.end.i47.i, label %check_wait_context.exit

do.end.i47.i:                                     ; preds = %if.end.i.i
  %call4.i45.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.89) #32
  %call9.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.111) #32
  %call14.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.440) #32
  %call3.i.i.i = tail call i32 @strcspn(ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef nonnull @.str.766) #28
  %call7.i.i.i = tail call ptr @print_tainted() #28
  %call8.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.764, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 2), i32 noundef %call3.i.i.i, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef %call7.i.i.i) #32
  %call19.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.117) #32
  %comm.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 101
  %pid.i.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 68
  %104 = ptrtoint ptr %pid.i.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %pid.i.i.i, align 8
  %call25.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.445, ptr noundef %comm.i.i, i32 noundef %105) #32
  tail call fastcc void @print_lock(ptr noundef %add.ptr186) #28
  %call30.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.448) #32
  %106 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i = and i32 %106, -16384
  %107 = inttoptr i32 %and.i.i.i.i to ptr
  %cpu.i.i.i = getelementptr inbounds %struct.thread_info, ptr %107, i32 0, i32 3
  %108 = ptrtoint ptr %cpu.i.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %cpu.i.i.i, align 4
  %arrayidx.i.i46.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %109
  %110 = ptrtoint ptr %arrayidx.i.i46.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %arrayidx.i.i46.i, align 4
  %add.i.i.i = add i32 %111, ptrtoint (ptr @hardirq_context to i32)
  %112 = inttoptr i32 %add.i.i.i to ptr
  %113 = ptrtoint ptr %112 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %112, align 4
  %tobool.not.i.i.i = icmp eq i32 %114, 0
  br i1 %tobool.not.i.i.i, label %if.else.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %do.end.i47.i
  %hardirq_threaded.i.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 136
  %115 = ptrtoint ptr %hardirq_threaded.i.i.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %hardirq_threaded.i.i.i, align 16
  %tobool8.not.i.i.i = icmp eq i32 %116, 0
  br i1 %tobool8.not.i.i.i, label %lor.lhs.false.i.i.i, label %task_wait_context.exit.i.i

lor.lhs.false.i.i.i:                              ; preds = %if.then.i.i.i
  %irq_config.i.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 140
  %117 = ptrtoint ptr %irq_config.i.i.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %irq_config.i.i.i, align 8
  %tobool9.not.i.i.i = icmp eq i32 %118, 0
  %spec.select.i.i.i = select i1 %tobool9.not.i.i.i, i32 2, i32 3
  br label %task_wait_context.exit.i.i

if.else.i.i.i:                                    ; preds = %do.end.i47.i
  %119 = ptrtoint ptr %softirq_context.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %softirq_context.i, align 4
  %tobool11.not.i.i.i = icmp eq i32 %120, 0
  %..i.i.i = select i1 %tobool11.not.i.i.i, i32 5, i32 3
  br label %task_wait_context.exit.i.i

task_wait_context.exit.i.i:                       ; preds = %if.else.i.i.i, %lor.lhs.false.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ 3, %if.then.i.i.i ], [ %..i.i.i, %if.else.i.i.i ], [ %spec.select.i.i.i, %lor.lhs.false.i.i.i ]
  %call37.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.451, i32 noundef %retval.0.i.i.i, i32 noundef %retval.0.i.i.i) #32
  tail call fastcc void @lockdep_print_held_locks(ptr noundef %3) #28
  %call42.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.454) #32
  tail call void @dump_stack() #32
  br label %check_wait_context.exit

check_wait_context.exit:                          ; preds = %task_wait_context.exit.i.i, %if.end.i.i, %if.then45.i, %for.end40.i, %lor.lhs.false.i, %hlock_class.exit20.i
  %tobool.not.i718 = icmp eq i32 %check.addr.0, 0
  br i1 %tobool.not.i718, label %mark_usage.exit, label %if.end.i720

if.end.i720:                                      ; preds = %check_wait_context.exit
  %121 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %121)
  %bf.load.i719 = load i32, ptr %class_idx243, align 8
  %122 = and i32 %bf.load.i719, 65536
  %tobool1.not.i = icmp eq i32 %122, 0
  br i1 %tobool1.not.i, label %if.then2.i, label %if.end63.i

if.then2.i:                                       ; preds = %if.end.i720
  %123 = and i32 %bf.load.i719, 49152
  %tobool6.not.i = icmp eq i32 %123, 0
  %124 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i129.i = and i32 %124, -16384
  %125 = inttoptr i32 %and.i129.i to ptr
  %cpu43.i = getelementptr inbounds %struct.thread_info, ptr %125, i32 0, i32 3
  %126 = ptrtoint ptr %cpu43.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %cpu43.i, align 4
  %arrayidx44.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %127
  %128 = ptrtoint ptr %arrayidx44.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %arrayidx44.i, align 4
  %add45.i = add i32 %129, ptrtoint (ptr @hardirq_context to i32)
  %130 = inttoptr i32 %add45.i to ptr
  %131 = ptrtoint ptr %130 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %130, align 4
  %tobool47.not.i = icmp eq i32 %132, 0
  br i1 %tobool6.not.i, label %if.else.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.then2.i
  br i1 %tobool47.not.i, label %if.end21.i, label %if.then16.i

if.then16.i:                                      ; preds = %if.then7.i
  %call17.i = tail call fastcc i32 @mark_lock(ptr noundef %3, ptr noundef %add.ptr186, i32 noundef 1) #28
  %tobool18.not.i = icmp eq i32 %call17.i, 0
  br i1 %tobool18.not.i, label %cleanup, label %if.end21.i

if.end21.i:                                       ; preds = %if.then16.i, %if.then7.i
  %133 = ptrtoint ptr %softirq_context.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %softirq_context.i, align 4
  %tobool22.not.i = icmp eq i32 %134, 0
  br i1 %tobool22.not.i, label %if.end63.i, label %if.then23.i

if.then23.i:                                      ; preds = %if.end21.i
  %call24.i = tail call fastcc i32 @mark_lock(ptr noundef %3, ptr noundef %add.ptr186, i32 noundef 5) #28
  %tobool25.not.i = icmp eq i32 %call24.i, 0
  br i1 %tobool25.not.i, label %cleanup, label %if.end63.i

if.else.i:                                        ; preds = %if.then2.i
  br i1 %tobool47.not.i, label %if.end53.i, label %if.then48.i

if.then48.i:                                      ; preds = %if.else.i
  %call49.i = tail call fastcc i32 @mark_lock(ptr noundef %3, ptr noundef %add.ptr186, i32 noundef 0) #28
  %tobool50.not.i = icmp eq i32 %call49.i, 0
  br i1 %tobool50.not.i, label %cleanup, label %if.end53.i

if.end53.i:                                       ; preds = %if.then48.i, %if.else.i
  %135 = ptrtoint ptr %softirq_context.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %softirq_context.i, align 4
  %tobool55.not.i = icmp eq i32 %136, 0
  br i1 %tobool55.not.i, label %if.end63.i, label %if.then56.i

if.then56.i:                                      ; preds = %if.end53.i
  %call57.i = tail call fastcc i32 @mark_lock(ptr noundef %3, ptr noundef %add.ptr186, i32 noundef 4) #28
  %tobool58.not.i = icmp eq i32 %call57.i, 0
  br i1 %tobool58.not.i, label %cleanup, label %if.end63.i

if.end63.i:                                       ; preds = %if.then56.i, %if.end53.i, %if.then23.i, %if.end21.i, %if.end.i720
  %137 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %137)
  %bf.load64.i = load i32, ptr %class_idx243, align 8
  %138 = and i32 %bf.load64.i, 4096
  %tobool67.not.i = icmp eq i32 %138, 0
  br i1 %tobool67.not.i, label %if.then68.i, label %mark_usage.exit

if.then68.i:                                      ; preds = %if.end63.i
  %139 = and i32 %bf.load64.i, 49152
  %tobool73.not.i = icmp eq i32 %139, 0
  br i1 %tobool73.not.i, label %if.else86.i, label %if.then74.i

if.then74.i:                                      ; preds = %if.then68.i
  %call75.i = tail call fastcc i32 @mark_lock(ptr noundef %3, ptr noundef %add.ptr186, i32 noundef 3) #28
  %tobool76.not.i = icmp eq i32 %call75.i, 0
  br i1 %tobool76.not.i, label %cleanup, label %if.end78.i

if.end78.i:                                       ; preds = %if.then74.i
  %softirqs_enabled.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 138
  %140 = ptrtoint ptr %softirqs_enabled.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %softirqs_enabled.i, align 32
  %tobool79.not.i = icmp eq i32 %141, 0
  br i1 %tobool79.not.i, label %mark_usage.exit, label %if.then80.i

if.then80.i:                                      ; preds = %if.end78.i
  %call81.i = tail call fastcc i32 @mark_lock(ptr noundef %3, ptr noundef %add.ptr186, i32 noundef 7) #28
  %tobool82.not.i = icmp eq i32 %call81.i, 0
  br i1 %tobool82.not.i, label %cleanup, label %mark_usage.exit

if.else86.i:                                      ; preds = %if.then68.i
  %call87.i = tail call fastcc i32 @mark_lock(ptr noundef %3, ptr noundef %add.ptr186, i32 noundef 2) #28
  %tobool88.not.i = icmp eq i32 %call87.i, 0
  br i1 %tobool88.not.i, label %cleanup, label %if.end90.i

if.end90.i:                                       ; preds = %if.else86.i
  %softirqs_enabled91.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 138
  %142 = ptrtoint ptr %softirqs_enabled91.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %softirqs_enabled91.i, align 32
  %tobool92.not.i = icmp eq i32 %143, 0
  br i1 %tobool92.not.i, label %mark_usage.exit, label %if.then93.i

if.then93.i:                                      ; preds = %if.end90.i
  %call94.i = tail call fastcc i32 @mark_lock(ptr noundef %3, ptr noundef %add.ptr186, i32 noundef 6) #28
  %tobool95.not.i = icmp eq i32 %call94.i, 0
  br i1 %tobool95.not.i, label %cleanup, label %mark_usage.exit

mark_usage.exit:                                  ; preds = %if.then93.i, %if.end90.i, %if.then80.i, %if.end78.i, %if.end63.i, %check_wait_context.exit
  %call101.i = tail call fastcc i32 @mark_lock(ptr noundef %3, ptr noundef %add.ptr186, i32 noundef 8) #28
  %tobool102.not.i.not = icmp eq i32 %call101.i, 0
  br i1 %tobool102.not.i.not, label %cleanup, label %if.end298

if.end298:                                        ; preds = %mark_usage.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %144 = load i32, ptr @oops_in_progress, align 4
  %tobool300.not = icmp eq i32 %144, 0
  br i1 %tobool300.not, label %land.lhs.true301, label %if.end355

land.lhs.true301:                                 ; preds = %if.end298
  %div3.i = lshr i32 %sub.ptr.div.i, 5
  %arrayidx.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i
  %145 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load volatile i32, ptr %arrayidx.i, align 4
  %and.i = and i32 %sub.ptr.div.i, 31
  %147 = shl nuw i32 1, %and.i
  %148 = and i32 %146, %147
  %tobool303.not = icmp eq i32 %148, 0
  br i1 %tobool303.not, label %do.end315, label %if.end355, !prof !1501

do.end315:                                        ; preds = %land.lhs.true301
  %call316 = tail call i32 @debug_locks_off() #28
  %tobool317.not = icmp eq i32 %call316, 0
  br i1 %tobool317.not, label %cleanup, label %land.lhs.true318

land.lhs.true318:                                 ; preds = %do.end315
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %149 = load i32, ptr @debug_locks_silent, align 4
  %tobool319.not = icmp eq i32 %149, 0
  br i1 %tobool319.not, label %do.end333, label %cleanup

do.end333:                                        ; preds = %land.lhs.true318
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4997, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.429) #28
  br label %cleanup

if.end355:                                        ; preds = %land.lhs.true301, %if.end298
  %curr_chain_key = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 141
  %150 = ptrtoint ptr %curr_chain_key to i32
  call void @__asan_load8_noabort(i32 %150)
  %151 = load i64, ptr %curr_chain_key, align 16
  br i1 %tobool96.not, label %if.then357, label %if.end412

if.then357:                                       ; preds = %if.end355
  %tobool359.not = icmp ne i32 %144, 0
  %cmp361.not = icmp eq i64 %151, -1
  %or.cond696 = select i1 %tobool359.not, i1 true, i1 %cmp361.not
  br i1 %or.cond696, label %if.end412, label %do.end371, !prof !1544

do.end371:                                        ; preds = %if.then357
  %call372 = tail call i32 @debug_locks_off() #28
  %tobool373.not = icmp eq i32 %call372, 0
  br i1 %tobool373.not, label %cleanup, label %land.lhs.true374

land.lhs.true374:                                 ; preds = %do.end371
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %152 = load i32, ptr @debug_locks_silent, align 4
  %tobool375.not = icmp eq i32 %152, 0
  br i1 %tobool375.not, label %do.end389, label %cleanup

do.end389:                                        ; preds = %land.lhs.true374
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5005, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.430) #28
  br label %cleanup

if.end412:                                        ; preds = %if.then357, %if.end355
  %153 = xor i1 %tobool96.not, true
  %154 = ptrtoint ptr %add.ptr186 to i32
  call void @__asan_store8_noabort(i32 %154)
  store i64 %151, ptr %add.ptr186, align 8
  %155 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load i32, ptr %lockdep_depth, align 8
  %tobool.not.i723 = icmp eq i32 %156, 0
  br i1 %tobool.not.i723, label %160, label %if.then.i728

if.then.i728:                                     ; preds = %if.end412
  %add.ptr.i725 = getelementptr %struct.held_lock, ptr %held_locks184, i32 %156
  %add.ptr1.i = getelementptr %struct.held_lock, ptr %add.ptr.i725, i32 -1
  %irq_context.i726 = getelementptr inbounds %struct.held_lock, ptr %add.ptr1.i, i32 0, i32 6
  %157 = ptrtoint ptr %irq_context.i726 to i32
  call void @__asan_load4_noabort(i32 %157)
  %bf.load.i727 = load i32, ptr %irq_context.i726, align 8
  %158 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %158)
  %bf.load3.i = load i32, ptr %class_idx243, align 8
  %bf.lshr11.i = xor i32 %bf.load3.i, %bf.load.i727
  %159 = and i32 %bf.lshr11.i, 393216
  %cmp.not.i = icmp eq i32 %159, 0
  br i1 %cmp.not.i, label %160, label %separate_irq_context.exit

160:                                              ; preds = %if.then.i728, %if.end412
  %extract.t = trunc i64 %151 to i32
  %extract = lshr i64 %151, 32
  %extract.t948 = trunc i64 %extract to i32
  br label %separate_irq_context.exit

separate_irq_context.exit:                        ; preds = %160, %if.then.i728
  %tobool414.not898 = phi i1 [ true, %160 ], [ false, %if.then.i728 ]
  %.off0 = phi i32 [ %extract.t, %160 ], [ -1, %if.then.i728 ]
  %.off32 = phi i32 [ %extract.t948, %160 ], [ -1, %if.then.i728 ]
  %161 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %161)
  %bf.load.i729 = load i32, ptr %class_idx243, align 8
  %bf.lshr.i = lshr i32 %bf.load.i729, 19
  %162 = lshr i32 %bf.load.i729, 1
  %shl.i = and i32 %162, 24576
  %or.i = sub i32 %bf.lshr.i, %.off32
  %sub.i = add i32 %or.i, %shl.i
  %or.i.i = tail call i32 @llvm.fshl.i32(i32 %.off32, i32 %.off32, i32 4) #28
  %xor.i = xor i32 %sub.i, %or.i.i
  %add.i732 = add i32 %.off32, %.off0
  %sub2.i = sub i32 %.off0, %xor.i
  %or.i60.i = tail call i32 @llvm.fshl.i32(i32 %xor.i, i32 %xor.i, i32 6) #28
  %xor4.i = xor i32 %sub2.i, %or.i60.i
  %add5.i = add i32 %xor.i, %add.i732
  %sub6.i = sub i32 %add.i732, %xor4.i
  %or.i61.i = tail call i32 @llvm.fshl.i32(i32 %xor4.i, i32 %xor4.i, i32 8) #28
  %xor8.i = xor i32 %sub6.i, %or.i61.i
  %add9.i = add i32 %xor4.i, %add5.i
  %sub10.i = sub i32 %add5.i, %xor8.i
  %or.i62.i = tail call i32 @llvm.fshl.i32(i32 %xor8.i, i32 %xor8.i, i32 16) #28
  %xor12.i = xor i32 %sub10.i, %or.i62.i
  %add13.i = add i32 %xor8.i, %add9.i
  %sub14.i = sub i32 %add9.i, %xor12.i
  %or.i63.i = tail call i32 @llvm.fshl.i32(i32 %xor12.i, i32 %xor12.i, i32 19) #28
  %xor16.i = xor i32 %sub14.i, %or.i63.i
  %add17.i = add i32 %xor12.i, %add13.i
  %sub18.i = sub i32 %add13.i, %xor16.i
  %or.i64.i = tail call i32 @llvm.fshl.i32(i32 %xor16.i, i32 %xor16.i, i32 4) #28
  %xor20.i = xor i32 %sub18.i, %or.i64.i
  %add21.i = add i32 %add17.i, %xor16.i
  %conv22.i = zext i32 %add21.i to i64
  %conv23.i = zext i32 %xor20.i to i64
  %shl.i733 = shl nuw i64 %conv23.i, 32
  %or.i734 = or i64 %shl.i733, %conv22.i
  %tobool419.not = icmp eq ptr %nest_lock, null
  br i1 %tobool419.not, label %if.end424, label %land.lhs.true420

land.lhs.true420:                                 ; preds = %separate_irq_context.exit
  %163 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %163, -16384
  %164 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %164, i32 0, i32 2
  %165 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %task.i, align 8
  %lockdep_depth.i = getelementptr inbounds %struct.task_struct, ptr %166, i32 0, i32 142
  %167 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load i32, ptr %lockdep_depth.i, align 8
  %cmp18.i = icmp sgt i32 %168, 0
  br i1 %cmp18.i, label %for.body.lr.ph.i, label %if.then423

for.body.lr.ph.i:                                 ; preds = %land.lhs.true420
  %held_locks.i = getelementptr inbounds %struct.task_struct, ptr %166, i32 0, i32 144
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %i.019.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i ]
  %add.ptr.i = getelementptr %struct.held_lock, ptr %held_locks.i, i32 %i.019.i
  %call1.i = tail call fastcc i32 @match_held_lock(ptr noundef %add.ptr.i, ptr noundef nonnull %nest_lock) #28
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %for.inc.i, label %if.end424

for.inc.i:                                        ; preds = %for.body.i
  %inc.i = add nuw nsw i32 %i.019.i, 1
  %169 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %lockdep_depth.i, align 8
  %cmp.i = icmp slt i32 %inc.i, %170
  br i1 %cmp.i, label %for.body.i, label %if.then423

if.then423:                                       ; preds = %for.inc.i, %land.lhs.true420
  %call.i = tail call i32 @debug_locks_off() #28
  %tobool.not.i735 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i735, label %cleanup, label %if.end.i737

if.end.i737:                                      ; preds = %if.then423
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %171 = load i32, ptr @debug_locks_silent, align 4
  %tobool1.not.i736 = icmp eq i32 %171, 0
  br i1 %tobool1.not.i736, label %do.end.i, label %cleanup

do.end.i:                                         ; preds = %if.end.i737
  %call4.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.89) #32
  %call8.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.458) #32
  %call12.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.461) #32
  %call3.i.i = tail call i32 @strcspn(ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef nonnull @.str.766) #28
  %call7.i.i = tail call ptr @print_tainted() #28
  %call8.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.764, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 2), i32 noundef %call3.i.i, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef %call7.i.i) #32
  %call16.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.464) #32
  %comm.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 101
  %pid.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 68
  %172 = ptrtoint ptr %pid.i.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %pid.i.i, align 8
  %call21.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.445, ptr noundef %comm.i, i32 noundef %173) #32
  tail call fastcc void @print_lock(ptr noundef %add.ptr186) #28
  %call25.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.469) #32
  %174 = ptrtoint ptr %nest_lock248 to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %nest_lock248, align 8
  %name.i = getelementptr inbounds %struct.lockdep_map, ptr %175, i32 0, i32 2
  %176 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load ptr, ptr %name.i, align 4
  %call29.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.472, ptr noundef %177) #32
  %call33.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134) #32
  tail call void @dump_stack() #32
  %call37.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.226) #32
  tail call fastcc void @lockdep_print_held_locks(ptr noundef %3) #28
  %call41.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134) #32
  tail call void @dump_stack() #32
  br label %cleanup

if.end424:                                        ; preds = %for.body.i, %separate_irq_context.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %178 = load i32, ptr @debug_locks_silent, align 4
  %tobool425.not = icmp eq i32 %178, 0
  br i1 %tobool425.not, label %if.then426, label %if.end545

if.then426:                                       ; preds = %if.end424
  br i1 %tobool96.not, label %if.end478, label %land.rhs

land.rhs:                                         ; preds = %if.then426
  %add.ptr428 = getelementptr %struct.held_lock, ptr %add.ptr186, i32 -1
  %class_idx1.i = getelementptr inbounds %struct.held_lock, ptr %add.ptr428, i32 0, i32 6
  %179 = ptrtoint ptr %class_idx1.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %bf.load.i738 = load i32, ptr %class_idx1.i, align 8
  %bf.lshr.i739 = lshr i32 %bf.load.i738, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i = lshr i32 %bf.load.i738, 24
  %arrayidx.i.i740 = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i
  %180 = ptrtoint ptr %arrayidx.i.i740 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load volatile i32, ptr %arrayidx.i.i740, align 4
  %and.i.i741 = and i32 %bf.lshr.i739, 31
  %182 = shl nuw i32 1, %and.i.i741
  %183 = and i32 %182, %181
  %tobool.not.i742 = icmp eq i32 %183, 0
  br i1 %tobool.not.i742, label %if.then.i744, label %if.end33.i

if.then.i744:                                     ; preds = %land.rhs
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %184 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i743 = icmp eq i32 %184, 0
  br i1 %tobool2.not.i743, label %do.end.i746, label %hlock_class.exit

do.end.i746:                                      ; preds = %if.then.i744
  %call4.i745 = tail call i32 @debug_locks_off() #28
  %tobool5.not.i = icmp eq i32 %call4.i745, 0
  br i1 %tobool5.not.i, label %hlock_class.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.end.i746
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %185 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i747 = icmp eq i32 %185, 0
  br i1 %tobool6.not.i747, label %do.end15.i, label %hlock_class.exit

do.end15.i:                                       ; preds = %land.lhs.true.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit

if.end33.i:                                       ; preds = %land.rhs
  %add.ptr.i748 = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i739
  br label %hlock_class.exit

hlock_class.exit:                                 ; preds = %if.end33.i, %do.end15.i, %land.lhs.true.i, %do.end.i746, %if.then.i744
  %retval.0.i749 = phi ptr [ %add.ptr.i748, %if.end33.i ], [ null, %do.end15.i ], [ null, %land.lhs.true.i ], [ null, %do.end.i746 ], [ null, %if.then.i744 ]
  %key430 = getelementptr inbounds %struct.lock_class, ptr %retval.0.i749, i32 0, i32 4
  %186 = ptrtoint ptr %key430 to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %key430, align 4
  %tobool431.not = icmp eq ptr %187, null
  br i1 %tobool431.not, label %land.rhs440, label %if.end478

land.rhs440:                                      ; preds = %hlock_class.exit
  %.b691 = load i1, ptr @__lock_acquire.__already_done, align 1
  br i1 %.b691, label %if.end478, label %if.then451, !prof !1500

if.then451:                                       ; preds = %land.rhs440
  store i1 true, ptr @__lock_acquire.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5023, i32 noundef 9, ptr noundef null) #28
  br label %if.end478

if.end478:                                        ; preds = %if.then451, %land.rhs440, %hlock_class.exit, %if.then426
  %188 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %188)
  %bf.load.i751 = load i32, ptr %class_idx243, align 8
  %bf.lshr.i752 = lshr i32 %bf.load.i751, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i753 = lshr i32 %bf.load.i751, 24
  %arrayidx.i.i754 = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i753
  %189 = ptrtoint ptr %arrayidx.i.i754 to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load volatile i32, ptr %arrayidx.i.i754, align 4
  %and.i.i755 = and i32 %bf.lshr.i752, 31
  %191 = shl nuw i32 1, %and.i.i755
  %192 = and i32 %191, %190
  %tobool.not.i756 = icmp eq i32 %192, 0
  br i1 %tobool.not.i756, label %if.then.i758, label %if.end33.i766

if.then.i758:                                     ; preds = %if.end478
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %193 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i757 = icmp eq i32 %193, 0
  br i1 %tobool2.not.i757, label %do.end.i761, label %hlock_class.exit768

do.end.i761:                                      ; preds = %if.then.i758
  %call4.i759 = tail call i32 @debug_locks_off() #28
  %tobool5.not.i760 = icmp eq i32 %call4.i759, 0
  br i1 %tobool5.not.i760, label %hlock_class.exit768, label %land.lhs.true.i763

land.lhs.true.i763:                               ; preds = %do.end.i761
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %194 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i762 = icmp eq i32 %194, 0
  br i1 %tobool6.not.i762, label %do.end15.i764, label %hlock_class.exit768

do.end15.i764:                                    ; preds = %land.lhs.true.i763
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit768

if.end33.i766:                                    ; preds = %if.end478
  %add.ptr.i765 = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i752
  br label %hlock_class.exit768

hlock_class.exit768:                              ; preds = %if.end33.i766, %do.end15.i764, %land.lhs.true.i763, %do.end.i761, %if.then.i758
  %retval.0.i767 = phi ptr [ %add.ptr.i765, %if.end33.i766 ], [ null, %do.end15.i764 ], [ null, %land.lhs.true.i763 ], [ null, %do.end.i761 ], [ null, %if.then.i758 ]
  %key488 = getelementptr inbounds %struct.lock_class, ptr %retval.0.i767, i32 0, i32 4
  %195 = ptrtoint ptr %key488 to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %key488, align 4
  %tobool489.not = icmp eq ptr %196, null
  br i1 %tobool489.not, label %land.rhs499, label %if.end545

land.rhs499:                                      ; preds = %hlock_class.exit768
  %.b689690 = load i1, ptr @__lock_acquire.__already_done.431, align 1
  br i1 %.b689690, label %if.end545, label %if.then510, !prof !1500

if.then510:                                       ; preds = %land.rhs499
  store i1 true, ptr @__lock_acquire.__already_done.431, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5024, i32 noundef 9, ptr noundef null) #28
  br label %if.end545

if.end545:                                        ; preds = %if.then510, %land.rhs499, %hlock_class.exit768, %if.end424
  %197 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %197)
  %bf.load.i770 = load i32, ptr %class_idx243, align 8
  %198 = and i32 %bf.load.i770, 73728
  %.not.i = icmp eq i32 %198, 8192
  br i1 %.not.i, label %land.lhs.true5.i, label %if.else.i790

land.lhs.true5.i:                                 ; preds = %if.end545
  %bf.lshr.i.i.i = lshr i32 %bf.load.i770, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i.i.i = lshr i32 %bf.load.i770, 24
  %arrayidx.i.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i.i.i
  %199 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load volatile i32, ptr %arrayidx.i.i.i.i, align 4
  %and.i.i.i.i771 = and i32 %bf.lshr.i.i.i, 31
  %201 = shl nuw i32 1, %and.i.i.i.i771
  %202 = and i32 %200, %201
  %tobool.not.i.i.i772 = icmp eq i32 %202, 0
  br i1 %tobool.not.i.i.i772, label %if.then.i.i.i773, label %hlock_class.exit.i.i

if.then.i.i.i773:                                 ; preds = %land.lhs.true5.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %203 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i.i.i = icmp eq i32 %203, 0
  br i1 %tobool2.not.i.i.i, label %do.end.i.i.i, label %hlock_class.exit.i.i

do.end.i.i.i:                                     ; preds = %if.then.i.i.i773
  %call4.i.i.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i.i.i = icmp eq i32 %call4.i.i.i, 0
  br i1 %tobool5.not.i.i.i, label %hlock_class.exit.i.i, label %land.lhs.true.i.i.i

land.lhs.true.i.i.i:                              ; preds = %do.end.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %204 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i.i.i = icmp eq i32 %204, 0
  br i1 %tobool6.not.i.i.i, label %do.end15.i.i.i, label %hlock_class.exit.i.i

do.end15.i.i.i:                                   ; preds = %land.lhs.true.i.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit.i.i

hlock_class.exit.i.i:                             ; preds = %do.end15.i.i.i, %land.lhs.true.i.i.i, %do.end.i.i.i, %if.then.i.i.i773, %land.lhs.true5.i
  %mul.i.i.i.i.i = mul i32 %add21.i, 1640531527
  %shr.i.i.i.i = lshr i32 %mul.i.i.i.i.i, 17
  %add.ptr.i49.i.i = getelementptr %struct.hlist_head, ptr @chainhash_table, i32 %shr.i.i.i.i
  %call1.i.i.i = tail call i32 @rcu_read_lock_any_held() #28
  %tobool.not.i50.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool.not.i50.i.i, label %land.lhs.true.i51.i.i, label %do.end.i53.i.i

land.lhs.true.i51.i.i:                            ; preds = %hlock_class.exit.i.i
  %call2.i.i.i = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool3.not.i.i.i = icmp eq i32 %call2.i.i.i, 0
  br i1 %tobool3.not.i.i.i, label %do.end.i53.i.i, label %land.lhs.true4.i.i.i

land.lhs.true4.i.i.i:                             ; preds = %land.lhs.true.i51.i.i
  %.b127.i.i.i = load i1, ptr @lookup_chain_cache.__warned, align 1
  br i1 %.b127.i.i.i, label %do.end.i53.i.i, label %if.then.i52.i.i

if.then.i52.i.i:                                  ; preds = %land.lhs.true4.i.i.i
  store i1 true, ptr @lookup_chain_cache.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 3694, ptr noundef nonnull @.str.1) #28
  br label %do.end.i53.i.i

do.end.i53.i.i:                                   ; preds = %if.then.i52.i.i, %land.lhs.true4.i.i.i, %land.lhs.true.i51.i.i, %hlock_class.exit.i.i
  %205 = ptrtoint ptr %add.ptr.i49.i.i to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load volatile ptr, ptr %add.ptr.i49.i.i, align 4
  %tobool11.not.i.i.i774 = icmp eq ptr %206, null
  %add.ptr13.i.i.i = getelementptr i8, ptr %206, i32 -4
  %tobool14.not134137.i.i.i = icmp eq ptr %add.ptr13.i.i.i, null
  %tobool14.not134.i.i.i = or i1 %tobool11.not.i.i.i774, %tobool14.not134137.i.i.i
  br i1 %tobool14.not134.i.i.i, label %if.end10.i.i, label %do.end17.i.i.i

do.end17.i.i.i:                                   ; preds = %for.inc.i.i.i, %do.end.i53.i.i
  %chain.0135.i.i.i = phi ptr [ %add.ptr111.i.i.i, %for.inc.i.i.i ], [ %add.ptr13.i.i.i, %do.end.i53.i.i ]
  %chain_key19.i.i.i = getelementptr inbounds %struct.lock_chain, ptr %chain.0135.i.i.i, i32 0, i32 2
  %207 = ptrtoint ptr %chain_key19.i.i.i to i32
  call void @__asan_load8_noabort(i32 %207)
  %208 = load volatile i64, ptr %chain_key19.i.i.i, align 8
  %cmp.i.i.i = icmp eq i64 %208, %or.i734
  br i1 %cmp.i.i.i, label %if.then21.i.i.i, label %for.inc.i.i.i

if.then21.i.i.i:                                  ; preds = %do.end17.i.i.i
  %209 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i54.i.i = and i32 %209, 128
  %tobool37.not.i.i.i = icmp eq i32 %and.i.i54.i.i, 0
  br i1 %tobool37.not.i.i.i, label %land.rhs.i.i.i, label %lookup_chain_cache.exit.i.i

land.rhs.i.i.i:                                   ; preds = %if.then21.i.i.i
  %.b125126.i.i.i = load i1, ptr @lookup_chain_cache.__already_done, align 1
  br i1 %.b125126.i.i.i, label %lookup_chain_cache.exit.i.i, label %if.then47.i.i.i, !prof !1500

if.then47.i.i.i:                                  ; preds = %land.rhs.i.i.i
  store i1 true, ptr @lookup_chain_cache.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3696, i32 noundef 9, ptr noundef null) #28
  br label %lookup_chain_cache.exit.i.i

for.inc.i.i.i:                                    ; preds = %do.end17.i.i.i
  %entry104.i.i.i = getelementptr inbounds %struct.lock_chain, ptr %chain.0135.i.i.i, i32 0, i32 1
  %210 = ptrtoint ptr %entry104.i.i.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load volatile ptr, ptr %entry104.i.i.i, align 4
  %tobool107.not.i.i.i = icmp eq ptr %211, null
  %add.ptr111.i.i.i = getelementptr i8, ptr %211, i32 -4
  %tobool14.not139.i.i.i = icmp eq ptr %add.ptr111.i.i.i, null
  %tobool14.not.i.i.i = or i1 %tobool107.not.i.i.i, %tobool14.not139.i.i.i
  br i1 %tobool14.not.i.i.i, label %if.end10.i.i, label %do.end17.i.i.i

lookup_chain_cache.exit.i.i:                      ; preds = %if.then47.i.i.i, %land.rhs.i.i.i, %if.then21.i.i.i
  %212 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i129.i.i.i = and i32 %212, -16384
  %213 = inttoptr i32 %and.i129.i.i.i to ptr
  %cpu.i.i.i775 = getelementptr inbounds %struct.thread_info, ptr %213, i32 0, i32 3
  %214 = ptrtoint ptr %cpu.i.i.i775 to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load i32, ptr %cpu.i.i.i775, align 4
  %arrayidx.i.i.i776 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %215
  %216 = ptrtoint ptr %arrayidx.i.i.i776 to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load i32, ptr %arrayidx.i.i.i776, align 4
  %add.i.i.i777 = add i32 %217, ptrtoint (ptr @lockdep_stats to i32)
  %218 = inttoptr i32 %add.i.i.i777 to ptr
  %219 = ptrtoint ptr %218 to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load i32, ptr %218, align 4
  %add93.i.i.i = add i32 %220, 1
  store i32 %add93.i.i.i, ptr %218, align 4
  br label %cache_hit.i.i

cache_hit.i.i:                                    ; preds = %if.then28.i.i, %lookup_chain_cache.exit.i.i
  %chain.0.i.i = phi ptr [ %chain.0135.i.i.i, %lookup_chain_cache.exit.i.i ], [ %chain.0135.i82.i.i, %if.then28.i.i ]
  %221 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load i32, ptr %lockdep_depth, align 8
  %223 = add i32 %222, -1
  %smin.i.i.i.i = tail call i32 @llvm.smin.i32(i32 %223, i32 -1) #28
  %224 = add nsw i32 %smin.i.i.i.i, 1
  br label %for.cond.i.i.i.i

for.cond.i.i.i.i:                                 ; preds = %for.body.i.i.i.i, %cache_hit.i.i
  %i.0.in.i.i.i.i = phi i32 [ %222, %cache_hit.i.i ], [ %i.0.i.i.i.i, %for.body.i.i.i.i ]
  %i.0.i.i.i.i = add i32 %i.0.in.i.i.i.i, -1
  %cmp.i.i.i.i = icmp sgt i32 %i.0.i.i.i.i, -1
  br i1 %cmp.i.i.i.i, label %for.body.i.i.i.i, label %get_first_held_lock.exit.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.cond.i.i.i.i
  %irq_context.i.i.i.i = getelementptr %struct.held_lock, ptr %held_locks184, i32 %i.0.i.i.i.i, i32 6
  %225 = ptrtoint ptr %irq_context.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %225)
  %bf.load.i.i.i.i = load i32, ptr %irq_context.i.i.i.i, align 8
  %226 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %226)
  %bf.load2.i.i.i.i = load i32, ptr %class_idx243, align 8
  %bf.lshr10.i.i.i.i = xor i32 %bf.load2.i.i.i.i, %bf.load.i.i.i.i
  %227 = and i32 %bf.lshr10.i.i.i.i, 393216
  %cmp5.not.i.i.i.i = icmp eq i32 %227, 0
  br i1 %cmp5.not.i.i.i.i, label %for.cond.i.i.i.i, label %get_first_held_lock.exit.i.i.i

get_first_held_lock.exit.i.i.i:                   ; preds = %for.body.i.i.i.i, %for.cond.i.i.i.i
  %i.0.in.lcssa.i.i.i.i = phi i32 [ %i.0.in.i.i.i.i, %for.body.i.i.i.i ], [ %224, %for.cond.i.i.i.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %228 = load i32, ptr @oops_in_progress, align 4
  %tobool.not.i55.i.i = icmp eq i32 %228, 0
  br i1 %tobool.not.i55.i.i, label %land.lhs.true.i58.i.i, label %if.end40.i.i.i

land.lhs.true.i58.i.i:                            ; preds = %get_first_held_lock.exit.i.i.i
  %229 = ptrtoint ptr %chain.0.i.i to i32
  call void @__asan_load4_noabort(i32 %229)
  %bf.load.i56.i.i = load i32, ptr %chain.0.i.i, align 8
  %bf.lshr.i57.i.i = lshr i32 %bf.load.i56.i.i, 24
  %bf.clear.i.i.i = and i32 %bf.lshr.i57.i.i, 63
  %sub.neg.i.i.i = add i32 %222, 1
  %sub1.i.i.i = sub i32 %sub.neg.i.i.i, %i.0.in.lcssa.i.i.i.i
  %cmp.not.i.i.i = icmp eq i32 %bf.clear.i.i.i, %sub1.i.i.i
  br i1 %cmp.not.i.i.i, label %if.end40.i.i.i, label %do.end.i61.i.i, !prof !1500

do.end.i61.i.i:                                   ; preds = %land.lhs.true.i58.i.i
  %call4.i59.i.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i60.i.i = icmp eq i32 %call4.i59.i.i, 0
  br i1 %tobool5.not.i60.i.i, label %check_no_collision.exit.i.i, label %land.lhs.true6.i.i.i

land.lhs.true6.i.i.i:                             ; preds = %do.end.i61.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %230 = load i32, ptr @debug_locks_silent, align 4
  %tobool7.not.i.i.i = icmp eq i32 %230, 0
  br i1 %tobool7.not.i.i.i, label %do.end20.i.i.i, label %check_no_collision.exit.i.i

do.end20.i.i.i:                                   ; preds = %land.lhs.true6.i.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3576, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.485) #28
  br label %check_no_collision.exit.i.i

if.end40.i.i.i:                                   ; preds = %land.lhs.true.i58.i.i, %get_first_held_lock.exit.i.i.i
  %231 = ptrtoint ptr %chain.0.i.i to i32
  call void @__asan_load4_noabort(i32 %231)
  %bf.load41.i.i.i = load i32, ptr %chain.0.i.i, align 8
  %bf.lshr42.i.i.i = lshr i32 %bf.load41.i.i.i, 24
  %bf.clear43.i.i.i = and i32 %bf.lshr42.i.i.i, 63
  %cmp45128.i.i.i = icmp ugt i32 %bf.clear43.i.i.i, 1
  br i1 %cmp45128.i.i.i, label %for.body.lr.ph.i.i.i, label %if.else.i790

for.body.lr.ph.i.i.i:                             ; preds = %if.end40.i.i.i
  %bf.clear51.i.i.i = and i32 %bf.load41.i.i.i, 16777215
  %232 = add nsw i32 %bf.clear43.i.i.i, -2
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.inc.i63.i.i, %for.body.lr.ph.i.i.i
  %i.0130.i.i.i = phi i32 [ %i.0.in.lcssa.i.i.i.i, %for.body.lr.ph.i.i.i ], [ %inc106.i.i.i, %for.inc.i63.i.i ]
  %j.0129.i.i.i = phi i32 [ 0, %for.body.lr.ph.i.i.i ], [ %inc.i.i.i, %for.inc.i63.i.i ]
  br i1 %tobool.not.i55.i.i, label %land.lhs.true49.i.i.i, label %for.inc.i63.i.i

land.lhs.true49.i.i.i:                            ; preds = %for.body.i.i.i
  %class_idx.i.i.i.i = getelementptr %struct.task_struct, ptr %3, i32 0, i32 144, i32 %i.0130.i.i.i, i32 6
  %233 = ptrtoint ptr %class_idx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %233)
  %bf.load.i127.i.i.i = load i32, ptr %class_idx.i.i.i.i, align 8
  %234 = lshr i32 %bf.load.i127.i.i.i, 1
  %shl.i.i.i.i = and i32 %234, 24576
  %bf.lshr.i.i.i.i = lshr i32 %bf.load.i127.i.i.i, 19
  %or.i.i.i.i = or i32 %shl.i.i.i.i, %bf.lshr.i.i.i.i
  %conv.i.i.i.i = trunc i32 %or.i.i.i.i to i16
  %add.i62.i.i = add nuw nsw i32 %j.0129.i.i.i, %bf.clear51.i.i.i
  %arrayidx52.i.i.i = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %add.i62.i.i
  %235 = ptrtoint ptr %arrayidx52.i.i.i to i32
  call void @__asan_load2_noabort(i32 %235)
  %236 = load i16, ptr %arrayidx52.i.i.i, align 2
  %cmp54.not.i.i.i = icmp eq i16 %236, %conv.i.i.i.i
  br i1 %cmp54.not.i.i.i, label %for.inc.i63.i.i, label %do.end65.i.i.i, !prof !1500

do.end65.i.i.i:                                   ; preds = %land.lhs.true49.i.i.i
  %call66.i.i.i = tail call i32 @debug_locks_off() #28
  %tobool67.not.i.i.i = icmp eq i32 %call66.i.i.i, 0
  br i1 %tobool67.not.i.i.i, label %check_no_collision.exit.i.i, label %land.lhs.true68.i.i.i

land.lhs.true68.i.i.i:                            ; preds = %do.end65.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %237 = load i32, ptr @debug_locks_silent, align 4
  %tobool69.not.i.i.i = icmp eq i32 %237, 0
  br i1 %tobool69.not.i.i.i, label %do.end83.i.i.i, label %check_no_collision.exit.i.i

do.end83.i.i.i:                                   ; preds = %land.lhs.true68.i.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3584, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.486) #28
  br label %check_no_collision.exit.i.i

for.inc.i63.i.i:                                  ; preds = %land.lhs.true49.i.i.i, %for.body.i.i.i
  %inc.i.i.i = add nuw nsw i32 %j.0129.i.i.i, 1
  %inc106.i.i.i = add i32 %i.0130.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i32 %j.0129.i.i.i, %232
  br i1 %exitcond.not.i.i.i, label %if.else.i790, label %for.body.i.i.i

check_no_collision.exit.i.i:                      ; preds = %do.end83.i.i.i, %land.lhs.true68.i.i.i, %do.end65.i.i.i, %do.end20.i.i.i, %land.lhs.true6.i.i.i, %do.end.i61.i.i
  tail call fastcc void @print_collision(ptr noundef %3, ptr noundef %add.ptr186, ptr noundef %chain.0.i.i) #28
  br label %if.else.i790

if.end10.i.i:                                     ; preds = %for.inc.i.i.i, %do.end.i53.i.i
  %call22.i.i = tail call fastcc i32 @graph_lock() #28
  %tobool23.not.i.i = icmp eq i32 %call22.i.i, 0
  br i1 %tobool23.not.i.i, label %if.else.i790, label %if.end25.i.i

if.end25.i.i:                                     ; preds = %if.end10.i.i
  %call1.i69.i.i = tail call i32 @rcu_read_lock_any_held() #28
  %tobool.not.i70.i.i = icmp eq i32 %call1.i69.i.i, 0
  br i1 %tobool.not.i70.i.i, label %land.lhs.true.i73.i.i, label %do.end.i81.i.i

land.lhs.true.i73.i.i:                            ; preds = %if.end25.i.i
  %call2.i71.i.i = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool3.not.i72.i.i = icmp eq i32 %call2.i71.i.i, 0
  br i1 %tobool3.not.i72.i.i, label %do.end.i81.i.i, label %land.lhs.true4.i75.i.i

land.lhs.true4.i75.i.i:                           ; preds = %land.lhs.true.i73.i.i
  %.b127.i74.i.i = load i1, ptr @lookup_chain_cache.__warned, align 1
  br i1 %.b127.i74.i.i, label %do.end.i81.i.i, label %if.then.i76.i.i

if.then.i76.i.i:                                  ; preds = %land.lhs.true4.i75.i.i
  store i1 true, ptr @lookup_chain_cache.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 3694, ptr noundef nonnull @.str.1) #28
  br label %do.end.i81.i.i

do.end.i81.i.i:                                   ; preds = %if.then.i76.i.i, %land.lhs.true4.i75.i.i, %land.lhs.true.i73.i.i, %if.end25.i.i
  %238 = ptrtoint ptr %add.ptr.i49.i.i to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load volatile ptr, ptr %add.ptr.i49.i.i, align 4
  %tobool11.not.i77.i.i = icmp eq ptr %239, null
  %add.ptr13.i78.i.i = getelementptr i8, ptr %239, i32 -4
  %tobool14.not134137.i79.i.i = icmp eq ptr %add.ptr13.i78.i.i, null
  %tobool14.not134.i80.i.i = or i1 %tobool11.not.i77.i.i, %tobool14.not134137.i79.i.i
  br i1 %tobool14.not134.i80.i.i, label %if.end29.i.i, label %do.end17.i85.i.i

do.end17.i85.i.i:                                 ; preds = %for.inc.i103.i.i, %do.end.i81.i.i
  %chain.0135.i82.i.i = phi ptr [ %add.ptr111.i100.i.i, %for.inc.i103.i.i ], [ %add.ptr13.i78.i.i, %do.end.i81.i.i ]
  %chain_key19.i83.i.i = getelementptr inbounds %struct.lock_chain, ptr %chain.0135.i82.i.i, i32 0, i32 2
  %240 = ptrtoint ptr %chain_key19.i83.i.i to i32
  call void @__asan_load8_noabort(i32 %240)
  %241 = load volatile i64, ptr %chain_key19.i83.i.i, align 8
  %cmp.i84.i.i = icmp eq i64 %241, %or.i734
  br i1 %cmp.i84.i.i, label %if.then21.i88.i.i, label %for.inc.i103.i.i

if.then21.i88.i.i:                                ; preds = %do.end17.i85.i.i
  %242 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i86.i.i = and i32 %242, 128
  %tobool37.not.i87.i.i = icmp eq i32 %and.i.i86.i.i, 0
  br i1 %tobool37.not.i87.i.i, label %land.rhs.i90.i.i, label %if.then28.i.i

land.rhs.i90.i.i:                                 ; preds = %if.then21.i88.i.i
  %.b125126.i89.i.i = load i1, ptr @lookup_chain_cache.__already_done, align 1
  br i1 %.b125126.i89.i.i, label %if.then28.i.i, label %if.then47.i91.i.i, !prof !1500

if.then47.i91.i.i:                                ; preds = %land.rhs.i90.i.i
  store i1 true, ptr @lookup_chain_cache.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3696, i32 noundef 9, ptr noundef null) #28
  br label %if.then28.i.i

for.inc.i103.i.i:                                 ; preds = %do.end17.i85.i.i
  %entry104.i98.i.i = getelementptr inbounds %struct.lock_chain, ptr %chain.0135.i82.i.i, i32 0, i32 1
  %243 = ptrtoint ptr %entry104.i98.i.i to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load volatile ptr, ptr %entry104.i98.i.i, align 4
  %tobool107.not.i99.i.i = icmp eq ptr %244, null
  %add.ptr111.i100.i.i = getelementptr i8, ptr %244, i32 -4
  %tobool14.not139.i101.i.i = icmp eq ptr %add.ptr111.i100.i.i, null
  %tobool14.not.i102.i.i = or i1 %tobool107.not.i99.i.i, %tobool14.not139.i101.i.i
  br i1 %tobool14.not.i102.i.i, label %if.end29.i.i, label %do.end17.i85.i.i

if.then28.i.i:                                    ; preds = %if.then47.i91.i.i, %land.rhs.i90.i.i, %if.then21.i88.i.i
  %245 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i129.i92.i.i = and i32 %245, -16384
  %246 = inttoptr i32 %and.i129.i92.i.i to ptr
  %cpu.i93.i.i = getelementptr inbounds %struct.thread_info, ptr %246, i32 0, i32 3
  %247 = ptrtoint ptr %cpu.i93.i.i to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load i32, ptr %cpu.i93.i.i, align 4
  %arrayidx.i94.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %248
  %249 = ptrtoint ptr %arrayidx.i94.i.i to i32
  call void @__asan_load4_noabort(i32 %249)
  %250 = load i32, ptr %arrayidx.i94.i.i, align 4
  %add.i95.i.i = add i32 %250, ptrtoint (ptr @lockdep_stats to i32)
  %251 = inttoptr i32 %add.i95.i.i to ptr
  %252 = ptrtoint ptr %251 to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load i32, ptr %251, align 4
  %add93.i96.i.i = add i32 %253, 1
  store i32 %add93.i96.i.i, ptr %251, align 4
  tail call fastcc void @lockdep_unlock() #28
  br label %cache_hit.i.i

if.end29.i.i:                                     ; preds = %for.inc.i103.i.i, %do.end.i81.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %254 = load i32, ptr @oops_in_progress, align 4
  %tobool.not.i.i.i.i = icmp eq i32 %254, 0
  br i1 %tobool.not.i.i.i.i, label %land.lhs.true.i.i.i.i, label %if.end.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %if.end29.i.i
  %255 = load ptr, ptr @__owner, align 4
  %256 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i.i = and i32 %256, -16384
  %257 = inttoptr i32 %and.i.i.i.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %257, i32 0, i32 2
  %258 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load ptr, ptr %task.i.i.i.i, align 8
  %cmp.not.i.i.i.i = icmp eq ptr %255, %259
  br i1 %cmp.not.i.i.i.i, label %if.end.i.i.i, label %do.end.i.i.i.i, !prof !1500

do.end.i.i.i.i:                                   ; preds = %land.lhs.true.i.i.i.i
  %call3.i.i.i.i = tail call i32 @debug_locks_off() #28
  %tobool4.not.i.i.i.i = icmp eq i32 %call3.i.i.i.i, 0
  br i1 %tobool4.not.i.i.i.i, label %if.else.i790, label %land.lhs.true5.i.i.i.i

land.lhs.true5.i.i.i.i:                           ; preds = %do.end.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %260 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i.i.i.i = icmp eq i32 %260, 0
  br i1 %tobool6.not.i.i.i.i, label %do.end19.i.i.i.i, label %if.else.i790

do.end19.i.i.i.i:                                 ; preds = %land.lhs.true5.i.i.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 131, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.147) #28
  br label %if.else.i790

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i.i, %if.end29.i.i
  %call.i.i.i.i = tail call i32 @_find_first_zero_bit_be(ptr noundef nonnull @lock_chains_in_use, i32 noundef 65536) #28
  %cmp.i.i110.i.i = icmp ugt i32 %call.i.i.i.i, 65535
  br i1 %cmp.i.i110.i.i, label %if.then3.i.i.i, label %alloc_lock_chain.exit.i.i.i, !prof !1501

alloc_lock_chain.exit.i.i.i:                      ; preds = %if.end.i.i.i
  %rem.i.i.i.i.i = and i32 %call.i.i.i.i, 31
  %shl.i.i.i.i.i = shl nuw i32 1, %rem.i.i.i.i.i
  %div2.i.i.i.i.i = lshr i32 %call.i.i.i.i, 5
  %add.ptr.i.i.i.i.i = getelementptr i32, ptr @lock_chains_in_use, i32 %div2.i.i.i.i.i
  %261 = ptrtoint ptr %add.ptr.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load i32, ptr %add.ptr.i.i.i.i.i, align 4
  %or.i.i.i.i.i = or i32 %262, %shl.i.i.i.i.i
  store i32 %or.i.i.i.i.i, ptr %add.ptr.i.i.i.i.i, align 4
  %add.ptr.i.i.i.i = getelementptr %struct.lock_chain, ptr @lock_chains, i32 %call.i.i.i.i
  %tobool.not.i111.i.i = icmp eq ptr %add.ptr.i.i.i.i, null
  br i1 %tobool.not.i111.i.i, label %if.then3.i.i.i, label %if.end8.i.i.i

if.then3.i.i.i:                                   ; preds = %alloc_lock_chain.exit.i.i.i, %if.end.i.i.i
  %call.i166.i.i.i = tail call i32 @debug_locks_off() #28
  tail call fastcc void @lockdep_unlock() #28
  %tobool5.not.i112.i.i = icmp eq i32 %call.i166.i.i.i, 0
  br i1 %tobool5.not.i112.i.i, label %if.else.i790, label %if.end7.i.i.i

if.end7.i.i.i:                                    ; preds = %if.then3.i.i.i
  tail call fastcc void @print_lockdep_off(ptr noundef nonnull @.str.519) #28
  tail call void @dump_stack() #32
  br label %if.else.i790

if.end8.i.i.i:                                    ; preds = %alloc_lock_chain.exit.i.i.i
  %chain_key9.i.i.i = getelementptr %struct.lock_chain, ptr @lock_chains, i32 %call.i.i.i.i, i32 2
  %263 = ptrtoint ptr %chain_key9.i.i.i to i32
  call void @__asan_store8_noabort(i32 %263)
  store i64 %or.i734, ptr %chain_key9.i.i.i, align 8
  %264 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %264)
  %bf.load.i113.i.i = load i32, ptr %class_idx243, align 8
  %265 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %265)
  %bf.load10.i.i.i = load i32, ptr %add.ptr.i.i.i.i, align 8
  %266 = shl i32 %bf.load.i113.i.i, 13
  %bf.shl.i.i.i = and i32 %266, -1073741824
  %bf.clear11.i.i.i = and i32 %bf.load10.i.i.i, 1073741823
  %bf.set.i.i.i = or i32 %bf.clear11.i.i.i, %bf.shl.i.i.i
  store i32 %bf.set.i.i.i, ptr %add.ptr.i.i.i.i, align 8
  %267 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load i32, ptr %lockdep_depth, align 8
  %269 = add i32 %268, -1
  %smin.i.i116.i.i = tail call i32 @llvm.smin.i32(i32 %269, i32 -1) #28
  %270 = add nsw i32 %smin.i.i116.i.i, 1
  br label %for.cond.i.i119.i.i

for.cond.i.i119.i.i:                              ; preds = %for.body.i.i125.i.i, %if.end8.i.i.i
  %i.0.in.i.i117.i.i = phi i32 [ %268, %if.end8.i.i.i ], [ %i.0.i.i118.i.i, %for.body.i.i125.i.i ]
  %i.0.i.i118.i.i = add i32 %i.0.in.i.i117.i.i, -1
  %cmp.i167.i.i.i = icmp sgt i32 %i.0.i.i118.i.i, -1
  br i1 %cmp.i167.i.i.i, label %for.body.i.i125.i.i, label %get_first_held_lock.exit.i128.i.i

for.body.i.i125.i.i:                              ; preds = %for.cond.i.i119.i.i
  %irq_context.i.i120.i.i = getelementptr %struct.held_lock, ptr %held_locks184, i32 %i.0.i.i118.i.i, i32 6
  %271 = ptrtoint ptr %irq_context.i.i120.i.i to i32
  call void @__asan_load4_noabort(i32 %271)
  %bf.load.i.i121.i.i = load i32, ptr %irq_context.i.i120.i.i, align 8
  %272 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %272)
  %bf.load2.i.i122.i.i = load i32, ptr %class_idx243, align 8
  %bf.lshr10.i.i123.i.i = xor i32 %bf.load2.i.i122.i.i, %bf.load.i.i121.i.i
  %273 = and i32 %bf.lshr10.i.i123.i.i, 393216
  %cmp5.not.i.i124.i.i = icmp eq i32 %273, 0
  br i1 %cmp5.not.i.i124.i.i, label %for.cond.i.i119.i.i, label %get_first_held_lock.exit.i128.i.i

get_first_held_lock.exit.i128.i.i:                ; preds = %for.body.i.i125.i.i, %for.cond.i.i119.i.i
  %i.0.in.lcssa.i.i126.i.i = phi i32 [ %i.0.in.i.i117.i.i, %for.body.i.i125.i.i ], [ %270, %for.cond.i.i119.i.i ]
  %add.i127.i.i = add i32 %268, 1
  %sub.i.i.i = sub i32 %add.i127.i.i, %i.0.in.lcssa.i.i126.i.i
  %bf.value14.i.i.i = shl i32 %sub.i.i.i, 24
  %bf.shl15.i.i.i = and i32 %bf.value14.i.i.i, 1056964608
  %bf.clear16.i.i.i = and i32 %bf.set.i.i.i, -1056964609
  %bf.set17.i.i.i = or i32 %bf.shl15.i.i.i, %bf.clear16.i.i.i
  %274 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %274)
  store i32 %bf.set17.i.i.i, ptr %add.ptr.i.i.i.i, align 8
  %bf.clear26.i.i.i = and i32 %sub.i.i.i, 63
  tail call fastcc void @init_data_structures_once() #28
  %275 = load i32, ptr @nr_free_chain_hlocks, align 4
  %cmp.i168.i.i.i = icmp ult i32 %275, %bf.clear26.i.i.i
  br i1 %cmp.i168.i.i.i, label %if.then29.i.i.i, label %if.end.i170.i.i.i

if.end.i170.i.i.i:                                ; preds = %get_first_held_lock.exit.i128.i.i
  %276 = tail call i32 @llvm.smax.i32(i32 %bf.clear26.i.i.i, i32 2) #28
  %cmp.i.i.i.i.i = icmp ugt i32 %276, 16
  %sub.i.i.i.i.i = add nsw i32 %276, -1
  %retval.0.i.i.i.i.i = select i1 %cmp.i.i.i.i.i, i32 0, i32 %sub.i.i.i.i.i
  %arrayidx.i.i129.i.i = getelementptr [16 x i32], ptr @chain_block_buckets, i32 0, i32 %retval.0.i.i.i.i.i
  %277 = ptrtoint ptr %arrayidx.i.i129.i.i to i32
  call void @__asan_load4_noabort(i32 %277)
  %278 = load i32, ptr %arrayidx.i.i129.i.i, align 4
  %tobool.not.i169.i.i.i = icmp eq i32 %retval.0.i.i.i.i.i, 0
  br i1 %tobool.not.i169.i.i.i, label %if.end7.i.i.i.i, label %if.then2.i.i.i.i

if.then2.i.i.i.i:                                 ; preds = %if.end.i170.i.i.i
  %cmp3.i.i.i.i = icmp sgt i32 %278, -1
  br i1 %cmp3.i.i.i.i, label %if.then4.i.i.i.i, label %if.end6.i.i.i.i

if.then4.i.i.i.i:                                 ; preds = %if.then2.i.i.i.i
  %arrayidx.i.i.i.i.i = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %278
  %279 = ptrtoint ptr %arrayidx.i.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %279)
  %280 = load i16, ptr %arrayidx.i.i.i.i.i, align 2
  %conv.i.i.i.i.i = zext i16 %280 to i32
  %and.i.i171.i.i.i = and i32 %conv.i.i.i.i.i, 32768
  %tobool.not.i.i.i.i.i = icmp eq i32 %and.i.i171.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %land.rhs.i.i.i.i.i, label %if.end30.i.i.i.i.i

land.rhs.i.i.i.i.i:                               ; preds = %if.then4.i.i.i.i
  %.b52.i.i.i.i.i = load i1, ptr @chain_block_next.__already_done, align 1
  br i1 %.b52.i.i.i.i.i, label %if.end30.i.i.i.i.i, label %if.then.i.i.i.i.i, !prof !1500

if.then.i.i.i.i.i:                                ; preds = %land.rhs.i.i.i.i.i
  store i1 true, ptr @chain_block_next.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3282, i32 noundef 9, ptr noundef null) #28
  br label %if.end30.i.i.i.i.i

if.end30.i.i.i.i.i:                               ; preds = %if.then.i.i.i.i.i, %land.rhs.i.i.i.i.i, %if.then4.i.i.i.i
  %cmp.i63.i.i.i.i = icmp eq i16 %280, -1
  br i1 %cmp.i63.i.i.i.i, label %del_chain_block.exit.i.i.i.i, label %if.end40.i.i.i.i.i

if.end40.i.i.i.i.i:                               ; preds = %if.end30.i.i.i.i.i
  %and41.i.i.i.i.i = shl nuw i32 %conv.i.i.i.i.i, 16
  %shl.i.i172.i.i.i = and i32 %and41.i.i.i.i.i, 2147418112
  %add.i.i.i.i.i = add nuw i32 %278, 1
  %arrayidx42.i.i.i.i.i = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %add.i.i.i.i.i
  %281 = ptrtoint ptr %arrayidx42.i.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %281)
  %282 = load i16, ptr %arrayidx42.i.i.i.i.i, align 2
  %conv43.i.i.i.i.i = zext i16 %282 to i32
  %or.i.i173.i.i.i = or i32 %shl.i.i172.i.i.i, %conv43.i.i.i.i.i
  br label %del_chain_block.exit.i.i.i.i

del_chain_block.exit.i.i.i.i:                     ; preds = %if.end40.i.i.i.i.i, %if.end30.i.i.i.i.i
  %retval.0.i64.i.i.i.i = phi i32 [ %or.i.i173.i.i.i, %if.end40.i.i.i.i.i ], [ -1, %if.end30.i.i.i.i.i ]
  %283 = load i32, ptr @nr_free_chain_hlocks, align 4
  %sub.i65.i.i.i.i = sub i32 %283, %276
  store i32 %sub.i65.i.i.i.i, ptr @nr_free_chain_hlocks, align 4
  %284 = ptrtoint ptr %arrayidx.i.i129.i.i to i32
  call void @__asan_store4_noabort(i32 %284)
  store i32 %retval.0.i64.i.i.i.i, ptr %arrayidx.i.i129.i.i, align 4
  br label %if.end34.i.i.i

if.end6.i.i.i.i:                                  ; preds = %if.then2.i.i.i.i
  %285 = load i32, ptr @chain_block_buckets, align 4
  br label %if.end7.i.i.i.i

if.end7.i.i.i.i:                                  ; preds = %if.end6.i.i.i.i, %if.end.i170.i.i.i
  %curr.0.i.i.i.i = phi i32 [ %285, %if.end6.i.i.i.i ], [ %278, %if.end.i170.i.i.i ]
  %cmp8.i.i.i.i = icmp sgt i32 %curr.0.i.i.i.i, -1
  br i1 %cmp8.i.i.i.i, label %if.then9.i.i.i.i, label %for.cond.i174.i.i.i.preheader

for.cond.i174.i.i.i.preheader:                    ; preds = %if.then9.i.i.i.i, %if.end7.i.i.i.i
  br label %for.cond.i174.i.i.i

if.then9.i.i.i.i:                                 ; preds = %if.end7.i.i.i.i
  %add.i69.i.i.i.i = add nuw i32 %curr.0.i.i.i.i, 2
  %arrayidx.i70.i.i.i.i = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %add.i69.i.i.i.i
  %286 = ptrtoint ptr %arrayidx.i70.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %286)
  %287 = load i16, ptr %arrayidx.i70.i.i.i.i, align 2
  %conv.i71.i.i.i.i = zext i16 %287 to i32
  %shl.i72.i.i.i.i = shl nuw i32 %conv.i71.i.i.i.i, 16
  %add1.i.i.i.i.i = add nuw i32 %curr.0.i.i.i.i, 3
  %arrayidx2.i.i.i.i.i = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %add1.i.i.i.i.i
  %288 = ptrtoint ptr %arrayidx2.i.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %288)
  %289 = load i16, ptr %arrayidx2.i.i.i.i.i, align 2
  %conv3.i.i.i.i.i = zext i16 %289 to i32
  %or.i73.i.i.i.i = or i32 %shl.i72.i.i.i.i, %conv3.i.i.i.i.i
  %cmp11.not.i.i.i.i = icmp slt i32 %or.i73.i.i.i.i, %276
  br i1 %cmp11.not.i.i.i.i, label %for.cond.i174.i.i.i.preheader, label %if.then14.i.i.i.i, !prof !1501

if.then14.i.i.i.i:                                ; preds = %if.then9.i.i.i.i
  %arrayidx.i74.i.i.i.i = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %curr.0.i.i.i.i
  %290 = ptrtoint ptr %arrayidx.i74.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %290)
  %291 = load i16, ptr %arrayidx.i74.i.i.i.i, align 2
  %conv.i75.i.i.i.i = zext i16 %291 to i32
  %and.i76.i.i.i.i = and i32 %conv.i75.i.i.i.i, 32768
  %tobool.not.i77.i.i.i.i = icmp eq i32 %and.i76.i.i.i.i, 0
  br i1 %tobool.not.i77.i.i.i.i, label %land.rhs.i79.i.i.i.i, label %if.end30.i82.i.i.i.i

land.rhs.i79.i.i.i.i:                             ; preds = %if.then14.i.i.i.i
  %.b52.i78.i.i.i.i = load i1, ptr @chain_block_next.__already_done, align 1
  br i1 %.b52.i78.i.i.i.i, label %if.end30.i82.i.i.i.i, label %if.then.i80.i.i.i.i, !prof !1500

if.then.i80.i.i.i.i:                              ; preds = %land.rhs.i79.i.i.i.i
  store i1 true, ptr @chain_block_next.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3282, i32 noundef 9, ptr noundef null) #28
  br label %if.end30.i82.i.i.i.i

if.end30.i82.i.i.i.i:                             ; preds = %if.then.i80.i.i.i.i, %land.rhs.i79.i.i.i.i, %if.then14.i.i.i.i
  %cmp.i81.i.i.i.i = icmp eq i16 %291, -1
  br i1 %cmp.i81.i.i.i.i, label %chain_block_next.exit91.i.i.i.i, label %if.end40.i89.i.i.i.i

if.end40.i89.i.i.i.i:                             ; preds = %if.end30.i82.i.i.i.i
  %and41.i83.i.i.i.i = shl nuw i32 %conv.i75.i.i.i.i, 16
  %shl.i84.i.i.i.i = and i32 %and41.i83.i.i.i.i, 2147418112
  %add.i85.i.i.i.i = add nuw i32 %curr.0.i.i.i.i, 1
  %arrayidx42.i86.i.i.i.i = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %add.i85.i.i.i.i
  %292 = ptrtoint ptr %arrayidx42.i86.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %292)
  %293 = load i16, ptr %arrayidx42.i86.i.i.i.i, align 2
  %conv43.i87.i.i.i.i = zext i16 %293 to i32
  %or.i88.i.i.i.i = or i32 %shl.i84.i.i.i.i, %conv43.i87.i.i.i.i
  br label %chain_block_next.exit91.i.i.i.i

chain_block_next.exit91.i.i.i.i:                  ; preds = %if.end40.i89.i.i.i.i, %if.end30.i82.i.i.i.i
  %retval.0.i90.i.i.i.i = phi i32 [ %or.i88.i.i.i.i, %if.end40.i89.i.i.i.i ], [ -1, %if.end30.i82.i.i.i.i ]
  %294 = load i32, ptr @nr_free_chain_hlocks, align 4
  %sub.i92.i.i.i.i = sub i32 %294, %or.i73.i.i.i.i
  store i32 %sub.i92.i.i.i.i, ptr @nr_free_chain_hlocks, align 4
  store i32 %retval.0.i90.i.i.i.i, ptr @chain_block_buckets, align 4
  %295 = load i32, ptr @nr_large_chain_blocks, align 4
  %dec.i93.i.i.i.i = add i32 %295, -1
  store i32 %dec.i93.i.i.i.i, ptr @nr_large_chain_blocks, align 4
  %add.i.i.i.i = add nuw i32 %curr.0.i.i.i.i, %276
  %sub.i.i.i.i = sub i32 %or.i73.i.i.i.i, %276
  tail call fastcc void @add_chain_block(i32 noundef %add.i.i.i.i, i32 noundef %sub.i.i.i.i) #28
  br label %if.end34.i.i.i

for.cond.i174.i.i.i:                              ; preds = %for.body.i175.i.i.i, %for.cond.i174.i.i.i.preheader
  %size.0.i.i.i.i = phi i32 [ %sub.i96.i.i.i.i, %for.body.i175.i.i.i ], [ 16, %for.cond.i174.i.i.i.preheader ]
  %cmp18.i.i.i.i = icmp ugt i32 %size.0.i.i.i.i, %276
  br i1 %cmp18.i.i.i.i, label %for.body.i175.i.i.i, label %if.then29.i.i.i

for.body.i175.i.i.i:                              ; preds = %for.cond.i174.i.i.i
  %sub.i96.i.i.i.i = add nsw i32 %size.0.i.i.i.i, -1
  %arrayidx20.i.i.i.i = getelementptr [16 x i32], ptr @chain_block_buckets, i32 0, i32 %sub.i96.i.i.i.i
  %296 = ptrtoint ptr %arrayidx20.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load i32, ptr %arrayidx20.i.i.i.i, align 4
  %cmp21.i.i.i.i = icmp slt i32 %297, 0
  br i1 %cmp21.i.i.i.i, label %for.cond.i174.i.i.i, label %if.end23.i.i.i.i

if.end23.i.i.i.i:                                 ; preds = %for.body.i175.i.i.i
  %arrayidx.i98.i.i.i.i = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %297
  %298 = ptrtoint ptr %arrayidx.i98.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %298)
  %299 = load i16, ptr %arrayidx.i98.i.i.i.i, align 2
  %conv.i99.i.i.i.i = zext i16 %299 to i32
  %and.i100.i.i.i.i = and i32 %conv.i99.i.i.i.i, 32768
  %tobool.not.i101.i.i.i.i = icmp eq i32 %and.i100.i.i.i.i, 0
  br i1 %tobool.not.i101.i.i.i.i, label %land.rhs.i103.i.i.i.i, label %if.end30.i106.i.i.i.i

land.rhs.i103.i.i.i.i:                            ; preds = %if.end23.i.i.i.i
  %.b52.i102.i.i.i.i = load i1, ptr @chain_block_next.__already_done, align 1
  br i1 %.b52.i102.i.i.i.i, label %if.end30.i106.i.i.i.i, label %if.then.i104.i.i.i.i, !prof !1500

if.then.i104.i.i.i.i:                             ; preds = %land.rhs.i103.i.i.i.i
  store i1 true, ptr @chain_block_next.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3282, i32 noundef 9, ptr noundef null) #28
  br label %if.end30.i106.i.i.i.i

if.end30.i106.i.i.i.i:                            ; preds = %if.then.i104.i.i.i.i, %land.rhs.i103.i.i.i.i, %if.end23.i.i.i.i
  %cmp.i105.i.i.i.i = icmp eq i16 %299, -1
  br i1 %cmp.i105.i.i.i.i, label %chain_block_next.exit115.i.i.i.i, label %if.end40.i113.i.i.i.i

if.end40.i113.i.i.i.i:                            ; preds = %if.end30.i106.i.i.i.i
  %and41.i107.i.i.i.i = shl nuw i32 %conv.i99.i.i.i.i, 16
  %shl.i108.i.i.i.i = and i32 %and41.i107.i.i.i.i, 2147418112
  %add.i109.i.i.i.i = add nuw i32 %297, 1
  %arrayidx42.i110.i.i.i.i = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %add.i109.i.i.i.i
  %300 = ptrtoint ptr %arrayidx42.i110.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %300)
  %301 = load i16, ptr %arrayidx42.i110.i.i.i.i, align 2
  %conv43.i111.i.i.i.i = zext i16 %301 to i32
  %or.i112.i.i.i.i = or i32 %shl.i108.i.i.i.i, %conv43.i111.i.i.i.i
  br label %chain_block_next.exit115.i.i.i.i

chain_block_next.exit115.i.i.i.i:                 ; preds = %if.end40.i113.i.i.i.i, %if.end30.i106.i.i.i.i
  %retval.0.i114.i.i.i.i = phi i32 [ %or.i112.i.i.i.i, %if.end40.i113.i.i.i.i ], [ -1, %if.end30.i106.i.i.i.i ]
  %302 = load i32, ptr @nr_free_chain_hlocks, align 4
  %sub.i116.i.i.i.i = sub i32 %302, %size.0.i.i.i.i
  store i32 %sub.i116.i.i.i.i, ptr @nr_free_chain_hlocks, align 4
  %303 = ptrtoint ptr %arrayidx20.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %303)
  store i32 %retval.0.i114.i.i.i.i, ptr %arrayidx20.i.i.i.i, align 4
  %tobool.not.i118.i.i.i.i = icmp eq i32 %sub.i96.i.i.i.i, 0
  br i1 %tobool.not.i118.i.i.i.i, label %if.then.i120.i.i.i.i, label %del_chain_block.exit121.i.i.i.i

if.then.i120.i.i.i.i:                             ; preds = %chain_block_next.exit115.i.i.i.i
  %304 = load i32, ptr @nr_large_chain_blocks, align 4
  %dec.i119.i.i.i.i = add i32 %304, -1
  store i32 %dec.i119.i.i.i.i, ptr @nr_large_chain_blocks, align 4
  br label %del_chain_block.exit121.i.i.i.i

del_chain_block.exit121.i.i.i.i:                  ; preds = %if.then.i120.i.i.i.i, %chain_block_next.exit115.i.i.i.i
  %add25.i.i.i.i = add i32 %297, %276
  %sub26.i.i.i.i = sub i32 %size.0.i.i.i.i, %276
  tail call fastcc void @add_chain_block(i32 noundef %add25.i.i.i.i, i32 noundef %sub26.i.i.i.i) #28
  br label %if.end34.i.i.i

if.then29.i.i.i:                                  ; preds = %for.cond.i174.i.i.i, %get_first_held_lock.exit.i128.i.i
  %call.i177.i.i.i = tail call i32 @debug_locks_off() #28
  tail call fastcc void @lockdep_unlock() #28
  %tobool31.not.i.i.i = icmp eq i32 %call.i177.i.i.i, 0
  br i1 %tobool31.not.i.i.i, label %if.else.i790, label %if.end33.i130.i.i

if.end33.i130.i.i:                                ; preds = %if.then29.i.i.i
  tail call fastcc void @print_lockdep_off(ptr noundef nonnull @.str.520) #28
  tail call void @dump_stack() #32
  br label %if.else.i790

if.end34.i.i.i:                                   ; preds = %del_chain_block.exit121.i.i.i.i, %chain_block_next.exit91.i.i.i.i, %del_chain_block.exit.i.i.i.i
  %retval.0.i176.ph.i.i.i = phi i32 [ %297, %del_chain_block.exit121.i.i.i.i ], [ %curr.0.i.i.i.i, %chain_block_next.exit91.i.i.i.i ], [ %278, %del_chain_block.exit.i.i.i.i ]
  %305 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %305)
  %bf.load35.i.i.i = load i32, ptr %add.ptr.i.i.i.i, align 8
  %bf.value36.i.i.i = and i32 %retval.0.i176.ph.i.i.i, 16777215
  %bf.clear37.i.i.i = and i32 %bf.load35.i.i.i, -16777216
  %bf.set38.i.i.i = or i32 %bf.clear37.i.i.i, %bf.value36.i.i.i
  store i32 %bf.set38.i.i.i, ptr %add.ptr.i.i.i.i, align 8
  %bf.lshr40.i.i.i = lshr i32 %bf.load35.i.i.i, 24
  %bf.clear41.i.i.i = and i32 %bf.lshr40.i.i.i, 63
  %sub42.i.i.i = add nsw i32 %bf.clear41.i.i.i, -1
  %cmp43196.i.i.i = icmp ugt i32 %bf.clear41.i.i.i, 1
  br i1 %cmp43196.i.i.i, label %for.body.i139.i.i, label %for.end.i.i.i

for.body.i139.i.i:                                ; preds = %for.body.i139.i.i, %if.end34.i.i.i
  %i.0198.i.i.i = phi i32 [ %inc52.i.i.i, %for.body.i139.i.i ], [ %i.0.in.lcssa.i.i126.i.i, %if.end34.i.i.i ]
  %j.0197.i.i.i = phi i32 [ %inc.i137.i.i, %for.body.i139.i.i ], [ 0, %if.end34.i.i.i ]
  %class_idx.i.i131.i.i = getelementptr %struct.held_lock, ptr %held_locks184, i32 %i.0198.i.i.i, i32 6
  %306 = ptrtoint ptr %class_idx.i.i131.i.i to i32
  call void @__asan_load4_noabort(i32 %306)
  %bf.load.i178.i.i.i = load i32, ptr %class_idx.i.i131.i.i, align 8
  %bf.lshr.i.i132.i.i = lshr i32 %bf.load.i178.i.i.i, 19
  %307 = lshr i32 %bf.load.i178.i.i.i, 1
  %shl.i.i133.i.i = and i32 %307, 24576
  %or.i.i134.i.i = or i32 %shl.i.i133.i.i, %bf.lshr.i.i132.i.i
  %conv.i.i135.i.i = trunc i32 %or.i.i134.i.i to i16
  %add51.i.i.i = add nuw nsw i32 %j.0197.i.i.i, %bf.value36.i.i.i
  %arrayidx.i136.i.i = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %add51.i.i.i
  %308 = ptrtoint ptr %arrayidx.i136.i.i to i32
  call void @__asan_store2_noabort(i32 %308)
  store i16 %conv.i.i135.i.i, ptr %arrayidx.i136.i.i, align 2
  %inc.i137.i.i = add nuw nsw i32 %j.0197.i.i.i, 1
  %inc52.i.i.i = add i32 %i.0198.i.i.i, 1
  %exitcond.not.i138.i.i = icmp eq i32 %inc.i137.i.i, %sub42.i.i.i
  br i1 %exitcond.not.i138.i.i, label %for.end.i.i.i, label %for.body.i139.i.i

for.end.i.i.i:                                    ; preds = %for.body.i139.i.i, %if.end34.i.i.i
  %j.0.lcssa.i.i.i = phi i32 [ 0, %if.end34.i.i.i ], [ %sub42.i.i.i, %for.body.i139.i.i ]
  %309 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %309)
  %bf.load.i180.i.i.i = load i32, ptr %class_idx243, align 8
  %bf.lshr.i181.i.i.i = lshr i32 %bf.load.i180.i.i.i, 19
  %310 = lshr i32 %bf.load.i180.i.i.i, 1
  %shl.i182.i.i.i = and i32 %310, 24576
  %or.i183.i.i.i = or i32 %shl.i182.i.i.i, %bf.lshr.i181.i.i.i
  %conv.i184.i.i.i = trunc i32 %or.i183.i.i.i to i16
  %add56.i.i.i = add nuw nsw i32 %j.0.lcssa.i.i.i, %bf.value36.i.i.i
  %arrayidx57.i.i.i = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %add56.i.i.i
  %311 = ptrtoint ptr %arrayidx57.i.i.i to i32
  call void @__asan_store2_noabort(i32 %311)
  store i16 %conv.i184.i.i.i, ptr %arrayidx57.i.i.i, align 2
  %entry58.i.i.i = getelementptr %struct.lock_chain, ptr @lock_chains, i32 %call.i.i.i.i, i32 1
  %312 = ptrtoint ptr %add.ptr.i49.i.i to i32
  call void @__asan_load4_noabort(i32 %312)
  %313 = load ptr, ptr %add.ptr.i49.i.i, align 4
  %314 = ptrtoint ptr %entry58.i.i.i to i32
  call void @__asan_store4_noabort(i32 %314)
  store ptr %313, ptr %entry58.i.i.i, align 4
  %pprev.i.i.i.i = getelementptr %struct.lock_chain, ptr @lock_chains, i32 %call.i.i.i.i, i32 1, i32 1
  %315 = ptrtoint ptr %pprev.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %315)
  store volatile ptr %add.ptr.i49.i.i, ptr %pprev.i.i.i.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #28, !srcloc !1504
  %316 = ptrtoint ptr %add.ptr.i49.i.i to i32
  call void @__asan_store4_noabort(i32 %316)
  store volatile ptr %entry58.i.i.i, ptr %add.ptr.i49.i.i, align 4
  %tobool.not.i185.i.i.i = icmp eq ptr %313, null
  br i1 %tobool.not.i185.i.i.i, label %hlist_add_head_rcu.exit.i.i.i, label %do.body49.i.i.i.i

do.body49.i.i.i.i:                                ; preds = %for.end.i.i.i
  %pprev51.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %313, i32 0, i32 1
  %317 = ptrtoint ptr %pprev51.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %317)
  store volatile ptr %entry58.i.i.i, ptr %pprev51.i.i.i.i, align 4
  br label %hlist_add_head_rcu.exit.i.i.i

hlist_add_head_rcu.exit.i.i.i:                    ; preds = %do.body49.i.i.i.i, %for.end.i.i.i
  %318 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i140.i.i = and i32 %318, 128
  %tobool73.not.i.i.i = icmp eq i32 %and.i.i140.i.i, 0
  br i1 %tobool73.not.i.i.i, label %land.rhs.i141.i.i, label %if.then.i778

land.rhs.i141.i.i:                                ; preds = %hlist_add_head_rcu.exit.i.i.i
  %.b165.i.i.i = load i1, ptr @add_chain_cache.__already_done, align 1
  br i1 %.b165.i.i.i, label %if.then.i778, label %if.then83.i.i.i, !prof !1500

if.then83.i.i.i:                                  ; preds = %land.rhs.i141.i.i
  store i1 true, ptr @add_chain_cache.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3679, i32 noundef 9, ptr noundef null) #28
  br label %if.then.i778

if.then.i778:                                     ; preds = %if.then83.i.i.i, %land.rhs.i141.i.i, %hlist_add_head_rcu.exit.i.i.i
  %319 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i186.i.i.i = and i32 %319, -16384
  %320 = inttoptr i32 %and.i186.i.i.i to ptr
  %cpu.i142.i.i = getelementptr inbounds %struct.thread_info, ptr %320, i32 0, i32 3
  %321 = ptrtoint ptr %cpu.i142.i.i to i32
  call void @__asan_load4_noabort(i32 %321)
  %322 = load i32, ptr %cpu.i142.i.i, align 4
  %arrayidx129.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %322
  %323 = ptrtoint ptr %arrayidx129.i.i.i to i32
  call void @__asan_load4_noabort(i32 %323)
  %324 = load i32, ptr %arrayidx129.i.i.i, align 4
  %add130.i.i.i = add i32 %324, ptrtoint (ptr getelementptr inbounds (%struct.lockdep_stats, ptr @lockdep_stats, i32 0, i32 1) to i32)
  %325 = inttoptr i32 %add130.i.i.i to ptr
  %326 = ptrtoint ptr %325 to i32
  call void @__asan_load4_noabort(i32 %326)
  %327 = load i32, ptr %325, align 4
  %add131.i.i.i = add i32 %327, 1
  store i32 %add131.i.i.i, ptr %325, align 4
  %328 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %328)
  %bf.load136.i.i.i = load i32, ptr %add.ptr.i.i.i.i, align 8
  %tobool.not.i188.i.i.i = icmp sgt i32 %bf.load136.i.i.i, -1
  %329 = and i32 %bf.load136.i.i.i, 1073741824
  %tobool2.not.i.i.i.i = icmp eq i32 %329, 0
  %nr_process_chains.nr_softirq_chains.i.i.i.i = select i1 %tobool2.not.i.i.i.i, ptr @nr_process_chains, ptr @nr_softirq_chains
  %nr_softirq_chains.sink9.i.i.i.i = select i1 %tobool.not.i188.i.i.i, ptr %nr_process_chains.nr_softirq_chains.i.i.i.i, ptr @nr_hardirq_chains
  %330 = ptrtoint ptr %nr_softirq_chains.sink9.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %330)
  %331 = load i32, ptr %nr_softirq_chains.sink9.i.i.i.i, align 4
  %inc4.i.i.i.i = add i32 %331, 1
  store i32 %inc4.i.i.i.i, ptr %nr_softirq_chains.sink9.i.i.i.i, align 4
  %332 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %332)
  %333 = load i32, ptr %lockdep_depth, align 8
  %cmp50.i.i = icmp sgt i32 %333, 0
  br i1 %cmp50.i.i, label %for.body.i.i, label %if.end.i785

for.body.i.i:                                     ; preds = %for.inc.i.i, %if.then.i778
  %i.052.i.i = phi i32 [ %inc.i.i, %for.inc.i.i ], [ 0, %if.then.i778 ]
  %nest.051.i.i = phi ptr [ %spec.select.i.i, %for.inc.i.i ], [ null, %if.then.i778 ]
  %add.ptr.i.i779 = getelementptr %struct.held_lock, ptr %held_locks184, i32 %i.052.i.i
  %instance.i.i = getelementptr %struct.held_lock, ptr %held_locks184, i32 %i.052.i.i, i32 2
  %334 = ptrtoint ptr %instance.i.i to i32
  call void @__asan_load4_noabort(i32 %334)
  %335 = load ptr, ptr %instance.i.i, align 4
  %336 = ptrtoint ptr %nest_lock248 to i32
  call void @__asan_load4_noabort(i32 %336)
  %337 = load ptr, ptr %nest_lock248, align 8
  %cmp1.i.i = icmp eq ptr %335, %337
  %spec.select.i.i = select i1 %cmp1.i.i, ptr %add.ptr.i.i779, ptr %nest.051.i.i
  %class_idx1.i.i33.i = getelementptr %struct.held_lock, ptr %held_locks184, i32 %i.052.i.i, i32 6
  %338 = ptrtoint ptr %class_idx1.i.i33.i to i32
  call void @__asan_load4_noabort(i32 %338)
  %bf.load.i.i34.i = load i32, ptr %class_idx1.i.i33.i, align 8
  %bf.lshr.i.i35.i = lshr i32 %bf.load.i.i34.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i.i36.i = lshr i32 %bf.load.i.i34.i, 24
  %arrayidx.i.i.i37.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i.i36.i
  %339 = ptrtoint ptr %arrayidx.i.i.i37.i to i32
  call void @__asan_load4_noabort(i32 %339)
  %340 = load volatile i32, ptr %arrayidx.i.i.i37.i, align 4
  %and.i.i.i38.i = and i32 %bf.lshr.i.i35.i, 31
  %341 = shl nuw i32 1, %and.i.i.i38.i
  %342 = and i32 %341, %340
  %tobool.not.i.i39.i = icmp eq i32 %342, 0
  br i1 %tobool.not.i.i39.i, label %if.then.i.i41.i, label %if.end33.i.i.i

if.then.i.i41.i:                                  ; preds = %for.body.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %343 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i.i40.i = icmp eq i32 %343, 0
  br i1 %tobool2.not.i.i40.i, label %do.end.i.i44.i, label %hlock_class.exit.i48.i

do.end.i.i44.i:                                   ; preds = %if.then.i.i41.i
  %call4.i.i42.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i.i43.i = icmp eq i32 %call4.i.i42.i, 0
  br i1 %tobool5.not.i.i43.i, label %hlock_class.exit.i48.i, label %land.lhs.true.i.i46.i

land.lhs.true.i.i46.i:                            ; preds = %do.end.i.i44.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %344 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i.i45.i = icmp eq i32 %344, 0
  br i1 %tobool6.not.i.i45.i, label %do.end15.i.i47.i, label %hlock_class.exit.i48.i

do.end15.i.i47.i:                                 ; preds = %land.lhs.true.i.i46.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit.i48.i

if.end33.i.i.i:                                   ; preds = %for.body.i.i
  %add.ptr.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i.i35.i
  br label %hlock_class.exit.i48.i

hlock_class.exit.i48.i:                           ; preds = %if.end33.i.i.i, %do.end15.i.i47.i, %land.lhs.true.i.i46.i, %do.end.i.i44.i, %if.then.i.i41.i
  %retval.0.i.i.i780 = phi ptr [ %add.ptr.i.i.i, %if.end33.i.i.i ], [ null, %do.end15.i.i47.i ], [ null, %land.lhs.true.i.i46.i ], [ null, %do.end.i.i44.i ], [ null, %if.then.i.i41.i ]
  %345 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %345)
  %bf.load.i30.i.i = load i32, ptr %class_idx243, align 8
  %bf.lshr.i31.i.i = lshr i32 %bf.load.i30.i.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i32.i.i = lshr i32 %bf.load.i30.i.i, 24
  %arrayidx.i.i33.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i32.i.i
  %346 = ptrtoint ptr %arrayidx.i.i33.i.i to i32
  call void @__asan_load4_noabort(i32 %346)
  %347 = load volatile i32, ptr %arrayidx.i.i33.i.i, align 4
  %and.i.i34.i.i = and i32 %bf.lshr.i31.i.i, 31
  %348 = shl nuw i32 1, %and.i.i34.i.i
  %349 = and i32 %348, %347
  %tobool.not.i35.i.i = icmp eq i32 %349, 0
  br i1 %tobool.not.i35.i.i, label %if.then.i37.i.i, label %if.end33.i45.i.i

if.then.i37.i.i:                                  ; preds = %hlock_class.exit.i48.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %350 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i36.i.i = icmp eq i32 %350, 0
  br i1 %tobool2.not.i36.i.i, label %do.end.i40.i.i, label %hlock_class.exit47.i.i

do.end.i40.i.i:                                   ; preds = %if.then.i37.i.i
  %call4.i38.i.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i39.i.i = icmp eq i32 %call4.i38.i.i, 0
  br i1 %tobool5.not.i39.i.i, label %hlock_class.exit47.i.i, label %land.lhs.true.i42.i.i

land.lhs.true.i42.i.i:                            ; preds = %do.end.i40.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %351 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i41.i.i = icmp eq i32 %351, 0
  br i1 %tobool6.not.i41.i.i, label %do.end15.i43.i.i, label %hlock_class.exit47.i.i

do.end15.i43.i.i:                                 ; preds = %land.lhs.true.i42.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit47.i.i

if.end33.i45.i.i:                                 ; preds = %hlock_class.exit.i48.i
  %add.ptr.i44.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i31.i.i
  br label %hlock_class.exit47.i.i

hlock_class.exit47.i.i:                           ; preds = %if.end33.i45.i.i, %do.end15.i43.i.i, %land.lhs.true.i42.i.i, %do.end.i40.i.i, %if.then.i37.i.i
  %retval.0.i46.i.i = phi ptr [ %add.ptr.i44.i.i, %if.end33.i45.i.i ], [ null, %do.end15.i43.i.i ], [ null, %land.lhs.true.i42.i.i ], [ null, %do.end.i40.i.i ], [ null, %if.then.i37.i.i ]
  %cmp3.not.i.i = icmp eq ptr %retval.0.i.i.i780, %retval.0.i46.i.i
  br i1 %cmp3.not.i.i, label %if.end5.i.i, label %for.inc.i.i

if.end5.i.i:                                      ; preds = %hlock_class.exit47.i.i
  %352 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %352)
  %bf.load.i.i781 = load i32, ptr %class_idx243, align 8
  %353 = and i32 %bf.load.i.i781, 49152
  %cmp6.i.i = icmp eq i32 %353, 32768
  br i1 %cmp6.i.i, label %land.lhs.true.i.i783, label %if.end12.i.i

land.lhs.true.i.i783:                             ; preds = %if.end5.i.i
  %354 = ptrtoint ptr %class_idx1.i.i33.i to i32
  call void @__asan_load4_noabort(i32 %354)
  %bf.load8.i.i = load i32, ptr %class_idx1.i.i33.i, align 8
  %355 = and i32 %bf.load8.i.i, 49152
  %tobool.not.i.i782 = icmp eq i32 %355, 0
  br i1 %tobool.not.i.i782, label %if.end12.i.i, label %for.inc.i.i

if.end12.i.i:                                     ; preds = %land.lhs.true.i.i783, %if.end5.i.i
  %tobool13.not.i.i = icmp eq ptr %spec.select.i.i, null
  br i1 %tobool13.not.i.i, label %if.end15.i.i, label %cleanup.i

if.end15.i.i:                                     ; preds = %if.end12.i.i
  %call.i.i.i49.i = tail call i32 @debug_locks_off() #28
  tail call fastcc void @lockdep_unlock() #28
  %tobool.not.i48.i.i = icmp eq i32 %call.i.i.i49.i, 0
  br i1 %tobool.not.i48.i.i, label %cleanup, label %lor.lhs.false.i.i.i784

lor.lhs.false.i.i.i784:                           ; preds = %if.end15.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %356 = load i32, ptr @debug_locks_silent, align 4
  %tobool1.not.i.i.i = icmp eq i32 %356, 0
  br i1 %tobool1.not.i.i.i, label %do.end.i49.i.i, label %cleanup

do.end.i49.i.i:                                   ; preds = %lor.lhs.false.i.i.i784
  %call2.i.i50.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.89) #32
  %call6.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.523) #32
  %call10.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.526) #32
  %call3.i.i.i51.i = tail call i32 @strcspn(ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef nonnull @.str.766) #28
  %call7.i.i.i.i = tail call ptr @print_tainted() #28
  %call8.i.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.764, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 2), i32 noundef %call3.i.i.i51.i, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef %call7.i.i.i.i) #32
  %call14.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.529) #32
  %comm.i.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 101
  %pid.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 68
  %357 = ptrtoint ptr %pid.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %357)
  %358 = load i32, ptr %pid.i.i.i.i, align 8
  %call19.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.532, ptr noundef %comm.i.i.i, i32 noundef %358) #32
  tail call fastcc void @print_lock(ptr noundef %add.ptr186) #28
  %call23.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.535) #32
  tail call fastcc void @print_lock(ptr noundef %add.ptr.i.i779) #28
  %call27.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.226) #32
  %359 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %359)
  %bf.load.i.i.i.i.i = load i32, ptr %class_idx243, align 8
  %bf.lshr.i.i.i.i.i = lshr i32 %bf.load.i.i.i.i.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i.i.i.i.i = lshr i32 %bf.load.i.i.i.i.i, 24
  %arrayidx.i.i.i.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i.i.i.i.i
  %360 = ptrtoint ptr %arrayidx.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %360)
  %361 = load volatile i32, ptr %arrayidx.i.i.i.i.i.i, align 4
  %and.i.i.i.i.i.i = and i32 %bf.lshr.i.i.i.i.i, 31
  %362 = shl nuw i32 1, %and.i.i.i.i.i.i
  %363 = and i32 %362, %361
  %tobool.not.i.i.i.i52.i = icmp eq i32 %363, 0
  br i1 %tobool.not.i.i.i.i52.i, label %if.then.i.i.i.i53.i, label %if.end33.i.i.i.i.i

if.then.i.i.i.i53.i:                              ; preds = %do.end.i49.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %364 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i.i.i.i.i = icmp eq i32 %364, 0
  br i1 %tobool2.not.i.i.i.i.i, label %do.end.i.i.i.i.i, label %hlock_class.exit.i.i.i.i

do.end.i.i.i.i.i:                                 ; preds = %if.then.i.i.i.i53.i
  %call4.i.i.i.i.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i.i.i.i.i = icmp eq i32 %call4.i.i.i.i.i, 0
  br i1 %tobool5.not.i.i.i.i.i, label %hlock_class.exit.i.i.i.i, label %land.lhs.true.i.i.i.i.i

land.lhs.true.i.i.i.i.i:                          ; preds = %do.end.i.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %365 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i.i.i.i.i = icmp eq i32 %365, 0
  br i1 %tobool6.not.i.i.i.i.i, label %do.end15.i.i.i.i.i, label %hlock_class.exit.i.i.i.i

do.end15.i.i.i.i.i:                               ; preds = %land.lhs.true.i.i.i.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit.i.i.i.i

if.end33.i.i.i.i.i:                               ; preds = %do.end.i49.i.i
  %add.ptr.i.i.i.i54.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i.i.i.i.i
  br label %hlock_class.exit.i.i.i.i

hlock_class.exit.i.i.i.i:                         ; preds = %if.end33.i.i.i.i.i, %do.end15.i.i.i.i.i, %land.lhs.true.i.i.i.i.i, %do.end.i.i.i.i.i, %if.then.i.i.i.i53.i
  %retval.0.i.i.i.i55.i = phi ptr [ %add.ptr.i.i.i.i54.i, %if.end33.i.i.i.i.i ], [ null, %do.end15.i.i.i.i.i ], [ null, %land.lhs.true.i.i.i.i.i ], [ null, %do.end.i.i.i.i.i ], [ null, %if.then.i.i.i.i53.i ]
  %366 = ptrtoint ptr %class_idx1.i.i33.i to i32
  call void @__asan_load4_noabort(i32 %366)
  %bf.load.i44.i.i.i.i = load i32, ptr %class_idx1.i.i33.i, align 8
  %bf.lshr.i45.i.i.i.i = lshr i32 %bf.load.i44.i.i.i.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i46.i.i.i.i = lshr i32 %bf.load.i44.i.i.i.i, 24
  %arrayidx.i.i47.i.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i46.i.i.i.i
  %367 = ptrtoint ptr %arrayidx.i.i47.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %367)
  %368 = load volatile i32, ptr %arrayidx.i.i47.i.i.i.i, align 4
  %and.i.i48.i.i.i.i = and i32 %bf.lshr.i45.i.i.i.i, 31
  %369 = shl nuw i32 1, %and.i.i48.i.i.i.i
  %370 = and i32 %369, %368
  %tobool.not.i49.i.i.i.i = icmp eq i32 %370, 0
  br i1 %tobool.not.i49.i.i.i.i, label %if.then.i51.i.i.i.i, label %if.end33.i59.i.i.i.i

if.then.i51.i.i.i.i:                              ; preds = %hlock_class.exit.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %371 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i50.i.i.i.i = icmp eq i32 %371, 0
  br i1 %tobool2.not.i50.i.i.i.i, label %do.end.i54.i.i.i.i, label %print_deadlock_scenario.exit.i.i.i

do.end.i54.i.i.i.i:                               ; preds = %if.then.i51.i.i.i.i
  %call4.i52.i.i.i.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i53.i.i.i.i = icmp eq i32 %call4.i52.i.i.i.i, 0
  br i1 %tobool5.not.i53.i.i.i.i, label %print_deadlock_scenario.exit.i.i.i, label %land.lhs.true.i56.i.i.i.i

land.lhs.true.i56.i.i.i.i:                        ; preds = %do.end.i54.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %372 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i55.i.i.i.i = icmp eq i32 %372, 0
  br i1 %tobool6.not.i55.i.i.i.i, label %do.end15.i57.i.i.i.i, label %print_deadlock_scenario.exit.i.i.i

do.end15.i57.i.i.i.i:                             ; preds = %land.lhs.true.i56.i.i.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %print_deadlock_scenario.exit.i.i.i

if.end33.i59.i.i.i.i:                             ; preds = %hlock_class.exit.i.i.i.i
  %add.ptr.i58.i.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i45.i.i.i.i
  br label %print_deadlock_scenario.exit.i.i.i

print_deadlock_scenario.exit.i.i.i:               ; preds = %if.end33.i59.i.i.i.i, %do.end15.i57.i.i.i.i, %land.lhs.true.i56.i.i.i.i, %do.end.i54.i.i.i.i, %if.then.i51.i.i.i.i
  %retval.0.i60.i.i.i.i = phi ptr [ %add.ptr.i58.i.i.i.i, %if.end33.i59.i.i.i.i ], [ null, %do.end15.i57.i.i.i.i ], [ null, %land.lhs.true.i56.i.i.i.i ], [ null, %do.end.i54.i.i.i.i ], [ null, %if.then.i51.i.i.i.i ]
  %call2.i.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.230) #32
  %call7.i36.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.233) #32
  %call12.i.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.236) #32
  %call17.i.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.239) #32
  tail call fastcc void @__print_lock_name(ptr noundef %retval.0.i60.i.i.i.i) #28
  %call22.i.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.242) #32
  %call27.i.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.239) #32
  tail call fastcc void @__print_lock_name(ptr noundef %retval.0.i.i.i.i55.i) #28
  %call32.i.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.242) #32
  %call37.i.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.253) #32
  %call42.i.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.557) #32
  tail call fastcc void @lockdep_print_held_locks(ptr noundef %3) #28
  %call31.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134) #32
  tail call void @dump_stack() #32
  br label %cleanup

for.inc.i.i:                                      ; preds = %land.lhs.true.i.i783, %hlock_class.exit47.i.i
  %inc.i.i = add nuw nsw i32 %i.052.i.i, 1
  %373 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %373)
  %374 = load i32, ptr %lockdep_depth, align 8
  %cmp.i.i = icmp slt i32 %inc.i.i, %374
  br i1 %cmp.i.i, label %for.body.i.i, label %if.end.i785

if.end.i785:                                      ; preds = %for.inc.i.i, %if.then.i778
  %tobool10.not.not.i = select i1 %tobool414.not898, i1 %153, i1 false
  br i1 %tobool10.not.not.i, label %if.then12.i, label %cleanup.i

if.then12.i:                                      ; preds = %if.end.i785
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %trace.i.i) #28
  %375 = ptrtoint ptr %trace.i.i to i32
  call void @__asan_store4_noabort(i32 %375)
  store ptr null, ptr %trace.i.i, align 4
  %376 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %376)
  %377 = load i32, ptr %lockdep_depth, align 8
  %tobool.not.i58.i = icmp eq i32 %377, 0
  br i1 %tobool.not.i58.i, label %out_bug.i.i, label %if.end.i.i786

if.end.i.i786:                                    ; preds = %if.then12.i
  %irq_context.i.i = getelementptr %struct.task_struct, ptr %3, i32 0, i32 144, i32 %377, i32 6
  %378 = ptrtoint ptr %irq_context.i.i to i32
  call void @__asan_load4_noabort(i32 %378)
  %bf.load.i59.i = load i32, ptr %irq_context.i.i, align 8
  %sub.i.i = add i32 %377, -1
  %irq_context3.i.i = getelementptr %struct.task_struct, ptr %3, i32 0, i32 144, i32 %sub.i.i, i32 6
  %379 = ptrtoint ptr %irq_context3.i.i to i32
  call void @__asan_load4_noabort(i32 %379)
  %bf.load4.i.i = load i32, ptr %irq_context3.i.i, align 8
  %bf.lshr94.i.i = xor i32 %bf.load4.i.i, %bf.load.i59.i
  %380 = and i32 %bf.lshr94.i.i, 393216
  %cmp.not.i.i = icmp eq i32 %380, 0
  br i1 %cmp.not.i.i, label %for.cond.preheader.i.i, label %out_bug.i.i

for.cond.preheader.i.i:                           ; preds = %if.end.i.i786
  %381 = getelementptr inbounds %struct.lock_list, ptr %this.i.i.i.i, i32 0, i32 1
  %382 = getelementptr inbounds %struct.lock_list, ptr %this.i.i.i.i, i32 0, i32 6
  %383 = getelementptr inbounds %struct.lock_list, ptr %this.i.i.i.i, i32 0, i32 7
  %384 = getelementptr inbounds %struct.lock_list, ptr %that.i.i.i.i, i32 0, i32 1
  %385 = getelementptr inbounds %struct.lock_list, ptr %that.i.i.i.i, i32 0, i32 6
  %386 = getelementptr inbounds %struct.lock_list, ptr %that.i.i.i.i, i32 0, i32 7
  %add.ptr.i60.i = getelementptr %struct.task_struct, ptr %3, i32 0, i32 136
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %if.end30.i.i, %for.cond.preheader.i.i
  %depth.0.i.i = phi i32 [ %377, %for.cond.preheader.i.i ], [ %dec.i.i, %if.end30.i.i ]
  %add.ptr12.i.i = getelementptr %struct.held_lock, ptr %add.ptr.i60.i, i32 %depth.0.i.i
  %check.i.i = getelementptr %struct.held_lock, ptr %add.ptr.i60.i, i32 %depth.0.i.i, i32 6
  %387 = ptrtoint ptr %check.i.i to i32
  call void @__asan_load4_noabort(i32 %387)
  %bf.load13.i.i = load i32, ptr %check.i.i, align 8
  %388 = and i32 %bf.load13.i.i, 8192
  %tobool16.not.i.i = icmp eq i32 %388, 0
  br i1 %tobool16.not.i.i, label %if.end27.i.i, label %if.then17.i.i

if.then17.i.i:                                    ; preds = %for.cond.i.i
  %389 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %389)
  %390 = load i32, ptr %lockdep_depth, align 8
  %sub10.i.i = sub i32 %390, %depth.0.i.i
  %391 = trunc i32 %sub10.i.i to i16
  %conv.i.i = add i16 %391, 1
  %bf.lshr.i.i.i61.i = lshr i32 %bf.load13.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i.i.i.i = lshr i32 %bf.load13.i.i, 24
  %arrayidx.i.i.i.i62.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i.i.i.i
  %392 = ptrtoint ptr %arrayidx.i.i.i.i62.i to i32
  call void @__asan_load4_noabort(i32 %392)
  %393 = load volatile i32, ptr %arrayidx.i.i.i.i62.i, align 4
  %and.i.i.i.i63.i = and i32 %bf.lshr.i.i.i61.i, 31
  %394 = shl nuw i32 1, %and.i.i.i.i63.i
  %395 = and i32 %393, %394
  %tobool.not.i.i.i64.i = icmp eq i32 %395, 0
  br i1 %tobool.not.i.i.i64.i, label %if.then.i.i.i.i, label %if.end33.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.then17.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %396 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i.i.i65.i = icmp eq i32 %396, 0
  br i1 %tobool2.not.i.i.i65.i, label %do.end.i.i.i66.i, label %hlock_class.exit.i.i.i

do.end.i.i.i66.i:                                 ; preds = %if.then.i.i.i.i
  %call4.i.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i.i.i.i = icmp eq i32 %call4.i.i.i.i, 0
  br i1 %tobool5.not.i.i.i.i, label %hlock_class.exit.i.i.i, label %land.lhs.true.i.i.i68.i

land.lhs.true.i.i.i68.i:                          ; preds = %do.end.i.i.i66.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %397 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i.i.i67.i = icmp eq i32 %397, 0
  br i1 %tobool6.not.i.i.i67.i, label %do.end15.i.i.i.i, label %hlock_class.exit.i.i.i

do.end15.i.i.i.i:                                 ; preds = %land.lhs.true.i.i.i68.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit.i.i.i

if.end33.i.i.i.i:                                 ; preds = %if.then17.i.i
  %add.ptr.i.i.i69.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i.i.i61.i
  br label %hlock_class.exit.i.i.i

hlock_class.exit.i.i.i:                           ; preds = %if.end33.i.i.i.i, %do.end15.i.i.i.i, %land.lhs.true.i.i.i68.i, %do.end.i.i.i66.i, %if.then.i.i.i.i
  %retval.0.i.i.i.i = phi ptr [ %add.ptr.i.i.i69.i, %if.end33.i.i.i.i ], [ null, %do.end15.i.i.i.i ], [ null, %land.lhs.true.i.i.i68.i ], [ null, %do.end.i.i.i66.i ], [ null, %if.then.i.i.i.i ]
  %key.i.i.i = getelementptr inbounds %struct.lock_class, ptr %retval.0.i.i.i.i, i32 0, i32 4
  %398 = ptrtoint ptr %key.i.i.i to i32
  call void @__asan_load4_noabort(i32 %398)
  %399 = load ptr, ptr %key.i.i.i, align 4
  %tobool.not.i.i70.i = icmp eq ptr %399, null
  br i1 %tobool.not.i.i70.i, label %if.then.i.i73.i, label %lor.lhs.false.i.i71.i

lor.lhs.false.i.i71.i:                            ; preds = %hlock_class.exit.i.i.i
  %400 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %400)
  %bf.load.i298.i.i.i = load i32, ptr %class_idx243, align 8
  %bf.lshr.i299.i.i.i = lshr i32 %bf.load.i298.i.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i300.i.i.i = lshr i32 %bf.load.i298.i.i.i, 24
  %arrayidx.i.i301.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i300.i.i.i
  %401 = ptrtoint ptr %arrayidx.i.i301.i.i.i to i32
  call void @__asan_load4_noabort(i32 %401)
  %402 = load volatile i32, ptr %arrayidx.i.i301.i.i.i, align 4
  %and.i.i302.i.i.i = and i32 %bf.lshr.i299.i.i.i, 31
  %403 = shl nuw i32 1, %and.i.i302.i.i.i
  %404 = and i32 %403, %402
  %tobool.not.i303.i.i.i = icmp eq i32 %404, 0
  br i1 %tobool.not.i303.i.i.i, label %if.then.i305.i.i.i, label %if.end33.i313.i.i.i

if.then.i305.i.i.i:                               ; preds = %lor.lhs.false.i.i71.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %405 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i304.i.i.i = icmp eq i32 %405, 0
  br i1 %tobool2.not.i304.i.i.i, label %do.end.i308.i.i.i, label %hlock_class.exit315.i.i.i

do.end.i308.i.i.i:                                ; preds = %if.then.i305.i.i.i
  %call4.i306.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i307.i.i.i = icmp eq i32 %call4.i306.i.i.i, 0
  br i1 %tobool5.not.i307.i.i.i, label %hlock_class.exit315.i.i.i, label %land.lhs.true.i310.i.i.i

land.lhs.true.i310.i.i.i:                         ; preds = %do.end.i308.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %406 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i309.i.i.i = icmp eq i32 %406, 0
  br i1 %tobool6.not.i309.i.i.i, label %do.end15.i311.i.i.i, label %hlock_class.exit315.i.i.i

do.end15.i311.i.i.i:                              ; preds = %land.lhs.true.i310.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit315.i.i.i

if.end33.i313.i.i.i:                              ; preds = %lor.lhs.false.i.i71.i
  %add.ptr.i312.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i299.i.i.i
  br label %hlock_class.exit315.i.i.i

hlock_class.exit315.i.i.i:                        ; preds = %if.end33.i313.i.i.i, %do.end15.i311.i.i.i, %land.lhs.true.i310.i.i.i, %do.end.i308.i.i.i, %if.then.i305.i.i.i
  %retval.0.i314.i.i.i = phi ptr [ %add.ptr.i312.i.i.i, %if.end33.i313.i.i.i ], [ null, %do.end15.i311.i.i.i ], [ null, %land.lhs.true.i310.i.i.i ], [ null, %do.end.i308.i.i.i ], [ null, %if.then.i305.i.i.i ]
  %key3.i.i.i = getelementptr inbounds %struct.lock_class, ptr %retval.0.i314.i.i.i, i32 0, i32 4
  %407 = ptrtoint ptr %key3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %407)
  %408 = load ptr, ptr %key3.i.i.i, align 4
  %tobool4.not.i.i.i = icmp eq ptr %408, null
  br i1 %tobool4.not.i.i.i, label %if.then.i.i73.i, label %if.end114.i.i.i

if.then.i.i73.i:                                  ; preds = %hlock_class.exit315.i.i.i, %hlock_class.exit.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %409 = load i32, ptr @debug_locks_silent, align 4
  %tobool5.not.i.i72.i = icmp eq i32 %409, 0
  br i1 %tobool5.not.i.i72.i, label %land.rhs.i.i74.i, label %cleanup.i.i

land.rhs.i.i74.i:                                 ; preds = %if.then.i.i73.i
  %410 = ptrtoint ptr %check.i.i to i32
  call void @__asan_load4_noabort(i32 %410)
  %bf.load.i317.i.i.i = load i32, ptr %check.i.i, align 8
  %bf.lshr.i318.i.i.i = lshr i32 %bf.load.i317.i.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i319.i.i.i = lshr i32 %bf.load.i317.i.i.i, 24
  %arrayidx.i.i320.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i319.i.i.i
  %411 = ptrtoint ptr %arrayidx.i.i320.i.i.i to i32
  call void @__asan_load4_noabort(i32 %411)
  %412 = load volatile i32, ptr %arrayidx.i.i320.i.i.i, align 4
  %and.i.i321.i.i.i = and i32 %bf.lshr.i318.i.i.i, 31
  %413 = shl nuw i32 1, %and.i.i321.i.i.i
  %414 = and i32 %413, %412
  %tobool.not.i322.i.i.i = icmp eq i32 %414, 0
  br i1 %tobool.not.i322.i.i.i, label %if.then.i324.i.i.i, label %if.end33.i332.i.i.i

if.then.i324.i.i.i:                               ; preds = %land.rhs.i.i74.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %415 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i323.i.i.i = icmp eq i32 %415, 0
  br i1 %tobool2.not.i323.i.i.i, label %do.end.i327.i.i.i, label %hlock_class.exit334.i.i.i

do.end.i327.i.i.i:                                ; preds = %if.then.i324.i.i.i
  %call4.i325.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i326.i.i.i = icmp eq i32 %call4.i325.i.i.i, 0
  br i1 %tobool5.not.i326.i.i.i, label %hlock_class.exit334.i.i.i, label %land.lhs.true.i329.i.i.i

land.lhs.true.i329.i.i.i:                         ; preds = %do.end.i327.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %416 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i328.i.i.i = icmp eq i32 %416, 0
  br i1 %tobool6.not.i328.i.i.i, label %do.end15.i330.i.i.i, label %hlock_class.exit334.i.i.i

do.end15.i330.i.i.i:                              ; preds = %land.lhs.true.i329.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit334.i.i.i

if.end33.i332.i.i.i:                              ; preds = %land.rhs.i.i74.i
  %add.ptr.i331.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i318.i.i.i
  br label %hlock_class.exit334.i.i.i

hlock_class.exit334.i.i.i:                        ; preds = %if.end33.i332.i.i.i, %do.end15.i330.i.i.i, %land.lhs.true.i329.i.i.i, %do.end.i327.i.i.i, %if.then.i324.i.i.i
  %retval.0.i333.i.i.i = phi ptr [ %add.ptr.i331.i.i.i, %if.end33.i332.i.i.i ], [ null, %do.end15.i330.i.i.i ], [ null, %land.lhs.true.i329.i.i.i ], [ null, %do.end.i327.i.i.i ], [ null, %if.then.i324.i.i.i ]
  %key7.i.i.i = getelementptr inbounds %struct.lock_class, ptr %retval.0.i333.i.i.i, i32 0, i32 4
  %417 = ptrtoint ptr %key7.i.i.i to i32
  call void @__asan_load4_noabort(i32 %417)
  %418 = load ptr, ptr %key7.i.i.i, align 4
  %tobool8.not.i.i.i787 = icmp eq ptr %418, null
  br i1 %tobool8.not.i.i.i787, label %land.rhs12.i.i.i, label %if.end42.i.i.i

land.rhs12.i.i.i:                                 ; preds = %hlock_class.exit334.i.i.i
  %.b292.i.i.i = load i1, ptr @check_prev_add.__already_done, align 1
  br i1 %.b292.i.i.i, label %if.end42.i.i.i, label %if.then19.i.i.i, !prof !1500

if.then19.i.i.i:                                  ; preds = %land.rhs12.i.i.i
  store i1 true, ptr @check_prev_add.__already_done, align 1
  %call29.i.i.i = call fastcc ptr @hlock_class(ptr noundef %add.ptr12.i.i) #28
  %call30.i.i.i = call fastcc ptr @hlock_class(ptr noundef %add.ptr12.i.i) #28
  %name.i.i.i = getelementptr inbounds %struct.lock_class, ptr %call30.i.i.i, i32 0, i32 10
  %419 = ptrtoint ptr %name.i.i.i to i32
  call void @__asan_load4_noabort(i32 %419)
  %420 = load ptr, ptr %name.i.i.i, align 4
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3045, i32 noundef 9, ptr noundef nonnull @.str.559, ptr noundef %call29.i.i.i, ptr noundef %420) #28
  br label %if.end42.i.i.i

if.end42.i.i.i:                                   ; preds = %if.then19.i.i.i, %land.rhs12.i.i.i, %hlock_class.exit334.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %.pr.i.i.i = load i32, ptr @debug_locks_silent, align 4
  %tobool51.not.i.i.i = icmp eq i32 %.pr.i.i.i, 0
  br i1 %tobool51.not.i.i.i, label %land.rhs52.i.i.i, label %cleanup.i.i

land.rhs52.i.i.i:                                 ; preds = %if.end42.i.i.i
  %421 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %421)
  %bf.load.i336.i.i.i = load i32, ptr %class_idx243, align 8
  %bf.lshr.i337.i.i.i = lshr i32 %bf.load.i336.i.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i338.i.i.i = lshr i32 %bf.load.i336.i.i.i, 24
  %arrayidx.i.i339.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i338.i.i.i
  %422 = ptrtoint ptr %arrayidx.i.i339.i.i.i to i32
  call void @__asan_load4_noabort(i32 %422)
  %423 = load volatile i32, ptr %arrayidx.i.i339.i.i.i, align 4
  %and.i.i340.i.i.i = and i32 %bf.lshr.i337.i.i.i, 31
  %424 = shl nuw i32 1, %and.i.i340.i.i.i
  %425 = and i32 %424, %423
  %tobool.not.i341.i.i.i = icmp eq i32 %425, 0
  br i1 %tobool.not.i341.i.i.i, label %if.then.i343.i.i.i, label %if.end33.i351.i.i.i

if.then.i343.i.i.i:                               ; preds = %land.rhs52.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %426 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i342.i.i.i = icmp eq i32 %426, 0
  br i1 %tobool2.not.i342.i.i.i, label %do.end.i346.i.i.i, label %hlock_class.exit353.i.i.i

do.end.i346.i.i.i:                                ; preds = %if.then.i343.i.i.i
  %call4.i344.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i345.i.i.i = icmp eq i32 %call4.i344.i.i.i, 0
  br i1 %tobool5.not.i345.i.i.i, label %hlock_class.exit353.i.i.i, label %land.lhs.true.i348.i.i.i

land.lhs.true.i348.i.i.i:                         ; preds = %do.end.i346.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %427 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i347.i.i.i = icmp eq i32 %427, 0
  br i1 %tobool6.not.i347.i.i.i, label %do.end15.i349.i.i.i, label %hlock_class.exit353.i.i.i

do.end15.i349.i.i.i:                              ; preds = %land.lhs.true.i348.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit353.i.i.i

if.end33.i351.i.i.i:                              ; preds = %land.rhs52.i.i.i
  %add.ptr.i350.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i337.i.i.i
  br label %hlock_class.exit353.i.i.i

hlock_class.exit353.i.i.i:                        ; preds = %if.end33.i351.i.i.i, %do.end15.i349.i.i.i, %land.lhs.true.i348.i.i.i, %do.end.i346.i.i.i, %if.then.i343.i.i.i
  %retval.0.i352.i.i.i = phi ptr [ %add.ptr.i350.i.i.i, %if.end33.i351.i.i.i ], [ null, %do.end15.i349.i.i.i ], [ null, %land.lhs.true.i348.i.i.i ], [ null, %do.end.i346.i.i.i ], [ null, %if.then.i343.i.i.i ]
  %key54.i.i.i = getelementptr inbounds %struct.lock_class, ptr %retval.0.i352.i.i.i, i32 0, i32 4
  %428 = ptrtoint ptr %key54.i.i.i to i32
  call void @__asan_load4_noabort(i32 %428)
  %429 = load ptr, ptr %key54.i.i.i, align 4
  %tobool55.not.i.i.i = icmp eq ptr %429, null
  br i1 %tobool55.not.i.i.i, label %land.rhs65.i.i.i, label %cleanup.i.i

land.rhs65.i.i.i:                                 ; preds = %hlock_class.exit353.i.i.i
  %.b290291.i.i.i = load i1, ptr @check_prev_add.__already_done.560, align 1
  br i1 %.b290291.i.i.i, label %cleanup.i.i, label %if.then76.i.i.i, !prof !1500

if.then76.i.i.i:                                  ; preds = %land.rhs65.i.i.i
  store i1 true, ptr @check_prev_add.__already_done.560, align 1
  %call90.i.i.i = call fastcc ptr @hlock_class(ptr noundef %add.ptr186) #28
  %call91.i.i.i = call fastcc ptr @hlock_class(ptr noundef %add.ptr186) #28
  %name92.i.i.i = getelementptr inbounds %struct.lock_class, ptr %call91.i.i.i, i32 0, i32 10
  %430 = ptrtoint ptr %name92.i.i.i to i32
  call void @__asan_load4_noabort(i32 %430)
  %431 = load ptr, ptr %name92.i.i.i, align 4
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3049, i32 noundef 9, ptr noundef nonnull @.str.559, ptr noundef %call90.i.i.i, ptr noundef %431) #28
  br label %cleanup.i.i

if.end114.i.i.i:                                  ; preds = %hlock_class.exit315.i.i.i
  %call115.i.i.i = call fastcc i32 @check_noncircular(ptr noundef %add.ptr186, ptr noundef %add.ptr12.i.i, ptr noundef nonnull %trace.i.i) #28, !range !1545
  %432 = icmp slt i32 %call115.i.i.i, 1
  br i1 %432, label %check_prevs_add.exit.thread.i, label %if.end124.i.i.i, !prof !1501

if.end124.i.i.i:                                  ; preds = %if.end114.i.i.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %target_entry1.i.i.i.i) #28
  %433 = ptrtoint ptr %target_entry1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %433)
  store ptr inttoptr (i32 -1 to ptr), ptr %target_entry1.i.i.i.i, align 4, !annotation !1502
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %target_entry.i.i.i.i) #28
  %434 = ptrtoint ptr %target_entry.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %434)
  store ptr inttoptr (i32 -1 to ptr), ptr %target_entry.i.i.i.i, align 4, !annotation !1502
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %this.i.i.i.i) #28
  %435 = call ptr @memset(ptr %this.i.i.i.i, i32 255, i32 24)
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %that.i.i.i.i) #28
  %436 = call ptr @memset(ptr %that.i.i.i.i, i32 255, i32 28)
  %437 = ptrtoint ptr %check.i.i to i32
  call void @__asan_load4_noabort(i32 %437)
  %bf.load.i.i.i.i.i.i = load i32, ptr %check.i.i, align 8
  %bf.lshr.i.i.i.i.i.i = lshr i32 %bf.load.i.i.i.i.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i.i.i.i.i.i = lshr i32 %bf.load.i.i.i.i.i.i, 24
  %arrayidx.i.i.i.i.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i.i.i.i.i.i
  %438 = ptrtoint ptr %arrayidx.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %438)
  %439 = load volatile i32, ptr %arrayidx.i.i.i.i.i.i.i, align 4
  %and.i.i.i.i.i.i.i = and i32 %bf.lshr.i.i.i.i.i.i, 31
  %440 = shl nuw i32 1, %and.i.i.i.i.i.i.i
  %441 = and i32 %440, %439
  %tobool.not.i.i.i.i.i.i = icmp eq i32 %441, 0
  br i1 %tobool.not.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i, label %if.end33.i.i.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %if.end124.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %442 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i.i.i.i.i.i = icmp eq i32 %442, 0
  br i1 %tobool2.not.i.i.i.i.i.i, label %do.end.i.i.i.i.i.i, label %bfs_init_rootb.exit.i.i.i.i

do.end.i.i.i.i.i.i:                               ; preds = %if.then.i.i.i.i.i.i
  %call4.i.i.i.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i.i.i.i.i.i = icmp eq i32 %call4.i.i.i.i.i.i, 0
  br i1 %tobool5.not.i.i.i.i.i.i, label %bfs_init_rootb.exit.i.i.i.i, label %land.lhs.true.i.i.i.i.i.i

land.lhs.true.i.i.i.i.i.i:                        ; preds = %do.end.i.i.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %443 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i.i.i.i.i.i = icmp eq i32 %443, 0
  br i1 %tobool6.not.i.i.i.i.i.i, label %do.end15.i.i.i.i.i.i, label %bfs_init_rootb.exit.i.i.i.i

do.end15.i.i.i.i.i.i:                             ; preds = %land.lhs.true.i.i.i.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %bfs_init_rootb.exit.i.i.i.i

if.end33.i.i.i.i.i.i:                             ; preds = %if.end124.i.i.i
  %add.ptr.i.i.i.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i.i.i.i.i.i
  br label %bfs_init_rootb.exit.i.i.i.i

bfs_init_rootb.exit.i.i.i.i:                      ; preds = %if.end33.i.i.i.i.i.i, %do.end15.i.i.i.i.i.i, %land.lhs.true.i.i.i.i.i.i, %do.end.i.i.i.i.i.i, %if.then.i.i.i.i.i.i
  %retval.0.i.i.i.i.i.i = phi ptr [ %add.ptr.i.i.i.i.i.i, %if.end33.i.i.i.i.i.i ], [ null, %do.end15.i.i.i.i.i.i ], [ null, %land.lhs.true.i.i.i.i.i.i ], [ null, %do.end.i.i.i.i.i.i ], [ null, %if.then.i.i.i.i.i.i ]
  %444 = ptrtoint ptr %381 to i32
  call void @__asan_store4_noabort(i32 %444)
  store ptr %retval.0.i.i.i.i.i.i, ptr %381, align 4
  %445 = ptrtoint ptr %383 to i32
  call void @__asan_store4_noabort(i32 %445)
  store ptr null, ptr %383, align 4
  %446 = ptrtoint ptr %check.i.i to i32
  call void @__asan_load4_noabort(i32 %446)
  %bf.load.i.i.i.i75.i = load i32, ptr %check.i.i, align 8
  %447 = and i32 %bf.load.i.i.i.i75.i, 49152
  %cmp.i.i.i.i76.i = icmp ne i32 %447, 0
  %conv1.i.i.i.i.i = zext i1 %cmp.i.i.i.i76.i to i8
  %448 = ptrtoint ptr %382 to i32
  call void @__asan_store1_noabort(i32 %448)
  store i8 %conv1.i.i.i.i.i, ptr %382, align 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %449 = load i32, ptr @oops_in_progress, align 4
  %tobool.not.i.i213.i.i.i.i = icmp eq i32 %449, 0
  br i1 %tobool.not.i.i213.i.i.i.i, label %land.lhs.true.i.i215.i.i.i.i, label %__cq_enqueue.exit.i.i.i.i.i

land.lhs.true.i.i215.i.i.i.i:                     ; preds = %bfs_init_rootb.exit.i.i.i.i
  %450 = load ptr, ptr @__owner, align 4
  %451 = call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i214.i.i.i.i = and i32 %451, -16384
  %452 = inttoptr i32 %and.i.i.i214.i.i.i.i to ptr
  %task.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %452, i32 0, i32 2
  %453 = ptrtoint ptr %task.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %453)
  %454 = load ptr, ptr %task.i.i.i.i.i.i, align 8
  %cmp.not.i.i.i.i.i.i = icmp eq ptr %450, %454
  br i1 %cmp.not.i.i.i.i.i.i, label %__cq_enqueue.exit.i.i.i.i.i, label %do.end.i.i217.i.i.i.i, !prof !1500

do.end.i.i217.i.i.i.i:                            ; preds = %land.lhs.true.i.i215.i.i.i.i
  %call3.i.i216.i.i.i.i = call i32 @debug_locks_off() #28
  %tobool4.not.i.i.i.i.i.i = icmp eq i32 %call3.i.i216.i.i.i.i, 0
  br i1 %tobool4.not.i.i.i.i.i.i, label %__cq_enqueue.exit.i.i.i.i.i, label %land.lhs.true5.i.i.i.i.i.i

land.lhs.true5.i.i.i.i.i.i:                       ; preds = %do.end.i.i217.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %455 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i.i218.i.i.i.i = icmp eq i32 %455, 0
  br i1 %tobool6.not.i.i218.i.i.i.i, label %do.end19.i.i.i.i.i.i, label %__cq_enqueue.exit.i.i.i.i.i

do.end19.i.i.i.i.i.i:                             ; preds = %land.lhs.true5.i.i.i.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 131, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.147) #28
  br label %__cq_enqueue.exit.i.i.i.i.i

__cq_enqueue.exit.i.i.i.i.i:                      ; preds = %do.end19.i.i.i.i.i.i, %land.lhs.true5.i.i.i.i.i.i, %do.end.i.i217.i.i.i.i, %land.lhs.true.i.i215.i.i.i.i, %bfs_init_rootb.exit.i.i.i.i
  store i32 0, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 1), align 4
  %456 = load i32, ptr @lockdep_dependency_gen_id, align 4
  %inc.i.i.i.i.i.i = add i32 %456, 1
  store i32 %inc.i.i.i.i.i.i, ptr @lockdep_dependency_gen_id, align 4
  store ptr %this.i.i.i.i, ptr @lock_cq, align 4
  store i32 1, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 2), align 4
  br label %while.cond.i.i.i.i.i.outer

while.cond.i.i.i.i.i.outer:                       ; preds = %while.cond.i.i.i.i.i.outer.backedge, %__cq_enqueue.exit.i.i.i.i.i
  %usage_mask.0.i.i.i.i.ph = phi i32 [ 0, %__cq_enqueue.exit.i.i.i.i.i ], [ %or4.i.i.i.i.i, %while.cond.i.i.i.i.i.outer.backedge ]
  %lock.0.i.i.i.i.i.ph = phi ptr [ null, %__cq_enqueue.exit.i.i.i.i.i ], [ %lock.1.i.i.i.i.i, %while.cond.i.i.i.i.i.outer.backedge ]
  br label %while.cond.i.i.i.i.i

while.cond.i.i.i.i.i:                             ; preds = %while.cond.i.i.i.i.i.backedge, %while.cond.i.i.i.i.i.outer
  %lock.0.i.i.i.i.i = phi ptr [ %lock.0.i.i.i.i.i.ph, %while.cond.i.i.i.i.i.outer ], [ %lock.1.i.i.i.i.i, %while.cond.i.i.i.i.i.backedge ]
  %tobool.not.i110.i.i.i.i.i = icmp eq ptr %lock.0.i.i.i.i.i, null
  br i1 %tobool.not.i110.i.i.i.i.i, label %lor.rhs.i.i.i.i.i, label %lor.lhs.false.i.i.i.i.i.i

lor.lhs.false.i.i.i.i.i.i:                        ; preds = %while.cond.i.i.i.i.i
  %parent.i.i219.i.i.i.i = getelementptr inbounds %struct.lock_list, ptr %lock.0.i.i.i.i.i, i32 0, i32 7
  %457 = ptrtoint ptr %parent.i.i219.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %457)
  %458 = load ptr, ptr %parent.i.i219.i.i.i.i, align 4
  %tobool1.not.i.i.i.i.i.i = icmp eq ptr %458, null
  br i1 %tobool1.not.i.i.i.i.i.i, label %lor.rhs.i.i.i.i.i, label %if.end.i112.i.i.i.i.i

if.end.i112.i.i.i.i.i:                            ; preds = %lor.lhs.false.i.i.i.i.i.i
  %class.i.i.i.i.i.i.i = getelementptr inbounds %struct.lock_list, ptr %458, i32 0, i32 1
  %459 = ptrtoint ptr %class.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %459)
  %460 = load ptr, ptr %class.i.i.i.i.i.i.i, align 4
  %add.ptr.i.i.i.i.i.i.i = getelementptr i8, ptr %460, i32 24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__next.i.i.i.i.i.i)
  %461 = ptrtoint ptr %lock.0.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %461)
  %462 = load volatile ptr, ptr %lock.0.i.i.i.i.i, align 4
  %463 = ptrtoint ptr %__next.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %463)
  store ptr %462, ptr %__next.i.i.i.i.i.i, align 4
  %cmp.not.i111.i.i.i.i.i = icmp eq ptr %462, %add.ptr.i.i.i.i.i.i.i
  br i1 %cmp.not.i111.i.i.i.i.i, label %__bfs_next.exit.thread135.i.i.i.i.i, label %__bfs_next.exit.i.i.i.i.i, !prof !1501

__bfs_next.exit.thread135.i.i.i.i.i:              ; preds = %if.end.i112.i.i.i.i.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__next.i.i.i.i.i.i)
  br label %lor.rhs.i.i.i.i.i

__bfs_next.exit.i.i.i.i.i:                        ; preds = %if.end.i112.i.i.i.i.i
  %464 = ptrtoint ptr %__next.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %464)
  %__next.i.i.i.i.i.i.0.__next.i.i.i.i.i.i.0.__next.i.i.i.i.i.i.0.__next.i.i.i.i.i.i.0.__next.i.i.i.i.i.0.__next.i.i.i.i.i.0.__next.i.i.i.i.0.__next.i.i.i.i.0.__next.i.i.i.0.__next.i.i.i.0.__next.i.i.0.__next.i.i.0.__next.i.0.__next.i.0.__next.0.__next.0.__next.0.12.i.i.i.i.i.i = load volatile ptr, ptr %__next.i.i.i.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__next.i.i.i.i.i.i)
  %tobool.not.i220.i.i.i.i = icmp eq ptr %__next.i.i.i.i.i.i.0.__next.i.i.i.i.i.i.0.__next.i.i.i.i.i.i.0.__next.i.i.i.i.i.i.0.__next.i.i.i.i.i.0.__next.i.i.i.i.i.0.__next.i.i.i.i.0.__next.i.i.i.i.0.__next.i.i.i.0.__next.i.i.i.0.__next.i.i.0.__next.i.i.0.__next.i.0.__next.i.0.__next.0.__next.0.__next.0.12.i.i.i.i.i.i, null
  br i1 %tobool.not.i220.i.i.i.i, label %lor.rhs.i.i.i.i.i, label %while.body.i.i.i.i.i

lor.rhs.i.i.i.i.i:                                ; preds = %__bfs_next.exit.i.i.i.i.i, %__bfs_next.exit.thread135.i.i.i.i.i, %lor.lhs.false.i.i.i.i.i.i, %while.cond.i.i.i.i.i
  %465 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 1), align 4
  %466 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 2), align 4
  %cmp.i.not.i114.i.i.i.i.i = icmp eq i32 %465, %466
  br i1 %cmp.i.not.i114.i.i.i.i.i, label %if.end.i.i.i.i, label %__cq_dequeue.exit.i.i.i.i.i

__cq_dequeue.exit.i.i.i.i.i:                      ; preds = %lor.rhs.i.i.i.i.i
  %arrayidx.i115.i.i.i.i.i = getelementptr [4096 x ptr], ptr @lock_cq, i32 0, i32 %465
  %467 = ptrtoint ptr %arrayidx.i115.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %467)
  %468 = load ptr, ptr %arrayidx.i115.i.i.i.i.i, align 4
  %add.i116.i.i.i.i.i = add i32 %465, 1
  %and.i117.i.i.i.i.i = and i32 %add.i116.i.i.i.i.i, 4095
  store i32 %and.i117.i.i.i.i.i, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 1), align 4
  %tobool5.not.i221.i.i.i.i = icmp eq ptr %468, null
  br i1 %tobool5.not.i221.i.i.i.i, label %if.end.i.i.i.i, label %while.body.i.i.i.i.i

while.body.i.i.i.i.i:                             ; preds = %__cq_dequeue.exit.i.i.i.i.i, %__bfs_next.exit.i.i.i.i.i
  %lock.1.i.i.i.i.i = phi ptr [ %__next.i.i.i.i.i.i.0.__next.i.i.i.i.i.i.0.__next.i.i.i.i.i.i.0.__next.i.i.i.i.i.i.0.__next.i.i.i.i.i.0.__next.i.i.i.i.i.0.__next.i.i.i.i.0.__next.i.i.i.i.0.__next.i.i.i.0.__next.i.i.i.0.__next.i.i.0.__next.i.i.0.__next.i.0.__next.i.0.__next.0.__next.0.__next.0.12.i.i.i.i.i.i, %__bfs_next.exit.i.i.i.i.i ], [ %468, %__cq_dequeue.exit.i.i.i.i.i ]
  %class.i222.i.i.i.i = getelementptr inbounds %struct.lock_list, ptr %lock.1.i.i.i.i.i, i32 0, i32 1
  %469 = ptrtoint ptr %class.i222.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %469)
  %470 = load ptr, ptr %class.i222.i.i.i.i, align 4
  %tobool6.not.i.i.i.i77.i = icmp eq ptr %470, null
  br i1 %tobool6.not.i.i.i.i77.i, label %if.then.i354.i.i.i, label %if.end.i.i.i.i.i

if.end.i.i.i.i.i:                                 ; preds = %while.body.i.i.i.i.i
  %dep_gen_id.i.i.i.i.i.i = getelementptr inbounds %struct.lock_class, ptr %470, i32 0, i32 6
  %471 = ptrtoint ptr %dep_gen_id.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %471)
  %472 = load i32, ptr %dep_gen_id.i.i.i.i.i.i, align 4
  %473 = load i32, ptr @lockdep_dependency_gen_id, align 4
  %cmp.i.not.i.i.i.i.i = icmp eq i32 %472, %473
  br i1 %cmp.i.not.i.i.i.i.i, label %while.cond.i.i.i.i.i.backedge, label %if.else.i223.i.i.i.i

if.else.i223.i.i.i.i:                             ; preds = %if.end.i.i.i.i.i
  %474 = ptrtoint ptr %dep_gen_id.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %474)
  store i32 %473, ptr %dep_gen_id.i.i.i.i.i.i, align 4
  %parent.i.i.i.i.i = getelementptr inbounds %struct.lock_list, ptr %lock.1.i.i.i.i.i, i32 0, i32 7
  %475 = ptrtoint ptr %parent.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %475)
  %476 = load ptr, ptr %parent.i.i.i.i.i, align 4
  %tobool11.not.i.i.i.i.i = icmp eq ptr %476, null
  br i1 %tobool11.not.i.i.i.i.i, label %if.end29.i.i.i.i.i, label %if.then12.i.i.i.i.i

if.then12.i.i.i.i.i:                              ; preds = %if.else.i223.i.i.i.i
  %dep13.i.i.i.i.i = getelementptr inbounds %struct.lock_list, ptr %lock.1.i.i.i.i.i, i32 0, i32 5
  %477 = ptrtoint ptr %dep13.i.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %477)
  %478 = load i8, ptr %dep13.i.i.i.i.i, align 2
  %only_xr.i.i.i.i.i = getelementptr inbounds %struct.lock_list, ptr %476, i32 0, i32 6
  %479 = ptrtoint ptr %only_xr.i.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %479)
  %480 = load i8, ptr %only_xr.i.i.i.i.i, align 1
  %tobool15.not.i.i.i.i.i = icmp eq i8 %480, 0
  %481 = and i8 %478, -6
  %spec.select.i.i.i.i.i = select i1 %tobool15.not.i.i.i.i.i, i8 %478, i8 %481
  %tobool20.not.i.i.i.i.i = icmp eq i8 %spec.select.i.i.i.i.i, 0
  br i1 %tobool20.not.i.i.i.i.i, label %while.cond.i.i.i.i.i.backedge, label %cleanup.thread.i.i.i.i.i

cleanup.thread.i.i.i.i.i:                         ; preds = %if.then12.i.i.i.i.i
  %482 = and i8 %spec.select.i.i.i.i.i, 12
  %tobool25.not.i.i.i.i.i = icmp eq i8 %482, 0
  %conv26.i.i.i.i.i = zext i1 %tobool25.not.i.i.i.i.i to i8
  %only_xr27.i.i.i.i.i = getelementptr inbounds %struct.lock_list, ptr %lock.1.i.i.i.i.i, i32 0, i32 6
  %483 = ptrtoint ptr %only_xr27.i.i.i.i.i to i32
  call void @__asan_store1_noabort(i32 %483)
  store i8 %conv26.i.i.i.i.i, ptr %only_xr27.i.i.i.i.i, align 1
  br label %if.end29.i.i.i.i.i

if.end29.i.i.i.i.i:                               ; preds = %cleanup.thread.i.i.i.i.i, %if.else.i223.i.i.i.i
  %484 = ptrtoint ptr %class.i222.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %484)
  %485 = load ptr, ptr %class.i222.i.i.i.i, align 4
  %lock_type.i.i.i.i.i = getelementptr inbounds %struct.lock_class, ptr %485, i32 0, i32 13
  %486 = ptrtoint ptr %lock_type.i.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %486)
  %487 = load i8, ptr %lock_type.i.i.i.i.i, align 2
  %cmp.i235.i.i.i.i = icmp eq i8 %487, 1
  br i1 %cmp.i235.i.i.i.i, label %if.then.i.i.i.i78.i, label %if.end37.i.i.i.i.i

if.then.i.i.i.i78.i:                              ; preds = %if.end29.i.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %488 = load i32, ptr @oops_in_progress, align 4
  %tobool.not.i236.i.i.i.i = icmp eq i32 %488, 0
  br i1 %tobool.not.i236.i.i.i.i, label %land.lhs.true.i.i.i.i79.i, label %while.cond.i.i.i.i.i.backedge

land.lhs.true.i.i.i.i79.i:                        ; preds = %if.then.i.i.i.i78.i
  %wait_type_inner.i.i.i.i.i = getelementptr inbounds %struct.lock_class, ptr %485, i32 0, i32 11
  %489 = ptrtoint ptr %wait_type_inner.i.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %489)
  %490 = load i8, ptr %wait_type_inner.i.i.i.i.i, align 4
  %cmp5.i.i.i.i.i = icmp ult i8 %490, 3
  br i1 %cmp5.i.i.i.i.i, label %do.end.i237.i.i.i.i, label %while.cond.i.i.i.i.i.backedge, !prof !1501

while.cond.i.i.i.i.i.backedge:                    ; preds = %land.lhs.true.i.i.i.i79.i, %if.then.i.i.i.i78.i, %if.then12.i.i.i.i.i, %if.end.i.i.i.i.i
  br label %while.cond.i.i.i.i.i

do.end.i237.i.i.i.i:                              ; preds = %land.lhs.true.i.i.i.i79.i
  %call.i.i.i.i.i = call i32 @debug_locks_off() #28
  %tobool10.not.i.i.i.i.i = icmp eq i32 %call.i.i.i.i.i, 0
  br i1 %tobool10.not.i.i.i.i.i, label %if.end37.i.i.i.i.i, label %land.lhs.true11.i.i.i.i.i

land.lhs.true11.i.i.i.i.i:                        ; preds = %do.end.i237.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %491 = load i32, ptr @debug_locks_silent, align 4
  %tobool12.not.i.i.i.i.i = icmp eq i32 %491, 0
  br i1 %tobool12.not.i.i.i.i.i, label %do.end25.i.i.i.i.i, label %if.end37.i.i.i.i.i

do.end25.i.i.i.i.i:                               ; preds = %land.lhs.true11.i.i.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2248, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.255) #28
  br label %if.end37.i.i.i.i.i

if.end37.i.i.i.i.i:                               ; preds = %do.end25.i.i.i.i.i, %land.lhs.true11.i.i.i.i.i, %do.end.i237.i.i.i.i, %if.end29.i.i.i.i.i
  %only_xr.i230.i.i.i.i = getelementptr inbounds %struct.lock_list, ptr %lock.1.i.i.i.i.i, i32 0, i32 6
  %492 = ptrtoint ptr %only_xr.i230.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %492)
  %493 = load i8, ptr %only_xr.i230.i.i.i.i, align 1
  %tobool.not.i231.i.i.i.i = icmp eq i8 %493, 0
  %494 = ptrtoint ptr %class.i222.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %494)
  %495 = load ptr, ptr %class.i222.i.i.i.i, align 4
  %usage_mask.i.i.i.i.i = getelementptr inbounds %struct.lock_class, ptr %495, i32 0, i32 7
  %496 = ptrtoint ptr %usage_mask.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %496)
  %497 = load i32, ptr %usage_mask.i.i.i.i.i, align 4
  %and.i233.i.i.i.i = and i32 %497, 85
  %and.sink.i.i.i.i.i = select i1 %tobool.not.i231.i.i.i.i, i32 %497, i32 %and.i233.i.i.i.i
  %or4.i.i.i.i.i = or i32 %and.sink.i.i.i.i.i, %usage_mask.0.i.i.i.i.ph
  %add.ptr.i.i224.i.i.i.i = getelementptr i8, ptr %495, i32 24
  %call39.i.i.i.i.i = call i32 @rcu_read_lock_any_held() #28
  %tobool40.not.i.i.i.i.i = icmp eq i32 %call39.i.i.i.i.i, 0
  br i1 %tobool40.not.i.i.i.i.i, label %land.lhs.true41.i.i.i.i.i, label %do.end.i225.i.i.i.i

land.lhs.true41.i.i.i.i.i:                        ; preds = %if.end37.i.i.i.i.i
  %call42.i.i.i.i.i = call i32 @debug_lockdep_rcu_enabled() #28
  %tobool43.not.i.i.i.i.i = icmp eq i32 %call42.i.i.i.i.i, 0
  br i1 %tobool43.not.i.i.i.i.i, label %do.end.i225.i.i.i.i, label %land.lhs.true44.i.i.i.i.i

land.lhs.true44.i.i.i.i.i:                        ; preds = %land.lhs.true41.i.i.i.i.i
  %.b108.i.i.i.i.i = load i1, ptr @__bfs.__warned, align 1
  br i1 %.b108.i.i.i.i.i, label %do.end.i225.i.i.i.i, label %if.then46.i.i.i.i.i

if.then46.i.i.i.i.i:                              ; preds = %land.lhs.true44.i.i.i.i.i
  store i1 true, ptr @__bfs.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1770, ptr noundef nonnull @.str.1) #28
  br label %do.end.i225.i.i.i.i

do.end.i225.i.i.i.i:                              ; preds = %if.then46.i.i.i.i.i, %land.lhs.true44.i.i.i.i.i, %land.lhs.true41.i.i.i.i.i, %if.end37.i.i.i.i.i
  %498 = ptrtoint ptr %add.ptr.i.i224.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %498)
  %entry1.0146.i.i.i.i.i = load volatile ptr, ptr %add.ptr.i.i224.i.i.i.i, align 4
  %cmp.not147.i.i.i.i.i = icmp eq ptr %entry1.0146.i.i.i.i.i, %add.ptr.i.i224.i.i.i.i
  br i1 %cmp.not147.i.i.i.i.i, label %while.cond.i.i.i.i.i.outer.backedge, label %for.body.i226.i.i.i.i

while.cond.i.i.i.i.i.outer.backedge:              ; preds = %for.inc.i228.i.i.i.i, %do.end.i225.i.i.i.i
  br label %while.cond.i.i.i.i.i.outer

for.body.i226.i.i.i.i:                            ; preds = %for.inc.i228.i.i.i.i, %do.end.i225.i.i.i.i
  %entry1.0149.i.i.i.i.i = phi ptr [ %entry1.0.i.i.i.i.i, %for.inc.i228.i.i.i.i ], [ %entry1.0146.i.i.i.i.i, %do.end.i225.i.i.i.i ]
  %first.0.off0148.i.i.i.i.i = phi i1 [ false, %for.inc.i228.i.i.i.i ], [ true, %do.end.i225.i.i.i.i ]
  %parent1.i.i.i.i.i.i = getelementptr inbounds %struct.lock_list, ptr %entry1.0149.i.i.i.i.i, i32 0, i32 7
  %499 = ptrtoint ptr %parent1.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %499)
  store ptr %lock.1.i.i.i.i.i, ptr %parent1.i.i.i.i.i.i, align 4
  br i1 %first.0.off0148.i.i.i.i.i, label %if.end56.i.i.i.i.i, label %for.inc.i228.i.i.i.i

if.end56.i.i.i.i.i:                               ; preds = %for.body.i226.i.i.i.i
  %500 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 2), align 4
  %add.i.i123.i.i.i.i.i = add i32 %500, 1
  %and.i.i124.i.i.i.i.i = and i32 %add.i.i123.i.i.i.i.i, 4095
  %501 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 1), align 4
  %cmp.i.not.i125.i.i.i.i.i = icmp eq i32 %and.i.i124.i.i.i.i.i, %501
  br i1 %cmp.i.not.i125.i.i.i.i.i, label %if.then.i354.i.i.i, label %if.end60.i.i.i.i.i

if.end60.i.i.i.i.i:                               ; preds = %if.end56.i.i.i.i.i
  %arrayidx.i126.i.i.i.i.i = getelementptr [4096 x ptr], ptr @lock_cq, i32 0, i32 %500
  %502 = ptrtoint ptr %arrayidx.i126.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %502)
  store ptr %entry1.0149.i.i.i.i.i, ptr %arrayidx.i126.i.i.i.i.i, align 4
  %503 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 2), align 4
  %add.i127.i.i.i.i.i = add i32 %503, 1
  %and.i128.i.i.i.i.i = and i32 %add.i127.i.i.i.i.i, 4095
  store i32 %and.i128.i.i.i.i.i, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 2), align 4
  %504 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 1), align 4
  %sub.i.i227.i.i.i.i = sub i32 %add.i127.i.i.i.i.i, %504
  %and.i132.i.i.i.i.i = and i32 %sub.i.i227.i.i.i.i, 4095
  %505 = load i32, ptr @max_bfs_queue_depth, align 4
  %cmp62.i.i.i.i.i = icmp ult i32 %505, %and.i132.i.i.i.i.i
  br i1 %cmp62.i.i.i.i.i, label %if.then64.i.i.i.i.i, label %for.inc.i228.i.i.i.i

if.then64.i.i.i.i.i:                              ; preds = %if.end60.i.i.i.i.i
  store i32 %and.i132.i.i.i.i.i, ptr @max_bfs_queue_depth, align 4
  br label %for.inc.i228.i.i.i.i

for.inc.i228.i.i.i.i:                             ; preds = %if.then64.i.i.i.i.i, %if.end60.i.i.i.i.i, %for.body.i226.i.i.i.i
  %506 = ptrtoint ptr %entry1.0149.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %506)
  %entry1.0.i.i.i.i.i = load volatile ptr, ptr %entry1.0149.i.i.i.i.i, align 4
  %cmp.not.i.i.i.i.i = icmp eq ptr %entry1.0.i.i.i.i.i, %add.ptr.i.i224.i.i.i.i
  br i1 %cmp.not.i.i.i.i.i, label %while.cond.i.i.i.i.i.outer.backedge, label %for.body.i226.i.i.i.i

if.then.i354.i.i.i:                               ; preds = %if.end56.i.i.i.i.i, %while.body.i.i.i.i.i
  %retval.0.i229.ph.i.i.i.i = phi i32 [ -1, %if.end56.i.i.i.i.i ], [ -2, %while.body.i.i.i.i.i ]
  call fastcc void @print_bfs_bug(i32 noundef %retval.0.i229.ph.i.i.i.i) #28
  br label %check_irq_usage.exit.i.i.i

if.end.i.i.i.i:                                   ; preds = %__cq_dequeue.exit.i.i.i.i.i, %lor.rhs.i.i.i.i.i
  %and.i.i.i80.i = and i32 %usage_mask.0.i.i.i.i.ph, 51
  %tobool.not.i355.i.i.i = icmp eq i32 %and.i.i.i80.i, 0
  br i1 %tobool.not.i355.i.i.i, label %if.end128.i.i.i, label %if.end3.i.i.i.i

if.end3.i.i.i.i:                                  ; preds = %if.end.i.i.i.i
  %and1.i.i.i.i.i.i = shl nuw nsw i32 %and.i.i.i80.i, 2
  %and.i.i356.i.i.i = shl nuw nsw i32 %and.i.i.i80.i, 1
  %shr.i.i.i.i.i = and i32 %and.i.i356.i.i.i, 68
  %or.i.i.i.i81.i = or i32 %shr.i.i.i.i.i, %and1.i.i.i.i.i.i
  %and1.i.i.i.i.i = shl nuw nsw i32 %or.i.i.i.i81.i, 1
  %shl.i.i.i.i82.i = and i32 %and1.i.i.i.i.i, 136
  %or2.i.i.i.i.i = or i32 %shl.i.i.i.i82.i, %or.i.i.i.i81.i
  %507 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %507)
  %bf.load.i.i145.i.i.i.i = load i32, ptr %class_idx243, align 8
  %bf.lshr.i.i146.i.i.i.i = lshr i32 %bf.load.i.i145.i.i.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i.i147.i.i.i.i = lshr i32 %bf.load.i.i145.i.i.i.i, 24
  %arrayidx.i.i.i148.i.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i.i147.i.i.i.i
  %508 = ptrtoint ptr %arrayidx.i.i.i148.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %508)
  %509 = load volatile i32, ptr %arrayidx.i.i.i148.i.i.i.i, align 4
  %and.i.i.i149.i.i.i.i = and i32 %bf.lshr.i.i146.i.i.i.i, 31
  %510 = shl nuw i32 1, %and.i.i.i149.i.i.i.i
  %511 = and i32 %510, %509
  %tobool.not.i.i150.i.i.i.i = icmp eq i32 %511, 0
  br i1 %tobool.not.i.i150.i.i.i.i, label %if.then.i.i152.i.i.i.i, label %if.end33.i.i160.i.i.i.i

if.then.i.i152.i.i.i.i:                           ; preds = %if.end3.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %512 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i.i151.i.i.i.i = icmp eq i32 %512, 0
  br i1 %tobool2.not.i.i151.i.i.i.i, label %do.end.i.i155.i.i.i.i, label %bfs_init_root.exit.i.i.i.i

do.end.i.i155.i.i.i.i:                            ; preds = %if.then.i.i152.i.i.i.i
  %call4.i.i153.i.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i.i154.i.i.i.i = icmp eq i32 %call4.i.i153.i.i.i.i, 0
  br i1 %tobool5.not.i.i154.i.i.i.i, label %bfs_init_root.exit.i.i.i.i, label %land.lhs.true.i.i157.i.i.i.i

land.lhs.true.i.i157.i.i.i.i:                     ; preds = %do.end.i.i155.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %513 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i.i156.i.i.i.i = icmp eq i32 %513, 0
  br i1 %tobool6.not.i.i156.i.i.i.i, label %do.end15.i.i158.i.i.i.i, label %bfs_init_root.exit.i.i.i.i

do.end15.i.i158.i.i.i.i:                          ; preds = %land.lhs.true.i.i157.i.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %bfs_init_root.exit.i.i.i.i

if.end33.i.i160.i.i.i.i:                          ; preds = %if.end3.i.i.i.i
  %add.ptr.i.i159.i.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i.i146.i.i.i.i
  br label %bfs_init_root.exit.i.i.i.i

bfs_init_root.exit.i.i.i.i:                       ; preds = %if.end33.i.i160.i.i.i.i, %do.end15.i.i158.i.i.i.i, %land.lhs.true.i.i157.i.i.i.i, %do.end.i.i155.i.i.i.i, %if.then.i.i152.i.i.i.i
  %retval.0.i.i161.i.i.i.i = phi ptr [ %add.ptr.i.i159.i.i.i.i, %if.end33.i.i160.i.i.i.i ], [ null, %do.end15.i.i158.i.i.i.i ], [ null, %land.lhs.true.i.i157.i.i.i.i ], [ null, %do.end.i.i155.i.i.i.i ], [ null, %if.then.i.i152.i.i.i.i ]
  %514 = ptrtoint ptr %384 to i32
  call void @__asan_store4_noabort(i32 %514)
  store ptr %retval.0.i.i161.i.i.i.i, ptr %384, align 4
  %515 = ptrtoint ptr %386 to i32
  call void @__asan_store4_noabort(i32 %515)
  store ptr null, ptr %386, align 4
  %516 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %516)
  %bf.load.i165.i.i.i.i = load i32, ptr %class_idx243, align 8
  %517 = and i32 %bf.load.i165.i.i.i.i, 49152
  %cmp.i166.i.i.i.i = icmp eq i32 %517, 32768
  %conv1.i167.i.i.i.i = zext i1 %cmp.i166.i.i.i.i to i8
  %518 = ptrtoint ptr %385 to i32
  call void @__asan_store1_noabort(i32 %518)
  store i8 %conv1.i167.i.i.i.i, ptr %385, align 1
  %call5.i.i.i.i = call fastcc i32 @find_usage_forwards(ptr noundef nonnull %that.i.i.i.i, i32 noundef %or2.i.i.i.i.i, ptr noundef nonnull %target_entry1.i.i.i.i) #28, !range !1545
  %cmp.i168.i.i.i.i = icmp slt i32 %call5.i.i.i.i, 0
  br i1 %cmp.i168.i.i.i.i, label %if.then7.i.i.i.i, label %if.end8.i.i.i.i

if.then7.i.i.i.i:                                 ; preds = %bfs_init_root.exit.i.i.i.i
  call fastcc void @print_bfs_bug(i32 noundef %call5.i.i.i.i) #28
  br label %check_irq_usage.exit.i.i.i

if.end8.i.i.i.i:                                  ; preds = %bfs_init_root.exit.i.i.i.i
  %cmp.i357.i.i.i = icmp eq i32 %call5.i.i.i.i, 1
  br i1 %cmp.i357.i.i.i, label %if.end128.i.i.i, label %if.end10.i.i.i.i

if.end10.i.i.i.i:                                 ; preds = %if.end8.i.i.i.i
  %519 = ptrtoint ptr %target_entry1.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %519)
  %520 = load ptr, ptr %target_entry1.i.i.i.i, align 4
  %class.i.i.i.i = getelementptr inbounds %struct.lock_list, ptr %520, i32 0, i32 1
  %521 = ptrtoint ptr %class.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %521)
  %522 = load ptr, ptr %class.i.i.i.i, align 4
  %usage_mask11.i.i.i.i = getelementptr inbounds %struct.lock_class, ptr %522, i32 0, i32 7
  %523 = ptrtoint ptr %usage_mask11.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %523)
  %524 = load i32, ptr %usage_mask11.i.i.i.i, align 4
  %and12.i.i.i.i = lshr i32 %524, 2
  %and.i.i169.i.i.i.i = and i32 %and12.i.i.i.i, 51
  %and.i174.i.i.i.i = lshr i32 %524, 3
  %shr.i175.i.i.i.i = and i32 %and.i174.i.i.i.i, 17
  %or.i176.i.i.i.i = or i32 %shr.i175.i.i.i.i, %and.i.i169.i.i.i.i
  %and1.i177.i.i.i.i = shl nuw nsw i32 %or.i176.i.i.i.i, 1
  %shl.i178.i.i.i.i = and i32 %and1.i177.i.i.i.i, 34
  %or2.i179.i.i.i.i = or i32 %shl.i178.i.i.i.i, %or.i176.i.i.i.i
  %call14.i.i.i.i = call fastcc i32 @find_usage_backwards(ptr noundef nonnull %this.i.i.i.i, i32 noundef %or2.i179.i.i.i.i, ptr noundef nonnull %target_entry.i.i.i.i) #28, !range !1545
  %cmp.i180.i.i.i.i = icmp slt i32 %call14.i.i.i.i, 0
  br i1 %cmp.i180.i.i.i.i, label %if.then16.i.i.i.i, label %if.end17.i.i.i83.i

if.then16.i.i.i.i:                                ; preds = %if.end10.i.i.i.i
  call fastcc void @print_bfs_bug(i32 noundef %call14.i.i.i.i) #28
  br label %check_irq_usage.exit.i.i.i

if.end17.i.i.i83.i:                               ; preds = %if.end10.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %525 = load i32, ptr @oops_in_progress, align 4
  %tobool18.not.i.i.i.i = icmp eq i32 %525, 0
  %cmp19.i.i.i.i = icmp eq i32 %call14.i.i.i.i, 1
  %or.cond.i.i.i.i = and i1 %cmp19.i.i.i.i, %tobool18.not.i.i.i.i
  br i1 %or.cond.i.i.i.i, label %do.end.i358.i.i.i, label %if.end60.i.i.i.i, !prof !1530

do.end.i358.i.i.i:                                ; preds = %if.end17.i.i.i83.i
  %call23.i.i.i.i = call i32 @debug_locks_off() #28
  %tobool24.not.i.i.i.i = icmp eq i32 %call23.i.i.i.i, 0
  br i1 %tobool24.not.i.i.i.i, label %if.end128.i.i.i, label %land.lhs.true25.i.i.i.i

land.lhs.true25.i.i.i.i:                          ; preds = %do.end.i358.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %526 = load i32, ptr @debug_locks_silent, align 4
  %tobool26.not.i.i.i.i = icmp eq i32 %526, 0
  br i1 %tobool26.not.i.i.i.i, label %do.end39.i.i.i.i, label %if.end128.i.i.i

do.end39.i.i.i.i:                                 ; preds = %land.lhs.true25.i.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2803, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.622) #28
  br label %if.end128.i.i.i

if.end60.i.i.i.i:                                 ; preds = %if.end17.i.i.i83.i
  %527 = ptrtoint ptr %target_entry.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %527)
  %528 = load ptr, ptr %target_entry.i.i.i.i, align 4
  %class61.i.i.i.i = getelementptr inbounds %struct.lock_list, ptr %528, i32 0, i32 1
  %529 = ptrtoint ptr %class61.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %529)
  %530 = load ptr, ptr %class61.i.i.i.i, align 4
  %usage_mask62.i.i.i.i = getelementptr inbounds %struct.lock_class, ptr %530, i32 0, i32 7
  %531 = ptrtoint ptr %usage_mask62.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %531)
  %532 = load i32, ptr %usage_mask62.i.i.i.i, align 4
  %533 = ptrtoint ptr %class.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %533)
  %534 = load ptr, ptr %class.i.i.i.i, align 4
  %usage_mask64.i.i.i.i = getelementptr inbounds %struct.lock_class, ptr %534, i32 0, i32 7
  %535 = ptrtoint ptr %usage_mask64.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %535)
  %536 = load i32, ptr %usage_mask64.i.i.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %mask.addr.i.i.i.i.i) #28
  %537 = ptrtoint ptr %mask.addr.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %537)
  store i32 %532, ptr %mask.addr.i.i.i.i.i, align 4
  %call.i181.i.i.i.i = call i32 @_find_next_bit_be(ptr noundef nonnull %mask.addr.i.i.i.i.i, i32 noundef 8, i32 noundef 0) #28
  %cmp26.i.i.i.i.i = icmp slt i32 %call.i181.i.i.i.i, 8
  br i1 %cmp26.i.i.i.i.i, label %for.body.i.i.i.i.i, label %find_exclusive_match.exit.i.i.i.i

for.body.i.i.i.i.i:                               ; preds = %for.inc.i.i.i.i.i, %if.end60.i.i.i.i
  %bit.027.i.i.i.i.i = phi i32 [ %call8.i.i.i.i.i, %for.inc.i.i.i.i.i ], [ %call.i181.i.i.i.i, %if.end60.i.i.i.i ]
  %538 = and i32 %bit.027.i.i.i.i.i, -2
  %or.i.i.i.i.i.i = xor i32 %538, 2
  %shl.i.i182.i.i.i.i = shl nuw i32 1, %or.i.i.i.i.i.i
  %and.i183.i.i.i.i = and i32 %shl.i.i182.i.i.i.i, %536
  %tobool.not.i.i.i.i84.i = icmp eq i32 %and.i183.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i84.i, label %if.else.i.i.i.i.i, label %find_exclusive_match.exit.thread.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %for.body.i.i.i.i.i
  %or.i184.i.i.i.i = or i32 %or.i.i.i.i.i.i, 1
  %shl.i21.i.i.i.i.i = shl nuw i32 1, %or.i184.i.i.i.i
  %and4.i.i.i.i.i = and i32 %shl.i21.i.i.i.i.i, %536
  %tobool5.not.i.i.i.i85.i = icmp eq i32 %and4.i.i.i.i.i, 0
  br i1 %tobool5.not.i.i.i.i85.i, label %for.inc.i.i.i.i.i, label %find_exclusive_match.exit.thread.i.i.i.i

for.inc.i.i.i.i.i:                                ; preds = %if.else.i.i.i.i.i
  %add.i.i.i.i86.i = add nsw i32 %bit.027.i.i.i.i.i, 1
  %call8.i.i.i.i.i = call i32 @_find_next_bit_be(ptr noundef nonnull %mask.addr.i.i.i.i.i, i32 noundef 8, i32 noundef %add.i.i.i.i86.i) #28
  %cmp.i185.i.i.i.i = icmp slt i32 %call8.i.i.i.i.i, 8
  br i1 %cmp.i185.i.i.i.i, label %for.body.i.i.i.i.i, label %find_exclusive_match.exit.i.i.i.i

find_exclusive_match.exit.thread.i.i.i.i:         ; preds = %if.else.i.i.i.i.i, %for.body.i.i.i.i.i
  %forward_bit.0.ph.i.i.i.i = phi i32 [ %or.i184.i.i.i.i, %if.else.i.i.i.i.i ], [ %or.i.i.i.i.i.i, %for.body.i.i.i.i.i ]
  %539 = getelementptr inbounds %struct.lock_list, ptr %that.i.i.i.i, i32 0, i32 3
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %mask.addr.i.i.i.i.i) #28
  br label %if.end119.i.i.i.i

find_exclusive_match.exit.i.i.i.i:                ; preds = %for.inc.i.i.i.i.i, %if.end60.i.i.i.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %mask.addr.i.i.i.i.i) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %540 = load i32, ptr @oops_in_progress, align 4
  %tobool67.not.i.i.i.i = icmp eq i32 %540, 0
  br i1 %tobool67.not.i.i.i.i, label %do.end79.i.i.i.i, label %if.end119.i.i.loopexit.i.i, !prof !1530

do.end79.i.i.i.i:                                 ; preds = %find_exclusive_match.exit.i.i.i.i
  %call80.i.i.i.i = call i32 @debug_locks_off() #28
  %tobool81.not.i.i.i.i = icmp eq i32 %call80.i.i.i.i, 0
  br i1 %tobool81.not.i.i.i.i, label %if.end128.i.i.i, label %land.lhs.true82.i.i.i.i

land.lhs.true82.i.i.i.i:                          ; preds = %do.end79.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %541 = load i32, ptr @debug_locks_silent, align 4
  %tobool83.not.i.i.i.i = icmp eq i32 %541, 0
  br i1 %tobool83.not.i.i.i.i, label %do.end97.i.i.i.i, label %if.end128.i.i.i

do.end97.i.i.i.i:                                 ; preds = %land.lhs.true82.i.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2813, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.623) #28
  br label %if.end128.i.i.i

if.end119.i.i.loopexit.i.i:                       ; preds = %find_exclusive_match.exit.i.i.i.i
  %542 = getelementptr inbounds %struct.lock_list, ptr %that.i.i.i.i, i32 0, i32 3
  br label %if.end119.i.i.i.i

if.end119.i.i.i.i:                                ; preds = %if.end119.i.i.loopexit.i.i, %find_exclusive_match.exit.thread.i.i.i.i
  %543 = phi ptr [ %539, %find_exclusive_match.exit.thread.i.i.i.i ], [ %542, %if.end119.i.i.loopexit.i.i ]
  %backward_bit.0252.i.i.i.i = phi i32 [ %bit.027.i.i.i.i.i, %find_exclusive_match.exit.thread.i.i.i.i ], [ 0, %if.end119.i.i.loopexit.i.i ]
  %forward_bit.0251.i.i.i.i = phi i32 [ %forward_bit.0.ph.i.i.i.i, %find_exclusive_match.exit.thread.i.i.i.i ], [ 0, %if.end119.i.i.loopexit.i.i ]
  %class61.i.i.i.i1058 = getelementptr inbounds %struct.lock_list, ptr %528, i32 0, i32 1
  %and.i186.i.i.i.i = and i32 %backward_bit.0252.i.i.i.i, 1
  %tobool.not.i187.i.i.i.i = icmp eq i32 %and.i186.i.i.i.i, 0
  %shr.i188.i.i.i.i = lshr i32 %backward_bit.0252.i.i.i.i, 2
  %arrayidx.i.i359.i.i.i = getelementptr [2 x ptr], ptr @state_rnames, i32 0, i32 %shr.i188.i.i.i.i
  %arrayidx2.i.i.i.i87.i = getelementptr [2 x ptr], ptr @state_names, i32 0, i32 %shr.i188.i.i.i.i
  %retval.0.in.i.i.i.i.i = select i1 %tobool.not.i187.i.i.i.i, ptr %arrayidx2.i.i.i.i87.i, ptr %arrayidx.i.i359.i.i.i
  %544 = ptrtoint ptr %retval.0.in.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %544)
  %retval.0.i189.i.i.i.i = load ptr, ptr %retval.0.in.i.i.i.i.i, align 4
  %call.i.i.i.i.i.i = call i32 @debug_locks_off() #28
  call fastcc void @lockdep_unlock() #28
  %tobool.not.i190.i.i.i.i = icmp eq i32 %call.i.i.i.i.i.i, 0
  br i1 %tobool.not.i190.i.i.i.i, label %check_irq_usage.exit.i.i.i, label %lor.lhs.false.i.i.i.i.i

lor.lhs.false.i.i.i.i.i:                          ; preds = %if.end119.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %545 = load i32, ptr @debug_locks_silent, align 4
  %tobool1.not.i.i.i.i.i = icmp eq i32 %545, 0
  br i1 %tobool1.not.i.i.i.i.i, label %do.end.i.i.i.i88.i, label %check_irq_usage.exit.i.i.i

do.end.i.i.i.i88.i:                               ; preds = %lor.lhs.false.i.i.i.i.i
  %call2.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.89) #32
  %call6.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.626) #32
  %call10.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.629, ptr noundef %retval.0.i189.i.i.i.i, ptr noundef %retval.0.i189.i.i.i.i) #32
  %call3.i.i.i.i.i.i = call i32 @strcspn(ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef nonnull @.str.766) #28
  %call7.i.i.i.i.i.i = call ptr @print_tainted() #28
  %call8.i.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.764, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 2), i32 noundef %call3.i.i.i.i.i.i, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef %call7.i.i.i.i.i.i) #32
  %call14.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.632) #32
  %comm.i.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 101
  %pid.i.i.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 68
  %546 = ptrtoint ptr %pid.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %546)
  %547 = load i32, ptr %pid.i.i.i.i.i.i, align 8
  %548 = call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i191.i.i.i.i = and i32 %548, -16384
  %549 = inttoptr i32 %and.i.i191.i.i.i.i to ptr
  %cpu.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %549, i32 0, i32 3
  %550 = ptrtoint ptr %cpu.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %550)
  %551 = load i32, ptr %cpu.i.i.i.i.i, align 4
  %arrayidx.i192.i.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %551
  %552 = ptrtoint ptr %arrayidx.i192.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %552)
  %553 = load i32, ptr %arrayidx.i192.i.i.i.i, align 4
  %add.i193.i.i.i.i = add i32 %553, ptrtoint (ptr @hardirq_context to i32)
  %554 = inttoptr i32 %add.i193.i.i.i.i to ptr
  %555 = ptrtoint ptr %554 to i32
  call void @__asan_load4_noabort(i32 %555)
  %556 = load i32, ptr %554, align 4
  %preempt_count.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %549, i32 0, i32 1
  %557 = ptrtoint ptr %preempt_count.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %557)
  %558 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i, align 4
  %and.i194.i.i.i.i = lshr i32 %558, 16
  %shr.i195.i.i.i.i = and i32 %and.i194.i.i.i.i, 15
  %559 = ptrtoint ptr %softirq_context.i to i32
  call void @__asan_load4_noabort(i32 %559)
  %560 = load i32, ptr %softirq_context.i, align 4
  %561 = call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i172.i.i.i.i.i = and i32 %561, -16384
  %562 = inttoptr i32 %and.i.i172.i.i.i.i.i to ptr
  %preempt_count.i173.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %562, i32 0, i32 1
  %563 = ptrtoint ptr %preempt_count.i173.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %563)
  %564 = load volatile i32, ptr %preempt_count.i173.i.i.i.i.i, align 4
  %and32.i.i.i.i.i = lshr i32 %564, 8
  %shr33.i.i.i.i.i = and i32 %and32.i.i.i.i.i, 255
  %565 = call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i.i.i.i.i = and i32 %565, -16384
  %566 = inttoptr i32 %and.i.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %566, i32 0, i32 1
  %567 = ptrtoint ptr %preempt_count.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %567)
  %568 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i.i = add i32 %568, 1
  store volatile i32 %add.i.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1546
  %569 = ptrtoint ptr %cpu.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %569)
  %570 = load i32, ptr %cpu.i.i.i.i.i, align 4
  %arrayidx55.i.i.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %570
  %571 = ptrtoint ptr %arrayidx55.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %571)
  %572 = load i32, ptr %arrayidx55.i.i.i.i.i, align 4
  %add56.i.i.i.i.i = add i32 %572, ptrtoint (ptr @hardirqs_enabled to i32)
  %573 = inttoptr i32 %add56.i.i.i.i.i to ptr
  %574 = ptrtoint ptr %573 to i32
  call void @__asan_load4_noabort(i32 %574)
  %575 = load volatile i32, ptr %573, align 4
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1547
  %576 = call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i174.i.i.i.i.i = and i32 %576, -16384
  %577 = inttoptr i32 %and.i.i.i174.i.i.i.i.i to ptr
  %preempt_count.i.i175.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %577, i32 0, i32 1
  %578 = ptrtoint ptr %preempt_count.i.i175.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %578)
  %579 = load volatile i32, ptr %preempt_count.i.i175.i.i.i.i.i, align 4
  %sub.i.i.i.i.i.i = add i32 %579, -1
  store volatile i32 %sub.i.i.i.i.i.i, ptr %preempt_count.i.i175.i.i.i.i.i, align 4
  %softirqs_enabled.i.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 138
  %580 = ptrtoint ptr %softirqs_enabled.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %580)
  %581 = load i32, ptr %softirqs_enabled.i.i.i.i.i, align 32
  %call63.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.635, ptr noundef %comm.i.i.i.i.i, i32 noundef %547, i32 noundef %556, i32 noundef %shr.i195.i.i.i.i, i32 noundef %560, i32 noundef %shr33.i.i.i.i.i, i32 noundef %575, i32 noundef %581) #32
  call fastcc void @print_lock(ptr noundef %add.ptr186) #28
  %call68.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.638) #32
  call fastcc void @print_lock(ptr noundef %add.ptr12.i.i) #28
  %call73.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.641) #32
  %582 = ptrtoint ptr %check.i.i to i32
  call void @__asan_load4_noabort(i32 %582)
  %bf.load.i.i197.i.i.i.i = load i32, ptr %check.i.i, align 8
  %bf.lshr.i.i198.i.i.i.i = lshr i32 %bf.load.i.i197.i.i.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i.i199.i.i.i.i = lshr i32 %bf.load.i.i197.i.i.i.i, 24
  %arrayidx.i.i.i200.i.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i.i199.i.i.i.i
  %583 = ptrtoint ptr %arrayidx.i.i.i200.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %583)
  %584 = load volatile i32, ptr %arrayidx.i.i.i200.i.i.i.i, align 4
  %and.i.i176.i.i.i.i.i = and i32 %bf.lshr.i.i198.i.i.i.i, 31
  %585 = shl nuw i32 1, %and.i.i176.i.i.i.i.i
  %586 = and i32 %585, %584
  %tobool.not.i.i201.i.i.i.i = icmp eq i32 %586, 0
  br i1 %tobool.not.i.i201.i.i.i.i, label %if.then.i.i203.i.i.i.i, label %if.end33.i.i211.i.i.i.i

if.then.i.i203.i.i.i.i:                           ; preds = %do.end.i.i.i.i88.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %587 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i.i202.i.i.i.i = icmp eq i32 %587, 0
  br i1 %tobool2.not.i.i202.i.i.i.i, label %do.end.i.i206.i.i.i.i, label %hlock_class.exit.i.i.i.i.i

do.end.i.i206.i.i.i.i:                            ; preds = %if.then.i.i203.i.i.i.i
  %call4.i.i204.i.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i.i205.i.i.i.i = icmp eq i32 %call4.i.i204.i.i.i.i, 0
  br i1 %tobool5.not.i.i205.i.i.i.i, label %hlock_class.exit.i.i.i.i.i, label %land.lhs.true.i.i208.i.i.i.i

land.lhs.true.i.i208.i.i.i.i:                     ; preds = %do.end.i.i206.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %588 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i.i207.i.i.i.i = icmp eq i32 %588, 0
  br i1 %tobool6.not.i.i207.i.i.i.i, label %do.end15.i.i209.i.i.i.i, label %hlock_class.exit.i.i.i.i.i

do.end15.i.i209.i.i.i.i:                          ; preds = %land.lhs.true.i.i208.i.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit.i.i.i.i.i

if.end33.i.i211.i.i.i.i:                          ; preds = %do.end.i.i.i.i88.i
  %add.ptr.i.i210.i.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i.i198.i.i.i.i
  br label %hlock_class.exit.i.i.i.i.i

hlock_class.exit.i.i.i.i.i:                       ; preds = %if.end33.i.i211.i.i.i.i, %do.end15.i.i209.i.i.i.i, %land.lhs.true.i.i208.i.i.i.i, %do.end.i.i206.i.i.i.i, %if.then.i.i203.i.i.i.i
  %retval.0.i.i212.i.i.i.i = phi ptr [ %add.ptr.i.i210.i.i.i.i, %if.end33.i.i211.i.i.i.i ], [ null, %do.end15.i.i209.i.i.i.i ], [ null, %land.lhs.true.i.i208.i.i.i.i ], [ null, %do.end.i.i206.i.i.i.i ], [ null, %if.then.i.i203.i.i.i.i ]
  call fastcc void @print_lock_name(ptr noundef %retval.0.i.i212.i.i.i.i) #28
  %call79.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.644) #32
  %589 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %589)
  %bf.load.i178.i.i.i.i.i = load i32, ptr %class_idx243, align 8
  %bf.lshr.i179.i.i.i.i.i = lshr i32 %bf.load.i178.i.i.i.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i180.i.i.i.i.i = lshr i32 %bf.load.i178.i.i.i.i.i, 24
  %arrayidx.i.i181.i.i.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i180.i.i.i.i.i
  %590 = ptrtoint ptr %arrayidx.i.i181.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %590)
  %591 = load volatile i32, ptr %arrayidx.i.i181.i.i.i.i.i, align 4
  %and.i.i182.i.i.i.i.i = and i32 %bf.lshr.i179.i.i.i.i.i, 31
  %592 = shl nuw i32 1, %and.i.i182.i.i.i.i.i
  %593 = and i32 %592, %591
  %tobool.not.i183.i.i.i.i.i = icmp eq i32 %593, 0
  br i1 %tobool.not.i183.i.i.i.i.i, label %if.then.i185.i.i.i.i.i, label %if.end33.i193.i.i.i.i.i

if.then.i185.i.i.i.i.i:                           ; preds = %hlock_class.exit.i.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %594 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i184.i.i.i.i.i = icmp eq i32 %594, 0
  br i1 %tobool2.not.i184.i.i.i.i.i, label %do.end.i188.i.i.i.i.i, label %hlock_class.exit195.i.i.i.i.i

do.end.i188.i.i.i.i.i:                            ; preds = %if.then.i185.i.i.i.i.i
  %call4.i186.i.i.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i187.i.i.i.i.i = icmp eq i32 %call4.i186.i.i.i.i.i, 0
  br i1 %tobool5.not.i187.i.i.i.i.i, label %hlock_class.exit195.i.i.i.i.i, label %land.lhs.true.i190.i.i.i.i.i

land.lhs.true.i190.i.i.i.i.i:                     ; preds = %do.end.i188.i.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %595 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i189.i.i.i.i.i = icmp eq i32 %595, 0
  br i1 %tobool6.not.i189.i.i.i.i.i, label %do.end15.i191.i.i.i.i.i, label %hlock_class.exit195.i.i.i.i.i

do.end15.i191.i.i.i.i.i:                          ; preds = %land.lhs.true.i190.i.i.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit195.i.i.i.i.i

if.end33.i193.i.i.i.i.i:                          ; preds = %hlock_class.exit.i.i.i.i.i
  %add.ptr.i192.i.i.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i179.i.i.i.i.i
  br label %hlock_class.exit195.i.i.i.i.i

hlock_class.exit195.i.i.i.i.i:                    ; preds = %if.end33.i193.i.i.i.i.i, %do.end15.i191.i.i.i.i.i, %land.lhs.true.i190.i.i.i.i.i, %do.end.i188.i.i.i.i.i, %if.then.i185.i.i.i.i.i
  %retval.0.i194.i.i.i.i.i = phi ptr [ %add.ptr.i192.i.i.i.i.i, %if.end33.i193.i.i.i.i.i ], [ null, %do.end15.i191.i.i.i.i.i ], [ null, %land.lhs.true.i190.i.i.i.i.i ], [ null, %do.end.i188.i.i.i.i.i ], [ null, %if.then.i185.i.i.i.i.i ]
  call fastcc void @print_lock_name(ptr noundef %retval.0.i194.i.i.i.i.i) #28
  %call85.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.352) #32
  %call90.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.649, ptr noundef %retval.0.i189.i.i.i.i) #32
  %596 = ptrtoint ptr %class61.i.i.i.i1058 to i32
  call void @__asan_load4_noabort(i32 %596)
  %597 = load ptr, ptr %class61.i.i.i.i1058, align 4
  call fastcc void @print_lock_name(ptr noundef %597) #28
  %call95.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.652, ptr noundef %retval.0.i189.i.i.i.i) #32
  %598 = ptrtoint ptr %class61.i.i.i.i1058 to i32
  call void @__asan_load4_noabort(i32 %598)
  %599 = load ptr, ptr %class61.i.i.i.i1058, align 4
  %arrayidx97.i.i.i.i.i = getelementptr %struct.lock_class, ptr %599, i32 0, i32 8, i32 %backward_bit.0252.i.i.i.i
  %600 = ptrtoint ptr %arrayidx97.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %600)
  %601 = load ptr, ptr %arrayidx97.i.i.i.i.i, align 4
  %entries.i.i.i.i.i.i = getelementptr inbounds %struct.lock_trace, ptr %601, i32 0, i32 3
  %nr_entries.i.i.i.i.i.i = getelementptr inbounds %struct.lock_trace, ptr %601, i32 0, i32 2
  %602 = ptrtoint ptr %nr_entries.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %602)
  %603 = load i32, ptr %nr_entries.i.i.i.i.i.i, align 4
  call void @stack_trace_print(ptr noundef %entries.i.i.i.i.i.i, i32 noundef %603, i32 noundef 1) #28
  %call102.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.655, ptr noundef %retval.0.i189.i.i.i.i) #32
  %604 = ptrtoint ptr %class.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %604)
  %605 = load ptr, ptr %class.i.i.i.i, align 4
  call fastcc void @print_lock_name(ptr noundef %605) #28
  %call108.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.658, ptr noundef %retval.0.i189.i.i.i.i) #32
  %call113.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.661) #32
  %606 = ptrtoint ptr %class.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %606)
  %607 = load ptr, ptr %class.i.i.i.i, align 4
  %arrayidx116.i.i.i.i.i = getelementptr %struct.lock_class, ptr %607, i32 0, i32 8, i32 %forward_bit.0251.i.i.i.i
  %608 = ptrtoint ptr %arrayidx116.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %608)
  %609 = load ptr, ptr %arrayidx116.i.i.i.i.i, align 4
  %entries.i196.i.i.i.i.i = getelementptr inbounds %struct.lock_trace, ptr %609, i32 0, i32 3
  %nr_entries.i197.i.i.i.i.i = getelementptr inbounds %struct.lock_trace, ptr %609, i32 0, i32 2
  %610 = ptrtoint ptr %nr_entries.i197.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %610)
  %611 = load i32, ptr %nr_entries.i197.i.i.i.i.i, align 4
  call void @stack_trace_print(ptr noundef %entries.i196.i.i.i.i.i, i32 noundef %611, i32 noundef 1) #28
  %call121.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.123) #32
  %612 = ptrtoint ptr %check.i.i to i32
  call void @__asan_load4_noabort(i32 %612)
  %bf.load.i199.i.i.i.i.i = load i32, ptr %check.i.i, align 8
  %bf.lshr.i200.i.i.i.i.i = lshr i32 %bf.load.i199.i.i.i.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i201.i.i.i.i.i = lshr i32 %bf.load.i199.i.i.i.i.i, 24
  %arrayidx.i.i202.i.i.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i201.i.i.i.i.i
  %613 = ptrtoint ptr %arrayidx.i.i202.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %613)
  %614 = load volatile i32, ptr %arrayidx.i.i202.i.i.i.i.i, align 4
  %and.i.i203.i.i.i.i.i = and i32 %bf.lshr.i200.i.i.i.i.i, 31
  %615 = shl nuw i32 1, %and.i.i203.i.i.i.i.i
  %616 = and i32 %615, %614
  %tobool.not.i204.i.i.i.i.i = icmp eq i32 %616, 0
  br i1 %tobool.not.i204.i.i.i.i.i, label %if.then.i206.i.i.i.i.i, label %if.end33.i214.i.i.i.i.i

if.then.i206.i.i.i.i.i:                           ; preds = %hlock_class.exit195.i.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %617 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i205.i.i.i.i.i = icmp eq i32 %617, 0
  br i1 %tobool2.not.i205.i.i.i.i.i, label %do.end.i209.i.i.i.i.i, label %hlock_class.exit216.i.i.i.i.i

do.end.i209.i.i.i.i.i:                            ; preds = %if.then.i206.i.i.i.i.i
  %call4.i207.i.i.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i208.i.i.i.i.i = icmp eq i32 %call4.i207.i.i.i.i.i, 0
  br i1 %tobool5.not.i208.i.i.i.i.i, label %hlock_class.exit216.i.i.i.i.i, label %land.lhs.true.i211.i.i.i.i.i

land.lhs.true.i211.i.i.i.i.i:                     ; preds = %do.end.i209.i.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %618 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i210.i.i.i.i.i = icmp eq i32 %618, 0
  br i1 %tobool6.not.i210.i.i.i.i.i, label %do.end15.i212.i.i.i.i.i, label %hlock_class.exit216.i.i.i.i.i

do.end15.i212.i.i.i.i.i:                          ; preds = %land.lhs.true.i211.i.i.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit216.i.i.i.i.i

if.end33.i214.i.i.i.i.i:                          ; preds = %hlock_class.exit195.i.i.i.i.i
  %add.ptr.i213.i.i.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i200.i.i.i.i.i
  br label %hlock_class.exit216.i.i.i.i.i

hlock_class.exit216.i.i.i.i.i:                    ; preds = %if.end33.i214.i.i.i.i.i, %do.end15.i212.i.i.i.i.i, %land.lhs.true.i211.i.i.i.i.i, %do.end.i209.i.i.i.i.i, %if.then.i206.i.i.i.i.i
  %retval.0.i215.i.i.i.i.i = phi ptr [ %add.ptr.i213.i.i.i.i.i, %if.end33.i214.i.i.i.i.i ], [ null, %do.end15.i212.i.i.i.i.i ], [ null, %land.lhs.true.i211.i.i.i.i.i ], [ null, %do.end.i209.i.i.i.i.i ], [ null, %if.then.i206.i.i.i.i.i ]
  %619 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %619)
  %bf.load.i218.i.i.i.i.i = load i32, ptr %class_idx243, align 8
  %bf.lshr.i219.i.i.i.i.i = lshr i32 %bf.load.i218.i.i.i.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i220.i.i.i.i.i = lshr i32 %bf.load.i218.i.i.i.i.i, 24
  %arrayidx.i.i221.i.i.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i220.i.i.i.i.i
  %620 = ptrtoint ptr %arrayidx.i.i221.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %620)
  %621 = load volatile i32, ptr %arrayidx.i.i221.i.i.i.i.i, align 4
  %and.i.i222.i.i.i.i.i = and i32 %bf.lshr.i219.i.i.i.i.i, 31
  %622 = shl nuw i32 1, %and.i.i222.i.i.i.i.i
  %623 = and i32 %622, %621
  %tobool.not.i223.i.i.i.i.i = icmp eq i32 %623, 0
  br i1 %tobool.not.i223.i.i.i.i.i, label %if.then.i225.i.i.i.i.i, label %if.end33.i233.i.i.i.i.i

if.then.i225.i.i.i.i.i:                           ; preds = %hlock_class.exit216.i.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %624 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i224.i.i.i.i.i = icmp eq i32 %624, 0
  br i1 %tobool2.not.i224.i.i.i.i.i, label %do.end.i228.i.i.i.i.i, label %hlock_class.exit235.i.i.i.i.i

do.end.i228.i.i.i.i.i:                            ; preds = %if.then.i225.i.i.i.i.i
  %call4.i226.i.i.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i227.i.i.i.i.i = icmp eq i32 %call4.i226.i.i.i.i.i, 0
  br i1 %tobool5.not.i227.i.i.i.i.i, label %hlock_class.exit235.i.i.i.i.i, label %land.lhs.true.i230.i.i.i.i.i

land.lhs.true.i230.i.i.i.i.i:                     ; preds = %do.end.i228.i.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %625 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i229.i.i.i.i.i = icmp eq i32 %625, 0
  br i1 %tobool6.not.i229.i.i.i.i.i, label %do.end15.i231.i.i.i.i.i, label %hlock_class.exit235.i.i.i.i.i

do.end15.i231.i.i.i.i.i:                          ; preds = %land.lhs.true.i230.i.i.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit235.i.i.i.i.i

if.end33.i233.i.i.i.i.i:                          ; preds = %hlock_class.exit216.i.i.i.i.i
  %add.ptr.i232.i.i.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i219.i.i.i.i.i
  br label %hlock_class.exit235.i.i.i.i.i

hlock_class.exit235.i.i.i.i.i:                    ; preds = %if.end33.i233.i.i.i.i.i, %do.end15.i231.i.i.i.i.i, %land.lhs.true.i230.i.i.i.i.i, %do.end.i228.i.i.i.i.i, %if.then.i225.i.i.i.i.i
  %retval.0.i234.i.i.i.i.i = phi ptr [ %add.ptr.i232.i.i.i.i.i, %if.end33.i233.i.i.i.i.i ], [ null, %do.end15.i231.i.i.i.i.i ], [ null, %land.lhs.true.i230.i.i.i.i.i ], [ null, %do.end.i228.i.i.i.i.i ], [ null, %if.then.i225.i.i.i.i.i ]
  call fastcc void @print_irq_lock_scenario(ptr noundef %528, ptr noundef %520, ptr noundef %retval.0.i215.i.i.i.i.i, ptr noundef %retval.0.i234.i.i.i.i.i) #28
  call fastcc void @lockdep_print_held_locks(ptr noundef %3) #28
  %call128.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.666, ptr noundef %retval.0.i189.i.i.i.i) #32
  call void @print_shortest_lock_dependencies_backwards(ptr noundef %528, ptr noundef nonnull %this.i.i.i.i) #28
  %call133.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.669) #32
  %call138.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.672, ptr noundef %retval.0.i189.i.i.i.i) #32
  %call139.i.i.i.i.i = call fastcc ptr @save_trace() #28
  %626 = ptrtoint ptr %543 to i32
  call void @__asan_store4_noabort(i32 %626)
  store ptr %call139.i.i.i.i.i, ptr %543, align 4
  %tobool141.not.i.i.i.i.i = icmp eq ptr %call139.i.i.i.i.i, null
  br i1 %tobool141.not.i.i.i.i.i, label %check_irq_usage.exit.i.i.i, label %if.end143.i.i.i.i.i

if.end143.i.i.i.i.i:                              ; preds = %hlock_class.exit235.i.i.i.i.i
  call void @print_shortest_lock_dependencies(ptr noundef %520, ptr noundef nonnull %that.i.i.i.i) #28
  %call148.i.i.i.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134) #32
  call void @dump_stack() #32
  br label %check_irq_usage.exit.i.i.i

check_irq_usage.exit.i.i.i:                       ; preds = %if.end143.i.i.i.i.i, %hlock_class.exit235.i.i.i.i.i, %lor.lhs.false.i.i.i.i.i, %if.end119.i.i.i.i, %if.then16.i.i.i.i, %if.then7.i.i.i.i, %if.then.i354.i.i.i
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %that.i.i.i.i) #28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %this.i.i.i.i) #28
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %target_entry.i.i.i.i) #28
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %target_entry1.i.i.i.i) #28
  br label %check_prevs_add.exit.thread.i

if.end128.i.i.i:                                  ; preds = %do.end97.i.i.i.i, %land.lhs.true82.i.i.i.i, %do.end79.i.i.i.i, %do.end39.i.i.i.i, %land.lhs.true25.i.i.i.i, %do.end.i358.i.i.i, %if.end8.i.i.i.i, %if.end.i.i.i.i
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %that.i.i.i.i) #28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %this.i.i.i.i) #28
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %target_entry.i.i.i.i) #28
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %target_entry1.i.i.i.i) #28
  %627 = ptrtoint ptr %check.i.i to i32
  call void @__asan_load4_noabort(i32 %627)
  %bf.load.i362.i.i.i = load i32, ptr %check.i.i, align 8
  %bf.lshr.i363.i.i.i = lshr i32 %bf.load.i362.i.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i364.i.i.i = lshr i32 %bf.load.i362.i.i.i, 24
  %arrayidx.i.i365.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i364.i.i.i
  %628 = ptrtoint ptr %arrayidx.i.i365.i.i.i to i32
  call void @__asan_load4_noabort(i32 %628)
  %629 = load volatile i32, ptr %arrayidx.i.i365.i.i.i, align 4
  %and.i.i366.i.i.i = and i32 %bf.lshr.i363.i.i.i, 31
  %630 = shl nuw i32 1, %and.i.i366.i.i.i
  %631 = and i32 %630, %629
  %tobool.not.i367.i.i.i = icmp eq i32 %631, 0
  br i1 %tobool.not.i367.i.i.i, label %if.then.i369.i.i.i, label %if.end33.i377.i.i.i

if.then.i369.i.i.i:                               ; preds = %if.end128.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %632 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i368.i.i.i = icmp eq i32 %632, 0
  br i1 %tobool2.not.i368.i.i.i, label %do.end.i372.i.i.i, label %hlock_class.exit379.i.i.i

do.end.i372.i.i.i:                                ; preds = %if.then.i369.i.i.i
  %call4.i370.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i371.i.i.i = icmp eq i32 %call4.i370.i.i.i, 0
  br i1 %tobool5.not.i371.i.i.i, label %hlock_class.exit379.i.i.i, label %land.lhs.true.i374.i.i.i

land.lhs.true.i374.i.i.i:                         ; preds = %do.end.i372.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %633 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i373.i.i.i = icmp eq i32 %633, 0
  br i1 %tobool6.not.i373.i.i.i, label %do.end15.i375.i.i.i, label %hlock_class.exit379.i.i.i

do.end15.i375.i.i.i:                              ; preds = %land.lhs.true.i374.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit379.i.i.i

if.end33.i377.i.i.i:                              ; preds = %if.end128.i.i.i
  %add.ptr.i376.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i363.i.i.i
  br label %hlock_class.exit379.i.i.i

hlock_class.exit379.i.i.i:                        ; preds = %if.end33.i377.i.i.i, %do.end15.i375.i.i.i, %land.lhs.true.i374.i.i.i, %do.end.i372.i.i.i, %if.then.i369.i.i.i
  %retval.0.i378.i.i.i = phi ptr [ %add.ptr.i376.i.i.i, %if.end33.i377.i.i.i ], [ null, %do.end15.i375.i.i.i ], [ null, %land.lhs.true.i374.i.i.i ], [ null, %do.end.i372.i.i.i ], [ null, %if.then.i369.i.i.i ]
  %locks_after.i.i.i = getelementptr inbounds %struct.lock_class, ptr %retval.0.i378.i.i.i, i32 0, i32 2
  br label %for.cond.i.i.i

for.cond.i.i.i:                                   ; preds = %hlock_class.exit417.i.i.i, %hlock_class.exit379.i.i.i
  %entry1.0.in.i.i.i = phi ptr [ %locks_after.i.i.i, %hlock_class.exit379.i.i.i ], [ %entry1.0.i.i.i, %hlock_class.exit417.i.i.i ]
  %634 = ptrtoint ptr %entry1.0.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %634)
  %entry1.0.i.i.i = load ptr, ptr %entry1.0.in.i.i.i, align 4
  %635 = ptrtoint ptr %check.i.i to i32
  call void @__asan_load4_noabort(i32 %635)
  %bf.load.i381.i.i.i = load i32, ptr %check.i.i, align 8
  %bf.lshr.i382.i.i.i = lshr i32 %bf.load.i381.i.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i383.i.i.i = lshr i32 %bf.load.i381.i.i.i, 24
  %arrayidx.i.i384.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i383.i.i.i
  %636 = ptrtoint ptr %arrayidx.i.i384.i.i.i to i32
  call void @__asan_load4_noabort(i32 %636)
  %637 = load volatile i32, ptr %arrayidx.i.i384.i.i.i, align 4
  %and.i.i385.i.i.i = and i32 %bf.lshr.i382.i.i.i, 31
  %638 = shl nuw i32 1, %and.i.i385.i.i.i
  %639 = and i32 %638, %637
  %tobool.not.i386.i.i.i = icmp eq i32 %639, 0
  br i1 %tobool.not.i386.i.i.i, label %if.then.i388.i.i.i, label %if.end33.i396.i.i.i

if.then.i388.i.i.i:                               ; preds = %for.cond.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %640 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i387.i.i.i = icmp eq i32 %640, 0
  br i1 %tobool2.not.i387.i.i.i, label %do.end.i391.i.i.i, label %hlock_class.exit398.i.i.i

do.end.i391.i.i.i:                                ; preds = %if.then.i388.i.i.i
  %call4.i389.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i390.i.i.i = icmp eq i32 %call4.i389.i.i.i, 0
  br i1 %tobool5.not.i390.i.i.i, label %hlock_class.exit398.i.i.i, label %land.lhs.true.i393.i.i.i

land.lhs.true.i393.i.i.i:                         ; preds = %do.end.i391.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %641 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i392.i.i.i = icmp eq i32 %641, 0
  br i1 %tobool6.not.i392.i.i.i, label %do.end15.i394.i.i.i, label %hlock_class.exit398.i.i.i

do.end15.i394.i.i.i:                              ; preds = %land.lhs.true.i393.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit398.i.i.i

if.end33.i396.i.i.i:                              ; preds = %for.cond.i.i.i
  %add.ptr.i395.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i382.i.i.i
  br label %hlock_class.exit398.i.i.i

hlock_class.exit398.i.i.i:                        ; preds = %if.end33.i396.i.i.i, %do.end15.i394.i.i.i, %land.lhs.true.i393.i.i.i, %do.end.i391.i.i.i, %if.then.i388.i.i.i
  %retval.0.i397.i.i.i = phi ptr [ %add.ptr.i395.i.i.i, %if.end33.i396.i.i.i ], [ null, %do.end15.i394.i.i.i ], [ null, %land.lhs.true.i393.i.i.i ], [ null, %do.end.i391.i.i.i ], [ null, %if.then.i388.i.i.i ]
  %locks_after134.i.i.i = getelementptr inbounds %struct.lock_class, ptr %retval.0.i397.i.i.i, i32 0, i32 2
  %cmp135.not.i.i.i = icmp eq ptr %entry1.0.i.i.i, %locks_after134.i.i.i
  br i1 %cmp135.not.i.i.i, label %if.end202.i.i.i, label %for.body.i.i89.i

for.body.i.i89.i:                                 ; preds = %hlock_class.exit398.i.i.i
  %class.i.i.i = getelementptr inbounds %struct.lock_list, ptr %entry1.0.i.i.i, i32 0, i32 1
  %642 = ptrtoint ptr %class.i.i.i to i32
  call void @__asan_load4_noabort(i32 %642)
  %643 = load ptr, ptr %class.i.i.i, align 4
  %644 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %644)
  %bf.load.i400.i.i.i = load i32, ptr %class_idx243, align 8
  %bf.lshr.i401.i.i.i = lshr i32 %bf.load.i400.i.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i402.i.i.i = lshr i32 %bf.load.i400.i.i.i, 24
  %arrayidx.i.i403.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i402.i.i.i
  %645 = ptrtoint ptr %arrayidx.i.i403.i.i.i to i32
  call void @__asan_load4_noabort(i32 %645)
  %646 = load volatile i32, ptr %arrayidx.i.i403.i.i.i, align 4
  %and.i.i404.i.i.i = and i32 %bf.lshr.i401.i.i.i, 31
  %647 = shl nuw i32 1, %and.i.i404.i.i.i
  %648 = and i32 %647, %646
  %tobool.not.i405.i.i.i = icmp eq i32 %648, 0
  br i1 %tobool.not.i405.i.i.i, label %if.then.i407.i.i.i, label %if.end33.i415.i.i.i

if.then.i407.i.i.i:                               ; preds = %for.body.i.i89.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %649 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i406.i.i.i = icmp eq i32 %649, 0
  br i1 %tobool2.not.i406.i.i.i, label %do.end.i410.i.i.i, label %hlock_class.exit417.i.i.i

do.end.i410.i.i.i:                                ; preds = %if.then.i407.i.i.i
  %call4.i408.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i409.i.i.i = icmp eq i32 %call4.i408.i.i.i, 0
  br i1 %tobool5.not.i409.i.i.i, label %hlock_class.exit417.i.i.i, label %land.lhs.true.i412.i.i.i

land.lhs.true.i412.i.i.i:                         ; preds = %do.end.i410.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %650 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i411.i.i.i = icmp eq i32 %650, 0
  br i1 %tobool6.not.i411.i.i.i, label %do.end15.i413.i.i.i, label %hlock_class.exit417.i.i.i

do.end15.i413.i.i.i:                              ; preds = %land.lhs.true.i412.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit417.i.i.i

if.end33.i415.i.i.i:                              ; preds = %for.body.i.i89.i
  %add.ptr.i414.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i401.i.i.i
  br label %hlock_class.exit417.i.i.i

hlock_class.exit417.i.i.i:                        ; preds = %if.end33.i415.i.i.i, %do.end15.i413.i.i.i, %land.lhs.true.i412.i.i.i, %do.end.i410.i.i.i, %if.then.i407.i.i.i
  %retval.0.i416.i.i.i = phi ptr [ %add.ptr.i414.i.i.i, %if.end33.i415.i.i.i ], [ null, %do.end15.i413.i.i.i ], [ null, %land.lhs.true.i412.i.i.i ], [ null, %do.end.i410.i.i.i ], [ null, %if.then.i407.i.i.i ]
  %cmp139.i.i.i = icmp eq ptr %643, %retval.0.i416.i.i.i
  br i1 %cmp139.i.i.i, label %if.then140.i.i.i, label %for.cond.i.i.i

if.then140.i.i.i:                                 ; preds = %hlock_class.exit417.i.i.i
  %cmp141.i.i.i = icmp eq i16 %391, 0
  br i1 %cmp141.i.i.i, label %if.then143.i.i.i, label %if.end145.i.i.i

if.then143.i.i.i:                                 ; preds = %if.then140.i.i.i
  %distance144.i.i.i = getelementptr inbounds %struct.lock_list, ptr %entry1.0.i.i.i, i32 0, i32 4
  %651 = ptrtoint ptr %distance144.i.i.i to i32
  call void @__asan_store2_noabort(i32 %651)
  store i16 1, ptr %distance144.i.i.i, align 4
  br label %if.end145.i.i.i

if.end145.i.i.i:                                  ; preds = %if.then143.i.i.i, %if.then140.i.i.i
  %652 = ptrtoint ptr %check.i.i to i32
  call void @__asan_load4_noabort(i32 %652)
  %bf.load.i.i418.i.i.i = load i32, ptr %check.i.i, align 8
  %653 = and i32 %bf.load.i.i418.i.i.i, 49152
  %cmp.i.i419.i.i.i = icmp eq i32 %653, 0
  %conv.i.i.i.i90.i = zext i1 %cmp.i.i419.i.i.i to i8
  %654 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %654)
  %bf.load2.i.i.i.i.i = load i32, ptr %class_idx243, align 8
  %655 = and i32 %bf.load2.i.i.i.i.i, 49152
  %cmp5.not.i.i.i.i.i = icmp eq i32 %655, 32768
  %shl.i.i420.i.i.i = select i1 %cmp5.not.i.i.i.i.i, i8 0, i8 2
  %add.i.i421.i.i.i = or i8 %shl.i.i420.i.i.i, %conv.i.i.i.i90.i
  %shl.i.i.i91.i = shl nuw i8 1, %add.i.i421.i.i.i
  %dep.i.i.i = getelementptr inbounds %struct.lock_list, ptr %entry1.0.i.i.i, i32 0, i32 5
  %656 = ptrtoint ptr %dep.i.i.i to i32
  call void @__asan_load1_noabort(i32 %656)
  %657 = load i8, ptr %dep.i.i.i, align 2
  %or293.i.i.i = or i8 %shl.i.i.i91.i, %657
  store i8 %or293.i.i.i, ptr %dep.i.i.i, align 2
  %bf.load.i423.i.i.i = load i32, ptr %class_idx243, align 8
  %bf.lshr.i424.i.i.i = lshr i32 %bf.load.i423.i.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i425.i.i.i = lshr i32 %bf.load.i423.i.i.i, 24
  %arrayidx.i.i426.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i425.i.i.i
  %658 = ptrtoint ptr %arrayidx.i.i426.i.i.i to i32
  call void @__asan_load4_noabort(i32 %658)
  %659 = load volatile i32, ptr %arrayidx.i.i426.i.i.i, align 4
  %and.i.i427.i.i.i = and i32 %bf.lshr.i424.i.i.i, 31
  %660 = shl nuw i32 1, %and.i.i427.i.i.i
  %661 = and i32 %660, %659
  %tobool.not.i428.i.i.i = icmp eq i32 %661, 0
  br i1 %tobool.not.i428.i.i.i, label %if.then.i430.i.i.i, label %if.end33.i438.i.i.i

if.then.i430.i.i.i:                               ; preds = %if.end145.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %662 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i429.i.i.i = icmp eq i32 %662, 0
  br i1 %tobool2.not.i429.i.i.i, label %do.end.i433.i.i.i, label %hlock_class.exit440.i.i.i

do.end.i433.i.i.i:                                ; preds = %if.then.i430.i.i.i
  %call4.i431.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i432.i.i.i = icmp eq i32 %call4.i431.i.i.i, 0
  br i1 %tobool5.not.i432.i.i.i, label %hlock_class.exit440.i.i.i, label %land.lhs.true.i435.i.i.i

land.lhs.true.i435.i.i.i:                         ; preds = %do.end.i433.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %663 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i434.i.i.i = icmp eq i32 %663, 0
  br i1 %tobool6.not.i434.i.i.i, label %do.end15.i436.i.i.i, label %hlock_class.exit440.i.i.i

do.end15.i436.i.i.i:                              ; preds = %land.lhs.true.i435.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit440.i.i.i

if.end33.i438.i.i.i:                              ; preds = %if.end145.i.i.i
  %add.ptr.i437.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i424.i.i.i
  br label %hlock_class.exit440.i.i.i

hlock_class.exit440.i.i.i:                        ; preds = %if.end33.i438.i.i.i, %do.end15.i436.i.i.i, %land.lhs.true.i435.i.i.i, %do.end.i433.i.i.i, %if.then.i430.i.i.i
  %retval.0.i439.i.i.i = phi ptr [ %add.ptr.i437.i.i.i, %if.end33.i438.i.i.i ], [ null, %do.end15.i436.i.i.i ], [ null, %land.lhs.true.i435.i.i.i ], [ null, %do.end.i433.i.i.i ], [ null, %if.then.i430.i.i.i ]
  %locks_before.i.i.i = getelementptr inbounds %struct.lock_class, ptr %retval.0.i439.i.i.i, i32 0, i32 3
  br label %for.cond155.i.i.i

for.cond155.i.i.i:                                ; preds = %hlock_class.exit478.i.i.i, %hlock_class.exit440.i.i.i
  %entry1.1.in.i.i.i = phi ptr [ %locks_before.i.i.i, %hlock_class.exit440.i.i.i ], [ %entry1.1.i.i.i, %hlock_class.exit478.i.i.i ]
  %664 = ptrtoint ptr %entry1.1.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %664)
  %entry1.1.i.i.i = load ptr, ptr %entry1.1.in.i.i.i, align 4
  %665 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %665)
  %bf.load.i442.i.i.i = load i32, ptr %class_idx243, align 8
  %bf.lshr.i443.i.i.i = lshr i32 %bf.load.i442.i.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i444.i.i.i = lshr i32 %bf.load.i442.i.i.i, 24
  %arrayidx.i.i445.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i444.i.i.i
  %666 = ptrtoint ptr %arrayidx.i.i445.i.i.i to i32
  call void @__asan_load4_noabort(i32 %666)
  %667 = load volatile i32, ptr %arrayidx.i.i445.i.i.i, align 4
  %and.i.i446.i.i.i = and i32 %bf.lshr.i443.i.i.i, 31
  %668 = shl nuw i32 1, %and.i.i446.i.i.i
  %669 = and i32 %668, %667
  %tobool.not.i447.i.i.i = icmp eq i32 %669, 0
  br i1 %tobool.not.i447.i.i.i, label %if.then.i449.i.i.i, label %if.end33.i457.i.i.i

if.then.i449.i.i.i:                               ; preds = %for.cond155.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %670 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i448.i.i.i = icmp eq i32 %670, 0
  br i1 %tobool2.not.i448.i.i.i, label %do.end.i452.i.i.i, label %hlock_class.exit459.i.i.i

do.end.i452.i.i.i:                                ; preds = %if.then.i449.i.i.i
  %call4.i450.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i451.i.i.i = icmp eq i32 %call4.i450.i.i.i, 0
  br i1 %tobool5.not.i451.i.i.i, label %hlock_class.exit459.i.i.i, label %land.lhs.true.i454.i.i.i

land.lhs.true.i454.i.i.i:                         ; preds = %do.end.i452.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %671 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i453.i.i.i = icmp eq i32 %671, 0
  br i1 %tobool6.not.i453.i.i.i, label %do.end15.i455.i.i.i, label %hlock_class.exit459.i.i.i

do.end15.i455.i.i.i:                              ; preds = %land.lhs.true.i454.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit459.i.i.i

if.end33.i457.i.i.i:                              ; preds = %for.cond155.i.i.i
  %add.ptr.i456.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i443.i.i.i
  br label %hlock_class.exit459.i.i.i

hlock_class.exit459.i.i.i:                        ; preds = %if.end33.i457.i.i.i, %do.end15.i455.i.i.i, %land.lhs.true.i454.i.i.i, %do.end.i452.i.i.i, %if.then.i449.i.i.i
  %retval.0.i458.i.i.i = phi ptr [ %add.ptr.i456.i.i.i, %if.end33.i457.i.i.i ], [ null, %do.end15.i455.i.i.i ], [ null, %land.lhs.true.i454.i.i.i ], [ null, %do.end.i452.i.i.i ], [ null, %if.then.i449.i.i.i ]
  %locks_before158.i.i.i = getelementptr inbounds %struct.lock_class, ptr %retval.0.i458.i.i.i, i32 0, i32 3
  %cmp159.not.i.i.i = icmp eq ptr %entry1.1.i.i.i, %locks_before158.i.i.i
  br i1 %cmp159.not.i.i.i, label %check_prevs_add.exit.thread.i, label %for.body163.i.i.i

for.body163.i.i.i:                                ; preds = %hlock_class.exit459.i.i.i
  %class164.i.i.i = getelementptr inbounds %struct.lock_list, ptr %entry1.1.i.i.i, i32 0, i32 1
  %672 = ptrtoint ptr %class164.i.i.i to i32
  call void @__asan_load4_noabort(i32 %672)
  %673 = load ptr, ptr %class164.i.i.i, align 4
  %674 = ptrtoint ptr %check.i.i to i32
  call void @__asan_load4_noabort(i32 %674)
  %bf.load.i461.i.i.i = load i32, ptr %check.i.i, align 8
  %bf.lshr.i462.i.i.i = lshr i32 %bf.load.i461.i.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i463.i.i.i = lshr i32 %bf.load.i461.i.i.i, 24
  %arrayidx.i.i464.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i463.i.i.i
  %675 = ptrtoint ptr %arrayidx.i.i464.i.i.i to i32
  call void @__asan_load4_noabort(i32 %675)
  %676 = load volatile i32, ptr %arrayidx.i.i464.i.i.i, align 4
  %and.i.i465.i.i.i = and i32 %bf.lshr.i462.i.i.i, 31
  %677 = shl nuw i32 1, %and.i.i465.i.i.i
  %678 = and i32 %677, %676
  %tobool.not.i466.i.i.i = icmp eq i32 %678, 0
  br i1 %tobool.not.i466.i.i.i, label %if.then.i468.i.i.i, label %if.end33.i476.i.i.i

if.then.i468.i.i.i:                               ; preds = %for.body163.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %679 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i467.i.i.i = icmp eq i32 %679, 0
  br i1 %tobool2.not.i467.i.i.i, label %do.end.i471.i.i.i, label %hlock_class.exit478.i.i.i

do.end.i471.i.i.i:                                ; preds = %if.then.i468.i.i.i
  %call4.i469.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i470.i.i.i = icmp eq i32 %call4.i469.i.i.i, 0
  br i1 %tobool5.not.i470.i.i.i, label %hlock_class.exit478.i.i.i, label %land.lhs.true.i473.i.i.i

land.lhs.true.i473.i.i.i:                         ; preds = %do.end.i471.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %680 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i472.i.i.i = icmp eq i32 %680, 0
  br i1 %tobool6.not.i472.i.i.i, label %do.end15.i474.i.i.i, label %hlock_class.exit478.i.i.i

do.end15.i474.i.i.i:                              ; preds = %land.lhs.true.i473.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit478.i.i.i

if.end33.i476.i.i.i:                              ; preds = %for.body163.i.i.i
  %add.ptr.i475.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i462.i.i.i
  br label %hlock_class.exit478.i.i.i

hlock_class.exit478.i.i.i:                        ; preds = %if.end33.i476.i.i.i, %do.end15.i474.i.i.i, %land.lhs.true.i473.i.i.i, %do.end.i471.i.i.i, %if.then.i468.i.i.i
  %retval.0.i477.i.i.i = phi ptr [ %add.ptr.i475.i.i.i, %if.end33.i476.i.i.i ], [ null, %do.end15.i474.i.i.i ], [ null, %land.lhs.true.i473.i.i.i ], [ null, %do.end.i471.i.i.i ], [ null, %if.then.i468.i.i.i ]
  %cmp166.i.i.i = icmp eq ptr %673, %retval.0.i477.i.i.i
  br i1 %cmp166.i.i.i, label %if.then168.i.i.i, label %for.cond155.i.i.i

if.then168.i.i.i:                                 ; preds = %hlock_class.exit478.i.i.i
  br i1 %cmp141.i.i.i, label %if.then172.i.i.i, label %if.end174.i.i.i

if.then172.i.i.i:                                 ; preds = %if.then168.i.i.i
  %distance173.i.i.i = getelementptr inbounds %struct.lock_list, ptr %entry1.1.i.i.i, i32 0, i32 4
  %681 = ptrtoint ptr %distance173.i.i.i to i32
  call void @__asan_store2_noabort(i32 %681)
  store i16 1, ptr %distance173.i.i.i, align 4
  br label %if.end174.i.i.i

if.end174.i.i.i:                                  ; preds = %if.then172.i.i.i, %if.then168.i.i.i
  %682 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %682)
  %bf.load.i.i480.i.i.i = load i32, ptr %class_idx243, align 8
  %683 = and i32 %bf.load.i.i480.i.i.i, 49152
  %cmp.i.i481.i.i.i = icmp ne i32 %683, 32768
  %conv.i.i482.i.i.i = zext i1 %cmp.i.i481.i.i.i to i8
  %684 = ptrtoint ptr %check.i.i to i32
  call void @__asan_load4_noabort(i32 %684)
  %bf.load2.i.i484.i.i.i = load i32, ptr %check.i.i, align 8
  %685 = and i32 %bf.load2.i.i484.i.i.i, 49152
  %cmp5.i.i485.i.i.i = icmp eq i32 %685, 0
  %shl.i.i486.i.i.i = select i1 %cmp5.i.i485.i.i.i, i8 2, i8 0
  %add.i.i487.i.i.i = or i8 %shl.i.i486.i.i.i, %conv.i.i482.i.i.i
  %shl.i488.i.i.i = shl nuw i8 1, %add.i.i487.i.i.i
  %dep177.i.i.i = getelementptr inbounds %struct.lock_list, ptr %entry1.1.i.i.i, i32 0, i32 5
  %686 = ptrtoint ptr %dep177.i.i.i to i32
  call void @__asan_load1_noabort(i32 %686)
  %687 = load i8, ptr %dep177.i.i.i, align 2
  %or179294.i.i.i = or i8 %shl.i488.i.i.i, %687
  store i8 %or179294.i.i.i, ptr %dep177.i.i.i, align 2
  br label %cleanup.i.i

if.end202.i.i.i:                                  ; preds = %hlock_class.exit398.i.i.i
  %688 = ptrtoint ptr %trace.i.i to i32
  call void @__asan_load4_noabort(i32 %688)
  %689 = load ptr, ptr %trace.i.i, align 4
  %tobool203.not.i.i.i = icmp eq ptr %689, null
  br i1 %tobool203.not.i.i.i, label %if.then204.i.i.i, label %if.end209.i.i.i

if.then204.i.i.i:                                 ; preds = %if.end202.i.i.i
  %call205.i.i.i = call fastcc ptr @save_trace() #28
  %690 = ptrtoint ptr %trace.i.i to i32
  call void @__asan_store4_noabort(i32 %690)
  store ptr %call205.i.i.i, ptr %trace.i.i, align 4
  %tobool206.not.i.i.i = icmp eq ptr %call205.i.i.i, null
  br i1 %tobool206.not.i.i.i, label %check_prevs_add.exit.thread.i, label %if.end209.i.i.i

if.end209.i.i.i:                                  ; preds = %if.then204.i.i.i, %if.end202.i.i.i
  %691 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %691)
  %bf.load.i490.i.i.i = load i32, ptr %class_idx243, align 8
  %bf.lshr.i491.i.i.i = lshr i32 %bf.load.i490.i.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i492.i.i.i = lshr i32 %bf.load.i490.i.i.i, 24
  %arrayidx.i.i493.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i492.i.i.i
  %692 = ptrtoint ptr %arrayidx.i.i493.i.i.i to i32
  call void @__asan_load4_noabort(i32 %692)
  %693 = load volatile i32, ptr %arrayidx.i.i493.i.i.i, align 4
  %and.i.i494.i.i.i = and i32 %bf.lshr.i491.i.i.i, 31
  %694 = shl nuw i32 1, %and.i.i494.i.i.i
  %695 = and i32 %694, %693
  %tobool.not.i495.i.i.i = icmp eq i32 %695, 0
  br i1 %tobool.not.i495.i.i.i, label %if.then.i497.i.i.i, label %if.end33.i505.i.i.i

if.then.i497.i.i.i:                               ; preds = %if.end209.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %696 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i496.i.i.i = icmp eq i32 %696, 0
  br i1 %tobool2.not.i496.i.i.i, label %do.end.i500.i.i.i, label %hlock_class.exit507.i.i.i

do.end.i500.i.i.i:                                ; preds = %if.then.i497.i.i.i
  %call4.i498.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i499.i.i.i = icmp eq i32 %call4.i498.i.i.i, 0
  br i1 %tobool5.not.i499.i.i.i, label %hlock_class.exit507.i.i.i, label %land.lhs.true.i502.i.i.i

land.lhs.true.i502.i.i.i:                         ; preds = %do.end.i500.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %697 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i501.i.i.i = icmp eq i32 %697, 0
  br i1 %tobool6.not.i501.i.i.i, label %do.end15.i503.i.i.i, label %hlock_class.exit507.i.i.i

do.end15.i503.i.i.i:                              ; preds = %land.lhs.true.i502.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit507.i.i.i

if.end33.i505.i.i.i:                              ; preds = %if.end209.i.i.i
  %add.ptr.i504.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i491.i.i.i
  br label %hlock_class.exit507.i.i.i

hlock_class.exit507.i.i.i:                        ; preds = %if.end33.i505.i.i.i, %do.end15.i503.i.i.i, %land.lhs.true.i502.i.i.i, %do.end.i500.i.i.i, %if.then.i497.i.i.i
  %retval.0.i506.i.i.i = phi ptr [ %add.ptr.i504.i.i.i, %if.end33.i505.i.i.i ], [ null, %do.end15.i503.i.i.i ], [ null, %land.lhs.true.i502.i.i.i ], [ null, %do.end.i500.i.i.i ], [ null, %if.then.i497.i.i.i ]
  %698 = ptrtoint ptr %check.i.i to i32
  call void @__asan_load4_noabort(i32 %698)
  %bf.load.i509.i.i.i = load i32, ptr %check.i.i, align 8
  %bf.lshr.i510.i.i.i = lshr i32 %bf.load.i509.i.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i511.i.i.i = lshr i32 %bf.load.i509.i.i.i, 24
  %arrayidx.i.i512.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i511.i.i.i
  %699 = ptrtoint ptr %arrayidx.i.i512.i.i.i to i32
  call void @__asan_load4_noabort(i32 %699)
  %700 = load volatile i32, ptr %arrayidx.i.i512.i.i.i, align 4
  %and.i.i513.i.i.i = and i32 %bf.lshr.i510.i.i.i, 31
  %701 = shl nuw i32 1, %and.i.i513.i.i.i
  %702 = and i32 %701, %700
  %tobool.not.i514.i.i.i = icmp eq i32 %702, 0
  br i1 %tobool.not.i514.i.i.i, label %if.then.i516.i.i.i, label %if.end33.i524.i.i.i

if.then.i516.i.i.i:                               ; preds = %hlock_class.exit507.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %703 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i515.i.i.i = icmp eq i32 %703, 0
  br i1 %tobool2.not.i515.i.i.i, label %do.end.i519.i.i.i, label %hlock_class.exit526.i.i.i

do.end.i519.i.i.i:                                ; preds = %if.then.i516.i.i.i
  %call4.i517.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i518.i.i.i = icmp eq i32 %call4.i517.i.i.i, 0
  br i1 %tobool5.not.i518.i.i.i, label %hlock_class.exit526.i.i.i, label %land.lhs.true.i521.i.i.i

land.lhs.true.i521.i.i.i:                         ; preds = %do.end.i519.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %704 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i520.i.i.i = icmp eq i32 %704, 0
  br i1 %tobool6.not.i520.i.i.i, label %do.end15.i522.i.i.i, label %hlock_class.exit526.i.i.i

do.end15.i522.i.i.i:                              ; preds = %land.lhs.true.i521.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit526.i.i.i

if.end33.i524.i.i.i:                              ; preds = %hlock_class.exit507.i.i.i
  %add.ptr.i523.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i510.i.i.i
  br label %hlock_class.exit526.i.i.i

hlock_class.exit526.i.i.i:                        ; preds = %if.end33.i524.i.i.i, %do.end15.i522.i.i.i, %land.lhs.true.i521.i.i.i, %do.end.i519.i.i.i, %if.then.i516.i.i.i
  %retval.0.i525.i.i.i = phi ptr [ %add.ptr.i523.i.i.i, %if.end33.i524.i.i.i ], [ null, %do.end15.i522.i.i.i ], [ null, %land.lhs.true.i521.i.i.i ], [ null, %do.end.i519.i.i.i ], [ null, %if.then.i516.i.i.i ]
  %705 = ptrtoint ptr %check.i.i to i32
  call void @__asan_load4_noabort(i32 %705)
  %bf.load.i528.i.i.i = load i32, ptr %check.i.i, align 8
  %bf.lshr.i529.i.i.i = lshr i32 %bf.load.i528.i.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i530.i.i.i = lshr i32 %bf.load.i528.i.i.i, 24
  %arrayidx.i.i531.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i530.i.i.i
  %706 = ptrtoint ptr %arrayidx.i.i531.i.i.i to i32
  call void @__asan_load4_noabort(i32 %706)
  %707 = load volatile i32, ptr %arrayidx.i.i531.i.i.i, align 4
  %and.i.i532.i.i.i = and i32 %bf.lshr.i529.i.i.i, 31
  %708 = shl nuw i32 1, %and.i.i532.i.i.i
  %709 = and i32 %708, %707
  %tobool.not.i533.i.i.i = icmp eq i32 %709, 0
  br i1 %tobool.not.i533.i.i.i, label %if.then.i535.i.i.i, label %if.end33.i543.i.i.i

if.then.i535.i.i.i:                               ; preds = %hlock_class.exit526.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %710 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i534.i.i.i = icmp eq i32 %710, 0
  br i1 %tobool2.not.i534.i.i.i, label %do.end.i538.i.i.i, label %hlock_class.exit545.i.i.i

do.end.i538.i.i.i:                                ; preds = %if.then.i535.i.i.i
  %call4.i536.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i537.i.i.i = icmp eq i32 %call4.i536.i.i.i, 0
  br i1 %tobool5.not.i537.i.i.i, label %hlock_class.exit545.i.i.i, label %land.lhs.true.i540.i.i.i

land.lhs.true.i540.i.i.i:                         ; preds = %do.end.i538.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %711 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i539.i.i.i = icmp eq i32 %711, 0
  br i1 %tobool6.not.i539.i.i.i, label %do.end15.i541.i.i.i, label %hlock_class.exit545.i.i.i

do.end15.i541.i.i.i:                              ; preds = %land.lhs.true.i540.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit545.i.i.i

if.end33.i543.i.i.i:                              ; preds = %hlock_class.exit526.i.i.i
  %add.ptr.i542.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i529.i.i.i
  br label %hlock_class.exit545.i.i.i

hlock_class.exit545.i.i.i:                        ; preds = %if.end33.i543.i.i.i, %do.end15.i541.i.i.i, %land.lhs.true.i540.i.i.i, %do.end.i538.i.i.i, %if.then.i535.i.i.i
  %retval.0.i544.i.i.i = phi ptr [ %add.ptr.i542.i.i.i, %if.end33.i543.i.i.i ], [ null, %do.end15.i541.i.i.i ], [ null, %land.lhs.true.i540.i.i.i ], [ null, %do.end.i538.i.i.i ], [ null, %if.then.i535.i.i.i ]
  %locks_after213.i.i.i = getelementptr inbounds %struct.lock_class, ptr %retval.0.i544.i.i.i, i32 0, i32 2
  %712 = ptrtoint ptr %check.i.i to i32
  call void @__asan_load4_noabort(i32 %712)
  %bf.load.i.i547.i.i.i = load i32, ptr %check.i.i, align 8
  %713 = and i32 %bf.load.i.i547.i.i.i, 49152
  %cmp.i.i548.i.i.i = icmp eq i32 %713, 0
  %conv.i.i549.i.i.i = zext i1 %cmp.i.i548.i.i.i to i8
  %714 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %714)
  %bf.load2.i.i551.i.i.i = load i32, ptr %class_idx243, align 8
  %715 = and i32 %bf.load2.i.i551.i.i.i, 49152
  %cmp5.not.i.i552.i.i.i = icmp eq i32 %715, 32768
  %shl.i.i553.i.i.i = select i1 %cmp5.not.i.i552.i.i.i, i8 0, i8 2
  %add.i.i554.i.i.i = or i8 %shl.i.i553.i.i.i, %conv.i.i549.i.i.i
  %shl.i555.i.i.i = shl nuw i8 1, %add.i.i554.i.i.i
  %716 = ptrtoint ptr %trace.i.i to i32
  call void @__asan_load4_noabort(i32 %716)
  %717 = load ptr, ptr %trace.i.i, align 4
  %call215.i.i.i = call fastcc i32 @add_lock_to_list(ptr noundef %retval.0.i506.i.i.i, ptr noundef %retval.0.i525.i.i.i, ptr noundef %locks_after213.i.i.i, i16 noundef zeroext %conv.i.i, i8 noundef zeroext %shl.i555.i.i.i, ptr noundef %717) #28
  %tobool216.not.i.i.i = icmp eq i32 %call215.i.i.i, 0
  br i1 %tobool216.not.i.i.i, label %check_prevs_add.exit.thread.i, label %if.end218.i.i.i

if.end218.i.i.i:                                  ; preds = %hlock_class.exit545.i.i.i
  %718 = ptrtoint ptr %check.i.i to i32
  call void @__asan_load4_noabort(i32 %718)
  %bf.load.i557.i.i.i = load i32, ptr %check.i.i, align 8
  %bf.lshr.i558.i.i.i = lshr i32 %bf.load.i557.i.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i559.i.i.i = lshr i32 %bf.load.i557.i.i.i, 24
  %arrayidx.i.i560.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i559.i.i.i
  %719 = ptrtoint ptr %arrayidx.i.i560.i.i.i to i32
  call void @__asan_load4_noabort(i32 %719)
  %720 = load volatile i32, ptr %arrayidx.i.i560.i.i.i, align 4
  %and.i.i561.i.i.i = and i32 %bf.lshr.i558.i.i.i, 31
  %721 = shl nuw i32 1, %and.i.i561.i.i.i
  %722 = and i32 %721, %720
  %tobool.not.i562.i.i.i = icmp eq i32 %722, 0
  br i1 %tobool.not.i562.i.i.i, label %if.then.i564.i.i.i, label %if.end33.i572.i.i.i

if.then.i564.i.i.i:                               ; preds = %if.end218.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %723 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i563.i.i.i = icmp eq i32 %723, 0
  br i1 %tobool2.not.i563.i.i.i, label %do.end.i567.i.i.i, label %hlock_class.exit574.i.i.i

do.end.i567.i.i.i:                                ; preds = %if.then.i564.i.i.i
  %call4.i565.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i566.i.i.i = icmp eq i32 %call4.i565.i.i.i, 0
  br i1 %tobool5.not.i566.i.i.i, label %hlock_class.exit574.i.i.i, label %land.lhs.true.i569.i.i.i

land.lhs.true.i569.i.i.i:                         ; preds = %do.end.i567.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %724 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i568.i.i.i = icmp eq i32 %724, 0
  br i1 %tobool6.not.i568.i.i.i, label %do.end15.i570.i.i.i, label %hlock_class.exit574.i.i.i

do.end15.i570.i.i.i:                              ; preds = %land.lhs.true.i569.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit574.i.i.i

if.end33.i572.i.i.i:                              ; preds = %if.end218.i.i.i
  %add.ptr.i571.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i558.i.i.i
  br label %hlock_class.exit574.i.i.i

hlock_class.exit574.i.i.i:                        ; preds = %if.end33.i572.i.i.i, %do.end15.i570.i.i.i, %land.lhs.true.i569.i.i.i, %do.end.i567.i.i.i, %if.then.i564.i.i.i
  %retval.0.i573.i.i.i = phi ptr [ %add.ptr.i571.i.i.i, %if.end33.i572.i.i.i ], [ null, %do.end15.i570.i.i.i ], [ null, %land.lhs.true.i569.i.i.i ], [ null, %do.end.i567.i.i.i ], [ null, %if.then.i564.i.i.i ]
  %725 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %725)
  %bf.load.i576.i.i.i = load i32, ptr %class_idx243, align 8
  %bf.lshr.i577.i.i.i = lshr i32 %bf.load.i576.i.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i578.i.i.i = lshr i32 %bf.load.i576.i.i.i, 24
  %arrayidx.i.i579.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i578.i.i.i
  %726 = ptrtoint ptr %arrayidx.i.i579.i.i.i to i32
  call void @__asan_load4_noabort(i32 %726)
  %727 = load volatile i32, ptr %arrayidx.i.i579.i.i.i, align 4
  %and.i.i580.i.i.i = and i32 %bf.lshr.i577.i.i.i, 31
  %728 = shl nuw i32 1, %and.i.i580.i.i.i
  %729 = and i32 %728, %727
  %tobool.not.i581.i.i.i = icmp eq i32 %729, 0
  br i1 %tobool.not.i581.i.i.i, label %if.then.i583.i.i.i, label %if.end33.i591.i.i.i

if.then.i583.i.i.i:                               ; preds = %hlock_class.exit574.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %730 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i582.i.i.i = icmp eq i32 %730, 0
  br i1 %tobool2.not.i582.i.i.i, label %do.end.i586.i.i.i, label %hlock_class.exit593.i.i.i

do.end.i586.i.i.i:                                ; preds = %if.then.i583.i.i.i
  %call4.i584.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i585.i.i.i = icmp eq i32 %call4.i584.i.i.i, 0
  br i1 %tobool5.not.i585.i.i.i, label %hlock_class.exit593.i.i.i, label %land.lhs.true.i588.i.i.i

land.lhs.true.i588.i.i.i:                         ; preds = %do.end.i586.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %731 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i587.i.i.i = icmp eq i32 %731, 0
  br i1 %tobool6.not.i587.i.i.i, label %do.end15.i589.i.i.i, label %hlock_class.exit593.i.i.i

do.end15.i589.i.i.i:                              ; preds = %land.lhs.true.i588.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit593.i.i.i

if.end33.i591.i.i.i:                              ; preds = %hlock_class.exit574.i.i.i
  %add.ptr.i590.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i577.i.i.i
  br label %hlock_class.exit593.i.i.i

hlock_class.exit593.i.i.i:                        ; preds = %if.end33.i591.i.i.i, %do.end15.i589.i.i.i, %land.lhs.true.i588.i.i.i, %do.end.i586.i.i.i, %if.then.i583.i.i.i
  %retval.0.i592.i.i.i = phi ptr [ %add.ptr.i590.i.i.i, %if.end33.i591.i.i.i ], [ null, %do.end15.i589.i.i.i ], [ null, %land.lhs.true.i588.i.i.i ], [ null, %do.end.i586.i.i.i ], [ null, %if.then.i583.i.i.i ]
  %732 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %732)
  %bf.load.i595.i.i.i = load i32, ptr %class_idx243, align 8
  %bf.lshr.i596.i.i.i = lshr i32 %bf.load.i595.i.i.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i597.i.i.i = lshr i32 %bf.load.i595.i.i.i, 24
  %arrayidx.i.i598.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i597.i.i.i
  %733 = ptrtoint ptr %arrayidx.i.i598.i.i.i to i32
  call void @__asan_load4_noabort(i32 %733)
  %734 = load volatile i32, ptr %arrayidx.i.i598.i.i.i, align 4
  %and.i.i599.i.i.i = and i32 %bf.lshr.i596.i.i.i, 31
  %735 = shl nuw i32 1, %and.i.i599.i.i.i
  %736 = and i32 %735, %734
  %tobool.not.i600.i.i.i = icmp eq i32 %736, 0
  br i1 %tobool.not.i600.i.i.i, label %if.then.i602.i.i.i, label %if.end33.i610.i.i.i

if.then.i602.i.i.i:                               ; preds = %hlock_class.exit593.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %737 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i601.i.i.i = icmp eq i32 %737, 0
  br i1 %tobool2.not.i601.i.i.i, label %do.end.i605.i.i.i, label %hlock_class.exit612.i.i.i

do.end.i605.i.i.i:                                ; preds = %if.then.i602.i.i.i
  %call4.i603.i.i.i = call i32 @debug_locks_off() #28
  %tobool5.not.i604.i.i.i = icmp eq i32 %call4.i603.i.i.i, 0
  br i1 %tobool5.not.i604.i.i.i, label %hlock_class.exit612.i.i.i, label %land.lhs.true.i607.i.i.i

land.lhs.true.i607.i.i.i:                         ; preds = %do.end.i605.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %738 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i606.i.i.i = icmp eq i32 %738, 0
  br i1 %tobool6.not.i606.i.i.i, label %do.end15.i608.i.i.i, label %hlock_class.exit612.i.i.i

do.end15.i608.i.i.i:                              ; preds = %land.lhs.true.i607.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit612.i.i.i

if.end33.i610.i.i.i:                              ; preds = %hlock_class.exit593.i.i.i
  %add.ptr.i609.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i596.i.i.i
  br label %hlock_class.exit612.i.i.i

hlock_class.exit612.i.i.i:                        ; preds = %if.end33.i610.i.i.i, %do.end15.i608.i.i.i, %land.lhs.true.i607.i.i.i, %do.end.i605.i.i.i, %if.then.i602.i.i.i
  %retval.0.i611.i.i.i = phi ptr [ %add.ptr.i609.i.i.i, %if.end33.i610.i.i.i ], [ null, %do.end15.i608.i.i.i ], [ null, %land.lhs.true.i607.i.i.i ], [ null, %do.end.i605.i.i.i ], [ null, %if.then.i602.i.i.i ]
  %locks_before222.i.i.i = getelementptr inbounds %struct.lock_class, ptr %retval.0.i611.i.i.i, i32 0, i32 3
  %739 = ptrtoint ptr %class_idx243 to i32
  call void @__asan_load4_noabort(i32 %739)
  %bf.load.i.i614.i.i.i = load i32, ptr %class_idx243, align 8
  %740 = and i32 %bf.load.i.i614.i.i.i, 49152
  %cmp.i.i615.i.i.i = icmp ne i32 %740, 32768
  %conv.i.i616.i.i.i = zext i1 %cmp.i.i615.i.i.i to i8
  %741 = ptrtoint ptr %check.i.i to i32
  call void @__asan_load4_noabort(i32 %741)
  %bf.load2.i.i618.i.i.i = load i32, ptr %check.i.i, align 8
  %742 = and i32 %bf.load2.i.i618.i.i.i, 49152
  %cmp5.i.i619.i.i.i = icmp eq i32 %742, 0
  %shl.i.i620.i.i.i = select i1 %cmp5.i.i619.i.i.i, i8 2, i8 0
  %add.i.i621.i.i.i = or i8 %shl.i.i620.i.i.i, %conv.i.i616.i.i.i
  %shl.i622.i.i.i = shl nuw i8 1, %add.i.i621.i.i.i
  %call225.i.i.i = call fastcc i32 @add_lock_to_list(ptr noundef %retval.0.i573.i.i.i, ptr noundef %retval.0.i592.i.i.i, ptr noundef %locks_before222.i.i.i, i16 noundef zeroext %conv.i.i, i8 noundef zeroext %shl.i622.i.i.i, ptr noundef %717) #28
  %tobool226.not.i.i.i = icmp eq i32 %call225.i.i.i, 0
  br i1 %tobool226.not.i.i.i, label %check_prevs_add.exit.thread.i, label %cleanup.i.i

cleanup.i.i:                                      ; preds = %hlock_class.exit612.i.i.i, %if.end174.i.i.i, %if.then76.i.i.i, %land.rhs65.i.i.i, %hlock_class.exit353.i.i.i, %if.end42.i.i.i, %if.then.i.i73.i
  %743 = ptrtoint ptr %check.i.i to i32
  call void @__asan_load4_noabort(i32 %743)
  %bf.load21.i.i = load i32, ptr %check.i.i, align 8
  %744 = and i32 %bf.load21.i.i, 65536
  %tobool24.not.i.i = icmp eq i32 %744, 0
  br i1 %tobool24.not.i.i, label %check_prevs_add.exit.i, label %if.end27.i.i

if.end27.i.i:                                     ; preds = %cleanup.i.i, %for.cond.i.i
  %dec.i.i = add i32 %depth.0.i.i, -1
  %tobool28.not.i.i = icmp eq i32 %dec.i.i, 0
  br i1 %tobool28.not.i.i, label %check_prevs_add.exit.i, label %if.end30.i.i

if.end30.i.i:                                     ; preds = %if.end27.i.i
  %irq_context33.i.i = getelementptr %struct.task_struct, ptr %3, i32 0, i32 144, i32 %dec.i.i, i32 6
  %745 = ptrtoint ptr %irq_context33.i.i to i32
  call void @__asan_load4_noabort(i32 %745)
  %bf.load34.i.i = load i32, ptr %irq_context33.i.i, align 8
  %sub38.i.i = add i32 %depth.0.i.i, -2
  %irq_context40.i.i = getelementptr %struct.task_struct, ptr %3, i32 0, i32 144, i32 %sub38.i.i, i32 6
  %746 = ptrtoint ptr %irq_context40.i.i to i32
  call void @__asan_load4_noabort(i32 %746)
  %bf.load41.i.i = load i32, ptr %irq_context40.i.i, align 8
  %bf.lshr3595.i.i = xor i32 %bf.load41.i.i, %bf.load34.i.i
  %747 = and i32 %bf.lshr3595.i.i, 393216
  %cmp44.not.i.i = icmp eq i32 %747, 0
  br i1 %cmp44.not.i.i, label %for.cond.i.i, label %check_prevs_add.exit.i

out_bug.i.i:                                      ; preds = %if.end.i.i786, %if.then12.i
  %call.i.i.i = tail call i32 @debug_locks_off() #28
  tail call fastcc void @lockdep_unlock() #28
  %tobool52.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool52.not.i.i, label %check_prevs_add.exit.thread.i, label %do.end.i.i788

do.end.i.i788:                                    ; preds = %out_bug.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3223, i32 noundef 9, ptr noundef null) #28
  br label %check_prevs_add.exit.thread.i

check_prevs_add.exit.thread.i:                    ; preds = %do.end.i.i788, %out_bug.i.i, %hlock_class.exit612.i.i.i, %hlock_class.exit545.i.i.i, %if.then204.i.i.i, %hlock_class.exit459.i.i.i, %check_irq_usage.exit.i.i.i, %if.end114.i.i.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %trace.i.i) #28
  br label %cleanup

check_prevs_add.exit.i:                           ; preds = %if.end30.i.i, %if.end27.i.i, %cleanup.i.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %trace.i.i) #28
  br label %cleanup.i

cleanup.i:                                        ; preds = %check_prevs_add.exit.i, %if.end.i785, %if.end12.i.i
  call fastcc void @lockdep_unlock() #28
  br label %if.end549

if.else.i790:                                     ; preds = %if.end33.i130.i.i, %if.then29.i.i.i, %if.end7.i.i.i, %if.then3.i.i.i, %do.end19.i.i.i.i, %land.lhs.true5.i.i.i.i, %do.end.i.i.i.i, %if.end10.i.i, %check_no_collision.exit.i.i, %for.inc.i63.i.i, %if.end40.i.i.i, %if.end545
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %748 = load i32, ptr @debug_locks, align 4
  %tobool18.not.i789 = icmp eq i32 %748, 0
  br i1 %tobool18.not.i789, label %cleanup, label %if.end549, !prof !1501

if.end549:                                        ; preds = %if.else.i790, %cleanup.i
  %749 = ptrtoint ptr %curr_chain_key to i32
  call void @__asan_store8_noabort(i32 %749)
  store i64 %or.i734, ptr %curr_chain_key, align 16
  %750 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %750)
  %751 = load i32, ptr %lockdep_depth, align 8
  %inc552 = add i32 %751, 1
  store i32 %inc552, ptr %lockdep_depth, align 8
  call fastcc void @check_chain_key(ptr noundef %3)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %752 = load i32, ptr @debug_locks, align 4
  %tobool553.not = icmp eq i32 %752, 0
  br i1 %tobool553.not, label %cleanup, label %if.end563, !prof !1501

if.end563:                                        ; preds = %if.end549
  %753 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %753)
  %754 = load i32, ptr %lockdep_depth, align 8
  %cmp565 = icmp ugt i32 %754, 47
  br i1 %cmp565, label %if.then573, label %if.end583, !prof !1501

if.then573:                                       ; preds = %if.end563
  %call574 = call i32 @debug_locks_off() #28
  call fastcc void @print_lockdep_off(ptr noundef nonnull @.str.432)
  %755 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %755)
  %756 = load i32, ptr %lockdep_depth, align 8
  %call580 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.434, i32 noundef %756, i32 noundef 48) #32
  %757 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %757)
  %758 = load ptr, ptr %task, align 8
  call fastcc void @lockdep_print_held_locks(ptr noundef %758)
  call void @debug_show_all_locks()
  call void @dump_stack() #32
  br label %cleanup

if.end583:                                        ; preds = %if.end563
  %759 = load i32, ptr @max_lockdep_depth, align 4
  %cmp585 = icmp ugt i32 %754, %759
  br i1 %cmp585, label %if.then593, label %cleanup, !prof !1501

if.then593:                                       ; preds = %if.end583
  store i32 %754, ptr @max_lockdep_depth, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then593, %if.end583, %if.then573, %if.end549, %if.else.i790, %check_prevs_add.exit.thread.i, %print_deadlock_scenario.exit.i.i.i, %lor.lhs.false.i.i.i784, %if.end15.i.i, %do.end.i, %if.end.i737, %if.then423, %do.end389, %land.lhs.true374, %do.end371, %do.end333, %land.lhs.true318, %do.end315, %mark_usage.exit, %if.then93.i, %if.else86.i, %if.then80.i, %if.then74.i, %if.then56.i, %if.then48.i, %if.then23.i, %if.then16.i, %do.end159, %land.lhs.true144, %do.end141, %if.end117, %do.end73, %land.lhs.true59, %do.end56, %if.then19, %entry
  %retval.0 = phi i32 [ 0, %if.then573 ], [ 0, %entry ], [ 0, %if.then19 ], [ 0, %do.end56 ], [ 0, %land.lhs.true59 ], [ 0, %do.end73 ], [ 0, %mark_usage.exit ], [ 0, %do.end315 ], [ 0, %land.lhs.true318 ], [ 0, %do.end333 ], [ 0, %do.end371 ], [ 0, %land.lhs.true374 ], [ 0, %do.end389 ], [ 0, %if.end549 ], [ 1, %if.then593 ], [ 1, %if.end583 ], [ 2, %if.end117 ], [ 0, %if.then423 ], [ 0, %if.end.i737 ], [ 0, %do.end.i ], [ 0, %do.end141 ], [ 0, %land.lhs.true144 ], [ 0, %do.end159 ], [ 0, %if.then16.i ], [ 0, %if.then23.i ], [ 0, %if.then48.i ], [ 0, %if.then56.i ], [ 0, %if.then74.i ], [ 0, %if.then80.i ], [ 0, %if.else86.i ], [ 0, %if.then93.i ], [ 0, %if.else.i790 ], [ 0, %check_prevs_add.exit.thread.i ], [ 0, %if.end15.i.i ], [ 0, %lor.lhs.false.i.i.i784 ], [ 0, %print_deadlock_scenario.exit.i.i.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lock_release(ptr noundef %lock, i32 noundef %ip) #0 align 64 {
entry:
  %merged.i = alloca i32, align 4
  tail call fastcc void @trace_lock_release(ptr noundef %lock, i32 noundef %ip)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %cleanup, label %if.end.i, !prof !1524

if.end.i:                                         ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %4, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1525
  %5 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add.i to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1526
  %14 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i26.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i26.i to ptr
  %preempt_count.i.i27.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i27.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i27.i, align 4
  %sub.i.i = add i32 %17, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i27.i, align 4
  %tobool19.not.i = icmp eq i32 %13, 0
  br i1 %tobool19.not.i, label %lockdep_enabled.exit, label %cleanup, !prof !1527

lockdep_enabled.exit:                             ; preds = %if.end.i
  %task.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %18 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task.i, align 8
  %lockdep_recursion.i = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 143
  %20 = ptrtoint ptr %lockdep_recursion.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %lockdep_recursion.i, align 4
  %tobool23.not.i = icmp eq i32 %21, 0
  br i1 %tobool23.not.i, label %do.body, label %cleanup, !prof !1500

do.body:                                          ; preds = %lockdep_enabled.exit
  %22 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28, !srcloc !1503
  tail call fastcc void @check_flags(i32 noundef %22)
  %23 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i35 = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i35 to ptr
  %cpu.i36 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 3
  %25 = ptrtoint ptr %cpu.i36 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cpu.i36, align 4
  %arrayidx.i37 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %26
  %27 = ptrtoint ptr %arrayidx.i37 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx.i37, align 4
  %add.i38 = add i32 %28, ptrtoint (ptr @lockdep_recursion to i32)
  %29 = inttoptr i32 %add.i38 to ptr
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %29, align 4
  %add7.i = add i32 %31, 1
  store i32 %add7.i, ptr %29, align 4
  %32 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i64 = and i32 %32, -16384
  %33 = inttoptr i32 %and.i64 to ptr
  %task.i45 = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 2
  %34 = ptrtoint ptr %task.i45 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %task.i45, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %merged.i) #28
  %36 = ptrtoint ptr %merged.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 1, ptr %merged.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %37 = load i32, ptr @debug_locks, align 4
  %tobool.not.i46 = icmp eq i32 %37, 0
  br i1 %tobool.not.i46, label %__lock_release.exit.thread, label %if.end.i47, !prof !1501

if.end.i47:                                       ; preds = %do.body
  %lockdep_depth.i = getelementptr inbounds %struct.task_struct, ptr %35, i32 0, i32 142
  %38 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %lockdep_depth.i, align 8
  %cmp.i = icmp eq i32 %39, 0
  br i1 %cmp.i, label %if.then4.i, label %if.end5.i

if.then4.i:                                       ; preds = %if.end.i47
  tail call fastcc void @print_unlock_imbalance_bug(ptr noundef %35, ptr noundef %lock, i32 noundef %ip) #28
  br label %__lock_release.exit.thread

if.end5.i:                                        ; preds = %if.end.i47
  %sub.i57 = add i32 %39, -1
  %held_locks.i = getelementptr inbounds %struct.task_struct, ptr %35, i32 0, i32 144
  %add.ptr.i = getelementptr %struct.held_lock, ptr %held_locks.i, i32 %sub.i57
  %call.i58 = tail call fastcc i32 @match_held_lock(ptr noundef %add.ptr.i, ptr noundef %lock) #28
  %tobool.not.i59 = icmp eq i32 %call.i58, 0
  br i1 %tobool.not.i59, label %if.end.i61, label %find_held_lock.exit

if.end.i61:                                       ; preds = %if.end5.i
  %dec.i60 = add i32 %39, -2
  %cmp27.i = icmp sgt i32 %dec.i60, -1
  br i1 %cmp27.i, label %for.body.i, label %if.then8.i

for.body.i:                                       ; preds = %for.inc.i, %if.end.i61
  %i.029.i = phi i32 [ %dec12.i, %for.inc.i ], [ %dec.i60, %if.end.i61 ]
  %prev_hlock.028.i = phi ptr [ %hlock.030.i, %for.inc.i ], [ %add.ptr.i, %if.end.i61 ]
  %hlock.030.i = getelementptr %struct.held_lock, ptr %prev_hlock.028.i, i32 -1
  %irq_context.i = getelementptr inbounds %struct.held_lock, ptr %prev_hlock.028.i, i32 0, i32 6
  %40 = ptrtoint ptr %irq_context.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %bf.load.i62 = load i32, ptr %irq_context.i, align 8
  %irq_context1.i = getelementptr %struct.held_lock, ptr %prev_hlock.028.i, i32 -1, i32 6
  %41 = ptrtoint ptr %irq_context1.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %bf.load2.i = load i32, ptr %irq_context1.i, align 8
  %bf.lshr25.i = xor i32 %bf.load2.i, %bf.load.i62
  %42 = and i32 %bf.lshr25.i, 393216
  %cmp5.not.i = icmp eq i32 %42, 0
  br i1 %cmp5.not.i, label %if.end7.i, label %if.then8.i

if.end7.i:                                        ; preds = %for.body.i
  %call8.i = tail call fastcc i32 @match_held_lock(ptr noundef %hlock.030.i, ptr noundef %lock) #28
  %tobool9.not.i = icmp eq i32 %call8.i, 0
  br i1 %tobool9.not.i, label %for.inc.i, label %find_held_lock.exit

for.inc.i:                                        ; preds = %if.end7.i
  %dec12.i = add nsw i32 %i.029.i, -1
  %cmp.i63 = icmp sgt i32 %i.029.i, 0
  br i1 %cmp.i63, label %for.body.i, label %if.then8.i

find_held_lock.exit:                              ; preds = %if.end7.i, %if.end5.i
  %ret.0.i = phi ptr [ %add.ptr.i, %if.end5.i ], [ %hlock.030.i, %if.end7.i ]
  %i.1.i = phi i32 [ %sub.i57, %if.end5.i ], [ %i.029.i, %if.end7.i ]
  %tobool7.not.i = icmp eq ptr %ret.0.i, null
  br i1 %tobool7.not.i, label %if.then8.i, label %if.end9.i

if.then8.i:                                       ; preds = %find_held_lock.exit, %for.inc.i, %for.body.i, %if.end.i61
  tail call fastcc void @print_unlock_imbalance_bug(ptr noundef %35, ptr noundef %lock, i32 noundef %ip) #28
  br label %__lock_release.exit.thread

if.end9.i:                                        ; preds = %find_held_lock.exit
  %instance.i = getelementptr inbounds %struct.held_lock, ptr %ret.0.i, i32 0, i32 2
  %43 = ptrtoint ptr %instance.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %instance.i, align 4
  %cmp10.i = icmp eq ptr %44, %lock
  br i1 %cmp10.i, label %if.then11.i, label %if.end12.i

if.then11.i:                                      ; preds = %if.end9.i
  %45 = load i32, ptr @lock_stat, align 4
  %tobool.not.i51 = icmp eq i32 %45, 0
  br i1 %tobool.not.i51, label %if.end12.i, label %if.end.i53

if.end.i53:                                       ; preds = %if.then11.i
  %call.i.i.i = tail call i64 @sched_clock() #28
  %holdtime_stamp.i = getelementptr inbounds %struct.held_lock, ptr %ret.0.i, i32 0, i32 5
  %46 = ptrtoint ptr %holdtime_stamp.i to i32
  call void @__asan_load8_noabort(i32 %46)
  %47 = load i64, ptr %holdtime_stamp.i, align 8
  %sub.i52 = sub i64 %call.i.i.i, %47
  %class_idx1.i.i = getelementptr inbounds %struct.held_lock, ptr %ret.0.i, i32 0, i32 6
  %48 = ptrtoint ptr %class_idx1.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %bf.load.i.i = load i32, ptr %class_idx1.i.i, align 8
  %bf.lshr.i.i = lshr i32 %bf.load.i.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i.i = lshr i32 %bf.load.i.i, 24
  %arrayidx.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i.i
  %49 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i = and i32 %bf.lshr.i.i, 31
  %51 = shl nuw i32 1, %and.i.i.i
  %52 = and i32 %51, %50
  %tobool.not.i.i = icmp eq i32 %52, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.end33.i.i

if.then.i.i:                                      ; preds = %if.end.i53
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %53 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i.i = icmp eq i32 %53, 0
  br i1 %tobool2.not.i.i, label %do.end.i.i, label %hlock_class.exit.i

do.end.i.i:                                       ; preds = %if.then.i.i
  %call4.i.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %hlock_class.exit.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %do.end.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %54 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i.i = icmp eq i32 %54, 0
  br i1 %tobool6.not.i.i, label %do.end15.i.i, label %hlock_class.exit.i

do.end15.i.i:                                     ; preds = %land.lhs.true.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit.i

if.end33.i.i:                                     ; preds = %if.end.i53
  %add.ptr.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i.i
  %phi.cast.i = ptrtoint ptr %add.ptr.i.i to i32
  br label %hlock_class.exit.i

hlock_class.exit.i:                               ; preds = %if.end33.i.i, %do.end15.i.i, %land.lhs.true.i.i, %do.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %phi.cast.i, %if.end33.i.i ], [ 0, %do.end15.i.i ], [ 0, %land.lhs.true.i.i ], [ 0, %do.end.i.i ], [ 0, %if.then.i.i ]
  %55 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i11.i = and i32 %55, -16384
  %56 = inttoptr i32 %and.i.i11.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %56, i32 0, i32 3
  %57 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %58
  %59 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i54 = add i32 %60, ptrtoint (ptr @cpu_lock_stats to i32)
  %61 = inttoptr i32 %add.i.i54 to ptr
  %sub.ptr.sub.i.i = sub i32 %retval.0.i.i, ptrtoint (ptr @lock_classes to i32)
  %sub.ptr.div.i.i = sdiv exact i32 %sub.ptr.sub.i.i, 132
  %62 = ptrtoint ptr %class_idx1.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %bf.load.i55 = load i32, ptr %class_idx1.i.i, align 8
  %63 = and i32 %bf.load.i55, 49152
  %tobool3.not.i = icmp eq i32 %63, 0
  br i1 %tobool3.not.i, label %if.else.i, label %if.then4.i56

if.then4.i56:                                     ; preds = %hlock_class.exit.i
  %read_holdtime.i = getelementptr %struct.lock_class_stats, ptr %61, i32 %sub.ptr.div.i.i, i32 4
  %max.i.i = getelementptr %struct.lock_class_stats, ptr %61, i32 %sub.ptr.div.i.i, i32 4, i32 1
  %64 = ptrtoint ptr %max.i.i to i32
  call void @__asan_load8_noabort(i32 %64)
  %65 = load i64, ptr %max.i.i, align 8
  %cmp.i.i = icmp ult i64 %65, %sub.i52
  br i1 %cmp.i.i, label %if.then.i12.i, label %if.end.i.i

if.then.i12.i:                                    ; preds = %if.then4.i56
  %66 = ptrtoint ptr %max.i.i to i32
  call void @__asan_store8_noabort(i32 %66)
  store i64 %sub.i52, ptr %max.i.i, align 8
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i12.i, %if.then4.i56
  %67 = ptrtoint ptr %read_holdtime.i to i32
  call void @__asan_load8_noabort(i32 %67)
  %68 = load i64, ptr %read_holdtime.i, align 8
  %cmp2.i.i = icmp ugt i64 %68, %sub.i52
  br i1 %cmp2.i.i, label %if.then3.i.i, label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %if.end.i.i
  %nr.i.i = getelementptr %struct.lock_class_stats, ptr %61, i32 %sub.ptr.div.i.i, i32 4, i32 3
  %69 = ptrtoint ptr %nr.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %nr.i.i, align 8
  %tobool.not.i13.i = icmp eq i32 %70, 0
  br i1 %tobool.not.i13.i, label %if.then3.i.i, label %lock_time_inc.exit.i

if.then3.i.i:                                     ; preds = %lor.lhs.false.i.i, %if.end.i.i
  %71 = ptrtoint ptr %read_holdtime.i to i32
  call void @__asan_store8_noabort(i32 %71)
  store i64 %sub.i52, ptr %read_holdtime.i, align 8
  br label %lock_time_inc.exit.i

lock_time_inc.exit.i:                             ; preds = %if.then3.i.i, %lor.lhs.false.i.i
  %total.i.i = getelementptr %struct.lock_class_stats, ptr %61, i32 %sub.ptr.div.i.i, i32 4, i32 2
  %72 = ptrtoint ptr %total.i.i to i32
  call void @__asan_load8_noabort(i32 %72)
  %73 = load i64, ptr %total.i.i, align 8
  %add.i14.i = add i64 %73, %sub.i52
  store i64 %add.i14.i, ptr %total.i.i, align 8
  %nr6.i.i = getelementptr %struct.lock_class_stats, ptr %61, i32 %sub.ptr.div.i.i, i32 4, i32 3
  br label %cleanup.sink.split.i

if.else.i:                                        ; preds = %hlock_class.exit.i
  %write_holdtime.i = getelementptr %struct.lock_class_stats, ptr %61, i32 %sub.ptr.div.i.i, i32 5
  %max.i15.i = getelementptr %struct.lock_class_stats, ptr %61, i32 %sub.ptr.div.i.i, i32 5, i32 1
  %74 = ptrtoint ptr %max.i15.i to i32
  call void @__asan_load8_noabort(i32 %74)
  %75 = load i64, ptr %max.i15.i, align 8
  %cmp.i16.i = icmp ult i64 %75, %sub.i52
  br i1 %cmp.i16.i, label %if.then.i17.i, label %if.end.i19.i

if.then.i17.i:                                    ; preds = %if.else.i
  %76 = ptrtoint ptr %max.i15.i to i32
  call void @__asan_store8_noabort(i32 %76)
  store i64 %sub.i52, ptr %max.i15.i, align 8
  br label %if.end.i19.i

if.end.i19.i:                                     ; preds = %if.then.i17.i, %if.else.i
  %77 = ptrtoint ptr %write_holdtime.i to i32
  call void @__asan_load8_noabort(i32 %77)
  %78 = load i64, ptr %write_holdtime.i, align 8
  %cmp2.i18.i = icmp ugt i64 %78, %sub.i52
  br i1 %cmp2.i18.i, label %if.then3.i23.i, label %lor.lhs.false.i22.i

lor.lhs.false.i22.i:                              ; preds = %if.end.i19.i
  %nr.i20.i = getelementptr %struct.lock_class_stats, ptr %61, i32 %sub.ptr.div.i.i, i32 5, i32 3
  %79 = ptrtoint ptr %nr.i20.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %nr.i20.i, align 8
  %tobool.not.i21.i = icmp eq i32 %80, 0
  br i1 %tobool.not.i21.i, label %if.then3.i23.i, label %lock_time_inc.exit28.i

if.then3.i23.i:                                   ; preds = %lor.lhs.false.i22.i, %if.end.i19.i
  %81 = ptrtoint ptr %write_holdtime.i to i32
  call void @__asan_store8_noabort(i32 %81)
  store i64 %sub.i52, ptr %write_holdtime.i, align 8
  br label %lock_time_inc.exit28.i

lock_time_inc.exit28.i:                           ; preds = %if.then3.i23.i, %lor.lhs.false.i22.i
  %total.i24.i = getelementptr %struct.lock_class_stats, ptr %61, i32 %sub.ptr.div.i.i, i32 5, i32 2
  %82 = ptrtoint ptr %total.i24.i to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %total.i24.i, align 8
  %add.i25.i = add i64 %83, %sub.i52
  store i64 %add.i25.i, ptr %total.i24.i, align 8
  %nr6.i26.i = getelementptr %struct.lock_class_stats, ptr %61, i32 %sub.ptr.div.i.i, i32 5, i32 3
  br label %cleanup.sink.split.i

cleanup.sink.split.i:                             ; preds = %lock_time_inc.exit28.i, %lock_time_inc.exit.i
  %nr6.i.sink29.i = phi ptr [ %nr6.i.i, %lock_time_inc.exit.i ], [ %nr6.i26.i, %lock_time_inc.exit28.i ]
  %84 = ptrtoint ptr %nr6.i.sink29.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %nr6.i.sink29.i, align 8
  %inc.i.i = add i32 %85, 1
  store i32 %inc.i.i, ptr %nr6.i.sink29.i, align 8
  br label %if.end12.i

if.end12.i:                                       ; preds = %cleanup.sink.split.i, %if.then11.i, %if.end9.i
  %pin_count.i = getelementptr inbounds %struct.held_lock, ptr %ret.0.i, i32 0, i32 7
  %86 = ptrtoint ptr %pin_count.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %pin_count.i, align 4
  %tobool13.not.i = icmp eq i32 %87, 0
  br i1 %tobool13.not.i, label %if.end32.i, label %do.end.i, !prof !1500

do.end.i:                                         ; preds = %if.end12.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5323, i32 noundef 9, ptr noundef nonnull @.str.677) #28
  br label %if.end32.i

if.end32.i:                                       ; preds = %do.end.i, %if.end12.i
  %references.i = getelementptr inbounds %struct.held_lock, ptr %ret.0.i, i32 0, i32 6
  %88 = ptrtoint ptr %references.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %bf.load.i = load i32, ptr %references.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 4095
  %tobool39.not.i = icmp eq i32 %bf.clear.i, 0
  br i1 %tobool39.not.i, label %if.end52.i, label %if.then40.i

if.then40.i:                                      ; preds = %if.end32.i
  %dec.i = add i32 %bf.load.i, 4095
  %bf.value.i = and i32 %dec.i, 4095
  %bf.clear45.i = and i32 %bf.load.i, -4096
  %bf.set.i = or i32 %bf.value.i, %bf.clear45.i
  %89 = ptrtoint ptr %references.i to i32
  call void @__asan_store4_noabort(i32 %89)
  store i32 %bf.set.i, ptr %references.i, align 8
  %tobool49.not.i = icmp eq i32 %bf.value.i, 0
  br i1 %tobool49.not.i, label %if.end52.i, label %if.then6

if.end52.i:                                       ; preds = %if.then40.i, %if.end32.i
  %90 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 %i.1.i, ptr %lockdep_depth.i, align 8
  %91 = ptrtoint ptr %ret.0.i to i32
  call void @__asan_load8_noabort(i32 %91)
  %92 = load i64, ptr %ret.0.i, align 8
  %curr_chain_key.i = getelementptr inbounds %struct.task_struct, ptr %35, i32 0, i32 141
  %93 = ptrtoint ptr %curr_chain_key.i to i32
  call void @__asan_store8_noabort(i32 %93)
  store i64 %92, ptr %curr_chain_key.i, align 16
  %cmp54.i = icmp eq i32 %i.1.i, %sub.i57
  br i1 %cmp54.i, label %if.then6, label %if.end56.i

if.end56.i:                                       ; preds = %if.end52.i
  %add.i48 = add nuw i32 %i.1.i, 1
  %call57.i = call fastcc i32 @reacquire_held_locks(ptr noundef %35, i32 noundef %39, i32 noundef %add.i48, ptr noundef nonnull %merged.i) #28
  %tobool58.not.i = icmp eq i32 %call57.i, 0
  br i1 %tobool58.not.i, label %if.end60.i, label %__lock_release.exit.thread

if.end60.i:                                       ; preds = %if.end56.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %94 = load i32, ptr @oops_in_progress, align 4
  %tobool61.not.i = icmp eq i32 %94, 0
  br i1 %tobool61.not.i, label %land.lhs.true.i, label %__lock_release.exit.thread

land.lhs.true.i:                                  ; preds = %if.end60.i
  %95 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %lockdep_depth.i, align 8
  %97 = ptrtoint ptr %merged.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %merged.i, align 4
  %sub63.i = sub i32 %39, %98
  %cmp64.not.i = icmp eq i32 %96, %sub63.i
  br i1 %cmp64.not.i, label %__lock_release.exit.thread, label %do.end74.i, !prof !1500

do.end74.i:                                       ; preds = %land.lhs.true.i
  %call75.i = tail call i32 @debug_locks_off() #28
  %tobool76.not.i = icmp eq i32 %call75.i, 0
  br i1 %tobool76.not.i, label %__lock_release.exit.thread, label %land.lhs.true77.i

land.lhs.true77.i:                                ; preds = %do.end74.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %99 = load i32, ptr @debug_locks_silent, align 4
  %tobool78.not.i = icmp eq i32 %99, 0
  br i1 %tobool78.not.i, label %do.end92.i, label %__lock_release.exit.thread

do.end92.i:                                       ; preds = %land.lhs.true77.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5361, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.381) #28
  br label %__lock_release.exit.thread

__lock_release.exit.thread:                       ; preds = %do.end92.i, %land.lhs.true77.i, %do.end74.i, %land.lhs.true.i, %if.end60.i, %if.end56.i, %if.then8.i, %if.then4.i, %do.body
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %merged.i) #28
  br label %if.end8

if.then6:                                         ; preds = %if.end52.i, %if.then40.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %merged.i) #28
  %100 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %100, -16384
  %101 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %101, i32 0, i32 2
  %102 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %task, align 8
  tail call fastcc void @check_chain_key(ptr noundef %103)
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %__lock_release.exit.thread
  %104 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i39 = and i32 %104, -16384
  %105 = inttoptr i32 %and.i.i39 to ptr
  %cpu.i40 = getelementptr inbounds %struct.thread_info, ptr %105, i32 0, i32 3
  %106 = ptrtoint ptr %cpu.i40 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %cpu.i40, align 4
  %arrayidx.i41 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %107
  %108 = ptrtoint ptr %arrayidx.i41 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %arrayidx.i41, align 4
  %add.i42 = add i32 %109, ptrtoint (ptr @lockdep_recursion to i32)
  %110 = inttoptr i32 %add.i42 to ptr
  %111 = ptrtoint ptr %110 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %110, align 4
  %add7.i43 = add i32 %112, -1
  store i32 %add7.i43, ptr %110, align 4
  %tobool.not.i44 = icmp eq i32 %add7.i43, 0
  br i1 %tobool.not.i44, label %lockdep_recursion_finish.exit, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.end8
  %.b76.i = load i1, ptr @lockdep_recursion_finish.__already_done, align 1
  br i1 %.b76.i, label %if.then50.i, label %if.then.i, !prof !1500

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @lockdep_recursion_finish.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 438, i32 noundef 9, ptr noundef null) #28
  br label %if.then50.i

if.then50.i:                                      ; preds = %if.then.i, %land.rhs.i
  %113 = ptrtoint ptr %cpu.i40 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %cpu.i40, align 4
  %arrayidx66.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %114
  %115 = ptrtoint ptr %arrayidx66.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %arrayidx66.i, align 4
  %add67.i = add i32 %116, ptrtoint (ptr @lockdep_recursion to i32)
  %117 = inttoptr i32 %add67.i to ptr
  %118 = ptrtoint ptr %117 to i32
  call void @__asan_store4_noabort(i32 %118)
  store i32 0, ptr %117, align 4
  br label %lockdep_recursion_finish.exit

lockdep_recursion_finish.exit:                    ; preds = %if.then50.i, %if.end8
  %119 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i50 = and i32 %119, 128
  %tobool17.not = icmp eq i32 %and.i.i50, 0
  br i1 %tobool17.not, label %if.then26, label %do.end29, !prof !1501

if.then26:                                        ; preds = %lockdep_recursion_finish.exit
  tail call void @warn_bogus_irq_restore() #28
  br label %do.end29

do.end29:                                         ; preds = %if.then26, %lockdep_recursion_finish.exit
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %22) #28, !srcloc !1506
  br label %cleanup

cleanup:                                          ; preds = %do.end29, %lockdep_enabled.exit, %if.end.i, %entry
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_lock_release(ptr noundef %lock, i32 noundef %ip) unnamed_addr #10 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_lock_release, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_lock_release, %do.body)) #28
          to label %if.end48 [label %do.body], !srcloc !1538

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1500

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.419, i32 noundef 108, i32 noundef 9, ptr noundef null) #28
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %if.end31

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1548
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_lock_release, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i, %if.end31
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i ], [ %13, %if.end31 ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %lock, i32 noundef %ip) #28
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1549
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1549
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !1500

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.419, i32 noundef 108, i32 noundef 9, ptr noundef null) #28
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1541
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_lock_release, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #28
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_lock_release.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_lock_release.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.417, i32 noundef 63, ptr noundef nonnull @.str.418)
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1542
  %38 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: noinline noprofile nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @lock_is_held_type(ptr noundef %lock, i32 noundef %read) #15 section ".noinstr.text" align 64 {
entry:
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %cleanup, label %if.end.i, !prof !1524

if.end.i:                                         ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %3, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1525
  %4 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 3
  %6 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %6
  %7 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %7, ptrtoint (ptr @lockdep_recursion to i32)
  %8 = inttoptr i32 %add.i to ptr
  %9 = load volatile i32, ptr %8, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1526
  %10 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i26.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i26.i to ptr
  %preempt_count.i.i27.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = load volatile i32, ptr %preempt_count.i.i27.i, align 4
  %sub.i.i = add i32 %12, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i27.i, align 4
  %tobool19.not.i = icmp eq i32 %9, 0
  br i1 %tobool19.not.i, label %lockdep_enabled.exit, label %cleanup, !prof !1527

lockdep_enabled.exit:                             ; preds = %if.end.i
  %task.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %13 = load ptr, ptr %task.i, align 8
  %lockdep_recursion.i = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 143
  %14 = load i32, ptr %lockdep_recursion.i, align 4
  %tobool23.not.i = icmp eq i32 %14, 0
  br i1 %tobool23.not.i, label %do.body, label %cleanup, !prof !1500

do.body:                                          ; preds = %lockdep_enabled.exit
  %call3 = tail call fastcc i32 @arch_local_irq_save()
  tail call fastcc void @check_flags(i32 noundef %call3)
  %15 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i30 = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i30 to ptr
  %cpu.i31 = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 3
  %17 = load i32, ptr %cpu.i31, align 4
  %arrayidx.i32 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %17
  %18 = load i32, ptr %arrayidx.i32, align 4
  %add.i33 = add i32 %18, ptrtoint (ptr @lockdep_recursion to i32)
  %19 = inttoptr i32 %add.i33 to ptr
  %20 = load i32, ptr %19, align 4
  %add7.i = add i32 %20, 1
  store i32 %add7.i, ptr %19, align 4
  %21 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i34 = and i32 %21, -16384
  %22 = inttoptr i32 %and.i.i34 to ptr
  %task.i35 = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 2
  %23 = load ptr, ptr %task.i35, align 8
  %lockdep_depth.i = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 142
  %24 = load i32, ptr %lockdep_depth.i, align 8
  %cmp18.i = icmp sgt i32 %24, 0
  br i1 %cmp18.i, label %for.body.lr.ph.i, label %__lock_is_held.exit

for.body.lr.ph.i:                                 ; preds = %do.body
  %held_locks.i = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 144
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %i.019.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i ]
  %add.ptr.i = getelementptr %struct.held_lock, ptr %held_locks.i, i32 %i.019.i
  %call1.i = tail call fastcc i32 @match_held_lock(ptr noundef %add.ptr.i, ptr noundef %lock) #28
  %tobool.not.i36 = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i36, label %for.inc.i, label %if.then.i

if.then.i:                                        ; preds = %for.body.i
  %cmp2.i = icmp eq i32 %read, -1
  br i1 %cmp2.i, label %__lock_is_held.exit, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.then.i
  %read3.i = getelementptr %struct.held_lock, ptr %held_locks.i, i32 %i.019.i, i32 6
  %bf.load.i = load i32, ptr %read3.i, align 8
  %25 = and i32 %bf.load.i, 49152
  %tobool4.i = icmp ne i32 %25, 0
  %lnot.ext.i = zext i1 %tobool4.i to i32
  %cmp6.i = icmp eq i32 %lnot.ext.i, %read
  %spec.select.i = zext i1 %cmp6.i to i32
  br label %__lock_is_held.exit

for.inc.i:                                        ; preds = %for.body.i
  %inc.i = add nuw nsw i32 %i.019.i, 1
  %26 = load i32, ptr %lockdep_depth.i, align 8
  %cmp.i = icmp slt i32 %inc.i, %26
  br i1 %cmp.i, label %for.body.i, label %__lock_is_held.exit

__lock_is_held.exit:                              ; preds = %for.inc.i, %lor.lhs.false.i, %if.then.i, %do.body
  %retval.2.i = phi i32 [ %spec.select.i, %lor.lhs.false.i ], [ 1, %if.then.i ], [ 0, %do.body ], [ 0, %for.inc.i ]
  %27 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i37 = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i37 to ptr
  %cpu.i38 = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 3
  %29 = load i32, ptr %cpu.i38, align 4
  %arrayidx.i39 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %29
  %30 = load i32, ptr %arrayidx.i39, align 4
  %add.i40 = add i32 %30, ptrtoint (ptr @lockdep_recursion to i32)
  %31 = inttoptr i32 %add.i40 to ptr
  %32 = load i32, ptr %31, align 4
  %add7.i41 = add i32 %32, -1
  store i32 %add7.i41, ptr %31, align 4
  %tobool.not.i42 = icmp eq i32 %add7.i41, 0
  br i1 %tobool.not.i42, label %lockdep_recursion_finish.exit, label %land.rhs.i

land.rhs.i:                                       ; preds = %__lock_is_held.exit
  %.b76.i = load i1, ptr @lockdep_recursion_finish.__already_done, align 1
  br i1 %.b76.i, label %if.then50.i, label %if.then.i43, !prof !1500

if.then.i43:                                      ; preds = %land.rhs.i
  store i1 true, ptr @lockdep_recursion_finish.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 438, i32 noundef 9, ptr noundef null) #28
  br label %if.then50.i

if.then50.i:                                      ; preds = %if.then.i43, %land.rhs.i
  %33 = load i32, ptr %cpu.i38, align 4
  %arrayidx66.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %33
  %34 = load i32, ptr %arrayidx66.i, align 4
  %add67.i = add i32 %34, ptrtoint (ptr @lockdep_recursion to i32)
  %35 = inttoptr i32 %add67.i to ptr
  store i32 0, ptr %35, align 4
  br label %lockdep_recursion_finish.exit

lockdep_recursion_finish.exit:                    ; preds = %if.then50.i, %__lock_is_held.exit
  %call12 = tail call fastcc i32 @arch_irqs_disabled()
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %if.then22, label %do.end25, !prof !1501

if.then22:                                        ; preds = %lockdep_recursion_finish.exit
  tail call void @warn_bogus_irq_restore() #28
  br label %do.end25

do.end25:                                         ; preds = %if.then22, %lockdep_recursion_finish.exit
  tail call fastcc void @arch_local_irq_restore(i32 noundef %call3)
  br label %cleanup

cleanup:                                          ; preds = %do.end25, %lockdep_enabled.exit, %if.end.i, %entry
  %retval.0 = phi i32 [ %retval.2.i, %do.end25 ], [ -1, %lockdep_enabled.exit ], [ -1, %entry ], [ -1, %if.end.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @lock_pin_lock(ptr noundef %lock) #0 align 64 {
entry:
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %cleanup, label %if.end.i, !prof !1524

if.end.i:                                         ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %4, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1525
  %5 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add.i to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1526
  %14 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i26.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i26.i to ptr
  %preempt_count.i.i27.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i27.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i27.i, align 4
  %sub.i.i = add i32 %17, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i27.i, align 4
  %tobool19.not.i = icmp eq i32 %13, 0
  br i1 %tobool19.not.i, label %lockdep_enabled.exit, label %cleanup, !prof !1527

lockdep_enabled.exit:                             ; preds = %if.end.i
  %task.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %18 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task.i, align 8
  %lockdep_recursion.i = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 143
  %20 = ptrtoint ptr %lockdep_recursion.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %lockdep_recursion.i, align 4
  %tobool23.not.i = icmp eq i32 %21, 0
  br i1 %tobool23.not.i, label %do.body, label %cleanup, !prof !1500

do.body:                                          ; preds = %lockdep_enabled.exit
  %22 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28, !srcloc !1503
  tail call fastcc void @check_flags(i32 noundef %22)
  %23 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i31 = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i31 to ptr
  %cpu.i32 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 3
  %25 = ptrtoint ptr %cpu.i32 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cpu.i32, align 4
  %arrayidx.i33 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %26
  %27 = ptrtoint ptr %arrayidx.i33 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx.i33, align 4
  %add.i34 = add i32 %28, ptrtoint (ptr @lockdep_recursion to i32)
  %29 = inttoptr i32 %add.i34 to ptr
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %29, align 4
  %add7.i = add i32 %31, 1
  store i32 %add7.i, ptr %29, align 4
  %32 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i41 = and i32 %32, -16384
  %33 = inttoptr i32 %and.i.i41 to ptr
  %task.i42 = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 2
  %34 = ptrtoint ptr %task.i42 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %task.i42, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %36 = load i32, ptr @debug_locks, align 4
  %tobool.not.i43 = icmp eq i32 %36, 0
  br i1 %tobool.not.i43, label %__lock_pin_lock.exit, label %for.cond.preheader.i, !prof !1501

for.cond.preheader.i:                             ; preds = %do.body
  %lockdep_depth.i = getelementptr inbounds %struct.task_struct, ptr %35, i32 0, i32 142
  %37 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %lockdep_depth.i, align 8
  %cmp43.i = icmp sgt i32 %38, 0
  br i1 %cmp43.i, label %for.body.lr.ph.i, label %do.end.i

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %held_locks.i = getelementptr inbounds %struct.task_struct, ptr %35, i32 0, i32 144
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %i.044.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i ]
  %add.ptr.i = getelementptr %struct.held_lock, ptr %held_locks.i, i32 %i.044.i
  %call4.i = tail call fastcc i32 @match_held_lock(ptr noundef %add.ptr.i, ptr noundef %lock) #28
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %for.inc.i, label %cleanup.i

cleanup.i:                                        ; preds = %for.body.i
  %call7.i = tail call i32 @prandom_u32() #28
  %shr.i = lshr i32 %call7.i, 16
  %add.i44 = add nuw nsw i32 %shr.i, 1
  %pin_count.i = getelementptr %struct.held_lock, ptr %held_locks.i, i32 %i.044.i, i32 7
  %39 = ptrtoint ptr %pin_count.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %pin_count.i, align 4
  %add9.i = add i32 %add.i44, %40
  store i32 %add9.i, ptr %pin_count.i, align 4
  br label %__lock_pin_lock.exit

for.inc.i:                                        ; preds = %for.body.i
  %inc.i = add nuw nsw i32 %i.044.i, 1
  %41 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %lockdep_depth.i, align 8
  %cmp.i = icmp slt i32 %inc.i, %42
  br i1 %cmp.i, label %for.body.i, label %do.end.i

do.end.i:                                         ; preds = %for.inc.i, %for.cond.preheader.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5415, i32 noundef 9, ptr noundef nonnull @.str.678) #28
  br label %__lock_pin_lock.exit

__lock_pin_lock.exit:                             ; preds = %do.end.i, %cleanup.i, %do.body
  %retval.sroa.0.2.i = phi i32 [ %add.i44, %cleanup.i ], [ 0, %do.end.i ], [ 0, %do.body ]
  %43 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i35 = and i32 %43, -16384
  %44 = inttoptr i32 %and.i.i35 to ptr
  %cpu.i36 = getelementptr inbounds %struct.thread_info, ptr %44, i32 0, i32 3
  %45 = ptrtoint ptr %cpu.i36 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %cpu.i36, align 4
  %arrayidx.i37 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %46
  %47 = ptrtoint ptr %arrayidx.i37 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx.i37, align 4
  %add.i38 = add i32 %48, ptrtoint (ptr @lockdep_recursion to i32)
  %49 = inttoptr i32 %add.i38 to ptr
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %49, align 4
  %add7.i39 = add i32 %51, -1
  store i32 %add7.i39, ptr %49, align 4
  %tobool.not.i40 = icmp eq i32 %add7.i39, 0
  br i1 %tobool.not.i40, label %lockdep_recursion_finish.exit, label %land.rhs.i

land.rhs.i:                                       ; preds = %__lock_pin_lock.exit
  %.b76.i = load i1, ptr @lockdep_recursion_finish.__already_done, align 1
  br i1 %.b76.i, label %if.then50.i, label %if.then.i, !prof !1500

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @lockdep_recursion_finish.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 438, i32 noundef 9, ptr noundef null) #28
  br label %if.then50.i

if.then50.i:                                      ; preds = %if.then.i, %land.rhs.i
  %52 = ptrtoint ptr %cpu.i36 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %cpu.i36, align 4
  %arrayidx66.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %53
  %54 = ptrtoint ptr %arrayidx66.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %arrayidx66.i, align 4
  %add67.i = add i32 %55, ptrtoint (ptr @lockdep_recursion to i32)
  %56 = inttoptr i32 %add67.i to ptr
  %57 = ptrtoint ptr %56 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 0, ptr %56, align 4
  br label %lockdep_recursion_finish.exit

lockdep_recursion_finish.exit:                    ; preds = %if.then50.i, %__lock_pin_lock.exit
  %58 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i45 = and i32 %58, 128
  %tobool14.not = icmp eq i32 %and.i.i45, 0
  br i1 %tobool14.not, label %if.then23, label %do.end26, !prof !1501

if.then23:                                        ; preds = %lockdep_recursion_finish.exit
  tail call void @warn_bogus_irq_restore() #28
  br label %do.end26

do.end26:                                         ; preds = %if.then23, %lockdep_recursion_finish.exit
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %22) #28, !srcloc !1506
  br label %cleanup

cleanup:                                          ; preds = %do.end26, %lockdep_enabled.exit, %if.end.i, %entry
  %retval.sroa.0.0 = phi i32 [ %retval.sroa.0.2.i, %do.end26 ], [ 0, %lockdep_enabled.exit ], [ 0, %entry ], [ 0, %if.end.i ]
  ret i32 %retval.sroa.0.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lock_repin_lock(ptr noundef %lock, [1 x i32] %cookie.coerce) #0 align 64 {
entry:
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %cleanup, label %if.end.i, !prof !1524

if.end.i:                                         ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %4, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1525
  %5 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add.i to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1526
  %14 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i26.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i26.i to ptr
  %preempt_count.i.i27.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i27.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i27.i, align 4
  %sub.i.i = add i32 %17, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i27.i, align 4
  %tobool19.not.i = icmp eq i32 %13, 0
  br i1 %tobool19.not.i, label %lockdep_enabled.exit, label %cleanup, !prof !1527

lockdep_enabled.exit:                             ; preds = %if.end.i
  %task.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %18 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task.i, align 8
  %lockdep_recursion.i = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 143
  %20 = ptrtoint ptr %lockdep_recursion.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %lockdep_recursion.i, align 4
  %tobool23.not.i = icmp eq i32 %21, 0
  br i1 %tobool23.not.i, label %do.body, label %cleanup, !prof !1500

do.body:                                          ; preds = %lockdep_enabled.exit
  %22 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28, !srcloc !1503
  tail call fastcc void @check_flags(i32 noundef %22)
  %23 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i29 = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i29 to ptr
  %cpu.i30 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 3
  %25 = ptrtoint ptr %cpu.i30 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cpu.i30, align 4
  %arrayidx.i31 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %26
  %27 = ptrtoint ptr %arrayidx.i31 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx.i31, align 4
  %add.i32 = add i32 %28, ptrtoint (ptr @lockdep_recursion to i32)
  %29 = inttoptr i32 %add.i32 to ptr
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %29, align 4
  %add7.i = add i32 %31, 1
  store i32 %add7.i, ptr %29, align 4
  %cookie.coerce.fca.0.extract.i = extractvalue [1 x i32] %cookie.coerce, 0
  %32 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i39 = and i32 %32, -16384
  %33 = inttoptr i32 %and.i.i39 to ptr
  %task.i40 = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 2
  %34 = ptrtoint ptr %task.i40 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %task.i40, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %36 = load i32, ptr @debug_locks, align 4
  %tobool.not.i41 = icmp eq i32 %36, 0
  br i1 %tobool.not.i41, label %__lock_repin_lock.exit, label %for.cond.preheader.i, !prof !1501

for.cond.preheader.i:                             ; preds = %do.body
  %lockdep_depth.i = getelementptr inbounds %struct.task_struct, ptr %35, i32 0, i32 142
  %37 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %lockdep_depth.i, align 8
  %cmp39.i = icmp sgt i32 %38, 0
  br i1 %cmp39.i, label %for.body.lr.ph.i, label %do.end.i

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %held_locks.i = getelementptr inbounds %struct.task_struct, ptr %35, i32 0, i32 144
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.critedge.i, %for.body.lr.ph.i
  %i.040.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.critedge.i ]
  %add.ptr.i = getelementptr %struct.held_lock, ptr %held_locks.i, i32 %i.040.i
  %call4.i = tail call fastcc i32 @match_held_lock(ptr noundef %add.ptr.i, ptr noundef %lock) #28
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %for.inc.critedge.i, label %if.then6.i

if.then6.i:                                       ; preds = %for.body.i
  %pin_count.i = getelementptr %struct.held_lock, ptr %held_locks.i, i32 %i.040.i, i32 7
  %39 = ptrtoint ptr %pin_count.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %pin_count.i, align 4
  %add.i42 = add i32 %40, %cookie.coerce.fca.0.extract.i
  store i32 %add.i42, ptr %pin_count.i, align 4
  br label %__lock_repin_lock.exit

for.inc.critedge.i:                               ; preds = %for.body.i
  %inc.i = add nuw nsw i32 %i.040.i, 1
  %41 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %lockdep_depth.i, align 8
  %cmp.i = icmp slt i32 %inc.i, %42
  br i1 %cmp.i, label %for.body.i, label %do.end.i

do.end.i:                                         ; preds = %for.inc.critedge.i, %for.cond.preheader.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5436, i32 noundef 9, ptr noundef nonnull @.str.678) #28
  br label %__lock_repin_lock.exit

__lock_repin_lock.exit:                           ; preds = %do.end.i, %if.then6.i, %do.body
  %43 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i33 = and i32 %43, -16384
  %44 = inttoptr i32 %and.i.i33 to ptr
  %cpu.i34 = getelementptr inbounds %struct.thread_info, ptr %44, i32 0, i32 3
  %45 = ptrtoint ptr %cpu.i34 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %cpu.i34, align 4
  %arrayidx.i35 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %46
  %47 = ptrtoint ptr %arrayidx.i35 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx.i35, align 4
  %add.i36 = add i32 %48, ptrtoint (ptr @lockdep_recursion to i32)
  %49 = inttoptr i32 %add.i36 to ptr
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %49, align 4
  %add7.i37 = add i32 %51, -1
  store i32 %add7.i37, ptr %49, align 4
  %tobool.not.i38 = icmp eq i32 %add7.i37, 0
  br i1 %tobool.not.i38, label %lockdep_recursion_finish.exit, label %land.rhs.i

land.rhs.i:                                       ; preds = %__lock_repin_lock.exit
  %.b76.i = load i1, ptr @lockdep_recursion_finish.__already_done, align 1
  br i1 %.b76.i, label %if.then50.i, label %if.then.i, !prof !1500

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @lockdep_recursion_finish.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 438, i32 noundef 9, ptr noundef null) #28
  br label %if.then50.i

if.then50.i:                                      ; preds = %if.then.i, %land.rhs.i
  %52 = ptrtoint ptr %cpu.i34 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %cpu.i34, align 4
  %arrayidx66.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %53
  %54 = ptrtoint ptr %arrayidx66.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %arrayidx66.i, align 4
  %add67.i = add i32 %55, ptrtoint (ptr @lockdep_recursion to i32)
  %56 = inttoptr i32 %add67.i to ptr
  %57 = ptrtoint ptr %56 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 0, ptr %56, align 4
  br label %lockdep_recursion_finish.exit

lockdep_recursion_finish.exit:                    ; preds = %if.then50.i, %__lock_repin_lock.exit
  %58 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i43 = and i32 %58, 128
  %tobool13.not = icmp eq i32 %and.i.i43, 0
  br i1 %tobool13.not, label %if.then22, label %do.end25, !prof !1501

if.then22:                                        ; preds = %lockdep_recursion_finish.exit
  tail call void @warn_bogus_irq_restore() #28
  br label %do.end25

do.end25:                                         ; preds = %if.then22, %lockdep_recursion_finish.exit
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %22) #28, !srcloc !1506
  br label %cleanup

cleanup:                                          ; preds = %do.end25, %lockdep_enabled.exit, %if.end.i, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lock_unpin_lock(ptr noundef %lock, [1 x i32] %cookie.coerce) #0 align 64 {
entry:
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %cleanup, label %if.end.i, !prof !1524

if.end.i:                                         ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %4, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1525
  %5 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add.i to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1526
  %14 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i26.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i26.i to ptr
  %preempt_count.i.i27.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i27.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i27.i, align 4
  %sub.i.i = add i32 %17, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i27.i, align 4
  %tobool19.not.i = icmp eq i32 %13, 0
  br i1 %tobool19.not.i, label %lockdep_enabled.exit, label %cleanup, !prof !1527

lockdep_enabled.exit:                             ; preds = %if.end.i
  %task.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %18 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task.i, align 8
  %lockdep_recursion.i = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 143
  %20 = ptrtoint ptr %lockdep_recursion.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %lockdep_recursion.i, align 4
  %tobool23.not.i = icmp eq i32 %21, 0
  br i1 %tobool23.not.i, label %do.body, label %cleanup, !prof !1500

do.body:                                          ; preds = %lockdep_enabled.exit
  %22 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28, !srcloc !1503
  tail call fastcc void @check_flags(i32 noundef %22)
  %23 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i29 = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i29 to ptr
  %cpu.i30 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 3
  %25 = ptrtoint ptr %cpu.i30 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cpu.i30, align 4
  %arrayidx.i31 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %26
  %27 = ptrtoint ptr %arrayidx.i31 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx.i31, align 4
  %add.i32 = add i32 %28, ptrtoint (ptr @lockdep_recursion to i32)
  %29 = inttoptr i32 %add.i32 to ptr
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %29, align 4
  %add7.i = add i32 %31, 1
  store i32 %add7.i, ptr %29, align 4
  %cookie.coerce.fca.0.extract.i = extractvalue [1 x i32] %cookie.coerce, 0
  %32 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i39 = and i32 %32, -16384
  %33 = inttoptr i32 %and.i.i39 to ptr
  %task.i40 = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 2
  %34 = ptrtoint ptr %task.i40 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %task.i40, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %36 = load i32, ptr @debug_locks, align 4
  %tobool.not.i41 = icmp eq i32 %36, 0
  br i1 %tobool.not.i41, label %__lock_unpin_lock.exit, label %for.cond.preheader.i, !prof !1501

for.cond.preheader.i:                             ; preds = %do.body
  %lockdep_depth.i = getelementptr inbounds %struct.task_struct, ptr %35, i32 0, i32 142
  %37 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %lockdep_depth.i, align 8
  %cmp119.i = icmp sgt i32 %38, 0
  br i1 %cmp119.i, label %for.body.lr.ph.i, label %do.end88.i

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %held_locks.i = getelementptr inbounds %struct.task_struct, ptr %35, i32 0, i32 144
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.critedge.i, %for.body.lr.ph.i
  %i.0120.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.critedge.i ]
  %add.ptr.i = getelementptr %struct.held_lock, ptr %held_locks.i, i32 %i.0120.i
  %call4.i = tail call fastcc i32 @match_held_lock(ptr noundef %add.ptr.i, ptr noundef %lock) #28
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %for.inc.critedge.i, label %if.then6.i

if.then6.i:                                       ; preds = %for.body.i
  %pin_count.i = getelementptr %struct.held_lock, ptr %held_locks.i, i32 %i.0120.i, i32 7
  %39 = ptrtoint ptr %pin_count.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %pin_count.i, align 4
  %tobool7.not.i = icmp eq i32 %40, 0
  br i1 %tobool7.not.i, label %do.end.i, label %if.end37.i, !prof !1501

do.end.i:                                         ; preds = %if.then6.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5451, i32 noundef 9, ptr noundef nonnull @.str.679) #28
  br label %__lock_unpin_lock.exit

if.end37.i:                                       ; preds = %if.then6.i
  %sub.i = sub i32 %40, %cookie.coerce.fca.0.extract.i
  %41 = ptrtoint ptr %pin_count.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %sub.i, ptr %pin_count.i, align 4
  %cmp41.i = icmp slt i32 %sub.i, 0
  br i1 %cmp41.i, label %do.end57.i, label %__lock_unpin_lock.exit, !prof !1501

do.end57.i:                                       ; preds = %if.end37.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5456, i32 noundef 9, ptr noundef nonnull @.str.680) #28
  %42 = ptrtoint ptr %pin_count.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 0, ptr %pin_count.i, align 4
  br label %__lock_unpin_lock.exit

for.inc.critedge.i:                               ; preds = %for.body.i
  %inc.i = add nuw nsw i32 %i.0120.i, 1
  %43 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %lockdep_depth.i, align 8
  %cmp.i = icmp slt i32 %inc.i, %44
  br i1 %cmp.i, label %for.body.i, label %do.end88.i

do.end88.i:                                       ; preds = %for.inc.critedge.i, %for.cond.preheader.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5463, i32 noundef 9, ptr noundef nonnull @.str.681) #28
  br label %__lock_unpin_lock.exit

__lock_unpin_lock.exit:                           ; preds = %do.end88.i, %do.end57.i, %if.end37.i, %do.end.i, %do.body
  %45 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i33 = and i32 %45, -16384
  %46 = inttoptr i32 %and.i.i33 to ptr
  %cpu.i34 = getelementptr inbounds %struct.thread_info, ptr %46, i32 0, i32 3
  %47 = ptrtoint ptr %cpu.i34 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %cpu.i34, align 4
  %arrayidx.i35 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %48
  %49 = ptrtoint ptr %arrayidx.i35 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %arrayidx.i35, align 4
  %add.i36 = add i32 %50, ptrtoint (ptr @lockdep_recursion to i32)
  %51 = inttoptr i32 %add.i36 to ptr
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %51, align 4
  %add7.i37 = add i32 %53, -1
  store i32 %add7.i37, ptr %51, align 4
  %tobool.not.i38 = icmp eq i32 %add7.i37, 0
  br i1 %tobool.not.i38, label %lockdep_recursion_finish.exit, label %land.rhs.i

land.rhs.i:                                       ; preds = %__lock_unpin_lock.exit
  %.b76.i = load i1, ptr @lockdep_recursion_finish.__already_done, align 1
  br i1 %.b76.i, label %if.then50.i, label %if.then.i, !prof !1500

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @lockdep_recursion_finish.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 438, i32 noundef 9, ptr noundef null) #28
  br label %if.then50.i

if.then50.i:                                      ; preds = %if.then.i, %land.rhs.i
  %54 = ptrtoint ptr %cpu.i34 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %cpu.i34, align 4
  %arrayidx66.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %55
  %56 = ptrtoint ptr %arrayidx66.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %arrayidx66.i, align 4
  %add67.i = add i32 %57, ptrtoint (ptr @lockdep_recursion to i32)
  %58 = inttoptr i32 %add67.i to ptr
  %59 = ptrtoint ptr %58 to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 0, ptr %58, align 4
  br label %lockdep_recursion_finish.exit

lockdep_recursion_finish.exit:                    ; preds = %if.then50.i, %__lock_unpin_lock.exit
  %60 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i42 = and i32 %60, 128
  %tobool13.not = icmp eq i32 %and.i.i42, 0
  br i1 %tobool13.not, label %if.then22, label %do.end25, !prof !1501

if.then22:                                        ; preds = %lockdep_recursion_finish.exit
  tail call void @warn_bogus_irq_restore() #28
  br label %do.end25

do.end25:                                         ; preds = %if.then22, %lockdep_recursion_finish.exit
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %22) #28, !srcloc !1506
  br label %cleanup

cleanup:                                          ; preds = %do.end25, %lockdep_enabled.exit, %if.end.i, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lock_contended(ptr noundef %lock, i32 noundef %ip) #0 align 64 {
entry:
  tail call fastcc void @trace_lock_contended(ptr noundef %lock, i32 noundef %ip)
  %0 = load i32, ptr @lock_stat, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %cleanup, label %lor.rhs, !prof !1501

lor.rhs:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %1 = load i32, ptr @debug_locks, align 4
  %tobool.not.i = icmp eq i32 %1, 0
  br i1 %tobool.not.i, label %cleanup, label %if.end.i

if.end.i:                                         ; preds = %lor.rhs
  %2 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %5, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1525
  %6 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %9
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %11, ptrtoint (ptr @lockdep_recursion to i32)
  %12 = inttoptr i32 %add.i to ptr
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %12, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1526
  %15 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i26.i = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i.i26.i to ptr
  %preempt_count.i.i27.i = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %preempt_count.i.i27.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %preempt_count.i.i27.i, align 4
  %sub.i.i = add i32 %18, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i27.i, align 4
  %tobool19.not.i = icmp eq i32 %14, 0
  br i1 %tobool19.not.i, label %lockdep_enabled.exit, label %cleanup

lockdep_enabled.exit:                             ; preds = %if.end.i
  %task.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %19 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %task.i, align 8
  %lockdep_recursion.i = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 143
  %21 = ptrtoint ptr %lockdep_recursion.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %lockdep_recursion.i, align 4
  %tobool23.not.i.not = icmp eq i32 %22, 0
  br i1 %tobool23.not.i.not, label %do.body, label %cleanup, !prof !1500

do.body:                                          ; preds = %lockdep_enabled.exit
  %23 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28, !srcloc !1503
  tail call fastcc void @check_flags(i32 noundef %23)
  %24 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i31 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i31 to ptr
  %cpu.i32 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu.i32 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu.i32, align 4
  %arrayidx.i33 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %27
  %28 = ptrtoint ptr %arrayidx.i33 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx.i33, align 4
  %add.i34 = add i32 %29, ptrtoint (ptr @lockdep_recursion to i32)
  %30 = inttoptr i32 %add.i34 to ptr
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %30, align 4
  %add7.i = add i32 %32, 1
  store i32 %add7.i, ptr %30, align 4
  %33 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i41 = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i41 to ptr
  %task.i42 = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %task.i42 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %task.i42, align 8
  %lockdep_depth.i = getelementptr inbounds %struct.task_struct, ptr %36, i32 0, i32 142
  %37 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %lockdep_depth.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %39 = load i32, ptr @oops_in_progress, align 4
  %tobool.not.i43 = icmp eq i32 %39, 0
  %tobool1.not.i = icmp eq i32 %38, 0
  %or.cond.i = select i1 %tobool.not.i43, i1 %tobool1.not.i, i1 false
  br i1 %or.cond.i, label %do.end.i, label %if.end41.i, !prof !1530

do.end.i:                                         ; preds = %do.body
  %call5.i = tail call i32 @debug_locks_off() #28
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %__lock_contended.exit, label %land.lhs.true7.i

land.lhs.true7.i:                                 ; preds = %do.end.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %40 = load i32, ptr @debug_locks_silent, align 4
  %tobool8.not.i = icmp eq i32 %40, 0
  br i1 %tobool8.not.i, label %do.end21.i, label %__lock_contended.exit

do.end21.i:                                       ; preds = %land.lhs.true7.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5787, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.380) #28
  br label %__lock_contended.exit

if.end41.i:                                       ; preds = %do.body
  %sub.i.i44 = add i32 %38, -1
  %held_locks.i.i = getelementptr inbounds %struct.task_struct, ptr %36, i32 0, i32 144
  %add.ptr.i.i = getelementptr %struct.held_lock, ptr %held_locks.i.i, i32 %sub.i.i44
  %call.i.i = tail call fastcc i32 @match_held_lock(ptr noundef %add.ptr.i.i, ptr noundef %lock) #28
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %find_held_lock.exit.i

if.end.i.i:                                       ; preds = %if.end41.i
  %dec.i.i = add i32 %38, -2
  %cmp27.i.i = icmp sgt i32 %dec.i.i, -1
  br i1 %cmp27.i.i, label %for.body.i.i, label %if.then44.i

for.body.i.i:                                     ; preds = %for.inc.i.i, %if.end.i.i
  %i.029.i.i = phi i32 [ %dec12.i.i, %for.inc.i.i ], [ %dec.i.i, %if.end.i.i ]
  %prev_hlock.028.i.i = phi ptr [ %hlock.030.i.i, %for.inc.i.i ], [ %add.ptr.i.i, %if.end.i.i ]
  %hlock.030.i.i = getelementptr %struct.held_lock, ptr %prev_hlock.028.i.i, i32 -1
  %irq_context.i.i = getelementptr inbounds %struct.held_lock, ptr %prev_hlock.028.i.i, i32 0, i32 6
  %41 = ptrtoint ptr %irq_context.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %bf.load.i.i = load i32, ptr %irq_context.i.i, align 8
  %irq_context1.i.i = getelementptr %struct.held_lock, ptr %prev_hlock.028.i.i, i32 -1, i32 6
  %42 = ptrtoint ptr %irq_context1.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %bf.load2.i.i = load i32, ptr %irq_context1.i.i, align 8
  %bf.lshr25.i.i = xor i32 %bf.load2.i.i, %bf.load.i.i
  %43 = and i32 %bf.lshr25.i.i, 393216
  %cmp5.not.i.i = icmp eq i32 %43, 0
  br i1 %cmp5.not.i.i, label %if.end7.i.i, label %if.then44.i

if.end7.i.i:                                      ; preds = %for.body.i.i
  %call8.i.i = tail call fastcc i32 @match_held_lock(ptr noundef %hlock.030.i.i, ptr noundef %lock) #28
  %tobool9.not.i.i = icmp eq i32 %call8.i.i, 0
  br i1 %tobool9.not.i.i, label %for.inc.i.i, label %find_held_lock.exit.i

for.inc.i.i:                                      ; preds = %if.end7.i.i
  %dec12.i.i = add nsw i32 %i.029.i.i, -1
  %cmp.i.i = icmp sgt i32 %i.029.i.i, 0
  br i1 %cmp.i.i, label %for.body.i.i, label %if.then44.i

find_held_lock.exit.i:                            ; preds = %if.end7.i.i, %if.end41.i
  %ret.0.i.i = phi ptr [ %add.ptr.i.i, %if.end41.i ], [ %hlock.030.i.i, %if.end7.i.i ]
  %tobool43.not.i = icmp eq ptr %ret.0.i.i, null
  br i1 %tobool43.not.i, label %if.then44.i, label %if.end45.i

if.then44.i:                                      ; preds = %find_held_lock.exit.i, %for.inc.i.i, %for.body.i.i, %if.end.i.i
  tail call fastcc void @print_lock_contention_bug(ptr noundef %36, ptr noundef %lock, i32 noundef %ip) #28
  br label %__lock_contended.exit

if.end45.i:                                       ; preds = %find_held_lock.exit.i
  %instance.i = getelementptr inbounds %struct.held_lock, ptr %ret.0.i.i, i32 0, i32 2
  %44 = ptrtoint ptr %instance.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %instance.i, align 4
  %cmp.not.i = icmp eq ptr %45, %lock
  br i1 %cmp.not.i, label %if.end47.i, label %__lock_contended.exit

if.end47.i:                                       ; preds = %if.end45.i
  %call.i.i.i = tail call i64 @sched_clock() #28
  %waittime_stamp.i = getelementptr inbounds %struct.held_lock, ptr %ret.0.i.i, i32 0, i32 4
  %46 = ptrtoint ptr %waittime_stamp.i to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %call.i.i.i, ptr %waittime_stamp.i, align 8
  %class_idx1.i.i = getelementptr inbounds %struct.held_lock, ptr %ret.0.i.i, i32 0, i32 6
  %47 = ptrtoint ptr %class_idx1.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %bf.load.i106.i = load i32, ptr %class_idx1.i.i, align 8
  %bf.lshr.i.i = lshr i32 %bf.load.i106.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i.i = lshr i32 %bf.load.i106.i, 24
  %arrayidx.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i.i
  %48 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i = and i32 %bf.lshr.i.i, 31
  %50 = shl nuw i32 1, %and.i.i.i
  %51 = and i32 %50, %49
  %tobool.not.i107.i = icmp eq i32 %51, 0
  br i1 %tobool.not.i107.i, label %if.then.i.i, label %if.end33.i.i

if.then.i.i:                                      ; preds = %if.end47.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %52 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i.i = icmp eq i32 %52, 0
  br i1 %tobool2.not.i.i, label %do.end.i.i, label %hlock_class.exit.i

do.end.i.i:                                       ; preds = %if.then.i.i
  %call4.i.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %hlock_class.exit.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %do.end.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %53 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i.i = icmp eq i32 %53, 0
  br i1 %tobool6.not.i.i, label %do.end15.i.i, label %hlock_class.exit.i

do.end15.i.i:                                     ; preds = %land.lhs.true.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit.i

if.end33.i.i:                                     ; preds = %if.end47.i
  %add.ptr.i108.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i.i
  br label %hlock_class.exit.i

hlock_class.exit.i:                               ; preds = %if.end33.i.i, %do.end15.i.i, %land.lhs.true.i.i, %do.end.i.i, %if.then.i.i
  %retval.0.i.i = phi ptr [ %add.ptr.i108.i, %if.end33.i.i ], [ null, %do.end15.i.i ], [ null, %land.lhs.true.i.i ], [ null, %do.end.i.i ], [ null, %if.then.i.i ]
  %contention_point50.i = getelementptr inbounds %struct.lock_class, ptr %retval.0.i.i, i32 0, i32 14
  %54 = ptrtoint ptr %contention_point50.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %contention_point50.i, align 4
  %cmp1.i.i = icmp eq i32 %55, 0
  br i1 %cmp1.i.i, label %if.then.i109.i, label %if.end.i110.i

if.then.i109.i:                                   ; preds = %for.inc.2.i.i, %for.inc.1.i.i, %for.inc.i111.i, %hlock_class.exit.i
  %i.018.lcssa.i.i = phi i32 [ 0, %hlock_class.exit.i ], [ 1, %for.inc.i111.i ], [ 2, %for.inc.1.i.i ], [ 3, %for.inc.2.i.i ]
  %arrayidx.le.i.i = getelementptr i32, ptr %contention_point50.i, i32 %i.018.lcssa.i.i
  %56 = ptrtoint ptr %arrayidx.le.i.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %ip, ptr %arrayidx.le.i.i, align 4
  br label %lock_point.exit.i

if.end.i110.i:                                    ; preds = %hlock_class.exit.i
  %cmp4.i.i = icmp eq i32 %55, %ip
  br i1 %cmp4.i.i, label %lock_point.exit.i, label %for.inc.i111.i

for.inc.i111.i:                                   ; preds = %if.end.i110.i
  %arrayidx.1.i.i = getelementptr %struct.lock_class, ptr %retval.0.i.i, i32 0, i32 14, i32 1
  %57 = ptrtoint ptr %arrayidx.1.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %arrayidx.1.i.i, align 4
  %cmp1.1.i.i = icmp eq i32 %58, 0
  br i1 %cmp1.1.i.i, label %if.then.i109.i, label %if.end.1.i.i

if.end.1.i.i:                                     ; preds = %for.inc.i111.i
  %cmp4.1.i.i = icmp eq i32 %58, %ip
  br i1 %cmp4.1.i.i, label %lock_point.exit.i, label %for.inc.1.i.i

for.inc.1.i.i:                                    ; preds = %if.end.1.i.i
  %arrayidx.2.i.i = getelementptr %struct.lock_class, ptr %retval.0.i.i, i32 0, i32 14, i32 2
  %59 = ptrtoint ptr %arrayidx.2.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %arrayidx.2.i.i, align 4
  %cmp1.2.i.i = icmp eq i32 %60, 0
  br i1 %cmp1.2.i.i, label %if.then.i109.i, label %if.end.2.i.i

if.end.2.i.i:                                     ; preds = %for.inc.1.i.i
  %cmp4.2.i.i = icmp eq i32 %60, %ip
  br i1 %cmp4.2.i.i, label %lock_point.exit.i, label %for.inc.2.i.i

for.inc.2.i.i:                                    ; preds = %if.end.2.i.i
  %arrayidx.3.i.i = getelementptr %struct.lock_class, ptr %retval.0.i.i, i32 0, i32 14, i32 3
  %61 = ptrtoint ptr %arrayidx.3.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %arrayidx.3.i.i, align 4
  %cmp1.3.i.i = icmp eq i32 %62, 0
  br i1 %cmp1.3.i.i, label %if.then.i109.i, label %if.end.3.i.i

if.end.3.i.i:                                     ; preds = %for.inc.2.i.i
  %cmp4.3.i.i = icmp eq i32 %62, %ip
  %spec.select.i.i = select i1 %cmp4.3.i.i, i32 3, i32 4
  br label %lock_point.exit.i

lock_point.exit.i:                                ; preds = %if.end.3.i.i, %if.end.2.i.i, %if.end.1.i.i, %if.end.i110.i, %if.then.i109.i
  %i.016.i.i = phi i32 [ %i.018.lcssa.i.i, %if.then.i109.i ], [ 0, %if.end.i110.i ], [ 1, %if.end.1.i.i ], [ 2, %if.end.2.i.i ], [ %spec.select.i.i, %if.end.3.i.i ]
  %63 = ptrtoint ptr %class_idx1.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %bf.load.i113.i = load i32, ptr %class_idx1.i.i, align 8
  %bf.lshr.i114.i = lshr i32 %bf.load.i113.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i115.i = lshr i32 %bf.load.i113.i, 24
  %arrayidx.i.i116.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i115.i
  %64 = ptrtoint ptr %arrayidx.i.i116.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %arrayidx.i.i116.i, align 4
  %and.i.i117.i = and i32 %bf.lshr.i114.i, 31
  %66 = shl nuw i32 1, %and.i.i117.i
  %67 = and i32 %66, %65
  %tobool.not.i118.i = icmp eq i32 %67, 0
  br i1 %tobool.not.i118.i, label %if.then.i120.i, label %if.end33.i128.i

if.then.i120.i:                                   ; preds = %lock_point.exit.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %68 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i119.i = icmp eq i32 %68, 0
  br i1 %tobool2.not.i119.i, label %do.end.i123.i, label %hlock_class.exit130.i

do.end.i123.i:                                    ; preds = %if.then.i120.i
  %call4.i121.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i122.i = icmp eq i32 %call4.i121.i, 0
  br i1 %tobool5.not.i122.i, label %hlock_class.exit130.i, label %land.lhs.true.i125.i

land.lhs.true.i125.i:                             ; preds = %do.end.i123.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %69 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i124.i = icmp eq i32 %69, 0
  br i1 %tobool6.not.i124.i, label %do.end15.i126.i, label %hlock_class.exit130.i

do.end15.i126.i:                                  ; preds = %land.lhs.true.i125.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit130.i

if.end33.i128.i:                                  ; preds = %lock_point.exit.i
  %add.ptr.i127.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i114.i
  br label %hlock_class.exit130.i

hlock_class.exit130.i:                            ; preds = %if.end33.i128.i, %do.end15.i126.i, %land.lhs.true.i125.i, %do.end.i123.i, %if.then.i120.i
  %retval.0.i129.i = phi ptr [ %add.ptr.i127.i, %if.end33.i128.i ], [ null, %do.end15.i126.i ], [ null, %land.lhs.true.i125.i ], [ null, %do.end.i123.i ], [ null, %if.then.i120.i ]
  %contending_point53.i = getelementptr inbounds %struct.lock_class, ptr %retval.0.i129.i, i32 0, i32 15
  %ip55.i = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 7
  %70 = ptrtoint ptr %ip55.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %ip55.i, align 4
  %72 = ptrtoint ptr %contending_point53.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %contending_point53.i, align 4
  %cmp1.i131.i = icmp eq i32 %73, 0
  br i1 %cmp1.i131.i, label %if.then.i134.i, label %if.end.i136.i

if.then.i134.i:                                   ; preds = %for.inc.2.i149.i, %for.inc.1.i144.i, %for.inc.i139.i, %hlock_class.exit130.i
  %i.018.lcssa.i132.i = phi i32 [ 0, %hlock_class.exit130.i ], [ 1, %for.inc.i139.i ], [ 2, %for.inc.1.i144.i ], [ 3, %for.inc.2.i149.i ]
  %arrayidx.le.i133.i = getelementptr i32, ptr %contending_point53.i, i32 %i.018.lcssa.i132.i
  %74 = ptrtoint ptr %arrayidx.le.i133.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %71, ptr %arrayidx.le.i133.i, align 4
  br label %lock_point.exit154.i

if.end.i136.i:                                    ; preds = %hlock_class.exit130.i
  %cmp4.i135.i = icmp eq i32 %73, %71
  br i1 %cmp4.i135.i, label %lock_point.exit154.i, label %for.inc.i139.i

for.inc.i139.i:                                   ; preds = %if.end.i136.i
  %arrayidx.1.i137.i = getelementptr %struct.lock_class, ptr %retval.0.i129.i, i32 0, i32 15, i32 1
  %75 = ptrtoint ptr %arrayidx.1.i137.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %arrayidx.1.i137.i, align 4
  %cmp1.1.i138.i = icmp eq i32 %76, 0
  br i1 %cmp1.1.i138.i, label %if.then.i134.i, label %if.end.1.i141.i

if.end.1.i141.i:                                  ; preds = %for.inc.i139.i
  %cmp4.1.i140.i = icmp eq i32 %76, %71
  br i1 %cmp4.1.i140.i, label %lock_point.exit154.i, label %for.inc.1.i144.i

for.inc.1.i144.i:                                 ; preds = %if.end.1.i141.i
  %arrayidx.2.i142.i = getelementptr %struct.lock_class, ptr %retval.0.i129.i, i32 0, i32 15, i32 2
  %77 = ptrtoint ptr %arrayidx.2.i142.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %arrayidx.2.i142.i, align 4
  %cmp1.2.i143.i = icmp eq i32 %78, 0
  br i1 %cmp1.2.i143.i, label %if.then.i134.i, label %if.end.2.i146.i

if.end.2.i146.i:                                  ; preds = %for.inc.1.i144.i
  %cmp4.2.i145.i = icmp eq i32 %78, %71
  br i1 %cmp4.2.i145.i, label %lock_point.exit154.i, label %for.inc.2.i149.i

for.inc.2.i149.i:                                 ; preds = %if.end.2.i146.i
  %arrayidx.3.i147.i = getelementptr %struct.lock_class, ptr %retval.0.i129.i, i32 0, i32 15, i32 3
  %79 = ptrtoint ptr %arrayidx.3.i147.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %arrayidx.3.i147.i, align 4
  %cmp1.3.i148.i = icmp eq i32 %80, 0
  br i1 %cmp1.3.i148.i, label %if.then.i134.i, label %if.end.3.i152.i

if.end.3.i152.i:                                  ; preds = %for.inc.2.i149.i
  %cmp4.3.i150.i = icmp eq i32 %80, %71
  %spec.select.i151.i = select i1 %cmp4.3.i150.i, i32 3, i32 4
  br label %lock_point.exit154.i

lock_point.exit154.i:                             ; preds = %if.end.3.i152.i, %if.end.2.i146.i, %if.end.1.i141.i, %if.end.i136.i, %if.then.i134.i
  %i.016.i153.i = phi i32 [ %i.018.lcssa.i132.i, %if.then.i134.i ], [ 0, %if.end.i136.i ], [ 1, %if.end.1.i141.i ], [ 2, %if.end.2.i146.i ], [ %spec.select.i151.i, %if.end.3.i152.i ]
  %81 = ptrtoint ptr %class_idx1.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %bf.load.i156.i = load i32, ptr %class_idx1.i.i, align 8
  %bf.lshr.i157.i = lshr i32 %bf.load.i156.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i158.i = lshr i32 %bf.load.i156.i, 24
  %arrayidx.i.i159.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i158.i
  %82 = ptrtoint ptr %arrayidx.i.i159.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile i32, ptr %arrayidx.i.i159.i, align 4
  %and.i.i160.i = and i32 %bf.lshr.i157.i, 31
  %84 = shl nuw i32 1, %and.i.i160.i
  %85 = and i32 %84, %83
  %tobool.not.i161.i = icmp eq i32 %85, 0
  br i1 %tobool.not.i161.i, label %if.then.i163.i, label %if.end33.i171.i

if.then.i163.i:                                   ; preds = %lock_point.exit154.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %86 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i162.i = icmp eq i32 %86, 0
  br i1 %tobool2.not.i162.i, label %do.end.i166.i, label %hlock_class.exit173.i

do.end.i166.i:                                    ; preds = %if.then.i163.i
  %call4.i164.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i165.i = icmp eq i32 %call4.i164.i, 0
  br i1 %tobool5.not.i165.i, label %hlock_class.exit173.i, label %land.lhs.true.i168.i

land.lhs.true.i168.i:                             ; preds = %do.end.i166.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %87 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i167.i = icmp eq i32 %87, 0
  br i1 %tobool6.not.i167.i, label %do.end15.i169.i, label %hlock_class.exit173.i

do.end15.i169.i:                                  ; preds = %land.lhs.true.i168.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit173.i

if.end33.i171.i:                                  ; preds = %lock_point.exit154.i
  %add.ptr.i170.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i157.i
  %phi.cast.i = ptrtoint ptr %add.ptr.i170.i to i32
  br label %hlock_class.exit173.i

hlock_class.exit173.i:                            ; preds = %if.end33.i171.i, %do.end15.i169.i, %land.lhs.true.i168.i, %do.end.i166.i, %if.then.i163.i
  %retval.0.i172.i = phi i32 [ %phi.cast.i, %if.end33.i171.i ], [ 0, %do.end15.i169.i ], [ 0, %land.lhs.true.i168.i ], [ 0, %do.end.i166.i ], [ 0, %if.then.i163.i ]
  %88 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i174.i = and i32 %88, -16384
  %89 = inttoptr i32 %and.i.i174.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %89, i32 0, i32 3
  %90 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %91
  %92 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i45 = add i32 %93, ptrtoint (ptr @cpu_lock_stats to i32)
  %94 = inttoptr i32 %add.i.i45 to ptr
  %sub.ptr.sub.i.i = sub i32 %retval.0.i172.i, ptrtoint (ptr @lock_classes to i32)
  %sub.ptr.div.i.i = sdiv exact i32 %sub.ptr.sub.i.i, 132
  %cmp59.i = icmp ult i32 %i.016.i.i, 4
  br i1 %cmp59.i, label %if.then60.i, label %if.end62.i

if.then60.i:                                      ; preds = %hlock_class.exit173.i
  %arrayidx2.i.i = getelementptr %struct.lock_class_stats, ptr %94, i32 %sub.ptr.div.i.i
  %arrayidx.i46 = getelementptr [4 x i32], ptr %arrayidx2.i.i, i32 0, i32 %i.016.i.i
  %95 = ptrtoint ptr %arrayidx.i46 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %arrayidx.i46, align 4
  %inc.i = add i32 %96, 1
  store i32 %inc.i, ptr %arrayidx.i46, align 4
  br label %if.end62.i

if.end62.i:                                       ; preds = %if.then60.i, %hlock_class.exit173.i
  %cmp63.i = icmp ult i32 %i.016.i153.i, 4
  br i1 %cmp63.i, label %if.then64.i, label %if.end68.i

if.then64.i:                                      ; preds = %if.end62.i
  %arrayidx66.i47 = getelementptr %struct.lock_class_stats, ptr %94, i32 %sub.ptr.div.i.i, i32 1, i32 %i.016.i153.i
  %97 = ptrtoint ptr %arrayidx66.i47 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %arrayidx66.i47, align 4
  %inc67.i = add i32 %98, 1
  store i32 %inc67.i, ptr %arrayidx66.i47, align 4
  br label %if.end68.i

if.end68.i:                                       ; preds = %if.then64.i, %if.end62.i
  %cpu.i48 = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 6
  %99 = ptrtoint ptr %cpu.i48 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %cpu.i48, align 4
  %cpu70.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 3
  %101 = ptrtoint ptr %cpu70.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %cpu70.i, align 4
  %cmp71.not.i = icmp eq i32 %100, %102
  br i1 %cmp71.not.i, label %__lock_contended.exit, label %if.then72.i

if.then72.i:                                      ; preds = %if.end68.i
  %103 = ptrtoint ptr %class_idx1.i.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %bf.load.i = load i32, ptr %class_idx1.i.i, align 8
  %104 = and i32 %bf.load.i, 49152
  %tobool73.not.i = icmp eq i32 %104, 0
  %add.i49 = select i1 %tobool73.not.i, i32 2, i32 3
  %arrayidx78.i = getelementptr %struct.lock_class_stats, ptr %94, i32 %sub.ptr.div.i.i, i32 6, i32 %add.i49
  %105 = ptrtoint ptr %arrayidx78.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %arrayidx78.i, align 4
  %inc79.i = add i32 %106, 1
  store i32 %inc79.i, ptr %arrayidx78.i, align 4
  br label %__lock_contended.exit

__lock_contended.exit:                            ; preds = %if.then72.i, %if.end68.i, %if.end45.i, %if.then44.i, %do.end21.i, %land.lhs.true7.i, %do.end.i
  %107 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i35 = and i32 %107, -16384
  %108 = inttoptr i32 %and.i.i35 to ptr
  %cpu.i36 = getelementptr inbounds %struct.thread_info, ptr %108, i32 0, i32 3
  %109 = ptrtoint ptr %cpu.i36 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %cpu.i36, align 4
  %arrayidx.i37 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %110
  %111 = ptrtoint ptr %arrayidx.i37 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %arrayidx.i37, align 4
  %add.i38 = add i32 %112, ptrtoint (ptr @lockdep_recursion to i32)
  %113 = inttoptr i32 %add.i38 to ptr
  %114 = ptrtoint ptr %113 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %113, align 4
  %add7.i39 = add i32 %115, -1
  store i32 %add7.i39, ptr %113, align 4
  %tobool.not.i40 = icmp eq i32 %add7.i39, 0
  br i1 %tobool.not.i40, label %lockdep_recursion_finish.exit, label %land.rhs.i

land.rhs.i:                                       ; preds = %__lock_contended.exit
  %.b76.i = load i1, ptr @lockdep_recursion_finish.__already_done, align 1
  br i1 %.b76.i, label %if.then50.i, label %if.then.i, !prof !1500

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @lockdep_recursion_finish.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 438, i32 noundef 9, ptr noundef null) #28
  br label %if.then50.i

if.then50.i:                                      ; preds = %if.then.i, %land.rhs.i
  %116 = ptrtoint ptr %cpu.i36 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %cpu.i36, align 4
  %arrayidx66.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %117
  %118 = ptrtoint ptr %arrayidx66.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %arrayidx66.i, align 4
  %add67.i = add i32 %119, ptrtoint (ptr @lockdep_recursion to i32)
  %120 = inttoptr i32 %add67.i to ptr
  %121 = ptrtoint ptr %120 to i32
  call void @__asan_store4_noabort(i32 %121)
  store i32 0, ptr %120, align 4
  br label %lockdep_recursion_finish.exit

lockdep_recursion_finish.exit:                    ; preds = %if.then50.i, %__lock_contended.exit
  %122 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i50 = and i32 %122, 128
  %tobool13.not = icmp eq i32 %and.i.i50, 0
  br i1 %tobool13.not, label %if.then22, label %do.end25, !prof !1501

if.then22:                                        ; preds = %lockdep_recursion_finish.exit
  tail call void @warn_bogus_irq_restore() #28
  br label %do.end25

do.end25:                                         ; preds = %if.then22, %lockdep_recursion_finish.exit
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %23) #28, !srcloc !1506
  br label %cleanup

cleanup:                                          ; preds = %do.end25, %lockdep_enabled.exit, %if.end.i, %lor.rhs, %entry
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_lock_contended(ptr noundef %lock, i32 noundef %ip) unnamed_addr #10 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_lock_contended, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_lock_contended, %do.body)) #28
          to label %if.end48 [label %do.body], !srcloc !1538

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1500

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.419, i32 noundef 108, i32 noundef 9, ptr noundef null) #28
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %if.end31

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1550
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_lock_contended, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i, %if.end31
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i ], [ %13, %if.end31 ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %lock, i32 noundef %ip) #28
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1551
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1551
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !1500

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.419, i32 noundef 108, i32 noundef 9, ptr noundef null) #28
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1541
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_lock_contended, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #28
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_lock_contended.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_lock_contended.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.417, i32 noundef 72, ptr noundef nonnull @.str.418)
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1542
  %38 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lock_acquired(ptr noundef %lock, i32 noundef %ip) #0 align 64 {
entry:
  tail call fastcc void @trace_lock_acquired(ptr noundef %lock, i32 noundef %ip)
  %0 = load i32, ptr @lock_stat, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %cleanup, label %lor.rhs, !prof !1501

lor.rhs:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %1 = load i32, ptr @debug_locks, align 4
  %tobool.not.i = icmp eq i32 %1, 0
  br i1 %tobool.not.i, label %cleanup, label %if.end.i

if.end.i:                                         ; preds = %lor.rhs
  %2 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %5, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1525
  %6 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %9
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %11, ptrtoint (ptr @lockdep_recursion to i32)
  %12 = inttoptr i32 %add.i to ptr
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %12, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1526
  %15 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i26.i = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i.i26.i to ptr
  %preempt_count.i.i27.i = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %preempt_count.i.i27.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %preempt_count.i.i27.i, align 4
  %sub.i.i = add i32 %18, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i27.i, align 4
  %tobool19.not.i = icmp eq i32 %14, 0
  br i1 %tobool19.not.i, label %lockdep_enabled.exit, label %cleanup

lockdep_enabled.exit:                             ; preds = %if.end.i
  %task.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %19 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %task.i, align 8
  %lockdep_recursion.i = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 143
  %21 = ptrtoint ptr %lockdep_recursion.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %lockdep_recursion.i, align 4
  %tobool23.not.i.not = icmp eq i32 %22, 0
  br i1 %tobool23.not.i.not, label %do.body, label %cleanup, !prof !1500

do.body:                                          ; preds = %lockdep_enabled.exit
  %23 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28, !srcloc !1503
  tail call fastcc void @check_flags(i32 noundef %23)
  %24 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i31 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i31 to ptr
  %cpu.i32 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu.i32 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu.i32, align 4
  %arrayidx.i33 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %27
  %28 = ptrtoint ptr %arrayidx.i33 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx.i33, align 4
  %add.i34 = add i32 %29, ptrtoint (ptr @lockdep_recursion to i32)
  %30 = inttoptr i32 %add.i34 to ptr
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %30, align 4
  %add7.i = add i32 %32, 1
  store i32 %add7.i, ptr %30, align 4
  %33 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i41 = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i41 to ptr
  %task.i42 = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %task.i42 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %task.i42, align 8
  %lockdep_depth.i = getelementptr inbounds %struct.task_struct, ptr %36, i32 0, i32 142
  %37 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %lockdep_depth.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %39 = load i32, ptr @oops_in_progress, align 4
  %tobool.not.i43 = icmp eq i32 %39, 0
  %tobool1.not.i = icmp eq i32 %38, 0
  %or.cond.i = select i1 %tobool.not.i43, i1 %tobool1.not.i, i1 false
  br i1 %or.cond.i, label %do.end.i, label %if.end41.i, !prof !1530

do.end.i:                                         ; preds = %do.body
  %call5.i = tail call i32 @debug_locks_off() #28
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %__lock_acquired.exit, label %land.lhs.true7.i

land.lhs.true7.i:                                 ; preds = %do.end.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %40 = load i32, ptr @debug_locks_silent, align 4
  %tobool8.not.i = icmp eq i32 %40, 0
  br i1 %tobool8.not.i, label %do.end21.i, label %__lock_acquired.exit

do.end21.i:                                       ; preds = %land.lhs.true7.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5829, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.380) #28
  br label %__lock_acquired.exit

if.end41.i:                                       ; preds = %do.body
  %sub.i.i44 = add i32 %38, -1
  %held_locks.i.i = getelementptr inbounds %struct.task_struct, ptr %36, i32 0, i32 144
  %add.ptr.i.i = getelementptr %struct.held_lock, ptr %held_locks.i.i, i32 %sub.i.i44
  %call.i.i = tail call fastcc i32 @match_held_lock(ptr noundef %add.ptr.i.i, ptr noundef %lock) #28
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %find_held_lock.exit.i

if.end.i.i:                                       ; preds = %if.end41.i
  %dec.i.i = add i32 %38, -2
  %cmp27.i.i = icmp sgt i32 %dec.i.i, -1
  br i1 %cmp27.i.i, label %for.body.i.i, label %if.then44.i

for.body.i.i:                                     ; preds = %for.inc.i.i, %if.end.i.i
  %i.029.i.i = phi i32 [ %dec12.i.i, %for.inc.i.i ], [ %dec.i.i, %if.end.i.i ]
  %prev_hlock.028.i.i = phi ptr [ %hlock.030.i.i, %for.inc.i.i ], [ %add.ptr.i.i, %if.end.i.i ]
  %hlock.030.i.i = getelementptr %struct.held_lock, ptr %prev_hlock.028.i.i, i32 -1
  %irq_context.i.i = getelementptr inbounds %struct.held_lock, ptr %prev_hlock.028.i.i, i32 0, i32 6
  %41 = ptrtoint ptr %irq_context.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %bf.load.i.i = load i32, ptr %irq_context.i.i, align 8
  %irq_context1.i.i = getelementptr %struct.held_lock, ptr %prev_hlock.028.i.i, i32 -1, i32 6
  %42 = ptrtoint ptr %irq_context1.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %bf.load2.i.i = load i32, ptr %irq_context1.i.i, align 8
  %bf.lshr25.i.i = xor i32 %bf.load2.i.i, %bf.load.i.i
  %43 = and i32 %bf.lshr25.i.i, 393216
  %cmp5.not.i.i = icmp eq i32 %43, 0
  br i1 %cmp5.not.i.i, label %if.end7.i.i, label %if.then44.i

if.end7.i.i:                                      ; preds = %for.body.i.i
  %call8.i.i = tail call fastcc i32 @match_held_lock(ptr noundef %hlock.030.i.i, ptr noundef %lock) #28
  %tobool9.not.i.i = icmp eq i32 %call8.i.i, 0
  br i1 %tobool9.not.i.i, label %for.inc.i.i, label %find_held_lock.exit.i

for.inc.i.i:                                      ; preds = %if.end7.i.i
  %dec12.i.i = add nsw i32 %i.029.i.i, -1
  %cmp.i.i = icmp sgt i32 %i.029.i.i, 0
  br i1 %cmp.i.i, label %for.body.i.i, label %if.then44.i

find_held_lock.exit.i:                            ; preds = %if.end7.i.i, %if.end41.i
  %ret.0.i.i = phi ptr [ %add.ptr.i.i, %if.end41.i ], [ %hlock.030.i.i, %if.end7.i.i ]
  %tobool43.not.i = icmp eq ptr %ret.0.i.i, null
  br i1 %tobool43.not.i, label %if.then44.i, label %if.end45.i

if.then44.i:                                      ; preds = %find_held_lock.exit.i, %for.inc.i.i, %for.body.i.i, %if.end.i.i
  %44 = tail call ptr @llvm.returnaddress(i32 0) #28
  %45 = ptrtoint ptr %44 to i32
  tail call fastcc void @print_lock_contention_bug(ptr noundef %36, ptr noundef %lock, i32 noundef %45) #28
  br label %__lock_acquired.exit

if.end45.i:                                       ; preds = %find_held_lock.exit.i
  %instance.i = getelementptr inbounds %struct.held_lock, ptr %ret.0.i.i, i32 0, i32 2
  %46 = ptrtoint ptr %instance.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %instance.i, align 4
  %cmp.not.i = icmp eq ptr %47, %lock
  br i1 %cmp.not.i, label %if.end47.i, label %__lock_acquired.exit

if.end47.i:                                       ; preds = %if.end45.i
  %cpu49.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 3
  %48 = ptrtoint ptr %cpu49.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %cpu49.i, align 4
  %waittime_stamp.i = getelementptr inbounds %struct.held_lock, ptr %ret.0.i.i, i32 0, i32 4
  %50 = ptrtoint ptr %waittime_stamp.i to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %waittime_stamp.i, align 8
  %tobool50.not.i = icmp eq i64 %51, 0
  br i1 %tobool50.not.i, label %if.end54.i, label %if.then51.i

if.then51.i:                                      ; preds = %if.end47.i
  %call.i.i.i = tail call i64 @sched_clock() #28
  %52 = ptrtoint ptr %waittime_stamp.i to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %waittime_stamp.i, align 8
  %sub.i = sub i64 %call.i.i.i, %53
  %holdtime_stamp.i = getelementptr inbounds %struct.held_lock, ptr %ret.0.i.i, i32 0, i32 5
  %54 = ptrtoint ptr %holdtime_stamp.i to i32
  call void @__asan_store8_noabort(i32 %54)
  store i64 %call.i.i.i, ptr %holdtime_stamp.i, align 8
  br label %if.end54.i

if.end54.i:                                       ; preds = %if.then51.i, %if.end47.i
  %waittime.0.i = phi i64 [ %sub.i, %if.then51.i ], [ 0, %if.end47.i ]
  %class_idx1.i.i = getelementptr inbounds %struct.held_lock, ptr %ret.0.i.i, i32 0, i32 6
  %55 = ptrtoint ptr %class_idx1.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %bf.load.i107.i = load i32, ptr %class_idx1.i.i, align 8
  %bf.lshr.i.i = lshr i32 %bf.load.i107.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i.i = lshr i32 %bf.load.i107.i, 24
  %arrayidx.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i.i
  %56 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i = and i32 %bf.lshr.i.i, 31
  %58 = shl nuw i32 1, %and.i.i.i
  %59 = and i32 %58, %57
  %tobool.not.i108.i = icmp eq i32 %59, 0
  br i1 %tobool.not.i108.i, label %if.then.i.i, label %if.end33.i.i

if.then.i.i:                                      ; preds = %if.end54.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %60 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i.i = icmp eq i32 %60, 0
  br i1 %tobool2.not.i.i, label %do.end.i.i, label %hlock_class.exit.i

do.end.i.i:                                       ; preds = %if.then.i.i
  %call4.i.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %hlock_class.exit.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %do.end.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %61 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i.i = icmp eq i32 %61, 0
  br i1 %tobool6.not.i.i, label %do.end15.i.i, label %hlock_class.exit.i

do.end15.i.i:                                     ; preds = %land.lhs.true.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit.i

if.end33.i.i:                                     ; preds = %if.end54.i
  %add.ptr.i109.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i.i
  %phi.cast.i = ptrtoint ptr %add.ptr.i109.i to i32
  br label %hlock_class.exit.i

hlock_class.exit.i:                               ; preds = %if.end33.i.i, %do.end15.i.i, %land.lhs.true.i.i, %do.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %phi.cast.i, %if.end33.i.i ], [ 0, %do.end15.i.i ], [ 0, %land.lhs.true.i.i ], [ 0, %do.end.i.i ], [ 0, %if.then.i.i ]
  %62 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i110.i = and i32 %62, -16384
  %63 = inttoptr i32 %and.i.i110.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %63, i32 0, i32 3
  %64 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %65
  %66 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i45 = add i32 %67, ptrtoint (ptr @cpu_lock_stats to i32)
  %68 = inttoptr i32 %add.i.i45 to ptr
  %sub.ptr.sub.i.i = sub i32 %retval.0.i.i, ptrtoint (ptr @lock_classes to i32)
  %sub.ptr.div.i.i = sdiv exact i32 %sub.ptr.sub.i.i, 132
  %tobool57.not.i = icmp eq i64 %waittime.0.i, 0
  br i1 %tobool57.not.i, label %if.end62.i, label %if.then58.i

if.then58.i:                                      ; preds = %hlock_class.exit.i
  %69 = ptrtoint ptr %class_idx1.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %bf.load.i = load i32, ptr %class_idx1.i.i, align 8
  %70 = and i32 %bf.load.i, 49152
  %tobool59.not.i = icmp eq i32 %70, 0
  br i1 %tobool59.not.i, label %if.else.i, label %if.then60.i

if.then60.i:                                      ; preds = %if.then58.i
  %read_waittime.i = getelementptr %struct.lock_class_stats, ptr %68, i32 %sub.ptr.div.i.i, i32 2
  %max.i.i = getelementptr %struct.lock_class_stats, ptr %68, i32 %sub.ptr.div.i.i, i32 2, i32 1
  %71 = ptrtoint ptr %max.i.i to i32
  call void @__asan_load8_noabort(i32 %71)
  %72 = load i64, ptr %max.i.i, align 8
  %cmp.i111.i = icmp ult i64 %72, %waittime.0.i
  br i1 %cmp.i111.i, label %if.then.i112.i, label %if.end.i113.i

if.then.i112.i:                                   ; preds = %if.then60.i
  %73 = ptrtoint ptr %max.i.i to i32
  call void @__asan_store8_noabort(i32 %73)
  store i64 %waittime.0.i, ptr %max.i.i, align 8
  br label %if.end.i113.i

if.end.i113.i:                                    ; preds = %if.then.i112.i, %if.then60.i
  %74 = ptrtoint ptr %read_waittime.i to i32
  call void @__asan_load8_noabort(i32 %74)
  %75 = load i64, ptr %read_waittime.i, align 8
  %cmp2.i.i = icmp ugt i64 %75, %waittime.0.i
  br i1 %cmp2.i.i, label %if.then3.i.i, label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %if.end.i113.i
  %nr.i.i = getelementptr %struct.lock_class_stats, ptr %68, i32 %sub.ptr.div.i.i, i32 2, i32 3
  %76 = ptrtoint ptr %nr.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %nr.i.i, align 8
  %tobool.not.i114.i = icmp eq i32 %77, 0
  br i1 %tobool.not.i114.i, label %if.then3.i.i, label %lock_time_inc.exit.i

if.then3.i.i:                                     ; preds = %lor.lhs.false.i.i, %if.end.i113.i
  %78 = ptrtoint ptr %read_waittime.i to i32
  call void @__asan_store8_noabort(i32 %78)
  store i64 %waittime.0.i, ptr %read_waittime.i, align 8
  br label %lock_time_inc.exit.i

lock_time_inc.exit.i:                             ; preds = %if.then3.i.i, %lor.lhs.false.i.i
  %total.i.i = getelementptr %struct.lock_class_stats, ptr %68, i32 %sub.ptr.div.i.i, i32 2, i32 2
  %79 = ptrtoint ptr %total.i.i to i32
  call void @__asan_load8_noabort(i32 %79)
  %80 = load i64, ptr %total.i.i, align 8
  %add.i115.i = add i64 %80, %waittime.0.i
  store i64 %add.i115.i, ptr %total.i.i, align 8
  %nr6.i.i = getelementptr %struct.lock_class_stats, ptr %68, i32 %sub.ptr.div.i.i, i32 2, i32 3
  br label %if.end62.sink.split.i

if.else.i:                                        ; preds = %if.then58.i
  %write_waittime.i = getelementptr %struct.lock_class_stats, ptr %68, i32 %sub.ptr.div.i.i, i32 3
  %max.i116.i = getelementptr %struct.lock_class_stats, ptr %68, i32 %sub.ptr.div.i.i, i32 3, i32 1
  %81 = ptrtoint ptr %max.i116.i to i32
  call void @__asan_load8_noabort(i32 %81)
  %82 = load i64, ptr %max.i116.i, align 8
  %cmp.i117.i = icmp ult i64 %82, %waittime.0.i
  br i1 %cmp.i117.i, label %if.then.i118.i, label %if.end.i120.i

if.then.i118.i:                                   ; preds = %if.else.i
  %83 = ptrtoint ptr %max.i116.i to i32
  call void @__asan_store8_noabort(i32 %83)
  store i64 %waittime.0.i, ptr %max.i116.i, align 8
  br label %if.end.i120.i

if.end.i120.i:                                    ; preds = %if.then.i118.i, %if.else.i
  %84 = ptrtoint ptr %write_waittime.i to i32
  call void @__asan_load8_noabort(i32 %84)
  %85 = load i64, ptr %write_waittime.i, align 8
  %cmp2.i119.i = icmp ugt i64 %85, %waittime.0.i
  br i1 %cmp2.i119.i, label %if.then3.i124.i, label %lor.lhs.false.i123.i

lor.lhs.false.i123.i:                             ; preds = %if.end.i120.i
  %nr.i121.i = getelementptr %struct.lock_class_stats, ptr %68, i32 %sub.ptr.div.i.i, i32 3, i32 3
  %86 = ptrtoint ptr %nr.i121.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %nr.i121.i, align 8
  %tobool.not.i122.i = icmp eq i32 %87, 0
  br i1 %tobool.not.i122.i, label %if.then3.i124.i, label %lock_time_inc.exit129.i

if.then3.i124.i:                                  ; preds = %lor.lhs.false.i123.i, %if.end.i120.i
  %88 = ptrtoint ptr %write_waittime.i to i32
  call void @__asan_store8_noabort(i32 %88)
  store i64 %waittime.0.i, ptr %write_waittime.i, align 8
  br label %lock_time_inc.exit129.i

lock_time_inc.exit129.i:                          ; preds = %if.then3.i124.i, %lor.lhs.false.i123.i
  %total.i125.i = getelementptr %struct.lock_class_stats, ptr %68, i32 %sub.ptr.div.i.i, i32 3, i32 2
  %89 = ptrtoint ptr %total.i125.i to i32
  call void @__asan_load8_noabort(i32 %89)
  %90 = load i64, ptr %total.i125.i, align 8
  %add.i126.i = add i64 %90, %waittime.0.i
  store i64 %add.i126.i, ptr %total.i125.i, align 8
  %nr6.i127.i = getelementptr %struct.lock_class_stats, ptr %68, i32 %sub.ptr.div.i.i, i32 3, i32 3
  br label %if.end62.sink.split.i

if.end62.sink.split.i:                            ; preds = %lock_time_inc.exit129.i, %lock_time_inc.exit.i
  %nr6.i.sink136.i = phi ptr [ %nr6.i.i, %lock_time_inc.exit.i ], [ %nr6.i127.i, %lock_time_inc.exit129.i ]
  %91 = ptrtoint ptr %nr6.i.sink136.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %nr6.i.sink136.i, align 8
  %inc.i.i = add i32 %92, 1
  store i32 %inc.i.i, ptr %nr6.i.sink136.i, align 8
  br label %if.end62.i

if.end62.i:                                       ; preds = %if.end62.sink.split.i, %hlock_class.exit.i
  %cpu63.i = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 6
  %93 = ptrtoint ptr %cpu63.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %cpu63.i, align 4
  %cmp64.not.i = icmp eq i32 %94, %49
  br i1 %cmp64.not.i, label %if.end75.i, label %if.then65.i

if.then65.i:                                      ; preds = %if.end62.i
  %95 = ptrtoint ptr %class_idx1.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %bf.load67.i = load i32, ptr %class_idx1.i.i, align 8
  %96 = and i32 %bf.load67.i, 49152
  %tobool70.i = icmp ne i32 %96, 0
  %lnot.ext74.i = zext i1 %tobool70.i to i32
  %arrayidx.i46 = getelementptr %struct.lock_class_stats, ptr %68, i32 %sub.ptr.div.i.i, i32 6, i32 %lnot.ext74.i
  %97 = ptrtoint ptr %arrayidx.i46 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %arrayidx.i46, align 4
  %inc.i = add i32 %98, 1
  store i32 %inc.i, ptr %arrayidx.i46, align 4
  br label %if.end75.i

if.end75.i:                                       ; preds = %if.then65.i, %if.end62.i
  %99 = ptrtoint ptr %cpu63.i to i32
  call void @__asan_store4_noabort(i32 %99)
  store i32 %49, ptr %cpu63.i, align 4
  %ip77.i = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 7
  %100 = ptrtoint ptr %ip77.i to i32
  call void @__asan_store4_noabort(i32 %100)
  store i32 %ip, ptr %ip77.i, align 4
  br label %__lock_acquired.exit

__lock_acquired.exit:                             ; preds = %if.end75.i, %if.end45.i, %if.then44.i, %do.end21.i, %land.lhs.true7.i, %do.end.i
  %101 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i35 = and i32 %101, -16384
  %102 = inttoptr i32 %and.i.i35 to ptr
  %cpu.i36 = getelementptr inbounds %struct.thread_info, ptr %102, i32 0, i32 3
  %103 = ptrtoint ptr %cpu.i36 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %cpu.i36, align 4
  %arrayidx.i37 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %104
  %105 = ptrtoint ptr %arrayidx.i37 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %arrayidx.i37, align 4
  %add.i38 = add i32 %106, ptrtoint (ptr @lockdep_recursion to i32)
  %107 = inttoptr i32 %add.i38 to ptr
  %108 = ptrtoint ptr %107 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %107, align 4
  %add7.i39 = add i32 %109, -1
  store i32 %add7.i39, ptr %107, align 4
  %tobool.not.i40 = icmp eq i32 %add7.i39, 0
  br i1 %tobool.not.i40, label %lockdep_recursion_finish.exit, label %land.rhs.i

land.rhs.i:                                       ; preds = %__lock_acquired.exit
  %.b76.i = load i1, ptr @lockdep_recursion_finish.__already_done, align 1
  br i1 %.b76.i, label %if.then50.i, label %if.then.i, !prof !1500

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @lockdep_recursion_finish.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 438, i32 noundef 9, ptr noundef null) #28
  br label %if.then50.i

if.then50.i:                                      ; preds = %if.then.i, %land.rhs.i
  %110 = ptrtoint ptr %cpu.i36 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %cpu.i36, align 4
  %arrayidx66.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %111
  %112 = ptrtoint ptr %arrayidx66.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %arrayidx66.i, align 4
  %add67.i = add i32 %113, ptrtoint (ptr @lockdep_recursion to i32)
  %114 = inttoptr i32 %add67.i to ptr
  %115 = ptrtoint ptr %114 to i32
  call void @__asan_store4_noabort(i32 %115)
  store i32 0, ptr %114, align 4
  br label %lockdep_recursion_finish.exit

lockdep_recursion_finish.exit:                    ; preds = %if.then50.i, %__lock_acquired.exit
  %116 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i47 = and i32 %116, 128
  %tobool13.not = icmp eq i32 %and.i.i47, 0
  br i1 %tobool13.not, label %if.then22, label %do.end25, !prof !1501

if.then22:                                        ; preds = %lockdep_recursion_finish.exit
  tail call void @warn_bogus_irq_restore() #28
  br label %do.end25

do.end25:                                         ; preds = %if.then22, %lockdep_recursion_finish.exit
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %23) #28, !srcloc !1506
  br label %cleanup

cleanup:                                          ; preds = %do.end25, %lockdep_enabled.exit, %if.end.i, %lor.rhs, %entry
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_lock_acquired(ptr noundef %lock, i32 noundef %ip) unnamed_addr #10 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_lock_acquired, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_lock_acquired, %do.body)) #28
          to label %if.end48 [label %do.body], !srcloc !1538

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1500

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.419, i32 noundef 108, i32 noundef 9, ptr noundef null) #28
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %if.end31

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1552
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_lock_acquired, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i, %if.end31
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i ], [ %13, %if.end31 ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %lock, i32 noundef %ip) #28
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1553
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1553
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !1500

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.419, i32 noundef 108, i32 noundef 9, ptr noundef null) #28
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1541
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_lock_acquired, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #28
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_lock_acquired.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_lock_acquired.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.417, i32 noundef 79, ptr noundef nonnull @.str.418)
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1542
  %38 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lockdep_reset() local_unnamed_addr #0 align 64 {
entry:
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28, !srcloc !1503
  %1 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task, align 8
  %lockdep_depth.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 142
  %5 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %lockdep_depth.i, align 8
  %curr_chain_key.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 141
  %6 = ptrtoint ptr %curr_chain_key.i to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 -1, ptr %curr_chain_key.i, align 16
  %lockdep_recursion.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 143
  %7 = ptrtoint ptr %lockdep_recursion.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %lockdep_recursion.i, align 4
  %8 = load ptr, ptr %task, align 8
  %held_locks = getelementptr inbounds %struct.task_struct, ptr %8, i32 0, i32 144
  %9 = call ptr @memset(ptr %held_locks, i32 0, i32 2304)
  store i32 0, ptr @nr_hardirq_chains, align 4
  store i32 0, ptr @nr_softirq_chains, align 4
  store i32 0, ptr @nr_process_chains, align 4
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  store i32 1, ptr @debug_locks, align 4
  %10 = call ptr @memset(ptr @chainhash_table, i32 0, i32 131072)
  %11 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i = and i32 %11, 128
  %tobool.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not, label %if.then, label %do.end18, !prof !1501

if.then:                                          ; preds = %entry
  tail call void @warn_bogus_irq_restore() #28
  br label %do.end18

do.end18:                                         ; preds = %if.then, %entry
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #28, !srcloc !1506
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lockdep_free_key_range(ptr noundef %start, i32 noundef %size) local_unnamed_addr #0 align 64 {
entry:
  tail call fastcc void @init_data_structures_once()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %4 = load ptr, ptr @lockdep_selftest_task_struct, align 4
  %cmp.i = icmp eq ptr %3, %4
  tail call fastcc void @init_data_structures_once() #28
  %5 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %6 = load i32, ptr @oops_in_progress, align 4
  %tobool.not.i.i = icmp eq i32 %6, 0
  br i1 %cmp.i, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %if.end50.i.i

land.lhs.true.i.i:                                ; preds = %if.then
  %7 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i.i = and i32 %7, 128
  %tobool10.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool10.not.i.i, label %do.end16.i.i, label %if.end50.i.i, !prof !1501

do.end16.i.i:                                     ; preds = %land.lhs.true.i.i
  %call17.i.i = tail call i32 @debug_locks_off() #28
  %tobool18.not.i.i = icmp eq i32 %call17.i.i, 0
  br i1 %tobool18.not.i.i, label %if.end50.i.i, label %land.lhs.true19.i.i

land.lhs.true19.i.i:                              ; preds = %do.end16.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %8 = load i32, ptr @debug_locks_silent, align 4
  %tobool20.not.i.i = icmp eq i32 %8, 0
  br i1 %tobool20.not.i.i, label %do.end33.i.i, label %if.end50.i.i

do.end33.i.i:                                     ; preds = %land.lhs.true19.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 110, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.32) #28
  br label %if.end50.i.i

if.end50.i.i:                                     ; preds = %do.end33.i.i, %land.lhs.true19.i.i, %do.end16.i.i, %land.lhs.true.i.i, %if.then
  %9 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i71.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i71.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %14, ptrtoint (ptr @lockdep_recursion to i32)
  %15 = inttoptr i32 %add.i.i to ptr
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 4
  %add64.i.i = add i32 %17, 1
  store i32 %add64.i.i, ptr %15, align 4
  tail call void @llvm.prefetch.p0(ptr nonnull @__lock, i32 1, i32 3, i32 1) #28
  %18 = tail call { i32, i32, i32 } asm sideeffect "1:\09ldrex\09$0, [$3]\0A\09add\09$1, $0, $4\0A\09strex\09$2, $1, [$3]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,r,I,~{cc}"(ptr nonnull @__lock, i32 65536) #28, !srcloc !1507
  %asmresult.i.i.i = extractvalue { i32, i32, i32 } %18, 0
  %lockval.sroa.0.0.extract.shift.i.i.i = lshr i32 %asmresult.i.i.i, 16
  %conv31.i.i.i = and i32 %asmresult.i.i.i, 65535
  %cmp.not2.i.i.i = icmp eq i32 %lockval.sroa.0.0.extract.shift.i.i.i, %conv31.i.i.i
  br i1 %cmp.not2.i.i.i, label %lockdep_lock.exit.i, label %while.body.i.i.i

while.body.i.i.i:                                 ; preds = %while.body.i.i.i, %if.end50.i.i
  tail call void asm sideeffect "wfe", "~{memory}"() #28, !srcloc !1508
  %19 = load volatile i16, ptr getelementptr inbounds (%struct.__raw_tickets, ptr @__lock, i32 0, i32 1), align 2
  %conv3.i.i.i = zext i16 %19 to i32
  %cmp.not.i.i.i = icmp eq i32 %lockval.sroa.0.0.extract.shift.i.i.i, %conv3.i.i.i
  br i1 %cmp.not.i.i.i, label %lockdep_lock.exit.i, label %while.body.i.i.i

lockdep_lock.exit.i:                              ; preds = %while.body.i.i.i, %if.end50.i.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #28, !srcloc !1509
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %20 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %task.i.i, align 8
  store ptr %21, ptr @__owner, align 4
  tail call fastcc void @__lockdep_free_key_range(ptr noundef getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3), ptr noundef %start, i32 noundef %size) #28
  tail call fastcc void @__free_zapped_classes(ptr noundef getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3)) #28
  tail call fastcc void @lockdep_unlock() #28
  %22 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i18.i = and i32 %22, 128
  %tobool.not.i = icmp eq i32 %and.i.i18.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %lockdep_free_key_range_imm.exit, !prof !1501

if.then.i:                                        ; preds = %lockdep_lock.exit.i
  tail call void @warn_bogus_irq_restore() #28
  br label %lockdep_free_key_range_imm.exit

lockdep_free_key_range_imm.exit:                  ; preds = %if.then.i, %lockdep_lock.exit.i
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %5) #28, !srcloc !1506
  br label %if.end

if.else:                                          ; preds = %entry
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i6, label %if.end50.i.i22

land.lhs.true.i.i6:                               ; preds = %if.else
  %23 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i.i4 = and i32 %23, 128
  %tobool10.not.i.i5 = icmp eq i32 %and.i.i.i4, 0
  br i1 %tobool10.not.i.i5, label %do.end16.i.i9, label %if.end50.i.i22, !prof !1501

do.end16.i.i9:                                    ; preds = %land.lhs.true.i.i6
  %call17.i.i7 = tail call i32 @debug_locks_off() #28
  %tobool18.not.i.i8 = icmp eq i32 %call17.i.i7, 0
  br i1 %tobool18.not.i.i8, label %if.end50.i.i22, label %land.lhs.true19.i.i11

land.lhs.true19.i.i11:                            ; preds = %do.end16.i.i9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %24 = load i32, ptr @debug_locks_silent, align 4
  %tobool20.not.i.i10 = icmp eq i32 %24, 0
  br i1 %tobool20.not.i.i10, label %do.end33.i.i12, label %if.end50.i.i22

do.end33.i.i12:                                   ; preds = %land.lhs.true19.i.i11
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 110, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.32) #28
  br label %if.end50.i.i22

if.end50.i.i22:                                   ; preds = %do.end33.i.i12, %land.lhs.true19.i.i11, %do.end16.i.i9, %land.lhs.true.i.i6, %if.else
  %25 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i71.i.i13 = and i32 %25, -16384
  %26 = inttoptr i32 %and.i71.i.i13 to ptr
  %cpu.i.i14 = getelementptr inbounds %struct.thread_info, ptr %26, i32 0, i32 3
  %27 = ptrtoint ptr %cpu.i.i14 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cpu.i.i14, align 4
  %arrayidx.i.i15 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %28
  %29 = ptrtoint ptr %arrayidx.i.i15 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %arrayidx.i.i15, align 4
  %add.i.i16 = add i32 %30, ptrtoint (ptr @lockdep_recursion to i32)
  %31 = inttoptr i32 %add.i.i16 to ptr
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %31, align 4
  %add64.i.i17 = add i32 %33, 1
  store i32 %add64.i.i17, ptr %31, align 4
  tail call void @llvm.prefetch.p0(ptr nonnull @__lock, i32 1, i32 3, i32 1) #28
  %34 = tail call { i32, i32, i32 } asm sideeffect "1:\09ldrex\09$0, [$3]\0A\09add\09$1, $0, $4\0A\09strex\09$2, $1, [$3]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,r,I,~{cc}"(ptr nonnull @__lock, i32 65536) #28, !srcloc !1507
  %asmresult.i.i.i18 = extractvalue { i32, i32, i32 } %34, 0
  %lockval.sroa.0.0.extract.shift.i.i.i19 = lshr i32 %asmresult.i.i.i18, 16
  %conv31.i.i.i20 = and i32 %asmresult.i.i.i18, 65535
  %cmp.not2.i.i.i21 = icmp eq i32 %lockval.sroa.0.0.extract.shift.i.i.i19, %conv31.i.i.i20
  br i1 %cmp.not2.i.i.i21, label %lockdep_lock.exit.i29, label %while.body.i.i.i25

while.body.i.i.i25:                               ; preds = %while.body.i.i.i25, %if.end50.i.i22
  tail call void asm sideeffect "wfe", "~{memory}"() #28, !srcloc !1508
  %35 = load volatile i16, ptr getelementptr inbounds (%struct.__raw_tickets, ptr @__lock, i32 0, i32 1), align 2
  %conv3.i.i.i23 = zext i16 %35 to i32
  %cmp.not.i.i.i24 = icmp eq i32 %lockval.sroa.0.0.extract.shift.i.i.i19, %conv3.i.i.i23
  br i1 %cmp.not.i.i.i24, label %lockdep_lock.exit.i29, label %while.body.i.i.i25

lockdep_lock.exit.i29:                            ; preds = %while.body.i.i.i25, %if.end50.i.i22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #28, !srcloc !1509
  %task.i.i26 = getelementptr inbounds %struct.thread_info, ptr %26, i32 0, i32 2
  %36 = ptrtoint ptr %task.i.i26 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %task.i.i26, align 8
  store ptr %37, ptr @__owner, align 4
  %38 = load i32, ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 1), align 4
  %add.ptr.i.i = getelementptr %struct.pending_free, ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3), i32 %38
  tail call fastcc void @__lockdep_free_key_range(ptr noundef %add.ptr.i.i, ptr noundef %start, i32 noundef %size) #28
  tail call fastcc void @call_rcu_zapped(ptr noundef %add.ptr.i.i) #28
  tail call fastcc void @lockdep_unlock() #28
  %39 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i18.i27 = and i32 %39, 128
  %tobool.not.i28 = icmp eq i32 %and.i.i18.i27, 0
  br i1 %tobool.not.i28, label %if.then.i30, label %lockdep_free_key_range_reg.exit, !prof !1501

if.then.i30:                                      ; preds = %lockdep_lock.exit.i29
  tail call void @warn_bogus_irq_restore() #28
  br label %lockdep_free_key_range_reg.exit

lockdep_free_key_range_reg.exit:                  ; preds = %if.then.i30, %lockdep_lock.exit.i29
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %5) #28, !srcloc !1506
  tail call void @synchronize_rcu() #28
  br label %if.end

if.end:                                           ; preds = %lockdep_free_key_range_reg.exit, %lockdep_free_key_range_imm.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @init_data_structures_once() unnamed_addr #0 align 64 {
entry:
  %.b1516 = load i1, ptr @init_data_structures_once.rcu_head_initialized, align 1
  br i1 %.b1516, label %cleanup, label %if.end, !prof !1500

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_state to i32))
  %0 = load i32, ptr @system_state, align 4
  %cmp.not = icmp eq i32 %0, 0
  br i1 %cmp.not, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  tail call void @init_rcu_head(ptr noundef nonnull @delayed_free) #28
  store i1 true, ptr @init_data_structures_once.rcu_head_initialized, align 1
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end
  %.b17 = load i1, ptr @init_data_structures_once.ds_initialized, align 1
  br i1 %.b17, label %cleanup, label %if.end7

if.end7:                                          ; preds = %if.end4
  store i1 true, ptr @init_data_structures_once.ds_initialized, align 1
  store volatile ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3), ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3), align 4
  store ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3), ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3, i32 0, i32 0, i32 1), align 4
  store volatile ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3, i32 1), ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3, i32 1), align 4
  store ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3, i32 1), ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3, i32 1, i32 0, i32 1), align 4
  br label %for.body

for.body:                                         ; preds = %list_add_tail.exit, %if.end7
  %i.019 = phi i32 [ 0, %if.end7 ], [ %inc, %list_add_tail.exit ]
  %lock_entry = getelementptr [8192 x %struct.lock_class], ptr @lock_classes, i32 0, i32 %i.019, i32 1
  %1 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @free_lock_classes, i32 0, i32 1), align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %lock_entry, ptr noundef %1, ptr noundef nonnull @free_lock_classes) #28
  br i1 %call.i.i, label %if.end.i.i, label %list_add_tail.exit

if.end.i.i:                                       ; preds = %for.body
  store ptr %lock_entry, ptr getelementptr inbounds (%struct.list_head, ptr @free_lock_classes, i32 0, i32 1), align 4
  %2 = ptrtoint ptr %lock_entry to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr @free_lock_classes, ptr %lock_entry, align 4
  %prev3.i.i = getelementptr [8192 x %struct.lock_class], ptr @lock_classes, i32 0, i32 %i.019, i32 1, i32 1
  %3 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %1, ptr %prev3.i.i, align 4
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %lock_entry, ptr %1, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %for.body
  %locks_after = getelementptr [8192 x %struct.lock_class], ptr @lock_classes, i32 0, i32 %i.019, i32 2
  %5 = ptrtoint ptr %locks_after to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %locks_after, ptr %locks_after, align 4
  %prev.i = getelementptr [8192 x %struct.lock_class], ptr @lock_classes, i32 0, i32 %i.019, i32 2, i32 1
  %6 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %locks_after, ptr %prev.i, align 4
  %locks_before = getelementptr [8192 x %struct.lock_class], ptr @lock_classes, i32 0, i32 %i.019, i32 3
  %7 = ptrtoint ptr %locks_before to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %locks_before, ptr %locks_before, align 4
  %prev.i18 = getelementptr [8192 x %struct.lock_class], ptr @lock_classes, i32 0, i32 %i.019, i32 3, i32 1
  %8 = ptrtoint ptr %prev.i18 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %locks_before, ptr %prev.i18, align 4
  %inc = add nuw nsw i32 %i.019, 1
  %exitcond.not = icmp eq i32 %inc, 8192
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %list_add_tail.exit
  %9 = call ptr @memset(ptr getelementptr inbounds ([16 x i32], ptr @chain_block_buckets, i32 0, i32 1), i32 255, i32 60)
  %10 = load i32, ptr @nr_free_chain_hlocks, align 4
  %add.i.i = add i32 %10, 327680
  store i32 %add.i.i, ptr @nr_free_chain_hlocks, align 4
  %11 = load i32, ptr @nr_large_chain_blocks, align 4
  %inc7.i.i = add i32 %11, 1
  store i32 %inc7.i.i, ptr @nr_large_chain_blocks, align 4
  store i16 -1, ptr @chain_hlocks, align 2
  store i16 -1, ptr getelementptr inbounds ([327680 x i16], ptr @chain_hlocks, i32 0, i32 1), align 2
  store i16 5, ptr getelementptr inbounds ([327680 x i16], ptr @chain_hlocks, i32 0, i32 2), align 2
  store i16 0, ptr getelementptr inbounds ([327680 x i16], ptr @chain_hlocks, i32 0, i32 3), align 2
  store i32 0, ptr @chain_block_buckets, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.end4, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lockdep_reset_lock(ptr nocapture noundef readonly %lock) local_unnamed_addr #0 align 64 {
entry:
  tail call fastcc void @init_data_structures_once()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %4 = load ptr, ptr @lockdep_selftest_task_struct, align 4
  %cmp.i = icmp eq ptr %3, %4
  %5 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28
  br i1 %cmp.i, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %6 = load i32, ptr @oops_in_progress, align 4
  %tobool.not.i.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %if.end50.i.i

land.lhs.true.i.i:                                ; preds = %if.then
  %7 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i.i = and i32 %7, 128
  %tobool10.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool10.not.i.i, label %do.end16.i.i, label %if.end50.i.i, !prof !1501

do.end16.i.i:                                     ; preds = %land.lhs.true.i.i
  %call17.i.i = tail call i32 @debug_locks_off() #28
  %tobool18.not.i.i = icmp eq i32 %call17.i.i, 0
  br i1 %tobool18.not.i.i, label %if.end50.i.i, label %land.lhs.true19.i.i

land.lhs.true19.i.i:                              ; preds = %do.end16.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %8 = load i32, ptr @debug_locks_silent, align 4
  %tobool20.not.i.i = icmp eq i32 %8, 0
  br i1 %tobool20.not.i.i, label %do.end33.i.i, label %if.end50.i.i

do.end33.i.i:                                     ; preds = %land.lhs.true19.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 110, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.32) #28
  br label %if.end50.i.i

if.end50.i.i:                                     ; preds = %do.end33.i.i, %land.lhs.true19.i.i, %do.end16.i.i, %land.lhs.true.i.i, %if.then
  %9 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i71.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i71.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %14, ptrtoint (ptr @lockdep_recursion to i32)
  %15 = inttoptr i32 %add.i.i to ptr
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 4
  %add64.i.i = add i32 %17, 1
  store i32 %add64.i.i, ptr %15, align 4
  tail call void @llvm.prefetch.p0(ptr nonnull @__lock, i32 1, i32 3, i32 1) #28
  %18 = tail call { i32, i32, i32 } asm sideeffect "1:\09ldrex\09$0, [$3]\0A\09add\09$1, $0, $4\0A\09strex\09$2, $1, [$3]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,r,I,~{cc}"(ptr nonnull @__lock, i32 65536) #28, !srcloc !1507
  %asmresult.i.i.i = extractvalue { i32, i32, i32 } %18, 0
  %lockval.sroa.0.0.extract.shift.i.i.i = lshr i32 %asmresult.i.i.i, 16
  %conv31.i.i.i = and i32 %asmresult.i.i.i, 65535
  %cmp.not2.i.i.i = icmp eq i32 %lockval.sroa.0.0.extract.shift.i.i.i, %conv31.i.i.i
  br i1 %cmp.not2.i.i.i, label %lockdep_lock.exit.i, label %while.body.i.i.i

while.body.i.i.i:                                 ; preds = %while.body.i.i.i, %if.end50.i.i
  tail call void asm sideeffect "wfe", "~{memory}"() #28, !srcloc !1508
  %19 = load volatile i16, ptr getelementptr inbounds (%struct.__raw_tickets, ptr @__lock, i32 0, i32 1), align 2
  %conv3.i.i.i = zext i16 %19 to i32
  %cmp.not.i.i.i = icmp eq i32 %lockval.sroa.0.0.extract.shift.i.i.i, %conv3.i.i.i
  br i1 %cmp.not.i.i.i, label %lockdep_lock.exit.i, label %while.body.i.i.i

lockdep_lock.exit.i:                              ; preds = %while.body.i.i.i, %if.end50.i.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #28, !srcloc !1509
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %20 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %task.i.i, align 8
  store ptr %21, ptr @__owner, align 4
  tail call fastcc void @__lockdep_reset_lock(ptr noundef getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3), ptr noundef %lock) #28
  tail call fastcc void @__free_zapped_classes(ptr noundef getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3)) #28
  tail call fastcc void @lockdep_unlock() #28
  %22 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i18.i = and i32 %22, 128
  %tobool.not.i = icmp eq i32 %and.i.i18.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %lockdep_reset_lock_imm.exit, !prof !1501

if.then.i:                                        ; preds = %lockdep_lock.exit.i
  tail call void @warn_bogus_irq_restore() #28
  br label %lockdep_reset_lock_imm.exit

lockdep_reset_lock_imm.exit:                      ; preds = %if.then.i, %lockdep_lock.exit.i
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %5) #28, !srcloc !1506
  br label %if.end

if.else:                                          ; preds = %entry
  %call1.i = tail call fastcc i32 @graph_lock() #28
  %tobool.not.i2 = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i2, label %do.body3.i, label %if.end.i

if.end.i:                                         ; preds = %if.else
  %23 = load i32, ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 1), align 4
  %add.ptr.i.i = getelementptr %struct.pending_free, ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3), i32 %23
  tail call fastcc void @__lockdep_reset_lock(ptr noundef %add.ptr.i.i, ptr noundef %lock) #28
  tail call fastcc void @call_rcu_zapped(ptr noundef %add.ptr.i.i) #28
  tail call fastcc void @lockdep_unlock() #28
  br label %do.body3.i

do.body3.i:                                       ; preds = %if.end.i, %if.else
  %24 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i.i3 = and i32 %24, 128
  %tobool11.not.i = icmp eq i32 %and.i.i.i3, 0
  br i1 %tobool11.not.i, label %if.then15.i, label %lockdep_reset_lock_reg.exit, !prof !1501

if.then15.i:                                      ; preds = %do.body3.i
  tail call void @warn_bogus_irq_restore() #28
  br label %lockdep_reset_lock_reg.exit

lockdep_reset_lock_reg.exit:                      ; preds = %if.then15.i, %do.body3.i
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %5) #28, !srcloc !1506
  br label %if.end

if.end:                                           ; preds = %lockdep_reset_lock_reg.exit, %lockdep_reset_lock_imm.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lockdep_unregister_key(ptr noundef %key) #0 align 64 {
entry:
  %0 = ptrtoint ptr %key to i32
  %mul.i.i.i = mul i32 %0, 1640531527
  %shr.i.i = lshr i32 %mul.i.i.i, 20
  %add.ptr.i = getelementptr %struct.hlist_head, ptr @lock_keys_hash, i32 %shr.i.i
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 6302) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_state to i32))
  %1 = load i32, ptr @system_state, align 4
  %cmp.i.i = icmp ugt i32 %1, 1
  %cmp.not.i.i.i.i = icmp uge ptr %key, @__init_begin
  %add.ptr.i.i.i.i = getelementptr i8, ptr %key, i32 1
  %cmp1.i.i.i.i = icmp ule ptr %add.ptr.i.i.i.i, @__init_end
  %2 = and i1 %cmp.not.i.i.i.i, %cmp1.i.i.i.i
  %narrow.i.i = and i1 %2, %cmp.i.i
  br i1 %narrow.i.i, label %do.body46, label %if.end.i

if.end.i:                                         ; preds = %entry
  %cmp.not.i = icmp uge ptr %key, @_stext
  %cmp1.i = icmp ult ptr %key, @_end
  %or.cond.i = and i1 %cmp.not.i, %cmp1.i
  br i1 %or.cond.i, label %land.rhs, label %if.end3.i

if.end3.i:                                        ; preds = %if.end.i
  %call4.i = tail call zeroext i1 @is_kernel_percpu_address(i32 noundef %0) #28
  br i1 %call4.i, label %land.rhs, label %if.end6.i

if.end6.i:                                        ; preds = %if.end3.i
  %call7.i = tail call zeroext i1 @is_module_address(i32 noundef %0) #28
  br i1 %call7.i, label %land.rhs, label %static_obj.exit

static_obj.exit:                                  ; preds = %if.end6.i
  %call8.i = tail call zeroext i1 @is_module_percpu_address(i32 noundef %0) #28
  br i1 %call8.i, label %land.rhs, label %do.body46

land.rhs:                                         ; preds = %static_obj.exit, %if.end6.i, %if.end3.i, %if.end.i
  %.b197 = load i1, ptr @lockdep_unregister_key.__already_done, align 1
  br i1 %.b197, label %cleanup, label %if.then, !prof !1500

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @lockdep_unregister_key.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6304, i32 noundef 9, ptr noundef null) #28
  br label %cleanup

do.body46:                                        ; preds = %static_obj.exit, %entry
  %3 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28, !srcloc !1503
  %call51 = tail call fastcc i32 @graph_lock()
  %tobool52.not = icmp eq i32 %call51, 0
  br i1 %tobool52.not, label %do.body152, label %if.end54

if.end54:                                         ; preds = %do.body46
  %4 = load i32, ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 1), align 4
  %add.ptr.i200 = getelementptr %struct.pending_free, ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3), i32 %4
  %call57 = tail call i32 @rcu_read_lock_any_held() #28
  %tobool58.not = icmp eq i32 %call57, 0
  br i1 %tobool58.not, label %land.lhs.true, label %for.cond.preheader

land.lhs.true:                                    ; preds = %if.end54
  %call59 = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %for.cond.preheader, label %land.lhs.true61

land.lhs.true61:                                  ; preds = %land.lhs.true
  %.b193196 = load i1, ptr @lockdep_unregister_key.__warned, align 1
  br i1 %.b193196, label %for.cond.preheader, label %if.then63

if.then63:                                        ; preds = %land.lhs.true61
  store i1 true, ptr @lockdep_unregister_key.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 6312, ptr noundef nonnull @.str.1)
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then63, %land.lhs.true61, %land.lhs.true, %if.end54
  br label %for.cond

for.cond:                                         ; preds = %for.body, %for.cond.preheader
  %k.0.in = phi ptr [ %k.0, %for.body ], [ %add.ptr.i, %for.cond.preheader ]
  %5 = ptrtoint ptr %k.0.in to i32
  call void @__asan_load4_noabort(i32 %5)
  %k.0 = load volatile ptr, ptr %k.0.in, align 4
  %tobool75.not = icmp eq ptr %k.0, null
  br i1 %tobool75.not, label %land.rhs106.critedge, label %for.body

for.body:                                         ; preds = %for.cond
  %cmp76 = icmp eq ptr %k.0, %key
  br i1 %cmp76, label %if.then78, label %for.cond

if.then78:                                        ; preds = %for.body
  %6 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %key, align 4
  %pprev2.i.i = getelementptr inbounds %struct.hlist_node, ptr %key, i32 0, i32 1
  %8 = ptrtoint ptr %pprev2.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pprev2.i.i, align 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %7, ptr %9, align 4
  %tobool.not.i.i = icmp eq ptr %7, null
  br i1 %tobool.not.i.i, label %hlist_del_rcu.exit, label %do.body13.i.i

do.body13.i.i:                                    ; preds = %if.then78
  %pprev14.i.i = getelementptr inbounds %struct.hlist_node, ptr %7, i32 0, i32 1
  %11 = ptrtoint ptr %pprev14.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %9, ptr %pprev14.i.i, align 4
  br label %hlist_del_rcu.exit

hlist_del_rcu.exit:                               ; preds = %do.body13.i.i, %if.then78
  %12 = ptrtoint ptr %pprev2.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i, align 4
  br label %if.end144

land.rhs106.critedge:                             ; preds = %for.cond
  %.b194195 = load i1, ptr @lockdep_unregister_key.__already_done.50, align 1
  br i1 %.b194195, label %if.end144, label %if.then117, !prof !1500

if.then117:                                       ; preds = %land.rhs106.critedge
  store i1 true, ptr @lockdep_unregister_key.__already_done.50, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6319, i32 noundef 9, ptr noundef null) #28
  br label %if.end144

if.end144:                                        ; preds = %if.then117, %land.rhs106.critedge, %hlist_del_rcu.exit
  tail call fastcc void @__lockdep_free_key_range(ptr noundef %add.ptr.i200, ptr noundef %key, i32 noundef 1)
  tail call fastcc void @call_rcu_zapped(ptr noundef %add.ptr.i200)
  tail call fastcc void @lockdep_unlock() #28
  br label %do.body152

do.body152:                                       ; preds = %if.end144, %do.body46
  %13 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i = and i32 %13, 128
  %tobool160.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool160.not, label %if.then169, label %do.end172, !prof !1501

if.then169:                                       ; preds = %do.body152
  tail call void @warn_bogus_irq_restore() #28
  br label %do.end172

do.end172:                                        ; preds = %if.then169, %do.body152
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %3) #28, !srcloc !1506
  tail call void @synchronize_rcu() #28
  br label %cleanup

cleanup:                                          ; preds = %do.end172, %if.then, %land.rhs
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__lockdep_free_key_range(ptr noundef %pf, ptr noundef readnone %start, i32 noundef %size) unnamed_addr #0 align 64 {
entry:
  %add.ptr.i = getelementptr i8, ptr %start, i32 %size
  br label %for.body

for.body:                                         ; preds = %for.inc38, %entry
  %i.060 = phi i32 [ 0, %entry ], [ %inc, %for.inc38 ]
  %add.ptr = getelementptr %struct.hlist_head, ptr @classhash_table, i32 %i.060
  %call = tail call i32 @rcu_read_lock_any_held() #28
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %for.body
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %do.end, label %land.lhs.true3

land.lhs.true3:                                   ; preds = %land.lhs.true
  %.b51 = load i1, ptr @__lockdep_free_key_range.__warned, align 1
  br i1 %.b51, label %do.end, label %if.then

if.then:                                          ; preds = %land.lhs.true3
  store i1 true, ptr @__lockdep_free_key_range.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 6126, ptr noundef nonnull @.str.1)
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true3, %land.lhs.true, %for.body
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %class.057 = load volatile ptr, ptr %add.ptr, align 4
  %tobool14.not58 = icmp eq ptr %class.057, null
  br i1 %tobool14.not58, label %for.inc38, label %for.body15

for.body15:                                       ; preds = %for.inc, %do.end
  %class.059 = phi ptr [ %class.0, %for.inc ], [ %class.057, %do.end ]
  %key = getelementptr inbounds %struct.lock_class, ptr %class.059, i32 0, i32 4
  %1 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %key, align 4
  %cmp.not.i = icmp ult ptr %2, %start
  %cmp1.i = icmp ule ptr %add.ptr.i, %2
  %tobool17.not = or i1 %cmp.not.i, %cmp1.i
  br i1 %tobool17.not, label %land.lhs.true18, label %if.end22

land.lhs.true18:                                  ; preds = %for.body15
  %name = getelementptr inbounds %struct.lock_class, ptr %class.059, i32 0, i32 10
  %3 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %name, align 4
  %cmp.not.i53 = icmp ult ptr %4, %start
  %cmp1.i55 = icmp ule ptr %add.ptr.i, %4
  %tobool20.not = or i1 %cmp.not.i53, %cmp1.i55
  br i1 %tobool20.not, label %for.inc, label %if.end22

if.end22:                                         ; preds = %land.lhs.true18, %for.body15
  tail call fastcc void @zap_class(ptr noundef %pf, ptr noundef nonnull %class.059)
  br label %for.inc

for.inc:                                          ; preds = %if.end22, %land.lhs.true18
  %5 = ptrtoint ptr %class.059 to i32
  call void @__asan_load4_noabort(i32 %5)
  %class.0 = load volatile ptr, ptr %class.059, align 4
  %tobool14.not = icmp eq ptr %class.0, null
  br i1 %tobool14.not, label %for.inc38, label %for.body15

for.inc38:                                        ; preds = %for.inc, %do.end
  %inc = add nuw nsw i32 %i.060, 1
  %exitcond.not = icmp eq i32 %inc, 4096
  br i1 %exitcond.not, label %for.end39, label %for.body

for.end39:                                        ; preds = %for.inc38
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @call_rcu_zapped(ptr noundef %pf) unnamed_addr #0 align 64 {
entry:
  %0 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %4 = load ptr, ptr @lockdep_selftest_task_struct, align 4
  %cmp.i = icmp eq ptr %3, %4
  br i1 %cmp.i, label %land.rhs, label %if.end27

land.rhs:                                         ; preds = %entry
  %.b102 = load i1, ptr @call_rcu_zapped.__already_done, align 1
  br i1 %.b102, label %if.end27, label %if.then, !prof !1500

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @call_rcu_zapped.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6050, i32 noundef 9, ptr noundef null) #28
  br label %if.end27

if.end27:                                         ; preds = %if.then, %land.rhs, %entry
  %5 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %pf, align 4
  %cmp.i103.not = icmp eq ptr %6, %pf
  br i1 %cmp.i103.not, label %return, label %if.end38

if.end38:                                         ; preds = %if.end27
  %7 = load i32, ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 2), align 4
  %tobool39.not = icmp eq i32 %7, 0
  br i1 %tobool39.not, label %if.end41, label %return

if.end41:                                         ; preds = %if.end38
  store i32 1, ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 2), align 4
  %8 = load i32, ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 1), align 4
  %add.ptr = getelementptr %struct.pending_free, ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3), i32 %8
  %cmp.not = icmp eq ptr %add.ptr, %pf
  br i1 %cmp.not, label %if.end87, label %land.rhs49

land.rhs49:                                       ; preds = %if.end41
  %.b100101 = load i1, ptr @call_rcu_zapped.__already_done.724, align 1
  br i1 %.b100101, label %if.end87, label %if.then60, !prof !1500

if.then60:                                        ; preds = %land.rhs49
  store i1 true, ptr @call_rcu_zapped.__already_done.724, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6060, i32 noundef 9, ptr noundef null) #28
  br label %if.end87

if.end87:                                         ; preds = %if.then60, %land.rhs49, %if.end41
  %9 = load i32, ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 1), align 4
  %xor = xor i32 %9, 1
  store i32 %xor, ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 1), align 4
  tail call void @call_rcu(ptr noundef nonnull @delayed_free, ptr noundef nonnull @free_zapped_rcu) #28
  br label %return

return:                                           ; preds = %if.end87, %if.end38, %if.end27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_rcu() local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @lockdep_init() local_unnamed_addr #17 section ".init.text" align 64 {
entry:
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.51) #32
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.54, i32 noundef 8) #32
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.57, i32 noundef 48) #32
  %call12 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.60, i32 noundef 8192) #32
  %call16 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.63, i32 noundef 4096) #32
  %call20 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.66, i32 noundef 32768) #32
  %call24 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.69, i32 noundef 65536) #32
  %call28 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.72, i32 noundef 32768) #32
  %call32 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75, i32 noundef 4317) #32
  %call36 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.78, i32 noundef 2112) #32
  %call40 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.81, i32 noundef 2304) #32
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @debug_check_no_locks_freed(ptr noundef %mem_from, i32 noundef %mem_len) #0 align 64 {
entry:
  %0 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %4 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %cleanup, label %do.body, !prof !1501

do.body:                                          ; preds = %entry
  %5 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28, !srcloc !1503
  %lockdep_depth = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 142
  %6 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %lockdep_depth, align 8
  %cmp548 = icmp sgt i32 %7, 0
  br i1 %cmp548, label %for.body.lr.ph, label %do.body12

for.body.lr.ph:                                   ; preds = %do.body
  %held_locks = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 144
  %add.ptr1.i = getelementptr i8, ptr %mem_from, i32 %mem_len
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %i.049 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %instance = getelementptr %struct.held_lock, ptr %held_locks, i32 %i.049, i32 2
  %8 = ptrtoint ptr %instance to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %instance, align 4
  %add.ptr.i = getelementptr i8, ptr %9, i32 28
  %cmp.not.i = icmp ugt ptr %add.ptr.i, %mem_from
  %cmp2.i = icmp ugt ptr %add.ptr1.i, %9
  %tobool8.not = and i1 %cmp2.i, %cmp.not.i
  br i1 %tobool8.not, label %if.end10, label %for.inc

if.end10:                                         ; preds = %for.body
  %add.ptr = getelementptr %struct.held_lock, ptr %held_locks, i32 %i.049
  %call.i = tail call i32 @debug_locks_off() #28
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %do.body12, label %if.end.i

if.end.i:                                         ; preds = %if.end10
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %10 = load i32, ptr @debug_locks_silent, align 4
  %tobool1.not.i = icmp eq i32 %10, 0
  br i1 %tobool1.not.i, label %do.end.i, label %do.body12

do.end.i:                                         ; preds = %if.end.i
  %call4.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.89) #32
  %call8.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.727) #32
  %call12.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.730) #32
  %call3.i.i = tail call i32 @strcspn(ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef nonnull @.str.766) #28
  %call7.i.i = tail call ptr @print_tainted() #28
  %call8.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.764, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 2), i32 noundef %call3.i.i, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef %call7.i.i) #32
  %call16.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.733) #32
  %comm.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 101
  %pid.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 68
  %11 = ptrtoint ptr %pid.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %pid.i.i, align 8
  %add.ptr.i46 = getelementptr i8, ptr %add.ptr1.i, i32 -1
  %call21.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.736, ptr noundef %comm.i, i32 noundef %12, ptr noundef %mem_from, ptr noundef %add.ptr.i46) #32
  tail call fastcc void @print_lock(ptr noundef %add.ptr) #28
  tail call fastcc void @lockdep_print_held_locks(ptr noundef %3) #28
  %call25.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134) #32
  tail call void @dump_stack() #32
  br label %do.body12

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %i.049, 1
  %exitcond.not = icmp eq i32 %inc, %7
  br i1 %exitcond.not, label %do.body12, label %for.body

do.body12:                                        ; preds = %for.inc, %do.end.i, %if.end.i, %if.end10, %do.body
  %13 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i = and i32 %13, 128
  %tobool20.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool20.not, label %if.then29, label %do.end32, !prof !1501

if.then29:                                        ; preds = %do.body12
  tail call void @warn_bogus_irq_restore() #28
  br label %do.end32

do.end32:                                         ; preds = %if.then29, %do.body12
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %5) #28, !srcloc !1506
  br label %cleanup

cleanup:                                          ; preds = %do.end32, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @debug_check_no_locks_held() #0 align 64 {
entry:
  %0 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %lockdep_depth = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 142
  %4 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %lockdep_depth, align 8
  %cmp = icmp sgt i32 %5, 0
  br i1 %cmp, label %if.then, label %if.end, !prof !1501

if.then:                                          ; preds = %entry
  tail call fastcc void @print_held_locks_bug()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_held_locks_bug() unnamed_addr #0 align 64 {
entry:
  %call = tail call i32 @debug_locks_off() #28
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %0 = load i32, ptr @debug_locks_silent, align 4
  %tobool1.not = icmp eq i32 %0, 0
  br i1 %tobool1.not, label %do.end, label %return

do.end:                                           ; preds = %if.end
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.89) #32
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.742) #32
  %1 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 101
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 68
  %5 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %pid.i, align 8
  %call16 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.745, ptr noundef %comm, i32 noundef %6) #32
  %call3.i = tail call i32 @strcspn(ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef nonnull @.str.766) #28
  %call7.i = tail call ptr @print_tainted() #28
  %call8.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.764, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 2), i32 noundef %call3.i, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef %call7.i) #32
  %call20 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.748) #32
  %7 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task, align 8
  tail call fastcc void @lockdep_print_held_locks(ptr noundef %8)
  %call26 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134) #32
  tail call void @dump_stack() #32
  br label %return

return:                                           ; preds = %do.end, %if.end, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @debug_show_all_locks() #0 align 64 {
entry:
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %cleanup, label %do.end6, !prof !1501

do.end6:                                          ; preds = %entry
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.86) #32
  %1 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %4, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1532
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #28
  %call.i = tail call zeroext i1 @rcu_is_watching() #28
  br i1 %call.i, label %rcu_read_lock.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.end6
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %rcu_read_lock.exit, label %land.lhs.true2.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %rcu_read_lock.exit, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true2.i
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.752, i32 noundef 696, ptr noundef nonnull @.str.753) #28
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i, %land.lhs.true.i, %do.end6
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.task_struct, ptr @init_task, i32 0, i32 50) to i32))
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.task_struct, ptr @init_task, i32 0, i32 50), align 16
  %add.ptr83 = getelementptr i8, ptr %5, i32 -1136
  %cmp.not84 = icmp eq ptr %add.ptr83, @init_task
  br i1 %cmp.not84, label %for.end50, label %do.body14

for.cond.loopexit:                                ; preds = %for.inc, %do.end24
  %6 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %8, align 16
  %add.ptr = getelementptr i8, ptr %7, i32 -1136
  %cmp.not = icmp eq ptr %add.ptr, @init_task
  br i1 %cmp.not, label %for.end50, label %do.body14

do.body14:                                        ; preds = %for.cond.loopexit, %rcu_read_lock.exit
  %8 = phi ptr [ %7, %for.cond.loopexit ], [ %5, %rcu_read_lock.exit ]
  %call15 = tail call i32 @rcu_read_lock_any_held() #28
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %land.lhs.true, label %do.end24

land.lhs.true:                                    ; preds = %do.body14
  %call17 = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %do.end24, label %land.lhs.true19

land.lhs.true19:                                  ; preds = %land.lhs.true
  %.b67 = load i1, ptr @debug_show_all_locks.__warned, align 1
  br i1 %.b67, label %do.end24, label %if.then21

if.then21:                                        ; preds = %land.lhs.true19
  store i1 true, ptr @debug_show_all_locks.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 6467, ptr noundef nonnull @.str.1)
  br label %do.end24

do.end24:                                         ; preds = %if.then21, %land.lhs.true19, %land.lhs.true, %do.body14
  %signal = getelementptr i8, ptr %8, i32 544
  %9 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %signal, align 16
  %thread_head = getelementptr inbounds %struct.signal_struct, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %thread_head to i32
  call void @__asan_load4_noabort(i32 %11)
  %.pn77 = load volatile ptr, ptr %thread_head, align 4
  %cmp36.not80 = icmp eq ptr %.pn77, %thread_head
  br i1 %cmp36.not80, label %for.cond.loopexit, label %for.body37

for.body37:                                       ; preds = %for.inc, %do.end24
  %.pn81 = phi ptr [ %.pn, %for.inc ], [ %.pn77, %do.end24 ]
  %lockdep_depth = getelementptr i8, ptr %.pn81, i32 572
  %12 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %lockdep_depth, align 8
  %tobool38.not = icmp eq i32 %13, 0
  br i1 %tobool38.not, label %for.inc, label %if.end40

if.end40:                                         ; preds = %for.body37
  %p.082 = getelementptr i8, ptr %.pn81, i32 -1404
  tail call fastcc void @lockdep_print_held_locks(ptr noundef %p.082)
  tail call void @touch_softlockup_watchdog() #28
  tail call void @touch_all_softlockup_watchdogs() #28
  br label %for.inc

for.inc:                                          ; preds = %if.end40, %for.body37
  %14 = ptrtoint ptr %.pn81 to i32
  call void @__asan_load4_noabort(i32 %14)
  %.pn = load volatile ptr, ptr %.pn81, align 4
  %15 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %signal, align 16
  %thread_head35 = getelementptr inbounds %struct.signal_struct, ptr %16, i32 0, i32 3
  %cmp36.not = icmp eq ptr %.pn, %thread_head35
  br i1 %cmp36.not, label %for.cond.loopexit, label %for.body37

for.end50:                                        ; preds = %for.cond.loopexit, %rcu_read_lock.exit
  %call.i68 = tail call zeroext i1 @rcu_is_watching() #28
  br i1 %call.i68, label %rcu_read_unlock.exit, label %land.lhs.true.i71

land.lhs.true.i71:                                ; preds = %for.end50
  %call1.i69 = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool.not.i70 = icmp eq i32 %call1.i69, 0
  br i1 %tobool.not.i70, label %rcu_read_unlock.exit, label %land.lhs.true2.i73

land.lhs.true2.i73:                               ; preds = %land.lhs.true.i71
  %.b4.i72 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i72, label %rcu_read_unlock.exit, label %if.then.i74

if.then.i74:                                      ; preds = %land.lhs.true2.i73
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.752, i32 noundef 724, ptr noundef nonnull @.str.763) #28
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i74, %land.lhs.true2.i73, %land.lhs.true.i71, %for.end50
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1533
  %17 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i.i75 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i.i.i75 to ptr
  %preempt_count.i.i.i76 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %preempt_count.i.i.i76 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %preempt_count.i.i.i76, align 4
  %sub.i.i = add i32 %20, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i76, align 4
  tail call void @rcu_read_unlock_strict() #28
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #28
  %call55 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.89) #32
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit, %entry
  %.str.92.sink = phi ptr [ @.str.92, %rcu_read_unlock.exit ], [ @.str.83, %entry ]
  %call60 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull %.str.92.sink) #32
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @lockdep_print_held_locks(ptr noundef %p) unnamed_addr #0 align 64 {
entry:
  %lockdep_depth = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 142
  %0 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %lockdep_depth, align 8
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.end.thread, label %if.end

if.end:                                           ; preds = %entry
  %cmp = icmp sgt i32 %1, 1
  %cond = select i1 %cmp, ptr @.str.759, ptr @.str.5
  %comm10 = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 101
  %pid.i44 = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 68
  %2 = ptrtoint ptr %pid.i44 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %pid.i44, align 8
  %call13 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.757, i32 noundef %1, ptr noundef nonnull %cond, ptr noundef %comm10, i32 noundef %3) #32
  %4 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task, align 8
  %cmp15.not = icmp eq ptr %7, %p
  br i1 %cmp15.not, label %if.end22, label %do.end18

if.end.thread:                                    ; preds = %entry
  %comm = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 101
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 68
  %8 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %pid.i, align 8
  %call5 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.754, ptr noundef %comm, i32 noundef %9) #32
  %10 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i47 = and i32 %10, -16384
  %11 = inttoptr i32 %and.i47 to ptr
  %task48 = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %task48 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task48, align 8
  %cmp15.not49 = icmp eq ptr %13, %p
  br i1 %cmp15.not49, label %cleanup, label %do.end18.thread

do.end18.thread:                                  ; preds = %if.end.thread
  %14 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %p, align 128
  br label %cleanup

do.end18:                                         ; preds = %if.end
  %16 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %p, align 128
  %cmp20 = icmp ne i32 %17, 0
  %cmp2345 = icmp sgt i32 %1, 0
  %or.cond = select i1 %cmp20, i1 %cmp2345, i1 false
  br i1 %or.cond, label %do.end26.lr.ph, label %cleanup

if.end22:                                         ; preds = %if.end
  %cmp2345.old = icmp sgt i32 %1, 0
  br i1 %cmp2345.old, label %do.end26.lr.ph, label %cleanup

do.end26.lr.ph:                                   ; preds = %if.end22, %do.end18
  %held_locks = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 144
  br label %do.end26

do.end26:                                         ; preds = %do.end26, %do.end26.lr.ph
  %i.046 = phi i32 [ 0, %do.end26.lr.ph ], [ %inc, %do.end26 ]
  %call28 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.761, i32 noundef %i.046) #32
  %add.ptr = getelementptr %struct.held_lock, ptr %held_locks, i32 %i.046
  tail call fastcc void @print_lock(ptr noundef %add.ptr)
  %inc = add nuw nsw i32 %i.046, 1
  %exitcond.not = icmp eq i32 %inc, %1
  br i1 %exitcond.not, label %cleanup, label %do.end26

cleanup:                                          ; preds = %do.end26, %if.end22, %do.end18, %do.end18.thread, %if.end.thread
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @touch_all_softlockup_watchdogs() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @debug_show_held_locks(ptr noundef %task) #0 align 64 {
entry:
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %do.end, label %if.end, !prof !1501

do.end:                                           ; preds = %entry
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.94) #32
  br label %return

if.end:                                           ; preds = %entry
  tail call fastcc void @lockdep_print_held_locks(ptr noundef %task)
  br label %return

return:                                           ; preds = %if.end, %do.end
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lockdep_sys_exit() local_unnamed_addr #0 align 64 {
entry:
  %0 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %lockdep_depth = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 142
  %4 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %lockdep_depth, align 8
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %cleanup, label %if.then, !prof !1500

if.then:                                          ; preds = %entry
  %call3 = tail call i32 @debug_locks_off() #28
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %cleanup, label %do.end

do.end:                                           ; preds = %if.then
  %call6 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.89) #32
  %call11 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.98) #32
  %call16 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.101) #32
  tail call fastcc void @print_kernel_ident()
  %call21 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.104) #32
  %comm = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 101
  %pid = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 68
  %6 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pid, align 8
  %call26 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.107, ptr noundef %comm, i32 noundef %7) #32
  tail call fastcc void @lockdep_print_held_locks(ptr noundef %3)
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.then, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_kernel_ident() unnamed_addr #0 align 64 {
entry:
  %call3 = tail call i32 @strcspn(ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef nonnull @.str.766)
  %call7 = tail call ptr @print_tainted() #28
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.764, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 2), i32 noundef %call3, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef %call7) #32
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_lockdep_current_cpu_online() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @dump_stack() local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #18

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #19

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_lock_acquire(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #28
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %lockdep_addr = getelementptr inbounds %struct.trace_event_raw_lock_acquire, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %lockdep_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %lockdep_addr, align 4
  %flags1 = getelementptr inbounds %struct.trace_event_raw_lock_acquire, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags1, align 4
  %and = and i32 %5, 1
  %tobool.not = icmp eq i32 %and, 0
  %cond = select i1 %tobool.not, ptr @.str.5, ptr @.str.144
  %and3 = and i32 %5, 2
  %tobool4.not = icmp eq i32 %and3, 0
  %cond5 = select i1 %tobool4.not, ptr @.str.5, ptr @.str.145
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_lock_acquire, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %__data_loc_name, align 4
  %and6 = and i32 %7, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and6
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.143, ptr noundef %3, ptr noundef nonnull %cond, ptr noundef nonnull %cond5, ptr noundef %add.ptr) #28
  %call7 = tail call i32 @trace_handle_return(ptr noundef %seq) #28
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call7, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_lock(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #28
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %lockdep_addr = getelementptr inbounds %struct.trace_event_raw_lock, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %lockdep_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %lockdep_addr, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_lock, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %5, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.146, ptr noundef %3, ptr noundef %add.ptr) #28
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #28
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #20

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #20

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #21

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run7(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run2(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @is_kernel_percpu_address(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @is_module_address(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @is_module_percpu_address(i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @hash_32(i32 noundef %val, i32 noundef %bits) unnamed_addr #14 align 64 {
entry:
  %mul.i = mul i32 %val, 1640531527
  %sub = sub i32 32, %bits
  %shr = lshr i32 %mul.i, %sub
  ret i32 %shr
}

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #22

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal zeroext i1 @noop_count(ptr nocapture noundef readnone %entry1, ptr nocapture noundef %data) #9 align 64 {
entry:
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %data, align 4
  %inc = add i32 %1, 1
  store i32 %inc, ptr %data, align 4
  ret i1 false
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__bfs(ptr noundef %source_entry, ptr noundef %data, ptr nocapture noundef readonly %match, ptr noundef readonly %skip, ptr nocapture noundef writeonly %target_entry, i32 noundef %offset) unnamed_addr #0 align 64 {
entry:
  %__next.i = alloca ptr, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %0 = load i32, ptr @oops_in_progress, align 4
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %__cq_enqueue.exit

land.lhs.true.i:                                  ; preds = %entry
  %1 = load ptr, ptr @__owner, align 4
  %2 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task.i, align 8
  %cmp.not.i = icmp eq ptr %1, %5
  br i1 %cmp.not.i, label %__cq_enqueue.exit, label %do.end.i, !prof !1500

do.end.i:                                         ; preds = %land.lhs.true.i
  %call3.i = tail call i32 @debug_locks_off() #28
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %__cq_enqueue.exit, label %land.lhs.true5.i

land.lhs.true5.i:                                 ; preds = %do.end.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %6 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i = icmp eq i32 %6, 0
  br i1 %tobool6.not.i, label %do.end19.i, label %__cq_enqueue.exit

do.end19.i:                                       ; preds = %land.lhs.true5.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 131, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.147) #28
  br label %__cq_enqueue.exit

__cq_enqueue.exit:                                ; preds = %do.end19.i, %land.lhs.true5.i, %do.end.i, %land.lhs.true.i, %entry
  store i32 0, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 1), align 4
  %7 = load i32, ptr @lockdep_dependency_gen_id, align 4
  %inc.i = add i32 %7, 1
  store i32 %inc.i, ptr @lockdep_dependency_gen_id, align 4
  store ptr %source_entry, ptr @lock_cq, align 4
  store i32 1, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 2), align 4
  %tobool30.not = icmp eq ptr %skip, null
  br label %while.cond

while.cond:                                       ; preds = %while.cond.backedge, %__cq_enqueue.exit
  %lock.0 = phi ptr [ null, %__cq_enqueue.exit ], [ %lock.1, %while.cond.backedge ]
  %tobool.not.i110 = icmp eq ptr %lock.0, null
  br i1 %tobool.not.i110, label %lor.rhs, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %while.cond
  %parent.i = getelementptr inbounds %struct.lock_list, ptr %lock.0, i32 0, i32 7
  %8 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %parent.i, align 4
  %tobool1.not.i = icmp eq ptr %9, null
  br i1 %tobool1.not.i, label %lor.rhs, label %if.end.i112

if.end.i112:                                      ; preds = %lor.lhs.false.i
  %class.i.i = getelementptr inbounds %struct.lock_list, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %class.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %class.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %11, i32 %offset
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__next.i)
  %12 = ptrtoint ptr %lock.0 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %lock.0, align 4
  %14 = ptrtoint ptr %__next.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %13, ptr %__next.i, align 4
  %cmp.not.i111 = icmp eq ptr %13, %add.ptr.i.i
  br i1 %cmp.not.i111, label %__bfs_next.exit.thread135, label %__bfs_next.exit, !prof !1501

__bfs_next.exit.thread135:                        ; preds = %if.end.i112
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__next.i)
  br label %lor.rhs

__bfs_next.exit:                                  ; preds = %if.end.i112
  %15 = ptrtoint ptr %__next.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %__next.i.0.__next.i.0.__next.0.__next.0.__next.0.12.i = load volatile ptr, ptr %__next.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__next.i)
  %tobool.not = icmp eq ptr %__next.i.0.__next.i.0.__next.0.__next.0.__next.0.12.i, null
  br i1 %tobool.not, label %lor.rhs, label %while.body

lor.rhs:                                          ; preds = %__bfs_next.exit, %__bfs_next.exit.thread135, %lor.lhs.false.i, %while.cond
  %16 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 1), align 4
  %17 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 2), align 4
  %cmp.i.not.i114 = icmp eq i32 %16, %17
  br i1 %cmp.i.not.i114, label %cleanup75, label %__cq_dequeue.exit

__cq_dequeue.exit:                                ; preds = %lor.rhs
  %arrayidx.i115 = getelementptr [4096 x ptr], ptr @lock_cq, i32 0, i32 %16
  %18 = ptrtoint ptr %arrayidx.i115 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx.i115, align 4
  %add.i116 = add i32 %16, 1
  %and.i117 = and i32 %add.i116, 4095
  store i32 %and.i117, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 1), align 4
  %tobool5.not = icmp eq ptr %19, null
  br i1 %tobool5.not, label %cleanup75, label %while.body

while.body:                                       ; preds = %__cq_dequeue.exit, %__bfs_next.exit
  %lock.1 = phi ptr [ %__next.i.0.__next.i.0.__next.0.__next.0.__next.0.12.i, %__bfs_next.exit ], [ %19, %__cq_dequeue.exit ]
  %class = getelementptr inbounds %struct.lock_list, ptr %lock.1, i32 0, i32 1
  %20 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %class, align 4
  %tobool6.not = icmp eq ptr %21, null
  br i1 %tobool6.not, label %cleanup75, label %if.end

if.end:                                           ; preds = %while.body
  %dep_gen_id.i = getelementptr inbounds %struct.lock_class, ptr %21, i32 0, i32 6
  %22 = ptrtoint ptr %dep_gen_id.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %dep_gen_id.i, align 4
  %24 = load i32, ptr @lockdep_dependency_gen_id, align 4
  %cmp.i.not = icmp eq i32 %23, %24
  br i1 %cmp.i.not, label %while.cond.backedge, label %if.else

if.else:                                          ; preds = %if.end
  %25 = ptrtoint ptr %dep_gen_id.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %dep_gen_id.i, align 4
  %parent = getelementptr inbounds %struct.lock_list, ptr %lock.1, i32 0, i32 7
  %26 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %parent, align 4
  %tobool11.not = icmp eq ptr %27, null
  br i1 %tobool11.not, label %if.end29, label %if.then12

if.then12:                                        ; preds = %if.else
  %dep13 = getelementptr inbounds %struct.lock_list, ptr %lock.1, i32 0, i32 5
  %28 = ptrtoint ptr %dep13 to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %dep13, align 2
  %only_xr = getelementptr inbounds %struct.lock_list, ptr %27, i32 0, i32 6
  %30 = ptrtoint ptr %only_xr to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %only_xr, align 1
  %tobool15.not = icmp eq i8 %31, 0
  %32 = and i8 %29, -6
  %spec.select = select i1 %tobool15.not, i8 %29, i8 %32
  %tobool20.not = icmp eq i8 %spec.select, 0
  br i1 %tobool20.not, label %while.cond.backedge, label %cleanup.thread

cleanup.thread:                                   ; preds = %if.then12
  %33 = and i8 %spec.select, 12
  %tobool25.not = icmp eq i8 %33, 0
  %conv26 = zext i1 %tobool25.not to i8
  %only_xr27 = getelementptr inbounds %struct.lock_list, ptr %lock.1, i32 0, i32 6
  %34 = ptrtoint ptr %only_xr27 to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 %conv26, ptr %only_xr27, align 1
  br label %if.end29

if.end29:                                         ; preds = %cleanup.thread, %if.else
  br i1 %tobool30.not, label %if.end34, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end29
  %call31 = tail call zeroext i1 %skip(ptr noundef nonnull %lock.1, ptr noundef %data) #28, !callees !1554
  br i1 %call31, label %while.cond.backedge, label %if.end34

if.end34:                                         ; preds = %land.lhs.true, %if.end29
  %call35 = tail call zeroext i1 %match(ptr noundef nonnull %lock.1, ptr noundef %data) #28, !callees !1555
  br i1 %call35, label %if.then36, label %if.end37

if.then36:                                        ; preds = %if.end34
  %35 = ptrtoint ptr %target_entry to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %lock.1, ptr %target_entry, align 4
  br label %cleanup75

if.end37:                                         ; preds = %if.end34
  %36 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %class, align 4
  %add.ptr.i = getelementptr i8, ptr %37, i32 %offset
  %call39 = tail call i32 @rcu_read_lock_any_held() #28
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %land.lhs.true41, label %do.end

land.lhs.true41:                                  ; preds = %if.end37
  %call42 = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %do.end, label %land.lhs.true44

land.lhs.true44:                                  ; preds = %land.lhs.true41
  %.b108 = load i1, ptr @__bfs.__warned, align 1
  br i1 %.b108, label %do.end, label %if.then46

if.then46:                                        ; preds = %land.lhs.true44
  store i1 true, ptr @__bfs.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1770, ptr noundef nonnull @.str.1)
  br label %do.end

do.end:                                           ; preds = %if.then46, %land.lhs.true44, %land.lhs.true41, %if.end37
  %38 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %entry1.0146 = load volatile ptr, ptr %add.ptr.i, align 4
  %cmp.not147 = icmp eq ptr %entry1.0146, %add.ptr.i
  br i1 %cmp.not147, label %while.cond.backedge, label %for.body

while.cond.backedge:                              ; preds = %for.inc, %do.end, %land.lhs.true, %if.then12, %if.end
  br label %while.cond

for.body:                                         ; preds = %for.inc, %do.end
  %entry1.0149 = phi ptr [ %entry1.0, %for.inc ], [ %entry1.0146, %do.end ]
  %first.0.off0148 = phi i1 [ false, %for.inc ], [ true, %do.end ]
  %parent1.i = getelementptr inbounds %struct.lock_list, ptr %entry1.0149, i32 0, i32 7
  %39 = ptrtoint ptr %parent1.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %lock.1, ptr %parent1.i, align 4
  br i1 %first.0.off0148, label %if.end56, label %for.inc

if.end56:                                         ; preds = %for.body
  %40 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 2), align 4
  %add.i.i123 = add i32 %40, 1
  %and.i.i124 = and i32 %add.i.i123, 4095
  %41 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 1), align 4
  %cmp.i.not.i125 = icmp eq i32 %and.i.i124, %41
  br i1 %cmp.i.not.i125, label %cleanup75, label %if.end60

if.end60:                                         ; preds = %if.end56
  %arrayidx.i126 = getelementptr [4096 x ptr], ptr @lock_cq, i32 0, i32 %40
  %42 = ptrtoint ptr %arrayidx.i126 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %entry1.0149, ptr %arrayidx.i126, align 4
  %43 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 2), align 4
  %add.i127 = add i32 %43, 1
  %and.i128 = and i32 %add.i127, 4095
  store i32 %and.i128, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 2), align 4
  %44 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 1), align 4
  %sub.i = sub i32 %add.i127, %44
  %and.i132 = and i32 %sub.i, 4095
  %45 = load i32, ptr @max_bfs_queue_depth, align 4
  %cmp62 = icmp ult i32 %45, %and.i132
  br i1 %cmp62, label %if.then64, label %for.inc

if.then64:                                        ; preds = %if.end60
  store i32 %and.i132, ptr @max_bfs_queue_depth, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.then64, %if.end60, %for.body
  %46 = ptrtoint ptr %entry1.0149 to i32
  call void @__asan_load4_noabort(i32 %46)
  %entry1.0 = load volatile ptr, ptr %entry1.0149, align 4
  %cmp.not = icmp eq ptr %entry1.0, %add.ptr.i
  br i1 %cmp.not, label %while.cond.backedge, label %for.body

cleanup75:                                        ; preds = %if.end56, %if.then36, %while.body, %__cq_dequeue.exit, %lor.rhs
  %retval.0 = phi i32 [ 0, %if.then36 ], [ -1, %if.end56 ], [ 1, %lor.rhs ], [ 1, %__cq_dequeue.exit ], [ -2, %while.body ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_lock_name(ptr nocapture noundef readonly %class) unnamed_addr #0 align 64 {
entry:
  %usage = alloca [5 x i8], align 1
  call void @llvm.lifetime.start.p0(i64 5, ptr nonnull %usage) #28
  %0 = getelementptr inbounds [5 x i8], ptr %usage, i32 0, i32 1
  %1 = getelementptr inbounds [5 x i8], ptr %usage, i32 0, i32 2
  %2 = getelementptr inbounds [5 x i8], ptr %usage, i32 0, i32 3
  %3 = getelementptr inbounds [5 x i8], ptr %usage, i32 0, i32 4
  %usage_mask.i.i = getelementptr inbounds %struct.lock_class, ptr %class, i32 0, i32 7
  %4 = ptrtoint ptr %usage_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %usage_mask.i.i, align 4
  %and.i.i = and i32 %5, 4
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  %and8.i.i = and i32 %5, 1
  %tobool9.not.i.i = icmp eq i32 %and8.i.i, 0
  %spec.select.i.i = select i1 %tobool9.not.i.i, i8 43, i8 63
  %spec.select17.i.i = select i1 %tobool9.not.i.i, i8 46, i8 45
  %c.0.i.i = select i1 %tobool.not.i.i, i8 %spec.select17.i.i, i8 %spec.select.i.i
  %6 = ptrtoint ptr %usage to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %c.0.i.i, ptr %usage, align 1
  %and.i23.i = and i32 %5, 8
  %tobool.not.i24.i = icmp eq i32 %and.i23.i, 0
  %and8.i25.i = and i32 %5, 2
  %tobool9.not.i26.i = icmp eq i32 %and8.i25.i, 0
  %spec.select.i27.i = select i1 %tobool9.not.i26.i, i8 43, i8 63
  %spec.select17.i28.i = select i1 %tobool9.not.i26.i, i8 46, i8 45
  %c.0.i29.i = select i1 %tobool.not.i24.i, i8 %spec.select17.i28.i, i8 %spec.select.i27.i
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %c.0.i29.i, ptr %0, align 1
  %and.i31.i = and i32 %5, 64
  %tobool.not.i32.i = icmp eq i32 %and.i31.i, 0
  %and8.i33.i = and i32 %5, 16
  %tobool9.not.i34.i = icmp eq i32 %and8.i33.i, 0
  %spec.select.i35.i = select i1 %tobool9.not.i34.i, i8 43, i8 63
  %spec.select17.i36.i = select i1 %tobool9.not.i34.i, i8 46, i8 45
  %c.0.i37.i = select i1 %tobool.not.i32.i, i8 %spec.select17.i36.i, i8 %spec.select.i35.i
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %c.0.i37.i, ptr %1, align 1
  %and.i39.i = and i32 %5, 128
  %tobool.not.i40.i = icmp eq i32 %and.i39.i, 0
  %and8.i41.i = and i32 %5, 32
  %tobool9.not.i42.i = icmp eq i32 %and8.i41.i, 0
  %spec.select.i43.i = select i1 %tobool9.not.i42.i, i8 43, i8 63
  %spec.select17.i44.i = select i1 %tobool9.not.i42.i, i8 46, i8 45
  %c.0.i45.i = select i1 %tobool.not.i40.i, i8 %spec.select17.i44.i, i8 %spec.select.i43.i
  %9 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %c.0.i45.i, ptr %2, align 1
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 0, ptr %3, align 1
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.168) #32
  tail call fastcc void @__print_lock_name(ptr noundef %class)
  %wait_type_outer = getelementptr inbounds %struct.lock_class, ptr %class, i32 0, i32 12
  %11 = ptrtoint ptr %wait_type_outer to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %wait_type_outer, align 1
  %tobool.not = icmp eq i8 %12, 0
  br i1 %tobool.not, label %cond.false, label %cond.end

cond.false:                                       ; preds = %entry
  %wait_type_inner = getelementptr inbounds %struct.lock_class, ptr %class, i32 0, i32 11
  %13 = ptrtoint ptr %wait_type_inner to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %wait_type_inner, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry
  %cond.in = phi i8 [ %14, %cond.false ], [ %12, %entry ]
  %cond = zext i8 %cond.in to i32
  %wait_type_inner7 = getelementptr inbounds %struct.lock_class, ptr %class, i32 0, i32 11
  %15 = ptrtoint ptr %wait_type_inner7 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %wait_type_inner7, align 4
  %conv8 = zext i8 %16 to i32
  %call9 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.171, ptr noundef nonnull %usage, i32 noundef %cond, i32 noundef %conv8) #32
  call void @llvm.lifetime.end.p0(i64 5, ptr nonnull %usage) #28
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__print_lock_name(ptr nocapture noundef readonly %class) unnamed_addr #0 align 64 {
entry:
  %str = alloca [128 x i8], align 1
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %str) #28
  %0 = call ptr @memset(ptr %str, i32 255, i32 128)
  %name1 = getelementptr inbounds %struct.lock_class, ptr %class, i32 0, i32 10
  %1 = ptrtoint ptr %name1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %name1, align 4
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %if.then, label %do.end5

if.then:                                          ; preds = %entry
  %key = getelementptr inbounds %struct.lock_class, ptr %class, i32 0, i32 4
  %3 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %key, align 4
  %5 = ptrtoint ptr %4 to i32
  %call.i = call ptr @kallsyms_lookup(i32 noundef %5, ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef nonnull %str) #28
  %call2 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.173, ptr noundef %call.i) #32
  br label %if.end24

do.end5:                                          ; preds = %entry
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.173, ptr noundef nonnull %2) #32
  %name_version = getelementptr inbounds %struct.lock_class, ptr %class, i32 0, i32 9
  %6 = ptrtoint ptr %name_version to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %name_version, align 4
  %cmp = icmp sgt i32 %7, 1
  br i1 %cmp, label %do.end11, label %if.end

do.end11:                                         ; preds = %do.end5
  %call14 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.178, i32 noundef %7) #32
  br label %if.end

if.end:                                           ; preds = %do.end11, %do.end5
  %subclass = getelementptr inbounds %struct.lock_class, ptr %class, i32 0, i32 5
  %8 = ptrtoint ptr %subclass to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %subclass, align 4
  %tobool15.not = icmp eq i32 %9, 0
  br i1 %tobool15.not, label %if.end24, label %do.end19

do.end19:                                         ; preds = %if.end
  %call22 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.181, i32 noundef %9) #32
  br label %if.end24

if.end24:                                         ; preds = %do.end19, %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %str) #28
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @stack_trace_print(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__bitmap_weight(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mark_lock(ptr noundef %curr, ptr nocapture noundef readonly %this, i32 noundef %new_bit) unnamed_addr #0 align 64 {
entry:
  %cmp31 = icmp eq i32 %new_bit, 8
  br i1 %cmp31, label %land.lhs.true32, label %if.end35

land.lhs.true32:                                  ; preds = %entry
  %read = getelementptr inbounds %struct.held_lock, ptr %this, i32 0, i32 6
  %0 = ptrtoint ptr %read to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load = load i32, ptr %read, align 8
  %1 = and i32 %bf.load, 49152
  %tobool33.not = icmp eq i32 %1, 0
  %spec.select = select i1 %tobool33.not, i32 8, i32 9
  br label %if.end35

if.end35:                                         ; preds = %land.lhs.true32, %entry
  %new_bit.addr.0 = phi i32 [ %new_bit, %entry ], [ %spec.select, %land.lhs.true32 ]
  %shl = shl nuw i32 1, %new_bit.addr.0
  %class_idx1.i = getelementptr inbounds %struct.held_lock, ptr %this, i32 0, i32 6
  %2 = ptrtoint ptr %class_idx1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %bf.load.i = load i32, ptr %class_idx1.i, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i = lshr i32 %bf.load.i, 24
  %arrayidx.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i
  %3 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %bf.lshr.i, 31
  %5 = shl nuw i32 1, %and.i.i
  %6 = and i32 %5, %4
  %tobool.not.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end33.i

if.then.i:                                        ; preds = %if.end35
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %7 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i = icmp eq i32 %7, 0
  br i1 %tobool2.not.i, label %do.end.i, label %hlock_class.exit

do.end.i:                                         ; preds = %if.then.i
  %call4.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %hlock_class.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.end.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %8 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i = icmp eq i32 %8, 0
  br i1 %tobool6.not.i, label %do.end15.i, label %hlock_class.exit

do.end15.i:                                       ; preds = %land.lhs.true.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit

if.end33.i:                                       ; preds = %if.end35
  %add.ptr.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i
  br label %hlock_class.exit

hlock_class.exit:                                 ; preds = %if.end33.i, %do.end15.i, %land.lhs.true.i, %do.end.i, %if.then.i
  %retval.0.i = phi ptr [ %add.ptr.i, %if.end33.i ], [ null, %do.end15.i ], [ null, %land.lhs.true.i ], [ null, %do.end.i ], [ null, %if.then.i ]
  %usage_mask = getelementptr inbounds %struct.lock_class, ptr %retval.0.i, i32 0, i32 7
  %9 = ptrtoint ptr %usage_mask to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %usage_mask, align 4
  %and = and i32 %10, %shl
  %tobool37.not = icmp eq i32 %and, 0
  br i1 %tobool37.not, label %if.end45, label %cleanup, !prof !1501

if.end45:                                         ; preds = %hlock_class.exit
  %call46 = tail call fastcc i32 @graph_lock()
  %tobool47.not = icmp eq i32 %call46, 0
  br i1 %tobool47.not, label %cleanup, label %if.end49

if.end49:                                         ; preds = %if.end45
  %call50 = tail call fastcc ptr @hlock_class(ptr noundef %this)
  %usage_mask51 = getelementptr inbounds %struct.lock_class, ptr %call50, i32 0, i32 7
  %11 = ptrtoint ptr %usage_mask51 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %usage_mask51, align 4
  %and52 = and i32 %12, %shl
  %tobool53.not = icmp eq i32 %and52, 0
  br i1 %tobool53.not, label %if.end61, label %unlock.thread, !prof !1500

if.end61:                                         ; preds = %if.end49
  %call62 = tail call fastcc ptr @hlock_class(ptr noundef %this)
  %usage_mask63 = getelementptr inbounds %struct.lock_class, ptr %call62, i32 0, i32 7
  %13 = ptrtoint ptr %usage_mask63 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %usage_mask63, align 4
  %tobool64.not = icmp eq i32 %14, 0
  br i1 %tobool64.not, label %if.then65, label %if.end150

if.then65:                                        ; preds = %if.end61
  %15 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i = and i32 %15, 128
  %tobool80.not = icmp eq i32 %and.i, 0
  br i1 %tobool80.not, label %land.rhs, label %if.end125

land.rhs:                                         ; preds = %if.then65
  %.b204 = load i1, ptr @mark_lock.__already_done, align 1
  br i1 %.b204, label %if.end125, label %if.then98, !prof !1500

if.then98:                                        ; preds = %land.rhs
  store i1 true, ptr @mark_lock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4595, i32 noundef 9, ptr noundef null) #28
  br label %if.end125

if.end125:                                        ; preds = %if.then98, %land.rhs, %if.then65
  %16 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i205 = and i32 %16, -16384
  %17 = inttoptr i32 %and.i205 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 3
  %18 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %19
  %20 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %arrayidx, align 4
  %add = add i32 %21, ptrtoint (ptr getelementptr inbounds (%struct.lockdep_stats, ptr @lockdep_stats, i32 0, i32 10) to i32)
  %22 = inttoptr i32 %add to ptr
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %22, align 4
  %add145 = add i32 %24, -1
  store i32 %add145, ptr %22, align 4
  br label %if.end150

if.end150:                                        ; preds = %if.end125, %if.end61
  %call151 = tail call fastcc ptr @hlock_class(ptr noundef %this)
  %usage_mask152 = getelementptr inbounds %struct.lock_class, ptr %call151, i32 0, i32 7
  %25 = ptrtoint ptr %usage_mask152 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %usage_mask152, align 4
  %or = or i32 %26, %shl
  store i32 %or, ptr %usage_mask152, align 4
  %cmp153 = icmp ult i32 %new_bit.addr.0, 10
  br i1 %cmp153, label %if.then155, label %unlock.thread

if.then155:                                       ; preds = %if.end150
  %call156 = tail call fastcc ptr @save_trace()
  %call157 = tail call fastcc ptr @hlock_class(ptr noundef %this)
  %arrayidx158 = getelementptr %struct.lock_class, ptr %call157, i32 0, i32 8, i32 %new_bit.addr.0
  %27 = ptrtoint ptr %arrayidx158 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %call156, ptr %arrayidx158, align 4
  %tobool159.not = icmp eq ptr %call156, null
  br i1 %tobool159.not, label %cleanup, label %if.end162

if.end162:                                        ; preds = %if.then155
  %cmp163 = icmp ult i32 %new_bit.addr.0, 8
  br i1 %cmp163, label %if.then165, label %unlock.thread

if.then165:                                       ; preds = %if.end162
  %call166 = tail call fastcc i32 @mark_lock_irq(ptr noundef %curr, ptr noundef %this, i32 noundef %new_bit.addr.0)
  %tobool167.not = icmp eq i32 %call166, 0
  br i1 %tobool167.not, label %cleanup, label %unlock

unlock.thread:                                    ; preds = %if.end162, %if.end150, %if.end49
  tail call fastcc void @lockdep_unlock() #28
  br label %cleanup

unlock:                                           ; preds = %if.then165
  tail call fastcc void @lockdep_unlock() #28
  %cmp171 = icmp eq i32 %call166, 2
  br i1 %cmp171, label %do.end176, label %cleanup

do.end176:                                        ; preds = %unlock
  %arrayidx178 = getelementptr [11 x ptr], ptr @usage_str, i32 0, i32 %new_bit.addr.0
  %28 = ptrtoint ptr %arrayidx178 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx178, align 4
  %call179 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.195, ptr noundef %29) #32
  tail call fastcc void @print_lock(ptr noundef %this)
  tail call void @print_irqtrace_events(ptr noundef %curr)
  tail call void @dump_stack() #32
  br label %cleanup

cleanup:                                          ; preds = %do.end176, %unlock, %unlock.thread, %if.then165, %if.then155, %if.end45, %hlock_class.exit
  %retval.0 = phi i32 [ 1, %hlock_class.exit ], [ 0, %if.end45 ], [ 0, %if.then155 ], [ 0, %if.then165 ], [ 2, %do.end176 ], [ %call166, %unlock ], [ 1, %unlock.thread ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @hlock_class(ptr nocapture noundef readonly %hlock) unnamed_addr #10 align 64 {
entry:
  %class_idx1 = getelementptr inbounds %struct.held_lock, ptr %hlock, i32 0, i32 6
  %0 = ptrtoint ptr %class_idx1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load = load i32, ptr %class_idx1, align 8
  %bf.lshr = lshr i32 %bf.load, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i = lshr i32 %bf.load, 24
  %arrayidx.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i
  %1 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %arrayidx.i, align 4
  %and.i = and i32 %bf.lshr, 31
  %3 = shl nuw i32 1, %and.i
  %4 = and i32 %3, %2
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %if.then, label %if.end33

if.then:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %5 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not = icmp eq i32 %5, 0
  br i1 %tobool2.not, label %do.end, label %cleanup

do.end:                                           ; preds = %if.then
  %call4 = tail call i32 @debug_locks_off() #28
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %cleanup, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %6 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not = icmp eq i32 %6, 0
  br i1 %tobool6.not, label %do.end15, label %cleanup

do.end15:                                         ; preds = %land.lhs.true
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %cleanup

if.end33:                                         ; preds = %entry
  %add.ptr = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr
  br label %cleanup

cleanup:                                          ; preds = %if.end33, %do.end15, %land.lhs.true, %do.end, %if.then
  %retval.0 = phi ptr [ %add.ptr, %if.end33 ], [ null, %do.end15 ], [ null, %land.lhs.true ], [ null, %do.end ], [ null, %if.then ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @save_trace() unnamed_addr #0 align 64 {
entry:
  %0 = load i32, ptr @nr_stack_trace_entries, align 4
  %add.ptr = getelementptr i32, ptr @stack_trace, i32 %0
  %sub4 = sub i32 524284, %0
  %cmp = icmp slt i32 %sub4, 1
  br i1 %cmp, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %call.i = tail call i32 @debug_locks_off() #28
  tail call fastcc void @lockdep_unlock() #28
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %if.then
  %call.i56 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.198, ptr noundef nonnull @.str.197) #32
  %call4.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.201) #32
  %call8.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.204) #32
  tail call void @dump_stack() #32
  br label %cleanup

if.end6:                                          ; preds = %entry
  %entries = getelementptr inbounds %struct.lock_trace, ptr %add.ptr, i32 0, i32 3
  %call7 = tail call i32 @stack_trace_save(ptr noundef %entries, i32 noundef %sub4, i32 noundef 3) #28
  %nr_entries = getelementptr inbounds %struct.lock_trace, ptr %add.ptr, i32 0, i32 2
  %1 = ptrtoint ptr %nr_entries to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %call7, ptr %nr_entries, align 4
  %mul = shl i32 %call7, 2
  %add.i = add i32 %mul, -559038737
  %cmp13.i = icmp ugt i32 %mul, 12
  br i1 %cmp13.i, label %while.body.i, label %while.end.i

while.body.i:                                     ; preds = %while.body.i, %if.end6
  %k.018.i = phi ptr [ %add.ptr31.i, %while.body.i ], [ %entries, %if.end6 ]
  %c.017.i = phi i32 [ %xor28.i, %while.body.i ], [ %add.i, %if.end6 ]
  %b.016.i = phi i32 [ %add29.i, %while.body.i ], [ %add.i, %if.end6 ]
  %a.015.i = phi i32 [ %add25.i, %while.body.i ], [ %add.i, %if.end6 ]
  %length.addr.014.i = phi i32 [ %sub30.i, %while.body.i ], [ %mul, %if.end6 ]
  %2 = ptrtoint ptr %k.018.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 4)
  %3 = load i32, ptr %k.018.i, align 1
  %add2.i = add i32 %3, %a.015.i
  %add.ptr.i = getelementptr i8, ptr %k.018.i, i32 4
  %4 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_loadN_noabort(i32 %4, i32 4)
  %5 = load i32, ptr %add.ptr.i, align 1
  %add4.i = add i32 %5, %b.016.i
  %add.ptr5.i = getelementptr i8, ptr %k.018.i, i32 8
  %6 = ptrtoint ptr %add.ptr5.i to i32
  call void @__asan_loadN_noabort(i32 %6, i32 4)
  %7 = load i32, ptr %add.ptr5.i, align 1
  %add7.i = add i32 %7, %c.017.i
  %sub.i = sub i32 %add2.i, %add7.i
  %or.i.i = tail call i32 @llvm.fshl.i32(i32 %add7.i, i32 %add7.i, i32 4) #28
  %xor.i = xor i32 %sub.i, %or.i.i
  %add9.i = add i32 %add7.i, %add4.i
  %sub10.i = sub i32 %add4.i, %xor.i
  %or.i1.i = tail call i32 @llvm.fshl.i32(i32 %xor.i, i32 %xor.i, i32 6) #28
  %xor12.i = xor i32 %sub10.i, %or.i1.i
  %add13.i = add i32 %xor.i, %add9.i
  %sub14.i = sub i32 %add9.i, %xor12.i
  %or.i2.i = tail call i32 @llvm.fshl.i32(i32 %xor12.i, i32 %xor12.i, i32 8) #28
  %xor16.i = xor i32 %sub14.i, %or.i2.i
  %add17.i = add i32 %xor12.i, %add13.i
  %sub18.i = sub i32 %add13.i, %xor16.i
  %or.i3.i = tail call i32 @llvm.fshl.i32(i32 %xor16.i, i32 %xor16.i, i32 16) #28
  %xor20.i = xor i32 %sub18.i, %or.i3.i
  %add21.i = add i32 %xor16.i, %add17.i
  %sub22.i = sub i32 %add17.i, %xor20.i
  %or.i4.i = tail call i32 @llvm.fshl.i32(i32 %xor20.i, i32 %xor20.i, i32 19) #28
  %xor24.i = xor i32 %sub22.i, %or.i4.i
  %add25.i = add i32 %xor20.i, %add21.i
  %sub26.i = sub i32 %add21.i, %xor24.i
  %or.i5.i = tail call i32 @llvm.fshl.i32(i32 %xor24.i, i32 %xor24.i, i32 4) #28
  %xor28.i = xor i32 %sub26.i, %or.i5.i
  %add29.i = add i32 %xor24.i, %add25.i
  %sub30.i = add i32 %length.addr.014.i, -12
  %add.ptr31.i = getelementptr i8, ptr %k.018.i, i32 12
  %cmp.i = icmp ugt i32 %sub30.i, 12
  br i1 %cmp.i, label %while.body.i, label %while.end.i

while.end.i:                                      ; preds = %while.body.i, %if.end6
  %length.addr.0.lcssa.i = phi i32 [ %mul, %if.end6 ], [ %sub30.i, %while.body.i ]
  %a.0.lcssa.i = phi i32 [ %add.i, %if.end6 ], [ %add25.i, %while.body.i ]
  %b.0.lcssa.i = phi i32 [ %add.i, %if.end6 ], [ %add29.i, %while.body.i ]
  %c.0.lcssa.i = phi i32 [ %add.i, %if.end6 ], [ %xor28.i, %while.body.i ]
  %k.0.lcssa.i = phi ptr [ %entries, %if.end6 ], [ %add.ptr31.i, %while.body.i ]
  switch i32 %length.addr.0.lcssa.i, label %jhash.exit [
    i32 12, label %sw.bb.i
    i32 11, label %sw.bb33.i
    i32 10, label %sw.bb38.i
    i32 9, label %sw.bb43.i
    i32 8, label %sw.bb47.i
    i32 7, label %sw.bb52.i
    i32 6, label %sw.bb57.i
    i32 5, label %sw.bb62.i
    i32 4, label %sw.bb66.i
    i32 3, label %sw.bb71.i
    i32 2, label %sw.bb76.i
    i32 1, label %sw.bb81.i
  ]

sw.bb.i:                                          ; preds = %while.end.i
  %arrayidx.i = getelementptr i8, ptr %k.0.lcssa.i, i32 11
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx.i, align 1
  %conv.i = zext i8 %9 to i32
  %shl.i = shl nuw i32 %conv.i, 24
  %add32.i = add i32 %shl.i, %c.0.lcssa.i
  br label %sw.bb33.i

sw.bb33.i:                                        ; preds = %sw.bb.i, %while.end.i
  %c.1.i = phi i32 [ %c.0.lcssa.i, %while.end.i ], [ %add32.i, %sw.bb.i ]
  %arrayidx34.i = getelementptr i8, ptr %k.0.lcssa.i, i32 10
  %10 = ptrtoint ptr %arrayidx34.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx34.i, align 1
  %conv35.i = zext i8 %11 to i32
  %shl36.i = shl nuw nsw i32 %conv35.i, 16
  %add37.i = add i32 %shl36.i, %c.1.i
  br label %sw.bb38.i

sw.bb38.i:                                        ; preds = %sw.bb33.i, %while.end.i
  %c.2.i = phi i32 [ %c.0.lcssa.i, %while.end.i ], [ %add37.i, %sw.bb33.i ]
  %arrayidx39.i = getelementptr i8, ptr %k.0.lcssa.i, i32 9
  %12 = ptrtoint ptr %arrayidx39.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx39.i, align 1
  %conv40.i = zext i8 %13 to i32
  %shl41.i = shl nuw nsw i32 %conv40.i, 8
  %add42.i = add i32 %shl41.i, %c.2.i
  br label %sw.bb43.i

sw.bb43.i:                                        ; preds = %sw.bb38.i, %while.end.i
  %c.3.i = phi i32 [ %c.0.lcssa.i, %while.end.i ], [ %add42.i, %sw.bb38.i ]
  %arrayidx44.i = getelementptr i8, ptr %k.0.lcssa.i, i32 8
  %14 = ptrtoint ptr %arrayidx44.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %arrayidx44.i, align 1
  %conv45.i = zext i8 %15 to i32
  %add46.i = add i32 %c.3.i, %conv45.i
  br label %sw.bb47.i

sw.bb47.i:                                        ; preds = %sw.bb43.i, %while.end.i
  %c.4.i = phi i32 [ %c.0.lcssa.i, %while.end.i ], [ %add46.i, %sw.bb43.i ]
  %arrayidx48.i = getelementptr i8, ptr %k.0.lcssa.i, i32 7
  %16 = ptrtoint ptr %arrayidx48.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %arrayidx48.i, align 1
  %conv49.i = zext i8 %17 to i32
  %shl50.i = shl nuw i32 %conv49.i, 24
  %add51.i = add i32 %shl50.i, %b.0.lcssa.i
  br label %sw.bb52.i

sw.bb52.i:                                        ; preds = %sw.bb47.i, %while.end.i
  %b.1.i = phi i32 [ %b.0.lcssa.i, %while.end.i ], [ %add51.i, %sw.bb47.i ]
  %c.5.i = phi i32 [ %c.0.lcssa.i, %while.end.i ], [ %c.4.i, %sw.bb47.i ]
  %arrayidx53.i = getelementptr i8, ptr %k.0.lcssa.i, i32 6
  %18 = ptrtoint ptr %arrayidx53.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx53.i, align 1
  %conv54.i = zext i8 %19 to i32
  %shl55.i = shl nuw nsw i32 %conv54.i, 16
  %add56.i = add i32 %shl55.i, %b.1.i
  br label %sw.bb57.i

sw.bb57.i:                                        ; preds = %sw.bb52.i, %while.end.i
  %b.2.i = phi i32 [ %b.0.lcssa.i, %while.end.i ], [ %add56.i, %sw.bb52.i ]
  %c.6.i = phi i32 [ %c.0.lcssa.i, %while.end.i ], [ %c.5.i, %sw.bb52.i ]
  %arrayidx58.i = getelementptr i8, ptr %k.0.lcssa.i, i32 5
  %20 = ptrtoint ptr %arrayidx58.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %arrayidx58.i, align 1
  %conv59.i = zext i8 %21 to i32
  %shl60.i = shl nuw nsw i32 %conv59.i, 8
  %add61.i = add i32 %shl60.i, %b.2.i
  br label %sw.bb62.i

sw.bb62.i:                                        ; preds = %sw.bb57.i, %while.end.i
  %b.3.i = phi i32 [ %b.0.lcssa.i, %while.end.i ], [ %add61.i, %sw.bb57.i ]
  %c.7.i = phi i32 [ %c.0.lcssa.i, %while.end.i ], [ %c.6.i, %sw.bb57.i ]
  %arrayidx63.i = getelementptr i8, ptr %k.0.lcssa.i, i32 4
  %22 = ptrtoint ptr %arrayidx63.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %arrayidx63.i, align 1
  %conv64.i = zext i8 %23 to i32
  %add65.i = add i32 %b.3.i, %conv64.i
  br label %sw.bb66.i

sw.bb66.i:                                        ; preds = %sw.bb62.i, %while.end.i
  %b.4.i = phi i32 [ %b.0.lcssa.i, %while.end.i ], [ %add65.i, %sw.bb62.i ]
  %c.8.i = phi i32 [ %c.0.lcssa.i, %while.end.i ], [ %c.7.i, %sw.bb62.i ]
  %arrayidx67.i = getelementptr i8, ptr %k.0.lcssa.i, i32 3
  %24 = ptrtoint ptr %arrayidx67.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %arrayidx67.i, align 1
  %conv68.i = zext i8 %25 to i32
  %shl69.i = shl nuw i32 %conv68.i, 24
  %add70.i = add i32 %shl69.i, %a.0.lcssa.i
  br label %sw.bb71.i

sw.bb71.i:                                        ; preds = %sw.bb66.i, %while.end.i
  %a.1.i = phi i32 [ %a.0.lcssa.i, %while.end.i ], [ %add70.i, %sw.bb66.i ]
  %b.5.i = phi i32 [ %b.0.lcssa.i, %while.end.i ], [ %b.4.i, %sw.bb66.i ]
  %c.9.i = phi i32 [ %c.0.lcssa.i, %while.end.i ], [ %c.8.i, %sw.bb66.i ]
  %arrayidx72.i = getelementptr i8, ptr %k.0.lcssa.i, i32 2
  %26 = ptrtoint ptr %arrayidx72.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %arrayidx72.i, align 1
  %conv73.i = zext i8 %27 to i32
  %shl74.i = shl nuw nsw i32 %conv73.i, 16
  %add75.i = add i32 %shl74.i, %a.1.i
  br label %sw.bb76.i

sw.bb76.i:                                        ; preds = %sw.bb71.i, %while.end.i
  %a.2.i = phi i32 [ %a.0.lcssa.i, %while.end.i ], [ %add75.i, %sw.bb71.i ]
  %b.6.i = phi i32 [ %b.0.lcssa.i, %while.end.i ], [ %b.5.i, %sw.bb71.i ]
  %c.10.i = phi i32 [ %c.0.lcssa.i, %while.end.i ], [ %c.9.i, %sw.bb71.i ]
  %arrayidx77.i = getelementptr i8, ptr %k.0.lcssa.i, i32 1
  %28 = ptrtoint ptr %arrayidx77.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %arrayidx77.i, align 1
  %conv78.i = zext i8 %29 to i32
  %shl79.i = shl nuw nsw i32 %conv78.i, 8
  %add80.i = add i32 %shl79.i, %a.2.i
  br label %sw.bb81.i

sw.bb81.i:                                        ; preds = %sw.bb76.i, %while.end.i
  %a.3.i = phi i32 [ %a.0.lcssa.i, %while.end.i ], [ %add80.i, %sw.bb76.i ]
  %b.7.i = phi i32 [ %b.0.lcssa.i, %while.end.i ], [ %b.6.i, %sw.bb76.i ]
  %c.11.i = phi i32 [ %c.0.lcssa.i, %while.end.i ], [ %c.10.i, %sw.bb76.i ]
  %30 = ptrtoint ptr %k.0.lcssa.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %k.0.lcssa.i, align 1
  %conv83.i = zext i8 %31 to i32
  %add84.i = add i32 %a.3.i, %conv83.i
  %xor85.i = xor i32 %c.11.i, %b.7.i
  %or.i6.i = tail call i32 @llvm.fshl.i32(i32 %b.7.i, i32 %b.7.i, i32 14) #28
  %sub87.i = sub i32 %xor85.i, %or.i6.i
  %xor88.i = xor i32 %add84.i, %sub87.i
  %or.i7.i = tail call i32 @llvm.fshl.i32(i32 %sub87.i, i32 %sub87.i, i32 11) #28
  %sub90.i = sub i32 %xor88.i, %or.i7.i
  %xor91.i = xor i32 %sub90.i, %b.7.i
  %or.i8.i = tail call i32 @llvm.fshl.i32(i32 %sub90.i, i32 %sub90.i, i32 25) #28
  %sub93.i = sub i32 %xor91.i, %or.i8.i
  %xor94.i = xor i32 %sub93.i, %sub87.i
  %or.i9.i = tail call i32 @llvm.fshl.i32(i32 %sub93.i, i32 %sub93.i, i32 16) #28
  %sub96.i = sub i32 %xor94.i, %or.i9.i
  %xor97.i = xor i32 %sub96.i, %sub90.i
  %or.i10.i = tail call i32 @llvm.fshl.i32(i32 %sub96.i, i32 %sub96.i, i32 4) #28
  %sub99.i = sub i32 %xor97.i, %or.i10.i
  %xor100.i = xor i32 %sub99.i, %sub93.i
  %or.i11.i = tail call i32 @llvm.fshl.i32(i32 %sub99.i, i32 %sub99.i, i32 14) #28
  %sub102.i = sub i32 %xor100.i, %or.i11.i
  %xor103.i = xor i32 %sub102.i, %sub96.i
  %or.i12.i = tail call i32 @llvm.fshl.i32(i32 %sub102.i, i32 %sub102.i, i32 24) #28
  %sub105.i = sub i32 %xor103.i, %or.i12.i
  br label %jhash.exit

jhash.exit:                                       ; preds = %sw.bb81.i, %while.end.i
  %c.12.i = phi i32 [ %c.0.lcssa.i, %while.end.i ], [ %sub105.i, %sw.bb81.i ]
  %hash12 = getelementptr inbounds %struct.lock_trace, ptr %add.ptr, i32 0, i32 1
  %32 = ptrtoint ptr %hash12 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %c.12.i, ptr %hash12, align 4
  %and = and i32 %c.12.i, 16383
  %add.ptr13 = getelementptr %struct.hlist_head, ptr @stack_trace_hash, i32 %and
  %33 = ptrtoint ptr %add.ptr13 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %add.ptr13, align 4
  %tobool14.not = icmp eq ptr %34, null
  br i1 %tobool14.not, label %for.end.thread, label %for.body

for.end.thread:                                   ; preds = %jhash.exit
  %add63 = add i32 %call7, 4
  %35 = load i32, ptr @nr_stack_trace_entries, align 4
  %add3264 = add i32 %add63, %35
  store i32 %add3264, ptr @nr_stack_trace_entries, align 4
  %36 = ptrtoint ptr %add.ptr to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile ptr %34, ptr %add.ptr, align 4
  br label %hlist_add_head.exit

for.body:                                         ; preds = %for.inc, %jhash.exit
  %t2.060 = phi ptr [ %42, %for.inc ], [ %34, %jhash.exit ]
  %hash1.i = getelementptr inbounds %struct.lock_trace, ptr %t2.060, i32 0, i32 1
  %37 = ptrtoint ptr %hash1.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %hash1.i, align 4
  %cmp.i57 = icmp eq i32 %c.12.i, %38
  br i1 %cmp.i57, label %land.lhs.true.i, label %for.inc

land.lhs.true.i:                                  ; preds = %for.body
  %nr_entries2.i = getelementptr inbounds %struct.lock_trace, ptr %t2.060, i32 0, i32 2
  %39 = ptrtoint ptr %nr_entries2.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %nr_entries2.i, align 4
  %cmp3.i = icmp eq i32 %call7, %40
  br i1 %cmp3.i, label %traces_identical.exit, label %for.inc

traces_identical.exit:                            ; preds = %land.lhs.true.i
  %entries4.i = getelementptr inbounds %struct.lock_trace, ptr %t2.060, i32 0, i32 3
  %bcmp.i = tail call i32 @bcmp(ptr %entries, ptr %entries4.i, i32 %mul) #29
  %cmp7.i = icmp eq i32 %bcmp.i, 0
  br i1 %cmp7.i, label %cleanup, label %for.inc

for.inc:                                          ; preds = %traces_identical.exit, %land.lhs.true.i, %for.body
  %41 = ptrtoint ptr %t2.060 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %t2.060, align 4
  %tobool17.not = icmp eq ptr %42, null
  br i1 %tobool17.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %add = add i32 %call7, 4
  %43 = load i32, ptr @nr_stack_trace_entries, align 4
  %add32 = add i32 %add, %43
  store i32 %add32, ptr @nr_stack_trace_entries, align 4
  %44 = ptrtoint ptr %add.ptr to i32
  call void @__asan_store4_noabort(i32 %44)
  store volatile ptr %34, ptr %add.ptr, align 4
  br i1 %tobool14.not, label %hlist_add_head.exit, label %do.body12.i

do.body12.i:                                      ; preds = %for.end
  %pprev.i = getelementptr inbounds %struct.hlist_node, ptr %34, i32 0, i32 1
  %45 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile ptr %add.ptr, ptr %pprev.i, align 4
  br label %hlist_add_head.exit

hlist_add_head.exit:                              ; preds = %do.body12.i, %for.end, %for.end.thread
  %46 = ptrtoint ptr %add.ptr13 to i32
  call void @__asan_store4_noabort(i32 %46)
  store volatile ptr %add.ptr, ptr %add.ptr13, align 4
  %pprev34.i = getelementptr inbounds %struct.hlist_node, ptr %add.ptr, i32 0, i32 1
  %47 = ptrtoint ptr %pprev34.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store volatile ptr %add.ptr13, ptr %pprev34.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %hlist_add_head.exit, %traces_identical.exit, %if.end, %if.then
  %retval.0 = phi ptr [ null, %if.end ], [ %add.ptr, %hlist_add_head.exit ], [ null, %if.then ], [ %t2.060, %traces_identical.exit ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mark_lock_irq(ptr noundef %curr, ptr nocapture noundef readonly %this, i32 noundef %new_bit) unnamed_addr #0 align 64 {
entry:
  %root.i74 = alloca %struct.lock_list, align 4
  %target_entry.i75 = alloca ptr, align 4
  %root.i = alloca %struct.lock_list, align 4
  %target_entry.i = alloca ptr, align 4
  %0 = and i32 %new_bit, -2
  %or.i = xor i32 %0, 2
  %and1 = and i32 %new_bit, 2
  %class_idx1.i.i = getelementptr inbounds %struct.held_lock, ptr %this, i32 0, i32 6
  %1 = ptrtoint ptr %class_idx1.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %bf.load.i.i = load i32, ptr %class_idx1.i.i, align 8
  %bf.lshr.i.i = lshr i32 %bf.load.i.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i.i = lshr i32 %bf.load.i.i, 24
  %arrayidx.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i.i
  %2 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i = and i32 %bf.lshr.i.i, 31
  %4 = shl nuw i32 1, %and.i.i.i
  %5 = and i32 %4, %3
  %tobool.not.i.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.end33.i.i

if.then.i.i:                                      ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %6 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i.i = icmp eq i32 %6, 0
  br i1 %tobool2.not.i.i, label %do.end.i.i, label %hlock_class.exit.i

do.end.i.i:                                       ; preds = %if.then.i.i
  %call4.i.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %hlock_class.exit.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %do.end.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %7 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i.i = icmp eq i32 %7, 0
  br i1 %tobool6.not.i.i, label %do.end15.i.i, label %hlock_class.exit.i

do.end15.i.i:                                     ; preds = %land.lhs.true.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit.i

if.end33.i.i:                                     ; preds = %entry
  %add.ptr.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i.i
  br label %hlock_class.exit.i

hlock_class.exit.i:                               ; preds = %if.end33.i.i, %do.end15.i.i, %land.lhs.true.i.i, %do.end.i.i, %if.then.i.i
  %retval.0.i.i = phi ptr [ %add.ptr.i.i, %if.end33.i.i ], [ null, %do.end15.i.i ], [ null, %land.lhs.true.i.i ], [ null, %do.end.i.i ], [ null, %if.then.i.i ]
  %usage_mask.i = getelementptr inbounds %struct.lock_class, ptr %retval.0.i.i, i32 0, i32 7
  %8 = ptrtoint ptr %usage_mask.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %usage_mask.i, align 4
  %shl.i = shl nuw i32 1, %or.i
  %and.i = and i32 %9, %shl.i
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %valid_state.exit.thread, !prof !1500

valid_state.exit.thread:                          ; preds = %hlock_class.exit.i
  tail call fastcc void @lockdep_unlock() #28
  tail call fastcc void @print_usage_bug(ptr noundef %curr, ptr noundef %this, i32 noundef %or.i, i32 noundef %new_bit) #28
  br label %cleanup

if.end:                                           ; preds = %hlock_class.exit.i
  %and = and i32 %new_bit, 1
  %tobool3.not = icmp eq i32 %and, 0
  br i1 %tobool3.not, label %land.lhs.true, label %if.end7

land.lhs.true:                                    ; preds = %if.end
  %add = or i32 %or.i, 1
  %10 = ptrtoint ptr %class_idx1.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %bf.load.i.i42 = load i32, ptr %class_idx1.i.i, align 8
  %bf.lshr.i.i43 = lshr i32 %bf.load.i.i42, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i.i44 = lshr i32 %bf.load.i.i42, 24
  %arrayidx.i.i.i45 = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i.i44
  %11 = ptrtoint ptr %arrayidx.i.i.i45 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %arrayidx.i.i.i45, align 4
  %and.i.i.i46 = and i32 %bf.lshr.i.i43, 31
  %13 = shl nuw i32 1, %and.i.i.i46
  %14 = and i32 %13, %12
  %tobool.not.i.i47 = icmp eq i32 %14, 0
  br i1 %tobool.not.i.i47, label %if.then.i.i49, label %if.end33.i.i57

if.then.i.i49:                                    ; preds = %land.lhs.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %15 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i.i48 = icmp eq i32 %15, 0
  br i1 %tobool2.not.i.i48, label %do.end.i.i52, label %hlock_class.exit.i63

do.end.i.i52:                                     ; preds = %if.then.i.i49
  %call4.i.i50 = tail call i32 @debug_locks_off() #28
  %tobool5.not.i.i51 = icmp eq i32 %call4.i.i50, 0
  br i1 %tobool5.not.i.i51, label %hlock_class.exit.i63, label %land.lhs.true.i.i54

land.lhs.true.i.i54:                              ; preds = %do.end.i.i52
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %16 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i.i53 = icmp eq i32 %16, 0
  br i1 %tobool6.not.i.i53, label %do.end15.i.i55, label %hlock_class.exit.i63

do.end15.i.i55:                                   ; preds = %land.lhs.true.i.i54
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit.i63

if.end33.i.i57:                                   ; preds = %land.lhs.true
  %add.ptr.i.i56 = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i.i43
  br label %hlock_class.exit.i63

hlock_class.exit.i63:                             ; preds = %if.end33.i.i57, %do.end15.i.i55, %land.lhs.true.i.i54, %do.end.i.i52, %if.then.i.i49
  %retval.0.i.i58 = phi ptr [ %add.ptr.i.i56, %if.end33.i.i57 ], [ null, %do.end15.i.i55 ], [ null, %land.lhs.true.i.i54 ], [ null, %do.end.i.i52 ], [ null, %if.then.i.i49 ]
  %usage_mask.i59 = getelementptr inbounds %struct.lock_class, ptr %retval.0.i.i58, i32 0, i32 7
  %17 = ptrtoint ptr %usage_mask.i59 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %usage_mask.i59, align 4
  %shl.i60 = shl nuw i32 1, %add
  %and.i61 = and i32 %18, %shl.i60
  %tobool.not.i62 = icmp eq i32 %and.i61, 0
  br i1 %tobool.not.i62, label %if.end7, label %valid_state.exit66.thread, !prof !1500

valid_state.exit66.thread:                        ; preds = %hlock_class.exit.i63
  tail call fastcc void @lockdep_unlock() #28
  tail call fastcc void @print_usage_bug(ptr noundef %curr, ptr noundef %this, i32 noundef %add, i32 noundef %new_bit) #28
  br label %cleanup

if.end7:                                          ; preds = %hlock_class.exit.i63, %if.end
  %tobool8.not = icmp eq i32 %and1, 0
  br i1 %tobool8.not, label %if.else, label %if.then9

if.then9:                                         ; preds = %if.end7
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %root.i) #28
  %19 = getelementptr inbounds %struct.lock_list, ptr %root.i, i32 0, i32 1
  %20 = getelementptr inbounds %struct.lock_list, ptr %root.i, i32 0, i32 6
  %21 = getelementptr inbounds %struct.lock_list, ptr %root.i, i32 0, i32 7
  %22 = call ptr @memset(ptr %root.i, i32 255, i32 24)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %target_entry.i) #28
  %23 = ptrtoint ptr %target_entry.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr inttoptr (i32 -1 to ptr), ptr %target_entry.i, align 4, !annotation !1502
  %add.i = or i32 %or.i, 1
  %shl.i25.i = shl nuw i32 1, %add.i
  %or.i67 = or i32 %shl.i25.i, %shl.i
  %24 = ptrtoint ptr %class_idx1.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %bf.load.i.i.i = load i32, ptr %class_idx1.i.i, align 8
  %bf.lshr.i.i.i = lshr i32 %bf.load.i.i.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i.i.i = lshr i32 %bf.load.i.i.i, 24
  %arrayidx.i.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i.i.i
  %25 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %arrayidx.i.i.i.i, align 4
  %and.i.i.i.i = and i32 %bf.lshr.i.i.i, 31
  %27 = shl nuw i32 1, %and.i.i.i.i
  %28 = and i32 %27, %26
  %tobool.not.i.i.i = icmp eq i32 %28, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.end33.i.i.i

if.then.i.i.i:                                    ; preds = %if.then9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %29 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i.i.i = icmp eq i32 %29, 0
  br i1 %tobool2.not.i.i.i, label %do.end.i.i.i, label %bfs_init_rootb.exit.i

do.end.i.i.i:                                     ; preds = %if.then.i.i.i
  %call4.i.i.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i.i.i = icmp eq i32 %call4.i.i.i, 0
  br i1 %tobool5.not.i.i.i, label %bfs_init_rootb.exit.i, label %land.lhs.true.i.i.i

land.lhs.true.i.i.i:                              ; preds = %do.end.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %30 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i.i.i = icmp eq i32 %30, 0
  br i1 %tobool6.not.i.i.i, label %do.end15.i.i.i, label %bfs_init_rootb.exit.i

do.end15.i.i.i:                                   ; preds = %land.lhs.true.i.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %bfs_init_rootb.exit.i

if.end33.i.i.i:                                   ; preds = %if.then9
  %add.ptr.i.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i.i.i
  br label %bfs_init_rootb.exit.i

bfs_init_rootb.exit.i:                            ; preds = %if.end33.i.i.i, %do.end15.i.i.i, %land.lhs.true.i.i.i, %do.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i, %if.end33.i.i.i ], [ null, %do.end15.i.i.i ], [ null, %land.lhs.true.i.i.i ], [ null, %do.end.i.i.i ], [ null, %if.then.i.i.i ]
  %31 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %retval.0.i.i.i, ptr %19, align 4
  %32 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr null, ptr %21, align 4
  %33 = ptrtoint ptr %class_idx1.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %bf.load.i.i68 = load i32, ptr %class_idx1.i.i, align 8
  %34 = and i32 %bf.load.i.i68, 49152
  %cmp.i.i = icmp ne i32 %34, 0
  %conv1.i.i = zext i1 %cmp.i.i to i8
  %35 = ptrtoint ptr %20 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 %conv1.i.i, ptr %20, align 1
  %call2.i = call fastcc i32 @find_usage_backwards(ptr noundef nonnull %root.i, i32 noundef %or.i67, ptr noundef nonnull %target_entry.i) #28, !range !1545
  %cmp.i26.i = icmp slt i32 %call2.i, 0
  br i1 %cmp.i26.i, label %if.then.i69, label %if.end.i

if.then.i69:                                      ; preds = %bfs_init_rootb.exit.i
  call fastcc void @print_bfs_bug(i32 noundef %call2.i) #28
  br label %check_usage_backwards.exit.thread

if.end.i:                                         ; preds = %bfs_init_rootb.exit.i
  %cmp.i = icmp eq i32 %call2.i, 1
  br i1 %cmp.i, label %check_usage_backwards.exit, label %if.end5.i

if.end5.i:                                        ; preds = %if.end.i
  %36 = ptrtoint ptr %target_entry.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %target_entry.i, align 4
  %class.i = getelementptr inbounds %struct.lock_list, ptr %37, i32 0, i32 1
  %38 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %class.i, align 4
  %usage_mask6.i = getelementptr inbounds %struct.lock_class, ptr %39, i32 0, i32 7
  %40 = ptrtoint ptr %usage_mask6.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %usage_mask6.i, align 4
  %and.i70 = and i32 %41, %shl.i
  %tobool.not.i71 = icmp eq i32 %and.i70, 0
  %shr.i30.i = lshr i32 %new_bit, 2
  br i1 %tobool.not.i71, label %if.else.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end5.i
  %arrayidx2.i.i = getelementptr [2 x ptr], ptr @state_names, i32 0, i32 %shr.i30.i
  %42 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %retval.0.i.i72 = load ptr, ptr %arrayidx2.i.i, align 4
  call fastcc void @print_irq_inversion_bug(ptr noundef %curr, ptr noundef nonnull %root.i, ptr noundef %37, ptr noundef %this, i32 noundef 0, ptr noundef %retval.0.i.i72) #28
  br label %check_usage_backwards.exit.thread

if.else.i:                                        ; preds = %if.end5.i
  %arrayidx.i31.i = getelementptr [2 x ptr], ptr @state_rnames, i32 0, i32 %shr.i30.i
  %43 = ptrtoint ptr %arrayidx.i31.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %retval.0.i34.i = load ptr, ptr %arrayidx.i31.i, align 4
  call fastcc void @print_irq_inversion_bug(ptr noundef %curr, ptr noundef nonnull %root.i, ptr noundef %37, ptr noundef %this, i32 noundef 0, ptr noundef %retval.0.i34.i) #28
  br label %check_usage_backwards.exit.thread

check_usage_backwards.exit.thread:                ; preds = %if.else.i, %if.then8.i, %if.then.i69
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %target_entry.i) #28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %root.i) #28
  br label %cleanup

check_usage_backwards.exit:                       ; preds = %if.end.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %target_entry.i) #28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %root.i) #28
  br label %if.end18

if.else:                                          ; preds = %if.end7
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %root.i74) #28
  %44 = getelementptr inbounds %struct.lock_list, ptr %root.i74, i32 0, i32 1
  %45 = getelementptr inbounds %struct.lock_list, ptr %root.i74, i32 0, i32 6
  %46 = getelementptr inbounds %struct.lock_list, ptr %root.i74, i32 0, i32 7
  %47 = call ptr @memset(ptr %root.i74, i32 255, i32 24)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %target_entry.i75) #28
  %48 = ptrtoint ptr %target_entry.i75 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr inttoptr (i32 -1 to ptr), ptr %target_entry.i75, align 4, !annotation !1502
  %add.i76 = or i32 %or.i, 1
  %shl.i25.i78 = shl nuw i32 1, %add.i76
  %or.i79 = or i32 %shl.i25.i78, %shl.i
  %49 = ptrtoint ptr %class_idx1.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %bf.load.i.i.i81 = load i32, ptr %class_idx1.i.i, align 8
  %bf.lshr.i.i.i82 = lshr i32 %bf.load.i.i.i81, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i.i.i83 = lshr i32 %bf.load.i.i.i81, 24
  %arrayidx.i.i.i.i84 = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i.i.i83
  %50 = ptrtoint ptr %arrayidx.i.i.i.i84 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %arrayidx.i.i.i.i84, align 4
  %and.i.i.i.i85 = and i32 %bf.lshr.i.i.i82, 31
  %52 = shl nuw i32 1, %and.i.i.i.i85
  %53 = and i32 %52, %51
  %tobool.not.i.i.i86 = icmp eq i32 %53, 0
  br i1 %tobool.not.i.i.i86, label %if.then.i.i.i88, label %if.end33.i.i.i96

if.then.i.i.i88:                                  ; preds = %if.else
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %54 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i.i.i87 = icmp eq i32 %54, 0
  br i1 %tobool2.not.i.i.i87, label %do.end.i.i.i91, label %bfs_init_root.exit.i

do.end.i.i.i91:                                   ; preds = %if.then.i.i.i88
  %call4.i.i.i89 = tail call i32 @debug_locks_off() #28
  %tobool5.not.i.i.i90 = icmp eq i32 %call4.i.i.i89, 0
  br i1 %tobool5.not.i.i.i90, label %bfs_init_root.exit.i, label %land.lhs.true.i.i.i93

land.lhs.true.i.i.i93:                            ; preds = %do.end.i.i.i91
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %55 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i.i.i92 = icmp eq i32 %55, 0
  br i1 %tobool6.not.i.i.i92, label %do.end15.i.i.i94, label %bfs_init_root.exit.i

do.end15.i.i.i94:                                 ; preds = %land.lhs.true.i.i.i93
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %bfs_init_root.exit.i

if.end33.i.i.i96:                                 ; preds = %if.else
  %add.ptr.i.i.i95 = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i.i.i82
  br label %bfs_init_root.exit.i

bfs_init_root.exit.i:                             ; preds = %if.end33.i.i.i96, %do.end15.i.i.i94, %land.lhs.true.i.i.i93, %do.end.i.i.i91, %if.then.i.i.i88
  %retval.0.i.i.i97 = phi ptr [ %add.ptr.i.i.i95, %if.end33.i.i.i96 ], [ null, %do.end15.i.i.i94 ], [ null, %land.lhs.true.i.i.i93 ], [ null, %do.end.i.i.i91 ], [ null, %if.then.i.i.i88 ]
  %56 = ptrtoint ptr %44 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %retval.0.i.i.i97, ptr %44, align 4
  %57 = ptrtoint ptr %46 to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr null, ptr %46, align 4
  %58 = ptrtoint ptr %class_idx1.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %bf.load.i.i98 = load i32, ptr %class_idx1.i.i, align 8
  %59 = and i32 %bf.load.i.i98, 49152
  %cmp.i.i99 = icmp eq i32 %59, 32768
  %conv1.i.i100 = zext i1 %cmp.i.i99 to i8
  %60 = ptrtoint ptr %45 to i32
  call void @__asan_store1_noabort(i32 %60)
  store i8 %conv1.i.i100, ptr %45, align 1
  %call2.i101 = call fastcc i32 @find_usage_forwards(ptr noundef nonnull %root.i74, i32 noundef %or.i79, ptr noundef nonnull %target_entry.i75) #28, !range !1545
  %cmp.i26.i102 = icmp slt i32 %call2.i101, 0
  br i1 %cmp.i26.i102, label %if.then.i103, label %if.end.i105

if.then.i103:                                     ; preds = %bfs_init_root.exit.i
  call fastcc void @print_bfs_bug(i32 noundef %call2.i101) #28
  br label %check_usage_forwards.exit.thread

if.end.i105:                                      ; preds = %bfs_init_root.exit.i
  %cmp.i104 = icmp eq i32 %call2.i101, 1
  br i1 %cmp.i104, label %check_usage_forwards.exit, label %if.end5.i110

if.end5.i110:                                     ; preds = %if.end.i105
  %61 = ptrtoint ptr %target_entry.i75 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %target_entry.i75, align 4
  %class.i106 = getelementptr inbounds %struct.lock_list, ptr %62, i32 0, i32 1
  %63 = ptrtoint ptr %class.i106 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %class.i106, align 4
  %usage_mask6.i107 = getelementptr inbounds %struct.lock_class, ptr %64, i32 0, i32 7
  %65 = ptrtoint ptr %usage_mask6.i107 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %usage_mask6.i107, align 4
  %and.i108 = and i32 %66, %shl.i
  %tobool.not.i109 = icmp eq i32 %and.i108, 0
  %shr.i30.i117 = lshr i32 %new_bit, 2
  br i1 %tobool.not.i109, label %if.else.i121, label %if.then8.i115

if.then8.i115:                                    ; preds = %if.end5.i110
  %arrayidx2.i.i113 = getelementptr [2 x ptr], ptr @state_names, i32 0, i32 %shr.i30.i117
  %67 = ptrtoint ptr %arrayidx2.i.i113 to i32
  call void @__asan_load4_noabort(i32 %67)
  %retval.0.i.i114 = load ptr, ptr %arrayidx2.i.i113, align 4
  call fastcc void @print_irq_inversion_bug(ptr noundef %curr, ptr noundef nonnull %root.i74, ptr noundef %62, ptr noundef %this, i32 noundef 1, ptr noundef %retval.0.i.i114) #28
  br label %check_usage_forwards.exit.thread

if.else.i121:                                     ; preds = %if.end5.i110
  %arrayidx.i31.i118 = getelementptr [2 x ptr], ptr @state_rnames, i32 0, i32 %shr.i30.i117
  %68 = ptrtoint ptr %arrayidx.i31.i118 to i32
  call void @__asan_load4_noabort(i32 %68)
  %retval.0.i34.i120 = load ptr, ptr %arrayidx.i31.i118, align 4
  call fastcc void @print_irq_inversion_bug(ptr noundef %curr, ptr noundef nonnull %root.i74, ptr noundef %62, ptr noundef %this, i32 noundef 1, ptr noundef %retval.0.i34.i120) #28
  br label %check_usage_forwards.exit.thread

check_usage_forwards.exit.thread:                 ; preds = %if.else.i121, %if.then8.i115, %if.then.i103
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %target_entry.i75) #28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %root.i74) #28
  br label %cleanup

check_usage_forwards.exit:                        ; preds = %if.end.i105
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %target_entry.i75) #28
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %root.i74) #28
  br label %if.end18

if.end18:                                         ; preds = %check_usage_forwards.exit, %check_usage_backwards.exit
  %69 = ptrtoint ptr %class_idx1.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %bf.load.i = load i32, ptr %class_idx1.i.i, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 19
  call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i = lshr i32 %bf.load.i, 24
  %arrayidx.i.i123 = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i
  %70 = ptrtoint ptr %arrayidx.i.i123 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load volatile i32, ptr %arrayidx.i.i123, align 4
  %and.i.i = and i32 %bf.lshr.i, 31
  %72 = shl nuw i32 1, %and.i.i
  %73 = and i32 %72, %71
  %tobool.not.i124 = icmp eq i32 %73, 0
  br i1 %tobool.not.i124, label %if.then.i125, label %if.end33.i

if.then.i125:                                     ; preds = %if.end18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %74 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i = icmp eq i32 %74, 0
  br i1 %tobool2.not.i, label %do.end.i, label %hlock_class.exit

do.end.i:                                         ; preds = %if.then.i125
  %call4.i = call i32 @debug_locks_off() #28
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %hlock_class.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.end.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %75 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i = icmp eq i32 %75, 0
  br i1 %tobool6.not.i, label %do.end15.i, label %hlock_class.exit

do.end15.i:                                       ; preds = %land.lhs.true.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit

if.end33.i:                                       ; preds = %if.end18
  %add.ptr.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i
  br label %hlock_class.exit

hlock_class.exit:                                 ; preds = %if.end33.i, %do.end15.i, %land.lhs.true.i, %do.end.i, %if.then.i125
  %retval.0.i126 = phi ptr [ %add.ptr.i, %if.end33.i ], [ null, %do.end15.i ], [ null, %land.lhs.true.i ], [ null, %do.end.i ], [ null, %if.then.i125 ]
  %shr.i = lshr i32 %new_bit, 2
  %arrayidx.i = getelementptr [2 x ptr], ptr @state_verbose_f, i32 0, i32 %shr.i
  %76 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %arrayidx.i, align 4
  %call.i = call i32 %77(ptr noundef %retval.0.i126) #28
  %tobool21.not = icmp eq i32 %call.i, 0
  %. = select i1 %tobool21.not, i32 1, i32 2
  br label %cleanup

cleanup:                                          ; preds = %hlock_class.exit, %check_usage_forwards.exit.thread, %check_usage_backwards.exit.thread, %valid_state.exit66.thread, %valid_state.exit.thread
  %retval.0 = phi i32 [ %., %hlock_class.exit ], [ 0, %valid_state.exit.thread ], [ 0, %valid_state.exit66.thread ], [ 0, %check_usage_backwards.exit.thread ], [ 0, %check_usage_forwards.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_lock(ptr nocapture noundef readonly %hlock) unnamed_addr #0 align 64 {
entry:
  %class_idx1.i = getelementptr inbounds %struct.held_lock, ptr %hlock, i32 0, i32 6
  %0 = ptrtoint ptr %class_idx1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load.i = load i32, ptr %class_idx1.i, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i = lshr i32 %bf.load.i, 24
  %arrayidx.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i
  %1 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %bf.lshr.i, 31
  %3 = shl nuw i32 1, %and.i.i
  %4 = and i32 %3, %2
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.then.i, label %hlock_class.exit

if.then.i:                                        ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %5 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i = icmp eq i32 %5, 0
  br i1 %tobool2.not.i, label %do.end.i, label %do.end

do.end.i:                                         ; preds = %if.then.i
  %call4.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %do.end, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.end.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %6 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i = icmp eq i32 %6, 0
  br i1 %tobool6.not.i, label %do.end15.i, label %do.end

do.end15.i:                                       ; preds = %land.lhs.true.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %do.end

hlock_class.exit:                                 ; preds = %entry
  %add.ptr.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i
  %tobool.not = icmp eq ptr %add.ptr.i, null
  br i1 %tobool.not, label %do.end, label %do.end4

do.end:                                           ; preds = %hlock_class.exit, %do.end15.i, %land.lhs.true.i, %do.end.i, %if.then.i
  %call1 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.336) #32
  br label %cleanup

do.end4:                                          ; preds = %hlock_class.exit
  %instance = getelementptr inbounds %struct.held_lock, ptr %hlock, i32 0, i32 2
  %7 = ptrtoint ptr %instance to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %instance, align 4
  %call6 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.339, ptr noundef %8) #32
  tail call fastcc void @print_lock_name(ptr noundef nonnull %add.ptr.i)
  %acquire_ip = getelementptr inbounds %struct.held_lock, ptr %hlock, i32 0, i32 1
  %9 = ptrtoint ptr %acquire_ip to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %acquire_ip, align 8
  %11 = inttoptr i32 %10 to ptr
  %call11 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.342, ptr noundef %11) #32
  br label %cleanup

cleanup:                                          ; preds = %do.end4, %do.end
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_lockdep_off(ptr noundef %bug_msg) unnamed_addr #0 align 64 {
entry:
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.198, ptr noundef %bug_msg) #32
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.201) #32
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.204) #32
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @stack_trace_save(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_usage_bug(ptr noundef %curr, ptr nocapture noundef readonly %this, i32 noundef %prev_bit, i32 noundef %new_bit) unnamed_addr #0 align 64 {
entry:
  %call = tail call i32 @debug_locks_off() #28
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %0 = load i32, ptr @debug_locks_silent, align 4
  %tobool1.not = icmp eq i32 %0, 0
  br i1 %tobool1.not, label %do.end, label %return

do.end:                                           ; preds = %lor.lhs.false
  %call2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.89) #32
  %call6 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.208) #32
  %call10 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.211) #32
  %call3.i = tail call i32 @strcspn(ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef nonnull @.str.766) #28
  %call7.i = tail call ptr @print_tainted() #28
  %call8.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.764, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 2), i32 noundef %call3.i, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef %call7.i) #32
  %call14 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.214) #32
  %arrayidx = getelementptr [11 x ptr], ptr @usage_str, i32 0, i32 %prev_bit
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %arrayidx, align 4
  %arrayidx18 = getelementptr [11 x ptr], ptr @usage_str, i32 0, i32 %new_bit
  %3 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %arrayidx18, align 4
  %call19 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.217, ptr noundef %2, ptr noundef %4) #32
  %comm = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 101
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 68
  %5 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %pid.i, align 8
  %7 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx34 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx34 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx34, align 4
  %add = add i32 %12, ptrtoint (ptr @hardirq_context to i32)
  %13 = inttoptr i32 %add to ptr
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i, align 4
  %and = lshr i32 %17, 16
  %shr = and i32 %and, 15
  %softirq_context = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 139
  %18 = ptrtoint ptr %softirq_context to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %softirq_context, align 4
  %20 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i97 = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i97 to ptr
  %preempt_count.i98 = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i98 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i98, align 4
  %and38 = lshr i32 %23, 8
  %shr39 = and i32 %and38, 255
  %24 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %27, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1556
  %28 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %cpu, align 4
  %arrayidx61 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %29
  %30 = ptrtoint ptr %arrayidx61 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %arrayidx61, align 4
  %add62 = add i32 %31, ptrtoint (ptr @hardirqs_enabled to i32)
  %32 = inttoptr i32 %add62 to ptr
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %32, align 4
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1557
  %35 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i99 = and i32 %35, -16384
  %36 = inttoptr i32 %and.i.i.i99 to ptr
  %preempt_count.i.i100 = getelementptr inbounds %struct.thread_info, ptr %36, i32 0, i32 1
  %37 = ptrtoint ptr %preempt_count.i.i100 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %preempt_count.i.i100, align 4
  %sub.i = add i32 %38, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i100, align 4
  %softirqs_enabled = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 138
  %39 = ptrtoint ptr %softirqs_enabled to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %softirqs_enabled, align 32
  %call69 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.220, ptr noundef %comm, i32 noundef %6, i32 noundef %15, i32 noundef %shr, i32 noundef %19, i32 noundef %shr39, i32 noundef %34, i32 noundef %40) #32
  tail call fastcc void @print_lock(ptr noundef %this)
  %call75 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.223, ptr noundef %2) #32
  %class_idx1.i = getelementptr inbounds %struct.held_lock, ptr %this, i32 0, i32 6
  %41 = ptrtoint ptr %class_idx1.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %bf.load.i = load i32, ptr %class_idx1.i, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i = lshr i32 %bf.load.i, 24
  %arrayidx.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i
  %42 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i101 = and i32 %bf.lshr.i, 31
  %44 = shl nuw i32 1, %and.i.i101
  %45 = and i32 %44, %43
  %tobool.not.i = icmp eq i32 %45, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end33.i

if.then.i:                                        ; preds = %do.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %46 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i = icmp eq i32 %46, 0
  br i1 %tobool2.not.i, label %do.end.i, label %hlock_class.exit

do.end.i:                                         ; preds = %if.then.i
  %call4.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %hlock_class.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.end.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %47 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i = icmp eq i32 %47, 0
  br i1 %tobool6.not.i, label %do.end15.i, label %hlock_class.exit

do.end15.i:                                       ; preds = %land.lhs.true.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit

if.end33.i:                                       ; preds = %do.end
  %add.ptr.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i
  br label %hlock_class.exit

hlock_class.exit:                                 ; preds = %if.end33.i, %do.end15.i, %land.lhs.true.i, %do.end.i, %if.then.i
  %retval.0.i = phi ptr [ %add.ptr.i, %if.end33.i ], [ null, %do.end15.i ], [ null, %land.lhs.true.i ], [ null, %do.end.i ], [ null, %if.then.i ]
  %arrayidx77 = getelementptr %struct.lock_class, ptr %retval.0.i, i32 0, i32 8, i32 %prev_bit
  %48 = ptrtoint ptr %arrayidx77 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %arrayidx77, align 4
  %entries.i = getelementptr inbounds %struct.lock_trace, ptr %49, i32 0, i32 3
  %nr_entries.i = getelementptr inbounds %struct.lock_trace, ptr %49, i32 0, i32 2
  %50 = ptrtoint ptr %nr_entries.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %nr_entries.i, align 4
  tail call void @stack_trace_print(ptr noundef %entries.i, i32 noundef %51, i32 noundef 1) #28
  %irqtrace.i = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 135
  %52 = ptrtoint ptr %irqtrace.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %irqtrace.i, align 4
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.17, i32 noundef %53) #32
  %hardirq_enable_event.i = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 135, i32 3
  %54 = ptrtoint ptr %hardirq_enable_event.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %hardirq_enable_event.i, align 4
  %hardirq_enable_ip.i = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 135, i32 1
  %56 = ptrtoint ptr %hardirq_enable_ip.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %hardirq_enable_ip.i, align 4
  %58 = inttoptr i32 %57 to ptr
  %call6.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.20, i32 noundef %55, ptr noundef %58, ptr noundef %58) #32
  %hardirq_disable_event.i = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 135, i32 4
  %59 = ptrtoint ptr %hardirq_disable_event.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %hardirq_disable_event.i, align 4
  %hardirq_disable_ip.i = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 135, i32 2
  %61 = ptrtoint ptr %hardirq_disable_ip.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %hardirq_disable_ip.i, align 4
  %63 = inttoptr i32 %62 to ptr
  %call12.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.23, i32 noundef %60, ptr noundef %63, ptr noundef %63) #32
  %softirq_enable_event.i = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 135, i32 8
  %64 = ptrtoint ptr %softirq_enable_event.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %softirq_enable_event.i, align 4
  %softirq_enable_ip.i = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 135, i32 6
  %66 = ptrtoint ptr %softirq_enable_ip.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %softirq_enable_ip.i, align 4
  %68 = inttoptr i32 %67 to ptr
  %call18.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.26, i32 noundef %65, ptr noundef %68, ptr noundef %68) #32
  %softirq_disable_event.i = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 135, i32 7
  %69 = ptrtoint ptr %softirq_disable_event.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %softirq_disable_event.i, align 4
  %softirq_disable_ip.i = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 135, i32 5
  %71 = ptrtoint ptr %softirq_disable_ip.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %softirq_disable_ip.i, align 4
  %73 = inttoptr i32 %72 to ptr
  %call24.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.29, i32 noundef %70, ptr noundef %73, ptr noundef %73) #32
  %call82 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.226) #32
  %74 = ptrtoint ptr %class_idx1.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %bf.load.i.i = load i32, ptr %class_idx1.i, align 8
  %bf.lshr.i.i = lshr i32 %bf.load.i.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i.i = lshr i32 %bf.load.i.i, 24
  %arrayidx.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i.i
  %75 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i102 = and i32 %bf.lshr.i.i, 31
  %77 = shl nuw i32 1, %and.i.i.i102
  %78 = and i32 %77, %76
  %tobool.not.i.i = icmp eq i32 %78, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.end33.i.i

if.then.i.i:                                      ; preds = %hlock_class.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %79 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i.i = icmp eq i32 %79, 0
  br i1 %tobool2.not.i.i, label %do.end.i.i, label %print_usage_bug_scenario.exit

do.end.i.i:                                       ; preds = %if.then.i.i
  %call4.i.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %print_usage_bug_scenario.exit, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %do.end.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %80 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i.i = icmp eq i32 %80, 0
  br i1 %tobool6.not.i.i, label %do.end15.i.i, label %print_usage_bug_scenario.exit

do.end15.i.i:                                     ; preds = %land.lhs.true.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %print_usage_bug_scenario.exit

if.end33.i.i:                                     ; preds = %hlock_class.exit
  %add.ptr.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i.i
  br label %print_usage_bug_scenario.exit

print_usage_bug_scenario.exit:                    ; preds = %if.end33.i.i, %do.end15.i.i, %land.lhs.true.i.i, %do.end.i.i, %if.then.i.i
  %retval.0.i.i = phi ptr [ %add.ptr.i.i, %if.end33.i.i ], [ null, %do.end15.i.i ], [ null, %land.lhs.true.i.i ], [ null, %do.end.i.i ], [ null, %if.then.i.i ]
  %call1.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.230) #32
  %call6.i103 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.233) #32
  %call11.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.236) #32
  %call16.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.239) #32
  tail call fastcc void @__print_lock_name(ptr noundef %retval.0.i.i) #28
  %call21.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.242) #32
  %call26.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.245) #32
  %call31.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.248) #32
  tail call fastcc void @__print_lock_name(ptr noundef %retval.0.i.i) #28
  %call36.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.242) #32
  %call41.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.253) #32
  tail call fastcc void @lockdep_print_held_locks(ptr noundef %curr)
  %call87 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134) #32
  tail call void @dump_stack() #32
  br label %return

return:                                           ; preds = %print_usage_bug_scenario.exit, %lor.lhs.false, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @find_usage_backwards(ptr noundef %root, i32 noundef %usage_mask, ptr nocapture noundef writeonly %target_entry) unnamed_addr #0 align 64 {
entry:
  %__next.i.i = alloca ptr, align 4
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i = and i32 %0, 128
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %land.rhs, label %if.end43

land.rhs:                                         ; preds = %entry
  %.b71 = load i1, ptr @find_usage_backwards.__already_done, align 1
  br i1 %.b71, label %if.end43, label %if.then, !prof !1500

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @find_usage_backwards.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2287, i32 noundef 9, ptr noundef null) #28
  br label %if.end43

if.end43:                                         ; preds = %if.then, %land.rhs, %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i72 = and i32 %1, -16384
  %2 = inttoptr i32 %and.i72 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %4
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx, align 4
  %add = add i32 %6, ptrtoint (ptr getelementptr inbounds (%struct.lockdep_stats, ptr @lockdep_stats, i32 0, i32 15) to i32)
  %7 = inttoptr i32 %add to ptr
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add63 = add i32 %9, 1
  store i32 %add63, ptr %7, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %10 = load i32, ptr @oops_in_progress, align 4
  %tobool.not.i.i = icmp eq i32 %10, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %__cq_enqueue.exit.i

land.lhs.true.i.i:                                ; preds = %if.end43
  %11 = load ptr, ptr @__owner, align 4
  %12 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i.i, align 8
  %cmp.not.i.i = icmp eq ptr %11, %15
  br i1 %cmp.not.i.i, label %__cq_enqueue.exit.i, label %do.end.i.i, !prof !1500

do.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call3.i.i = tail call i32 @debug_locks_off() #28
  %tobool4.not.i.i = icmp eq i32 %call3.i.i, 0
  br i1 %tobool4.not.i.i, label %__cq_enqueue.exit.i, label %land.lhs.true5.i.i

land.lhs.true5.i.i:                               ; preds = %do.end.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %16 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i.i = icmp eq i32 %16, 0
  br i1 %tobool6.not.i.i, label %do.end19.i.i, label %__cq_enqueue.exit.i

do.end19.i.i:                                     ; preds = %land.lhs.true5.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 131, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.147) #28
  br label %__cq_enqueue.exit.i

__cq_enqueue.exit.i:                              ; preds = %do.end19.i.i, %land.lhs.true5.i.i, %do.end.i.i, %land.lhs.true.i.i, %if.end43
  store i32 0, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 1), align 4
  %17 = load i32, ptr @lockdep_dependency_gen_id, align 4
  %inc.i.i = add i32 %17, 1
  store i32 %inc.i.i, ptr @lockdep_dependency_gen_id, align 4
  store ptr %root, ptr @lock_cq, align 4
  store i32 1, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 2), align 4
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i.backedge, %__cq_enqueue.exit.i
  %lock.0.i = phi ptr [ null, %__cq_enqueue.exit.i ], [ %lock.1.i, %while.cond.i.backedge ]
  %tobool.not.i110.i = icmp eq ptr %lock.0.i, null
  br i1 %tobool.not.i110.i, label %lor.rhs.i, label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %while.cond.i
  %parent.i.i = getelementptr inbounds %struct.lock_list, ptr %lock.0.i, i32 0, i32 7
  %18 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %parent.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %19, null
  br i1 %tobool1.not.i.i, label %lor.rhs.i, label %if.end.i112.i

if.end.i112.i:                                    ; preds = %lor.lhs.false.i.i
  %class.i.i.i = getelementptr inbounds %struct.lock_list, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %class.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %class.i.i.i, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %21, i32 24
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__next.i.i)
  %22 = ptrtoint ptr %lock.0.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile ptr, ptr %lock.0.i, align 4
  %24 = ptrtoint ptr %__next.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %23, ptr %__next.i.i, align 4
  %cmp.not.i111.i = icmp eq ptr %23, %add.ptr.i.i.i
  br i1 %cmp.not.i111.i, label %__bfs_next.exit.thread135.i, label %__bfs_next.exit.i, !prof !1501

__bfs_next.exit.thread135.i:                      ; preds = %if.end.i112.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__next.i.i)
  br label %lor.rhs.i

__bfs_next.exit.i:                                ; preds = %if.end.i112.i
  %25 = ptrtoint ptr %__next.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %__next.i.i.0.__next.i.i.0.__next.i.0.__next.i.0.__next.0.__next.0.__next.0.12.i.i = load volatile ptr, ptr %__next.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__next.i.i)
  %tobool.not.i = icmp eq ptr %__next.i.i.0.__next.i.i.0.__next.i.0.__next.i.0.__next.0.__next.0.__next.0.12.i.i, null
  br i1 %tobool.not.i, label %lor.rhs.i, label %while.body.i

lor.rhs.i:                                        ; preds = %__bfs_next.exit.i, %__bfs_next.exit.thread135.i, %lor.lhs.false.i.i, %while.cond.i
  %26 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 1), align 4
  %27 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 2), align 4
  %cmp.i.not.i114.i = icmp eq i32 %26, %27
  br i1 %cmp.i.not.i114.i, label %__bfs.exit, label %__cq_dequeue.exit.i

__cq_dequeue.exit.i:                              ; preds = %lor.rhs.i
  %arrayidx.i115.i = getelementptr [4096 x ptr], ptr @lock_cq, i32 0, i32 %26
  %28 = ptrtoint ptr %arrayidx.i115.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx.i115.i, align 4
  %add.i116.i = add i32 %26, 1
  %and.i117.i = and i32 %add.i116.i, 4095
  store i32 %and.i117.i, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 1), align 4
  %tobool5.not.i = icmp eq ptr %29, null
  br i1 %tobool5.not.i, label %__bfs.exit, label %while.body.i

while.body.i:                                     ; preds = %__cq_dequeue.exit.i, %__bfs_next.exit.i
  %lock.1.i = phi ptr [ %__next.i.i.0.__next.i.i.0.__next.i.0.__next.i.0.__next.0.__next.0.__next.0.12.i.i, %__bfs_next.exit.i ], [ %29, %__cq_dequeue.exit.i ]
  %class.i = getelementptr inbounds %struct.lock_list, ptr %lock.1.i, i32 0, i32 1
  %30 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %class.i, align 4
  %tobool6.not.i = icmp eq ptr %31, null
  br i1 %tobool6.not.i, label %__bfs.exit, label %if.end.i

if.end.i:                                         ; preds = %while.body.i
  %dep_gen_id.i.i = getelementptr inbounds %struct.lock_class, ptr %31, i32 0, i32 6
  %32 = ptrtoint ptr %dep_gen_id.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %dep_gen_id.i.i, align 4
  %34 = load i32, ptr @lockdep_dependency_gen_id, align 4
  %cmp.i.not.i = icmp eq i32 %33, %34
  br i1 %cmp.i.not.i, label %while.cond.i.backedge, label %if.else.i

if.else.i:                                        ; preds = %if.end.i
  %35 = ptrtoint ptr %dep_gen_id.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %dep_gen_id.i.i, align 4
  %parent.i = getelementptr inbounds %struct.lock_list, ptr %lock.1.i, i32 0, i32 7
  %36 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %parent.i, align 4
  %tobool11.not.i = icmp eq ptr %37, null
  br i1 %tobool11.not.i, label %if.end29.i, label %if.then12.i

if.then12.i:                                      ; preds = %if.else.i
  %dep13.i = getelementptr inbounds %struct.lock_list, ptr %lock.1.i, i32 0, i32 5
  %38 = ptrtoint ptr %dep13.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %dep13.i, align 2
  %only_xr.i = getelementptr inbounds %struct.lock_list, ptr %37, i32 0, i32 6
  %40 = ptrtoint ptr %only_xr.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %only_xr.i, align 1
  %tobool15.not.i = icmp eq i8 %41, 0
  %42 = and i8 %39, -6
  %spec.select.i = select i1 %tobool15.not.i, i8 %39, i8 %42
  %tobool20.not.i = icmp eq i8 %spec.select.i, 0
  br i1 %tobool20.not.i, label %while.cond.i.backedge, label %cleanup.thread.i

cleanup.thread.i:                                 ; preds = %if.then12.i
  %43 = and i8 %spec.select.i, 12
  %tobool25.not.i = icmp eq i8 %43, 0
  %conv26.i = zext i1 %tobool25.not.i to i8
  %only_xr27.i = getelementptr inbounds %struct.lock_list, ptr %lock.1.i, i32 0, i32 6
  %44 = ptrtoint ptr %only_xr27.i to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 %conv26.i, ptr %only_xr27.i, align 1
  br label %if.end29.i

if.end29.i:                                       ; preds = %cleanup.thread.i, %if.else.i
  %45 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %class.i, align 4
  %lock_type.i = getelementptr inbounds %struct.lock_class, ptr %46, i32 0, i32 13
  %47 = ptrtoint ptr %lock_type.i to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %lock_type.i, align 2
  %cmp.i = icmp eq i8 %48, 1
  br i1 %cmp.i, label %if.then.i80, label %if.end34.i

if.then.i80:                                      ; preds = %if.end29.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %49 = load i32, ptr @oops_in_progress, align 4
  %tobool.not.i79 = icmp eq i32 %49, 0
  br i1 %tobool.not.i79, label %land.lhs.true.i, label %while.cond.i.backedge

land.lhs.true.i:                                  ; preds = %if.then.i80
  %wait_type_inner.i = getelementptr inbounds %struct.lock_class, ptr %46, i32 0, i32 11
  %50 = ptrtoint ptr %wait_type_inner.i to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %wait_type_inner.i, align 4
  %cmp5.i = icmp ult i8 %51, 3
  br i1 %cmp5.i, label %do.end.i81, label %while.cond.i.backedge, !prof !1501

while.cond.i.backedge:                            ; preds = %for.inc.i, %do.end.i, %land.lhs.true.i, %if.then.i80, %if.then12.i, %if.end.i
  br label %while.cond.i

do.end.i81:                                       ; preds = %land.lhs.true.i
  %call.i = tail call i32 @debug_locks_off() #28
  %tobool10.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool10.not.i, label %if.end34.i, label %land.lhs.true11.i

land.lhs.true11.i:                                ; preds = %do.end.i81
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %52 = load i32, ptr @debug_locks_silent, align 4
  %tobool12.not.i = icmp eq i32 %52, 0
  br i1 %tobool12.not.i, label %do.end25.i, label %if.end34.i

do.end25.i:                                       ; preds = %land.lhs.true11.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2248, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.255) #28
  br label %if.end34.i

if.end34.i:                                       ; preds = %do.end25.i, %land.lhs.true11.i, %do.end.i81, %if.end29.i
  %only_xr.i73 = getelementptr inbounds %struct.lock_list, ptr %lock.1.i, i32 0, i32 6
  %53 = ptrtoint ptr %only_xr.i73 to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %only_xr.i73, align 1
  %tobool.not.i74 = icmp eq i8 %54, 0
  %55 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %class.i, align 4
  %usage_mask.i = getelementptr inbounds %struct.lock_class, ptr %56, i32 0, i32 7
  %57 = ptrtoint ptr %usage_mask.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %usage_mask.i, align 4
  %and6.i = and i32 %58, 85
  %spec.select = select i1 %tobool.not.i74, i32 %58, i32 %usage_mask
  %spec.select85 = select i1 %tobool.not.i74, i32 %usage_mask, i32 %and6.i
  %and7.i = and i32 %spec.select85, %spec.select
  %retval.0.i77.not = icmp eq i32 %and7.i, 0
  br i1 %retval.0.i77.not, label %if.end37.i, label %if.then36.i

if.then36.i:                                      ; preds = %if.end34.i
  %59 = ptrtoint ptr %target_entry to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr %lock.1.i, ptr %target_entry, align 4
  br label %__bfs.exit

if.end37.i:                                       ; preds = %if.end34.i
  %add.ptr.i.i = getelementptr i8, ptr %56, i32 24
  %call39.i = tail call i32 @rcu_read_lock_any_held() #28
  %tobool40.not.i = icmp eq i32 %call39.i, 0
  br i1 %tobool40.not.i, label %land.lhs.true41.i, label %do.end.i

land.lhs.true41.i:                                ; preds = %if.end37.i
  %call42.i = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool43.not.i = icmp eq i32 %call42.i, 0
  br i1 %tobool43.not.i, label %do.end.i, label %land.lhs.true44.i

land.lhs.true44.i:                                ; preds = %land.lhs.true41.i
  %.b108.i = load i1, ptr @__bfs.__warned, align 1
  br i1 %.b108.i, label %do.end.i, label %if.then46.i

if.then46.i:                                      ; preds = %land.lhs.true44.i
  store i1 true, ptr @__bfs.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1770, ptr noundef nonnull @.str.1) #28
  br label %do.end.i

do.end.i:                                         ; preds = %if.then46.i, %land.lhs.true44.i, %land.lhs.true41.i, %if.end37.i
  %60 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %entry1.0146.i = load volatile ptr, ptr %add.ptr.i.i, align 4
  %cmp.not147.i = icmp eq ptr %entry1.0146.i, %add.ptr.i.i
  br i1 %cmp.not147.i, label %while.cond.i.backedge, label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %do.end.i
  %entry1.0149.i = phi ptr [ %entry1.0.i, %for.inc.i ], [ %entry1.0146.i, %do.end.i ]
  %first.0.off0148.i = phi i1 [ false, %for.inc.i ], [ true, %do.end.i ]
  %parent1.i.i = getelementptr inbounds %struct.lock_list, ptr %entry1.0149.i, i32 0, i32 7
  %61 = ptrtoint ptr %parent1.i.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %lock.1.i, ptr %parent1.i.i, align 4
  br i1 %first.0.off0148.i, label %if.end56.i, label %for.inc.i

if.end56.i:                                       ; preds = %for.body.i
  %62 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 2), align 4
  %add.i.i123.i = add i32 %62, 1
  %and.i.i124.i = and i32 %add.i.i123.i, 4095
  %63 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 1), align 4
  %cmp.i.not.i125.i = icmp eq i32 %and.i.i124.i, %63
  br i1 %cmp.i.not.i125.i, label %__bfs.exit, label %if.end60.i

if.end60.i:                                       ; preds = %if.end56.i
  %arrayidx.i126.i = getelementptr [4096 x ptr], ptr @lock_cq, i32 0, i32 %62
  %64 = ptrtoint ptr %arrayidx.i126.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr %entry1.0149.i, ptr %arrayidx.i126.i, align 4
  %65 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 2), align 4
  %add.i127.i = add i32 %65, 1
  %and.i128.i = and i32 %add.i127.i, 4095
  store i32 %and.i128.i, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 2), align 4
  %66 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 1), align 4
  %sub.i.i = sub i32 %add.i127.i, %66
  %and.i132.i = and i32 %sub.i.i, 4095
  %67 = load i32, ptr @max_bfs_queue_depth, align 4
  %cmp62.i = icmp ult i32 %67, %and.i132.i
  br i1 %cmp62.i, label %if.then64.i, label %for.inc.i

if.then64.i:                                      ; preds = %if.end60.i
  store i32 %and.i132.i, ptr @max_bfs_queue_depth, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then64.i, %if.end60.i, %for.body.i
  %68 = ptrtoint ptr %entry1.0149.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %entry1.0.i = load volatile ptr, ptr %entry1.0149.i, align 4
  %cmp.not.i = icmp eq ptr %entry1.0.i, %add.ptr.i.i
  br i1 %cmp.not.i, label %while.cond.i.backedge, label %for.body.i

__bfs.exit:                                       ; preds = %if.end56.i, %if.then36.i, %while.body.i, %__cq_dequeue.exit.i, %lor.rhs.i
  %retval.0.i = phi i32 [ 0, %if.then36.i ], [ -1, %if.end56.i ], [ -2, %while.body.i ], [ 1, %__cq_dequeue.exit.i ], [ 1, %lor.rhs.i ]
  ret i32 %retval.0.i
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_bfs_bug(i32 noundef %ret) unnamed_addr #23 align 64 {
entry:
  %call.i = tail call i32 @debug_locks_off() #28
  tail call fastcc void @lockdep_unlock() #28
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %return, label %do.end

do.end:                                           ; preds = %entry
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2032, i32 noundef 9, ptr noundef nonnull @.str.256, i32 noundef %ret) #28
  br label %return

return:                                           ; preds = %do.end, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_irq_inversion_bug(ptr noundef %curr, ptr noundef %root, ptr noundef %other, ptr nocapture noundef readonly %this, i32 noundef %forwards, ptr noundef %irqclass) unnamed_addr #0 align 64 {
entry:
  %call.i = tail call i32 @debug_locks_off() #28
  tail call fastcc void @lockdep_unlock() #28
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %0 = load i32, ptr @debug_locks_silent, align 4
  %tobool2.not = icmp eq i32 %0, 0
  br i1 %tobool2.not, label %do.end, label %cleanup

do.end:                                           ; preds = %lor.lhs.false
  %call3 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.89) #32
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.259) #32
  %call13 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.262) #32
  %call3.i = tail call i32 @strcspn(ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef nonnull @.str.766) #28
  %call7.i = tail call ptr @print_tainted() #28
  %call8.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.764, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 2), i32 noundef %call3.i, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef %call7.i) #32
  %call18 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.265) #32
  %comm = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 101
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 68
  %1 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %pid.i, align 8
  %call24 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.268, ptr noundef %comm, i32 noundef %2) #32
  tail call fastcc void @print_lock(ptr noundef %this)
  %tobool25.not = icmp eq i32 %forwards, 0
  %.str.274..str.271 = select i1 %tobool25.not, ptr @.str.274, ptr @.str.271
  %call36 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull %.str.274..str.271, ptr noundef %irqclass) #32
  %class = getelementptr inbounds %struct.lock_list, ptr %other, i32 0, i32 1
  %3 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %class, align 4
  tail call fastcc void @print_lock_name(ptr noundef %4)
  %call42 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.277) #32
  %call47 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.226) #32
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i, %do.end
  %child.addr.0.i = phi ptr [ %other, %do.end ], [ %6, %while.cond.i ]
  %depth.0.i = phi i32 [ 0, %do.end ], [ %inc.i, %while.cond.i ]
  %parent.i.i = getelementptr inbounds %struct.lock_list, ptr %child.addr.0.i, i32 0, i32 7
  %5 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %parent.i.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  %inc.i = add i32 %depth.0.i, 1
  br i1 %tobool.not.i, label %do.body49.preheader, label %while.cond.i

do.body49.preheader:                              ; preds = %while.cond.i
  %cmp131 = icmp ne i32 %depth.0.i, 0
  %cmp50.not132 = icmp eq ptr %other, %root
  %or.cond133 = or i1 %cmp131, %cmp50.not132
  br i1 %or.cond133, label %if.end57, label %do.end54

do.body49:                                        ; preds = %if.end57
  %cmp.not = icmp eq i32 %dec, 0
  br i1 %cmp.not, label %do.end54, label %if.end57

do.end54:                                         ; preds = %do.body49, %do.body49.preheader
  %middle.0.lcssa = phi ptr [ null, %do.body49.preheader ], [ %entry1.0135, %do.body49 ]
  %call56 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.282, ptr noundef nonnull @.str.257) #32
  br label %do.end64

if.end57:                                         ; preds = %do.body49, %do.body49.preheader
  %entry1.0135 = phi ptr [ %8, %do.body49 ], [ %other, %do.body49.preheader ]
  %depth.0134 = phi i32 [ %dec, %do.body49 ], [ %depth.0.i, %do.body49.preheader ]
  %parent.i = getelementptr inbounds %struct.lock_list, ptr %entry1.0135, i32 0, i32 7
  %7 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %parent.i, align 4
  %dec = add i32 %depth.0134, -1
  %tobool60.not = icmp ne ptr %8, null
  %cmp62.not = icmp ne ptr %8, %root
  %or.cond127.not = and i1 %tobool60.not, %cmp62.not
  %cmp63 = icmp sgt i32 %dec, -1
  %or.cond128 = select i1 %or.cond127.not, i1 %cmp63, i1 false
  br i1 %or.cond128, label %do.body49, label %do.end64

do.end64:                                         ; preds = %if.end57, %do.end54
  %middle.1 = phi ptr [ %middle.0.lcssa, %do.end54 ], [ %entry1.0135, %if.end57 ]
  %tobool72.not = icmp eq ptr %middle.1, null
  br i1 %tobool25.not, label %if.else71, label %if.then66

if.then66:                                        ; preds = %do.end64
  %root.middle.1 = select i1 %tobool72.not, ptr %root, ptr %middle.1
  %cond.in = getelementptr inbounds %struct.lock_list, ptr %root.middle.1, i32 0, i32 1
  %9 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %9)
  %cond = load ptr, ptr %cond.in, align 4
  %10 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %class, align 4
  tail call fastcc void @print_irq_lock_scenario(ptr noundef %root, ptr noundef %other, ptr noundef %cond, ptr noundef %11)
  br label %if.end80

if.else71:                                        ; preds = %do.end64
  %class74 = getelementptr inbounds %struct.lock_list, ptr %middle.1, i32 0, i32 1
  %cond78.in = select i1 %tobool72.not, ptr %class, ptr %class74
  %12 = ptrtoint ptr %cond78.in to i32
  call void @__asan_load4_noabort(i32 %12)
  %cond78 = load ptr, ptr %cond78.in, align 4
  %class79 = getelementptr inbounds %struct.lock_list, ptr %root, i32 0, i32 1
  %13 = ptrtoint ptr %class79 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %class79, align 4
  tail call fastcc void @print_irq_lock_scenario(ptr noundef %other, ptr noundef %root, ptr noundef %cond78, ptr noundef %14)
  br label %if.end80

if.end80:                                         ; preds = %if.else71, %if.then66
  tail call fastcc void @lockdep_print_held_locks(ptr noundef %curr)
  %call85 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.285) #32
  %call86 = tail call fastcc ptr @save_trace()
  %trace = getelementptr inbounds %struct.lock_list, ptr %root, i32 0, i32 3
  %15 = ptrtoint ptr %trace to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %call86, ptr %trace, align 4
  %tobool88.not = icmp eq ptr %call86, null
  br i1 %tobool88.not, label %cleanup, label %if.end90

if.end90:                                         ; preds = %if.end80
  tail call void @print_shortest_lock_dependencies(ptr noundef %other, ptr noundef %root)
  %call95 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134) #32
  tail call void @dump_stack() #32
  br label %cleanup

cleanup:                                          ; preds = %if.end90, %if.end80, %lor.lhs.false, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_irq_lock_scenario(ptr nocapture noundef readonly %safe_entry, ptr nocapture noundef readonly %unsafe_entry, ptr noundef readonly %prev_class, ptr noundef readonly %next_class) unnamed_addr #0 align 64 {
entry:
  %class = getelementptr inbounds %struct.lock_list, ptr %safe_entry, i32 0, i32 1
  %0 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %class, align 4
  %class1 = getelementptr inbounds %struct.lock_list, ptr %unsafe_entry, i32 0, i32 1
  %2 = ptrtoint ptr %class1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %class1, align 4
  %cmp = icmp eq ptr %1, %prev_class
  %spec.select = select i1 %cmp, ptr %next_class, ptr %prev_class
  %cmp2.not = icmp eq ptr %spec.select, %3
  br i1 %cmp2.not, label %do.end22, label %do.end

do.end:                                           ; preds = %entry
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.289) #32
  tail call fastcc void @__print_lock_name(ptr noundef %1)
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.292) #32
  tail call fastcc void @__print_lock_name(ptr noundef %spec.select)
  %call13 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.292) #32
  tail call fastcc void @__print_lock_name(ptr noundef %3)
  %call18 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.297) #32
  br label %do.end22

do.end22:                                         ; preds = %do.end, %entry
  %call24 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.300) #32
  %call29 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.303) #32
  %call34 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.306) #32
  %call39 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.239) #32
  tail call fastcc void @__print_lock_name(ptr noundef %3)
  %call44 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.242) #32
  %call49 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.313) #32
  %call54 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.316) #32
  tail call fastcc void @__print_lock_name(ptr noundef %1)
  %call59 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.242) #32
  %call64 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.316) #32
  tail call fastcc void @__print_lock_name(ptr noundef %spec.select)
  %call69 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.242) #32
  %call74 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.245) #32
  %call79 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.248) #32
  tail call fastcc void @__print_lock_name(ptr noundef %1)
  %call84 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.242) #32
  %call89 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.253) #32
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @find_usage_forwards(ptr noundef %root, i32 noundef %usage_mask, ptr nocapture noundef writeonly %target_entry) unnamed_addr #0 align 64 {
entry:
  %__next.i.i = alloca ptr, align 4
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i = and i32 %0, 128
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %land.rhs, label %if.end43

land.rhs:                                         ; preds = %entry
  %.b71 = load i1, ptr @find_usage_forwards.__already_done, align 1
  br i1 %.b71, label %if.end43, label %if.then, !prof !1500

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @find_usage_forwards.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2270, i32 noundef 9, ptr noundef null) #28
  br label %if.end43

if.end43:                                         ; preds = %if.then, %land.rhs, %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i72 = and i32 %1, -16384
  %2 = inttoptr i32 %and.i72 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %4
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx, align 4
  %add = add i32 %6, ptrtoint (ptr getelementptr inbounds (%struct.lockdep_stats, ptr @lockdep_stats, i32 0, i32 14) to i32)
  %7 = inttoptr i32 %add to ptr
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add63 = add i32 %9, 1
  store i32 %add63, ptr %7, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %10 = load i32, ptr @oops_in_progress, align 4
  %tobool.not.i.i = icmp eq i32 %10, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %__cq_enqueue.exit.i

land.lhs.true.i.i:                                ; preds = %if.end43
  %11 = load ptr, ptr @__owner, align 4
  %12 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i.i, align 8
  %cmp.not.i.i = icmp eq ptr %11, %15
  br i1 %cmp.not.i.i, label %__cq_enqueue.exit.i, label %do.end.i.i, !prof !1500

do.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call3.i.i = tail call i32 @debug_locks_off() #28
  %tobool4.not.i.i = icmp eq i32 %call3.i.i, 0
  br i1 %tobool4.not.i.i, label %__cq_enqueue.exit.i, label %land.lhs.true5.i.i

land.lhs.true5.i.i:                               ; preds = %do.end.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %16 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i.i = icmp eq i32 %16, 0
  br i1 %tobool6.not.i.i, label %do.end19.i.i, label %__cq_enqueue.exit.i

do.end19.i.i:                                     ; preds = %land.lhs.true5.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 131, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.147) #28
  br label %__cq_enqueue.exit.i

__cq_enqueue.exit.i:                              ; preds = %do.end19.i.i, %land.lhs.true5.i.i, %do.end.i.i, %land.lhs.true.i.i, %if.end43
  store i32 0, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 1), align 4
  %17 = load i32, ptr @lockdep_dependency_gen_id, align 4
  %inc.i.i = add i32 %17, 1
  store i32 %inc.i.i, ptr @lockdep_dependency_gen_id, align 4
  store ptr %root, ptr @lock_cq, align 4
  store i32 1, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 2), align 4
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i.backedge, %__cq_enqueue.exit.i
  %lock.0.i = phi ptr [ null, %__cq_enqueue.exit.i ], [ %lock.1.i, %while.cond.i.backedge ]
  %tobool.not.i110.i = icmp eq ptr %lock.0.i, null
  br i1 %tobool.not.i110.i, label %lor.rhs.i, label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %while.cond.i
  %parent.i.i = getelementptr inbounds %struct.lock_list, ptr %lock.0.i, i32 0, i32 7
  %18 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %parent.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %19, null
  br i1 %tobool1.not.i.i, label %lor.rhs.i, label %if.end.i112.i

if.end.i112.i:                                    ; preds = %lor.lhs.false.i.i
  %class.i.i.i = getelementptr inbounds %struct.lock_list, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %class.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %class.i.i.i, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %21, i32 16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__next.i.i)
  %22 = ptrtoint ptr %lock.0.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile ptr, ptr %lock.0.i, align 4
  %24 = ptrtoint ptr %__next.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %23, ptr %__next.i.i, align 4
  %cmp.not.i111.i = icmp eq ptr %23, %add.ptr.i.i.i
  br i1 %cmp.not.i111.i, label %__bfs_next.exit.thread135.i, label %__bfs_next.exit.i, !prof !1501

__bfs_next.exit.thread135.i:                      ; preds = %if.end.i112.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__next.i.i)
  br label %lor.rhs.i

__bfs_next.exit.i:                                ; preds = %if.end.i112.i
  %25 = ptrtoint ptr %__next.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %__next.i.i.0.__next.i.i.0.__next.i.0.__next.i.0.__next.0.__next.0.__next.0.12.i.i = load volatile ptr, ptr %__next.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__next.i.i)
  %tobool.not.i = icmp eq ptr %__next.i.i.0.__next.i.i.0.__next.i.0.__next.i.0.__next.0.__next.0.__next.0.12.i.i, null
  br i1 %tobool.not.i, label %lor.rhs.i, label %while.body.i

lor.rhs.i:                                        ; preds = %__bfs_next.exit.i, %__bfs_next.exit.thread135.i, %lor.lhs.false.i.i, %while.cond.i
  %26 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 1), align 4
  %27 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 2), align 4
  %cmp.i.not.i114.i = icmp eq i32 %26, %27
  br i1 %cmp.i.not.i114.i, label %__bfs.exit, label %__cq_dequeue.exit.i

__cq_dequeue.exit.i:                              ; preds = %lor.rhs.i
  %arrayidx.i115.i = getelementptr [4096 x ptr], ptr @lock_cq, i32 0, i32 %26
  %28 = ptrtoint ptr %arrayidx.i115.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx.i115.i, align 4
  %add.i116.i = add i32 %26, 1
  %and.i117.i = and i32 %add.i116.i, 4095
  store i32 %and.i117.i, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 1), align 4
  %tobool5.not.i = icmp eq ptr %29, null
  br i1 %tobool5.not.i, label %__bfs.exit, label %while.body.i

while.body.i:                                     ; preds = %__cq_dequeue.exit.i, %__bfs_next.exit.i
  %lock.1.i = phi ptr [ %__next.i.i.0.__next.i.i.0.__next.i.0.__next.i.0.__next.0.__next.0.__next.0.12.i.i, %__bfs_next.exit.i ], [ %29, %__cq_dequeue.exit.i ]
  %class.i = getelementptr inbounds %struct.lock_list, ptr %lock.1.i, i32 0, i32 1
  %30 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %class.i, align 4
  %tobool6.not.i = icmp eq ptr %31, null
  br i1 %tobool6.not.i, label %__bfs.exit, label %if.end.i

if.end.i:                                         ; preds = %while.body.i
  %dep_gen_id.i.i = getelementptr inbounds %struct.lock_class, ptr %31, i32 0, i32 6
  %32 = ptrtoint ptr %dep_gen_id.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %dep_gen_id.i.i, align 4
  %34 = load i32, ptr @lockdep_dependency_gen_id, align 4
  %cmp.i.not.i = icmp eq i32 %33, %34
  br i1 %cmp.i.not.i, label %while.cond.i.backedge, label %if.else.i

if.else.i:                                        ; preds = %if.end.i
  %35 = ptrtoint ptr %dep_gen_id.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %dep_gen_id.i.i, align 4
  %parent.i = getelementptr inbounds %struct.lock_list, ptr %lock.1.i, i32 0, i32 7
  %36 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %parent.i, align 4
  %tobool11.not.i = icmp eq ptr %37, null
  br i1 %tobool11.not.i, label %if.end29.i, label %if.then12.i

if.then12.i:                                      ; preds = %if.else.i
  %dep13.i = getelementptr inbounds %struct.lock_list, ptr %lock.1.i, i32 0, i32 5
  %38 = ptrtoint ptr %dep13.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %dep13.i, align 2
  %only_xr.i = getelementptr inbounds %struct.lock_list, ptr %37, i32 0, i32 6
  %40 = ptrtoint ptr %only_xr.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %only_xr.i, align 1
  %tobool15.not.i = icmp eq i8 %41, 0
  %42 = and i8 %39, -6
  %spec.select.i = select i1 %tobool15.not.i, i8 %39, i8 %42
  %tobool20.not.i = icmp eq i8 %spec.select.i, 0
  br i1 %tobool20.not.i, label %while.cond.i.backedge, label %cleanup.thread.i

cleanup.thread.i:                                 ; preds = %if.then12.i
  %43 = and i8 %spec.select.i, 12
  %tobool25.not.i = icmp eq i8 %43, 0
  %conv26.i = zext i1 %tobool25.not.i to i8
  %only_xr27.i = getelementptr inbounds %struct.lock_list, ptr %lock.1.i, i32 0, i32 6
  %44 = ptrtoint ptr %only_xr27.i to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 %conv26.i, ptr %only_xr27.i, align 1
  br label %if.end29.i

if.end29.i:                                       ; preds = %cleanup.thread.i, %if.else.i
  %45 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %class.i, align 4
  %lock_type.i = getelementptr inbounds %struct.lock_class, ptr %46, i32 0, i32 13
  %47 = ptrtoint ptr %lock_type.i to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %lock_type.i, align 2
  %cmp.i = icmp eq i8 %48, 1
  br i1 %cmp.i, label %if.then.i80, label %if.end34.i

if.then.i80:                                      ; preds = %if.end29.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %49 = load i32, ptr @oops_in_progress, align 4
  %tobool.not.i79 = icmp eq i32 %49, 0
  br i1 %tobool.not.i79, label %land.lhs.true.i, label %while.cond.i.backedge

land.lhs.true.i:                                  ; preds = %if.then.i80
  %wait_type_inner.i = getelementptr inbounds %struct.lock_class, ptr %46, i32 0, i32 11
  %50 = ptrtoint ptr %wait_type_inner.i to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %wait_type_inner.i, align 4
  %cmp5.i = icmp ult i8 %51, 3
  br i1 %cmp5.i, label %do.end.i81, label %while.cond.i.backedge, !prof !1501

while.cond.i.backedge:                            ; preds = %for.inc.i, %do.end.i, %land.lhs.true.i, %if.then.i80, %if.then12.i, %if.end.i
  br label %while.cond.i

do.end.i81:                                       ; preds = %land.lhs.true.i
  %call.i = tail call i32 @debug_locks_off() #28
  %tobool10.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool10.not.i, label %if.end34.i, label %land.lhs.true11.i

land.lhs.true11.i:                                ; preds = %do.end.i81
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %52 = load i32, ptr @debug_locks_silent, align 4
  %tobool12.not.i = icmp eq i32 %52, 0
  br i1 %tobool12.not.i, label %do.end25.i, label %if.end34.i

do.end25.i:                                       ; preds = %land.lhs.true11.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2248, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.255) #28
  br label %if.end34.i

if.end34.i:                                       ; preds = %do.end25.i, %land.lhs.true11.i, %do.end.i81, %if.end29.i
  %only_xr.i73 = getelementptr inbounds %struct.lock_list, ptr %lock.1.i, i32 0, i32 6
  %53 = ptrtoint ptr %only_xr.i73 to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %only_xr.i73, align 1
  %tobool.not.i74 = icmp eq i8 %54, 0
  %55 = ptrtoint ptr %class.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %class.i, align 4
  %usage_mask.i = getelementptr inbounds %struct.lock_class, ptr %56, i32 0, i32 7
  %57 = ptrtoint ptr %usage_mask.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %usage_mask.i, align 4
  %and6.i = and i32 %58, 85
  %spec.select = select i1 %tobool.not.i74, i32 %58, i32 %usage_mask
  %spec.select85 = select i1 %tobool.not.i74, i32 %usage_mask, i32 %and6.i
  %and7.i = and i32 %spec.select85, %spec.select
  %retval.0.i77.not = icmp eq i32 %and7.i, 0
  br i1 %retval.0.i77.not, label %if.end37.i, label %if.then36.i

if.then36.i:                                      ; preds = %if.end34.i
  %59 = ptrtoint ptr %target_entry to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr %lock.1.i, ptr %target_entry, align 4
  br label %__bfs.exit

if.end37.i:                                       ; preds = %if.end34.i
  %add.ptr.i.i = getelementptr i8, ptr %56, i32 16
  %call39.i = tail call i32 @rcu_read_lock_any_held() #28
  %tobool40.not.i = icmp eq i32 %call39.i, 0
  br i1 %tobool40.not.i, label %land.lhs.true41.i, label %do.end.i

land.lhs.true41.i:                                ; preds = %if.end37.i
  %call42.i = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool43.not.i = icmp eq i32 %call42.i, 0
  br i1 %tobool43.not.i, label %do.end.i, label %land.lhs.true44.i

land.lhs.true44.i:                                ; preds = %land.lhs.true41.i
  %.b108.i = load i1, ptr @__bfs.__warned, align 1
  br i1 %.b108.i, label %do.end.i, label %if.then46.i

if.then46.i:                                      ; preds = %land.lhs.true44.i
  store i1 true, ptr @__bfs.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1770, ptr noundef nonnull @.str.1) #28
  br label %do.end.i

do.end.i:                                         ; preds = %if.then46.i, %land.lhs.true44.i, %land.lhs.true41.i, %if.end37.i
  %60 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %entry1.0146.i = load volatile ptr, ptr %add.ptr.i.i, align 4
  %cmp.not147.i = icmp eq ptr %entry1.0146.i, %add.ptr.i.i
  br i1 %cmp.not147.i, label %while.cond.i.backedge, label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %do.end.i
  %entry1.0149.i = phi ptr [ %entry1.0.i, %for.inc.i ], [ %entry1.0146.i, %do.end.i ]
  %first.0.off0148.i = phi i1 [ false, %for.inc.i ], [ true, %do.end.i ]
  %parent1.i.i = getelementptr inbounds %struct.lock_list, ptr %entry1.0149.i, i32 0, i32 7
  %61 = ptrtoint ptr %parent1.i.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %lock.1.i, ptr %parent1.i.i, align 4
  br i1 %first.0.off0148.i, label %if.end56.i, label %for.inc.i

if.end56.i:                                       ; preds = %for.body.i
  %62 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 2), align 4
  %add.i.i123.i = add i32 %62, 1
  %and.i.i124.i = and i32 %add.i.i123.i, 4095
  %63 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 1), align 4
  %cmp.i.not.i125.i = icmp eq i32 %and.i.i124.i, %63
  br i1 %cmp.i.not.i125.i, label %__bfs.exit, label %if.end60.i

if.end60.i:                                       ; preds = %if.end56.i
  %arrayidx.i126.i = getelementptr [4096 x ptr], ptr @lock_cq, i32 0, i32 %62
  %64 = ptrtoint ptr %arrayidx.i126.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr %entry1.0149.i, ptr %arrayidx.i126.i, align 4
  %65 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 2), align 4
  %add.i127.i = add i32 %65, 1
  %and.i128.i = and i32 %add.i127.i, 4095
  store i32 %and.i128.i, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 2), align 4
  %66 = load i32, ptr getelementptr inbounds (%struct.circular_queue, ptr @lock_cq, i32 0, i32 1), align 4
  %sub.i.i = sub i32 %add.i127.i, %66
  %and.i132.i = and i32 %sub.i.i, 4095
  %67 = load i32, ptr @max_bfs_queue_depth, align 4
  %cmp62.i = icmp ult i32 %67, %and.i132.i
  br i1 %cmp62.i, label %if.then64.i, label %for.inc.i

if.then64.i:                                      ; preds = %if.end60.i
  store i32 %and.i132.i, ptr @max_bfs_queue_depth, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then64.i, %if.end60.i, %for.body.i
  %68 = ptrtoint ptr %entry1.0149.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %entry1.0.i = load volatile ptr, ptr %entry1.0149.i, align 4
  %cmp.not.i = icmp eq ptr %entry1.0.i, %add.ptr.i.i
  br i1 %cmp.not.i, label %while.cond.i.backedge, label %for.body.i

__bfs.exit:                                       ; preds = %if.end56.i, %if.then36.i, %while.body.i, %__cq_dequeue.exit.i, %lor.rhs.i
  %retval.0.i = phi i32 [ 0, %if.then36.i ], [ -1, %if.end56.i ], [ -2, %while.body.i ], [ 1, %__cq_dequeue.exit.i ], [ 1, %lor.rhs.i ]
  ret i32 %retval.0.i
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @HARDIRQ_verbose(ptr nocapture noundef readnone %class) #16 align 64 {
entry:
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @SOFTIRQ_verbose(ptr nocapture noundef readnone %class) #16 align 64 {
entry:
  ret i32 0
}

; Function Attrs: noinline noprofile nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @look_up_lock_class(ptr nocapture noundef readonly %lock, i32 noundef %subclass) unnamed_addr #15 section ".noinstr.text" align 64 {
entry:
  %cmp = icmp ugt i32 %subclass, 7
  br i1 %cmp, label %do.end, label %if.end, !prof !1501

do.end:                                           ; preds = %entry
  %call = tail call i32 @debug_locks_off() #28
  %call5 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.355, i32 noundef %subclass) #32
  %call10 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.358) #32
  tail call void @dump_stack() #32
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = load ptr, ptr %lock, align 4
  %tobool15.not = icmp eq ptr %0, null
  br i1 %tobool15.not, label %cleanup, label %do.end28, !prof !1501

do.end28:                                         ; preds = %if.end
  %add.ptr = getelementptr %struct.lockdep_subclass_key, ptr %0, i32 %subclass
  %1 = ptrtoint ptr %add.ptr to i32
  %call30 = tail call fastcc i32 @hash_32(i32 noundef %1, i32 noundef 12)
  %add.ptr31 = getelementptr %struct.hlist_head, ptr @classhash_table, i32 %call30
  %2 = load i32, ptr @oops_in_progress, align 4
  %tobool32.not = icmp eq i32 %2, 0
  br i1 %tobool32.not, label %land.lhs.true, label %for.cond.preheader

land.lhs.true:                                    ; preds = %do.end28
  %call36 = tail call fastcc i32 @arch_local_save_flags()
  %call46 = tail call fastcc i32 @arch_irqs_disabled_flags(i32 noundef %call36)
  %tobool47.not = icmp eq i32 %call46, 0
  br i1 %tobool47.not, label %do.end59, label %for.cond.preheader, !prof !1501

for.cond.preheader:                               ; preds = %land.lhs.true, %do.end28
  br label %for.cond

do.end59:                                         ; preds = %land.lhs.true
  %call60 = tail call i32 @debug_locks_off() #28
  %tobool61 = icmp eq i32 %call60, 0
  %3 = load i32, ptr @debug_locks_silent, align 4
  %tobool63 = icmp ne i32 %3, 0
  %or.cond = select i1 %tobool61, i1 true, i1 %tobool63
  br i1 %or.cond, label %cleanup, label %do.end76

do.end76:                                         ; preds = %do.end59
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 900, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.32) #28
  br label %cleanup

for.cond:                                         ; preds = %for.body, %for.cond.preheader
  %class.0.in = phi ptr [ %class.0, %for.body ], [ %add.ptr31, %for.cond.preheader ]
  %class.0 = load volatile ptr, ptr %class.0.in, align 4
  %tobool111.not = icmp eq ptr %class.0, null
  br i1 %tobool111.not, label %cleanup, label %for.body

for.body:                                         ; preds = %for.cond
  %key112 = getelementptr inbounds %struct.lock_class, ptr %class.0, i32 0, i32 4
  %4 = load ptr, ptr %key112, align 4
  %cmp113 = icmp eq ptr %4, %add.ptr
  br i1 %cmp113, label %if.then115, label %for.cond

if.then115:                                       ; preds = %for.body
  %name = getelementptr inbounds %struct.lock_class, ptr %class.0, i32 0, i32 10
  %5 = load ptr, ptr %name, align 4
  %name116 = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 2
  %6 = load ptr, ptr %name116, align 4
  %cmp117.not = icmp eq ptr %5, %6
  br i1 %cmp117.not, label %cleanup, label %land.end

land.end:                                         ; preds = %if.then115
  %7 = load ptr, ptr %lock, align 4
  %cmp120 = icmp ne ptr %7, @__lockdep_no_validate__
  %.b211 = load i1, ptr @look_up_lock_class.__already_done, align 1
  %lnot130 = xor i1 %.b211, true
  %8 = select i1 %cmp120, i1 %lnot130, i1 false
  br i1 %8, label %if.then139, label %cleanup, !prof !1501

if.then139:                                       ; preds = %land.end
  store i1 true, ptr @look_up_lock_class.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 910, i32 noundef 9, ptr noundef null) #28
  br label %cleanup

cleanup:                                          ; preds = %if.then139, %land.end, %if.then115, %for.cond, %do.end76, %do.end59, %if.end, %do.end
  %retval.0 = phi ptr [ null, %do.end ], [ null, %if.end ], [ null, %do.end59 ], [ null, %do.end76 ], [ %class.0, %if.then139 ], [ %class.0, %land.end ], [ %class.0, %if.then115 ], [ null, %for.cond ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @assign_lock_key(ptr noundef %lock) unnamed_addr #0 align 64 {
entry:
  %can_addr = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %can_addr) #28
  %0 = ptrtoint ptr %can_addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %can_addr, align 4, !annotation !1502
  %1 = ptrtoint ptr %lock to i32
  %call = call zeroext i1 @__is_kernel_percpu_address(i32 noundef %1, ptr noundef nonnull %can_addr) #28
  br i1 %call, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = ptrtoint ptr %can_addr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %can_addr, align 4
  %4 = inttoptr i32 %3 to ptr
  %5 = ptrtoint ptr %lock to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %4, ptr %lock, align 4
  br label %cleanup

if.else:                                          ; preds = %entry
  %call1 = call zeroext i1 @__is_module_percpu_address(i32 noundef %1, ptr noundef nonnull %can_addr) #28
  br i1 %call1, label %if.then2, label %if.else4

if.then2:                                         ; preds = %if.else
  %6 = ptrtoint ptr %can_addr to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %can_addr, align 4
  %8 = inttoptr i32 %7 to ptr
  %9 = ptrtoint ptr %lock to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %8, ptr %lock, align 4
  br label %cleanup

if.else4:                                         ; preds = %if.else
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_state to i32))
  %10 = load i32, ptr @system_state, align 4
  %cmp.i.i = icmp ugt i32 %10, 1
  %cmp.not.i.i.i.i = icmp uge ptr %lock, @__init_begin
  %add.ptr.i.i.i.i = getelementptr i8, ptr %lock, i32 1
  %cmp1.i.i.i.i = icmp ule ptr %add.ptr.i.i.i.i, @__init_end
  %11 = and i1 %cmp.not.i.i.i.i, %cmp1.i.i.i.i
  %narrow.i.i = and i1 %11, %cmp.i.i
  br i1 %narrow.i.i, label %if.else8, label %if.end.i

if.end.i:                                         ; preds = %if.else4
  %cmp.not.i = icmp uge ptr %lock, @_stext
  %cmp1.i = icmp ult ptr %lock, @_end
  %or.cond.i = and i1 %cmp.not.i, %cmp1.i
  br i1 %or.cond.i, label %if.then6, label %if.end3.i

if.end3.i:                                        ; preds = %if.end.i
  %call4.i = call zeroext i1 @is_kernel_percpu_address(i32 noundef %1) #28
  br i1 %call4.i, label %if.then6, label %if.end6.i

if.end6.i:                                        ; preds = %if.end3.i
  %call7.i = call zeroext i1 @is_module_address(i32 noundef %1) #28
  br i1 %call7.i, label %if.then6, label %static_obj.exit

static_obj.exit:                                  ; preds = %if.end6.i
  %call8.i = call zeroext i1 @is_module_percpu_address(i32 noundef %1) #28
  br i1 %call8.i, label %if.then6, label %if.else8

if.then6:                                         ; preds = %static_obj.exit, %if.end6.i, %if.end3.i, %if.end.i
  %12 = ptrtoint ptr %lock to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %lock, ptr %lock, align 4
  br label %cleanup

if.else8:                                         ; preds = %static_obj.exit, %if.else4
  %call9 = call i32 @debug_locks_off() #28
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.361) #32
  %call18 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.364) #32
  %call23 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.367) #32
  %call28 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.358) #32
  call void @dump_stack() #32
  br label %cleanup

cleanup:                                          ; preds = %if.else8, %if.then6, %if.then2, %if.then
  %retval.0 = phi i1 [ false, %if.else8 ], [ true, %if.then2 ], [ true, %if.then6 ], [ true, %if.then ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %can_addr) #28
  ret i1 %retval.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @count_matching_names(ptr nocapture noundef readonly %new_class) unnamed_addr #24 align 64 {
entry:
  %name = getelementptr inbounds %struct.lock_class, ptr %new_class, i32 0, i32 10
  %0 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %name, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %cleanup, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %.pn36 = load ptr, ptr @all_lock_classes, align 4
  %cmp.not37 = icmp eq ptr %.pn36, @all_lock_classes
  br i1 %cmp.not37, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %key = getelementptr inbounds %struct.lock_class, ptr %new_class, i32 0, i32 4
  %2 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %key, align 4
  %subclass = getelementptr inbounds %struct.lock_class, ptr %new_class, i32 0, i32 5
  %4 = ptrtoint ptr %subclass to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %subclass, align 4
  %idx.neg = sub i32 0, %5
  %add.ptr1 = getelementptr %struct.lockdep_subclass_key, ptr %3, i32 %idx.neg
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %.pn39 = phi ptr [ %.pn36, %for.body.lr.ph ], [ %.pn, %for.inc ]
  %count.038 = phi i32 [ 0, %for.body.lr.ph ], [ %count.1, %for.inc ]
  %key2 = getelementptr i8, ptr %.pn39, i32 24
  %6 = ptrtoint ptr %key2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %key2, align 4
  %cmp3 = icmp eq ptr %add.ptr1, %7
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %for.body
  %name_version = getelementptr i8, ptr %.pn39, i32 80
  %8 = ptrtoint ptr %name_version to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %name_version, align 4
  br label %cleanup

if.end5:                                          ; preds = %for.body
  %name6 = getelementptr i8, ptr %.pn39, i32 84
  %10 = ptrtoint ptr %name6 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %name6, align 4
  %tobool7.not = icmp eq ptr %11, null
  br i1 %tobool7.not, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end5
  %call = tail call i32 @strcmp(ptr noundef nonnull %11, ptr noundef nonnull %1) #30
  %tobool10.not = icmp eq i32 %call, 0
  br i1 %tobool10.not, label %if.then11, label %for.inc

if.then11:                                        ; preds = %land.lhs.true
  %name_version12 = getelementptr i8, ptr %.pn39, i32 80
  %12 = ptrtoint ptr %name_version12 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %name_version12, align 4
  %14 = tail call i32 @llvm.smax.i32(i32 %count.038, i32 %13)
  br label %for.inc

for.inc:                                          ; preds = %if.then11, %land.lhs.true, %if.end5
  %count.1 = phi i32 [ %count.038, %land.lhs.true ], [ %14, %if.then11 ], [ %count.038, %if.end5 ]
  %15 = ptrtoint ptr %.pn39 to i32
  call void @__asan_load4_noabort(i32 %15)
  %.pn = load ptr, ptr %.pn39, align 4
  %cmp.not = icmp eq ptr %.pn, @all_lock_classes
  br i1 %cmp.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %for.cond.preheader
  %count.0.lcssa = phi i32 [ 0, %for.cond.preheader ], [ %count.1, %for.inc ]
  %add = add i32 %count.0.lcssa, 1
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then4, %entry
  %retval.0 = phi i32 [ %9, %if.then4 ], [ %add, %for.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @list_move_tail(ptr noundef %list, ptr noundef %head) unnamed_addr #10 align 64 {
entry:
  %call.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %list) #28
  br i1 %call.i, label %if.end.i, label %__list_del_entry.exit

if.end.i:                                         ; preds = %entry
  %prev.i = getelementptr inbounds %struct.list_head, ptr %list, i32 0, i32 1
  %0 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %prev.i, align 4
  %2 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %list, align 4
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %1, ptr %prev1.i.i, align 4
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %3, ptr %1, align 4
  br label %__list_del_entry.exit

__list_del_entry.exit:                            ; preds = %if.end.i, %entry
  %prev.i2 = getelementptr inbounds %struct.list_head, ptr %head, i32 0, i32 1
  %6 = ptrtoint ptr %prev.i2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev.i2, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %list, ptr noundef %7, ptr noundef %head) #28
  br i1 %call.i.i, label %if.end.i.i, label %list_add_tail.exit

if.end.i.i:                                       ; preds = %__list_del_entry.exit
  %8 = ptrtoint ptr %prev.i2 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %list, ptr %prev.i2, align 4
  %9 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %head, ptr %list, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %list, i32 0, i32 1
  %10 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %7, ptr %prev3.i.i, align 4
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %list, ptr %7, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %__list_del_entry.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__is_kernel_percpu_address(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__is_module_percpu_address(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #19

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_unlock_imbalance_bug(ptr noundef %curr, ptr nocapture noundef readonly %lock, i32 noundef %ip) unnamed_addr #0 align 64 {
entry:
  %str.i = alloca [128 x i8], align 1
  %call = tail call i32 @debug_locks_off() #28
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %0 = load i32, ptr @debug_locks_silent, align 4
  %tobool1.not = icmp eq i32 %0, 0
  br i1 %tobool1.not, label %do.end, label %return

do.end:                                           ; preds = %if.end
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.89) #32
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.385) #32
  %call12 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.388) #32
  %call3.i = tail call i32 @strcspn(ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef nonnull @.str.766) #28
  %call7.i = tail call ptr @print_tainted() #28
  %call8.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.764, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 2), i32 noundef %call3.i, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef %call7.i) #32
  %call16 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.391) #32
  %comm = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 101
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 68
  %1 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %pid.i, align 8
  %call21 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.394, ptr noundef %comm, i32 noundef %2) #32
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %str.i) #28
  %3 = call ptr @memset(ptr %str.i, i32 255, i32 128)
  %name1.i = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 2
  %4 = ptrtoint ptr %name1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %name1.i, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.then.i, label %print_lockdep_cache.exit

if.then.i:                                        ; preds = %do.end
  %6 = ptrtoint ptr %lock to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %lock, align 4
  %8 = ptrtoint ptr %7 to i32
  %call.i.i = call ptr @kallsyms_lookup(i32 noundef %8, ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef nonnull %str.i) #28
  br label %print_lockdep_cache.exit

print_lockdep_cache.exit:                         ; preds = %if.then.i, %do.end
  %name.0.i = phi ptr [ %5, %do.end ], [ %call.i.i, %if.then.i ]
  %call3.i40 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.173, ptr noundef %name.0.i) #32
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %str.i) #28
  %call25 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.397) #32
  %9 = inttoptr i32 %ip to ptr
  %call.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.408, ptr noundef nonnull @.str.399, ptr noundef %9, ptr noundef %9) #32
  %call29 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.401) #32
  %call33 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.226) #32
  call fastcc void @lockdep_print_held_locks(ptr noundef %curr)
  %call37 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134) #32
  call void @dump_stack() #32
  br label %return

return:                                           ; preds = %print_lockdep_cache.exit, %if.end, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @reacquire_held_locks(ptr nocapture noundef readonly %curr, i32 noundef %depth, i32 noundef %idx, ptr nocapture noundef %merged) unnamed_addr #0 align 64 {
entry:
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %0 = load i32, ptr @oops_in_progress, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.lhs.true, label %if.end54

land.lhs.true:                                    ; preds = %entry
  %1 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i = and i32 %1, 128
  %tobool10.not = icmp eq i32 %and.i, 0
  br i1 %tobool10.not, label %do.end16, label %if.end54, !prof !1501

do.end16:                                         ; preds = %land.lhs.true
  %call17 = tail call i32 @debug_locks_off() #28
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %cleanup, label %land.lhs.true19

land.lhs.true19:                                  ; preds = %do.end16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %2 = load i32, ptr @debug_locks_silent, align 4
  %tobool20.not = icmp eq i32 %2, 0
  br i1 %tobool20.not, label %do.end33, label %cleanup

do.end33:                                         ; preds = %land.lhs.true19
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5161, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.32) #28
  br label %cleanup

if.end54:                                         ; preds = %land.lhs.true, %entry
  %cmp55117 = icmp ult i32 %idx, %depth
  br i1 %cmp55117, label %for.body.preheader, label %cleanup

for.body.preheader:                               ; preds = %if.end54
  %held_locks = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 144
  %add.ptr = getelementptr %struct.held_lock, ptr %held_locks, i32 %idx
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.preheader
  %idx.addr.0119 = phi i32 [ %inc, %for.inc ], [ %idx, %for.body.preheader ]
  %hlock.0118 = phi ptr [ %incdec.ptr, %for.inc ], [ %add.ptr, %for.body.preheader ]
  %instance = getelementptr inbounds %struct.held_lock, ptr %hlock.0118, i32 0, i32 2
  %3 = ptrtoint ptr %instance to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %instance, align 4
  %class_idx1.i = getelementptr inbounds %struct.held_lock, ptr %hlock.0118, i32 0, i32 6
  %5 = ptrtoint ptr %class_idx1.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %bf.load.i = load i32, ptr %class_idx1.i, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i = lshr i32 %bf.load.i, 24
  %arrayidx.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i
  %6 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %bf.lshr.i, 31
  %8 = shl nuw i32 1, %and.i.i
  %9 = and i32 %8, %7
  %tobool.not.i = icmp eq i32 %9, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end33.i

if.then.i:                                        ; preds = %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %10 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i = icmp eq i32 %10, 0
  br i1 %tobool2.not.i, label %do.end.i, label %hlock_class.exit

do.end.i:                                         ; preds = %if.then.i
  %call4.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %hlock_class.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.end.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %11 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i = icmp eq i32 %11, 0
  br i1 %tobool6.not.i, label %do.end15.i, label %hlock_class.exit

do.end15.i:                                       ; preds = %land.lhs.true.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit

if.end33.i:                                       ; preds = %for.body
  %add.ptr.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i
  br label %hlock_class.exit

hlock_class.exit:                                 ; preds = %if.end33.i, %do.end15.i, %land.lhs.true.i, %do.end.i, %if.then.i
  %retval.0.i = phi ptr [ %add.ptr.i, %if.end33.i ], [ null, %do.end15.i ], [ null, %land.lhs.true.i ], [ null, %do.end.i ], [ null, %if.then.i ]
  %subclass = getelementptr inbounds %struct.lock_class, ptr %retval.0.i, i32 0, i32 5
  %12 = ptrtoint ptr %subclass to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %subclass, align 4
  %14 = ptrtoint ptr %class_idx1.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %bf.load = load i32, ptr %class_idx1.i, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 1
  %bf.lshr59 = lshr i32 %bf.load, 14
  %bf.clear60 = and i32 %bf.lshr59, 3
  %bf.lshr62 = lshr i32 %bf.load, 13
  %bf.clear63 = and i32 %bf.lshr62, 1
  %bf.lshr65 = lshr i32 %bf.load, 12
  %bf.clear66 = and i32 %bf.lshr65, 1
  %nest_lock = getelementptr inbounds %struct.held_lock, ptr %hlock.0118, i32 0, i32 3
  %15 = ptrtoint ptr %nest_lock to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %nest_lock, align 8
  %acquire_ip = getelementptr inbounds %struct.held_lock, ptr %hlock.0118, i32 0, i32 1
  %17 = ptrtoint ptr %acquire_ip to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %acquire_ip, align 8
  %bf.clear68 = and i32 %bf.load, 4095
  %pin_count = getelementptr inbounds %struct.held_lock, ptr %hlock.0118, i32 0, i32 7
  %19 = ptrtoint ptr %pin_count to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %pin_count, align 4
  %call69 = tail call fastcc i32 @__lock_acquire(ptr noundef %4, i32 noundef %13, i32 noundef %bf.clear, i32 noundef %bf.clear60, i32 noundef %bf.clear63, i32 noundef %bf.clear66, ptr noundef %16, i32 noundef %18, i32 noundef %bf.clear68, i32 noundef %20)
  switch i32 %call69, label %do.end85 [
    i32 0, label %cleanup
    i32 1, label %for.inc
    i32 2, label %sw.bb70
  ]

sw.bb70:                                          ; preds = %hlock_class.exit
  %cmp71 = icmp eq i32 %idx.addr.0119, %idx
  %conv72 = zext i1 %cmp71 to i32
  %21 = ptrtoint ptr %merged to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %merged, align 4
  %add = add i32 %22, %conv72
  store i32 %add, ptr %merged, align 4
  br label %for.inc

do.end85:                                         ; preds = %hlock_class.exit
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5180, i32 noundef 9, ptr noundef null) #28
  br label %cleanup

for.inc:                                          ; preds = %sw.bb70, %hlock_class.exit
  %inc = add i32 %idx.addr.0119, 1
  %incdec.ptr = getelementptr %struct.held_lock, ptr %hlock.0118, i32 1
  %exitcond.not = icmp eq i32 %inc, %depth
  br i1 %exitcond.not, label %cleanup, label %for.body

cleanup:                                          ; preds = %for.inc, %do.end85, %hlock_class.exit, %if.end54, %do.end33, %land.lhs.true19, %do.end16
  %retval.0 = phi i32 [ 0, %do.end85 ], [ 0, %do.end16 ], [ 0, %land.lhs.true19 ], [ 0, %do.end33 ], [ 0, %if.end54 ], [ 0, %for.inc ], [ 1, %hlock_class.exit ]
  ret i32 %retval.0
}

; Function Attrs: noinline noprofile nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @match_held_lock(ptr nocapture noundef readonly %hlock, ptr noundef readonly %lock) unnamed_addr #15 section ".noinstr.text" align 64 {
entry:
  %instance = getelementptr inbounds %struct.held_lock, ptr %hlock, i32 0, i32 2
  %0 = load ptr, ptr %instance, align 4
  %cmp = icmp eq ptr %0, %lock
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %references = getelementptr inbounds %struct.held_lock, ptr %hlock, i32 0, i32 6
  %bf.load = load i32, ptr %references, align 8
  %bf.clear = and i32 %bf.load, 4095
  %tobool.not = icmp eq i32 %bf.clear, 0
  br i1 %tobool.not, label %if.end56, label %if.then1

if.then1:                                         ; preds = %if.end
  %class_cache = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 1
  %1 = load ptr, ptr %class_cache, align 4
  %tobool2.not = icmp eq ptr %1, null
  br i1 %tobool2.not, label %if.end4, label %if.end7

if.end4:                                          ; preds = %if.then1
  %call = tail call fastcc ptr @look_up_lock_class(ptr noundef %lock, i32 noundef 0)
  %tobool5.not = icmp eq ptr %call, null
  br i1 %tobool5.not, label %return, label %if.end7

if.end7:                                          ; preds = %if.end4, %if.then1
  %class.069 = phi ptr [ %call, %if.end4 ], [ %1, %if.then1 ]
  %2 = load i32, ptr @oops_in_progress, align 4
  %tobool8.not = icmp eq i32 %2, 0
  br i1 %tobool8.not, label %land.lhs.true, label %cleanup

land.lhs.true:                                    ; preds = %if.end7
  %nest_lock = getelementptr inbounds %struct.held_lock, ptr %hlock, i32 0, i32 3
  %3 = load ptr, ptr %nest_lock, align 8
  %tobool9.not = icmp eq ptr %3, null
  br i1 %tobool9.not, label %do.end, label %cleanup, !prof !1501

do.end:                                           ; preds = %land.lhs.true
  %call14 = tail call i32 @debug_locks_off() #28
  %tobool15 = icmp eq i32 %call14, 0
  %4 = load i32, ptr @debug_locks_silent, align 4
  %tobool17 = icmp ne i32 %4, 0
  %or.cond = select i1 %tobool15, i1 true, i1 %tobool17
  br i1 %or.cond, label %return, label %do.end30

do.end30:                                         ; preds = %do.end
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5109, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.382) #28
  br label %return

cleanup:                                          ; preds = %land.lhs.true, %if.end7
  %bf.load52 = load i32, ptr %references, align 8
  %bf.lshr = lshr i32 %bf.load52, 19
  %sub.ptr.lhs.cast = ptrtoint ptr %class.069 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, ptrtoint (ptr @lock_classes to i32)
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 132
  %cmp53.not = icmp eq i32 %bf.lshr, %sub.ptr.div
  br i1 %cmp53.not, label %return, label %if.end56

if.end56:                                         ; preds = %cleanup, %if.end
  br label %return

return:                                           ; preds = %if.end56, %cleanup, %do.end30, %do.end, %if.end4, %entry
  %retval.1 = phi i32 [ 1, %cleanup ], [ 0, %if.end56 ], [ 1, %entry ], [ 0, %if.end4 ], [ 0, %do.end ], [ 0, %do.end30 ]
  ret i32 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @sched_clock() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_collision(ptr nocapture noundef readonly %curr, ptr nocapture noundef readonly %hlock_next, ptr nocapture noundef readonly %chain) unnamed_addr #0 align 64 {
entry:
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.89) #32
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.489) #32
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.492) #32
  %call3.i = tail call i32 @strcspn(ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef nonnull @.str.766) #28
  %call7.i = tail call ptr @print_tainted() #28
  %call8.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.764, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 2), i32 noundef %call3.i, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef %call7.i) #32
  %call12 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.495) #32
  %0 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 101
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 68
  %4 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pid.i, align 8
  %call20 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.498, ptr noundef %comm, i32 noundef %5) #32
  %call24 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.501) #32
  %call28 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.504) #32
  %lockdep_depth.i = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 142
  %6 = ptrtoint ptr %lockdep_depth.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %lockdep_depth.i, align 8
  %held_locks.i.i = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 144
  %irq_context1.i.i = getelementptr inbounds %struct.held_lock, ptr %hlock_next, i32 0, i32 6
  %8 = add i32 %7, -1
  %smin.i.i = tail call i32 @llvm.smin.i32(i32 %8, i32 -1) #28
  %9 = add nsw i32 %smin.i.i, 1
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i, %entry
  %i.0.in.i.i = phi i32 [ %7, %entry ], [ %i.0.i.i, %for.body.i.i ]
  %i.0.i.i = add i32 %i.0.in.i.i, -1
  %cmp.i.i = icmp sgt i32 %i.0.i.i, -1
  br i1 %cmp.i.i, label %for.body.i.i, label %get_first_held_lock.exit.i

for.body.i.i:                                     ; preds = %for.cond.i.i
  %irq_context.i.i = getelementptr %struct.held_lock, ptr %held_locks.i.i, i32 %i.0.i.i, i32 6
  %10 = ptrtoint ptr %irq_context.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %bf.load.i.i = load i32, ptr %irq_context.i.i, align 8
  %11 = ptrtoint ptr %irq_context1.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %bf.load2.i.i = load i32, ptr %irq_context1.i.i, align 8
  %bf.lshr10.i.i = xor i32 %bf.load2.i.i, %bf.load.i.i
  %12 = and i32 %bf.lshr10.i.i, 393216
  %cmp5.not.i.i = icmp eq i32 %12, 0
  br i1 %cmp5.not.i.i, label %for.cond.i.i, label %get_first_held_lock.exit.i

get_first_held_lock.exit.i:                       ; preds = %for.body.i.i, %for.cond.i.i
  %i.0.in.lcssa.i.i = phi i32 [ %i.0.in.i.i, %for.body.i.i ], [ %9, %for.cond.i.i ]
  %sub.i = add i32 %7, 1
  %add.i = sub i32 %sub.i, %i.0.in.lcssa.i.i
  %13 = ptrtoint ptr %irq_context1.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %bf.load.i = load i32, ptr %irq_context1.i.i, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 17
  %bf.clear.i = and i32 %bf.lshr.i, 3
  %call1.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.511, i32 noundef %add.i, i32 noundef %bf.clear.i) #32
  %cmp59.i = icmp slt i32 %i.0.in.lcssa.i.i, %7
  br i1 %cmp59.i, label %for.body.i, label %print_chain_keys_held_locks.exit

for.body.i:                                       ; preds = %for.body.i, %get_first_held_lock.exit.i
  %i.062.i = phi i32 [ %inc.i, %for.body.i ], [ %i.0.in.lcssa.i.i, %get_first_held_lock.exit.i ]
  %chain_key.0.off3261.i = phi i32 [ %xor20.i.i.i, %for.body.i ], [ -1, %get_first_held_lock.exit.i ]
  %chain_key.0.off060.i = phi i32 [ %add21.i.i.i, %for.body.i ], [ -1, %get_first_held_lock.exit.i ]
  %add.ptr.i = getelementptr %struct.held_lock, ptr %held_locks.i.i, i32 %i.062.i
  %class_idx.i.i = getelementptr %struct.held_lock, ptr %held_locks.i.i, i32 %i.062.i, i32 6
  %14 = ptrtoint ptr %class_idx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %bf.load.i17.i = load i32, ptr %class_idx.i.i, align 8
  %bf.lshr.i.i = lshr i32 %bf.load.i17.i, 19
  %15 = lshr i32 %bf.load.i17.i, 1
  %shl.i.i = and i32 %15, 24576
  %or.i.i = or i32 %shl.i.i, %bf.lshr.i.i
  %sub.i.i.i = sub i32 %or.i.i, %chain_key.0.off3261.i
  %or.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %chain_key.0.off3261.i, i32 %chain_key.0.off3261.i, i32 4) #28
  %xor.i.i.i = xor i32 %sub.i.i.i, %or.i.i.i.i
  %add.i.i.i = add i32 %chain_key.0.off060.i, %chain_key.0.off3261.i
  %sub2.i.i.i = sub i32 %chain_key.0.off060.i, %xor.i.i.i
  %or.i60.i.i.i = tail call i32 @llvm.fshl.i32(i32 %xor.i.i.i, i32 %xor.i.i.i, i32 6) #28
  %xor4.i.i.i = xor i32 %sub2.i.i.i, %or.i60.i.i.i
  %add5.i.i.i = add i32 %xor.i.i.i, %add.i.i.i
  %sub6.i.i.i = sub i32 %add.i.i.i, %xor4.i.i.i
  %or.i61.i.i.i = tail call i32 @llvm.fshl.i32(i32 %xor4.i.i.i, i32 %xor4.i.i.i, i32 8) #28
  %xor8.i.i.i = xor i32 %sub6.i.i.i, %or.i61.i.i.i
  %add9.i.i.i = add i32 %xor4.i.i.i, %add5.i.i.i
  %sub10.i.i.i = sub i32 %add5.i.i.i, %xor8.i.i.i
  %or.i62.i.i.i = tail call i32 @llvm.fshl.i32(i32 %xor8.i.i.i, i32 %xor8.i.i.i, i32 16) #28
  %xor12.i.i.i = xor i32 %sub10.i.i.i, %or.i62.i.i.i
  %add13.i.i.i = add i32 %xor8.i.i.i, %add9.i.i.i
  %sub14.i.i.i = sub i32 %add9.i.i.i, %xor12.i.i.i
  %or.i63.i.i.i = tail call i32 @llvm.fshl.i32(i32 %xor12.i.i.i, i32 %xor12.i.i.i, i32 19) #28
  %xor16.i.i.i = xor i32 %sub14.i.i.i, %or.i63.i.i.i
  %add17.i.i.i = add i32 %xor12.i.i.i, %add13.i.i.i
  %sub18.i.i.i = sub i32 %add13.i.i.i, %xor16.i.i.i
  %or.i64.i.i.i = tail call i32 @llvm.fshl.i32(i32 %xor16.i.i.i, i32 %xor16.i.i.i, i32 4) #28
  %xor20.i.i.i = xor i32 %sub18.i.i.i, %or.i64.i.i.i
  %add21.i.i.i = add i32 %add17.i.i.i, %xor16.i.i.i
  %conv22.i.i.i = zext i32 %add21.i.i.i to i64
  %conv23.i.i.i = zext i32 %xor20.i.i.i to i64
  %shl.i.i.i = shl nuw i64 %conv23.i.i.i, 32
  %or.i.i.i = or i64 %shl.i.i.i, %conv22.i.i.i
  %call2.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.513, i32 noundef %or.i.i, i64 noundef %or.i.i.i) #32
  tail call fastcc void @print_lock(ptr noundef %add.ptr.i) #28
  %inc.i = add i32 %i.062.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %7
  br i1 %exitcond.not.i, label %print_chain_keys_held_locks.exit, label %for.body.i

print_chain_keys_held_locks.exit:                 ; preds = %for.body.i, %get_first_held_lock.exit.i
  %chain_key.0.off0.lcssa.i = phi i32 [ -1, %get_first_held_lock.exit.i ], [ %add21.i.i.i, %for.body.i ]
  %chain_key.0.off32.lcssa.i = phi i32 [ -1, %get_first_held_lock.exit.i ], [ %xor20.i.i.i, %for.body.i ]
  %16 = ptrtoint ptr %irq_context1.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %bf.load.i20.i = load i32, ptr %irq_context1.i.i, align 8
  %bf.lshr.i21.i = lshr i32 %bf.load.i20.i, 19
  %17 = lshr i32 %bf.load.i20.i, 1
  %shl.i22.i = and i32 %17, 24576
  %or.i23.i = or i32 %shl.i22.i, %bf.lshr.i21.i
  %sub.i.i29.i = sub i32 %or.i23.i, %chain_key.0.off32.lcssa.i
  %or.i.i.i30.i = tail call i32 @llvm.fshl.i32(i32 %chain_key.0.off32.lcssa.i, i32 %chain_key.0.off32.lcssa.i, i32 4) #28
  %xor.i.i31.i = xor i32 %sub.i.i29.i, %or.i.i.i30.i
  %add.i.i32.i = add i32 %chain_key.0.off32.lcssa.i, %chain_key.0.off0.lcssa.i
  %sub2.i.i33.i = sub i32 %chain_key.0.off0.lcssa.i, %xor.i.i31.i
  %or.i60.i.i34.i = tail call i32 @llvm.fshl.i32(i32 %xor.i.i31.i, i32 %xor.i.i31.i, i32 6) #28
  %xor4.i.i35.i = xor i32 %sub2.i.i33.i, %or.i60.i.i34.i
  %add5.i.i36.i = add i32 %xor.i.i31.i, %add.i.i32.i
  %sub6.i.i37.i = sub i32 %add.i.i32.i, %xor4.i.i35.i
  %or.i61.i.i38.i = tail call i32 @llvm.fshl.i32(i32 %xor4.i.i35.i, i32 %xor4.i.i35.i, i32 8) #28
  %xor8.i.i39.i = xor i32 %sub6.i.i37.i, %or.i61.i.i38.i
  %add9.i.i40.i = add i32 %xor4.i.i35.i, %add5.i.i36.i
  %sub10.i.i41.i = sub i32 %add5.i.i36.i, %xor8.i.i39.i
  %or.i62.i.i42.i = tail call i32 @llvm.fshl.i32(i32 %xor8.i.i39.i, i32 %xor8.i.i39.i, i32 16) #28
  %xor12.i.i43.i = xor i32 %sub10.i.i41.i, %or.i62.i.i42.i
  %add13.i.i44.i = add i32 %xor8.i.i39.i, %add9.i.i40.i
  %sub14.i.i45.i = sub i32 %add9.i.i40.i, %xor12.i.i43.i
  %or.i63.i.i46.i = tail call i32 @llvm.fshl.i32(i32 %xor12.i.i43.i, i32 %xor12.i.i43.i, i32 19) #28
  %xor16.i.i47.i = xor i32 %sub14.i.i45.i, %or.i63.i.i46.i
  %add17.i.i48.i = add i32 %xor12.i.i43.i, %add13.i.i44.i
  %sub18.i.i49.i = sub i32 %add13.i.i44.i, %xor16.i.i47.i
  %or.i64.i.i50.i = tail call i32 @llvm.fshl.i32(i32 %xor16.i.i47.i, i32 %xor16.i.i47.i, i32 4) #28
  %xor20.i.i51.i = xor i32 %sub18.i.i49.i, %or.i64.i.i50.i
  %add21.i.i52.i = add i32 %add17.i.i48.i, %xor16.i.i47.i
  %conv22.i.i53.i = zext i32 %add21.i.i52.i to i64
  %conv23.i.i54.i = zext i32 %xor20.i.i51.i to i64
  %shl.i.i55.i = shl nuw i64 %conv23.i.i54.i, 32
  %or.i.i56.i = or i64 %shl.i.i55.i, %conv22.i.i53.i
  %call2.i57.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.513, i32 noundef %or.i23.i, i64 noundef %or.i.i56.i) #32
  tail call fastcc void @print_lock(ptr noundef %hlock_next) #28
  %call32 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.507) #32
  %18 = ptrtoint ptr %chain to i32
  call void @__asan_load4_noabort(i32 %18)
  %bf.load.i37 = load i32, ptr %chain, align 8
  %bf.lshr.i38 = lshr i32 %bf.load.i37, 24
  %bf.clear.i39 = and i32 %bf.lshr.i38, 63
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.515, i32 noundef %bf.clear.i39) #32
  %19 = ptrtoint ptr %chain to i32
  call void @__asan_load4_noabort(i32 %19)
  %bf.load119.i = load i32, ptr %chain, align 8
  %20 = and i32 %bf.load119.i, 1056964608
  %cmp22.not.i = icmp eq i32 %20, 0
  br i1 %cmp22.not.i, label %print_chain_keys_chain.exit, label %for.body.i72

for.body.i72:                                     ; preds = %for.body.i72, %print_chain_keys_held_locks.exit
  %bf.load126.i = phi i32 [ %bf.load1.i, %for.body.i72 ], [ %bf.load119.i, %print_chain_keys_held_locks.exit ]
  %i.025.i = phi i32 [ %inc.i71, %for.body.i72 ], [ 0, %print_chain_keys_held_locks.exit ]
  %chain_key.0.off3224.i = phi i32 [ %xor20.i.i.i63, %for.body.i72 ], [ -1, %print_chain_keys_held_locks.exit ]
  %chain_key.0.off023.i = phi i32 [ %add21.i.i.i64, %for.body.i72 ], [ -1, %print_chain_keys_held_locks.exit ]
  %bf.clear5.i = and i32 %bf.load126.i, 16777215
  %add.i40 = add nuw nsw i32 %bf.clear5.i, %i.025.i
  %arrayidx.i = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %add.i40
  %21 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %arrayidx.i, align 2
  %conv.i.i = zext i16 %22 to i32
  %sub.i.i.i41 = sub i32 %conv.i.i, %chain_key.0.off3224.i
  %or.i.i.i.i42 = tail call i32 @llvm.fshl.i32(i32 %chain_key.0.off3224.i, i32 %chain_key.0.off3224.i, i32 4) #28
  %xor.i.i.i43 = xor i32 %sub.i.i.i41, %or.i.i.i.i42
  %add.i.i.i44 = add i32 %chain_key.0.off023.i, %chain_key.0.off3224.i
  %sub2.i.i.i45 = sub i32 %chain_key.0.off023.i, %xor.i.i.i43
  %or.i60.i.i.i46 = tail call i32 @llvm.fshl.i32(i32 %xor.i.i.i43, i32 %xor.i.i.i43, i32 6) #28
  %xor4.i.i.i47 = xor i32 %sub2.i.i.i45, %or.i60.i.i.i46
  %add5.i.i.i48 = add i32 %xor.i.i.i43, %add.i.i.i44
  %sub6.i.i.i49 = sub i32 %add.i.i.i44, %xor4.i.i.i47
  %or.i61.i.i.i50 = tail call i32 @llvm.fshl.i32(i32 %xor4.i.i.i47, i32 %xor4.i.i.i47, i32 8) #28
  %xor8.i.i.i51 = xor i32 %sub6.i.i.i49, %or.i61.i.i.i50
  %add9.i.i.i52 = add i32 %xor4.i.i.i47, %add5.i.i.i48
  %sub10.i.i.i53 = sub i32 %add5.i.i.i48, %xor8.i.i.i51
  %or.i62.i.i.i54 = tail call i32 @llvm.fshl.i32(i32 %xor8.i.i.i51, i32 %xor8.i.i.i51, i32 16) #28
  %xor12.i.i.i55 = xor i32 %sub10.i.i.i53, %or.i62.i.i.i54
  %add13.i.i.i56 = add i32 %xor8.i.i.i51, %add9.i.i.i52
  %sub14.i.i.i57 = sub i32 %add9.i.i.i52, %xor12.i.i.i55
  %or.i63.i.i.i58 = tail call i32 @llvm.fshl.i32(i32 %xor12.i.i.i55, i32 %xor12.i.i.i55, i32 19) #28
  %xor16.i.i.i59 = xor i32 %sub14.i.i.i57, %or.i63.i.i.i58
  %add17.i.i.i60 = add i32 %xor12.i.i.i55, %add13.i.i.i56
  %sub18.i.i.i61 = sub i32 %add13.i.i.i56, %xor16.i.i.i59
  %or.i64.i.i.i62 = tail call i32 @llvm.fshl.i32(i32 %xor16.i.i.i59, i32 %xor16.i.i.i59, i32 4) #28
  %xor20.i.i.i63 = xor i32 %sub18.i.i.i61, %or.i64.i.i.i62
  %add21.i.i.i64 = add i32 %add17.i.i.i60, %xor16.i.i.i59
  %conv22.i.i.i65 = zext i32 %add21.i.i.i64 to i64
  %conv23.i.i.i66 = zext i32 %xor20.i.i.i63 to i64
  %shl.i.i.i67 = shl nuw i64 %conv23.i.i.i66, 32
  %or.i.i.i68 = or i64 %shl.i.i.i67, %conv22.i.i.i65
  %call2.i.i69 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.513, i32 noundef %conv.i.i, i64 noundef %or.i.i.i68) #32
  %23 = and i16 %22, 8191
  %and.i.i = zext i16 %23 to i32
  %add.ptr.i70 = getelementptr %struct.lock_class, ptr @lock_classes, i32 %and.i.i
  tail call fastcc void @print_lock_name(ptr noundef %add.ptr.i70) #28
  %call12.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.7) #32
  %inc.i71 = add nuw nsw i32 %i.025.i, 1
  %24 = ptrtoint ptr %chain to i32
  call void @__asan_load4_noabort(i32 %24)
  %bf.load1.i = load i32, ptr %chain, align 8
  %bf.lshr2.i = lshr i32 %bf.load1.i, 24
  %bf.clear3.i = and i32 %bf.lshr2.i, 63
  %cmp.i = icmp ult i32 %inc.i71, %bf.clear3.i
  br i1 %cmp.i, label %for.body.i72, label %print_chain_keys_chain.exit

print_chain_keys_chain.exit:                      ; preds = %for.body.i72, %print_chain_keys_held_locks.exit
  %call36 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134) #32
  tail call void @dump_stack() #32
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_first_zero_bit_be(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @add_chain_block(i32 noundef %offset, i32 noundef %size) unnamed_addr #10 align 64 {
entry:
  %cmp.i = icmp sgt i32 %size, 16
  %sub.i = add i32 %size, -1
  %retval.0.i = select i1 %cmp.i, i32 0, i32 %sub.i
  %arrayidx = getelementptr [16 x i32], ptr @chain_block_buckets, i32 0, i32 %retval.0.i
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %cmp = icmp slt i32 %size, 2
  br i1 %cmp, label %if.then, label %if.end4, !prof !1501

if.then:                                          ; preds = %entry
  %tobool2.not = icmp eq i32 %size, 0
  br i1 %tobool2.not, label %cleanup, label %if.then3

if.then3:                                         ; preds = %if.then
  %2 = load i32, ptr @nr_lost_chain_hlocks, align 4
  %inc = add i32 %2, 1
  store i32 %inc, ptr @nr_lost_chain_hlocks, align 4
  br label %cleanup

if.end4:                                          ; preds = %entry
  %3 = load i32, ptr @nr_free_chain_hlocks, align 4
  %add = add i32 %3, %size
  store i32 %add, ptr @nr_free_chain_hlocks, align 4
  %tobool5.not = icmp eq i32 %retval.0.i, 0
  br i1 %tobool5.not, label %if.then6, label %init_chain_block.exit71

if.then6:                                         ; preds = %if.end4
  %4 = load i32, ptr @nr_large_chain_blocks, align 4
  %inc7 = add i32 %4, 1
  store i32 %inc7, ptr @nr_large_chain_blocks, align 4
  %5 = load i32, ptr @chain_block_buckets, align 4
  %cmp872 = icmp sgt i32 %5, -1
  br i1 %cmp872, label %for.body.preheader, label %init_chain_block.exit

for.body.preheader:                               ; preds = %if.then6
  %add.i80 = add nuw i32 %5, 2
  %arrayidx.i81 = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %add.i80
  %6 = ptrtoint ptr %arrayidx.i81 to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %arrayidx.i81, align 2
  %conv.i82 = zext i16 %7 to i32
  %shl.i83 = shl nuw i32 %conv.i82, 16
  %add1.i84 = add nuw i32 %5, 3
  %arrayidx2.i85 = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %add1.i84
  %8 = ptrtoint ptr %arrayidx2.i85 to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %arrayidx2.i85, align 2
  %conv3.i86 = zext i16 %9 to i32
  %or.i87 = or i32 %shl.i83, %conv3.i86
  %cmp10.not88 = icmp sgt i32 %or.i87, %size
  br i1 %cmp10.not88, label %for.inc, label %init_chain_block.exit

for.inc:                                          ; preds = %chain_block_next.exit, %for.body.preheader
  %curr.07489 = phi i32 [ %or.i45, %chain_block_next.exit ], [ %5, %for.body.preheader ]
  %arrayidx.i40 = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %curr.07489
  %10 = ptrtoint ptr %arrayidx.i40 to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %arrayidx.i40, align 2
  %conv.i41 = zext i16 %11 to i32
  %and.i = and i32 %conv.i41, 32768
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %land.rhs.i, label %if.end30.i

land.rhs.i:                                       ; preds = %for.inc
  %.b52.i = load i1, ptr @chain_block_next.__already_done, align 1
  br i1 %.b52.i, label %if.end30.i, label %if.then.i, !prof !1500

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @chain_block_next.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3282, i32 noundef 9, ptr noundef null) #28
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.then.i, %land.rhs.i, %for.inc
  %cmp.i42 = icmp eq i16 %11, -1
  br i1 %cmp.i42, label %init_chain_block.exit, label %chain_block_next.exit

chain_block_next.exit:                            ; preds = %if.end30.i
  %and41.i = shl nuw i32 %conv.i41, 16
  %shl.i43 = and i32 %and41.i, 2147418112
  %add.i44 = add nuw i32 %curr.07489, 1
  %arrayidx42.i = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %add.i44
  %12 = ptrtoint ptr %arrayidx42.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %arrayidx42.i, align 2
  %conv43.i = zext i16 %13 to i32
  %or.i45 = or i32 %shl.i43, %conv43.i
  %add.i = add nuw i32 %or.i45, 2
  %arrayidx.i = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %add.i
  %14 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %arrayidx.i, align 2
  %conv.i = zext i16 %15 to i32
  %shl.i = shl nuw i32 %conv.i, 16
  %add1.i = add nuw i32 %or.i45, 3
  %arrayidx2.i = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %add1.i
  %16 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %arrayidx2.i, align 2
  %conv3.i = zext i16 %17 to i32
  %or.i = or i32 %shl.i, %conv3.i
  %cmp10.not = icmp sgt i32 %or.i, %size
  br i1 %cmp10.not, label %for.inc, label %init_chain_block.exit

init_chain_block.exit:                            ; preds = %chain_block_next.exit, %if.end30.i, %for.body.preheader, %if.then6
  %prev.0.lcssa = phi i32 [ -1, %if.then6 ], [ -1, %for.body.preheader ], [ %curr.07489, %if.end30.i ], [ %curr.07489, %chain_block_next.exit ]
  %curr.0.lcssa = phi i32 [ %5, %if.then6 ], [ %5, %for.body.preheader ], [ -1, %if.end30.i ], [ %or.i45, %chain_block_next.exit ]
  %18 = lshr i32 %curr.0.lcssa, 16
  %19 = trunc i32 %18 to i16
  %conv.i47 = or i16 %19, -32768
  %arrayidx.i48 = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %offset
  %20 = ptrtoint ptr %arrayidx.i48 to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 %conv.i47, ptr %arrayidx.i48, align 2
  %conv1.i = trunc i32 %curr.0.lcssa to i16
  %add.i49 = add i32 %offset, 1
  %arrayidx2.i50 = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %add.i49
  %21 = ptrtoint ptr %arrayidx2.i50 to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 %conv1.i, ptr %arrayidx2.i50, align 2
  %22 = lshr i32 %size, 16
  %conv5.i = trunc i32 %22 to i16
  %add6.i = add i32 %offset, 2
  %arrayidx7.i = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %add6.i
  %23 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 %conv5.i, ptr %arrayidx7.i, align 2
  %conv8.i = trunc i32 %size to i16
  %add9.i = add i32 %offset, 3
  %arrayidx10.i = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %add9.i
  %24 = ptrtoint ptr %arrayidx10.i to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 %conv8.i, ptr %arrayidx10.i, align 2
  %cmp14 = icmp slt i32 %prev.0.lcssa, 0
  br i1 %cmp14, label %if.then15, label %if.else

if.then15:                                        ; preds = %init_chain_block.exit
  store i32 %offset, ptr @chain_block_buckets, align 4
  br label %cleanup

if.else:                                          ; preds = %init_chain_block.exit
  %25 = lshr i32 %offset, 16
  %26 = trunc i32 %25 to i16
  %conv.i53 = or i16 %26, -32768
  %arrayidx.i54 = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %prev.0.lcssa
  %27 = ptrtoint ptr %arrayidx.i54 to i32
  call void @__asan_store2_noabort(i32 %27)
  store i16 %conv.i53, ptr %arrayidx.i54, align 2
  %conv1.i55 = trunc i32 %offset to i16
  %add.i56 = add nuw i32 %prev.0.lcssa, 1
  %arrayidx2.i57 = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %add.i56
  %28 = ptrtoint ptr %arrayidx2.i57 to i32
  call void @__asan_store2_noabort(i32 %28)
  store i16 %conv1.i55, ptr %arrayidx2.i57, align 2
  br label %cleanup

init_chain_block.exit71:                          ; preds = %if.end4
  %29 = lshr i32 %1, 16
  %30 = trunc i32 %29 to i16
  %conv.i58 = or i16 %30, -32768
  %arrayidx.i59 = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %offset
  %31 = ptrtoint ptr %arrayidx.i59 to i32
  call void @__asan_store2_noabort(i32 %31)
  store i16 %conv.i58, ptr %arrayidx.i59, align 2
  %conv1.i60 = trunc i32 %1 to i16
  %add.i61 = add i32 %offset, 1
  %arrayidx2.i62 = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %add.i61
  %32 = ptrtoint ptr %arrayidx2.i62 to i32
  call void @__asan_store2_noabort(i32 %32)
  store i16 %conv1.i60, ptr %arrayidx2.i62, align 2
  %33 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %offset, ptr %arrayidx, align 4
  br label %cleanup

cleanup:                                          ; preds = %init_chain_block.exit71, %if.else, %if.then15, %if.then3, %if.then
  ret void
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @check_noncircular(ptr nocapture noundef readonly %src, ptr noundef %target, ptr nocapture noundef %trace) unnamed_addr #23 align 64 {
entry:
  %target_entry = alloca ptr, align 4
  %src_entry = alloca %struct.lock_list, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %target_entry) #28
  %0 = ptrtoint ptr %target_entry to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %target_entry, align 4, !annotation !1502
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %src_entry) #28
  %1 = getelementptr inbounds %struct.lock_list, ptr %src_entry, i32 0, i32 1
  %2 = getelementptr inbounds %struct.lock_list, ptr %src_entry, i32 0, i32 6
  %3 = getelementptr inbounds %struct.lock_list, ptr %src_entry, i32 0, i32 7
  %class_idx1.i.i = getelementptr inbounds %struct.held_lock, ptr %src, i32 0, i32 6
  %4 = call ptr @memset(ptr %src_entry, i32 255, i32 24)
  %5 = ptrtoint ptr %class_idx1.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %bf.load.i.i = load i32, ptr %class_idx1.i.i, align 8
  %bf.lshr.i.i = lshr i32 %bf.load.i.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i.i = lshr i32 %bf.load.i.i, 24
  %arrayidx.i.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i.i
  %6 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i = and i32 %bf.lshr.i.i, 31
  %8 = shl nuw i32 1, %and.i.i.i
  %9 = and i32 %8, %7
  %tobool.not.i.i = icmp eq i32 %9, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.end33.i.i

if.then.i.i:                                      ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %10 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i.i = icmp eq i32 %10, 0
  br i1 %tobool2.not.i.i, label %do.end.i.i, label %bfs_init_root.exit

do.end.i.i:                                       ; preds = %if.then.i.i
  %call4.i.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %bfs_init_root.exit, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %do.end.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %11 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i.i = icmp eq i32 %11, 0
  br i1 %tobool6.not.i.i, label %do.end15.i.i, label %bfs_init_root.exit

do.end15.i.i:                                     ; preds = %land.lhs.true.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %bfs_init_root.exit

if.end33.i.i:                                     ; preds = %entry
  %add.ptr.i.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i.i
  br label %bfs_init_root.exit

bfs_init_root.exit:                               ; preds = %if.end33.i.i, %do.end15.i.i, %land.lhs.true.i.i, %do.end.i.i, %if.then.i.i
  %retval.0.i.i = phi ptr [ %add.ptr.i.i, %if.end33.i.i ], [ null, %do.end15.i.i ], [ null, %land.lhs.true.i.i ], [ null, %do.end.i.i ], [ null, %if.then.i.i ]
  %12 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %retval.0.i.i, ptr %1, align 4
  %13 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %3, align 4
  %14 = ptrtoint ptr %class_idx1.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %bf.load.i = load i32, ptr %class_idx1.i.i, align 8
  %15 = and i32 %bf.load.i, 49152
  %cmp.i = icmp eq i32 %15, 32768
  %conv1.i = zext i1 %cmp.i to i8
  %16 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %conv1.i, ptr %2, align 1
  %17 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i = and i32 %17, 128
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %land.rhs, label %if.end43

land.rhs:                                         ; preds = %bfs_init_root.exit
  %.b89 = load i1, ptr @check_noncircular.__already_done, align 1
  br i1 %.b89, label %if.end43, label %if.then, !prof !1500

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @check_noncircular.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2129, i32 noundef 9, ptr noundef null) #28
  br label %if.end43

if.end43:                                         ; preds = %if.then, %land.rhs, %bfs_init_root.exit
  %18 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i90 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i90 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 3
  %20 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %21
  %22 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx, align 4
  %add = add i32 %23, ptrtoint (ptr getelementptr inbounds (%struct.lockdep_stats, ptr @lockdep_stats, i32 0, i32 13) to i32)
  %24 = inttoptr i32 %add to ptr
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %24, align 4
  %add63 = add i32 %26, 1
  store i32 %add63, ptr %24, align 4
  %call68 = call fastcc i32 @check_path(ptr noundef %target, ptr noundef nonnull %src_entry, ptr noundef nonnull %target_entry)
  %cmp69 = icmp eq i32 %call68, 0
  br i1 %cmp69, label %if.then77, label %if.end82, !prof !1501

if.then77:                                        ; preds = %if.end43
  %27 = ptrtoint ptr %trace to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %trace, align 4
  %tobool78.not = icmp eq ptr %28, null
  br i1 %tobool78.not, label %if.then79, label %if.end81

if.then79:                                        ; preds = %if.then77
  %call80 = call fastcc ptr @save_trace()
  %29 = ptrtoint ptr %trace to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %call80, ptr %trace, align 4
  br label %if.end81

if.end81:                                         ; preds = %if.then79, %if.then77
  %30 = ptrtoint ptr %target_entry to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %target_entry, align 4
  call fastcc void @print_circular_bug(ptr noundef nonnull %src_entry, ptr noundef %31, ptr noundef %src, ptr noundef %target)
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.end43
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %src_entry) #28
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %target_entry) #28
  ret i32 %call68
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @add_lock_to_list(ptr noundef %this, ptr noundef %links_to, ptr noundef %head, i16 noundef zeroext %distance, i8 noundef zeroext %dep, ptr noundef %trace) unnamed_addr #0 align 64 {
entry:
  %call.i = tail call i32 @_find_first_zero_bit_be(ptr noundef nonnull @list_entries_in_use, i32 noundef 32768) #28
  %cmp.i = icmp ugt i32 %call.i, 32767
  br i1 %cmp.i, label %if.then.i, label %alloc_list_entry.exit

if.then.i:                                        ; preds = %entry
  %call.i.i = tail call i32 @debug_locks_off() #28
  tail call fastcc void @lockdep_unlock() #28
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %cleanup, label %if.end.i

if.end.i:                                         ; preds = %if.then.i
  %call.i6.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.198, ptr noundef nonnull @.str.676) #32
  %call4.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.201) #32
  %call8.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.204) #32
  tail call void @dump_stack() #32
  br label %cleanup

alloc_list_entry.exit:                            ; preds = %entry
  %0 = load i32, ptr @nr_list_entries, align 4
  %inc.i = add i32 %0, 1
  store i32 %inc.i, ptr @nr_list_entries, align 4
  %rem.i.i = and i32 %call.i, 31
  %shl.i.i = shl nuw i32 1, %rem.i.i
  %div2.i.i = lshr i32 %call.i, 5
  %add.ptr.i.i = getelementptr i32, ptr @list_entries_in_use, i32 %div2.i.i
  %1 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %add.ptr.i.i, align 4
  %or.i.i = or i32 %2, %shl.i.i
  store i32 %or.i.i, ptr %add.ptr.i.i, align 4
  %add.ptr.i = getelementptr %struct.lock_list, ptr @list_entries, i32 %call.i
  %tobool.not = icmp eq ptr %add.ptr.i, null
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %alloc_list_entry.exit
  %class = getelementptr %struct.lock_list, ptr @list_entries, i32 %call.i, i32 1
  %3 = ptrtoint ptr %class to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %this, ptr %class, align 4
  %links_to2 = getelementptr %struct.lock_list, ptr @list_entries, i32 %call.i, i32 2
  %4 = ptrtoint ptr %links_to2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %links_to, ptr %links_to2, align 4
  %dep3 = getelementptr %struct.lock_list, ptr @list_entries, i32 %call.i, i32 5
  %5 = ptrtoint ptr %dep3 to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %dep, ptr %dep3, align 2
  %distance4 = getelementptr %struct.lock_list, ptr @list_entries, i32 %call.i, i32 4
  %6 = ptrtoint ptr %distance4 to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 %distance, ptr %distance4, align 4
  %trace5 = getelementptr %struct.lock_list, ptr @list_entries, i32 %call.i, i32 3
  %7 = ptrtoint ptr %trace5 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %trace, ptr %trace5, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %head, i32 0, i32 1
  %8 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %prev.i, align 4
  %call.i.i1 = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %add.ptr.i, ptr noundef %9, ptr noundef %head) #28
  br i1 %call.i.i1, label %if.end.i.i, label %cleanup

if.end.i.i:                                       ; preds = %if.end
  %10 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %head, ptr %add.ptr.i, align 4
  %prev2.i.i = getelementptr inbounds %struct.list_head, ptr %add.ptr.i, i32 0, i32 1
  %11 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %9, ptr %prev2.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #28, !srcloc !1558
  %12 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %add.ptr.i, ptr %9, align 4
  %13 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %add.ptr.i, ptr %prev.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end.i.i, %if.end, %alloc_list_entry.exit, %if.end.i, %if.then.i
  %retval.0 = phi i32 [ 0, %alloc_list_entry.exit ], [ 1, %if.end ], [ 1, %if.end.i.i ], [ 0, %if.end.i ], [ 0, %if.then.i ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @check_path(ptr noundef %target, ptr noundef %src_entry, ptr nocapture noundef writeonly %target_entry) unnamed_addr #23 align 64 {
entry:
  %call.i = tail call fastcc i32 @__bfs(ptr noundef %src_entry, ptr noundef %target, ptr noundef nonnull @hlock_conflict, ptr noundef null, ptr noundef %target_entry, i32 noundef 16) #28
  %cmp.i = icmp slt i32 %call.i, 0
  br i1 %cmp.i, label %if.then, label %if.end, !prof !1501

if.then:                                          ; preds = %entry
  tail call fastcc void @print_bfs_bug(i32 noundef %call.i)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i32 %call.i
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i1 @hlock_conflict(ptr nocapture noundef readonly %entry1, ptr nocapture noundef readonly %data) #10 align 64 {
entry:
  %class_idx1.i = getelementptr inbounds %struct.held_lock, ptr %data, i32 0, i32 6
  %0 = ptrtoint ptr %class_idx1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load.i = load i32, ptr %class_idx1.i, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i = lshr i32 %bf.load.i, 24
  %arrayidx.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i
  %1 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %bf.lshr.i, 31
  %3 = shl nuw i32 1, %and.i.i
  %4 = and i32 %3, %2
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end33.i

if.then.i:                                        ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %5 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i = icmp eq i32 %5, 0
  br i1 %tobool2.not.i, label %do.end.i, label %hlock_class.exit

do.end.i:                                         ; preds = %if.then.i
  %call4.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %hlock_class.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.end.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %6 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i = icmp eq i32 %6, 0
  br i1 %tobool6.not.i, label %do.end15.i, label %hlock_class.exit

do.end15.i:                                       ; preds = %land.lhs.true.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit

if.end33.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i
  br label %hlock_class.exit

hlock_class.exit:                                 ; preds = %if.end33.i, %do.end15.i, %land.lhs.true.i, %do.end.i, %if.then.i
  %retval.0.i = phi ptr [ %add.ptr.i, %if.end33.i ], [ null, %do.end15.i ], [ null, %land.lhs.true.i ], [ null, %do.end.i ], [ null, %if.then.i ]
  %class = getelementptr inbounds %struct.lock_list, ptr %entry1, i32 0, i32 1
  %7 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %class, align 4
  %cmp = icmp eq ptr %retval.0.i, %8
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %hlock_class.exit
  %9 = ptrtoint ptr %class_idx1.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %bf.load = load i32, ptr %class_idx1.i, align 8
  %10 = and i32 %bf.load, 49152
  %cmp2 = icmp eq i32 %10, 0
  br i1 %cmp2, label %land.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %only_xr = getelementptr inbounds %struct.lock_list, ptr %entry1, i32 0, i32 6
  %11 = ptrtoint ptr %only_xr to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %only_xr, align 1
  %tobool.not = icmp eq i8 %12, 0
  br label %land.end

land.end:                                         ; preds = %lor.rhs, %land.rhs, %hlock_class.exit
  %13 = phi i1 [ false, %hlock_class.exit ], [ true, %land.rhs ], [ %tobool.not, %lor.rhs ]
  ret i1 %13
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_circular_bug(ptr nocapture noundef writeonly %this, ptr nocapture noundef readonly %target, ptr nocapture noundef readonly %check_src, ptr nocapture noundef readonly %check_tgt) unnamed_addr #23 align 64 {
entry:
  %0 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %call.i = tail call i32 @debug_locks_off() #28
  tail call fastcc void @lockdep_unlock() #28
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %4 = load i32, ptr @debug_locks_silent, align 4
  %tobool2.not = icmp eq i32 %4, 0
  br i1 %tobool2.not, label %if.end, label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %call3 = tail call fastcc ptr @save_trace()
  %trace = getelementptr inbounds %struct.lock_list, ptr %this, i32 0, i32 3
  %5 = ptrtoint ptr %trace to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call3, ptr %trace, align 4
  %tobool5.not = icmp eq ptr %call3, null
  br i1 %tobool5.not, label %cleanup, label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i, %if.end
  %child.addr.0.i = phi ptr [ %7, %while.cond.i ], [ %target, %if.end ]
  %depth.0.i = phi i32 [ %inc.i, %while.cond.i ], [ 0, %if.end ]
  %parent.i.i = getelementptr inbounds %struct.lock_list, ptr %child.addr.0.i, i32 0, i32 7
  %6 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %parent.i.i, align 4
  %tobool.not.i = icmp eq ptr %7, null
  %inc.i = add i32 %depth.0.i, 1
  br i1 %tobool.not.i, label %get_lock_depth.exit, label %while.cond.i

get_lock_depth.exit:                              ; preds = %while.cond.i
  tail call fastcc void @print_circular_bug_header(ptr noundef %target, i32 noundef %depth.0.i, ptr noundef %check_src, ptr noundef %check_tgt)
  %parent.i = getelementptr inbounds %struct.lock_list, ptr %target, i32 0, i32 7
  %8 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %parent.i, align 4
  %tobool10.not31 = icmp eq ptr %9, null
  br i1 %tobool10.not31, label %do.end, label %while.body

while.body:                                       ; preds = %while.body, %get_lock_depth.exit
  %parent.033 = phi ptr [ %11, %while.body ], [ %9, %get_lock_depth.exit ]
  %depth.032 = phi i32 [ %dec, %while.body ], [ %depth.0.i, %get_lock_depth.exit ]
  %dec = add i32 %depth.032, -1
  tail call fastcc void @print_circular_bug_entry(ptr noundef nonnull %parent.033, i32 noundef %dec)
  %parent.i30 = getelementptr inbounds %struct.lock_list, ptr %parent.033, i32 0, i32 7
  %10 = ptrtoint ptr %parent.i30 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %parent.i30, align 4
  %tobool10.not = icmp eq ptr %11, null
  br i1 %tobool10.not, label %do.end, label %while.body

do.end:                                           ; preds = %while.body, %get_lock_depth.exit
  %call12 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.561) #32
  tail call fastcc void @print_circular_lock_scenario(ptr noundef %check_src, ptr noundef %check_tgt, ptr noundef %9)
  tail call fastcc void @lockdep_print_held_locks(ptr noundef %3)
  %call17 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.564) #32
  tail call void @dump_stack() #32
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end, %lor.lhs.false, %entry
  ret void
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_circular_bug_header(ptr nocapture noundef readonly %entry1, i32 noundef %depth, ptr nocapture noundef readonly %check_src, ptr nocapture noundef readonly %check_tgt) unnamed_addr #23 align 64 {
entry:
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %0 = load i32, ptr @debug_locks_silent, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %do.end, label %cleanup

do.end:                                           ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task, align 8
  %call2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.89) #32
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.568) #32
  %call12 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.571) #32
  %call3.i = tail call i32 @strcspn(ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef nonnull @.str.766) #28
  %call7.i = tail call ptr @print_tainted() #28
  %call8.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.764, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 2), i32 noundef %call3.i, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef %call7.i) #32
  %call17 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.574) #32
  %comm = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 101
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 68
  %5 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %pid.i, align 8
  %call23 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.532, ptr noundef %comm, i32 noundef %6) #32
  tail call fastcc void @print_lock(ptr noundef %check_src)
  %call28 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.535) #32
  tail call fastcc void @print_lock(ptr noundef %check_tgt)
  %call33 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.581) #32
  %call38 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.584) #32
  tail call fastcc void @print_circular_bug_entry(ptr noundef %entry1, i32 noundef %depth)
  br label %cleanup

cleanup:                                          ; preds = %do.end, %entry
  ret void
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_circular_bug_entry(ptr nocapture noundef readonly %target, i32 noundef %depth) unnamed_addr #23 align 64 {
entry:
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %0 = load i32, ptr @debug_locks_silent, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %do.end, label %return

do.end:                                           ; preds = %entry
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.586, i32 noundef %depth) #32
  %class = getelementptr inbounds %struct.lock_list, ptr %target, i32 0, i32 1
  %1 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %class, align 4
  tail call fastcc void @print_lock_name(ptr noundef %2)
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.589) #32
  %trace = getelementptr inbounds %struct.lock_list, ptr %target, i32 0, i32 3
  %3 = ptrtoint ptr %trace to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %trace, align 4
  %entries.i = getelementptr inbounds %struct.lock_trace, ptr %4, i32 0, i32 3
  %nr_entries.i = getelementptr inbounds %struct.lock_trace, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %nr_entries.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %nr_entries.i, align 4
  tail call void @stack_trace_print(ptr noundef %entries.i, i32 noundef %6, i32 noundef 6) #28
  br label %return

return:                                           ; preds = %do.end, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_circular_lock_scenario(ptr nocapture noundef readonly %src, ptr nocapture noundef readonly %tgt, ptr nocapture noundef readonly %prt) unnamed_addr #0 align 64 {
entry:
  %class_idx1.i = getelementptr inbounds %struct.held_lock, ptr %src, i32 0, i32 6
  %0 = ptrtoint ptr %class_idx1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load.i = load i32, ptr %class_idx1.i, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i = lshr i32 %bf.load.i, 24
  %arrayidx.i.i = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i
  %1 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %bf.lshr.i, 31
  %3 = shl nuw i32 1, %and.i.i
  %4 = and i32 %3, %2
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end33.i

if.then.i:                                        ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %5 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i = icmp eq i32 %5, 0
  br i1 %tobool2.not.i, label %do.end.i, label %hlock_class.exit

do.end.i:                                         ; preds = %if.then.i
  %call4.i = tail call i32 @debug_locks_off() #28
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %hlock_class.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.end.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %6 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i = icmp eq i32 %6, 0
  br i1 %tobool6.not.i, label %do.end15.i, label %hlock_class.exit

do.end15.i:                                       ; preds = %land.lhs.true.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit

if.end33.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i
  br label %hlock_class.exit

hlock_class.exit:                                 ; preds = %if.end33.i, %do.end15.i, %land.lhs.true.i, %do.end.i, %if.then.i
  %retval.0.i = phi ptr [ %add.ptr.i, %if.end33.i ], [ null, %do.end15.i ], [ null, %land.lhs.true.i ], [ null, %do.end.i ], [ null, %if.then.i ]
  %class_idx1.i84 = getelementptr inbounds %struct.held_lock, ptr %tgt, i32 0, i32 6
  %7 = ptrtoint ptr %class_idx1.i84 to i32
  call void @__asan_load4_noabort(i32 %7)
  %bf.load.i85 = load i32, ptr %class_idx1.i84, align 8
  %bf.lshr.i86 = lshr i32 %bf.load.i85, 19
  tail call void asm sideeffect "", "~{memory}"() #28, !srcloc !1543
  %div3.i.i87 = lshr i32 %bf.load.i85, 24
  %arrayidx.i.i88 = getelementptr i32, ptr @lock_classes_in_use, i32 %div3.i.i87
  %8 = ptrtoint ptr %arrayidx.i.i88 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %arrayidx.i.i88, align 4
  %and.i.i89 = and i32 %bf.lshr.i86, 31
  %10 = shl nuw i32 1, %and.i.i89
  %11 = and i32 %10, %9
  %tobool.not.i90 = icmp eq i32 %11, 0
  br i1 %tobool.not.i90, label %if.then.i92, label %if.end33.i100

if.then.i92:                                      ; preds = %hlock_class.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %12 = load i32, ptr @oops_in_progress, align 4
  %tobool2.not.i91 = icmp eq i32 %12, 0
  br i1 %tobool2.not.i91, label %do.end.i95, label %hlock_class.exit102

do.end.i95:                                       ; preds = %if.then.i92
  %call4.i93 = tail call i32 @debug_locks_off() #28
  %tobool5.not.i94 = icmp eq i32 %call4.i93, 0
  br i1 %tobool5.not.i94, label %hlock_class.exit102, label %land.lhs.true.i97

land.lhs.true.i97:                                ; preds = %do.end.i95
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %13 = load i32, ptr @debug_locks_silent, align 4
  %tobool6.not.i96 = icmp eq i32 %13, 0
  br i1 %tobool6.not.i96, label %do.end15.i98, label %hlock_class.exit102

do.end15.i98:                                     ; preds = %land.lhs.true.i97
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 203, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.48) #28
  br label %hlock_class.exit102

if.end33.i100:                                    ; preds = %hlock_class.exit
  %add.ptr.i99 = getelementptr %struct.lock_class, ptr @lock_classes, i32 %bf.lshr.i86
  br label %hlock_class.exit102

hlock_class.exit102:                              ; preds = %if.end33.i100, %do.end15.i98, %land.lhs.true.i97, %do.end.i95, %if.then.i92
  %retval.0.i101 = phi ptr [ %add.ptr.i99, %if.end33.i100 ], [ null, %do.end15.i98 ], [ null, %land.lhs.true.i97 ], [ null, %do.end.i95 ], [ null, %if.then.i92 ]
  %class = getelementptr inbounds %struct.lock_list, ptr %prt, i32 0, i32 1
  %14 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %class, align 4
  %cmp.not = icmp eq ptr %15, %retval.0.i
  br i1 %cmp.not, label %do.end20, label %do.end

do.end:                                           ; preds = %hlock_class.exit102
  %call2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.289) #32
  tail call fastcc void @__print_lock_name(ptr noundef %retval.0.i)
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.292) #32
  tail call fastcc void @__print_lock_name(ptr noundef %15)
  %call12 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.292) #32
  tail call fastcc void @__print_lock_name(ptr noundef %retval.0.i101)
  %call17 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.297) #32
  br label %do.end20

do.end20:                                         ; preds = %do.end, %hlock_class.exit102
  %call22 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.230) #32
  %call27 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.303) #32
  %call32 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.306) #32
  %call37 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.239) #32
  tail call fastcc void @__print_lock_name(ptr noundef %retval.0.i101)
  %call42 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.242) #32
  %call47 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.316) #32
  tail call fastcc void @__print_lock_name(ptr noundef %15)
  %call52 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.242) #32
  %call57 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.316) #32
  tail call fastcc void @__print_lock_name(ptr noundef %retval.0.i101)
  %call62 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.242) #32
  %call67 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.239) #32
  tail call fastcc void @__print_lock_name(ptr noundef %retval.0.i)
  %call72 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.242) #32
  %call77 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.253) #32
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @prandom_u32() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_lock_contention_bug(ptr noundef %curr, ptr nocapture noundef readonly %lock, i32 noundef %ip) unnamed_addr #0 align 64 {
entry:
  %str.i = alloca [128 x i8], align 1
  %call = tail call i32 @debug_locks_off() #28
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %0 = load i32, ptr @debug_locks_silent, align 4
  %tobool1.not = icmp eq i32 %0, 0
  br i1 %tobool1.not, label %do.end, label %return

do.end:                                           ; preds = %if.end
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.89) #32
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.684) #32
  %call12 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.687) #32
  %call3.i = tail call i32 @strcspn(ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef nonnull @.str.766) #28
  %call7.i = tail call ptr @print_tainted() #28
  %call8.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.764, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 2), i32 noundef %call3.i, ptr noundef getelementptr inbounds (%struct.uts_namespace, ptr @init_uts_ns, i32 0, i32 0, i32 3), ptr noundef %call7.i) #32
  %call16 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.690) #32
  %comm = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 101
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %curr, i32 0, i32 68
  %1 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %pid.i, align 8
  %call21 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.693, ptr noundef %comm, i32 noundef %2) #32
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %str.i) #28
  %3 = call ptr @memset(ptr %str.i, i32 255, i32 128)
  %name1.i = getelementptr inbounds %struct.lockdep_map, ptr %lock, i32 0, i32 2
  %4 = ptrtoint ptr %name1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %name1.i, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.then.i, label %print_lockdep_cache.exit

if.then.i:                                        ; preds = %do.end
  %6 = ptrtoint ptr %lock to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %lock, align 4
  %8 = ptrtoint ptr %7 to i32
  %call.i.i = call ptr @kallsyms_lookup(i32 noundef %8, ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef nonnull %str.i) #28
  br label %print_lockdep_cache.exit

print_lockdep_cache.exit:                         ; preds = %if.then.i, %do.end
  %name.0.i = phi ptr [ %5, %do.end ], [ %call.i.i, %if.then.i ]
  %call3.i40 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.173, ptr noundef %name.0.i) #32
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %str.i) #28
  %call25 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.397) #32
  %9 = inttoptr i32 %ip to ptr
  %call.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.408, ptr noundef nonnull @.str.399, ptr noundef %9, ptr noundef %9) #32
  %call29 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.698) #32
  %call33 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.226) #32
  call fastcc void @lockdep_print_held_locks(ptr noundef %curr)
  %call37 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134) #32
  call void @dump_stack() #32
  br label %return

return:                                           ; preds = %print_lockdep_cache.exit, %if.end, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_rcu_head(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__free_zapped_classes(ptr noundef %pf) unnamed_addr #0 align 64 {
entry:
  %0 = load i32, ptr @check_consistency, align 4
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %check_data_structures.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %entry
  %.b27.i = load i1, ptr @check_data_structures.once, align 1
  br i1 %.b27.i, label %check_data_structures.exit, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i, %land.lhs.true.i
  %i.0293.i.i = phi i32 [ %inc.i.i, %for.inc.i.i ], [ 0, %land.lhs.true.i ]
  %lock_entry.i.i = getelementptr [8192 x %struct.lock_class], ptr @lock_classes, i32 0, i32 %i.0293.i.i, i32 1
  br label %for.cond.i.i.i

for.cond.i.i.i:                                   ; preds = %for.cond.i.i.i, %for.body.i.i
  %f.0.in.i.i.i = phi ptr [ @all_lock_classes, %for.body.i.i ], [ %f.0.i.i.i, %for.cond.i.i.i ]
  %1 = ptrtoint ptr %f.0.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %f.0.i.i.i = load ptr, ptr %f.0.in.i.i.i, align 4
  %cmp.i.i.i.i = icmp ne ptr %f.0.i.i.i, @all_lock_classes
  %cmp.i.i.i = icmp ne ptr %f.0.i.i.i, %lock_entry.i.i
  %2 = and i1 %cmp.i.i.i.i, %cmp.i.i.i
  br i1 %2, label %for.cond.i.i.i, label %in_list.exit.i.i

in_list.exit.i.i:                                 ; preds = %for.cond.i.i.i
  br i1 %cmp.i.i.i.i, label %for.inc.i.i, label %for.cond.i204.i.i

for.cond.i204.i.i:                                ; preds = %for.cond.i204.i.i, %in_list.exit.i.i
  %f.0.in.i200.i.i = phi ptr [ %f.0.i201.i.i, %for.cond.i204.i.i ], [ @free_lock_classes, %in_list.exit.i.i ]
  %3 = ptrtoint ptr %f.0.in.i200.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %f.0.i201.i.i = load ptr, ptr %f.0.in.i200.i.i, align 4
  %cmp.i.i202.i.i = icmp ne ptr %f.0.i201.i.i, @free_lock_classes
  %cmp.i203.i.i = icmp ne ptr %f.0.i201.i.i, %lock_entry.i.i
  %4 = and i1 %cmp.i.i202.i.i, %cmp.i203.i.i
  br i1 %4, label %for.cond.i204.i.i, label %in_list.exit205.i.i

in_list.exit205.i.i:                              ; preds = %for.cond.i204.i.i
  br i1 %cmp.i.i202.i.i, label %for.inc.i.i, label %for.cond.i.i.i.i

for.cond.i.i.i.i:                                 ; preds = %for.cond.i.i.i.i, %in_list.exit205.i.i
  %f.0.in.i.i.i.i = phi ptr [ %f.0.i.i.i.i, %for.cond.i.i.i.i ], [ getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3), %in_list.exit205.i.i ]
  %5 = ptrtoint ptr %f.0.in.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %f.0.i.i.i.i = load ptr, ptr %f.0.in.i.i.i.i, align 4
  %cmp.i.i.i.i.i = icmp ne ptr %f.0.i.i.i.i, getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3)
  %cmp.i.i206.i.i = icmp ne ptr %f.0.i.i.i.i, %lock_entry.i.i
  %6 = and i1 %cmp.i.i.i.i.i, %cmp.i.i206.i.i
  br i1 %6, label %for.cond.i.i.i.i, label %in_list.exit.i.i.i

in_list.exit.i.i.i:                               ; preds = %for.cond.i.i.i.i
  br i1 %cmp.i.i.i.i.i, label %for.inc.i.i, label %for.cond.i.1.i.i.i

for.cond.i.1.i.i.i:                               ; preds = %for.cond.i.1.i.i.i, %in_list.exit.i.i.i
  %f.0.in.i.1.i.i.i = phi ptr [ %f.0.i.1.i.i.i, %for.cond.i.1.i.i.i ], [ getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3, i32 1), %in_list.exit.i.i.i ]
  %7 = ptrtoint ptr %f.0.in.i.1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %f.0.i.1.i.i.i = load ptr, ptr %f.0.in.i.1.i.i.i, align 4
  %cmp.i.i.1.i.i.i = icmp ne ptr %f.0.i.1.i.i.i, getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3, i32 1)
  %cmp.i.1.i.i.i = icmp ne ptr %f.0.i.1.i.i.i, %lock_entry.i.i
  %8 = and i1 %cmp.i.i.1.i.i.i, %cmp.i.1.i.i.i
  br i1 %8, label %for.cond.i.1.i.i.i, label %in_any_zapped_class_list.exit.i.i

in_any_zapped_class_list.exit.i.i:                ; preds = %for.cond.i.1.i.i.i
  br i1 %cmp.i.i.1.i.i.i, label %for.inc.i.i, label %do.end.i.i

do.end.i.i:                                       ; preds = %in_any_zapped_class_list.exit.i.i
  %arrayidx.le.i.i = getelementptr [8192 x %struct.lock_class], ptr @lock_classes, i32 0, i32 %i.0293.i.i
  %name.i.i = getelementptr [8192 x %struct.lock_class], ptr @lock_classes, i32 0, i32 %i.0293.i.i, i32 10
  %9 = ptrtoint ptr %name.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %name.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %10, null
  %..str.706.i.i = select i1 %tobool.not.i.i, ptr @.str.706, ptr %10
  %call5.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.704, ptr noundef %arrayidx.le.i.i, ptr noundef %..str.706.i.i) #32
  br label %if.then2.i

for.inc.i.i:                                      ; preds = %in_any_zapped_class_list.exit.i.i, %in_list.exit.i.i.i, %in_list.exit205.i.i, %in_list.exit.i.i
  %inc.i.i = add nuw nsw i32 %i.0293.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, 8192
  br i1 %exitcond.not.i.i, label %for.body8.i.i, label %for.body.i.i

for.body8.i.i:                                    ; preds = %for.inc16.i.i, %for.inc.i.i
  %i.1295.i.i = phi i32 [ %inc17.i.i, %for.inc16.i.i ], [ 0, %for.inc.i.i ]
  %arrayidx9.i.i = getelementptr [8192 x %struct.lock_class], ptr @lock_classes, i32 0, i32 %i.1295.i.i
  %locks_before.i.i = getelementptr [8192 x %struct.lock_class], ptr @lock_classes, i32 0, i32 %i.1295.i.i, i32 3
  br label %for.cond.i207.i.i

for.cond.i207.i.i:                                ; preds = %for.body.i.i.i, %for.body8.i.i
  %e.0.in.i.i.i = phi ptr [ %locks_before.i.i, %for.body8.i.i ], [ %e.0.i.i.i, %for.body.i.i.i ]
  %11 = ptrtoint ptr %e.0.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %e.0.i.i.i = load ptr, ptr %e.0.in.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %e.0.i.i.i, %locks_before.i.i
  br i1 %cmp.not.i.i.i, label %if.end12.i.i, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.cond.i207.i.i
  %links_to.i.i.i = getelementptr inbounds %struct.lock_list, ptr %e.0.i.i.i, i32 0, i32 2
  %12 = ptrtoint ptr %links_to.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %links_to.i.i.i, align 4
  %cmp2.not.i.i.i = icmp eq ptr %13, %arrayidx9.i.i
  br i1 %cmp2.not.i.i.i, label %for.cond.i207.i.i, label %do.end.i.i.i

do.end.i.i.i:                                     ; preds = %for.body.i.i.i
  %name.i.i.i = getelementptr [8192 x %struct.lock_class], ptr @lock_classes, i32 0, i32 %i.1295.i.i, i32 10
  %14 = ptrtoint ptr %name.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %name.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %15, null
  %..str.706.i.i.i = select i1 %tobool.not.i.i.i, ptr @.str.706, ptr %15
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %e.0.i.i.i to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, ptrtoint (ptr @list_entries to i32)
  %sub.ptr.div.i.i.i = sdiv exact i32 %sub.ptr.sub.i.i.i, 28
  %tobool5.not.i.i.i = icmp eq ptr %13, null
  br i1 %tobool5.not.i.i.i, label %cond.end13.i.i.i, label %land.lhs.true.i.i.i

land.lhs.true.i.i.i:                              ; preds = %do.end.i.i.i
  %name7.i.i.i = getelementptr inbounds %struct.lock_class, ptr %13, i32 0, i32 10
  %16 = ptrtoint ptr %name7.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %name7.i.i.i, align 4
  %tobool8.not.i.i.i = icmp eq ptr %17, null
  %spec.select.i.i.i = select i1 %tobool8.not.i.i.i, ptr @.str.706, ptr %17
  br label %cond.end13.i.i.i

cond.end13.i.i.i:                                 ; preds = %land.lhs.true.i.i.i, %do.end.i.i.i
  %cond14.i.i.i = phi ptr [ @.str.706, %do.end.i.i.i ], [ %spec.select.i.i.i, %land.lhs.true.i.i.i ]
  %class.i.i.i = getelementptr inbounds %struct.lock_list, ptr %e.0.i.i.i, i32 0, i32 1
  %18 = ptrtoint ptr %class.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %class.i.i.i, align 4
  %tobool15.not.i.i.i = icmp eq ptr %19, null
  br i1 %tobool15.not.i.i.i, label %class_lock_list_valid.exit.i.i, label %land.lhs.true16.i.i.i

land.lhs.true16.i.i.i:                            ; preds = %cond.end13.i.i.i
  %name18.i.i.i = getelementptr inbounds %struct.lock_class, ptr %19, i32 0, i32 10
  %20 = ptrtoint ptr %name18.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %name18.i.i.i, align 4
  %tobool19.not.i.i.i = icmp eq ptr %21, null
  %spec.select45.i.i.i = select i1 %tobool19.not.i.i.i, ptr @.str.706, ptr %21
  br label %class_lock_list_valid.exit.i.i

class_lock_list_valid.exit.i.i:                   ; preds = %land.lhs.true16.i.i.i, %cond.end13.i.i.i
  %cond25.i.i.i = phi ptr [ @.str.706, %cond.end13.i.i.i ], [ %spec.select45.i.i.i, %land.lhs.true16.i.i.i ]
  %call.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.713, ptr noundef %..str.706.i.i.i, i32 noundef %sub.ptr.div.i.i.i, ptr noundef nonnull %cond14.i.i.i, ptr noundef nonnull %cond25.i.i.i) #32
  br label %if.then2.i

if.end12.i.i:                                     ; preds = %for.cond.i207.i.i
  %locks_after.i.i = getelementptr [8192 x %struct.lock_class], ptr @lock_classes, i32 0, i32 %i.1295.i.i, i32 2
  br label %for.cond.i211.i.i

for.cond.i211.i.i:                                ; preds = %for.body.i214.i.i, %if.end12.i.i
  %e.0.in.i208.i.i = phi ptr [ %locks_after.i.i, %if.end12.i.i ], [ %e.0.i209.i.i, %for.body.i214.i.i ]
  %22 = ptrtoint ptr %e.0.in.i208.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %e.0.i209.i.i = load ptr, ptr %e.0.in.i208.i.i, align 4
  %cmp.not.i210.i.i = icmp eq ptr %e.0.i209.i.i, %locks_after.i.i
  br i1 %cmp.not.i210.i.i, label %for.inc16.i.i, label %for.body.i214.i.i

for.body.i214.i.i:                                ; preds = %for.cond.i211.i.i
  %links_to.i212.i.i = getelementptr inbounds %struct.lock_list, ptr %e.0.i209.i.i, i32 0, i32 2
  %23 = ptrtoint ptr %links_to.i212.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %links_to.i212.i.i, align 4
  %cmp2.not.i213.i.i = icmp eq ptr %24, %arrayidx9.i.i
  br i1 %cmp2.not.i213.i.i, label %for.cond.i211.i.i, label %do.end.i222.i.i

do.end.i222.i.i:                                  ; preds = %for.body.i214.i.i
  %name.i215.i.i = getelementptr [8192 x %struct.lock_class], ptr @lock_classes, i32 0, i32 %i.1295.i.i, i32 10
  %25 = ptrtoint ptr %name.i215.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %name.i215.i.i, align 4
  %tobool.not.i216.i.i = icmp eq ptr %26, null
  %..str.706.i217.i.i = select i1 %tobool.not.i216.i.i, ptr @.str.706, ptr %26
  %sub.ptr.lhs.cast.i218.i.i = ptrtoint ptr %e.0.i209.i.i to i32
  %sub.ptr.sub.i219.i.i = sub i32 %sub.ptr.lhs.cast.i218.i.i, ptrtoint (ptr @list_entries to i32)
  %sub.ptr.div.i220.i.i = sdiv exact i32 %sub.ptr.sub.i219.i.i, 28
  %tobool5.not.i221.i.i = icmp eq ptr %24, null
  br i1 %tobool5.not.i221.i.i, label %cond.end13.i230.i.i, label %land.lhs.true.i226.i.i

land.lhs.true.i226.i.i:                           ; preds = %do.end.i222.i.i
  %name7.i223.i.i = getelementptr inbounds %struct.lock_class, ptr %24, i32 0, i32 10
  %27 = ptrtoint ptr %name7.i223.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %name7.i223.i.i, align 4
  %tobool8.not.i224.i.i = icmp eq ptr %28, null
  %spec.select.i225.i.i = select i1 %tobool8.not.i224.i.i, ptr @.str.706, ptr %28
  br label %cond.end13.i230.i.i

cond.end13.i230.i.i:                              ; preds = %land.lhs.true.i226.i.i, %do.end.i222.i.i
  %cond14.i227.i.i = phi ptr [ @.str.706, %do.end.i222.i.i ], [ %spec.select.i225.i.i, %land.lhs.true.i226.i.i ]
  %class.i228.i.i = getelementptr inbounds %struct.lock_list, ptr %e.0.i209.i.i, i32 0, i32 1
  %29 = ptrtoint ptr %class.i228.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %class.i228.i.i, align 4
  %tobool15.not.i229.i.i = icmp eq ptr %30, null
  br i1 %tobool15.not.i229.i.i, label %class_lock_list_valid.exit238.i.i, label %land.lhs.true16.i234.i.i

land.lhs.true16.i234.i.i:                         ; preds = %cond.end13.i230.i.i
  %name18.i231.i.i = getelementptr inbounds %struct.lock_class, ptr %30, i32 0, i32 10
  %31 = ptrtoint ptr %name18.i231.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %name18.i231.i.i, align 4
  %tobool19.not.i232.i.i = icmp eq ptr %32, null
  %spec.select45.i233.i.i = select i1 %tobool19.not.i232.i.i, ptr @.str.706, ptr %32
  br label %class_lock_list_valid.exit238.i.i

class_lock_list_valid.exit238.i.i:                ; preds = %land.lhs.true16.i234.i.i, %cond.end13.i230.i.i
  %cond25.i235.i.i = phi ptr [ @.str.706, %cond.end13.i230.i.i ], [ %spec.select45.i233.i.i, %land.lhs.true16.i234.i.i ]
  %call.i236.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.713, ptr noundef %..str.706.i217.i.i, i32 noundef %sub.ptr.div.i220.i.i, ptr noundef nonnull %cond14.i227.i.i, ptr noundef nonnull %cond25.i235.i.i) #32
  br label %if.then2.i

for.inc16.i.i:                                    ; preds = %for.cond.i211.i.i
  %inc17.i.i = add nuw nsw i32 %i.1295.i.i, 1
  %exitcond315.not.i.i = icmp eq i32 %inc17.i.i, 8192
  br i1 %exitcond315.not.i.i, label %for.body21.i.i, label %for.body8.i.i

for.body21.i.i:                                   ; preds = %for.inc71.i.i, %for.inc16.i.i
  %i.2298.i.i = phi i32 [ %inc72.i.i, %for.inc71.i.i ], [ 0, %for.inc16.i.i ]
  %add.ptr.i.i = getelementptr %struct.hlist_head, ptr @chainhash_table, i32 %i.2298.i.i
  %call23.i.i = tail call i32 @rcu_read_lock_any_held() #28
  %tobool24.not.i.i = icmp eq i32 %call23.i.i, 0
  br i1 %tobool24.not.i.i, label %land.lhs.true25.i.i, label %do.end33.i.i

land.lhs.true25.i.i:                              ; preds = %for.body21.i.i
  %call26.i.i = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool27.not.i.i = icmp eq i32 %call26.i.i, 0
  br i1 %tobool27.not.i.i, label %do.end33.i.i, label %land.lhs.true28.i.i

land.lhs.true28.i.i:                              ; preds = %land.lhs.true25.i.i
  %.b196.i.i = load i1, ptr @__check_data_structures.__warned, align 1
  br i1 %.b196.i.i, label %do.end33.i.i, label %if.then30.i.i

if.then30.i.i:                                    ; preds = %land.lhs.true28.i.i
  store i1 true, ptr @__check_data_structures.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1082, ptr noundef nonnull @.str.1) #28
  br label %do.end33.i.i

do.end33.i.i:                                     ; preds = %if.then30.i.i, %land.lhs.true28.i.i, %land.lhs.true25.i.i, %for.body21.i.i
  %33 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile ptr, ptr %add.ptr.i.i, align 4
  %tobool40.not.i.i = icmp eq ptr %34, null
  %add.ptr43.i.i = getelementptr i8, ptr %34, i32 -4
  %tobool48.not296317.i.i = icmp eq ptr %add.ptr43.i.i, null
  %tobool48.not296.i.i = or i1 %tobool40.not.i.i, %tobool48.not296317.i.i
  br i1 %tobool48.not296.i.i, label %for.inc71.i.i, label %for.body49.i.i

for.body49.i.i:                                   ; preds = %for.inc53.i.i, %do.end33.i.i
  %chain.0297.i.i = phi ptr [ %add.ptr66.i.i, %for.inc53.i.i ], [ %add.ptr43.i.i, %do.end33.i.i ]
  %35 = ptrtoint ptr %chain.0297.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %bf.load.i.i.i = load i32, ptr %chain.0297.i.i, align 8
  %bf.clear.i.i.i = and i32 %bf.load.i.i.i, 16777215
  %bf.lshr.i.i.i = lshr i32 %bf.load.i.i.i, 24
  %bf.clear4.i.i.i = and i32 %bf.lshr.i.i.i, 63
  %add.i.i.i = add nuw nsw i32 %bf.clear4.i.i.i, %bf.clear.i.i.i
  %cmp21.not.i.i.i = icmp eq i32 %bf.clear4.i.i.i, 0
  br i1 %cmp21.not.i.i.i, label %for.end.i.i.i, label %for.body.i240.i.i

for.body.i240.i.i:                                ; preds = %for.body.i240.i.i, %for.body49.i.i
  %i.023.i.i.i = phi i32 [ %inc.i.i.i, %for.body.i240.i.i ], [ %bf.clear.i.i.i, %for.body49.i.i ]
  %chain_key.022.off0.i.i.i = phi i32 [ %add21.i.i.i.i, %for.body.i240.i.i ], [ -1, %for.body49.i.i ]
  %chain_key.022.off32.i.i.i = phi i32 [ %xor20.i.i.i.i, %for.body.i240.i.i ], [ -1, %for.body49.i.i ]
  %arrayidx.i.i.i = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %i.023.i.i.i
  %36 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %arrayidx.i.i.i, align 2
  %conv.i.i.i = zext i16 %37 to i32
  %sub.i.i.i.i = sub i32 %conv.i.i.i, %chain_key.022.off32.i.i.i
  %or.i.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %chain_key.022.off32.i.i.i, i32 %chain_key.022.off32.i.i.i, i32 4) #28
  %xor.i.i.i.i = xor i32 %sub.i.i.i.i, %or.i.i.i.i.i
  %add.i.i.i.i = add i32 %chain_key.022.off32.i.i.i, %chain_key.022.off0.i.i.i
  %sub2.i.i.i.i = sub i32 %chain_key.022.off0.i.i.i, %xor.i.i.i.i
  %or.i60.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %xor.i.i.i.i, i32 %xor.i.i.i.i, i32 6) #28
  %xor4.i.i.i.i = xor i32 %sub2.i.i.i.i, %or.i60.i.i.i.i
  %add5.i.i.i.i = add i32 %xor.i.i.i.i, %add.i.i.i.i
  %sub6.i.i.i.i = sub i32 %add.i.i.i.i, %xor4.i.i.i.i
  %or.i61.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %xor4.i.i.i.i, i32 %xor4.i.i.i.i, i32 8) #28
  %xor8.i.i.i.i = xor i32 %sub6.i.i.i.i, %or.i61.i.i.i.i
  %add9.i.i.i.i = add i32 %xor4.i.i.i.i, %add5.i.i.i.i
  %sub10.i.i.i.i = sub i32 %add5.i.i.i.i, %xor8.i.i.i.i
  %or.i62.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %xor8.i.i.i.i, i32 %xor8.i.i.i.i, i32 16) #28
  %xor12.i.i.i.i = xor i32 %sub10.i.i.i.i, %or.i62.i.i.i.i
  %add13.i.i.i.i = add i32 %xor8.i.i.i.i, %add9.i.i.i.i
  %sub14.i.i.i.i = sub i32 %add9.i.i.i.i, %xor12.i.i.i.i
  %or.i63.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %xor12.i.i.i.i, i32 %xor12.i.i.i.i, i32 19) #28
  %xor16.i.i.i.i = xor i32 %sub14.i.i.i.i, %or.i63.i.i.i.i
  %add17.i.i.i.i = add i32 %xor12.i.i.i.i, %add13.i.i.i.i
  %sub18.i.i.i.i = sub i32 %add13.i.i.i.i, %xor16.i.i.i.i
  %or.i64.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %xor16.i.i.i.i, i32 %xor16.i.i.i.i, i32 4) #28
  %xor20.i.i.i.i = xor i32 %sub18.i.i.i.i, %or.i64.i.i.i.i
  %add21.i.i.i.i = add i32 %add17.i.i.i.i, %xor16.i.i.i.i
  %inc.i.i.i = add nuw nsw i32 %i.023.i.i.i, 1
  %cmp.i239.i.i = icmp ult i32 %inc.i.i.i, %add.i.i.i
  br i1 %cmp.i239.i.i, label %for.body.i240.i.i, label %for.end.loopexit.i.i.i

for.end.loopexit.i.i.i:                           ; preds = %for.body.i240.i.i
  %conv23.i.i.i.i = zext i32 %xor20.i.i.i.i to i64
  %shl.i.i.i.i = shl nuw i64 %conv23.i.i.i.i, 32
  %conv22.i.i.i.i = zext i32 %add21.i.i.i.i to i64
  %or.i.i.i.i = or i64 %shl.i.i.i.i, %conv22.i.i.i.i
  br label %for.end.i.i.i

for.end.i.i.i:                                    ; preds = %for.end.loopexit.i.i.i, %for.body49.i.i
  %chain_key.0.lcssa.i.i.i = phi i64 [ -1, %for.body49.i.i ], [ %or.i.i.i.i, %for.end.loopexit.i.i.i ]
  %chain_key5.i.i.i = getelementptr inbounds %struct.lock_chain, ptr %chain.0297.i.i, i32 0, i32 2
  %38 = ptrtoint ptr %chain_key5.i.i.i to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %chain_key5.i.i.i, align 8
  %cmp6.not.i.i.i = icmp eq i64 %39, %chain_key.0.lcssa.i.i.i
  br i1 %cmp6.not.i.i.i, label %for.inc53.i.i, label %check_lock_chain_key.exit.i.i

check_lock_chain_key.exit.i.i:                    ; preds = %for.end.i.i.i
  %sub.ptr.lhs.cast.i241.i.i = ptrtoint ptr %chain.0297.i.i to i32
  %sub.ptr.sub.i242.i.i = sub i32 %sub.ptr.lhs.cast.i241.i.i, ptrtoint (ptr @lock_chains to i32)
  %sub.ptr.div.i243.i.i = sdiv exact i32 %sub.ptr.sub.i242.i.i, 24
  %conv8.i.i.i = sext i32 %sub.ptr.div.i243.i.i to i64
  %call10.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.715, i64 noundef %conv8.i.i.i, i64 noundef %39, i64 noundef %chain_key.0.lcssa.i.i.i) #32
  br label %if.then2.i

for.inc53.i.i:                                    ; preds = %for.end.i.i.i
  %entry59.i.i = getelementptr inbounds %struct.lock_chain, ptr %chain.0297.i.i, i32 0, i32 1
  %40 = ptrtoint ptr %entry59.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile ptr, ptr %entry59.i.i, align 4
  %tobool62.not.i.i = icmp eq ptr %41, null
  %add.ptr66.i.i = getelementptr i8, ptr %41, i32 -4
  %tobool48.not330.i.i = icmp eq ptr %add.ptr66.i.i, null
  %tobool48.not.i.i = or i1 %tobool62.not.i.i, %tobool48.not330.i.i
  br i1 %tobool48.not.i.i, label %for.inc71.i.i, label %for.body49.i.i

for.inc71.i.i:                                    ; preds = %for.inc53.i.i, %do.end33.i.i
  %inc72.i.i = add nuw nsw i32 %i.2298.i.i, 1
  %exitcond316.not.i.i = icmp eq i32 %inc72.i.i, 32768
  br i1 %exitcond316.not.i.i, label %for.end73.i.i, label %for.body21.i.i

for.end73.i.i:                                    ; preds = %for.inc71.i.i
  %call74.i.i = tail call i32 @_find_next_bit_be(ptr noundef nonnull @list_entries_in_use, i32 noundef 32768, i32 noundef 0) #28
  %cmp76299.i.i = icmp ult i32 %call74.i.i, 32768
  br i1 %cmp76299.i.i, label %for.body77.i.i, label %for.end103.i.i

for.body77.i.i:                                   ; preds = %for.inc101.i.i, %for.end73.i.i
  %i.3300.i.i = phi i32 [ %call102.i.i, %for.inc101.i.i ], [ %call74.i.i, %for.end73.i.i ]
  %add.ptr78.i.i = getelementptr %struct.lock_list, ptr @list_entries, i32 %i.3300.i.i
  br label %for.body.i248.i.i

for.cond.i247.i.i:                                ; preds = %in_list.exit12.i.i.i
  %inc.i245.i.i = add nuw nsw i32 %i.013.i.i.i, 1
  %cmp.i246.i.i = icmp ult i32 %i.013.i.i.i, 8191
  %exitcond.not.i.i.i = icmp eq i32 %inc.i245.i.i, 8192
  br i1 %exitcond.not.i.i.i, label %in_any_class_list.exit.i.i, label %for.body.i248.i.i

for.body.i248.i.i:                                ; preds = %for.cond.i247.i.i, %for.body77.i.i
  %cmp14.i.i.i = phi i1 [ true, %for.body77.i.i ], [ %cmp.i246.i.i, %for.cond.i247.i.i ]
  %i.013.i.i.i = phi i32 [ 0, %for.body77.i.i ], [ %inc.i245.i.i, %for.cond.i247.i.i ]
  %locks_after.i.i.i = getelementptr [8192 x %struct.lock_class], ptr @lock_classes, i32 0, i32 %i.013.i.i.i, i32 2
  br label %for.cond.i.i253.i.i

for.cond.i.i253.i.i:                              ; preds = %for.cond.i.i253.i.i, %for.body.i248.i.i
  %f.0.in.i.i249.i.i = phi ptr [ %locks_after.i.i.i, %for.body.i248.i.i ], [ %f.0.i.i250.i.i, %for.cond.i.i253.i.i ]
  %42 = ptrtoint ptr %f.0.in.i.i249.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %f.0.i.i250.i.i = load ptr, ptr %f.0.in.i.i249.i.i, align 4
  %cmp.i.i.i251.i.i = icmp ne ptr %f.0.i.i250.i.i, %locks_after.i.i.i
  %cmp.i.i252.i.i = icmp ne ptr %f.0.i.i250.i.i, %add.ptr78.i.i
  %43 = and i1 %cmp.i.i.i251.i.i, %cmp.i.i252.i.i
  br i1 %43, label %for.cond.i.i253.i.i, label %in_list.exit.i254.i.i

in_list.exit.i254.i.i:                            ; preds = %for.cond.i.i253.i.i
  br i1 %cmp.i.i.i251.i.i, label %in_any_class_list.exit.i.i, label %lor.lhs.false.i.i.i

lor.lhs.false.i.i.i:                              ; preds = %in_list.exit.i254.i.i
  %locks_before.i.i.i = getelementptr [8192 x %struct.lock_class], ptr @lock_classes, i32 0, i32 %i.013.i.i.i, i32 3
  br label %for.cond.i11.i.i.i

for.cond.i11.i.i.i:                               ; preds = %for.cond.i11.i.i.i, %lor.lhs.false.i.i.i
  %f.0.in.i7.i.i.i = phi ptr [ %locks_before.i.i.i, %lor.lhs.false.i.i.i ], [ %f.0.i8.i.i.i, %for.cond.i11.i.i.i ]
  %44 = ptrtoint ptr %f.0.in.i7.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %f.0.i8.i.i.i = load ptr, ptr %f.0.in.i7.i.i.i, align 4
  %cmp.i.i9.i.i.i = icmp ne ptr %f.0.i8.i.i.i, %locks_before.i.i.i
  %cmp.i10.i.i.i = icmp ne ptr %f.0.i8.i.i.i, %add.ptr78.i.i
  %45 = and i1 %cmp.i.i9.i.i.i, %cmp.i10.i.i.i
  br i1 %45, label %for.cond.i11.i.i.i, label %in_list.exit12.i.i.i

in_list.exit12.i.i.i:                             ; preds = %for.cond.i11.i.i.i
  br i1 %cmp.i.i9.i.i.i, label %in_any_class_list.exit.i.i, label %for.cond.i247.i.i

in_any_class_list.exit.i.i:                       ; preds = %in_list.exit12.i.i.i, %in_list.exit.i254.i.i, %for.cond.i247.i.i
  %cmp.lcssa.i255.i.i = phi i1 [ %cmp.i246.i.i, %for.cond.i247.i.i ], [ %cmp14.i.i.i, %in_list.exit.i254.i.i ], [ %cmp14.i.i.i, %in_list.exit12.i.i.i ]
  br i1 %cmp.lcssa.i255.i.i, label %for.inc101.i.i, label %do.end84.i.i

do.end84.i.i:                                     ; preds = %in_any_class_list.exit.i.i
  %add.ptr78.idx.i.i = mul i32 %i.3300.i.i, 28
  %sub.ptr.div.i.i = sdiv exact i32 %add.ptr78.idx.i.i, 28
  %class86.i.i = getelementptr %struct.lock_list, ptr @list_entries, i32 %i.3300.i.i, i32 1
  %46 = ptrtoint ptr %class86.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %class86.i.i, align 4
  %name87.i.i = getelementptr inbounds %struct.lock_class, ptr %47, i32 0, i32 10
  %48 = ptrtoint ptr %name87.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %name87.i.i, align 4
  %tobool88.not.i.i = icmp eq ptr %49, null
  %..str.706153.i.i = select i1 %tobool88.not.i.i, ptr @.str.706, ptr %49
  %links_to.i.i = getelementptr %struct.lock_list, ptr @list_entries, i32 %i.3300.i.i, i32 2
  %50 = ptrtoint ptr %links_to.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %links_to.i.i, align 4
  %name93.i.i = getelementptr inbounds %struct.lock_class, ptr %51, i32 0, i32 10
  %52 = ptrtoint ptr %name93.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %name93.i.i, align 4
  %tobool94.not.i.i = icmp eq ptr %53, null
  %cond98.i.i = select i1 %tobool94.not.i.i, ptr @.str.706, ptr %53
  %call99.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.708, i32 noundef %sub.ptr.div.i.i, ptr noundef %..str.706153.i.i, ptr noundef %cond98.i.i) #32
  br label %if.then2.i

for.inc101.i.i:                                   ; preds = %in_any_class_list.exit.i.i
  %add.i.i = add i32 %i.3300.i.i, 1
  %call102.i.i = tail call i32 @_find_next_bit_be(ptr noundef nonnull @list_entries_in_use, i32 noundef 32768, i32 noundef %add.i.i) #28
  %cmp76.i.i = icmp ult i32 %call102.i.i, 32768
  br i1 %cmp76.i.i, label %for.body77.i.i, label %for.end103.i.i

for.end103.i.i:                                   ; preds = %for.inc101.i.i, %for.end73.i.i
  %call104.i.i = tail call i32 @_find_next_zero_bit_be(ptr noundef nonnull @list_entries_in_use, i32 noundef 32768, i32 noundef 0) #28
  %cmp106301.i.i = icmp ult i32 %call104.i.i, 32768
  br i1 %cmp106301.i.i, label %for.body107.i.i, label %check_data_structures.exit

for.body107.i.i:                                  ; preds = %for.inc145.i.i, %for.end103.i.i
  %i.4302.i.i = phi i32 [ %call147.i.i, %for.inc145.i.i ], [ %call104.i.i, %for.end103.i.i ]
  %add.ptr108.i.i = getelementptr %struct.lock_list, ptr @list_entries, i32 %i.4302.i.i
  br label %for.body.i263.i.i

for.cond.i259.i.i:                                ; preds = %in_list.exit12.i277.i.i
  %inc.i256.i.i = add nuw nsw i32 %i.013.i261.i.i, 1
  %cmp.i257.i.i = icmp ult i32 %i.013.i261.i.i, 8191
  %exitcond.not.i258.i.i = icmp eq i32 %inc.i256.i.i, 8192
  br i1 %exitcond.not.i258.i.i, label %in_any_class_list.exit279.i.i, label %for.body.i263.i.i

for.body.i263.i.i:                                ; preds = %for.cond.i259.i.i, %for.body107.i.i
  %cmp14.i260.i.i = phi i1 [ true, %for.body107.i.i ], [ %cmp.i257.i.i, %for.cond.i259.i.i ]
  %i.013.i261.i.i = phi i32 [ 0, %for.body107.i.i ], [ %inc.i256.i.i, %for.cond.i259.i.i ]
  %locks_after.i262.i.i = getelementptr [8192 x %struct.lock_class], ptr @lock_classes, i32 0, i32 %i.013.i261.i.i, i32 2
  br label %for.cond.i.i268.i.i

for.cond.i.i268.i.i:                              ; preds = %for.cond.i.i268.i.i, %for.body.i263.i.i
  %f.0.in.i.i264.i.i = phi ptr [ %locks_after.i262.i.i, %for.body.i263.i.i ], [ %f.0.i.i265.i.i, %for.cond.i.i268.i.i ]
  %54 = ptrtoint ptr %f.0.in.i.i264.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %f.0.i.i265.i.i = load ptr, ptr %f.0.in.i.i264.i.i, align 4
  %cmp.i.i.i266.i.i = icmp ne ptr %f.0.i.i265.i.i, %locks_after.i262.i.i
  %cmp.i.i267.i.i = icmp ne ptr %f.0.i.i265.i.i, %add.ptr108.i.i
  %55 = and i1 %cmp.i.i.i266.i.i, %cmp.i.i267.i.i
  br i1 %55, label %for.cond.i.i268.i.i, label %in_list.exit.i269.i.i

in_list.exit.i269.i.i:                            ; preds = %for.cond.i.i268.i.i
  br i1 %cmp.i.i.i266.i.i, label %in_any_class_list.exit279.i.i, label %lor.lhs.false.i271.i.i

lor.lhs.false.i271.i.i:                           ; preds = %in_list.exit.i269.i.i
  %locks_before.i270.i.i = getelementptr [8192 x %struct.lock_class], ptr @lock_classes, i32 0, i32 %i.013.i261.i.i, i32 3
  br label %for.cond.i11.i276.i.i

for.cond.i11.i276.i.i:                            ; preds = %for.cond.i11.i276.i.i, %lor.lhs.false.i271.i.i
  %f.0.in.i7.i272.i.i = phi ptr [ %locks_before.i270.i.i, %lor.lhs.false.i271.i.i ], [ %f.0.i8.i273.i.i, %for.cond.i11.i276.i.i ]
  %56 = ptrtoint ptr %f.0.in.i7.i272.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %f.0.i8.i273.i.i = load ptr, ptr %f.0.in.i7.i272.i.i, align 4
  %cmp.i.i9.i274.i.i = icmp ne ptr %f.0.i8.i273.i.i, %locks_before.i270.i.i
  %cmp.i10.i275.i.i = icmp ne ptr %f.0.i8.i273.i.i, %add.ptr108.i.i
  %57 = and i1 %cmp.i.i9.i274.i.i, %cmp.i10.i275.i.i
  br i1 %57, label %for.cond.i11.i276.i.i, label %in_list.exit12.i277.i.i

in_list.exit12.i277.i.i:                          ; preds = %for.cond.i11.i276.i.i
  br i1 %cmp.i.i9.i274.i.i, label %in_any_class_list.exit279.i.i, label %for.cond.i259.i.i

in_any_class_list.exit279.i.i:                    ; preds = %in_list.exit12.i277.i.i, %in_list.exit.i269.i.i, %for.cond.i259.i.i
  %cmp.lcssa.i278.i.i = phi i1 [ %cmp.i257.i.i, %for.cond.i259.i.i ], [ %cmp14.i260.i.i, %in_list.exit.i269.i.i ], [ %cmp14.i260.i.i, %in_list.exit12.i277.i.i ]
  br i1 %cmp.lcssa.i278.i.i, label %do.end114.i.i, label %for.inc145.i.i

do.end114.i.i:                                    ; preds = %in_any_class_list.exit279.i.i
  %add.ptr108.idx.i.i = mul i32 %i.4302.i.i, 28
  %sub.ptr.div118.i.i = sdiv exact i32 %add.ptr108.idx.i.i, 28
  %class119.i.i = getelementptr %struct.lock_list, ptr @list_entries, i32 %i.4302.i.i, i32 1
  %58 = ptrtoint ptr %class119.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %class119.i.i, align 4
  %tobool120.not.i.i = icmp eq ptr %59, null
  br i1 %tobool120.not.i.i, label %cond.end129.i.i, label %land.lhs.true121.i.i

land.lhs.true121.i.i:                             ; preds = %do.end114.i.i
  %name123.i.i = getelementptr inbounds %struct.lock_class, ptr %59, i32 0, i32 10
  %60 = ptrtoint ptr %name123.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %name123.i.i, align 4
  %tobool124.not.i.i = icmp eq ptr %61, null
  %spec.select198.i.i = select i1 %tobool124.not.i.i, ptr @.str.706, ptr %61
  br label %cond.end129.i.i

cond.end129.i.i:                                  ; preds = %land.lhs.true121.i.i, %do.end114.i.i
  %cond130.i.i = phi ptr [ @.str.706, %do.end114.i.i ], [ %spec.select198.i.i, %land.lhs.true121.i.i ]
  %links_to131.i.i = getelementptr %struct.lock_list, ptr @list_entries, i32 %i.4302.i.i, i32 2
  %62 = ptrtoint ptr %links_to131.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %links_to131.i.i, align 4
  %tobool132.not.i.i = icmp eq ptr %63, null
  br i1 %tobool132.not.i.i, label %cond.end141.i.i, label %land.lhs.true133.i.i

land.lhs.true133.i.i:                             ; preds = %cond.end129.i.i
  %name135.i.i = getelementptr inbounds %struct.lock_class, ptr %63, i32 0, i32 10
  %64 = ptrtoint ptr %name135.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %name135.i.i, align 4
  %tobool136.not.i.i = icmp eq ptr %65, null
  %spec.select199.i.i = select i1 %tobool136.not.i.i, ptr @.str.706, ptr %65
  br label %cond.end141.i.i

cond.end141.i.i:                                  ; preds = %land.lhs.true133.i.i, %cond.end129.i.i
  %cond142.i.i = phi ptr [ @.str.706, %cond.end129.i.i ], [ %spec.select199.i.i, %land.lhs.true133.i.i ]
  %call143.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.711, i32 noundef %sub.ptr.div118.i.i, ptr noundef nonnull %cond130.i.i, ptr noundef nonnull %cond142.i.i) #32
  br label %if.then2.i

for.inc145.i.i:                                   ; preds = %in_any_class_list.exit279.i.i
  %add146.i.i = add i32 %i.4302.i.i, 1
  %call147.i.i = tail call i32 @_find_next_zero_bit_be(ptr noundef nonnull @list_entries_in_use, i32 noundef 32768, i32 noundef %add146.i.i) #28
  %cmp106.i.i = icmp ult i32 %call147.i.i, 32768
  br i1 %cmp106.i.i, label %for.body107.i.i, label %check_data_structures.exit

if.then2.i:                                       ; preds = %cond.end141.i.i, %do.end84.i.i, %check_lock_chain_key.exit.i.i, %class_lock_list_valid.exit238.i.i, %class_lock_list_valid.exit.i.i, %do.end.i.i
  store i1 true, ptr @check_data_structures.once, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1133, i32 noundef 9, ptr noundef null) #28
  br label %check_data_structures.exit

check_data_structures.exit:                       ; preds = %if.then2.i, %for.inc145.i.i, %for.end103.i.i, %land.lhs.true.i, %entry
  %66 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %66)
  %.pn31 = load ptr, ptr %pf, align 4
  %cmp.not32 = icmp eq ptr %.pn31, %pf
  br i1 %cmp.not32, label %for.end, label %for.body

for.body:                                         ; preds = %reinit_class.exit, %check_data_structures.exit
  %.pn33 = phi ptr [ %.pn, %reinit_class.exit ], [ %.pn31, %check_data_structures.exit ]
  %67 = ptrtoint ptr %.pn33 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %.pn33, align 4
  %tobool.not.i16 = icmp eq ptr %68, null
  br i1 %tobool.not.i16, label %land.rhs.i, label %if.end29.i

land.rhs.i:                                       ; preds = %for.body
  %.b352.i = load i1, ptr @reinit_class.__already_done, align 1
  br i1 %.b352.i, label %if.end29.i, label %if.then.i, !prof !1500

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @reinit_class.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6017, i32 noundef 9, ptr noundef null) #28
  br label %if.end29.i

if.end29.i:                                       ; preds = %if.then.i, %land.rhs.i, %for.body
  %locks_after.i = getelementptr i8, ptr %.pn33, i32 8
  %69 = ptrtoint ptr %locks_after.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile ptr, ptr %locks_after.i, align 4
  %cmp.i.not.i = icmp eq ptr %70, %locks_after.i
  br i1 %cmp.i.not.i, label %if.end85.i, label %land.rhs47.i

land.rhs47.i:                                     ; preds = %if.end29.i
  %.b342351.i = load i1, ptr @reinit_class.__already_done.717, align 1
  br i1 %.b342351.i, label %if.end85.i, label %if.then58.i, !prof !1500

if.then58.i:                                      ; preds = %land.rhs47.i
  store i1 true, ptr @reinit_class.__already_done.717, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6018, i32 noundef 9, ptr noundef null) #28
  br label %if.end85.i

if.end85.i:                                       ; preds = %if.then58.i, %land.rhs47.i, %if.end29.i
  %locks_before.i = getelementptr i8, ptr %.pn33, i32 16
  %71 = ptrtoint ptr %locks_before.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load volatile ptr, ptr %locks_before.i, align 4
  %cmp.i353.not.i = icmp eq ptr %72, %locks_before.i
  br i1 %cmp.i353.not.i, label %if.end142.i, label %land.rhs104.i

land.rhs104.i:                                    ; preds = %if.end85.i
  %.b343350.i = load i1, ptr @reinit_class.__already_done.718, align 1
  br i1 %.b343350.i, label %if.end142.i, label %if.then115.i, !prof !1500

if.then115.i:                                     ; preds = %land.rhs104.i
  store i1 true, ptr @reinit_class.__already_done.718, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6019, i32 noundef 9, ptr noundef null) #28
  br label %if.end142.i

if.end142.i:                                      ; preds = %if.then115.i, %land.rhs104.i, %if.end85.i
  %add.ptr.i = getelementptr i8, ptr %.pn33, i32 24
  %73 = call ptr @memset(ptr %add.ptr.i, i32 0, i32 100)
  %74 = ptrtoint ptr %.pn33 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %.pn33, align 4
  %tobool153.not.i = icmp eq ptr %75, null
  br i1 %tobool153.not.i, label %land.rhs162.i, label %if.end200.i

land.rhs162.i:                                    ; preds = %if.end142.i
  %.b344349.i = load i1, ptr @reinit_class.__already_done.719, align 1
  br i1 %.b344349.i, label %if.end200.i, label %if.then173.i, !prof !1500

if.then173.i:                                     ; preds = %land.rhs162.i
  store i1 true, ptr @reinit_class.__already_done.719, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6021, i32 noundef 9, ptr noundef null) #28
  br label %if.end200.i

if.end200.i:                                      ; preds = %if.then173.i, %land.rhs162.i, %if.end142.i
  %76 = ptrtoint ptr %locks_after.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile ptr, ptr %locks_after.i, align 4
  %cmp.i355.not.i = icmp eq ptr %77, %locks_after.i
  br i1 %cmp.i355.not.i, label %if.end258.i, label %land.rhs220.i

land.rhs220.i:                                    ; preds = %if.end200.i
  %.b345348.i = load i1, ptr @reinit_class.__already_done.720, align 1
  br i1 %.b345348.i, label %if.end258.i, label %if.then231.i, !prof !1500

if.then231.i:                                     ; preds = %land.rhs220.i
  store i1 true, ptr @reinit_class.__already_done.720, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6022, i32 noundef 9, ptr noundef null) #28
  br label %if.end258.i

if.end258.i:                                      ; preds = %if.then231.i, %land.rhs220.i, %if.end200.i
  %78 = ptrtoint ptr %locks_before.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load volatile ptr, ptr %locks_before.i, align 4
  %cmp.i357.not.i = icmp eq ptr %79, %locks_before.i
  br i1 %cmp.i357.not.i, label %reinit_class.exit, label %land.rhs278.i

land.rhs278.i:                                    ; preds = %if.end258.i
  %.b346347.i = load i1, ptr @reinit_class.__already_done.721, align 1
  br i1 %.b346347.i, label %reinit_class.exit, label %if.then289.i, !prof !1500

if.then289.i:                                     ; preds = %land.rhs278.i
  store i1 true, ptr @reinit_class.__already_done.721, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6023, i32 noundef 9, ptr noundef null) #28
  br label %reinit_class.exit

reinit_class.exit:                                ; preds = %if.then289.i, %land.rhs278.i, %if.end258.i
  %80 = ptrtoint ptr %.pn33 to i32
  call void @__asan_load4_noabort(i32 %80)
  %.pn = load ptr, ptr %.pn33, align 4
  %cmp.not = icmp eq ptr %.pn, %pf
  br i1 %cmp.not, label %for.end, label %for.body

for.end:                                          ; preds = %reinit_class.exit, %check_data_structures.exit
  %81 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load volatile ptr, ptr %pf, align 4
  %cmp.i.not.i17 = icmp eq ptr %82, %pf
  br i1 %cmp.i.not.i17, label %list_splice_init.exit, label %if.then.i18

if.then.i18:                                      ; preds = %for.end
  %83 = load ptr, ptr @free_lock_classes, align 4
  %prev2.i.i = getelementptr inbounds %struct.list_head, ptr %pf, i32 0, i32 1
  %84 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %prev2.i.i, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %82, i32 0, i32 1
  %86 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %86)
  store ptr @free_lock_classes, ptr %prev3.i.i, align 4
  store ptr %82, ptr @free_lock_classes, align 4
  %87 = ptrtoint ptr %85 to i32
  call void @__asan_store4_noabort(i32 %87)
  store ptr %83, ptr %85, align 4
  %prev6.i.i = getelementptr inbounds %struct.list_head, ptr %83, i32 0, i32 1
  %88 = ptrtoint ptr %prev6.i.i to i32
  call void @__asan_store4_noabort(i32 %88)
  store ptr %85, ptr %prev6.i.i, align 4
  %89 = ptrtoint ptr %pf to i32
  call void @__asan_store4_noabort(i32 %89)
  store volatile ptr %pf, ptr %pf, align 4
  store ptr %pf, ptr %prev2.i.i, align 4
  br label %list_splice_init.exit

list_splice_init.exit:                            ; preds = %if.then.i18, %for.end
  %lock_chains_being_freed = getelementptr inbounds %struct.pending_free, ptr %pf, i32 0, i32 1
  %call.i = tail call i32 @__bitmap_andnot(ptr noundef nonnull @lock_chains_in_use, ptr noundef nonnull @lock_chains_in_use, ptr noundef %lock_chains_being_freed, i32 noundef 65536) #28
  %90 = call ptr @memset(ptr %lock_chains_being_freed, i32 0, i32 8192)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_zero_bit_be(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__bitmap_andnot(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__lockdep_reset_lock(ptr noundef %pf, ptr nocapture noundef readonly %lock) unnamed_addr #0 align 64 {
entry:
  %call = tail call fastcc ptr @look_up_lock_class(ptr noundef %lock, i32 noundef 0)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %for.inc, label %if.then

if.then:                                          ; preds = %entry
  tail call fastcc void @zap_class(ptr noundef %pf, ptr noundef nonnull %call)
  br label %for.inc

for.inc:                                          ; preds = %if.then, %entry
  %call.1 = tail call fastcc ptr @look_up_lock_class(ptr noundef %lock, i32 noundef 1)
  %tobool.not.1 = icmp eq ptr %call.1, null
  br i1 %tobool.not.1, label %for.inc.1, label %if.then.1

if.then.1:                                        ; preds = %for.inc
  tail call fastcc void @zap_class(ptr noundef %pf, ptr noundef nonnull %call.1)
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then.1, %for.inc
  %call.2 = tail call fastcc ptr @look_up_lock_class(ptr noundef %lock, i32 noundef 2)
  %tobool.not.2 = icmp eq ptr %call.2, null
  br i1 %tobool.not.2, label %for.inc.2, label %if.then.2

if.then.2:                                        ; preds = %for.inc.1
  tail call fastcc void @zap_class(ptr noundef %pf, ptr noundef nonnull %call.2)
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.then.2, %for.inc.1
  %call.3 = tail call fastcc ptr @look_up_lock_class(ptr noundef %lock, i32 noundef 3)
  %tobool.not.3 = icmp eq ptr %call.3, null
  br i1 %tobool.not.3, label %for.inc.3, label %if.then.3

if.then.3:                                        ; preds = %for.inc.2
  tail call fastcc void @zap_class(ptr noundef %pf, ptr noundef nonnull %call.3)
  br label %for.inc.3

for.inc.3:                                        ; preds = %if.then.3, %for.inc.2
  %call.4 = tail call fastcc ptr @look_up_lock_class(ptr noundef %lock, i32 noundef 4)
  %tobool.not.4 = icmp eq ptr %call.4, null
  br i1 %tobool.not.4, label %for.inc.4, label %if.then.4

if.then.4:                                        ; preds = %for.inc.3
  tail call fastcc void @zap_class(ptr noundef %pf, ptr noundef nonnull %call.4)
  br label %for.inc.4

for.inc.4:                                        ; preds = %if.then.4, %for.inc.3
  %call.5 = tail call fastcc ptr @look_up_lock_class(ptr noundef %lock, i32 noundef 5)
  %tobool.not.5 = icmp eq ptr %call.5, null
  br i1 %tobool.not.5, label %for.inc.5, label %if.then.5

if.then.5:                                        ; preds = %for.inc.4
  tail call fastcc void @zap_class(ptr noundef %pf, ptr noundef nonnull %call.5)
  br label %for.inc.5

for.inc.5:                                        ; preds = %if.then.5, %for.inc.4
  %call.6 = tail call fastcc ptr @look_up_lock_class(ptr noundef %lock, i32 noundef 6)
  %tobool.not.6 = icmp eq ptr %call.6, null
  br i1 %tobool.not.6, label %for.inc.6, label %if.then.6

if.then.6:                                        ; preds = %for.inc.5
  tail call fastcc void @zap_class(ptr noundef %pf, ptr noundef nonnull %call.6)
  br label %for.inc.6

for.inc.6:                                        ; preds = %if.then.6, %for.inc.5
  %call.7 = tail call fastcc ptr @look_up_lock_class(ptr noundef %lock, i32 noundef 7)
  %tobool.not.7 = icmp eq ptr %call.7, null
  br i1 %tobool.not.7, label %for.inc.7, label %if.then.7

if.then.7:                                        ; preds = %for.inc.6
  tail call fastcc void @zap_class(ptr noundef %pf, ptr noundef nonnull %call.7)
  br label %for.inc.7

for.inc.7:                                        ; preds = %if.then.7, %for.inc.6
  %arrayidx.i = getelementptr %struct.lockdep_map, ptr %lock, i32 0, i32 1, i32 0
  %arrayidx.1.i = getelementptr %struct.lockdep_map, ptr %lock, i32 0, i32 1, i32 1
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc39.i, %for.inc.7
  %cmp64.i = phi i1 [ true, %for.inc.7 ], [ %cmp.i, %for.inc39.i ]
  %i.063.i = phi i32 [ 0, %for.inc.7 ], [ %inc40.i, %for.inc39.i ]
  %add.ptr.i = getelementptr %struct.hlist_head, ptr @classhash_table, i32 %i.063.i
  %call.i = tail call i32 @rcu_read_lock_any_held() #28
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %do.end.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %do.end.i, label %land.lhs.true3.i

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i
  %.b54.i = load i1, ptr @lock_class_cache_is_registered.__warned, align 1
  br i1 %.b54.i, label %do.end.i, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true3.i
  store i1 true, ptr @lock_class_cache_is_registered.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 6207, ptr noundef nonnull @.str.1) #28
  br label %do.end.i

do.end.i:                                         ; preds = %if.then.i, %land.lhs.true3.i, %land.lhs.true.i, %for.body.i
  %0 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %class.060.i = load volatile ptr, ptr %add.ptr.i, align 4
  %tobool14.not61.i = icmp eq ptr %class.060.i, null
  br i1 %tobool14.not61.i, label %for.inc39.i, label %for.cond16.preheader.preheader.i

for.cond16.preheader.preheader.i:                 ; preds = %do.end.i
  %1 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %arrayidx.i, align 4
  br label %for.cond16.preheader.i

for.cond16.preheader.i:                           ; preds = %for.cond16.1.i, %for.cond16.preheader.preheader.i
  %class.062.i = phi ptr [ %class.0.i, %for.cond16.1.i ], [ %class.060.i, %for.cond16.preheader.preheader.i ]
  %cmp19.i = icmp eq ptr %2, %class.062.i
  br i1 %cmp19.i, label %lock_class_cache_is_registered.exit, label %for.cond16.i

for.cond16.i:                                     ; preds = %for.cond16.preheader.i
  %3 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %arrayidx.1.i, align 4
  %cmp19.1.i = icmp eq ptr %4, %class.062.i
  br i1 %cmp19.1.i, label %lock_class_cache_is_registered.exit, label %for.cond16.1.i

for.cond16.1.i:                                   ; preds = %for.cond16.i
  %5 = ptrtoint ptr %class.062.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %class.0.i = load volatile ptr, ptr %class.062.i, align 4
  %tobool14.not.i = icmp eq ptr %class.0.i, null
  br i1 %tobool14.not.i, label %for.inc39.i, label %for.cond16.preheader.i

for.inc39.i:                                      ; preds = %for.cond16.1.i, %do.end.i
  %inc40.i = add nuw nsw i32 %i.063.i, 1
  %cmp.i = icmp ult i32 %i.063.i, 4095
  %exitcond.not.i = icmp eq i32 %inc40.i, 4096
  br i1 %exitcond.not.i, label %lock_class_cache_is_registered.exit, label %for.body.i

lock_class_cache_is_registered.exit:              ; preds = %for.inc39.i, %for.cond16.i, %for.cond16.preheader.i
  %cmp58.i = phi i1 [ %cmp64.i, %for.cond16.i ], [ %cmp64.i, %for.cond16.preheader.i ], [ %cmp.i, %for.inc39.i ]
  br i1 %cmp58.i, label %land.rhs, label %if.end42

land.rhs:                                         ; preds = %lock_class_cache_is_registered.exit
  %.b49 = load i1, ptr @__lockdep_reset_lock.__already_done, align 1
  br i1 %.b49, label %if.then40, label %if.then9, !prof !1500

if.then9:                                         ; preds = %land.rhs
  store i1 true, ptr @__lockdep_reset_lock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6238, i32 noundef 9, ptr noundef null) #28
  br label %if.then40

if.then40:                                        ; preds = %if.then9, %land.rhs
  %call41 = tail call i32 @debug_locks_off() #28
  br label %if.end42

if.end42:                                         ; preds = %if.then40, %lock_class_cache_is_registered.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @zap_class(ptr noundef %pf, ptr noundef %class) unnamed_addr #0 align 64 {
entry:
  %key = getelementptr inbounds %struct.lock_class, ptr %class, i32 0, i32 4
  %0 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %key, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %land.rhs, label %if.end30

land.rhs:                                         ; preds = %entry
  %.b144 = load i1, ptr @zap_class.__already_done, align 1
  br i1 %.b144, label %if.end30, label %if.then, !prof !1500

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @zap_class.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5981, i32 noundef 9, ptr noundef null) #28
  br label %if.end30

if.end30:                                         ; preds = %if.then, %land.rhs, %entry
  %call = tail call i32 @_find_next_bit_be(ptr noundef nonnull @list_entries_in_use, i32 noundef 32768, i32 noundef 0) #28
  %cmp158 = icmp ult i32 %call, 32768
  br i1 %cmp158, label %for.body, label %for.end

for.body:                                         ; preds = %for.inc, %if.end30
  %i.0159 = phi i32 [ %call44, %for.inc ], [ %call, %if.end30 ]
  %add.ptr = getelementptr %struct.lock_list, ptr @list_entries, i32 %i.0159
  %class38 = getelementptr %struct.lock_list, ptr @list_entries, i32 %i.0159, i32 1
  %2 = ptrtoint ptr %class38 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %class38, align 4
  %cmp39.not = icmp eq ptr %3, %class
  br i1 %cmp39.not, label %if.end42, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %links_to = getelementptr %struct.lock_list, ptr @list_entries, i32 %i.0159, i32 2
  %4 = ptrtoint ptr %links_to to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %links_to, align 4
  %cmp40.not = icmp eq ptr %5, %class
  br i1 %cmp40.not, label %if.end42, label %for.inc

if.end42:                                         ; preds = %land.lhs.true, %for.body
  %rem.i = and i32 %i.0159, 31
  %shl.i = shl nuw i32 1, %rem.i
  %div2.i = lshr i32 %i.0159, 5
  %add.ptr.i = getelementptr i32, ptr @list_entries_in_use, i32 %div2.i
  %neg.i = xor i32 %shl.i, -1
  %6 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %add.ptr.i, align 4
  %and.i = and i32 %7, %neg.i
  store i32 %and.i, ptr %add.ptr.i, align 4
  %8 = load i32, ptr @nr_list_entries, align 4
  %dec = add i32 %8, -1
  store i32 %dec, ptr @nr_list_entries, align 4
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %add.ptr) #28
  br i1 %call.i.i, label %if.end.i.i, label %list_del_rcu.exit

if.end.i.i:                                       ; preds = %if.end42
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %add.ptr, i32 0, i32 1
  %9 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %prev.i.i, align 4
  %11 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %add.ptr, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %10, ptr %prev1.i.i.i, align 4
  %14 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %12, ptr %10, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i, %if.end42
  %prev.i = getelementptr inbounds %struct.list_head, ptr %add.ptr, i32 0, i32 1
  %15 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  br label %for.inc

for.inc:                                          ; preds = %list_del_rcu.exit, %land.lhs.true
  %add = add nuw nsw i32 %i.0159, 1
  %call44 = tail call i32 @_find_next_bit_be(ptr noundef nonnull @list_entries_in_use, i32 noundef 32768, i32 noundef %add) #28
  %cmp = icmp ult i32 %call44, 32768
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %if.end30
  %locks_after = getelementptr inbounds %struct.lock_class, ptr %class, i32 0, i32 2
  %16 = ptrtoint ptr %locks_after to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %locks_after, align 4
  %cmp.i.not = icmp eq ptr %17, %locks_after
  br i1 %cmp.i.not, label %land.lhs.true47, label %land.end77

land.lhs.true47:                                  ; preds = %for.end
  %locks_before = getelementptr inbounds %struct.lock_class, ptr %class, i32 0, i32 3
  %18 = ptrtoint ptr %locks_before to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %locks_before, align 4
  %cmp.i151.not = icmp eq ptr %19, %locks_before
  br i1 %cmp.i151.not, label %if.then50, label %land.end77

if.then50:                                        ; preds = %land.lhs.true47
  %lock_entry = getelementptr inbounds %struct.lock_class, ptr %class, i32 0, i32 1
  %call.i.i153 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %lock_entry) #28
  br i1 %call.i.i153, label %if.end.i.i156, label %__list_del_entry.exit.i

if.end.i.i156:                                    ; preds = %if.then50
  %prev.i.i154 = getelementptr inbounds %struct.lock_class, ptr %class, i32 0, i32 1, i32 1
  %20 = ptrtoint ptr %prev.i.i154 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %prev.i.i154, align 4
  %22 = ptrtoint ptr %lock_entry to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %lock_entry, align 4
  %prev1.i.i.i155 = getelementptr inbounds %struct.list_head, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %prev1.i.i.i155 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %21, ptr %prev1.i.i.i155, align 4
  %25 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %23, ptr %21, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i156, %if.then50
  %prev.i2.i = getelementptr inbounds %struct.list_head, ptr %pf, i32 0, i32 1
  %26 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %prev.i2.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %lock_entry, ptr noundef %27, ptr noundef %pf) #28
  br i1 %call.i.i.i, label %if.end.i.i.i, label %list_move_tail.exit

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  %28 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %lock_entry, ptr %prev.i2.i, align 4
  %29 = ptrtoint ptr %lock_entry to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %pf, ptr %lock_entry, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.lock_class, ptr %class, i32 0, i32 1, i32 1
  %30 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %27, ptr %prev3.i.i.i, align 4
  %31 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile ptr %lock_entry, ptr %27, align 4
  br label %list_move_tail.exit

list_move_tail.exit:                              ; preds = %if.end.i.i.i, %__list_del_entry.exit.i
  %32 = ptrtoint ptr %class to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %class, align 4
  %pprev2.i.i = getelementptr inbounds %struct.hlist_node, ptr %class, i32 0, i32 1
  %34 = ptrtoint ptr %pprev2.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %pprev2.i.i, align 4
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile ptr %33, ptr %35, align 4
  %tobool.not.i.i = icmp eq ptr %33, null
  br i1 %tobool.not.i.i, label %hlist_del_rcu.exit, label %do.body13.i.i

do.body13.i.i:                                    ; preds = %list_move_tail.exit
  %pprev14.i.i = getelementptr inbounds %struct.hlist_node, ptr %33, i32 0, i32 1
  %37 = ptrtoint ptr %pprev14.i.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store volatile ptr %35, ptr %pprev14.i.i, align 4
  br label %hlist_del_rcu.exit

hlist_del_rcu.exit:                               ; preds = %do.body13.i.i, %list_move_tail.exit
  %38 = ptrtoint ptr %pprev2.i.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store volatile ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i, align 4
  %39 = ptrtoint ptr %key to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile ptr null, ptr %key, align 4
  %name = getelementptr inbounds %struct.lock_class, ptr %class, i32 0, i32 10
  %40 = ptrtoint ptr %name to i32
  call void @__asan_store4_noabort(i32 %40)
  store volatile ptr null, ptr %name, align 4
  %41 = load i32, ptr @nr_lock_classes, align 4
  %dec70 = add i32 %41, -1
  store i32 %dec70, ptr @nr_lock_classes, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %class to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, ptrtoint (ptr @lock_classes to i32)
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 132
  %rem.i145 = and i32 %sub.ptr.div, 31
  %shl.i146 = shl nuw i32 1, %rem.i145
  %div2.i147 = lshr i32 %sub.ptr.div, 5
  %add.ptr.i148 = getelementptr i32, ptr @lock_classes_in_use, i32 %div2.i147
  %neg.i149 = xor i32 %shl.i146, -1
  %42 = ptrtoint ptr %add.ptr.i148 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %add.ptr.i148, align 4
  %and.i150 = and i32 %43, %neg.i149
  store i32 %and.i150, ptr %add.ptr.i148, align 4
  br label %if.end120

land.end77:                                       ; preds = %land.lhs.true47, %for.end
  %.b142143 = load i1, ptr @zap_class.__already_done.722, align 1
  br i1 %.b142143, label %if.end120, label %if.then84, !prof !1500

if.then84:                                        ; preds = %land.end77
  store i1 true, ptr @zap_class.__already_done.722, align 1
  %name98 = getelementptr inbounds %struct.lock_class, ptr %class, i32 0, i32 10
  %44 = ptrtoint ptr %name98 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %name98, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6005, i32 noundef 9, ptr noundef nonnull @.str.723, ptr noundef nonnull @__func__.zap_class, ptr noundef %45) #28
  br label %if.end120

if.end120:                                        ; preds = %if.then84, %land.end77, %hlist_del_rcu.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %class to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, ptrtoint (ptr @lock_classes to i32)
  %sub.ptr.div.i.i = sdiv exact i32 %sub.ptr.sub.i.i, 132
  %lock_chains_being_freed.i.i = getelementptr inbounds %struct.pending_free, ptr %pf, i32 0, i32 1
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc32.i, %if.end120
  %i.048.i = phi i32 [ 0, %if.end120 ], [ %inc.i, %for.inc32.i ]
  %add.ptr.i157 = getelementptr %struct.hlist_head, ptr @chainhash_table, i32 %i.048.i
  %call.i = tail call i32 @rcu_read_lock_any_held() #28
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %do.end.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #28
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %do.end.i, label %land.lhs.true3.i

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i
  %.b41.i = load i1, ptr @remove_class_from_lock_chains.__warned, align 1
  br i1 %.b41.i, label %do.end.i, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true3.i
  store i1 true, ptr @remove_class_from_lock_chains.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 5967, ptr noundef nonnull @.str.1) #28
  br label %do.end.i

do.end.i:                                         ; preds = %if.then.i, %land.lhs.true3.i, %land.lhs.true.i, %for.body.i
  %46 = ptrtoint ptr %add.ptr.i157 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile ptr, ptr %add.ptr.i157, align 4
  %tobool10.not.i = icmp eq ptr %47, null
  %add.ptr12.i = getelementptr i8, ptr %47, i32 -4
  %tobool14.not4549.i = icmp eq ptr %add.ptr12.i, null
  %tobool14.not45.i = or i1 %tobool10.not.i, %tobool14.not4549.i
  br i1 %tobool14.not45.i, label %for.inc32.i, label %for.body15.i

for.body15.i:                                     ; preds = %remove_class_from_lock_chain.exit.i, %do.end.i
  %chain.046.i = phi ptr [ %add.ptr28.i, %remove_class_from_lock_chain.exit.i ], [ %add.ptr12.i, %do.end.i ]
  %48 = ptrtoint ptr %chain.046.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %bf.load.i.i = load i32, ptr %chain.046.i, align 8
  %bf.clear.i.i = and i32 %bf.load.i.i, 16777215
  %bf.lshr.i.i = lshr i32 %bf.load.i.i, 24
  %bf.clear4.i.i = and i32 %bf.lshr.i.i, 63
  %add.i.i = add nuw nsw i32 %bf.clear4.i.i, %bf.clear.i.i
  %cmp36.not.i.i = icmp eq i32 %bf.clear4.i.i, 0
  br i1 %cmp36.not.i.i, label %remove_class_from_lock_chain.exit.i, label %for.body.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i
  %inc.i.i = add nuw nsw i32 %i.037.i.i, 1
  %cmp.i.i = icmp ult i32 %inc.i.i, %add.i.i
  br i1 %cmp.i.i, label %for.body.i.i, label %remove_class_from_lock_chain.exit.i

for.body.i.i:                                     ; preds = %for.cond.i.i, %for.body15.i
  %i.037.i.i = phi i32 [ %inc.i.i, %for.cond.i.i ], [ %bf.clear.i.i, %for.body15.i ]
  %arrayidx.i.i = getelementptr [327680 x i16], ptr @chain_hlocks, i32 0, i32 %i.037.i.i
  %49 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load2_noabort(i32 %49)
  %50 = load i16, ptr %arrayidx.i.i, align 2
  %51 = and i16 %50, 8191
  %and.i.i.i = zext i16 %51 to i32
  %cmp5.not.i.i = icmp eq i32 %sub.ptr.div.i.i, %and.i.i.i
  br i1 %cmp5.not.i.i, label %free_lock_chain.i.i, label %for.cond.i.i

free_lock_chain.i.i:                              ; preds = %for.body.i.i
  %52 = tail call i32 @llvm.smax.i32(i32 %bf.clear4.i.i, i32 2) #28
  tail call fastcc void @add_chain_block(i32 noundef %bf.clear.i.i, i32 noundef %52) #28
  %chain_key.i.i = getelementptr inbounds %struct.lock_chain, ptr %chain.046.i, i32 0, i32 2
  %53 = ptrtoint ptr %chain_key.i.i to i32
  call void @__asan_store8_noabort(i32 %53)
  store volatile i64 -1, ptr %chain_key.i.i, align 8
  %54 = ptrtoint ptr %chain.046.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %bf.load17.i.i = load i32, ptr %chain.046.i, align 8
  %tobool.not.i.i.i = icmp sgt i32 %bf.load17.i.i, -1
  %55 = and i32 %bf.load17.i.i, 1073741824
  %tobool2.not.i.i.i = icmp eq i32 %55, 0
  %nr_process_chains.nr_softirq_chains.i.i.i = select i1 %tobool2.not.i.i.i, ptr @nr_process_chains, ptr @nr_softirq_chains
  %nr_softirq_chains.sink9.i.i.i = select i1 %tobool.not.i.i.i, ptr %nr_process_chains.nr_softirq_chains.i.i.i, ptr @nr_hardirq_chains
  %56 = ptrtoint ptr %nr_softirq_chains.sink9.i.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %nr_softirq_chains.sink9.i.i.i, align 4
  %dec4.i.i.i = add i32 %57, -1
  store i32 %dec4.i.i.i, ptr %nr_softirq_chains.sink9.i.i.i, align 4
  %entry19.i.i = getelementptr inbounds %struct.lock_chain, ptr %chain.046.i, i32 0, i32 1
  %58 = ptrtoint ptr %entry19.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %entry19.i.i, align 4
  %pprev2.i.i.i.i = getelementptr inbounds %struct.lock_chain, ptr %chain.046.i, i32 0, i32 1, i32 1
  %60 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %pprev2.i.i.i.i, align 4
  %62 = ptrtoint ptr %61 to i32
  call void @__asan_store4_noabort(i32 %62)
  store volatile ptr %59, ptr %61, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %59, null
  br i1 %tobool.not.i.i.i.i, label %hlist_del_rcu.exit.i.i, label %do.body13.i.i.i.i

do.body13.i.i.i.i:                                ; preds = %free_lock_chain.i.i
  %pprev14.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %59, i32 0, i32 1
  %63 = ptrtoint ptr %pprev14.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store volatile ptr %61, ptr %pprev14.i.i.i.i, align 4
  br label %hlist_del_rcu.exit.i.i

hlist_del_rcu.exit.i.i:                           ; preds = %do.body13.i.i.i.i, %free_lock_chain.i.i
  %64 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store volatile ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.i.i, align 4
  %sub.ptr.lhs.cast20.i.i = ptrtoint ptr %chain.046.i to i32
  %sub.ptr.sub21.i.i = sub i32 %sub.ptr.lhs.cast20.i.i, ptrtoint (ptr @lock_chains to i32)
  %sub.ptr.div22.i.i = sdiv exact i32 %sub.ptr.sub21.i.i, 24
  %rem.i.i.i = and i32 %sub.ptr.div22.i.i, 31
  %shl.i.i.i = shl nuw i32 1, %rem.i.i.i
  %div2.i.i.i = lshr i32 %sub.ptr.div22.i.i, 5
  %add.ptr.i.i.i = getelementptr i32, ptr %lock_chains_being_freed.i.i, i32 %div2.i.i.i
  %65 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %add.ptr.i.i.i, align 4
  %or.i.i.i = or i32 %66, %shl.i.i.i
  store i32 %or.i.i.i, ptr %add.ptr.i.i.i, align 4
  %67 = load i32, ptr @nr_zapped_lock_chains, align 4
  %inc23.i.i = add i32 %67, 1
  store i32 %inc23.i.i, ptr @nr_zapped_lock_chains, align 4
  br label %remove_class_from_lock_chain.exit.i

remove_class_from_lock_chain.exit.i:              ; preds = %hlist_del_rcu.exit.i.i, %for.cond.i.i, %for.body15.i
  %entry21.i = getelementptr inbounds %struct.lock_chain, ptr %chain.046.i, i32 0, i32 1
  %68 = ptrtoint ptr %entry21.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile ptr, ptr %entry21.i, align 4
  %tobool24.not.i = icmp eq ptr %69, null
  %add.ptr28.i = getelementptr i8, ptr %69, i32 -4
  %tobool14.not50.i = icmp eq ptr %add.ptr28.i, null
  %tobool14.not.i = or i1 %tobool24.not.i, %tobool14.not50.i
  br i1 %tobool14.not.i, label %for.inc32.i, label %for.body15.i

for.inc32.i:                                      ; preds = %remove_class_from_lock_chain.exit.i, %do.end.i
  %inc.i = add nuw nsw i32 %i.048.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 32768
  br i1 %exitcond.not.i, label %remove_class_from_lock_chains.exit, label %for.body.i

remove_class_from_lock_chains.exit:               ; preds = %for.inc32.i
  %70 = load i32, ptr @nr_zapped_classes, align 4
  %inc = add i32 %70, 1
  store i32 %inc, ptr @nr_zapped_classes, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @free_zapped_rcu(ptr noundef readnone %ch) #0 align 64 {
entry:
  %cmp.not = icmp eq ptr %ch, @delayed_free
  br i1 %cmp.not, label %do.body38, label %land.rhs

land.rhs:                                         ; preds = %entry
  %.b70 = load i1, ptr @free_zapped_rcu.__already_done, align 1
  br i1 %.b70, label %cleanup, label %if.then, !prof !1500

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @free_zapped_rcu.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6090, i32 noundef 9, ptr noundef null) #28
  br label %cleanup

do.body38:                                        ; preds = %entry
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #28, !srcloc !1503
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %1 = load i32, ptr @oops_in_progress, align 4
  %tobool.not.i = icmp eq i32 %1, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.end50.i

land.lhs.true.i:                                  ; preds = %do.body38
  %2 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i = and i32 %2, 128
  %tobool10.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool10.not.i, label %do.end16.i, label %if.end50.i, !prof !1501

do.end16.i:                                       ; preds = %land.lhs.true.i
  %call17.i = tail call i32 @debug_locks_off() #28
  %tobool18.not.i = icmp eq i32 %call17.i, 0
  br i1 %tobool18.not.i, label %if.end50.i, label %land.lhs.true19.i

land.lhs.true19.i:                                ; preds = %do.end16.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %3 = load i32, ptr @debug_locks_silent, align 4
  %tobool20.not.i = icmp eq i32 %3, 0
  br i1 %tobool20.not.i, label %do.end33.i, label %if.end50.i

do.end33.i:                                       ; preds = %land.lhs.true19.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 110, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.32) #28
  br label %if.end50.i

if.end50.i:                                       ; preds = %do.end33.i, %land.lhs.true19.i, %do.end16.i, %land.lhs.true.i, %do.body38
  %4 = tail call i32 @llvm.read_register.i32(metadata !1491) #28
  %and.i71.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i71.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %7
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %9, ptrtoint (ptr @lockdep_recursion to i32)
  %10 = inttoptr i32 %add.i to ptr
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %10, align 4
  %add64.i = add i32 %12, 1
  store i32 %add64.i, ptr %10, align 4
  tail call void @llvm.prefetch.p0(ptr nonnull @__lock, i32 1, i32 3, i32 1) #28
  %13 = tail call { i32, i32, i32 } asm sideeffect "1:\09ldrex\09$0, [$3]\0A\09add\09$1, $0, $4\0A\09strex\09$2, $1, [$3]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,r,I,~{cc}"(ptr nonnull @__lock, i32 65536) #28, !srcloc !1507
  %asmresult.i.i = extractvalue { i32, i32, i32 } %13, 0
  %lockval.sroa.0.0.extract.shift.i.i = lshr i32 %asmresult.i.i, 16
  %conv31.i.i = and i32 %asmresult.i.i, 65535
  %cmp.not2.i.i = icmp eq i32 %lockval.sroa.0.0.extract.shift.i.i, %conv31.i.i
  br i1 %cmp.not2.i.i, label %lockdep_lock.exit, label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i, %if.end50.i
  tail call void asm sideeffect "wfe", "~{memory}"() #28, !srcloc !1508
  %14 = load volatile i16, ptr getelementptr inbounds (%struct.__raw_tickets, ptr @__lock, i32 0, i32 1), align 2
  %conv3.i.i = zext i16 %14 to i32
  %cmp.not.i.i = icmp eq i32 %lockval.sroa.0.0.extract.shift.i.i, %conv3.i.i
  br i1 %cmp.not.i.i, label %lockdep_lock.exit, label %while.body.i.i

lockdep_lock.exit:                                ; preds = %while.body.i.i, %if.end50.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #28, !srcloc !1509
  %task.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %15 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task.i, align 8
  store ptr %16, ptr @__owner, align 4
  %17 = load i32, ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 1), align 4
  %xor = xor i32 %17, 1
  %add.ptr = getelementptr %struct.pending_free, ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3), i32 %xor
  tail call fastcc void @__free_zapped_classes(ptr noundef %add.ptr)
  store i32 0, ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 2), align 4
  %18 = load i32, ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 1), align 4
  %add.ptr43 = getelementptr %struct.pending_free, ptr getelementptr inbounds (%struct.delayed_free, ptr @delayed_free, i32 0, i32 3), i32 %18
  tail call fastcc void @call_rcu_zapped(ptr noundef %add.ptr43)
  tail call fastcc void @lockdep_unlock()
  %19 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #28, !srcloc !1505
  %and.i.i72 = and i32 %19, 128
  %tobool52.not = icmp eq i32 %and.i.i72, 0
  br i1 %tobool52.not, label %if.then61, label %do.end64, !prof !1501

if.then61:                                        ; preds = %lockdep_lock.exit
  tail call void @warn_bogus_irq_restore() #28
  br label %do.end64

do.end64:                                         ; preds = %if.then61, %lockdep_lock.exit
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #28, !srcloc !1506
  br label %cleanup

cleanup:                                          ; preds = %do.end64, %if.then, %land.rhs
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #10 align 64 {
entry:
  br label %__here

__here:                                           ; preds = %entry
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32))
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @touch_softlockup_watchdog() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #10 align 64 {
entry:
  br label %__here

__here:                                           ; preds = %entry
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32))
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcspn(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #19

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @print_tainted() local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #25

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #26

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #26

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i8 @llvm.umin.i8(i8, i8) #26

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #26

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #27 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 621)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #27 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 621)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { cold null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { inlinehint mustprogress nofree nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { noinline noprofile nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #17 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #18 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #21 = { nounwind readonly }
attributes #22 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #23 = { noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #24 = { nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #25 = { argmemonly nofree nounwind readonly willreturn }
attributes #26 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #27 = { nounwind uwtable(sync) }
attributes #28 = { nounwind }
attributes #29 = { nobuiltin nounwind }
attributes #30 = { nobuiltin }
attributes #31 = { nounwind readonly willreturn }
attributes #32 = { cold nounwind }
attributes #33 = { nounwind readnone willreturn }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !7, !8, !10, !11, !12, !14, !15, !16, !17, !18, !19, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !33, !35, !36, !38, !40, !41, !43, !45, !47, !49, !50, !52, !53, !55, !56, !58, !60, !62, !63, !64, !65, !66, !68, !69, !70, !72, !73, !74, !76, !77, !78, !80, !81, !83, !84, !86, !87, !88, !89, !91, !92, !93, !95, !96, !97, !99, !100, !101, !103, !104, !105, !107, !108, !110, !112, !114, !116, !118, !120, !121, !123, !125, !127, !129, !131, !133, !135, !137, !139, !141, !143, !145, !147, !149, !150, !151, !152, !154, !156, !158, !160, !162, !164, !166, !168, !170, !172, !174, !176, !178, !180, !182, !184, !186, !188, !190, !192, !194, !195, !196, !197, !199, !200, !201, !203, !204, !205, !207, !208, !209, !211, !212, !213, !215, !216, !217, !219, !220, !221, !223, !224, !225, !227, !228, !229, !231, !232, !233, !235, !236, !237, !239, !241, !243, !244, !245, !246, !248, !249, !250, !252, !254, !255, !256, !258, !259, !260, !262, !264, !265, !266, !267, !269, !271, !272, !273, !275, !276, !277, !279, !280, !281, !283, !284, !285, !287, !288, !289, !291, !292, !293, !295, !296, !297, !299, !300, !301, !303, !304, !305, !307, !308, !309, !311, !312, !313, !315, !316, !317, !318, !319, !321, !322, !323, !325, !326, !327, !329, !331, !332, !333, !335, !337, !339, !341, !343, !345, !346, !348, !350, !352, !354, !356, !358, !360, !362, !363, !364, !366, !368, !370, !372, !374, !376, !378, !380, !382, !383, !384, !385, !386, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !410, !412, !414, !416, !418, !420, !422, !424, !425, !426, !427, !429, !430, !431, !433, !434, !435, !437, !438, !439, !441, !442, !443, !445, !446, !447, !449, !450, !451, !453, !454, !455, !456, !458, !459, !460, !462, !463, !464, !465, !467, !468, !470, !471, !472, !474, !475, !476, !478, !479, !480, !481, !483, !484, !485, !486, !488, !490, !492, !494, !496, !497, !499, !501, !502, !503, !504, !506, !508, !510, !512, !513, !514, !515, !517, !518, !519, !521, !522, !523, !525, !526, !527, !529, !530, !531, !533, !534, !535, !537, !538, !539, !541, !542, !543, !545, !546, !547, !549, !550, !551, !553, !554, !555, !557, !558, !560, !561, !562, !563, !565, !566, !567, !569, !570, !571, !573, !574, !575, !577, !578, !579, !581, !582, !583, !585, !586, !587, !589, !590, !592, !593, !594, !596, !598, !600, !602, !603, !604, !606, !607, !608, !610, !611, !612, !614, !615, !616, !618, !619, !620, !622, !623, !624, !626, !627, !628, !630, !631, !632, !634, !635, !637, !638, !639, !641, !642, !643, !645, !646, !648, !649, !650, !651, !653, !654, !655, !657, !658, !660, !661, !662, !664, !665, !666, !668, !669, !670, !672, !673, !674, !676, !677, !679, !680, !682, !683, !684, !686, !687, !688, !690, !691, !693, !694, !696, !697, !699, !700, !702, !703, !705, !706, !708, !709, !710, !711, !713, !714, !715, !717, !719, !721, !723, !724, !725, !726, !728, !729, !730, !732, !733, !734, !736, !738, !740, !742, !744, !746, !748, !750, !751, !752, !753, !755, !756, !758, !759, !760, !762, !764, !765, !766, !767, !769, !770, !771, !773, !775, !776, !778, !779, !780, !781, !783, !784, !785, !787, !788, !789, !791, !792, !794, !796, !798, !800, !801, !802, !803, !805, !807, !808, !809, !811, !813, !815, !817, !819, !821, !822, !823, !825, !826, !827, !829, !830, !831, !833, !834, !835, !837, !838, !839, !841, !842, !843, !845, !847, !848, !849, !851, !852, !854, !855, !857, !858, !859, !861, !862, !863, !864, !865, !867, !869, !871, !873, !875, !877, !878, !879, !880, !881, !883, !884, !886, !887, !888, !889, !891, !892, !894, !895, !897, !899, !901, !903, !905, !907, !909, !911, !913, !914, !915, !917, !918, !919, !921, !922, !924, !925, !926, !928, !929, !931, !932, !933, !935, !936, !937, !939, !940, !941, !943, !944, !945, !947, !948, !949, !951, !952, !953, !955, !956, !957, !959, !960, !961, !963, !964, !966, !967, !968, !970, !971, !972, !974, !975, !977, !978, !980, !981, !983, !984, !985, !986, !988, !989, !990, !992, !994, !996, !998, !1000, !1001, !1002, !1004, !1005, !1006, !1008, !1009, !1010, !1012, !1013, !1014, !1016, !1017, !1018, !1020, !1021, !1022, !1024, !1025, !1026, !1028, !1029, !1030, !1032, !1033, !1035, !1036, !1037, !1038, !1040, !1041, !1042, !1043, !1045, !1046, !1047, !1048, !1050, !1051, !1053, !1055, !1057, !1059, !1061, !1063, !1064, !1065, !1067, !1068, !1069, !1071, !1072, !1073, !1075, !1076, !1077, !1079, !1080, !1081, !1083, !1084, !1085, !1087, !1088, !1090, !1091, !1093, !1094, !1095, !1097, !1098, !1100, !1101, !1103, !1104, !1106, !1107, !1109, !1110, !1112, !1113, !1115, !1116, !1118, !1119, !1120, !1122, !1123, !1125, !1127, !1129, !1130, !1131, !1132, !1134, !1135, !1136, !1138, !1139, !1140, !1142, !1143, !1144, !1146, !1147, !1148, !1150, !1151, !1152, !1154, !1155, !1157, !1158, !1160, !1161, !1162, !1164, !1165, !1166, !1168, !1169, !1170, !1171, !1173, !1174, !1175, !1177, !1178, !1179, !1181, !1182, !1184, !1185, !1187, !1188, !1190, !1191, !1193, !1194, !1196, !1197, !1199, !1200, !1202, !1203, !1205, !1206, !1208, !1209, !1211, !1212, !1214, !1215, !1217, !1218, !1220, !1221, !1223, !1224, !1226, !1228, !1230, !1231, !1232, !1234, !1235, !1236, !1238, !1239, !1240, !1242, !1243, !1244, !1246, !1247, !1248, !1250, !1251, !1252, !1254, !1255, !1256, !1258, !1259, !1260, !1262, !1263, !1265, !1266, !1267, !1269, !1270, !1271, !1273, !1274, !1275, !1277, !1278, !1279, !1281, !1282, !1283, !1285, !1286, !1288, !1289, !1290, !1292, !1293, !1294, !1296, !1297, !1298, !1300, !1301, !1303, !1305, !1307, !1308, !1309, !1311, !1313, !1315, !1317, !1319, !1320, !1321, !1323, !1324, !1325, !1327, !1328, !1329, !1331, !1332, !1333, !1335, !1336, !1337, !1339, !1340, !1341, !1343, !1344, !1346, !1347, !1348, !1350, !1351, !1353, !1354, !1355, !1356, !1358, !1360, !1362, !1364, !1366, !1367, !1368, !1369, !1370, !1372, !1374, !1375, !1376, !1378, !1379, !1380, !1382, !1383, !1384, !1385, !1387, !1388, !1389, !1390, !1392, !1394, !1396, !1398, !1400, !1402, !1404, !1406, !1408, !1409, !1410, !1412, !1414, !1416, !1418, !1420, !1422, !1424, !1425, !1426, !1428, !1429, !1430, !1432, !1433, !1434, !1436, !1437, !1438, !1440, !1441, !1442, !1444, !1445, !1447, !1448, !1449, !1451, !1452, !1453, !1455, !1456, !1457, !1459, !1460, !1461, !1463, !1464, !1466, !1467, !1468, !1470, !1471, !1472, !1473, !1475, !1476, !1477, !1478, !1480, !1481, !1482, !1484, !1485, !1487, !1488, !1489, !1490}
!llvm.named.register.sp = !{!1491}
!llvm.module.flags = !{!1492, !1493, !1494, !1495, !1496, !1497, !1498}
!llvm.ident = !{!1499}

!0 = !{ptr @__tracepoint_lock_acquire, !1, !"__tracepoint_lock_acquire", i1 false, i1 false}
!1 = !{!"../include/trace/events/lock.h", i32 13, i32 1}
!2 = !{ptr @__tracepoint_ptr_lock_acquire, !1, !"__tracepoint_ptr_lock_acquire", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_lock_acquire, !1, !"__SCK__tp_func_lock_acquire", i1 false, i1 false}
!4 = !{ptr @__tracepoint_lock_release, !5, !"__tracepoint_lock_release", i1 false, i1 false}
!5 = !{!"../include/trace/events/lock.h", i32 58, i32 1}
!6 = !{ptr @__tracepoint_ptr_lock_release, !5, !"__tracepoint_ptr_lock_release", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_lock_release, !5, !"__SCK__tp_func_lock_release", i1 false, i1 false}
!8 = !{ptr @__tracepoint_lock_contended, !9, !"__tracepoint_lock_contended", i1 false, i1 false}
!9 = !{!"../include/trace/events/lock.h", i32 67, i32 1}
!10 = !{ptr @__tracepoint_ptr_lock_contended, !9, !"__tracepoint_ptr_lock_contended", i1 false, i1 false}
!11 = !{ptr @__SCK__tp_func_lock_contended, !9, !"__SCK__tp_func_lock_contended", i1 false, i1 false}
!12 = !{ptr @__tracepoint_lock_acquired, !13, !"__tracepoint_lock_acquired", i1 false, i1 false}
!13 = !{!"../include/trace/events/lock.h", i32 74, i32 1}
!14 = !{ptr @__tracepoint_ptr_lock_acquired, !13, !"__tracepoint_ptr_lock_acquired", i1 false, i1 false}
!15 = !{ptr @__SCK__tp_func_lock_acquired, !13, !"__SCK__tp_func_lock_acquired", i1 false, i1 false}
!16 = !{ptr @event_class_lock_acquire, !1, !"event_class_lock_acquire", i1 false, i1 false}
!17 = !{ptr @event_lock_acquire, !1, !"event_lock_acquire", i1 false, i1 false}
!18 = !{ptr @__event_lock_acquire, !1, !"__event_lock_acquire", i1 false, i1 false}
!19 = !{ptr @event_class_lock, !20, !"event_class_lock", i1 false, i1 false}
!20 = !{!"../include/trace/events/lock.h", i32 39, i32 1}
!21 = !{ptr @event_lock_release, !5, !"event_lock_release", i1 false, i1 false}
!22 = !{ptr @__event_lock_release, !5, !"__event_lock_release", i1 false, i1 false}
!23 = !{ptr @event_lock_contended, !9, !"event_lock_contended", i1 false, i1 false}
!24 = !{ptr @__event_lock_contended, !9, !"__event_lock_contended", i1 false, i1 false}
!25 = !{ptr @event_lock_acquired, !13, !"event_lock_acquired", i1 false, i1 false}
!26 = !{ptr @__event_lock_acquired, !13, !"__event_lock_acquired", i1 false, i1 false}
!27 = !{ptr @__bpf_trace_tp_map_lock_acquire, !1, !"__bpf_trace_tp_map_lock_acquire", i1 false, i1 false}
!28 = !{ptr @__bpf_trace_tp_map_lock_release, !5, !"__bpf_trace_tp_map_lock_release", i1 false, i1 false}
!29 = !{ptr @__bpf_trace_tp_map_lock_contended, !9, !"__bpf_trace_tp_map_lock_contended", i1 false, i1 false}
!30 = !{ptr @__bpf_trace_tp_map_lock_acquired, !13, !"__bpf_trace_tp_map_lock_acquired", i1 false, i1 false}
!31 = !{ptr @prove_locking, !32, !"prove_locking", i1 false, i1 false}
!32 = !{!"../kernel/locking/lockdep.c", i32 67, i32 5}
!33 = !{ptr @__param_prove_locking, !34, !"__param_prove_locking", i1 false, i1 false}
!34 = !{!"../kernel/locking/lockdep.c", i32 68, i32 1}
!35 = !{ptr @__UNIQUE_ID_prove_lockingtype289, !34, !"__UNIQUE_ID_prove_lockingtype289", i1 false, i1 false}
!36 = !{ptr @lock_stat, !37, !"lock_stat", i1 false, i1 false}
!37 = !{!"../kernel/locking/lockdep.c", i32 74, i32 5}
!38 = !{ptr @__param_lock_stat, !39, !"__param_lock_stat", i1 false, i1 false}
!39 = !{!"../kernel/locking/lockdep.c", i32 75, i32 1}
!40 = !{ptr @__UNIQUE_ID_lock_stattype290, !39, !"__UNIQUE_ID_lock_stattype290", i1 false, i1 false}
!41 = !{ptr @__ksymtab_lockdep_recursion, !42, !"__ksymtab_lockdep_recursion", i1 false, i1 false}
!42 = !{!"../kernel/locking/lockdep.c", i32 81, i32 1}
!43 = !{ptr @all_lock_classes, !44, !"all_lock_classes", i1 false, i1 false}
!44 = !{!"../kernel/locking/lockdep.c", i32 341, i32 1}
!45 = !{ptr @check_consistency, !46, !"check_consistency", i1 false, i1 false}
!46 = !{!"../kernel/locking/lockdep.c", i32 1123, i32 5}
!47 = !{ptr @__param_check_consistency, !48, !"__param_check_consistency", i1 false, i1 false}
!48 = !{!"../kernel/locking/lockdep.c", i32 1124, i32 1}
!49 = !{ptr @__UNIQUE_ID_check_consistencytype312, !48, !"__UNIQUE_ID_check_consistencytype312", i1 false, i1 false}
!50 = distinct !{null, !51, !"__already_done", i1 false, i1 false}
!51 = !{!"../kernel/locking/lockdep.c", i32 1193, i32 6}
!52 = !{ptr @.str, !51, !"<string literal>", i1 false, i1 false}
!53 = distinct !{null, !54, !"__warned", i1 false, i1 false}
!54 = !{!"../kernel/locking/lockdep.c", i32 1200, i32 2}
!55 = !{ptr @.str.1, !54, !"<string literal>", i1 false, i1 false}
!56 = distinct !{null, !57, !"__already_done", i1 false, i1 false}
!57 = !{!"../kernel/locking/lockdep.c", i32 1201, i32 7}
!58 = !{ptr @__ksymtab_lockdep_register_key, !59, !"__ksymtab_lockdep_register_key", i1 false, i1 false}
!59 = !{!"../kernel/locking/lockdep.c", i32 1210, i32 1}
!60 = !{ptr @.str.3, !61, !"<string literal>", i1 false, i1 false}
!61 = !{!"../kernel/locking/lockdep.c", i32 2384, i32 3}
!62 = !{ptr @.str.4, !61, !"<string literal>", i1 false, i1 false}
!63 = !{ptr @print_shortest_lock_dependencies._entry, !61, !"_entry", i1 false, i1 false}
!64 = !{ptr @print_shortest_lock_dependencies._entry_ptr, !61, !"_entry_ptr", i1 false, i1 false}
!65 = !{ptr @.str.5, !61, !"<string literal>", i1 false, i1 false}
!66 = !{ptr @.str.7, !67, !"<string literal>", i1 false, i1 false}
!67 = !{!"../kernel/locking/lockdep.c", i32 2386, i32 3}
!68 = !{ptr @print_shortest_lock_dependencies._entry.6, !67, !"_entry", i1 false, i1 false}
!69 = !{ptr @print_shortest_lock_dependencies._entry_ptr.8, !67, !"_entry_ptr", i1 false, i1 false}
!70 = !{ptr @.str.10, !71, !"<string literal>", i1 false, i1 false}
!71 = !{!"../kernel/locking/lockdep.c", i32 2389, i32 4}
!72 = !{ptr @print_shortest_lock_dependencies._entry.9, !71, !"_entry", i1 false, i1 false}
!73 = !{ptr @print_shortest_lock_dependencies._entry_ptr.11, !71, !"_entry_ptr", i1 false, i1 false}
!74 = !{ptr @.str.12, !75, !"<string literal>", i1 false, i1 false}
!75 = !{!"../kernel/locking/lockdep.c", i32 2432, i32 4}
!76 = !{ptr @print_shortest_lock_dependencies_backwards._entry, !75, !"_entry", i1 false, i1 false}
!77 = !{ptr @print_shortest_lock_dependencies_backwards._entry_ptr, !75, !"_entry_ptr", i1 false, i1 false}
!78 = !{ptr @print_shortest_lock_dependencies_backwards._entry.13, !79, !"_entry", i1 false, i1 false}
!79 = !{!"../kernel/locking/lockdep.c", i32 2434, i32 4}
!80 = !{ptr @print_shortest_lock_dependencies_backwards._entry_ptr.14, !79, !"_entry_ptr", i1 false, i1 false}
!81 = !{ptr @print_shortest_lock_dependencies_backwards._entry.15, !82, !"_entry", i1 false, i1 false}
!82 = !{!"../kernel/locking/lockdep.c", i32 2444, i32 4}
!83 = !{ptr @print_shortest_lock_dependencies_backwards._entry_ptr.16, !82, !"_entry_ptr", i1 false, i1 false}
!84 = !{ptr @.str.17, !85, !"<string literal>", i1 false, i1 false}
!85 = !{!"../kernel/locking/lockdep.c", i32 4089, i32 2}
!86 = !{ptr @.str.18, !85, !"<string literal>", i1 false, i1 false}
!87 = !{ptr @print_irqtrace_events._entry, !85, !"_entry", i1 false, i1 false}
!88 = !{ptr @print_irqtrace_events._entry_ptr, !85, !"_entry_ptr", i1 false, i1 false}
!89 = !{ptr @.str.20, !90, !"<string literal>", i1 false, i1 false}
!90 = !{!"../kernel/locking/lockdep.c", i32 4090, i32 2}
!91 = !{ptr @print_irqtrace_events._entry.19, !90, !"_entry", i1 false, i1 false}
!92 = !{ptr @print_irqtrace_events._entry_ptr.21, !90, !"_entry_ptr", i1 false, i1 false}
!93 = !{ptr @.str.23, !94, !"<string literal>", i1 false, i1 false}
!94 = !{!"../kernel/locking/lockdep.c", i32 4093, i32 2}
!95 = !{ptr @print_irqtrace_events._entry.22, !94, !"_entry", i1 false, i1 false}
!96 = !{ptr @print_irqtrace_events._entry_ptr.24, !94, !"_entry_ptr", i1 false, i1 false}
!97 = !{ptr @.str.26, !98, !"<string literal>", i1 false, i1 false}
!98 = !{!"../kernel/locking/lockdep.c", i32 4096, i32 2}
!99 = !{ptr @print_irqtrace_events._entry.25, !98, !"_entry", i1 false, i1 false}
!100 = !{ptr @print_irqtrace_events._entry_ptr.27, !98, !"_entry_ptr", i1 false, i1 false}
!101 = !{ptr @.str.29, !102, !"<string literal>", i1 false, i1 false}
!102 = !{!"../kernel/locking/lockdep.c", i32 4099, i32 2}
!103 = !{ptr @print_irqtrace_events._entry.28, !102, !"_entry", i1 false, i1 false}
!104 = !{ptr @print_irqtrace_events._entry_ptr.30, !102, !"_entry_ptr", i1 false, i1 false}
!105 = !{ptr @.str.31, !106, !"<string literal>", i1 false, i1 false}
!106 = !{!"../kernel/locking/lockdep.c", i32 4273, i32 6}
!107 = !{ptr @.str.32, !106, !"<string literal>", i1 false, i1 false}
!108 = !{ptr @.str.33, !109, !"<string literal>", i1 false, i1 false}
!109 = !{!"../kernel/locking/lockdep.c", i32 4279, i32 6}
!110 = !{ptr @.str.34, !111, !"<string literal>", i1 false, i1 false}
!111 = !{!"../kernel/locking/lockdep.c", i32 4286, i32 6}
!112 = !{ptr @__ksymtab_lockdep_hardirqs_on_prepare, !113, !"__ksymtab_lockdep_hardirqs_on_prepare", i1 false, i1 false}
!113 = !{!"../kernel/locking/lockdep.c", i32 4295, i32 1}
!114 = !{ptr @.str.35, !115, !"<string literal>", i1 false, i1 false}
!115 = !{!"../kernel/locking/lockdep.c", i32 4349, i32 2}
!116 = distinct !{null, !117, !"<string literal>", i1 false, i1 false}
!117 = !{!"../kernel/locking/lockdep.c", i32 4354, i32 2}
!118 = distinct !{null, !119, !"__already_done", i1 false, i1 false}
!119 = !{!"../kernel/locking/lockdep.c", i32 4357, i32 2}
!120 = distinct !{null, !119, !"<string literal>", i1 false, i1 false}
!121 = !{ptr @__ksymtab_lockdep_hardirqs_on, !122, !"__ksymtab_lockdep_hardirqs_on", i1 false, i1 false}
!122 = !{!"../kernel/locking/lockdep.c", i32 4359, i32 1}
!123 = distinct !{null, !124, !"<string literal>", i1 false, i1 false}
!124 = !{!"../kernel/locking/lockdep.c", i32 4377, i32 13}
!125 = distinct !{null, !126, !"__already_done", i1 false, i1 false}
!126 = !{!"../kernel/locking/lockdep.c", i32 4396, i32 3}
!127 = distinct !{null, !128, !"__already_done", i1 false, i1 false}
!128 = !{!"../kernel/locking/lockdep.c", i32 4398, i32 3}
!129 = !{ptr @__ksymtab_lockdep_hardirqs_off, !130, !"__ksymtab_lockdep_hardirqs_off", i1 false, i1 false}
!130 = !{!"../kernel/locking/lockdep.c", i32 4401, i32 1}
!131 = distinct !{null, !132, !"__already_done", i1 false, i1 false}
!132 = !{!"../kernel/locking/lockdep.c", i32 4421, i32 3}
!133 = distinct !{null, !134, !"__already_done", i1 false, i1 false}
!134 = !{!"../kernel/locking/lockdep.c", i32 4432, i32 2}
!135 = distinct !{null, !136, !"__already_done", i1 false, i1 false}
!136 = !{!"../kernel/locking/lockdep.c", i32 4466, i32 3}
!137 = !{ptr @.str.41, !138, !"<string literal>", i1 false, i1 false}
!138 = !{!"../kernel/locking/lockdep.c", i32 4470, i32 3}
!139 = distinct !{null, !140, !"__already_done", i1 false, i1 false}
!140 = !{!"../kernel/locking/lockdep.c", i32 4472, i32 3}
!141 = !{ptr @.str.43, !142, !"<string literal>", i1 false, i1 false}
!142 = !{!"../kernel/locking/lockdep.c", i32 4790, i32 6}
!143 = !{ptr @.str.44, !144, !"<string literal>", i1 false, i1 false}
!144 = !{!"../kernel/locking/lockdep.c", i32 4791, i32 16}
!145 = !{ptr @.str.45, !146, !"<string literal>", i1 false, i1 false}
!146 = !{!"../kernel/locking/lockdep.c", i32 4804, i32 6}
!147 = !{ptr @.str.46, !148, !"<string literal>", i1 false, i1 false}
!148 = !{!"../kernel/locking/lockdep.c", i32 4812, i32 4}
!149 = !{ptr @.str.47, !148, !"<string literal>", i1 false, i1 false}
!150 = !{ptr @lockdep_init_map_type._entry, !148, !"_entry", i1 false, i1 false}
!151 = !{ptr @lockdep_init_map_type._entry_ptr, !148, !"_entry_ptr", i1 false, i1 false}
!152 = !{ptr @.str.48, !153, !"<string literal>", i1 false, i1 false}
!153 = !{!"../kernel/locking/lockdep.c", i32 4813, i32 3}
!154 = !{ptr @.str.49, !155, !"<string literal>", i1 false, i1 false}
!155 = !{!"../kernel/locking/lockdep.c", i32 4824, i32 7}
!156 = !{ptr @__ksymtab_lockdep_init_map_type, !157, !"__ksymtab_lockdep_init_map_type", i1 false, i1 false}
!157 = !{!"../kernel/locking/lockdep.c", i32 4834, i32 1}
!158 = !{ptr @__ksymtab___lockdep_no_validate__, !159, !"__ksymtab___lockdep_no_validate__", i1 false, i1 false}
!159 = !{!"../kernel/locking/lockdep.c", i32 4837, i32 1}
!160 = !{ptr @__ksymtab_lock_set_class, !161, !"__ksymtab_lock_set_class", i1 false, i1 false}
!161 = !{!"../kernel/locking/lockdep.c", i32 5529, i32 1}
!162 = !{ptr @__ksymtab_lock_downgrade, !163, !"__ksymtab_lock_downgrade", i1 false, i1 false}
!163 = !{!"../kernel/locking/lockdep.c", i32 5546, i32 1}
!164 = !{ptr @__ksymtab_read_lock_is_recursive, !165, !"__ksymtab_read_lock_is_recursive", i1 false, i1 false}
!165 = !{!"../kernel/locking/lockdep.c", i32 5598, i32 1}
!166 = !{ptr @__ksymtab_lock_acquire, !167, !"__ksymtab_lock_acquire", i1 false, i1 false}
!167 = !{!"../kernel/locking/lockdep.c", i32 5644, i32 1}
!168 = !{ptr @__ksymtab_lock_release, !169, !"__ksymtab_lock_release", i1 false, i1 false}
!169 = !{!"../kernel/locking/lockdep.c", i32 5664, i32 1}
!170 = !{ptr @__ksymtab_lock_is_held_type, !171, !"__ksymtab_lock_is_held_type", i1 false, i1 false}
!171 = !{!"../kernel/locking/lockdep.c", i32 5688, i32 1}
!172 = !{ptr @_kbl_addr_lock_is_held_type, !173, !"_kbl_addr_lock_is_held_type", i1 false, i1 false}
!173 = !{!"../kernel/locking/lockdep.c", i32 5689, i32 1}
!174 = !{ptr @__ksymtab_lock_pin_lock, !175, !"__ksymtab_lock_pin_lock", i1 false, i1 false}
!175 = !{!"../kernel/locking/lockdep.c", i32 5709, i32 1}
!176 = !{ptr @__ksymtab_lock_repin_lock, !177, !"__ksymtab_lock_repin_lock", i1 false, i1 false}
!177 = !{!"../kernel/locking/lockdep.c", i32 5726, i32 1}
!178 = !{ptr @__ksymtab_lock_unpin_lock, !179, !"__ksymtab_lock_unpin_lock", i1 false, i1 false}
!179 = !{!"../kernel/locking/lockdep.c", i32 5743, i32 1}
!180 = !{ptr @__ksymtab_lock_contended, !181, !"__ksymtab_lock_contended", i1 false, i1 false}
!181 = !{!"../kernel/locking/lockdep.c", i32 5878, i32 1}
!182 = !{ptr @__ksymtab_lock_acquired, !183, !"__ksymtab_lock_acquired", i1 false, i1 false}
!183 = !{!"../kernel/locking/lockdep.c", i32 5896, i32 1}
!184 = distinct !{null, !185, !"__already_done", i1 false, i1 false}
!185 = !{!"../kernel/locking/lockdep.c", i32 6304, i32 6}
!186 = distinct !{null, !187, !"__warned", i1 false, i1 false}
!187 = !{!"../kernel/locking/lockdep.c", i32 6312, i32 2}
!188 = distinct !{null, !189, !"__already_done", i1 false, i1 false}
!189 = !{!"../kernel/locking/lockdep.c", i32 6319, i32 2}
!190 = !{ptr @__ksymtab_lockdep_unregister_key, !191, !"__ksymtab_lockdep_unregister_key", i1 false, i1 false}
!191 = !{!"../kernel/locking/lockdep.c", i32 6329, i32 1}
!192 = !{ptr @.str.51, !193, !"<string literal>", i1 false, i1 false}
!193 = !{!"../kernel/locking/lockdep.c", i32 6333, i32 2}
!194 = !{ptr @.str.52, !193, !"<string literal>", i1 false, i1 false}
!195 = !{ptr @lockdep_init._entry, !193, !"_entry", i1 false, i1 false}
!196 = !{ptr @lockdep_init._entry_ptr, !193, !"_entry_ptr", i1 false, i1 false}
!197 = !{ptr @.str.54, !198, !"<string literal>", i1 false, i1 false}
!198 = !{!"../kernel/locking/lockdep.c", i32 6335, i32 2}
!199 = !{ptr @lockdep_init._entry.53, !198, !"_entry", i1 false, i1 false}
!200 = !{ptr @lockdep_init._entry_ptr.55, !198, !"_entry_ptr", i1 false, i1 false}
!201 = !{ptr @.str.57, !202, !"<string literal>", i1 false, i1 false}
!202 = !{!"../kernel/locking/lockdep.c", i32 6336, i32 2}
!203 = !{ptr @lockdep_init._entry.56, !202, !"_entry", i1 false, i1 false}
!204 = !{ptr @lockdep_init._entry_ptr.58, !202, !"_entry_ptr", i1 false, i1 false}
!205 = !{ptr @.str.60, !206, !"<string literal>", i1 false, i1 false}
!206 = !{!"../kernel/locking/lockdep.c", i32 6337, i32 2}
!207 = !{ptr @lockdep_init._entry.59, !206, !"_entry", i1 false, i1 false}
!208 = !{ptr @lockdep_init._entry_ptr.61, !206, !"_entry_ptr", i1 false, i1 false}
!209 = !{ptr @.str.63, !210, !"<string literal>", i1 false, i1 false}
!210 = !{!"../kernel/locking/lockdep.c", i32 6338, i32 2}
!211 = !{ptr @lockdep_init._entry.62, !210, !"_entry", i1 false, i1 false}
!212 = !{ptr @lockdep_init._entry_ptr.64, !210, !"_entry_ptr", i1 false, i1 false}
!213 = !{ptr @.str.66, !214, !"<string literal>", i1 false, i1 false}
!214 = !{!"../kernel/locking/lockdep.c", i32 6339, i32 2}
!215 = !{ptr @lockdep_init._entry.65, !214, !"_entry", i1 false, i1 false}
!216 = !{ptr @lockdep_init._entry_ptr.67, !214, !"_entry_ptr", i1 false, i1 false}
!217 = !{ptr @.str.69, !218, !"<string literal>", i1 false, i1 false}
!218 = !{!"../kernel/locking/lockdep.c", i32 6340, i32 2}
!219 = !{ptr @lockdep_init._entry.68, !218, !"_entry", i1 false, i1 false}
!220 = !{ptr @lockdep_init._entry_ptr.70, !218, !"_entry_ptr", i1 false, i1 false}
!221 = !{ptr @.str.72, !222, !"<string literal>", i1 false, i1 false}
!222 = !{!"../kernel/locking/lockdep.c", i32 6341, i32 2}
!223 = !{ptr @lockdep_init._entry.71, !222, !"_entry", i1 false, i1 false}
!224 = !{ptr @lockdep_init._entry_ptr.73, !222, !"_entry_ptr", i1 false, i1 false}
!225 = !{ptr @.str.75, !226, !"<string literal>", i1 false, i1 false}
!226 = !{!"../kernel/locking/lockdep.c", i32 6343, i32 2}
!227 = !{ptr @lockdep_init._entry.74, !226, !"_entry", i1 false, i1 false}
!228 = !{ptr @lockdep_init._entry_ptr.76, !226, !"_entry_ptr", i1 false, i1 false}
!229 = !{ptr @.str.78, !230, !"<string literal>", i1 false, i1 false}
!230 = !{!"../kernel/locking/lockdep.c", i32 6361, i32 2}
!231 = !{ptr @lockdep_init._entry.77, !230, !"_entry", i1 false, i1 false}
!232 = !{ptr @lockdep_init._entry_ptr.79, !230, !"_entry_ptr", i1 false, i1 false}
!233 = !{ptr @.str.81, !234, !"<string literal>", i1 false, i1 false}
!234 = !{!"../kernel/locking/lockdep.c", i32 6366, i32 2}
!235 = !{ptr @lockdep_init._entry.80, !234, !"_entry", i1 false, i1 false}
!236 = !{ptr @lockdep_init._entry_ptr.82, !234, !"_entry_ptr", i1 false, i1 false}
!237 = !{ptr @__ksymtab_debug_check_no_locks_freed, !238, !"__ksymtab_debug_check_no_locks_freed", i1 false, i1 false}
!238 = !{!"../kernel/locking/lockdep.c", i32 6428, i32 1}
!239 = !{ptr @__ksymtab_debug_check_no_locks_held, !240, !"__ksymtab_debug_check_no_locks_held", i1 false, i1 false}
!240 = !{!"../kernel/locking/lockdep.c", i32 6453, i32 1}
!241 = !{ptr @.str.83, !242, !"<string literal>", i1 false, i1 false}
!242 = !{!"../kernel/locking/lockdep.c", i32 6461, i32 3}
!243 = !{ptr @.str.84, !242, !"<string literal>", i1 false, i1 false}
!244 = !{ptr @debug_show_all_locks._entry, !242, !"_entry", i1 false, i1 false}
!245 = !{ptr @debug_show_all_locks._entry_ptr, !242, !"_entry_ptr", i1 false, i1 false}
!246 = !{ptr @.str.86, !247, !"<string literal>", i1 false, i1 false}
!247 = !{!"../kernel/locking/lockdep.c", i32 6464, i32 2}
!248 = !{ptr @debug_show_all_locks._entry.85, !247, !"_entry", i1 false, i1 false}
!249 = !{ptr @debug_show_all_locks._entry_ptr.87, !247, !"_entry_ptr", i1 false, i1 false}
!250 = distinct !{null, !251, !"__warned", i1 false, i1 false}
!251 = !{!"../kernel/locking/lockdep.c", i32 6467, i32 2}
!252 = !{ptr @.str.89, !253, !"<string literal>", i1 false, i1 false}
!253 = !{!"../kernel/locking/lockdep.c", i32 6476, i32 2}
!254 = !{ptr @debug_show_all_locks._entry.88, !253, !"_entry", i1 false, i1 false}
!255 = !{ptr @debug_show_all_locks._entry_ptr.90, !253, !"_entry_ptr", i1 false, i1 false}
!256 = !{ptr @.str.92, !257, !"<string literal>", i1 false, i1 false}
!257 = !{!"../kernel/locking/lockdep.c", i32 6477, i32 2}
!258 = !{ptr @debug_show_all_locks._entry.91, !257, !"_entry", i1 false, i1 false}
!259 = !{ptr @debug_show_all_locks._entry_ptr.93, !257, !"_entry_ptr", i1 false, i1 false}
!260 = !{ptr @__ksymtab_debug_show_all_locks, !261, !"__ksymtab_debug_show_all_locks", i1 false, i1 false}
!261 = !{!"../kernel/locking/lockdep.c", i32 6479, i32 1}
!262 = !{ptr @.str.94, !263, !"<string literal>", i1 false, i1 false}
!263 = !{!"../kernel/locking/lockdep.c", i32 6489, i32 3}
!264 = !{ptr @.str.95, !263, !"<string literal>", i1 false, i1 false}
!265 = !{ptr @debug_show_held_locks._entry, !263, !"_entry", i1 false, i1 false}
!266 = !{ptr @debug_show_held_locks._entry_ptr, !263, !"_entry_ptr", i1 false, i1 false}
!267 = !{ptr @__ksymtab_debug_show_held_locks, !268, !"__ksymtab_debug_show_held_locks", i1 false, i1 false}
!268 = !{!"../kernel/locking/lockdep.c", i32 6494, i32 1}
!269 = !{ptr @.str.96, !270, !"<string literal>", i1 false, i1 false}
!270 = !{!"../kernel/locking/lockdep.c", i32 6503, i32 3}
!271 = !{ptr @lockdep_sys_exit._entry, !270, !"_entry", i1 false, i1 false}
!272 = !{ptr @lockdep_sys_exit._entry_ptr, !270, !"_entry_ptr", i1 false, i1 false}
!273 = !{ptr @.str.98, !274, !"<string literal>", i1 false, i1 false}
!274 = !{!"../kernel/locking/lockdep.c", i32 6504, i32 3}
!275 = !{ptr @lockdep_sys_exit._entry.97, !274, !"_entry", i1 false, i1 false}
!276 = !{ptr @lockdep_sys_exit._entry_ptr.99, !274, !"_entry_ptr", i1 false, i1 false}
!277 = !{ptr @.str.101, !278, !"<string literal>", i1 false, i1 false}
!278 = !{!"../kernel/locking/lockdep.c", i32 6505, i32 3}
!279 = !{ptr @lockdep_sys_exit._entry.100, !278, !"_entry", i1 false, i1 false}
!280 = !{ptr @lockdep_sys_exit._entry_ptr.102, !278, !"_entry_ptr", i1 false, i1 false}
!281 = !{ptr @.str.104, !282, !"<string literal>", i1 false, i1 false}
!282 = !{!"../kernel/locking/lockdep.c", i32 6507, i32 3}
!283 = !{ptr @lockdep_sys_exit._entry.103, !282, !"_entry", i1 false, i1 false}
!284 = !{ptr @lockdep_sys_exit._entry_ptr.105, !282, !"_entry_ptr", i1 false, i1 false}
!285 = !{ptr @.str.107, !286, !"<string literal>", i1 false, i1 false}
!286 = !{!"../kernel/locking/lockdep.c", i32 6508, i32 3}
!287 = !{ptr @lockdep_sys_exit._entry.106, !286, !"_entry", i1 false, i1 false}
!288 = !{ptr @lockdep_sys_exit._entry_ptr.108, !286, !"_entry_ptr", i1 false, i1 false}
!289 = !{ptr @.str.109, !290, !"<string literal>", i1 false, i1 false}
!290 = !{!"../kernel/locking/lockdep.c", i32 6526, i32 2}
!291 = !{ptr @lockdep_rcu_suspicious._entry, !290, !"_entry", i1 false, i1 false}
!292 = !{ptr @lockdep_rcu_suspicious._entry_ptr, !290, !"_entry_ptr", i1 false, i1 false}
!293 = !{ptr @.str.111, !294, !"<string literal>", i1 false, i1 false}
!294 = !{!"../kernel/locking/lockdep.c", i32 6527, i32 2}
!295 = !{ptr @lockdep_rcu_suspicious._entry.110, !294, !"_entry", i1 false, i1 false}
!296 = !{ptr @lockdep_rcu_suspicious._entry_ptr.112, !294, !"_entry_ptr", i1 false, i1 false}
!297 = !{ptr @.str.114, !298, !"<string literal>", i1 false, i1 false}
!298 = !{!"../kernel/locking/lockdep.c", i32 6528, i32 2}
!299 = !{ptr @lockdep_rcu_suspicious._entry.113, !298, !"_entry", i1 false, i1 false}
!300 = !{ptr @lockdep_rcu_suspicious._entry_ptr.115, !298, !"_entry_ptr", i1 false, i1 false}
!301 = !{ptr @.str.117, !302, !"<string literal>", i1 false, i1 false}
!302 = !{!"../kernel/locking/lockdep.c", i32 6530, i32 2}
!303 = !{ptr @lockdep_rcu_suspicious._entry.116, !302, !"_entry", i1 false, i1 false}
!304 = !{ptr @lockdep_rcu_suspicious._entry_ptr.118, !302, !"_entry_ptr", i1 false, i1 false}
!305 = !{ptr @.str.120, !306, !"<string literal>", i1 false, i1 false}
!306 = !{!"../kernel/locking/lockdep.c", i32 6531, i32 2}
!307 = !{ptr @lockdep_rcu_suspicious._entry.119, !306, !"_entry", i1 false, i1 false}
!308 = !{ptr @lockdep_rcu_suspicious._entry_ptr.121, !306, !"_entry_ptr", i1 false, i1 false}
!309 = !{ptr @.str.123, !310, !"<string literal>", i1 false, i1 false}
!310 = !{!"../kernel/locking/lockdep.c", i32 6532, i32 2}
!311 = !{ptr @lockdep_rcu_suspicious._entry.122, !310, !"_entry", i1 false, i1 false}
!312 = !{ptr @lockdep_rcu_suspicious._entry_ptr.124, !310, !"_entry_ptr", i1 false, i1 false}
!313 = !{ptr @.str.126, !314, !"<string literal>", i1 false, i1 false}
!314 = !{!"../kernel/locking/lockdep.c", i32 6533, i32 2}
!315 = !{ptr @lockdep_rcu_suspicious._entry.125, !314, !"_entry", i1 false, i1 false}
!316 = !{ptr @lockdep_rcu_suspicious._entry_ptr.127, !314, !"_entry_ptr", i1 false, i1 false}
!317 = !{ptr @.str.128, !314, !"<string literal>", i1 false, i1 false}
!318 = !{ptr @.str.129, !314, !"<string literal>", i1 false, i1 false}
!319 = !{ptr @.str.131, !320, !"<string literal>", i1 false, i1 false}
!320 = !{!"../kernel/locking/lockdep.c", i32 6559, i32 3}
!321 = !{ptr @lockdep_rcu_suspicious._entry.130, !320, !"_entry", i1 false, i1 false}
!322 = !{ptr @lockdep_rcu_suspicious._entry_ptr.132, !320, !"_entry_ptr", i1 false, i1 false}
!323 = !{ptr @.str.134, !324, !"<string literal>", i1 false, i1 false}
!324 = !{!"../kernel/locking/lockdep.c", i32 6562, i32 2}
!325 = !{ptr @lockdep_rcu_suspicious._entry.133, !324, !"_entry", i1 false, i1 false}
!326 = !{ptr @lockdep_rcu_suspicious._entry_ptr.135, !324, !"_entry_ptr", i1 false, i1 false}
!327 = !{ptr @__ksymtab_lockdep_rcu_suspicious, !328, !"__ksymtab_lockdep_rcu_suspicious", i1 false, i1 false}
!328 = !{!"../kernel/locking/lockdep.c", i32 6565, i32 1}
!329 = !{ptr @__pcpu_scope_lockdep_recursion, !330, !"__pcpu_scope_lockdep_recursion", i1 false, i1 false}
!330 = !{!"../kernel/locking/lockdep.c", i32 80, i32 1}
!331 = !{ptr @__pcpu_unique_lockdep_recursion, !330, !"__pcpu_unique_lockdep_recursion", i1 false, i1 false}
!332 = !{ptr @lockdep_recursion, !330, !"lockdep_recursion", i1 false, i1 false}
!333 = !{ptr @lockdep_selftest_task_struct, !334, !"lockdep_selftest_task_struct", i1 false, i1 false}
!334 = !{!"../kernel/locking/lockdep.c", i32 134, i32 28}
!335 = !{ptr @nr_list_entries, !336, !"nr_list_entries", i1 false, i1 false}
!336 = !{!"../kernel/locking/lockdep.c", i32 171, i32 15}
!337 = !{ptr @nr_lock_classes, !338, !"nr_lock_classes", i1 false, i1 false}
!338 = !{!"../kernel/locking/lockdep.c", i32 184, i32 15}
!339 = !{ptr @nr_zapped_classes, !340, !"nr_zapped_classes", i1 false, i1 false}
!340 = !{!"../kernel/locking/lockdep.c", i32 185, i32 15}
!341 = !{ptr @lock_classes, !342, !"lock_classes", i1 false, i1 false}
!342 = !{!"../kernel/locking/lockdep.c", i32 189, i32 19}
!343 = !{ptr @__pcpu_unique_cpu_lock_stats, !344, !"__pcpu_unique_cpu_lock_stats", i1 false, i1 false}
!344 = !{!"../kernel/locking/lockdep.c", i32 215, i32 8}
!345 = !{ptr @cpu_lock_stats, !344, !"cpu_lock_stats", i1 false, i1 false}
!346 = !{ptr @chainhash_table, !347, !"chainhash_table", i1 false, i1 false}
!347 = !{!"../kernel/locking/lockdep.c", i32 392, i32 26}
!348 = !{ptr @nr_stack_trace_entries, !349, !"nr_stack_trace_entries", i1 false, i1 false}
!349 = !{!"../kernel/locking/lockdep.c", i32 499, i32 15}
!350 = !{ptr @stack_trace_hash, !351, !"stack_trace_hash", i1 false, i1 false}
!351 = !{!"../kernel/locking/lockdep.c", i32 521, i32 26}
!352 = !{ptr @nr_hardirq_chains, !353, !"nr_hardirq_chains", i1 false, i1 false}
!353 = !{!"../kernel/locking/lockdep.c", i32 599, i32 14}
!354 = !{ptr @nr_softirq_chains, !355, !"nr_softirq_chains", i1 false, i1 false}
!355 = !{!"../kernel/locking/lockdep.c", i32 600, i32 14}
!356 = !{ptr @nr_process_chains, !357, !"nr_process_chains", i1 false, i1 false}
!357 = !{!"../kernel/locking/lockdep.c", i32 601, i32 14}
!358 = !{ptr @max_lockdep_depth, !359, !"max_lockdep_depth", i1 false, i1 false}
!359 = !{!"../kernel/locking/lockdep.c", i32 602, i32 14}
!360 = !{ptr @__pcpu_scope_lockdep_stats, !361, !"__pcpu_scope_lockdep_stats", i1 false, i1 false}
!361 = !{!"../kernel/locking/lockdep.c", i32 608, i32 1}
!362 = !{ptr @__pcpu_unique_lockdep_stats, !361, !"__pcpu_unique_lockdep_stats", i1 false, i1 false}
!363 = !{ptr @lockdep_stats, !361, !"lockdep_stats", i1 false, i1 false}
!364 = !{ptr @chain_hlocks, !365, !"chain_hlocks", i1 false, i1 false}
!365 = !{!"../kernel/locking/lockdep.c", i32 3230, i32 12}
!366 = !{ptr @max_bfs_queue_depth, !367, !"max_bfs_queue_depth", i1 false, i1 false}
!367 = !{!"../kernel/locking/lockdep.c", i32 1431, i32 14}
!368 = !{ptr @lock_chains, !369, !"lock_chains", i1 false, i1 false}
!369 = !{!"../kernel/locking/lockdep.c", i32 3228, i32 19}
!370 = !{ptr @lock_chains_in_use, !371, !"lock_chains_in_use", i1 false, i1 false}
!371 = !{!"../kernel/locking/lockdep.c", i32 3229, i32 8}
!372 = !{ptr @nr_zapped_lock_chains, !373, !"nr_zapped_lock_chains", i1 false, i1 false}
!373 = !{!"../kernel/locking/lockdep.c", i32 3231, i32 15}
!374 = !{ptr @nr_free_chain_hlocks, !375, !"nr_free_chain_hlocks", i1 false, i1 false}
!375 = !{!"../kernel/locking/lockdep.c", i32 3232, i32 14}
!376 = !{ptr @nr_lost_chain_hlocks, !377, !"nr_lost_chain_hlocks", i1 false, i1 false}
!377 = !{!"../kernel/locking/lockdep.c", i32 3233, i32 14}
!378 = !{ptr @nr_large_chain_blocks, !379, !"nr_large_chain_blocks", i1 false, i1 false}
!379 = !{!"../kernel/locking/lockdep.c", i32 3234, i32 14}
!380 = !{ptr @__lockdep_no_validate__, !381, !"__lockdep_no_validate__", i1 false, i1 false}
!381 = !{!"../kernel/locking/lockdep.c", i32 4836, i32 23}
!382 = !{ptr @__tpstrtab_lock_acquire, !1, !"__tpstrtab_lock_acquire", i1 false, i1 false}
!383 = !{ptr @__tpstrtab_lock_release, !5, !"__tpstrtab_lock_release", i1 false, i1 false}
!384 = !{ptr @__tpstrtab_lock_contended, !9, !"__tpstrtab_lock_contended", i1 false, i1 false}
!385 = !{ptr @__tpstrtab_lock_acquired, !13, !"__tpstrtab_lock_acquired", i1 false, i1 false}
!386 = !{ptr @str__lock__trace_system_name, !387, !"str__lock__trace_system_name", i1 false, i1 false}
!387 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!388 = !{ptr @.str.136, !1, !"<string literal>", i1 false, i1 false}
!389 = !{ptr @.str.137, !1, !"<string literal>", i1 false, i1 false}
!390 = !{ptr @.str.138, !1, !"<string literal>", i1 false, i1 false}
!391 = !{ptr @.str.139, !1, !"<string literal>", i1 false, i1 false}
!392 = !{ptr @.str.140, !1, !"<string literal>", i1 false, i1 false}
!393 = !{ptr @.str.141, !1, !"<string literal>", i1 false, i1 false}
!394 = !{ptr @.str.142, !1, !"<string literal>", i1 false, i1 false}
!395 = !{ptr @trace_event_fields_lock_acquire, !1, !"trace_event_fields_lock_acquire", i1 false, i1 false}
!396 = !{ptr @trace_event_type_funcs_lock_acquire, !1, !"trace_event_type_funcs_lock_acquire", i1 false, i1 false}
!397 = !{ptr @.str.143, !1, !"<string literal>", i1 false, i1 false}
!398 = !{ptr @.str.144, !1, !"<string literal>", i1 false, i1 false}
!399 = !{ptr @.str.145, !1, !"<string literal>", i1 false, i1 false}
!400 = !{ptr @print_fmt_lock_acquire, !1, !"print_fmt_lock_acquire", i1 false, i1 false}
!401 = !{ptr @trace_event_fields_lock, !20, !"trace_event_fields_lock", i1 false, i1 false}
!402 = !{ptr @trace_event_type_funcs_lock, !20, !"trace_event_type_funcs_lock", i1 false, i1 false}
!403 = !{ptr @.str.146, !20, !"<string literal>", i1 false, i1 false}
!404 = !{ptr @print_fmt_lock, !20, !"print_fmt_lock", i1 false, i1 false}
!405 = !{ptr @__param_str_prove_locking, !34, !"__param_str_prove_locking", i1 false, i1 false}
!406 = !{ptr @__param_str_lock_stat, !39, !"__param_str_lock_stat", i1 false, i1 false}
!407 = !{ptr @__param_str_check_consistency, !48, !"__param_str_check_consistency", i1 false, i1 false}
!408 = !{ptr @lock_keys_hash, !409, !"lock_keys_hash", i1 false, i1 false}
!409 = !{!"../kernel/locking/lockdep.c", i32 183, i32 26}
!410 = !{ptr @__lock, !411, !"__lock", i1 false, i1 false}
!411 = !{!"../kernel/locking/lockdep.c", i32 105, i32 24}
!412 = !{ptr @__owner, !413, !"__owner", i1 false, i1 false}
!413 = !{!"../kernel/locking/lockdep.c", i32 106, i32 28}
!414 = distinct !{null, !415, !"__warned", i1 false, i1 false}
!415 = !{!"../kernel/locking/lockdep.c", i32 1770, i32 3}
!416 = !{ptr @lock_cq, !417, !"lock_cq", i1 false, i1 false}
!417 = !{!"../kernel/locking/lockdep.c", i32 1429, i32 30}
!418 = !{ptr @.str.147, !419, !"<string literal>", i1 false, i1 false}
!419 = !{!"../kernel/locking/lockdep.c", i32 131, i32 9}
!420 = !{ptr @lockdep_dependency_gen_id, !421, !"lockdep_dependency_gen_id", i1 false, i1 false}
!421 = !{!"../kernel/locking/lockdep.c", i32 1433, i32 21}
!422 = !{ptr @.str.148, !423, !"<string literal>", i1 false, i1 false}
!423 = !{!"../kernel/locking/lockdep.c", i32 2298, i32 2}
!424 = !{ptr @.str.149, !423, !"<string literal>", i1 false, i1 false}
!425 = !{ptr @print_lock_class_header._entry, !423, !"_entry", i1 false, i1 false}
!426 = !{ptr @print_lock_class_header._entry_ptr, !423, !"_entry_ptr", i1 false, i1 false}
!427 = !{ptr @.str.151, !428, !"<string literal>", i1 false, i1 false}
!428 = !{!"../kernel/locking/lockdep.c", i32 2301, i32 2}
!429 = !{ptr @print_lock_class_header._entry.150, !428, !"_entry", i1 false, i1 false}
!430 = !{ptr @print_lock_class_header._entry_ptr.152, !428, !"_entry_ptr", i1 false, i1 false}
!431 = !{ptr @.str.154, !432, !"<string literal>", i1 false, i1 false}
!432 = !{!"../kernel/locking/lockdep.c", i32 2303, i32 2}
!433 = !{ptr @print_lock_class_header._entry.153, !432, !"_entry", i1 false, i1 false}
!434 = !{ptr @print_lock_class_header._entry_ptr.155, !432, !"_entry_ptr", i1 false, i1 false}
!435 = !{ptr @.str.157, !436, !"<string literal>", i1 false, i1 false}
!436 = !{!"../kernel/locking/lockdep.c", i32 2309, i32 11}
!437 = !{ptr @print_lock_class_header._entry.156, !436, !"_entry", i1 false, i1 false}
!438 = !{ptr @print_lock_class_header._entry_ptr.158, !436, !"_entry_ptr", i1 false, i1 false}
!439 = !{ptr @.str.160, !440, !"<string literal>", i1 false, i1 false}
!440 = !{!"../kernel/locking/lockdep.c", i32 2310, i32 11}
!441 = !{ptr @print_lock_class_header._entry.159, !440, !"_entry", i1 false, i1 false}
!442 = !{ptr @print_lock_class_header._entry_ptr.161, !440, !"_entry_ptr", i1 false, i1 false}
!443 = !{ptr @.str.163, !444, !"<string literal>", i1 false, i1 false}
!444 = !{!"../kernel/locking/lockdep.c", i32 2314, i32 2}
!445 = !{ptr @print_lock_class_header._entry.162, !444, !"_entry", i1 false, i1 false}
!446 = !{ptr @print_lock_class_header._entry_ptr.164, !444, !"_entry_ptr", i1 false, i1 false}
!447 = !{ptr @.str.166, !448, !"<string literal>", i1 false, i1 false}
!448 = !{!"../kernel/locking/lockdep.c", i32 2316, i32 2}
!449 = !{ptr @print_lock_class_header._entry.165, !448, !"_entry", i1 false, i1 false}
!450 = !{ptr @print_lock_class_header._entry_ptr.167, !448, !"_entry_ptr", i1 false, i1 false}
!451 = !{ptr @.str.168, !452, !"<string literal>", i1 false, i1 false}
!452 = !{!"../kernel/locking/lockdep.c", i32 707, i32 2}
!453 = !{ptr @.str.169, !452, !"<string literal>", i1 false, i1 false}
!454 = !{ptr @print_lock_name._entry, !452, !"_entry", i1 false, i1 false}
!455 = !{ptr @print_lock_name._entry_ptr, !452, !"_entry_ptr", i1 false, i1 false}
!456 = !{ptr @.str.171, !457, !"<string literal>", i1 false, i1 false}
!457 = !{!"../kernel/locking/lockdep.c", i32 709, i32 2}
!458 = !{ptr @print_lock_name._entry.170, !457, !"_entry", i1 false, i1 false}
!459 = !{ptr @print_lock_name._entry_ptr.172, !457, !"_entry_ptr", i1 false, i1 false}
!460 = !{ptr @.str.173, !461, !"<string literal>", i1 false, i1 false}
!461 = !{!"../kernel/locking/lockdep.c", i32 691, i32 3}
!462 = !{ptr @.str.174, !461, !"<string literal>", i1 false, i1 false}
!463 = !{ptr @__print_lock_name._entry, !461, !"_entry", i1 false, i1 false}
!464 = !{ptr @__print_lock_name._entry_ptr, !461, !"_entry_ptr", i1 false, i1 false}
!465 = !{ptr @__print_lock_name._entry.175, !466, !"_entry", i1 false, i1 false}
!466 = !{!"../kernel/locking/lockdep.c", i32 693, i32 3}
!467 = !{ptr @__print_lock_name._entry_ptr.176, !466, !"_entry_ptr", i1 false, i1 false}
!468 = !{ptr @.str.178, !469, !"<string literal>", i1 false, i1 false}
!469 = !{!"../kernel/locking/lockdep.c", i32 695, i32 4}
!470 = !{ptr @__print_lock_name._entry.177, !469, !"_entry", i1 false, i1 false}
!471 = !{ptr @__print_lock_name._entry_ptr.179, !469, !"_entry_ptr", i1 false, i1 false}
!472 = !{ptr @.str.181, !473, !"<string literal>", i1 false, i1 false}
!473 = !{!"../kernel/locking/lockdep.c", i32 697, i32 4}
!474 = !{ptr @__print_lock_name._entry.180, !473, !"_entry", i1 false, i1 false}
!475 = !{ptr @__print_lock_name._entry_ptr.182, !473, !"_entry_ptr", i1 false, i1 false}
!476 = !{ptr @.str.183, !477, !"<string literal>", i1 false, i1 false}
!477 = !{!"../kernel/locking/lockdep_states.h", i32 7, i32 1}
!478 = !{ptr @.str.184, !477, !"<string literal>", i1 false, i1 false}
!479 = !{ptr @.str.185, !477, !"<string literal>", i1 false, i1 false}
!480 = !{ptr @.str.186, !477, !"<string literal>", i1 false, i1 false}
!481 = !{ptr @.str.187, !482, !"<string literal>", i1 false, i1 false}
!482 = !{!"../kernel/locking/lockdep_states.h", i32 8, i32 1}
!483 = !{ptr @.str.188, !482, !"<string literal>", i1 false, i1 false}
!484 = !{ptr @.str.189, !482, !"<string literal>", i1 false, i1 false}
!485 = !{ptr @.str.190, !482, !"<string literal>", i1 false, i1 false}
!486 = !{ptr @.str.191, !487, !"<string literal>", i1 false, i1 false}
!487 = !{!"../kernel/locking/lockdep.c", i32 627, i32 16}
!488 = !{ptr @.str.192, !489, !"<string literal>", i1 false, i1 false}
!489 = !{!"../kernel/locking/lockdep.c", i32 628, i32 21}
!490 = !{ptr @.str.193, !491, !"<string literal>", i1 false, i1 false}
!491 = !{!"../kernel/locking/lockdep.c", i32 630, i32 24}
!492 = !{ptr @usage_str, !493, !"usage_str", i1 false, i1 false}
!493 = !{!"../kernel/locking/lockdep.c", i32 622, i32 20}
!494 = distinct !{null, !495, !"__already_done", i1 false, i1 false}
!495 = !{!"../kernel/locking/lockdep.c", i32 438, i32 6}
!496 = distinct !{null, !495, !"<string literal>", i1 false, i1 false}
!497 = distinct !{null, !498, !"__already_done", i1 false, i1 false}
!498 = !{!"../kernel/locking/lockdep.c", i32 4595, i32 3}
!499 = !{ptr @.str.195, !500, !"<string literal>", i1 false, i1 false}
!500 = !{!"../kernel/locking/lockdep.c", i32 4617, i32 3}
!501 = !{ptr @.str.196, !500, !"<string literal>", i1 false, i1 false}
!502 = !{ptr @mark_lock._entry, !500, !"_entry", i1 false, i1 false}
!503 = !{ptr @mark_lock._entry_ptr, !500, !"_entry_ptr", i1 false, i1 false}
!504 = !{ptr @lock_classes_in_use, !505, !"lock_classes_in_use", i1 false, i1 false}
!505 = !{!"../kernel/locking/lockdep.c", i32 190, i32 8}
!506 = !{ptr @.str.197, !507, !"<string literal>", i1 false, i1 false}
!507 = !{!"../kernel/locking/lockdep.c", i32 548, i32 21}
!508 = !{ptr @stack_trace, !509, !"stack_trace", i1 false, i1 false}
!509 = !{!"../kernel/locking/lockdep.c", i32 520, i32 22}
!510 = !{ptr @.str.198, !511, !"<string literal>", i1 false, i1 false}
!511 = !{!"../kernel/locking/lockdep.c", i32 492, i32 2}
!512 = !{ptr @.str.199, !511, !"<string literal>", i1 false, i1 false}
!513 = !{ptr @print_lockdep_off._entry, !511, !"_entry", i1 false, i1 false}
!514 = !{ptr @print_lockdep_off._entry_ptr, !511, !"_entry_ptr", i1 false, i1 false}
!515 = !{ptr @.str.201, !516, !"<string literal>", i1 false, i1 false}
!516 = !{!"../kernel/locking/lockdep.c", i32 493, i32 2}
!517 = !{ptr @print_lockdep_off._entry.200, !516, !"_entry", i1 false, i1 false}
!518 = !{ptr @print_lockdep_off._entry_ptr.202, !516, !"_entry_ptr", i1 false, i1 false}
!519 = !{ptr @.str.204, !520, !"<string literal>", i1 false, i1 false}
!520 = !{!"../kernel/locking/lockdep.c", i32 495, i32 2}
!521 = !{ptr @print_lockdep_off._entry.203, !520, !"_entry", i1 false, i1 false}
!522 = !{ptr @print_lockdep_off._entry_ptr.205, !520, !"_entry_ptr", i1 false, i1 false}
!523 = !{ptr @.str.206, !524, !"<string literal>", i1 false, i1 false}
!524 = !{!"../kernel/locking/lockdep.c", i32 3906, i32 2}
!525 = !{ptr @print_usage_bug._entry, !524, !"_entry", i1 false, i1 false}
!526 = !{ptr @print_usage_bug._entry_ptr, !524, !"_entry_ptr", i1 false, i1 false}
!527 = !{ptr @.str.208, !528, !"<string literal>", i1 false, i1 false}
!528 = !{!"../kernel/locking/lockdep.c", i32 3907, i32 2}
!529 = !{ptr @print_usage_bug._entry.207, !528, !"_entry", i1 false, i1 false}
!530 = !{ptr @print_usage_bug._entry_ptr.209, !528, !"_entry_ptr", i1 false, i1 false}
!531 = !{ptr @.str.211, !532, !"<string literal>", i1 false, i1 false}
!532 = !{!"../kernel/locking/lockdep.c", i32 3908, i32 2}
!533 = !{ptr @print_usage_bug._entry.210, !532, !"_entry", i1 false, i1 false}
!534 = !{ptr @print_usage_bug._entry_ptr.212, !532, !"_entry_ptr", i1 false, i1 false}
!535 = !{ptr @.str.214, !536, !"<string literal>", i1 false, i1 false}
!536 = !{!"../kernel/locking/lockdep.c", i32 3910, i32 2}
!537 = !{ptr @print_usage_bug._entry.213, !536, !"_entry", i1 false, i1 false}
!538 = !{ptr @print_usage_bug._entry_ptr.215, !536, !"_entry_ptr", i1 false, i1 false}
!539 = !{ptr @.str.217, !540, !"<string literal>", i1 false, i1 false}
!540 = !{!"../kernel/locking/lockdep.c", i32 3912, i32 2}
!541 = !{ptr @print_usage_bug._entry.216, !540, !"_entry", i1 false, i1 false}
!542 = !{ptr @print_usage_bug._entry_ptr.218, !540, !"_entry_ptr", i1 false, i1 false}
!543 = !{ptr @.str.220, !544, !"<string literal>", i1 false, i1 false}
!544 = !{!"../kernel/locking/lockdep.c", i32 3915, i32 2}
!545 = !{ptr @print_usage_bug._entry.219, !544, !"_entry", i1 false, i1 false}
!546 = !{ptr @print_usage_bug._entry_ptr.221, !544, !"_entry_ptr", i1 false, i1 false}
!547 = !{ptr @.str.223, !548, !"<string literal>", i1 false, i1 false}
!548 = !{!"../kernel/locking/lockdep.c", i32 3923, i32 2}
!549 = !{ptr @print_usage_bug._entry.222, !548, !"_entry", i1 false, i1 false}
!550 = !{ptr @print_usage_bug._entry_ptr.224, !548, !"_entry_ptr", i1 false, i1 false}
!551 = !{ptr @.str.226, !552, !"<string literal>", i1 false, i1 false}
!552 = !{!"../kernel/locking/lockdep.c", i32 3927, i32 2}
!553 = !{ptr @print_usage_bug._entry.225, !552, !"_entry", i1 false, i1 false}
!554 = !{ptr @print_usage_bug._entry_ptr.227, !552, !"_entry_ptr", i1 false, i1 false}
!555 = !{ptr @print_usage_bug._entry.228, !556, !"_entry", i1 false, i1 false}
!556 = !{!"../kernel/locking/lockdep.c", i32 3932, i32 2}
!557 = !{ptr @print_usage_bug._entry_ptr.229, !556, !"_entry_ptr", i1 false, i1 false}
!558 = !{ptr @.str.230, !559, !"<string literal>", i1 false, i1 false}
!559 = !{!"../kernel/locking/lockdep.c", i32 3886, i32 2}
!560 = !{ptr @.str.231, !559, !"<string literal>", i1 false, i1 false}
!561 = !{ptr @print_usage_bug_scenario._entry, !559, !"_entry", i1 false, i1 false}
!562 = !{ptr @print_usage_bug_scenario._entry_ptr, !559, !"_entry_ptr", i1 false, i1 false}
!563 = !{ptr @.str.233, !564, !"<string literal>", i1 false, i1 false}
!564 = !{!"../kernel/locking/lockdep.c", i32 3887, i32 2}
!565 = !{ptr @print_usage_bug_scenario._entry.232, !564, !"_entry", i1 false, i1 false}
!566 = !{ptr @print_usage_bug_scenario._entry_ptr.234, !564, !"_entry_ptr", i1 false, i1 false}
!567 = !{ptr @.str.236, !568, !"<string literal>", i1 false, i1 false}
!568 = !{!"../kernel/locking/lockdep.c", i32 3888, i32 2}
!569 = !{ptr @print_usage_bug_scenario._entry.235, !568, !"_entry", i1 false, i1 false}
!570 = !{ptr @print_usage_bug_scenario._entry_ptr.237, !568, !"_entry_ptr", i1 false, i1 false}
!571 = !{ptr @.str.239, !572, !"<string literal>", i1 false, i1 false}
!572 = !{!"../kernel/locking/lockdep.c", i32 3889, i32 2}
!573 = !{ptr @print_usage_bug_scenario._entry.238, !572, !"_entry", i1 false, i1 false}
!574 = !{ptr @print_usage_bug_scenario._entry_ptr.240, !572, !"_entry_ptr", i1 false, i1 false}
!575 = !{ptr @.str.242, !576, !"<string literal>", i1 false, i1 false}
!576 = !{!"../kernel/locking/lockdep.c", i32 3891, i32 2}
!577 = !{ptr @print_usage_bug_scenario._entry.241, !576, !"_entry", i1 false, i1 false}
!578 = !{ptr @print_usage_bug_scenario._entry_ptr.243, !576, !"_entry_ptr", i1 false, i1 false}
!579 = !{ptr @.str.245, !580, !"<string literal>", i1 false, i1 false}
!580 = !{!"../kernel/locking/lockdep.c", i32 3892, i32 2}
!581 = !{ptr @print_usage_bug_scenario._entry.244, !580, !"_entry", i1 false, i1 false}
!582 = !{ptr @print_usage_bug_scenario._entry_ptr.246, !580, !"_entry_ptr", i1 false, i1 false}
!583 = !{ptr @.str.248, !584, !"<string literal>", i1 false, i1 false}
!584 = !{!"../kernel/locking/lockdep.c", i32 3893, i32 2}
!585 = !{ptr @print_usage_bug_scenario._entry.247, !584, !"_entry", i1 false, i1 false}
!586 = !{ptr @print_usage_bug_scenario._entry_ptr.249, !584, !"_entry_ptr", i1 false, i1 false}
!587 = !{ptr @print_usage_bug_scenario._entry.250, !588, !"_entry", i1 false, i1 false}
!588 = !{!"../kernel/locking/lockdep.c", i32 3895, i32 2}
!589 = !{ptr @print_usage_bug_scenario._entry_ptr.251, !588, !"_entry_ptr", i1 false, i1 false}
!590 = !{ptr @.str.253, !591, !"<string literal>", i1 false, i1 false}
!591 = !{!"../kernel/locking/lockdep.c", i32 3896, i32 2}
!592 = !{ptr @print_usage_bug_scenario._entry.252, !591, !"_entry", i1 false, i1 false}
!593 = !{ptr @print_usage_bug_scenario._entry_ptr.254, !591, !"_entry_ptr", i1 false, i1 false}
!594 = distinct !{null, !595, !"__already_done", i1 false, i1 false}
!595 = !{!"../kernel/locking/lockdep.c", i32 2287, i32 2}
!596 = !{ptr @.str.255, !597, !"<string literal>", i1 false, i1 false}
!597 = !{!"../kernel/locking/lockdep.c", i32 2248, i32 7}
!598 = !{ptr @.str.256, !599, !"<string literal>", i1 false, i1 false}
!599 = !{!"../kernel/locking/lockdep.c", i32 2032, i32 2}
!600 = !{ptr @.str.257, !601, !"<string literal>", i1 false, i1 false}
!601 = !{!"../kernel/locking/lockdep.c", i32 3968, i32 2}
!602 = !{ptr @print_irq_inversion_bug._entry, !601, !"_entry", i1 false, i1 false}
!603 = !{ptr @print_irq_inversion_bug._entry_ptr, !601, !"_entry_ptr", i1 false, i1 false}
!604 = !{ptr @.str.259, !605, !"<string literal>", i1 false, i1 false}
!605 = !{!"../kernel/locking/lockdep.c", i32 3969, i32 2}
!606 = !{ptr @print_irq_inversion_bug._entry.258, !605, !"_entry", i1 false, i1 false}
!607 = !{ptr @print_irq_inversion_bug._entry_ptr.260, !605, !"_entry_ptr", i1 false, i1 false}
!608 = !{ptr @.str.262, !609, !"<string literal>", i1 false, i1 false}
!609 = !{!"../kernel/locking/lockdep.c", i32 3970, i32 2}
!610 = !{ptr @print_irq_inversion_bug._entry.261, !609, !"_entry", i1 false, i1 false}
!611 = !{ptr @print_irq_inversion_bug._entry_ptr.263, !609, !"_entry_ptr", i1 false, i1 false}
!612 = !{ptr @.str.265, !613, !"<string literal>", i1 false, i1 false}
!613 = !{!"../kernel/locking/lockdep.c", i32 3972, i32 2}
!614 = !{ptr @print_irq_inversion_bug._entry.264, !613, !"_entry", i1 false, i1 false}
!615 = !{ptr @print_irq_inversion_bug._entry_ptr.266, !613, !"_entry_ptr", i1 false, i1 false}
!616 = !{ptr @.str.268, !617, !"<string literal>", i1 false, i1 false}
!617 = !{!"../kernel/locking/lockdep.c", i32 3973, i32 2}
!618 = !{ptr @print_irq_inversion_bug._entry.267, !617, !"_entry", i1 false, i1 false}
!619 = !{ptr @print_irq_inversion_bug._entry_ptr.269, !617, !"_entry_ptr", i1 false, i1 false}
!620 = !{ptr @.str.271, !621, !"<string literal>", i1 false, i1 false}
!621 = !{!"../kernel/locking/lockdep.c", i32 3977, i32 3}
!622 = !{ptr @print_irq_inversion_bug._entry.270, !621, !"_entry", i1 false, i1 false}
!623 = !{ptr @print_irq_inversion_bug._entry_ptr.272, !621, !"_entry_ptr", i1 false, i1 false}
!624 = !{ptr @.str.274, !625, !"<string literal>", i1 false, i1 false}
!625 = !{!"../kernel/locking/lockdep.c", i32 3979, i32 3}
!626 = !{ptr @print_irq_inversion_bug._entry.273, !625, !"_entry", i1 false, i1 false}
!627 = !{ptr @print_irq_inversion_bug._entry_ptr.275, !625, !"_entry_ptr", i1 false, i1 false}
!628 = !{ptr @.str.277, !629, !"<string literal>", i1 false, i1 false}
!629 = !{!"../kernel/locking/lockdep.c", i32 3981, i32 2}
!630 = !{ptr @print_irq_inversion_bug._entry.276, !629, !"_entry", i1 false, i1 false}
!631 = !{ptr @print_irq_inversion_bug._entry_ptr.278, !629, !"_entry_ptr", i1 false, i1 false}
!632 = !{ptr @print_irq_inversion_bug._entry.279, !633, !"_entry", i1 false, i1 false}
!633 = !{!"../kernel/locking/lockdep.c", i32 3983, i32 2}
!634 = !{ptr @print_irq_inversion_bug._entry_ptr.280, !633, !"_entry_ptr", i1 false, i1 false}
!635 = !{ptr @.str.282, !636, !"<string literal>", i1 false, i1 false}
!636 = !{!"../kernel/locking/lockdep.c", i32 3989, i32 4}
!637 = !{ptr @print_irq_inversion_bug._entry.281, !636, !"_entry", i1 false, i1 false}
!638 = !{ptr @print_irq_inversion_bug._entry_ptr.283, !636, !"_entry_ptr", i1 false, i1 false}
!639 = !{ptr @.str.285, !640, !"<string literal>", i1 false, i1 false}
!640 = !{!"../kernel/locking/lockdep.c", i32 4005, i32 2}
!641 = !{ptr @print_irq_inversion_bug._entry.284, !640, !"_entry", i1 false, i1 false}
!642 = !{ptr @print_irq_inversion_bug._entry_ptr.286, !640, !"_entry_ptr", i1 false, i1 false}
!643 = !{ptr @print_irq_inversion_bug._entry.287, !644, !"_entry", i1 false, i1 false}
!644 = !{!"../kernel/locking/lockdep.c", i32 4011, i32 2}
!645 = !{ptr @print_irq_inversion_bug._entry_ptr.288, !644, !"_entry_ptr", i1 false, i1 false}
!646 = !{ptr @.str.289, !647, !"<string literal>", i1 false, i1 false}
!647 = !{!"../kernel/locking/lockdep.c", i32 2480, i32 3}
!648 = !{ptr @.str.290, !647, !"<string literal>", i1 false, i1 false}
!649 = !{ptr @print_irq_lock_scenario._entry, !647, !"_entry", i1 false, i1 false}
!650 = !{ptr @print_irq_lock_scenario._entry_ptr, !647, !"_entry_ptr", i1 false, i1 false}
!651 = !{ptr @.str.292, !652, !"<string literal>", i1 false, i1 false}
!652 = !{!"../kernel/locking/lockdep.c", i32 2482, i32 3}
!653 = !{ptr @print_irq_lock_scenario._entry.291, !652, !"_entry", i1 false, i1 false}
!654 = !{ptr @print_irq_lock_scenario._entry_ptr.293, !652, !"_entry_ptr", i1 false, i1 false}
!655 = !{ptr @print_irq_lock_scenario._entry.294, !656, !"_entry", i1 false, i1 false}
!656 = !{!"../kernel/locking/lockdep.c", i32 2484, i32 3}
!657 = !{ptr @print_irq_lock_scenario._entry_ptr.295, !656, !"_entry_ptr", i1 false, i1 false}
!658 = !{ptr @.str.297, !659, !"<string literal>", i1 false, i1 false}
!659 = !{!"../kernel/locking/lockdep.c", i32 2486, i32 3}
!660 = !{ptr @print_irq_lock_scenario._entry.296, !659, !"_entry", i1 false, i1 false}
!661 = !{ptr @print_irq_lock_scenario._entry_ptr.298, !659, !"_entry_ptr", i1 false, i1 false}
!662 = !{ptr @.str.300, !663, !"<string literal>", i1 false, i1 false}
!663 = !{!"../kernel/locking/lockdep.c", i32 2489, i32 2}
!664 = !{ptr @print_irq_lock_scenario._entry.299, !663, !"_entry", i1 false, i1 false}
!665 = !{ptr @print_irq_lock_scenario._entry_ptr.301, !663, !"_entry_ptr", i1 false, i1 false}
!666 = !{ptr @.str.303, !667, !"<string literal>", i1 false, i1 false}
!667 = !{!"../kernel/locking/lockdep.c", i32 2490, i32 2}
!668 = !{ptr @print_irq_lock_scenario._entry.302, !667, !"_entry", i1 false, i1 false}
!669 = !{ptr @print_irq_lock_scenario._entry_ptr.304, !667, !"_entry_ptr", i1 false, i1 false}
!670 = !{ptr @.str.306, !671, !"<string literal>", i1 false, i1 false}
!671 = !{!"../kernel/locking/lockdep.c", i32 2491, i32 2}
!672 = !{ptr @print_irq_lock_scenario._entry.305, !671, !"_entry", i1 false, i1 false}
!673 = !{ptr @print_irq_lock_scenario._entry_ptr.307, !671, !"_entry_ptr", i1 false, i1 false}
!674 = !{ptr @print_irq_lock_scenario._entry.308, !675, !"_entry", i1 false, i1 false}
!675 = !{!"../kernel/locking/lockdep.c", i32 2492, i32 2}
!676 = !{ptr @print_irq_lock_scenario._entry_ptr.309, !675, !"_entry_ptr", i1 false, i1 false}
!677 = !{ptr @print_irq_lock_scenario._entry.310, !678, !"_entry", i1 false, i1 false}
!678 = !{!"../kernel/locking/lockdep.c", i32 2494, i32 2}
!679 = !{ptr @print_irq_lock_scenario._entry_ptr.311, !678, !"_entry_ptr", i1 false, i1 false}
!680 = !{ptr @.str.313, !681, !"<string literal>", i1 false, i1 false}
!681 = !{!"../kernel/locking/lockdep.c", i32 2495, i32 2}
!682 = !{ptr @print_irq_lock_scenario._entry.312, !681, !"_entry", i1 false, i1 false}
!683 = !{ptr @print_irq_lock_scenario._entry_ptr.314, !681, !"_entry_ptr", i1 false, i1 false}
!684 = !{ptr @.str.316, !685, !"<string literal>", i1 false, i1 false}
!685 = !{!"../kernel/locking/lockdep.c", i32 2496, i32 2}
!686 = !{ptr @print_irq_lock_scenario._entry.315, !685, !"_entry", i1 false, i1 false}
!687 = !{ptr @print_irq_lock_scenario._entry_ptr.317, !685, !"_entry_ptr", i1 false, i1 false}
!688 = !{ptr @print_irq_lock_scenario._entry.318, !689, !"_entry", i1 false, i1 false}
!689 = !{!"../kernel/locking/lockdep.c", i32 2498, i32 2}
!690 = !{ptr @print_irq_lock_scenario._entry_ptr.319, !689, !"_entry_ptr", i1 false, i1 false}
!691 = !{ptr @print_irq_lock_scenario._entry.320, !692, !"_entry", i1 false, i1 false}
!692 = !{!"../kernel/locking/lockdep.c", i32 2499, i32 2}
!693 = !{ptr @print_irq_lock_scenario._entry_ptr.321, !692, !"_entry_ptr", i1 false, i1 false}
!694 = !{ptr @print_irq_lock_scenario._entry.322, !695, !"_entry", i1 false, i1 false}
!695 = !{!"../kernel/locking/lockdep.c", i32 2501, i32 2}
!696 = !{ptr @print_irq_lock_scenario._entry_ptr.323, !695, !"_entry_ptr", i1 false, i1 false}
!697 = !{ptr @print_irq_lock_scenario._entry.324, !698, !"_entry", i1 false, i1 false}
!698 = !{!"../kernel/locking/lockdep.c", i32 2502, i32 2}
!699 = !{ptr @print_irq_lock_scenario._entry_ptr.325, !698, !"_entry_ptr", i1 false, i1 false}
!700 = !{ptr @print_irq_lock_scenario._entry.326, !701, !"_entry", i1 false, i1 false}
!701 = !{!"../kernel/locking/lockdep.c", i32 2503, i32 2}
!702 = !{ptr @print_irq_lock_scenario._entry_ptr.327, !701, !"_entry_ptr", i1 false, i1 false}
!703 = !{ptr @print_irq_lock_scenario._entry.328, !704, !"_entry", i1 false, i1 false}
!704 = !{!"../kernel/locking/lockdep.c", i32 2505, i32 2}
!705 = !{ptr @print_irq_lock_scenario._entry_ptr.329, !704, !"_entry_ptr", i1 false, i1 false}
!706 = !{ptr @print_irq_lock_scenario._entry.330, !707, !"_entry", i1 false, i1 false}
!707 = !{!"../kernel/locking/lockdep.c", i32 2506, i32 2}
!708 = !{ptr @print_irq_lock_scenario._entry_ptr.331, !707, !"_entry_ptr", i1 false, i1 false}
!709 = !{ptr @.str.332, !477, !"<string literal>", i1 false, i1 false}
!710 = !{ptr @.str.333, !482, !"<string literal>", i1 false, i1 false}
!711 = !{ptr @state_rnames, !712, !"state_rnames", i1 false, i1 false}
!712 = !{!"../kernel/locking/lockdep.c", i32 2587, i32 20}
!713 = !{ptr @.str.334, !477, !"<string literal>", i1 false, i1 false}
!714 = !{ptr @.str.335, !482, !"<string literal>", i1 false, i1 false}
!715 = !{ptr @state_names, !716, !"state_names", i1 false, i1 false}
!716 = !{!"../kernel/locking/lockdep.c", i32 2580, i32 20}
!717 = distinct !{null, !718, !"__already_done", i1 false, i1 false}
!718 = !{!"../kernel/locking/lockdep.c", i32 2270, i32 2}
!719 = !{ptr @state_verbose_f, !720, !"state_verbose_f", i1 false, i1 false}
!720 = !{!"../kernel/locking/lockdep.c", i32 4120, i32 14}
!721 = !{ptr @.str.336, !722, !"<string literal>", i1 false, i1 false}
!722 = !{!"../kernel/locking/lockdep.c", i32 741, i32 3}
!723 = !{ptr @.str.337, !722, !"<string literal>", i1 false, i1 false}
!724 = !{ptr @print_lock._entry, !722, !"_entry", i1 false, i1 false}
!725 = !{ptr @print_lock._entry_ptr, !722, !"_entry_ptr", i1 false, i1 false}
!726 = !{ptr @.str.339, !727, !"<string literal>", i1 false, i1 false}
!727 = !{!"../kernel/locking/lockdep.c", i32 745, i32 2}
!728 = !{ptr @print_lock._entry.338, !727, !"_entry", i1 false, i1 false}
!729 = !{ptr @print_lock._entry_ptr.340, !727, !"_entry_ptr", i1 false, i1 false}
!730 = !{ptr @.str.342, !731, !"<string literal>", i1 false, i1 false}
!731 = !{!"../kernel/locking/lockdep.c", i32 747, i32 2}
!732 = !{ptr @print_lock._entry.341, !731, !"_entry", i1 false, i1 false}
!733 = !{ptr @print_lock._entry_ptr.343, !731, !"_entry_ptr", i1 false, i1 false}
!734 = distinct !{null, !735, !"__already_done", i1 false, i1 false}
!735 = !{!"../kernel/locking/lockdep.c", i32 1219, i32 6}
!736 = distinct !{null, !737, !"__warned", i1 false, i1 false}
!737 = !{!"../kernel/locking/lockdep.c", i32 1233, i32 2}
!738 = distinct !{null, !739, !"__warned", i1 false, i1 false}
!739 = !{!"../kernel/locking/lockdep.c", i32 1279, i32 2}
!740 = !{ptr @.str.344, !741, !"<string literal>", i1 false, i1 false}
!741 = !{!"../kernel/locking/lockdep.c", i32 1294, i32 21}
!742 = distinct !{null, !743, !"__already_done", i1 false, i1 false}
!743 = !{!"../kernel/locking/lockdep.c", i32 1300, i32 2}
!744 = distinct !{null, !745, !"__already_done", i1 false, i1 false}
!745 = !{!"../kernel/locking/lockdep.c", i32 1304, i32 2}
!746 = distinct !{null, !747, !"__already_done", i1 false, i1 false}
!747 = !{!"../kernel/locking/lockdep.c", i32 1305, i32 2}
!748 = !{ptr @.str.347, !749, !"<string literal>", i1 false, i1 false}
!749 = !{!"../kernel/locking/lockdep.c", i32 1324, i32 3}
!750 = !{ptr @.str.348, !749, !"<string literal>", i1 false, i1 false}
!751 = !{ptr @register_lock_class._entry, !749, !"_entry", i1 false, i1 false}
!752 = !{ptr @register_lock_class._entry_ptr, !749, !"_entry_ptr", i1 false, i1 false}
!753 = !{ptr @register_lock_class._entry.349, !754, !"_entry", i1 false, i1 false}
!754 = !{!"../kernel/locking/lockdep.c", i32 1326, i32 4}
!755 = !{ptr @register_lock_class._entry_ptr.350, !754, !"_entry_ptr", i1 false, i1 false}
!756 = !{ptr @.str.352, !757, !"<string literal>", i1 false, i1 false}
!757 = !{!"../kernel/locking/lockdep.c", i32 1327, i32 3}
!758 = !{ptr @register_lock_class._entry.351, !757, !"_entry", i1 false, i1 false}
!759 = !{ptr @register_lock_class._entry_ptr.353, !757, !"_entry_ptr", i1 false, i1 false}
!760 = !{ptr @.str.354, !761, !"<string literal>", i1 false, i1 false}
!761 = !{!"../kernel/locking/lockdep.c", i32 1347, i32 6}
!762 = !{ptr @.str.355, !763, !"<string literal>", i1 false, i1 false}
!763 = !{!"../kernel/locking/lockdep.c", i32 868, i32 3}
!764 = !{ptr @.str.356, !763, !"<string literal>", i1 false, i1 false}
!765 = !{ptr @look_up_lock_class._entry, !763, !"_entry", i1 false, i1 false}
!766 = !{ptr @look_up_lock_class._entry_ptr, !763, !"_entry_ptr", i1 false, i1 false}
!767 = !{ptr @.str.358, !768, !"<string literal>", i1 false, i1 false}
!768 = !{!"../kernel/locking/lockdep.c", i32 870, i32 3}
!769 = !{ptr @look_up_lock_class._entry.357, !768, !"_entry", i1 false, i1 false}
!770 = !{ptr @look_up_lock_class._entry_ptr.359, !768, !"_entry_ptr", i1 false, i1 false}
!771 = distinct !{null, !772, !"__warned", i1 false, i1 false}
!772 = !{!"../kernel/locking/lockdep.c", i32 903, i32 2}
!773 = distinct !{null, !774, !"__already_done", i1 false, i1 false}
!774 = !{!"../kernel/locking/lockdep.c", i32 909, i32 4}
!775 = distinct !{null, !772, !"__warned", i1 false, i1 false}
!776 = !{ptr @.str.361, !777, !"<string literal>", i1 false, i1 false}
!777 = !{!"../kernel/locking/lockdep.c", i32 947, i32 3}
!778 = !{ptr @.str.362, !777, !"<string literal>", i1 false, i1 false}
!779 = !{ptr @assign_lock_key._entry, !777, !"_entry", i1 false, i1 false}
!780 = !{ptr @assign_lock_key._entry_ptr, !777, !"_entry_ptr", i1 false, i1 false}
!781 = !{ptr @.str.364, !782, !"<string literal>", i1 false, i1 false}
!782 = !{!"../kernel/locking/lockdep.c", i32 948, i32 3}
!783 = !{ptr @assign_lock_key._entry.363, !782, !"_entry", i1 false, i1 false}
!784 = !{ptr @assign_lock_key._entry_ptr.365, !782, !"_entry_ptr", i1 false, i1 false}
!785 = !{ptr @.str.367, !786, !"<string literal>", i1 false, i1 false}
!786 = !{!"../kernel/locking/lockdep.c", i32 949, i32 3}
!787 = !{ptr @assign_lock_key._entry.366, !786, !"_entry", i1 false, i1 false}
!788 = !{ptr @assign_lock_key._entry_ptr.368, !786, !"_entry_ptr", i1 false, i1 false}
!789 = !{ptr @assign_lock_key._entry.369, !790, !"_entry", i1 false, i1 false}
!790 = !{!"../kernel/locking/lockdep.c", i32 950, i32 3}
!791 = !{ptr @assign_lock_key._entry_ptr.370, !790, !"_entry_ptr", i1 false, i1 false}
!792 = !{ptr @classhash_table, !793, !"classhash_table", i1 false, i1 false}
!793 = !{!"../kernel/locking/lockdep.c", i32 381, i32 26}
!794 = !{ptr @free_lock_classes, !795, !"free_lock_classes", i1 false, i1 false}
!795 = !{!"../kernel/locking/lockdep.c", i32 342, i32 8}
!796 = !{ptr @.str.371, !797, !"<string literal>", i1 false, i1 false}
!797 = !{!"../kernel/locking/lockdep.c", i32 5479, i32 7}
!798 = !{ptr @.str.372, !799, !"<string literal>", i1 false, i1 false}
!799 = !{!"../kernel/locking/lockdep.c", i32 5480, i32 4}
!800 = !{ptr @.str.373, !799, !"<string literal>", i1 false, i1 false}
!801 = !{ptr @check_flags._entry, !799, !"_entry", i1 false, i1 false}
!802 = !{ptr @check_flags._entry_ptr, !799, !"_entry_ptr", i1 false, i1 false}
!803 = !{ptr @.str.374, !804, !"<string literal>", i1 false, i1 false}
!804 = !{!"../kernel/locking/lockdep.c", i32 5483, i32 7}
!805 = !{ptr @.str.376, !806, !"<string literal>", i1 false, i1 false}
!806 = !{!"../kernel/locking/lockdep.c", i32 5484, i32 4}
!807 = !{ptr @check_flags._entry.375, !806, !"_entry", i1 false, i1 false}
!808 = !{ptr @check_flags._entry_ptr.377, !806, !"_entry_ptr", i1 false, i1 false}
!809 = !{ptr @.str.378, !810, !"<string literal>", i1 false, i1 false}
!810 = !{!"../kernel/locking/lockdep.c", i32 5497, i32 4}
!811 = !{ptr @.str.379, !812, !"<string literal>", i1 false, i1 false}
!812 = !{!"../kernel/locking/lockdep.c", i32 5500, i32 4}
!813 = !{ptr @.str.380, !814, !"<string literal>", i1 false, i1 false}
!814 = !{!"../kernel/locking/lockdep.c", i32 5206, i32 6}
!815 = !{ptr @.str.381, !816, !"<string literal>", i1 false, i1 false}
!816 = !{!"../kernel/locking/lockdep.c", i32 5231, i32 6}
!817 = !{ptr @.str.382, !818, !"<string literal>", i1 false, i1 false}
!818 = !{!"../kernel/locking/lockdep.c", i32 5109, i32 7}
!819 = !{ptr @.str.383, !820, !"<string literal>", i1 false, i1 false}
!820 = !{!"../kernel/locking/lockdep.c", i32 5065, i32 2}
!821 = !{ptr @print_unlock_imbalance_bug._entry, !820, !"_entry", i1 false, i1 false}
!822 = !{ptr @print_unlock_imbalance_bug._entry_ptr, !820, !"_entry_ptr", i1 false, i1 false}
!823 = !{ptr @.str.385, !824, !"<string literal>", i1 false, i1 false}
!824 = !{!"../kernel/locking/lockdep.c", i32 5066, i32 2}
!825 = !{ptr @print_unlock_imbalance_bug._entry.384, !824, !"_entry", i1 false, i1 false}
!826 = !{ptr @print_unlock_imbalance_bug._entry_ptr.386, !824, !"_entry_ptr", i1 false, i1 false}
!827 = !{ptr @.str.388, !828, !"<string literal>", i1 false, i1 false}
!828 = !{!"../kernel/locking/lockdep.c", i32 5067, i32 2}
!829 = !{ptr @print_unlock_imbalance_bug._entry.387, !828, !"_entry", i1 false, i1 false}
!830 = !{ptr @print_unlock_imbalance_bug._entry_ptr.389, !828, !"_entry_ptr", i1 false, i1 false}
!831 = !{ptr @.str.391, !832, !"<string literal>", i1 false, i1 false}
!832 = !{!"../kernel/locking/lockdep.c", i32 5069, i32 2}
!833 = !{ptr @print_unlock_imbalance_bug._entry.390, !832, !"_entry", i1 false, i1 false}
!834 = !{ptr @print_unlock_imbalance_bug._entry_ptr.392, !832, !"_entry_ptr", i1 false, i1 false}
!835 = !{ptr @.str.394, !836, !"<string literal>", i1 false, i1 false}
!836 = !{!"../kernel/locking/lockdep.c", i32 5070, i32 2}
!837 = !{ptr @print_unlock_imbalance_bug._entry.393, !836, !"_entry", i1 false, i1 false}
!838 = !{ptr @print_unlock_imbalance_bug._entry_ptr.395, !836, !"_entry_ptr", i1 false, i1 false}
!839 = !{ptr @.str.397, !840, !"<string literal>", i1 false, i1 false}
!840 = !{!"../kernel/locking/lockdep.c", i32 5073, i32 2}
!841 = !{ptr @print_unlock_imbalance_bug._entry.396, !840, !"_entry", i1 false, i1 false}
!842 = !{ptr @print_unlock_imbalance_bug._entry_ptr.398, !840, !"_entry_ptr", i1 false, i1 false}
!843 = !{ptr @.str.399, !844, !"<string literal>", i1 false, i1 false}
!844 = !{!"../kernel/locking/lockdep.c", i32 5074, i32 15}
!845 = !{ptr @.str.401, !846, !"<string literal>", i1 false, i1 false}
!846 = !{!"../kernel/locking/lockdep.c", i32 5075, i32 2}
!847 = !{ptr @print_unlock_imbalance_bug._entry.400, !846, !"_entry", i1 false, i1 false}
!848 = !{ptr @print_unlock_imbalance_bug._entry_ptr.402, !846, !"_entry_ptr", i1 false, i1 false}
!849 = !{ptr @print_unlock_imbalance_bug._entry.403, !850, !"_entry", i1 false, i1 false}
!850 = !{!"../kernel/locking/lockdep.c", i32 5076, i32 2}
!851 = !{ptr @print_unlock_imbalance_bug._entry_ptr.404, !850, !"_entry_ptr", i1 false, i1 false}
!852 = !{ptr @print_unlock_imbalance_bug._entry.405, !853, !"_entry", i1 false, i1 false}
!853 = !{!"../kernel/locking/lockdep.c", i32 5079, i32 2}
!854 = !{ptr @print_unlock_imbalance_bug._entry_ptr.406, !853, !"_entry_ptr", i1 false, i1 false}
!855 = !{ptr @.str.407, !856, !"<string literal>", i1 false, i1 false}
!856 = !{!"../kernel/locking/lockdep.c", i32 723, i32 2}
!857 = !{ptr @print_lockdep_cache._entry, !856, !"_entry", i1 false, i1 false}
!858 = !{ptr @print_lockdep_cache._entry_ptr, !856, !"_entry_ptr", i1 false, i1 false}
!859 = !{ptr @.str.408, !860, !"<string literal>", i1 false, i1 false}
!860 = !{!"../include/linux/kallsyms.h", i32 170, i32 2}
!861 = !{ptr @.str.409, !860, !"<string literal>", i1 false, i1 false}
!862 = !{ptr @.str.410, !860, !"<string literal>", i1 false, i1 false}
!863 = !{ptr @print_ip_sym._entry, !860, !"_entry", i1 false, i1 false}
!864 = !{ptr @print_ip_sym._entry_ptr, !860, !"_entry_ptr", i1 false, i1 false}
!865 = !{ptr @.str.411, !866, !"<string literal>", i1 false, i1 false}
!866 = !{!"../kernel/locking/lockdep.c", i32 3844, i32 4}
!867 = !{ptr @.str.412, !868, !"<string literal>", i1 false, i1 false}
!868 = !{!"../kernel/locking/lockdep.c", i32 3855, i32 7}
!869 = !{ptr @.str.413, !870, !"<string literal>", i1 false, i1 false}
!870 = !{!"../kernel/locking/lockdep.c", i32 3870, i32 3}
!871 = !{ptr @.str.414, !872, !"<string literal>", i1 false, i1 false}
!872 = !{!"../kernel/locking/lockdep.c", i32 5263, i32 2}
!873 = !{ptr @.str.415, !874, !"<string literal>", i1 false, i1 false}
!874 = !{!"../kernel/locking/lockdep.c", i32 5271, i32 6}
!875 = !{ptr @.str.416, !876, !"<string literal>", i1 false, i1 false}
!876 = !{!"../kernel/locking/lockdep.c", i32 5278, i32 6}
!877 = distinct !{null, !1, !"__already_done", i1 false, i1 false}
!878 = !{ptr @.str.417, !1, !"<string literal>", i1 false, i1 false}
!879 = distinct !{null, !1, !"__warned", i1 false, i1 false}
!880 = !{ptr @.str.418, !1, !"<string literal>", i1 false, i1 false}
!881 = distinct !{null, !882, !"__already_done", i1 false, i1 false}
!882 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!883 = !{ptr @.str.419, !882, !"<string literal>", i1 false, i1 false}
!884 = !{ptr @.str.420, !885, !"<string literal>", i1 false, i1 false}
!885 = !{!"../kernel/locking/lockdep.c", i32 4914, i32 3}
!886 = !{ptr @.str.421, !885, !"<string literal>", i1 false, i1 false}
!887 = !{ptr @__lock_acquire._entry, !885, !"_entry", i1 false, i1 false}
!888 = !{ptr @__lock_acquire._entry_ptr, !885, !"_entry_ptr", i1 false, i1 false}
!889 = !{ptr @__lock_acquire._entry.422, !890, !"_entry", i1 false, i1 false}
!890 = !{!"../kernel/locking/lockdep.c", i32 4916, i32 4}
!891 = !{ptr @__lock_acquire._entry_ptr.423, !890, !"_entry_ptr", i1 false, i1 false}
!892 = !{ptr @__lock_acquire._entry.424, !893, !"_entry", i1 false, i1 false}
!893 = !{!"../kernel/locking/lockdep.c", i32 4917, i32 3}
!894 = !{ptr @__lock_acquire._entry_ptr.425, !893, !"_entry_ptr", i1 false, i1 false}
!895 = !{ptr @.str.426, !896, !"<string literal>", i1 false, i1 false}
!896 = !{!"../kernel/locking/lockdep.c", i32 4930, i32 6}
!897 = !{ptr @.str.427, !898, !"<string literal>", i1 false, i1 false}
!898 = !{!"../kernel/locking/lockdep.c", i32 4947, i32 8}
!899 = distinct !{null, !900, !"<string literal>", i1 false, i1 false}
!900 = !{!"../kernel/locking/lockdep.c", i32 4959, i32 6}
!901 = !{ptr @.str.429, !902, !"<string literal>", i1 false, i1 false}
!902 = !{!"../kernel/locking/lockdep.c", i32 4997, i32 6}
!903 = !{ptr @.str.430, !904, !"<string literal>", i1 false, i1 false}
!904 = !{!"../kernel/locking/lockdep.c", i32 5005, i32 7}
!905 = distinct !{null, !906, !"__already_done", i1 false, i1 false}
!906 = !{!"../kernel/locking/lockdep.c", i32 5023, i32 3}
!907 = distinct !{null, !908, !"__already_done", i1 false, i1 false}
!908 = !{!"../kernel/locking/lockdep.c", i32 5024, i32 3}
!909 = !{ptr @.str.432, !910, !"<string literal>", i1 false, i1 false}
!910 = !{!"../kernel/locking/lockdep.c", i32 5039, i32 21}
!911 = !{ptr @.str.434, !912, !"<string literal>", i1 false, i1 false}
!912 = !{!"../kernel/locking/lockdep.c", i32 5040, i32 3}
!913 = !{ptr @__lock_acquire._entry.433, !912, !"_entry", i1 false, i1 false}
!914 = !{ptr @__lock_acquire._entry_ptr.435, !912, !"_entry_ptr", i1 false, i1 false}
!915 = !{ptr @.str.436, !916, !"<string literal>", i1 false, i1 false}
!916 = !{!"../kernel/locking/lockdep.c", i32 4661, i32 2}
!917 = !{ptr @print_lock_invalid_wait_context._entry, !916, !"_entry", i1 false, i1 false}
!918 = !{ptr @print_lock_invalid_wait_context._entry_ptr, !916, !"_entry_ptr", i1 false, i1 false}
!919 = !{ptr @print_lock_invalid_wait_context._entry.437, !920, !"_entry", i1 false, i1 false}
!920 = !{!"../kernel/locking/lockdep.c", i32 4662, i32 2}
!921 = !{ptr @print_lock_invalid_wait_context._entry_ptr.438, !920, !"_entry_ptr", i1 false, i1 false}
!922 = !{ptr @.str.440, !923, !"<string literal>", i1 false, i1 false}
!923 = !{!"../kernel/locking/lockdep.c", i32 4663, i32 2}
!924 = !{ptr @print_lock_invalid_wait_context._entry.439, !923, !"_entry", i1 false, i1 false}
!925 = !{ptr @print_lock_invalid_wait_context._entry_ptr.441, !923, !"_entry_ptr", i1 false, i1 false}
!926 = !{ptr @print_lock_invalid_wait_context._entry.442, !927, !"_entry", i1 false, i1 false}
!927 = !{!"../kernel/locking/lockdep.c", i32 4665, i32 2}
!928 = !{ptr @print_lock_invalid_wait_context._entry_ptr.443, !927, !"_entry_ptr", i1 false, i1 false}
!929 = !{ptr @.str.445, !930, !"<string literal>", i1 false, i1 false}
!930 = !{!"../kernel/locking/lockdep.c", i32 4667, i32 2}
!931 = !{ptr @print_lock_invalid_wait_context._entry.444, !930, !"_entry", i1 false, i1 false}
!932 = !{ptr @print_lock_invalid_wait_context._entry_ptr.446, !930, !"_entry_ptr", i1 false, i1 false}
!933 = !{ptr @.str.448, !934, !"<string literal>", i1 false, i1 false}
!934 = !{!"../kernel/locking/lockdep.c", i32 4670, i32 2}
!935 = !{ptr @print_lock_invalid_wait_context._entry.447, !934, !"_entry", i1 false, i1 false}
!936 = !{ptr @print_lock_invalid_wait_context._entry_ptr.449, !934, !"_entry_ptr", i1 false, i1 false}
!937 = !{ptr @.str.451, !938, !"<string literal>", i1 false, i1 false}
!938 = !{!"../kernel/locking/lockdep.c", i32 4673, i32 2}
!939 = !{ptr @print_lock_invalid_wait_context._entry.450, !938, !"_entry", i1 false, i1 false}
!940 = !{ptr @print_lock_invalid_wait_context._entry_ptr.452, !938, !"_entry_ptr", i1 false, i1 false}
!941 = !{ptr @.str.454, !942, !"<string literal>", i1 false, i1 false}
!942 = !{!"../kernel/locking/lockdep.c", i32 4677, i32 2}
!943 = !{ptr @print_lock_invalid_wait_context._entry.453, !942, !"_entry", i1 false, i1 false}
!944 = !{ptr @print_lock_invalid_wait_context._entry_ptr.455, !942, !"_entry_ptr", i1 false, i1 false}
!945 = !{ptr @.str.456, !946, !"<string literal>", i1 false, i1 false}
!946 = !{!"../kernel/locking/lockdep.c", i32 4849, i32 2}
!947 = !{ptr @print_lock_nested_lock_not_held._entry, !946, !"_entry", i1 false, i1 false}
!948 = !{ptr @print_lock_nested_lock_not_held._entry_ptr, !946, !"_entry_ptr", i1 false, i1 false}
!949 = !{ptr @.str.458, !950, !"<string literal>", i1 false, i1 false}
!950 = !{!"../kernel/locking/lockdep.c", i32 4850, i32 2}
!951 = !{ptr @print_lock_nested_lock_not_held._entry.457, !950, !"_entry", i1 false, i1 false}
!952 = !{ptr @print_lock_nested_lock_not_held._entry_ptr.459, !950, !"_entry_ptr", i1 false, i1 false}
!953 = !{ptr @.str.461, !954, !"<string literal>", i1 false, i1 false}
!954 = !{!"../kernel/locking/lockdep.c", i32 4851, i32 2}
!955 = !{ptr @print_lock_nested_lock_not_held._entry.460, !954, !"_entry", i1 false, i1 false}
!956 = !{ptr @print_lock_nested_lock_not_held._entry_ptr.462, !954, !"_entry_ptr", i1 false, i1 false}
!957 = !{ptr @.str.464, !958, !"<string literal>", i1 false, i1 false}
!958 = !{!"../kernel/locking/lockdep.c", i32 4853, i32 2}
!959 = !{ptr @print_lock_nested_lock_not_held._entry.463, !958, !"_entry", i1 false, i1 false}
!960 = !{ptr @print_lock_nested_lock_not_held._entry_ptr.465, !958, !"_entry_ptr", i1 false, i1 false}
!961 = !{ptr @print_lock_nested_lock_not_held._entry.466, !962, !"_entry", i1 false, i1 false}
!962 = !{!"../kernel/locking/lockdep.c", i32 4855, i32 2}
!963 = !{ptr @print_lock_nested_lock_not_held._entry_ptr.467, !962, !"_entry_ptr", i1 false, i1 false}
!964 = !{ptr @.str.469, !965, !"<string literal>", i1 false, i1 false}
!965 = !{!"../kernel/locking/lockdep.c", i32 4858, i32 2}
!966 = !{ptr @print_lock_nested_lock_not_held._entry.468, !965, !"_entry", i1 false, i1 false}
!967 = !{ptr @print_lock_nested_lock_not_held._entry_ptr.470, !965, !"_entry_ptr", i1 false, i1 false}
!968 = !{ptr @.str.472, !969, !"<string literal>", i1 false, i1 false}
!969 = !{!"../kernel/locking/lockdep.c", i32 4859, i32 2}
!970 = !{ptr @print_lock_nested_lock_not_held._entry.471, !969, !"_entry", i1 false, i1 false}
!971 = !{ptr @print_lock_nested_lock_not_held._entry_ptr.473, !969, !"_entry_ptr", i1 false, i1 false}
!972 = !{ptr @print_lock_nested_lock_not_held._entry.474, !973, !"_entry", i1 false, i1 false}
!973 = !{!"../kernel/locking/lockdep.c", i32 4861, i32 2}
!974 = !{ptr @print_lock_nested_lock_not_held._entry_ptr.475, !973, !"_entry_ptr", i1 false, i1 false}
!975 = !{ptr @print_lock_nested_lock_not_held._entry.476, !976, !"_entry", i1 false, i1 false}
!976 = !{!"../kernel/locking/lockdep.c", i32 4864, i32 2}
!977 = !{ptr @print_lock_nested_lock_not_held._entry_ptr.477, !976, !"_entry_ptr", i1 false, i1 false}
!978 = !{ptr @print_lock_nested_lock_not_held._entry.478, !979, !"_entry", i1 false, i1 false}
!979 = !{!"../kernel/locking/lockdep.c", i32 4867, i32 2}
!980 = !{ptr @print_lock_nested_lock_not_held._entry_ptr.479, !979, !"_entry_ptr", i1 false, i1 false}
!981 = !{ptr @.str.480, !982, !"<string literal>", i1 false, i1 false}
!982 = !{!"../kernel/locking/lockdep.c", i32 3722, i32 4}
!983 = !{ptr @.str.481, !982, !"<string literal>", i1 false, i1 false}
!984 = !{ptr @lookup_chain_cache_add._entry, !982, !"_entry", i1 false, i1 false}
!985 = !{ptr @lookup_chain_cache_add._entry_ptr, !982, !"_entry_ptr", i1 false, i1 false}
!986 = !{ptr @.str.483, !987, !"<string literal>", i1 false, i1 false}
!987 = !{!"../kernel/locking/lockdep.c", i32 3732, i32 3}
!988 = !{ptr @lookup_chain_cache_add._entry.482, !987, !"_entry", i1 false, i1 false}
!989 = !{ptr @lookup_chain_cache_add._entry_ptr.484, !987, !"_entry_ptr", i1 false, i1 false}
!990 = distinct !{null, !991, !"__warned", i1 false, i1 false}
!991 = !{!"../kernel/locking/lockdep.c", i32 3694, i32 2}
!992 = distinct !{null, !993, !"__already_done", i1 false, i1 false}
!993 = !{!"../kernel/locking/lockdep.c", i32 3696, i32 4}
!994 = !{ptr @.str.485, !995, !"<string literal>", i1 false, i1 false}
!995 = !{!"../kernel/locking/lockdep.c", i32 3576, i32 6}
!996 = !{ptr @.str.486, !997, !"<string literal>", i1 false, i1 false}
!997 = !{!"../kernel/locking/lockdep.c", i32 3584, i32 7}
!998 = !{ptr @.str.487, !999, !"<string literal>", i1 false, i1 false}
!999 = !{!"../kernel/locking/lockdep.c", i32 3542, i32 2}
!1000 = !{ptr @print_collision._entry, !999, !"_entry", i1 false, i1 false}
!1001 = !{ptr @print_collision._entry_ptr, !999, !"_entry_ptr", i1 false, i1 false}
!1002 = !{ptr @.str.489, !1003, !"<string literal>", i1 false, i1 false}
!1003 = !{!"../kernel/locking/lockdep.c", i32 3543, i32 2}
!1004 = !{ptr @print_collision._entry.488, !1003, !"_entry", i1 false, i1 false}
!1005 = !{ptr @print_collision._entry_ptr.490, !1003, !"_entry_ptr", i1 false, i1 false}
!1006 = !{ptr @.str.492, !1007, !"<string literal>", i1 false, i1 false}
!1007 = !{!"../kernel/locking/lockdep.c", i32 3544, i32 2}
!1008 = !{ptr @print_collision._entry.491, !1007, !"_entry", i1 false, i1 false}
!1009 = !{ptr @print_collision._entry_ptr.493, !1007, !"_entry_ptr", i1 false, i1 false}
!1010 = !{ptr @.str.495, !1011, !"<string literal>", i1 false, i1 false}
!1011 = !{!"../kernel/locking/lockdep.c", i32 3546, i32 2}
!1012 = !{ptr @print_collision._entry.494, !1011, !"_entry", i1 false, i1 false}
!1013 = !{ptr @print_collision._entry_ptr.496, !1011, !"_entry_ptr", i1 false, i1 false}
!1014 = !{ptr @.str.498, !1015, !"<string literal>", i1 false, i1 false}
!1015 = !{!"../kernel/locking/lockdep.c", i32 3547, i32 2}
!1016 = !{ptr @print_collision._entry.497, !1015, !"_entry", i1 false, i1 false}
!1017 = !{ptr @print_collision._entry_ptr.499, !1015, !"_entry_ptr", i1 false, i1 false}
!1018 = !{ptr @.str.501, !1019, !"<string literal>", i1 false, i1 false}
!1019 = !{!"../kernel/locking/lockdep.c", i32 3548, i32 2}
!1020 = !{ptr @print_collision._entry.500, !1019, !"_entry", i1 false, i1 false}
!1021 = !{ptr @print_collision._entry_ptr.502, !1019, !"_entry_ptr", i1 false, i1 false}
!1022 = !{ptr @.str.504, !1023, !"<string literal>", i1 false, i1 false}
!1023 = !{!"../kernel/locking/lockdep.c", i32 3550, i32 2}
!1024 = !{ptr @print_collision._entry.503, !1023, !"_entry", i1 false, i1 false}
!1025 = !{ptr @print_collision._entry_ptr.505, !1023, !"_entry_ptr", i1 false, i1 false}
!1026 = !{ptr @.str.507, !1027, !"<string literal>", i1 false, i1 false}
!1027 = !{!"../kernel/locking/lockdep.c", i32 3553, i32 2}
!1028 = !{ptr @print_collision._entry.506, !1027, !"_entry", i1 false, i1 false}
!1029 = !{ptr @print_collision._entry_ptr.508, !1027, !"_entry_ptr", i1 false, i1 false}
!1030 = !{ptr @print_collision._entry.509, !1031, !"_entry", i1 false, i1 false}
!1031 = !{!"../kernel/locking/lockdep.c", i32 3556, i32 2}
!1032 = !{ptr @print_collision._entry_ptr.510, !1031, !"_entry_ptr", i1 false, i1 false}
!1033 = !{ptr @.str.511, !1034, !"<string literal>", i1 false, i1 false}
!1034 = !{!"../kernel/locking/lockdep.c", i32 3509, i32 2}
!1035 = !{ptr @.str.512, !1034, !"<string literal>", i1 false, i1 false}
!1036 = !{ptr @print_chain_keys_held_locks._entry, !1034, !"_entry", i1 false, i1 false}
!1037 = !{ptr @print_chain_keys_held_locks._entry_ptr, !1034, !"_entry_ptr", i1 false, i1 false}
!1038 = !{ptr @.str.513, !1039, !"<string literal>", i1 false, i1 false}
!1039 = !{!"../kernel/locking/lockdep.c", i32 3495, i32 2}
!1040 = !{ptr @.str.514, !1039, !"<string literal>", i1 false, i1 false}
!1041 = !{ptr @print_chain_key_iteration._entry, !1039, !"_entry", i1 false, i1 false}
!1042 = !{ptr @print_chain_key_iteration._entry_ptr, !1039, !"_entry_ptr", i1 false, i1 false}
!1043 = !{ptr @.str.515, !1044, !"<string literal>", i1 false, i1 false}
!1044 = !{!"../kernel/locking/lockdep.c", i32 3528, i32 2}
!1045 = !{ptr @.str.516, !1044, !"<string literal>", i1 false, i1 false}
!1046 = !{ptr @print_chain_keys_chain._entry, !1044, !"_entry", i1 false, i1 false}
!1047 = !{ptr @print_chain_keys_chain._entry_ptr, !1044, !"_entry_ptr", i1 false, i1 false}
!1048 = !{ptr @print_chain_keys_chain._entry.517, !1049, !"_entry", i1 false, i1 false}
!1049 = !{!"../kernel/locking/lockdep.c", i32 3534, i32 3}
!1050 = !{ptr @print_chain_keys_chain._entry_ptr.518, !1049, !"_entry_ptr", i1 false, i1 false}
!1051 = !{ptr @.str.519, !1052, !"<string literal>", i1 false, i1 false}
!1052 = !{!"../kernel/locking/lockdep.c", i32 3648, i32 21}
!1053 = !{ptr @.str.520, !1054, !"<string literal>", i1 false, i1 false}
!1054 = !{!"../kernel/locking/lockdep.c", i32 3666, i32 21}
!1055 = distinct !{null, !1056, !"__already_done", i1 false, i1 false}
!1056 = !{!"../kernel/locking/lockdep.c", i32 3679, i32 2}
!1057 = !{ptr @chain_block_buckets, !1058, !"chain_block_buckets", i1 false, i1 false}
!1058 = !{!"../kernel/locking/lockdep.c", i32 3257, i32 12}
!1059 = distinct !{null, !1060, !"__already_done", i1 false, i1 false}
!1060 = !{!"../kernel/locking/lockdep.c", i32 3282, i32 2}
!1061 = !{ptr @.str.521, !1062, !"<string literal>", i1 false, i1 false}
!1062 = !{!"../kernel/locking/lockdep.c", i32 2940, i32 2}
!1063 = !{ptr @print_deadlock_bug._entry, !1062, !"_entry", i1 false, i1 false}
!1064 = !{ptr @print_deadlock_bug._entry_ptr, !1062, !"_entry_ptr", i1 false, i1 false}
!1065 = !{ptr @.str.523, !1066, !"<string literal>", i1 false, i1 false}
!1066 = !{!"../kernel/locking/lockdep.c", i32 2941, i32 2}
!1067 = !{ptr @print_deadlock_bug._entry.522, !1066, !"_entry", i1 false, i1 false}
!1068 = !{ptr @print_deadlock_bug._entry_ptr.524, !1066, !"_entry_ptr", i1 false, i1 false}
!1069 = !{ptr @.str.526, !1070, !"<string literal>", i1 false, i1 false}
!1070 = !{!"../kernel/locking/lockdep.c", i32 2942, i32 2}
!1071 = !{ptr @print_deadlock_bug._entry.525, !1070, !"_entry", i1 false, i1 false}
!1072 = !{ptr @print_deadlock_bug._entry_ptr.527, !1070, !"_entry_ptr", i1 false, i1 false}
!1073 = !{ptr @.str.529, !1074, !"<string literal>", i1 false, i1 false}
!1074 = !{!"../kernel/locking/lockdep.c", i32 2944, i32 2}
!1075 = !{ptr @print_deadlock_bug._entry.528, !1074, !"_entry", i1 false, i1 false}
!1076 = !{ptr @print_deadlock_bug._entry_ptr.530, !1074, !"_entry_ptr", i1 false, i1 false}
!1077 = !{ptr @.str.532, !1078, !"<string literal>", i1 false, i1 false}
!1078 = !{!"../kernel/locking/lockdep.c", i32 2945, i32 2}
!1079 = !{ptr @print_deadlock_bug._entry.531, !1078, !"_entry", i1 false, i1 false}
!1080 = !{ptr @print_deadlock_bug._entry_ptr.533, !1078, !"_entry_ptr", i1 false, i1 false}
!1081 = !{ptr @.str.535, !1082, !"<string literal>", i1 false, i1 false}
!1082 = !{!"../kernel/locking/lockdep.c", i32 2948, i32 2}
!1083 = !{ptr @print_deadlock_bug._entry.534, !1082, !"_entry", i1 false, i1 false}
!1084 = !{ptr @print_deadlock_bug._entry_ptr.536, !1082, !"_entry_ptr", i1 false, i1 false}
!1085 = !{ptr @print_deadlock_bug._entry.537, !1086, !"_entry", i1 false, i1 false}
!1086 = !{!"../kernel/locking/lockdep.c", i32 2951, i32 2}
!1087 = !{ptr @print_deadlock_bug._entry_ptr.538, !1086, !"_entry_ptr", i1 false, i1 false}
!1088 = !{ptr @print_deadlock_bug._entry.539, !1089, !"_entry", i1 false, i1 false}
!1089 = !{!"../kernel/locking/lockdep.c", i32 2955, i32 2}
!1090 = !{ptr @print_deadlock_bug._entry_ptr.540, !1089, !"_entry_ptr", i1 false, i1 false}
!1091 = !{ptr @.str.541, !1092, !"<string literal>", i1 false, i1 false}
!1092 = !{!"../kernel/locking/lockdep.c", i32 2920, i32 2}
!1093 = !{ptr @print_deadlock_scenario._entry, !1092, !"_entry", i1 false, i1 false}
!1094 = !{ptr @print_deadlock_scenario._entry_ptr, !1092, !"_entry_ptr", i1 false, i1 false}
!1095 = !{ptr @print_deadlock_scenario._entry.542, !1096, !"_entry", i1 false, i1 false}
!1096 = !{!"../kernel/locking/lockdep.c", i32 2921, i32 2}
!1097 = !{ptr @print_deadlock_scenario._entry_ptr.543, !1096, !"_entry_ptr", i1 false, i1 false}
!1098 = !{ptr @print_deadlock_scenario._entry.544, !1099, !"_entry", i1 false, i1 false}
!1099 = !{!"../kernel/locking/lockdep.c", i32 2922, i32 2}
!1100 = !{ptr @print_deadlock_scenario._entry_ptr.545, !1099, !"_entry_ptr", i1 false, i1 false}
!1101 = !{ptr @print_deadlock_scenario._entry.546, !1102, !"_entry", i1 false, i1 false}
!1102 = !{!"../kernel/locking/lockdep.c", i32 2923, i32 2}
!1103 = !{ptr @print_deadlock_scenario._entry_ptr.547, !1102, !"_entry_ptr", i1 false, i1 false}
!1104 = !{ptr @print_deadlock_scenario._entry.548, !1105, !"_entry", i1 false, i1 false}
!1105 = !{!"../kernel/locking/lockdep.c", i32 2925, i32 2}
!1106 = !{ptr @print_deadlock_scenario._entry_ptr.549, !1105, !"_entry_ptr", i1 false, i1 false}
!1107 = !{ptr @print_deadlock_scenario._entry.550, !1108, !"_entry", i1 false, i1 false}
!1108 = !{!"../kernel/locking/lockdep.c", i32 2926, i32 2}
!1109 = !{ptr @print_deadlock_scenario._entry_ptr.551, !1108, !"_entry_ptr", i1 false, i1 false}
!1110 = !{ptr @print_deadlock_scenario._entry.552, !1111, !"_entry", i1 false, i1 false}
!1111 = !{!"../kernel/locking/lockdep.c", i32 2928, i32 2}
!1112 = !{ptr @print_deadlock_scenario._entry_ptr.553, !1111, !"_entry_ptr", i1 false, i1 false}
!1113 = !{ptr @print_deadlock_scenario._entry.554, !1114, !"_entry", i1 false, i1 false}
!1114 = !{!"../kernel/locking/lockdep.c", i32 2929, i32 2}
!1115 = !{ptr @print_deadlock_scenario._entry_ptr.555, !1114, !"_entry_ptr", i1 false, i1 false}
!1116 = !{ptr @.str.557, !1117, !"<string literal>", i1 false, i1 false}
!1117 = !{!"../kernel/locking/lockdep.c", i32 2930, i32 2}
!1118 = !{ptr @print_deadlock_scenario._entry.556, !1117, !"_entry", i1 false, i1 false}
!1119 = !{ptr @print_deadlock_scenario._entry_ptr.558, !1117, !"_entry_ptr", i1 false, i1 false}
!1120 = distinct !{null, !1121, !"__already_done", i1 false, i1 false}
!1121 = !{!"../kernel/locking/lockdep.c", i32 3042, i32 3}
!1122 = !{ptr @.str.559, !1121, !"<string literal>", i1 false, i1 false}
!1123 = distinct !{null, !1124, !"__already_done", i1 false, i1 false}
!1124 = !{!"../kernel/locking/lockdep.c", i32 3046, i32 3}
!1125 = distinct !{null, !1126, !"__already_done", i1 false, i1 false}
!1126 = !{!"../kernel/locking/lockdep.c", i32 2129, i32 2}
!1127 = !{ptr @.str.561, !1128, !"<string literal>", i1 false, i1 false}
!1128 = !{!"../kernel/locking/lockdep.c", i32 2014, i32 2}
!1129 = !{ptr @.str.562, !1128, !"<string literal>", i1 false, i1 false}
!1130 = !{ptr @print_circular_bug._entry, !1128, !"_entry", i1 false, i1 false}
!1131 = !{ptr @print_circular_bug._entry_ptr, !1128, !"_entry_ptr", i1 false, i1 false}
!1132 = !{ptr @.str.564, !1133, !"<string literal>", i1 false, i1 false}
!1133 = !{!"../kernel/locking/lockdep.c", i32 2020, i32 2}
!1134 = !{ptr @print_circular_bug._entry.563, !1133, !"_entry", i1 false, i1 false}
!1135 = !{ptr @print_circular_bug._entry_ptr.565, !1133, !"_entry_ptr", i1 false, i1 false}
!1136 = !{ptr @.str.566, !1137, !"<string literal>", i1 false, i1 false}
!1137 = !{!"../kernel/locking/lockdep.c", i32 1905, i32 2}
!1138 = !{ptr @print_circular_bug_header._entry, !1137, !"_entry", i1 false, i1 false}
!1139 = !{ptr @print_circular_bug_header._entry_ptr, !1137, !"_entry_ptr", i1 false, i1 false}
!1140 = !{ptr @.str.568, !1141, !"<string literal>", i1 false, i1 false}
!1141 = !{!"../kernel/locking/lockdep.c", i32 1906, i32 2}
!1142 = !{ptr @print_circular_bug_header._entry.567, !1141, !"_entry", i1 false, i1 false}
!1143 = !{ptr @print_circular_bug_header._entry_ptr.569, !1141, !"_entry_ptr", i1 false, i1 false}
!1144 = !{ptr @.str.571, !1145, !"<string literal>", i1 false, i1 false}
!1145 = !{!"../kernel/locking/lockdep.c", i32 1907, i32 2}
!1146 = !{ptr @print_circular_bug_header._entry.570, !1145, !"_entry", i1 false, i1 false}
!1147 = !{ptr @print_circular_bug_header._entry_ptr.572, !1145, !"_entry_ptr", i1 false, i1 false}
!1148 = !{ptr @.str.574, !1149, !"<string literal>", i1 false, i1 false}
!1149 = !{!"../kernel/locking/lockdep.c", i32 1909, i32 2}
!1150 = !{ptr @print_circular_bug_header._entry.573, !1149, !"_entry", i1 false, i1 false}
!1151 = !{ptr @print_circular_bug_header._entry_ptr.575, !1149, !"_entry_ptr", i1 false, i1 false}
!1152 = !{ptr @print_circular_bug_header._entry.576, !1153, !"_entry", i1 false, i1 false}
!1153 = !{!"../kernel/locking/lockdep.c", i32 1910, i32 2}
!1154 = !{ptr @print_circular_bug_header._entry_ptr.577, !1153, !"_entry_ptr", i1 false, i1 false}
!1155 = !{ptr @print_circular_bug_header._entry.578, !1156, !"_entry", i1 false, i1 false}
!1156 = !{!"../kernel/locking/lockdep.c", i32 1914, i32 2}
!1157 = !{ptr @print_circular_bug_header._entry_ptr.579, !1156, !"_entry_ptr", i1 false, i1 false}
!1158 = !{ptr @.str.581, !1159, !"<string literal>", i1 false, i1 false}
!1159 = !{!"../kernel/locking/lockdep.c", i32 1917, i32 2}
!1160 = !{ptr @print_circular_bug_header._entry.580, !1159, !"_entry", i1 false, i1 false}
!1161 = !{ptr @print_circular_bug_header._entry_ptr.582, !1159, !"_entry_ptr", i1 false, i1 false}
!1162 = !{ptr @.str.584, !1163, !"<string literal>", i1 false, i1 false}
!1163 = !{!"../kernel/locking/lockdep.c", i32 1918, i32 2}
!1164 = !{ptr @print_circular_bug_header._entry.583, !1163, !"_entry", i1 false, i1 false}
!1165 = !{ptr @print_circular_bug_header._entry_ptr.585, !1163, !"_entry_ptr", i1 false, i1 false}
!1166 = !{ptr @.str.586, !1167, !"<string literal>", i1 false, i1 false}
!1167 = !{!"../kernel/locking/lockdep.c", i32 1835, i32 2}
!1168 = !{ptr @.str.587, !1167, !"<string literal>", i1 false, i1 false}
!1169 = !{ptr @print_circular_bug_entry._entry, !1167, !"_entry", i1 false, i1 false}
!1170 = !{ptr @print_circular_bug_entry._entry_ptr, !1167, !"_entry_ptr", i1 false, i1 false}
!1171 = !{ptr @.str.589, !1172, !"<string literal>", i1 false, i1 false}
!1172 = !{!"../kernel/locking/lockdep.c", i32 1837, i32 2}
!1173 = !{ptr @print_circular_bug_entry._entry.588, !1172, !"_entry", i1 false, i1 false}
!1174 = !{ptr @print_circular_bug_entry._entry_ptr.590, !1172, !"_entry_ptr", i1 false, i1 false}
!1175 = !{ptr @.str.591, !1176, !"<string literal>", i1 false, i1 false}
!1176 = !{!"../kernel/locking/lockdep.c", i32 1864, i32 3}
!1177 = !{ptr @print_circular_lock_scenario._entry, !1176, !"_entry", i1 false, i1 false}
!1178 = !{ptr @print_circular_lock_scenario._entry_ptr, !1176, !"_entry_ptr", i1 false, i1 false}
!1179 = !{ptr @print_circular_lock_scenario._entry.592, !1180, !"_entry", i1 false, i1 false}
!1180 = !{!"../kernel/locking/lockdep.c", i32 1866, i32 3}
!1181 = !{ptr @print_circular_lock_scenario._entry_ptr.593, !1180, !"_entry_ptr", i1 false, i1 false}
!1182 = !{ptr @print_circular_lock_scenario._entry.594, !1183, !"_entry", i1 false, i1 false}
!1183 = !{!"../kernel/locking/lockdep.c", i32 1868, i32 3}
!1184 = !{ptr @print_circular_lock_scenario._entry_ptr.595, !1183, !"_entry_ptr", i1 false, i1 false}
!1185 = !{ptr @print_circular_lock_scenario._entry.596, !1186, !"_entry", i1 false, i1 false}
!1186 = !{!"../kernel/locking/lockdep.c", i32 1870, i32 3}
!1187 = !{ptr @print_circular_lock_scenario._entry_ptr.597, !1186, !"_entry_ptr", i1 false, i1 false}
!1188 = !{ptr @print_circular_lock_scenario._entry.598, !1189, !"_entry", i1 false, i1 false}
!1189 = !{!"../kernel/locking/lockdep.c", i32 1873, i32 2}
!1190 = !{ptr @print_circular_lock_scenario._entry_ptr.599, !1189, !"_entry_ptr", i1 false, i1 false}
!1191 = !{ptr @print_circular_lock_scenario._entry.600, !1192, !"_entry", i1 false, i1 false}
!1192 = !{!"../kernel/locking/lockdep.c", i32 1874, i32 2}
!1193 = !{ptr @print_circular_lock_scenario._entry_ptr.601, !1192, !"_entry_ptr", i1 false, i1 false}
!1194 = !{ptr @print_circular_lock_scenario._entry.602, !1195, !"_entry", i1 false, i1 false}
!1195 = !{!"../kernel/locking/lockdep.c", i32 1875, i32 2}
!1196 = !{ptr @print_circular_lock_scenario._entry_ptr.603, !1195, !"_entry_ptr", i1 false, i1 false}
!1197 = !{ptr @print_circular_lock_scenario._entry.604, !1198, !"_entry", i1 false, i1 false}
!1198 = !{!"../kernel/locking/lockdep.c", i32 1876, i32 2}
!1199 = !{ptr @print_circular_lock_scenario._entry_ptr.605, !1198, !"_entry_ptr", i1 false, i1 false}
!1200 = !{ptr @print_circular_lock_scenario._entry.606, !1201, !"_entry", i1 false, i1 false}
!1201 = !{!"../kernel/locking/lockdep.c", i32 1878, i32 2}
!1202 = !{ptr @print_circular_lock_scenario._entry_ptr.607, !1201, !"_entry_ptr", i1 false, i1 false}
!1203 = !{ptr @print_circular_lock_scenario._entry.608, !1204, !"_entry", i1 false, i1 false}
!1204 = !{!"../kernel/locking/lockdep.c", i32 1879, i32 2}
!1205 = !{ptr @print_circular_lock_scenario._entry_ptr.609, !1204, !"_entry_ptr", i1 false, i1 false}
!1206 = !{ptr @print_circular_lock_scenario._entry.610, !1207, !"_entry", i1 false, i1 false}
!1207 = !{!"../kernel/locking/lockdep.c", i32 1881, i32 2}
!1208 = !{ptr @print_circular_lock_scenario._entry_ptr.611, !1207, !"_entry_ptr", i1 false, i1 false}
!1209 = !{ptr @print_circular_lock_scenario._entry.612, !1210, !"_entry", i1 false, i1 false}
!1210 = !{!"../kernel/locking/lockdep.c", i32 1882, i32 2}
!1211 = !{ptr @print_circular_lock_scenario._entry_ptr.613, !1210, !"_entry_ptr", i1 false, i1 false}
!1212 = !{ptr @print_circular_lock_scenario._entry.614, !1213, !"_entry", i1 false, i1 false}
!1213 = !{!"../kernel/locking/lockdep.c", i32 1884, i32 2}
!1214 = !{ptr @print_circular_lock_scenario._entry_ptr.615, !1213, !"_entry_ptr", i1 false, i1 false}
!1215 = !{ptr @print_circular_lock_scenario._entry.616, !1216, !"_entry", i1 false, i1 false}
!1216 = !{!"../kernel/locking/lockdep.c", i32 1885, i32 2}
!1217 = !{ptr @print_circular_lock_scenario._entry_ptr.617, !1216, !"_entry_ptr", i1 false, i1 false}
!1218 = !{ptr @print_circular_lock_scenario._entry.618, !1219, !"_entry", i1 false, i1 false}
!1219 = !{!"../kernel/locking/lockdep.c", i32 1887, i32 2}
!1220 = !{ptr @print_circular_lock_scenario._entry_ptr.619, !1219, !"_entry_ptr", i1 false, i1 false}
!1221 = !{ptr @print_circular_lock_scenario._entry.620, !1222, !"_entry", i1 false, i1 false}
!1222 = !{!"../kernel/locking/lockdep.c", i32 1888, i32 2}
!1223 = !{ptr @print_circular_lock_scenario._entry_ptr.621, !1222, !"_entry_ptr", i1 false, i1 false}
!1224 = !{ptr @.str.622, !1225, !"<string literal>", i1 false, i1 false}
!1225 = !{!"../kernel/locking/lockdep.c", i32 2803, i32 6}
!1226 = !{ptr @.str.623, !1227, !"<string literal>", i1 false, i1 false}
!1227 = !{!"../kernel/locking/lockdep.c", i32 2813, i32 6}
!1228 = !{ptr @.str.624, !1229, !"<string literal>", i1 false, i1 false}
!1229 = !{!"../kernel/locking/lockdep.c", i32 2524, i32 2}
!1230 = !{ptr @print_bad_irq_dependency._entry, !1229, !"_entry", i1 false, i1 false}
!1231 = !{ptr @print_bad_irq_dependency._entry_ptr, !1229, !"_entry_ptr", i1 false, i1 false}
!1232 = !{ptr @.str.626, !1233, !"<string literal>", i1 false, i1 false}
!1233 = !{!"../kernel/locking/lockdep.c", i32 2525, i32 2}
!1234 = !{ptr @print_bad_irq_dependency._entry.625, !1233, !"_entry", i1 false, i1 false}
!1235 = !{ptr @print_bad_irq_dependency._entry_ptr.627, !1233, !"_entry_ptr", i1 false, i1 false}
!1236 = !{ptr @.str.629, !1237, !"<string literal>", i1 false, i1 false}
!1237 = !{!"../kernel/locking/lockdep.c", i32 2526, i32 2}
!1238 = !{ptr @print_bad_irq_dependency._entry.628, !1237, !"_entry", i1 false, i1 false}
!1239 = !{ptr @print_bad_irq_dependency._entry_ptr.630, !1237, !"_entry_ptr", i1 false, i1 false}
!1240 = !{ptr @.str.632, !1241, !"<string literal>", i1 false, i1 false}
!1241 = !{!"../kernel/locking/lockdep.c", i32 2529, i32 2}
!1242 = !{ptr @print_bad_irq_dependency._entry.631, !1241, !"_entry", i1 false, i1 false}
!1243 = !{ptr @print_bad_irq_dependency._entry_ptr.633, !1241, !"_entry_ptr", i1 false, i1 false}
!1244 = !{ptr @.str.635, !1245, !"<string literal>", i1 false, i1 false}
!1245 = !{!"../kernel/locking/lockdep.c", i32 2530, i32 2}
!1246 = !{ptr @print_bad_irq_dependency._entry.634, !1245, !"_entry", i1 false, i1 false}
!1247 = !{ptr @print_bad_irq_dependency._entry_ptr.636, !1245, !"_entry_ptr", i1 false, i1 false}
!1248 = !{ptr @.str.638, !1249, !"<string literal>", i1 false, i1 false}
!1249 = !{!"../kernel/locking/lockdep.c", i32 2538, i32 2}
!1250 = !{ptr @print_bad_irq_dependency._entry.637, !1249, !"_entry", i1 false, i1 false}
!1251 = !{ptr @print_bad_irq_dependency._entry_ptr.639, !1249, !"_entry_ptr", i1 false, i1 false}
!1252 = !{ptr @.str.641, !1253, !"<string literal>", i1 false, i1 false}
!1253 = !{!"../kernel/locking/lockdep.c", i32 2540, i32 2}
!1254 = !{ptr @print_bad_irq_dependency._entry.640, !1253, !"_entry", i1 false, i1 false}
!1255 = !{ptr @print_bad_irq_dependency._entry_ptr.642, !1253, !"_entry_ptr", i1 false, i1 false}
!1256 = !{ptr @.str.644, !1257, !"<string literal>", i1 false, i1 false}
!1257 = !{!"../kernel/locking/lockdep.c", i32 2542, i32 2}
!1258 = !{ptr @print_bad_irq_dependency._entry.643, !1257, !"_entry", i1 false, i1 false}
!1259 = !{ptr @print_bad_irq_dependency._entry_ptr.645, !1257, !"_entry_ptr", i1 false, i1 false}
!1260 = !{ptr @print_bad_irq_dependency._entry.646, !1261, !"_entry", i1 false, i1 false}
!1261 = !{!"../kernel/locking/lockdep.c", i32 2544, i32 2}
!1262 = !{ptr @print_bad_irq_dependency._entry_ptr.647, !1261, !"_entry_ptr", i1 false, i1 false}
!1263 = !{ptr @.str.649, !1264, !"<string literal>", i1 false, i1 false}
!1264 = !{!"../kernel/locking/lockdep.c", i32 2546, i32 2}
!1265 = !{ptr @print_bad_irq_dependency._entry.648, !1264, !"_entry", i1 false, i1 false}
!1266 = !{ptr @print_bad_irq_dependency._entry_ptr.650, !1264, !"_entry_ptr", i1 false, i1 false}
!1267 = !{ptr @.str.652, !1268, !"<string literal>", i1 false, i1 false}
!1268 = !{!"../kernel/locking/lockdep.c", i32 2549, i32 2}
!1269 = !{ptr @print_bad_irq_dependency._entry.651, !1268, !"_entry", i1 false, i1 false}
!1270 = !{ptr @print_bad_irq_dependency._entry_ptr.653, !1268, !"_entry_ptr", i1 false, i1 false}
!1271 = !{ptr @.str.655, !1272, !"<string literal>", i1 false, i1 false}
!1272 = !{!"../kernel/locking/lockdep.c", i32 2553, i32 2}
!1273 = !{ptr @print_bad_irq_dependency._entry.654, !1272, !"_entry", i1 false, i1 false}
!1274 = !{ptr @print_bad_irq_dependency._entry_ptr.656, !1272, !"_entry_ptr", i1 false, i1 false}
!1275 = !{ptr @.str.658, !1276, !"<string literal>", i1 false, i1 false}
!1276 = !{!"../kernel/locking/lockdep.c", i32 2555, i32 2}
!1277 = !{ptr @print_bad_irq_dependency._entry.657, !1276, !"_entry", i1 false, i1 false}
!1278 = !{ptr @print_bad_irq_dependency._entry_ptr.659, !1276, !"_entry_ptr", i1 false, i1 false}
!1279 = !{ptr @.str.661, !1280, !"<string literal>", i1 false, i1 false}
!1280 = !{!"../kernel/locking/lockdep.c", i32 2556, i32 2}
!1281 = !{ptr @print_bad_irq_dependency._entry.660, !1280, !"_entry", i1 false, i1 false}
!1282 = !{ptr @print_bad_irq_dependency._entry_ptr.662, !1280, !"_entry_ptr", i1 false, i1 false}
!1283 = !{ptr @print_bad_irq_dependency._entry.663, !1284, !"_entry", i1 false, i1 false}
!1284 = !{!"../kernel/locking/lockdep.c", i32 2560, i32 2}
!1285 = !{ptr @print_bad_irq_dependency._entry_ptr.664, !1284, !"_entry_ptr", i1 false, i1 false}
!1286 = !{ptr @.str.666, !1287, !"<string literal>", i1 false, i1 false}
!1287 = !{!"../kernel/locking/lockdep.c", i32 2566, i32 2}
!1288 = !{ptr @print_bad_irq_dependency._entry.665, !1287, !"_entry", i1 false, i1 false}
!1289 = !{ptr @print_bad_irq_dependency._entry_ptr.667, !1287, !"_entry_ptr", i1 false, i1 false}
!1290 = !{ptr @.str.669, !1291, !"<string literal>", i1 false, i1 false}
!1291 = !{!"../kernel/locking/lockdep.c", i32 2569, i32 2}
!1292 = !{ptr @print_bad_irq_dependency._entry.668, !1291, !"_entry", i1 false, i1 false}
!1293 = !{ptr @print_bad_irq_dependency._entry_ptr.670, !1291, !"_entry_ptr", i1 false, i1 false}
!1294 = !{ptr @.str.672, !1295, !"<string literal>", i1 false, i1 false}
!1295 = !{!"../kernel/locking/lockdep.c", i32 2570, i32 2}
!1296 = !{ptr @print_bad_irq_dependency._entry.671, !1295, !"_entry", i1 false, i1 false}
!1297 = !{ptr @print_bad_irq_dependency._entry_ptr.673, !1295, !"_entry_ptr", i1 false, i1 false}
!1298 = !{ptr @print_bad_irq_dependency._entry.674, !1299, !"_entry", i1 false, i1 false}
!1299 = !{!"../kernel/locking/lockdep.c", i32 2576, i32 2}
!1300 = !{ptr @print_bad_irq_dependency._entry_ptr.675, !1299, !"_entry_ptr", i1 false, i1 false}
!1301 = !{ptr @.str.676, !1302, !"<string literal>", i1 false, i1 false}
!1302 = !{!"../kernel/locking/lockdep.c", i32 1367, i32 21}
!1303 = !{ptr @list_entries_in_use, !1304, !"list_entries_in_use", i1 false, i1 false}
!1304 = !{!"../kernel/locking/lockdep.c", i32 173, i32 8}
!1305 = !{ptr @list_entries, !1306, !"list_entries", i1 false, i1 false}
!1306 = !{!"../kernel/locking/lockdep.c", i32 172, i32 25}
!1307 = distinct !{null, !5, !"__already_done", i1 false, i1 false}
!1308 = distinct !{null, !5, !"__warned", i1 false, i1 false}
!1309 = !{ptr @.str.677, !1310, !"<string literal>", i1 false, i1 false}
!1310 = !{!"../kernel/locking/lockdep.c", i32 5323, i32 2}
!1311 = !{ptr @.str.678, !1312, !"<string literal>", i1 false, i1 false}
!1312 = !{!"../kernel/locking/lockdep.c", i32 5415, i32 2}
!1313 = !{ptr @.str.679, !1314, !"<string literal>", i1 false, i1 false}
!1314 = !{!"../kernel/locking/lockdep.c", i32 5451, i32 8}
!1315 = !{ptr @.str.680, !1316, !"<string literal>", i1 false, i1 false}
!1316 = !{!"../kernel/locking/lockdep.c", i32 5456, i32 8}
!1317 = !{ptr @.str.681, !1318, !"<string literal>", i1 false, i1 false}
!1318 = !{!"../kernel/locking/lockdep.c", i32 5463, i32 2}
!1319 = distinct !{null, !9, !"__already_done", i1 false, i1 false}
!1320 = distinct !{null, !9, !"__warned", i1 false, i1 false}
!1321 = !{ptr @.str.682, !1322, !"<string literal>", i1 false, i1 false}
!1322 = !{!"../kernel/locking/lockdep.c", i32 5755, i32 2}
!1323 = !{ptr @print_lock_contention_bug._entry, !1322, !"_entry", i1 false, i1 false}
!1324 = !{ptr @print_lock_contention_bug._entry_ptr, !1322, !"_entry_ptr", i1 false, i1 false}
!1325 = !{ptr @.str.684, !1326, !"<string literal>", i1 false, i1 false}
!1326 = !{!"../kernel/locking/lockdep.c", i32 5756, i32 2}
!1327 = !{ptr @print_lock_contention_bug._entry.683, !1326, !"_entry", i1 false, i1 false}
!1328 = !{ptr @print_lock_contention_bug._entry_ptr.685, !1326, !"_entry_ptr", i1 false, i1 false}
!1329 = !{ptr @.str.687, !1330, !"<string literal>", i1 false, i1 false}
!1330 = !{!"../kernel/locking/lockdep.c", i32 5757, i32 2}
!1331 = !{ptr @print_lock_contention_bug._entry.686, !1330, !"_entry", i1 false, i1 false}
!1332 = !{ptr @print_lock_contention_bug._entry_ptr.688, !1330, !"_entry_ptr", i1 false, i1 false}
!1333 = !{ptr @.str.690, !1334, !"<string literal>", i1 false, i1 false}
!1334 = !{!"../kernel/locking/lockdep.c", i32 5759, i32 2}
!1335 = !{ptr @print_lock_contention_bug._entry.689, !1334, !"_entry", i1 false, i1 false}
!1336 = !{ptr @print_lock_contention_bug._entry_ptr.691, !1334, !"_entry_ptr", i1 false, i1 false}
!1337 = !{ptr @.str.693, !1338, !"<string literal>", i1 false, i1 false}
!1338 = !{!"../kernel/locking/lockdep.c", i32 5760, i32 2}
!1339 = !{ptr @print_lock_contention_bug._entry.692, !1338, !"_entry", i1 false, i1 false}
!1340 = !{ptr @print_lock_contention_bug._entry_ptr.694, !1338, !"_entry_ptr", i1 false, i1 false}
!1341 = !{ptr @print_lock_contention_bug._entry.695, !1342, !"_entry", i1 false, i1 false}
!1342 = !{!"../kernel/locking/lockdep.c", i32 5763, i32 2}
!1343 = !{ptr @print_lock_contention_bug._entry_ptr.696, !1342, !"_entry_ptr", i1 false, i1 false}
!1344 = !{ptr @.str.698, !1345, !"<string literal>", i1 false, i1 false}
!1345 = !{!"../kernel/locking/lockdep.c", i32 5765, i32 2}
!1346 = !{ptr @print_lock_contention_bug._entry.697, !1345, !"_entry", i1 false, i1 false}
!1347 = !{ptr @print_lock_contention_bug._entry_ptr.699, !1345, !"_entry_ptr", i1 false, i1 false}
!1348 = !{ptr @print_lock_contention_bug._entry.700, !1349, !"_entry", i1 false, i1 false}
!1349 = !{!"../kernel/locking/lockdep.c", i32 5766, i32 2}
!1350 = !{ptr @print_lock_contention_bug._entry_ptr.701, !1349, !"_entry_ptr", i1 false, i1 false}
!1351 = !{ptr @print_lock_contention_bug._entry.702, !1352, !"_entry", i1 false, i1 false}
!1352 = !{!"../kernel/locking/lockdep.c", i32 5769, i32 2}
!1353 = !{ptr @print_lock_contention_bug._entry_ptr.703, !1352, !"_entry_ptr", i1 false, i1 false}
!1354 = distinct !{null, !13, !"__already_done", i1 false, i1 false}
!1355 = distinct !{null, !13, !"__warned", i1 false, i1 false}
!1356 = distinct !{null, !1357, !"ds_initialized", i1 false, i1 false}
!1357 = !{!"../kernel/locking/lockdep.c", i32 1152, i32 28}
!1358 = distinct !{null, !1359, !"rcu_head_initialized", i1 false, i1 false}
!1359 = !{!"../kernel/locking/lockdep.c", i32 1152, i32 44}
!1360 = !{ptr @delayed_free, !1361, !"delayed_free", i1 false, i1 false}
!1361 = !{!"../kernel/locking/lockdep.c", i32 371, i32 3}
!1362 = distinct !{null, !1363, !"once", i1 false, i1 false}
!1363 = !{!"../kernel/locking/lockdep.c", i32 1128, i32 14}
!1364 = !{ptr @.str.704, !1365, !"<string literal>", i1 false, i1 false}
!1365 = !{!"../kernel/locking/lockdep.c", i32 1064, i32 4}
!1366 = !{ptr @.str.705, !1365, !"<string literal>", i1 false, i1 false}
!1367 = !{ptr @__check_data_structures._entry, !1365, !"_entry", i1 false, i1 false}
!1368 = !{ptr @__check_data_structures._entry_ptr, !1365, !"_entry_ptr", i1 false, i1 false}
!1369 = !{ptr @.str.706, !1365, !"<string literal>", i1 false, i1 false}
!1370 = distinct !{null, !1371, !"__warned", i1 false, i1 false}
!1371 = !{!"../kernel/locking/lockdep.c", i32 1082, i32 3}
!1372 = !{ptr @.str.708, !1373, !"<string literal>", i1 false, i1 false}
!1373 = !{!"../kernel/locking/lockdep.c", i32 1095, i32 4}
!1374 = !{ptr @__check_data_structures._entry.707, !1373, !"_entry", i1 false, i1 false}
!1375 = !{ptr @__check_data_structures._entry_ptr.709, !1373, !"_entry_ptr", i1 false, i1 false}
!1376 = !{ptr @.str.711, !1377, !"<string literal>", i1 false, i1 false}
!1377 = !{!"../kernel/locking/lockdep.c", i32 1110, i32 4}
!1378 = !{ptr @__check_data_structures._entry.710, !1377, !"_entry", i1 false, i1 false}
!1379 = !{ptr @__check_data_structures._entry_ptr.712, !1377, !"_entry_ptr", i1 false, i1 false}
!1380 = !{ptr @.str.713, !1381, !"<string literal>", i1 false, i1 false}
!1381 = !{!"../kernel/locking/lockdep.c", i32 997, i32 4}
!1382 = !{ptr @.str.714, !1381, !"<string literal>", i1 false, i1 false}
!1383 = !{ptr @class_lock_list_valid._entry, !1381, !"_entry", i1 false, i1 false}
!1384 = !{ptr @class_lock_list_valid._entry_ptr, !1381, !"_entry_ptr", i1 false, i1 false}
!1385 = !{ptr @.str.715, !1386, !"<string literal>", i1 false, i1 false}
!1386 = !{!"../kernel/locking/lockdep.c", i32 1027, i32 3}
!1387 = !{ptr @.str.716, !1386, !"<string literal>", i1 false, i1 false}
!1388 = !{ptr @check_lock_chain_key._entry, !1386, !"_entry", i1 false, i1 false}
!1389 = !{ptr @check_lock_chain_key._entry_ptr, !1386, !"_entry_ptr", i1 false, i1 false}
!1390 = distinct !{null, !1391, !"__already_done", i1 false, i1 false}
!1391 = !{!"../kernel/locking/lockdep.c", i32 6017, i32 2}
!1392 = distinct !{null, !1393, !"__already_done", i1 false, i1 false}
!1393 = !{!"../kernel/locking/lockdep.c", i32 6018, i32 2}
!1394 = distinct !{null, !1395, !"__already_done", i1 false, i1 false}
!1395 = !{!"../kernel/locking/lockdep.c", i32 6019, i32 2}
!1396 = distinct !{null, !1397, !"__already_done", i1 false, i1 false}
!1397 = !{!"../kernel/locking/lockdep.c", i32 6021, i32 2}
!1398 = distinct !{null, !1399, !"__already_done", i1 false, i1 false}
!1399 = !{!"../kernel/locking/lockdep.c", i32 6022, i32 2}
!1400 = distinct !{null, !1401, !"__already_done", i1 false, i1 false}
!1401 = !{!"../kernel/locking/lockdep.c", i32 6023, i32 2}
!1402 = distinct !{null, !1403, !"__already_done", i1 false, i1 false}
!1403 = !{!"../kernel/locking/lockdep.c", i32 6238, i32 6}
!1404 = distinct !{null, !1405, !"__already_done", i1 false, i1 false}
!1405 = !{!"../kernel/locking/lockdep.c", i32 5981, i32 2}
!1406 = distinct !{null, !1407, !"__already_done", i1 false, i1 false}
!1407 = !{!"../kernel/locking/lockdep.c", i32 6004, i32 3}
!1408 = !{ptr @.str.723, !1407, !"<string literal>", i1 false, i1 false}
!1409 = !{ptr @__func__.zap_class, !1407, !"<string literal>", i1 false, i1 false}
!1410 = distinct !{null, !1411, !"__warned", i1 false, i1 false}
!1411 = !{!"../kernel/locking/lockdep.c", i32 5967, i32 3}
!1412 = distinct !{null, !1413, !"__warned", i1 false, i1 false}
!1413 = !{!"../kernel/locking/lockdep.c", i32 6207, i32 3}
!1414 = distinct !{null, !1415, !"__warned", i1 false, i1 false}
!1415 = !{!"../kernel/locking/lockdep.c", i32 6126, i32 3}
!1416 = distinct !{null, !1417, !"__already_done", i1 false, i1 false}
!1417 = !{!"../kernel/locking/lockdep.c", i32 6050, i32 2}
!1418 = distinct !{null, !1419, !"__already_done", i1 false, i1 false}
!1419 = !{!"../kernel/locking/lockdep.c", i32 6060, i32 2}
!1420 = distinct !{null, !1421, !"__already_done", i1 false, i1 false}
!1421 = !{!"../kernel/locking/lockdep.c", i32 6090, i32 6}
!1422 = !{ptr @.str.725, !1423, !"<string literal>", i1 false, i1 false}
!1423 = !{!"../kernel/locking/lockdep.c", i32 6379, i32 2}
!1424 = !{ptr @print_freed_lock_bug._entry, !1423, !"_entry", i1 false, i1 false}
!1425 = !{ptr @print_freed_lock_bug._entry_ptr, !1423, !"_entry_ptr", i1 false, i1 false}
!1426 = !{ptr @.str.727, !1427, !"<string literal>", i1 false, i1 false}
!1427 = !{!"../kernel/locking/lockdep.c", i32 6380, i32 2}
!1428 = !{ptr @print_freed_lock_bug._entry.726, !1427, !"_entry", i1 false, i1 false}
!1429 = !{ptr @print_freed_lock_bug._entry_ptr.728, !1427, !"_entry_ptr", i1 false, i1 false}
!1430 = !{ptr @.str.730, !1431, !"<string literal>", i1 false, i1 false}
!1431 = !{!"../kernel/locking/lockdep.c", i32 6381, i32 2}
!1432 = !{ptr @print_freed_lock_bug._entry.729, !1431, !"_entry", i1 false, i1 false}
!1433 = !{ptr @print_freed_lock_bug._entry_ptr.731, !1431, !"_entry_ptr", i1 false, i1 false}
!1434 = !{ptr @.str.733, !1435, !"<string literal>", i1 false, i1 false}
!1435 = !{!"../kernel/locking/lockdep.c", i32 6383, i32 2}
!1436 = !{ptr @print_freed_lock_bug._entry.732, !1435, !"_entry", i1 false, i1 false}
!1437 = !{ptr @print_freed_lock_bug._entry_ptr.734, !1435, !"_entry_ptr", i1 false, i1 false}
!1438 = !{ptr @.str.736, !1439, !"<string literal>", i1 false, i1 false}
!1439 = !{!"../kernel/locking/lockdep.c", i32 6384, i32 2}
!1440 = !{ptr @print_freed_lock_bug._entry.735, !1439, !"_entry", i1 false, i1 false}
!1441 = !{ptr @print_freed_lock_bug._entry_ptr.737, !1439, !"_entry_ptr", i1 false, i1 false}
!1442 = !{ptr @print_freed_lock_bug._entry.738, !1443, !"_entry", i1 false, i1 false}
!1443 = !{!"../kernel/locking/lockdep.c", i32 6389, i32 2}
!1444 = !{ptr @print_freed_lock_bug._entry_ptr.739, !1443, !"_entry_ptr", i1 false, i1 false}
!1445 = !{ptr @.str.740, !1446, !"<string literal>", i1 false, i1 false}
!1446 = !{!"../kernel/locking/lockdep.c", i32 6437, i32 2}
!1447 = !{ptr @print_held_locks_bug._entry, !1446, !"_entry", i1 false, i1 false}
!1448 = !{ptr @print_held_locks_bug._entry_ptr, !1446, !"_entry_ptr", i1 false, i1 false}
!1449 = !{ptr @.str.742, !1450, !"<string literal>", i1 false, i1 false}
!1450 = !{!"../kernel/locking/lockdep.c", i32 6438, i32 2}
!1451 = !{ptr @print_held_locks_bug._entry.741, !1450, !"_entry", i1 false, i1 false}
!1452 = !{ptr @print_held_locks_bug._entry_ptr.743, !1450, !"_entry_ptr", i1 false, i1 false}
!1453 = !{ptr @.str.745, !1454, !"<string literal>", i1 false, i1 false}
!1454 = !{!"../kernel/locking/lockdep.c", i32 6439, i32 2}
!1455 = !{ptr @print_held_locks_bug._entry.744, !1454, !"_entry", i1 false, i1 false}
!1456 = !{ptr @print_held_locks_bug._entry_ptr.746, !1454, !"_entry_ptr", i1 false, i1 false}
!1457 = !{ptr @.str.748, !1458, !"<string literal>", i1 false, i1 false}
!1458 = !{!"../kernel/locking/lockdep.c", i32 6442, i32 2}
!1459 = !{ptr @print_held_locks_bug._entry.747, !1458, !"_entry", i1 false, i1 false}
!1460 = !{ptr @print_held_locks_bug._entry_ptr.749, !1458, !"_entry_ptr", i1 false, i1 false}
!1461 = !{ptr @print_held_locks_bug._entry.750, !1462, !"_entry", i1 false, i1 false}
!1462 = !{!"../kernel/locking/lockdep.c", i32 6444, i32 2}
!1463 = !{ptr @print_held_locks_bug._entry_ptr.751, !1462, !"_entry_ptr", i1 false, i1 false}
!1464 = distinct !{null, !1465, !"__warned", i1 false, i1 false}
!1465 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!1466 = !{ptr @.str.752, !1465, !"<string literal>", i1 false, i1 false}
!1467 = !{ptr @.str.753, !1465, !"<string literal>", i1 false, i1 false}
!1468 = !{ptr @.str.754, !1469, !"<string literal>", i1 false, i1 false}
!1469 = !{!"../kernel/locking/lockdep.c", i32 755, i32 3}
!1470 = !{ptr @.str.755, !1469, !"<string literal>", i1 false, i1 false}
!1471 = !{ptr @lockdep_print_held_locks._entry, !1469, !"_entry", i1 false, i1 false}
!1472 = !{ptr @lockdep_print_held_locks._entry_ptr, !1469, !"_entry_ptr", i1 false, i1 false}
!1473 = !{ptr @.str.757, !1474, !"<string literal>", i1 false, i1 false}
!1474 = !{!"../kernel/locking/lockdep.c", i32 757, i32 3}
!1475 = !{ptr @lockdep_print_held_locks._entry.756, !1474, !"_entry", i1 false, i1 false}
!1476 = !{ptr @lockdep_print_held_locks._entry_ptr.758, !1474, !"_entry_ptr", i1 false, i1 false}
!1477 = !{ptr @.str.759, !1474, !"<string literal>", i1 false, i1 false}
!1478 = !{ptr @.str.761, !1479, !"<string literal>", i1 false, i1 false}
!1479 = !{!"../kernel/locking/lockdep.c", i32 766, i32 3}
!1480 = !{ptr @lockdep_print_held_locks._entry.760, !1479, !"_entry", i1 false, i1 false}
!1481 = !{ptr @lockdep_print_held_locks._entry_ptr.762, !1479, !"_entry_ptr", i1 false, i1 false}
!1482 = distinct !{null, !1483, !"__warned", i1 false, i1 false}
!1483 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!1484 = !{ptr @.str.763, !1483, !"<string literal>", i1 false, i1 false}
!1485 = !{ptr @.str.764, !1486, !"<string literal>", i1 false, i1 false}
!1486 = !{!"../kernel/locking/lockdep.c", i32 773, i32 2}
!1487 = !{ptr @.str.765, !1486, !"<string literal>", i1 false, i1 false}
!1488 = !{ptr @print_kernel_ident._entry, !1486, !"_entry", i1 false, i1 false}
!1489 = !{ptr @print_kernel_ident._entry_ptr, !1486, !"_entry_ptr", i1 false, i1 false}
!1490 = !{ptr @.str.766, !1486, !"<string literal>", i1 false, i1 false}
!1491 = !{!"sp"}
!1492 = !{i32 1, !"wchar_size", i32 2}
!1493 = !{i32 1, !"min_enum_size", i32 4}
!1494 = !{i32 8, !"branch-target-enforcement", i32 0}
!1495 = !{i32 8, !"sign-return-address", i32 0}
!1496 = !{i32 8, !"sign-return-address-all", i32 0}
!1497 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!1498 = !{i32 7, !"uwtable", i32 1}
!1499 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!1500 = !{!"branch_weights", i32 2000, i32 1}
!1501 = !{!"branch_weights", i32 1, i32 2000}
!1502 = !{!"auto-init"}
!1503 = !{i64 916017, i64 916078}
!1504 = !{i64 2149529790}
!1505 = !{i64 918749}
!1506 = !{i64 919034}
!1507 = !{i64 2155039, i64 2155062, i64 2155082, i64 2155106, i64 2155122}
!1508 = !{i64 2149643438}
!1509 = !{i64 2149646554}
!1510 = !{i64 2149647236}
!1511 = !{i64 2149642910}
!1512 = !{i64 2149643009, i64 2149643036, i64 2149643083, i64 2149643105, i64 2149643133, i64 2149643153}
!1513 = !{i64 2156756308}
!1514 = !{i64 2156761242}
!1515 = !{i64 2156862174}
!1516 = !{i64 2156867068}
!1517 = !{i8 0, i8 2}
!1518 = !{i64 2156996471}
!1519 = !{i64 2157001405}
!1520 = !{i64 2157050235}
!1521 = !{i64 2157067008}
!1522 = !{i64 2157167440}
!1523 = !{i64 2157184213}
!1524 = !{!"branch_weights", i32 1073205, i32 2146410443}
!1525 = !{i64 2155776493}
!1526 = !{i64 2155793411}
!1527 = !{!"branch_weights", i32 2146410443, i32 1073205}
!1528 = !{i64 2157295225}
!1529 = !{i64 2157311998}
!1530 = !{!"branch_weights", i32 1, i32 4001}
!1531 = !{!"branch_weights", i32 2002, i32 2000}
!1532 = !{i64 2149428179}
!1533 = !{i64 2149428445}
!1534 = !{i64 2157591552}
!1535 = !{i64 2157596446}
!1536 = !{i64 2157726200}
!1537 = !{i64 2157731094}
!1538 = !{i64 2148335152, i64 2148335157, i64 2148335170, i64 2148335214, i64 2148335248, i64 2148335269}
!1539 = !{i64 2154711468}
!1540 = !{i64 2154711757}
!1541 = !{i64 2149436738}
!1542 = !{i64 2149437774}
!1543 = !{i64 2155834890}
!1544 = !{!"branch_weights", i32 4001, i32 1}
!1545 = !{i32 -2, i32 2}
!1546 = !{i64 2156325457}
!1547 = !{i64 2156342230}
!1548 = !{i64 2154728154}
!1549 = !{i64 2154728357}
!1550 = !{i64 2154744388}
!1551 = !{i64 2154744595}
!1552 = !{i64 2154764753}
!1553 = !{i64 2154764958}
!1554 = distinct !{null}
!1555 = distinct !{ptr @hlock_conflict, ptr @noop_count, null, null}
!1556 = !{i64 2156583984}
!1557 = !{i64 2156600757}
!1558 = !{i64 2149453571}
