; ModuleID = '/llk/IR_all_yes/kernel/module.c_pt.bc'
source_filename = "../kernel/module.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+is_module_sig_enforced\22, \22a\22\09"
module asm "\09.weak\09__crc_is_module_sig_enforced\09\09\09\09"
module asm "\09.long\09__crc_is_module_sig_enforced\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_is_module_sig_enforced:\09\09\09\09\09"
module asm "\09.asciz \09\22is_module_sig_enforced\22\09\09\09\09\09"
module asm "__kstrtabns_is_module_sig_enforced:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+register_module_notifier\22, \22a\22\09"
module asm "\09.weak\09__crc_register_module_notifier\09\09\09\09"
module asm "\09.long\09__crc_register_module_notifier\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_register_module_notifier:\09\09\09\09\09"
module asm "\09.asciz \09\22register_module_notifier\22\09\09\09\09\09"
module asm "__kstrtabns_register_module_notifier:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+unregister_module_notifier\22, \22a\22\09"
module asm "\09.weak\09__crc_unregister_module_notifier\09\09\09\09"
module asm "\09.long\09__crc_unregister_module_notifier\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_unregister_module_notifier:\09\09\09\09\09"
module asm "\09.asciz \09\22unregister_module_notifier\22\09\09\09\09\09"
module asm "__kstrtabns_unregister_module_notifier:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__module_put_and_kthread_exit\22, \22a\22\09"
module asm "\09.weak\09__crc___module_put_and_kthread_exit\09\09\09\09"
module asm "\09.long\09__crc___module_put_and_kthread_exit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___module_put_and_kthread_exit:\09\09\09\09\09"
module asm "\09.asciz \09\22__module_put_and_kthread_exit\22\09\09\09\09\09"
module asm "__kstrtabns___module_put_and_kthread_exit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__tracepoint_module_get\22, \22a\22\09"
module asm "\09.weak\09__crc___tracepoint_module_get\09\09\09\09"
module asm "\09.long\09__crc___tracepoint_module_get\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___tracepoint_module_get:\09\09\09\09\09"
module asm "\09.asciz \09\22__tracepoint_module_get\22\09\09\09\09\09"
module asm "__kstrtabns___tracepoint_module_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__traceiter_module_get\22, \22a\22\09"
module asm "\09.weak\09__crc___traceiter_module_get\09\09\09\09"
module asm "\09.long\09__crc___traceiter_module_get\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___traceiter_module_get:\09\09\09\09\09"
module asm "\09.asciz \09\22__traceiter_module_get\22\09\09\09\09\09"
module asm "__kstrtabns___traceiter_module_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__SCK__tp_func_module_get\22, \22a\22\09"
module asm "\09.weak\09__crc___SCK__tp_func_module_get\09\09\09\09"
module asm "\09.long\09__crc___SCK__tp_func_module_get\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SCK__tp_func_module_get:\09\09\09\09\09"
module asm "\09.asciz \09\22__SCK__tp_func_module_get\22\09\09\09\09\09"
module asm "__kstrtabns___SCK__tp_func_module_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+module_refcount\22, \22a\22\09"
module asm "\09.weak\09__crc_module_refcount\09\09\09\09"
module asm "\09.long\09__crc_module_refcount\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_module_refcount:\09\09\09\09\09"
module asm "\09.asciz \09\22module_refcount\22\09\09\09\09\09"
module asm "__kstrtabns_module_refcount:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__symbol_put\22, \22a\22\09"
module asm "\09.weak\09__crc___symbol_put\09\09\09\09"
module asm "\09.long\09__crc___symbol_put\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___symbol_put:\09\09\09\09\09"
module asm "\09.asciz \09\22__symbol_put\22\09\09\09\09\09"
module asm "__kstrtabns___symbol_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+symbol_put_addr\22, \22a\22\09"
module asm "\09.weak\09__crc_symbol_put_addr\09\09\09\09"
module asm "\09.long\09__crc_symbol_put_addr\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_symbol_put_addr:\09\09\09\09\09"
module asm "\09.asciz \09\22symbol_put_addr\22\09\09\09\09\09"
module asm "__kstrtabns_symbol_put_addr:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__module_get\22, \22a\22\09"
module asm "\09.weak\09__crc___module_get\09\09\09\09"
module asm "\09.long\09__crc___module_get\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___module_get:\09\09\09\09\09"
module asm "\09.asciz \09\22__module_get\22\09\09\09\09\09"
module asm "__kstrtabns___module_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+try_module_get\22, \22a\22\09"
module asm "\09.weak\09__crc_try_module_get\09\09\09\09"
module asm "\09.long\09__crc_try_module_get\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_try_module_get:\09\09\09\09\09"
module asm "\09.asciz \09\22try_module_get\22\09\09\09\09\09"
module asm "__kstrtabns_try_module_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+module_put\22, \22a\22\09"
module asm "\09.weak\09__crc_module_put\09\09\09\09"
module asm "\09.long\09__crc_module_put\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_module_put:\09\09\09\09\09"
module asm "\09.asciz \09\22module_put\22\09\09\09\09\09"
module asm "__kstrtabns_module_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__symbol_get\22, \22a\22\09"
module asm "\09.weak\09__crc___symbol_get\09\09\09\09"
module asm "\09.long\09__crc___symbol_get\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___symbol_get:\09\09\09\09\09"
module asm "\09.asciz \09\22__symbol_get\22\09\09\09\09\09"
module asm "__kstrtabns___symbol_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+module_layout\22, \22a\22\09"
module asm "\09.weak\09__crc_module_layout\09\09\09\09"
module asm "\09.long\09__crc_module_layout\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_module_layout:\09\09\09\09\09"
module asm "\09.asciz \09\22module_layout\22\09\09\09\09\09"
module asm "__kstrtabns_module_layout:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_event_fields = type { ptr, %union.anon.72 }
%union.anon.72 = type { %struct.anon.73 }
%struct.anon.73 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.74, %struct.trace_event, ptr, ptr, %union.anon.75, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.74 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.75 = type { ptr }
%union.anon.99 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.100 = type { %struct.bpf_raw_event_map }
%union.anon.101 = type { %struct.bpf_raw_event_map }
%union.anon.102 = type { %struct.bpf_raw_event_map }
%union.anon.103 = type { %struct.bpf_raw_event_map }
%struct.kernel_param_ops = type { i32, ptr, ptr, ptr }
%struct.kernel_param = type { ptr, ptr, ptr, i16, i8, i8, %union.anon.71 }
%union.anon.71 = type { ptr }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.2 }
%union.anon.2 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.cpumask = type { [1 x i32] }
%struct.syscall_metadata = type { ptr, i32, i32, ptr, ptr, %struct.list_head, ptr, ptr }
%struct.module_attribute = type { %struct.attribute, ptr, ptr, ptr, ptr, ptr }
%struct.attribute = type { ptr, i16, i8, ptr, %struct.lock_class_key }
%struct.lock_class_key = type { %union.anon.0 }
%union.anon.0 = type { %struct.hlist_node }
%struct.mod_tree_root = type { %struct.latch_tree_root, i32, i32 }
%struct.latch_tree_root = type { %struct.seqcount_latch_t, [2 x %struct.rb_root] }
%struct.seqcount_latch_t = type { %struct.seqcount }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.rb_root = type { ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.trace_print_flags = type { i32, ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.symsearch = type { ptr, ptr, ptr, i32 }
%struct.taint_flag = type { i8, i8, i8 }
%struct.cpu_cache_fns = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.kobj_type = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.llist_head = type { ptr }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.proc_ops = type { i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.seq_operations = type { ptr, ptr, ptr, ptr }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.module = type { i32, %struct.list_head, [60 x i8], [20 x i8], %struct.module_kobject, ptr, ptr, ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, i32, ptr, ptr, i8, i8, i8, i32, ptr, ptr, [112 x i8], %struct.module_layout, %struct.module_layout, %struct.mod_arch_specific, i32, i32, %struct.list_head, ptr, ptr, %struct.mod_kallsyms, ptr, ptr, ptr, ptr, i32, ptr, i32, i32, ptr, i32, ptr, i32, ptr, ptr, i32, i32, ptr, ptr, i32, ptr, i32, i32, ptr, ptr, i32, ptr, i32, i32, ptr, %struct.list_head, %struct.list_head, ptr, %struct.atomic_t, ptr, i32, [48 x i8] }
%struct.module_kobject = type { %struct.kobject, ptr, ptr, ptr, ptr }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.module_layout = type { ptr, i32, i32, i32, i32, %struct.mod_tree_node }
%struct.mod_tree_node = type { ptr, %struct.latch_tree_node }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%struct.rb_node = type { i32, ptr, ptr }
%struct.mod_arch_specific = type { [7 x ptr], %struct.mod_plt_sec, %struct.mod_plt_sec }
%struct.mod_plt_sec = type { ptr, ptr, i32 }
%struct.mod_kallsyms = type { ptr, i32, ptr, ptr }
%struct.trace_event_raw_module_load = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.trace_event_raw_module_free = type { %struct.trace_entry, i32, [0 x i8] }
%struct.trace_event_raw_module_refcnt = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_module_request = type { %struct.trace_entry, i32, i8, i32, [0 x i8] }
%struct.find_symbol_arg = type { ptr, i8, i8, ptr, ptr, ptr, i32 }
%struct.load_info = type { ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, i32, i32, i32, ptr, i32, i8, i32, %struct.anon.105 }
%struct.anon.105 = type { i32, i32, i32, i32, i32, i32 }
%struct.elf32_sym = type { i32, i32, i32, i8, i8, i16 }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.module_notes_attrs = type { ptr, i32, [0 x %struct.bin_attribute] }
%struct.bin_attribute = type { %struct.attribute, i32, ptr, ptr, ptr, ptr, ptr }
%struct.module_sect_attrs = type { %struct.attribute_group, i32, [0 x %struct.module_sect_attr] }
%struct.attribute_group = type { ptr, ptr, ptr, ptr, ptr }
%struct.module_sect_attr = type { %struct.bin_attribute, i32 }
%struct.elf32_hdr = type { [16 x i8], i16, i16, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16 }
%struct.elf32_shdr = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.60, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.30 }
%struct.llist_node = type { ptr }
%union.anon.30 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.32 }
%union.anon.32 = type { %struct.anon.33 }
%struct.anon.33 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.kuid_t = type { i32 }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.tlbflush_unmap_batch = type {}
%union.anon.60 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.exception_table_entry = type { i32, i32 }
%struct.mod_initfree = type { %struct.llist_node, ptr }
%struct.modversion_info = type { i32, [60 x i8] }
%struct.module_use = type { %struct.list_head, %struct.list_head, ptr, ptr }
%struct.vm_struct = type { ptr, ptr, i32, i32, ptr, i32, i32, ptr }
%struct.file = type { %union.anon.16, %struct.path, ptr, ptr, %struct.spinlock, i32, %struct.atomic_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, ptr, %struct.file_ra_state, i64, ptr, ptr, ptr, ptr, i32, i32 }
%union.anon.16 = type { %struct.callback_head }
%struct.path = type { ptr, ptr }
%struct.fown_struct = type { %struct.rwlock_t, ptr, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.file_ra_state = type { i32, i32, i32, i32, i32, i64 }
%struct.seq_file = type { ptr, i32, i32, i32, i32, i64, i64, %struct.mutex, ptr, i32, ptr, ptr }

@__tpstrtab_module_load = internal constant [12 x i8] c"module_load\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_module_load = dso_local global %struct.static_call_key { ptr @__traceiter_module_load }, align 4
@__tracepoint_module_load = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_module_load, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_module_load, ptr null, ptr @__traceiter_module_load, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_module_load = internal constant ptr @__tracepoint_module_load, section "__tracepoints_ptrs", align 4
@__tpstrtab_module_free = internal constant [12 x i8] c"module_free\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_module_free = dso_local global %struct.static_call_key { ptr @__traceiter_module_free }, align 4
@__tracepoint_module_free = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_module_free, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_module_free, ptr null, ptr @__traceiter_module_free, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_module_free = internal constant ptr @__tracepoint_module_free, section "__tracepoints_ptrs", align 4
@__tpstrtab_module_get = internal constant [11 x i8] c"module_get\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_module_get = dso_local global %struct.static_call_key { ptr @__traceiter_module_get }, align 4
@__tracepoint_module_get = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_module_get, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_module_get, ptr null, ptr @__traceiter_module_get, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_module_get = internal constant ptr @__tracepoint_module_get, section "__tracepoints_ptrs", align 4
@__tpstrtab_module_put = internal constant [11 x i8] c"module_put\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_module_put = dso_local global %struct.static_call_key { ptr @__traceiter_module_put }, align 4
@__tracepoint_module_put = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_module_put, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_module_put, ptr null, ptr @__traceiter_module_put, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_module_put = internal constant ptr @__tracepoint_module_put, section "__tracepoints_ptrs", align 4
@__tpstrtab_module_request = internal constant [15 x i8] c"module_request\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_module_request = dso_local global %struct.static_call_key { ptr @__traceiter_module_request }, align 4
@__tracepoint_module_request = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_module_request, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_module_request, ptr null, ptr @__traceiter_module_request, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_module_request = internal constant ptr @__tracepoint_module_request, section "__tracepoints_ptrs", align 4
@str__module__trace_system_name = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"module\00", [25 x i8] zeroinitializer }, align 32
@trace_event_fields_module_load = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.28, %union.anon.72 { %struct.anon.73 { ptr @.str.29, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.30, %union.anon.72 { %struct.anon.73 { ptr @.str.31, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_module_load = internal global %struct.trace_event_class { ptr @str__module__trace_system_name, ptr @trace_event_raw_event_module_load, ptr @perf_trace_module_load, ptr @trace_event_reg, ptr @trace_event_fields_module_load, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_module_load, i64 24), ptr getelementptr (i8, ptr @event_class_module_load, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_module_load = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_module_load, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_module_load = internal global { [165 x i8], [59 x i8] } { [165 x i8] c"\22%s %s\22, __get_str(name), __print_flags(REC->taints, \22\22, { (1UL << 0), \22P\22 }, { (1UL << 12), \22O\22 }, { (1UL << 1), \22F\22 }, { (1UL << 10), \22C\22 }, { (1UL << 13), \22E\22 })\00", [59 x i8] zeroinitializer }, align 32
@event_module_load = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_module_load, %union.anon.74 { ptr @__tracepoint_module_load }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_module_load }, ptr @print_fmt_module_load, ptr null, %union.anon.75 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_module_load = internal global ptr @event_module_load, section "_ftrace_events", align 4
@trace_event_fields_module_free = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.30, %union.anon.72 { %struct.anon.73 { ptr @.str.31, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_module_free = internal global %struct.trace_event_class { ptr @str__module__trace_system_name, ptr @trace_event_raw_event_module_free, ptr @perf_trace_module_free, ptr @trace_event_reg, ptr @trace_event_fields_module_free, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_module_free, i64 24), ptr getelementptr (i8, ptr @event_class_module_free, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_module_free = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_module_free, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_module_free = internal global { [22 x i8], [42 x i8] } { [22 x i8] c"\22%s\22, __get_str(name)\00", [42 x i8] zeroinitializer }, align 32
@event_module_free = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_module_free, %union.anon.74 { ptr @__tracepoint_module_free }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_module_free }, ptr @print_fmt_module_free, ptr null, %union.anon.75 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_module_free = internal global ptr @event_module_free, section "_ftrace_events", align 4
@trace_event_fields_module_refcnt = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.40, %union.anon.72 { %struct.anon.73 { ptr @.str.41, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.42, %union.anon.72 { %struct.anon.73 { ptr @.str.43, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.30, %union.anon.72 { %struct.anon.73 { ptr @.str.31, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_module_refcnt = internal global %struct.trace_event_class { ptr @str__module__trace_system_name, ptr @trace_event_raw_event_module_refcnt, ptr @perf_trace_module_refcnt, ptr @trace_event_reg, ptr @trace_event_fields_module_refcnt, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_module_refcnt, i64 24), ptr getelementptr (i8, ptr @event_class_module_refcnt, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_module_refcnt = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_module_refcnt, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_module_refcnt = internal global { [76 x i8], [52 x i8] } { [76 x i8] c"\22%s call_site=%ps refcnt=%d\22, __get_str(name), (void *)REC->ip, REC->refcnt\00", [52 x i8] zeroinitializer }, align 32
@event_module_get = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_module_refcnt, %union.anon.74 { ptr @__tracepoint_module_get }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_module_refcnt }, ptr @print_fmt_module_refcnt, ptr null, %union.anon.75 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_module_get = internal global ptr @event_module_get, section "_ftrace_events", align 4
@event_module_put = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_module_refcnt, %union.anon.74 { ptr @__tracepoint_module_put }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_module_refcnt }, ptr @print_fmt_module_refcnt, ptr null, %union.anon.75 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_module_put = internal global ptr @event_module_put, section "_ftrace_events", align 4
@trace_event_fields_module_request = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.40, %union.anon.72 { %struct.anon.73 { ptr @.str.41, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.45, %union.anon.72 { %struct.anon.73 { ptr @.str.46, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.30, %union.anon.72 { %struct.anon.73 { ptr @.str.31, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_module_request = internal global %struct.trace_event_class { ptr @str__module__trace_system_name, ptr @trace_event_raw_event_module_request, ptr @perf_trace_module_request, ptr @trace_event_reg, ptr @trace_event_fields_module_request, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_module_request, i64 24), ptr getelementptr (i8, ptr @event_class_module_request, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_module_request = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_module_request, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_module_request = internal global { [77 x i8], [51 x i8] } { [77 x i8] c"\22%s wait=%d call_site=%ps\22, __get_str(name), (int)REC->wait, (void *)REC->ip\00", [51 x i8] zeroinitializer }, align 32
@event_module_request = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_module_request, %union.anon.74 { ptr @__tracepoint_module_request }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_module_request }, ptr @print_fmt_module_request, ptr null, %union.anon.75 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_module_request = internal global ptr @event_module_request, section "_ftrace_events", align 4
@__bpf_trace_tp_map_module_load = internal global %union.anon.99 { %struct.bpf_raw_event_map { ptr @__tracepoint_module_load, ptr @__bpf_trace_module_load, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_module_free = internal global %union.anon.100 { %struct.bpf_raw_event_map { ptr @__tracepoint_module_free, ptr @__bpf_trace_module_free, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_module_get = internal global %union.anon.101 { %struct.bpf_raw_event_map { ptr @__tracepoint_module_get, ptr @__bpf_trace_module_refcnt, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_module_put = internal global %union.anon.102 { %struct.bpf_raw_event_map { ptr @__tracepoint_module_put, ptr @__bpf_trace_module_refcnt, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_module_request = internal global %union.anon.103 { %struct.bpf_raw_event_map { ptr @__tracepoint_module_request, ptr @__bpf_trace_module_request, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@modules = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @modules, ptr @modules }, [24 x i8] zeroinitializer }, align 32
@kdb_modules = dso_local global { ptr, [28 x i8] } { ptr @modules, [28 x i8] zeroinitializer }, align 32
@__param_str_sig_enforce = internal constant [19 x i8] c"module.sig_enforce\00", align 1
@param_ops_bool_enable_only = external dso_local constant %struct.kernel_param_ops, align 4
@sig_enforce = internal global { i8, [31 x i8] } { i8 1, [31 x i8] zeroinitializer }, align 32
@__param_sig_enforce = internal constant %struct.kernel_param { ptr @__param_str_sig_enforce, ptr null, ptr @param_ops_bool_enable_only, i16 420, i8 -1, i8 0, %union.anon.71 { ptr @sig_enforce } }, section "__param", align 4
@__UNIQUE_ID_sig_enforcetype278 = internal constant [45 x i8] c"module.parmtype=sig_enforce:bool_enable_only\00", section ".modinfo", align 1
@__kstrtab_is_module_sig_enforced = external dso_local constant [0 x i8], align 1
@__kstrtabns_is_module_sig_enforced = external dso_local constant [0 x i8], align 1
@__ksymtab_is_module_sig_enforced = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @is_module_sig_enforced to i32), ptr @__kstrtab_is_module_sig_enforced, ptr @__kstrtabns_is_module_sig_enforced }, section "___ksymtab+is_module_sig_enforced", align 4
@modules_disabled = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@__param_str_nomodule = internal constant [9 x i8] c"nomodule\00", align 1
@param_ops_bint = external dso_local constant %struct.kernel_param_ops, align 4
@__param_nomodule = internal constant %struct.kernel_param { ptr @__param_str_nomodule, ptr null, ptr @param_ops_bint, i16 0, i8 -1, i8 0, %union.anon.71 { ptr @modules_disabled } }, section "__param", align 4
@module_notify_list = internal global { %struct.blocking_notifier_head, [60 x i8] } { %struct.blocking_notifier_head { %struct.rw_semaphore { %struct.atomic_t zeroinitializer, %struct.atomic_t zeroinitializer, %struct.optimistic_spin_queue zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.48, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.list_head { ptr getelementptr (i8, ptr @module_notify_list, i64 56), ptr getelementptr (i8, ptr @module_notify_list, i64 56) }, ptr @module_notify_list, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.49, i8 0, i8 4, i8 0, i32 0, i32 0 } }, ptr null }, [60 x i8] zeroinitializer }, align 32
@__kstrtab_register_module_notifier = external dso_local constant [0 x i8], align 1
@__kstrtabns_register_module_notifier = external dso_local constant [0 x i8], align 1
@__ksymtab_register_module_notifier = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @register_module_notifier to i32), ptr @__kstrtab_register_module_notifier, ptr @__kstrtabns_register_module_notifier }, section "___ksymtab+register_module_notifier", align 4
@__kstrtab_unregister_module_notifier = external dso_local constant [0 x i8], align 1
@__kstrtabns_unregister_module_notifier = external dso_local constant [0 x i8], align 1
@__ksymtab_unregister_module_notifier = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @unregister_module_notifier to i32), ptr @__kstrtab_unregister_module_notifier, ptr @__kstrtabns_unregister_module_notifier }, section "___ksymtab+unregister_module_notifier", align 4
@__kstrtab___module_put_and_kthread_exit = external dso_local constant [0 x i8], align 1
@__kstrtabns___module_put_and_kthread_exit = external dso_local constant [0 x i8], align 1
@__ksymtab___module_put_and_kthread_exit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__module_put_and_kthread_exit to i32), ptr @__kstrtab___module_put_and_kthread_exit, ptr @__kstrtabns___module_put_and_kthread_exit }, section "___ksymtab+__module_put_and_kthread_exit", align 4
@__is_module_percpu_address.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"kernel/module.c\00", [16 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"RCU-list traversed in non-reader section!\00", [54 x i8] zeroinitializer }, align 32
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@__kstrtab___tracepoint_module_get = external dso_local constant [0 x i8], align 1
@__kstrtabns___tracepoint_module_get = external dso_local constant [0 x i8], align 1
@__ksymtab___tracepoint_module_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__tracepoint_module_get to i32), ptr @__kstrtab___tracepoint_module_get, ptr @__kstrtabns___tracepoint_module_get }, section "___ksymtab+__tracepoint_module_get", align 4
@__kstrtab___traceiter_module_get = external dso_local constant [0 x i8], align 1
@__kstrtabns___traceiter_module_get = external dso_local constant [0 x i8], align 1
@__ksymtab___traceiter_module_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__traceiter_module_get to i32), ptr @__kstrtab___traceiter_module_get, ptr @__kstrtabns___traceiter_module_get }, section "___ksymtab+__traceiter_module_get", align 4
@__kstrtab___SCK__tp_func_module_get = external dso_local constant [0 x i8], align 1
@__kstrtabns___SCK__tp_func_module_get = external dso_local constant [0 x i8], align 1
@__ksymtab___SCK__tp_func_module_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SCK__tp_func_module_get to i32), ptr @__kstrtab___SCK__tp_func_module_get, ptr @__kstrtabns___SCK__tp_func_module_get }, section "___ksymtab+__SCK__tp_func_module_get", align 4
@__kstrtab_module_refcount = external dso_local constant [0 x i8], align 1
@__kstrtabns_module_refcount = external dso_local constant [0 x i8], align 1
@__ksymtab_module_refcount = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @module_refcount to i32), ptr @__kstrtab_module_refcount, ptr @__kstrtabns_module_refcount }, section "___ksymtab+module_refcount", align 4
@event_class_syscall_enter = external dso_local global %struct.trace_event_class, align 4
@.str.2 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"sys_enter_delete_module\00", [40 x i8] zeroinitializer }, align 32
@enter_syscall_print_funcs = external dso_local global %struct.trace_event_functions, align 4
@__syscall_meta__delete_module = internal global %struct.syscall_metadata { ptr @.str.4, i32 -1, i32 2, ptr @types__delete_module, ptr @args__delete_module, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__delete_module, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__delete_module, i64 20) }, ptr @event_enter__delete_module, ptr @event_exit__delete_module }, align 4
@event_enter__delete_module = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.74 { ptr @.str.2 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.75 zeroinitializer, ptr @__syscall_meta__delete_module, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__delete_module = internal global ptr @event_enter__delete_module, section "_ftrace_events", align 4
@event_class_syscall_exit = external dso_local global %struct.trace_event_class, align 4
@.str.3 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"sys_exit_delete_module\00", [41 x i8] zeroinitializer }, align 32
@exit_syscall_print_funcs = external dso_local global %struct.trace_event_functions, align 4
@event_exit__delete_module = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.74 { ptr @.str.3 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.75 zeroinitializer, ptr @__syscall_meta__delete_module, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__delete_module = internal global ptr @event_exit__delete_module, section "_ftrace_events", align 4
@.str.4 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sys_delete_module\00", [46 x i8] zeroinitializer }, align 32
@types__delete_module = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.52, ptr @.str.28], [24 x i8] zeroinitializer }, align 32
@args__delete_module = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.53, ptr @.str.54], [24 x i8] zeroinitializer }, align 32
@__p_syscall_meta__delete_module = internal global ptr @__syscall_meta__delete_module, section "__syscalls_metadata", align 4
@__kstrtab___symbol_put = external dso_local constant [0 x i8], align 1
@__kstrtabns___symbol_put = external dso_local constant [0 x i8], align 1
@__ksymtab___symbol_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__symbol_put to i32), ptr @__kstrtab___symbol_put, ptr @__kstrtabns___symbol_put }, section "___ksymtab+__symbol_put", align 4
@__kstrtab_symbol_put_addr = external dso_local constant [0 x i8], align 1
@__kstrtabns_symbol_put_addr = external dso_local constant [0 x i8], align 1
@__ksymtab_symbol_put_addr = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @symbol_put_addr to i32), ptr @__kstrtab_symbol_put_addr, ptr @__kstrtabns_symbol_put_addr }, section "___ksymtab_gpl+symbol_put_addr", align 4
@__kstrtab___module_get = external dso_local constant [0 x i8], align 1
@__kstrtabns___module_get = external dso_local constant [0 x i8], align 1
@__ksymtab___module_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__module_get to i32), ptr @__kstrtab___module_get, ptr @__kstrtabns___module_get }, section "___ksymtab+__module_get", align 4
@__kstrtab_try_module_get = external dso_local constant [0 x i8], align 1
@__kstrtabns_try_module_get = external dso_local constant [0 x i8], align 1
@__ksymtab_try_module_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @try_module_get to i32), ptr @__kstrtab_try_module_get, ptr @__kstrtabns_try_module_get }, section "___ksymtab+try_module_get", align 4
@__kstrtab_module_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_module_put = external dso_local constant [0 x i8], align 1
@__ksymtab_module_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @module_put to i32), ptr @__kstrtab_module_put, ptr @__kstrtabns_module_put }, section "___ksymtab+module_put", align 4
@.str.5 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"uevent\00", [25 x i8] zeroinitializer }, align 32
@module_uevent = dso_local global { %struct.module_attribute, [56 x i8] } { %struct.module_attribute { %struct.attribute { ptr @.str.5, i16 128, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr null, ptr @store_uevent, ptr null, ptr null, ptr null }, [56 x i8] zeroinitializer }, align 32
@__kstrtab___symbol_get = external dso_local constant [0 x i8], align 1
@__kstrtabns___symbol_get = external dso_local constant [0 x i8], align 1
@__ksymtab___symbol_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__symbol_get to i32), ptr @__kstrtab___symbol_get, ptr @__kstrtabns___symbol_get }, section "___ksymtab_gpl+__symbol_get", align 4
@high_memory = external dso_local local_unnamed_addr global ptr, align 4
@pgprot_kernel = external dso_local local_unnamed_addr global i32, align 4
@.str.6 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c".init\00", [26 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c".exit\00", [26 x i8] zeroinitializer }, align 32
@param_ops_charp = external dso_local constant %struct.kernel_param_ops, align 4
@module_blacklist = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@__param_module_blacklist = internal constant %struct.kernel_param { ptr @___asan_gen_.411, ptr null, ptr @param_ops_charp, i16 256, i8 -1, i8 0, %union.anon.71 { ptr @module_blacklist } }, section "__param", align 4
@.str.8 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"sys_enter_init_module\00", [42 x i8] zeroinitializer }, align 32
@__syscall_meta__init_module = internal global %struct.syscall_metadata { ptr @.str.10, i32 -1, i32 3, ptr @types__init_module, ptr @args__init_module, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__init_module, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__init_module, i64 20) }, ptr @event_enter__init_module, ptr @event_exit__init_module }, align 4
@event_enter__init_module = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.74 { ptr @.str.8 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.75 zeroinitializer, ptr @__syscall_meta__init_module, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__init_module = internal global ptr @event_enter__init_module, section "_ftrace_events", align 4
@.str.9 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"sys_exit_init_module\00", [43 x i8] zeroinitializer }, align 32
@event_exit__init_module = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.74 { ptr @.str.9 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.75 zeroinitializer, ptr @__syscall_meta__init_module, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__init_module = internal global ptr @event_exit__init_module, section "_ftrace_events", align 4
@.str.10 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sys_init_module\00", [16 x i8] zeroinitializer }, align 32
@types__init_module = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.66, ptr @.str.40, ptr @.str.52], [20 x i8] zeroinitializer }, align 32
@args__init_module = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.67, ptr @.str.68, ptr @.str.69], [20 x i8] zeroinitializer }, align 32
@__p_syscall_meta__init_module = internal global ptr @__syscall_meta__init_module, section "__syscalls_metadata", align 4
@.str.11 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"sys_enter_finit_module\00", [41 x i8] zeroinitializer }, align 32
@__syscall_meta__finit_module = internal global %struct.syscall_metadata { ptr @.str.13, i32 -1, i32 3, ptr @types__finit_module, ptr @args__finit_module, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__finit_module, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__finit_module, i64 20) }, ptr @event_enter__finit_module, ptr @event_exit__finit_module }, align 4
@event_enter__finit_module = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.74 { ptr @.str.11 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.75 zeroinitializer, ptr @__syscall_meta__finit_module, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__finit_module = internal global ptr @event_enter__finit_module, section "_ftrace_events", align 4
@.str.12 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"sys_exit_finit_module\00", [42 x i8] zeroinitializer }, align 32
@event_exit__finit_module = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.74 { ptr @.str.12 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.75 zeroinitializer, ptr @__syscall_meta__finit_module, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__finit_module = internal global ptr @event_exit__finit_module, section "_ftrace_events", align 4
@.str.13 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"sys_finit_module\00", [47 x i8] zeroinitializer }, align 32
@types__finit_module = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.42, ptr @.str.52, ptr @.str.42], [20 x i8] zeroinitializer }, align 32
@args__finit_module = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.287, ptr @.str.69, ptr @.str.54], [20 x i8] zeroinitializer }, align 32
@__p_syscall_meta__finit_module = internal global ptr @__syscall_meta__finit_module, section "__syscalls_metadata", align 4
@lookup_module_symbol_name.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@lookup_module_symbol_attrs.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@module_get_kallsym.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@module_get_kallsym.__warned.14 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.15 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@module_kallsyms_lookup_name.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__initcall__kmod_module__325_4666_proc_modules_init6 = internal global ptr @proc_modules_init, section ".initcall6.init", align 4
@mod_tree = internal global %struct.mod_tree_root { %struct.latch_tree_root zeroinitializer, i32 -1, i32 0 }, section ".data..cacheline_aligned", align 128
@print_modules._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.16, ptr @.str.17, ptr @.str, i32 4783, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Modules linked in:\00", [45 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"print_modules\00", [18 x i8] zeroinitializer }, align 32
@print_modules._entry_ptr = internal global ptr @print_modules._entry, section ".printk_index", align 4
@print_modules.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@print_modules._entry.18 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.17, ptr @.str, i32 4789, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"\01c %s%s\00", [24 x i8] zeroinitializer }, align 32
@print_modules._entry_ptr.20 = internal global ptr @print_modules._entry.18, section ".printk_index", align 4
@last_unloaded_module = internal global { [61 x i8], [35 x i8] } zeroinitializer, align 32
@print_modules._entry.21 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.22, ptr @.str.17, ptr @.str, i32 4793, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"\01c [last unloaded: %s]\00", [41 x i8] zeroinitializer }, align 32
@print_modules._entry_ptr.23 = internal global ptr @print_modules._entry.21, section ".printk_index", align 4
@print_modules._entry.24 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.25, ptr @.str.17, ptr @.str, i32 4794, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"\01c\0A\00", [28 x i8] zeroinitializer }, align 32
@print_modules._entry_ptr.26 = internal global ptr @print_modules._entry.24, section ".printk_index", align 4
@__kstrtab_module_layout = external dso_local constant [0 x i8], align 1
@__kstrtabns_module_layout = external dso_local constant [0 x i8], align 1
@__ksymtab_module_layout = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @module_layout to i32), ptr @__kstrtab_module_layout, ptr @__kstrtabns_module_layout }, section "___ksymtab+module_layout", align 4
@.str.27 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"(null)\00", [25 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"taints\00", [25 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"__data_loc char[]\00", [46 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"name\00", [27 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"%s %s\0A\00", [25 x i8] zeroinitializer }, align 32
@trace_raw_output_module_load.__flags = internal constant { [6 x %struct.trace_print_flags], [48 x i8] } { [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.33 }, %struct.trace_print_flags { i32 4096, ptr @.str.34 }, %struct.trace_print_flags { i32 2, ptr @.str.35 }, %struct.trace_print_flags { i32 1024, ptr @.str.36 }, %struct.trace_print_flags { i32 8192, ptr @.str.37 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"P\00", [30 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"O\00", [30 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"F\00", [30 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"C\00", [30 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"E\00", [30 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@.str.39 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%s\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unsigned long\00", [18 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"ip\00", [29 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"refcnt\00", [25 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"%s call_site=%ps refcnt=%d\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"bool\00", [27 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"wait\00", [27 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"%s wait=%d call_site=%ps\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"(module_notify_list).rwsem.wait_lock\00", [59 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"(module_notify_list).rwsem\00", [37 x i8] zeroinitializer }, align 32
@find_module_all.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@module_mutex = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.50, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @module_mutex, i64 52), ptr getelementptr (i8, ptr @module_mutex, i64 52) }, ptr @module_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.51, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"module_mutex.wait_lock\00", [41 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"module_mutex\00", [19 x i8] zeroinitializer }, align 32
@__boot_cpu_id = external dso_local local_unnamed_addr global i32, align 4
@.str.52 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"const char *\00", [19 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"name_user\00", [22 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"flags\00", [26 x i8] zeroinitializer }, align 32
@__do_sys_delete_module.__UNIQUE_ID_ddebug290 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.55, ptr @.str.56, ptr @.str, ptr @.str.57, i8 0, i8 -20, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.55 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"module\00", [25 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"__do_sys_delete_module\00", [41 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"%s already dying\0A\00", [46 x i8] zeroinitializer }, align 32
@module_wq = internal global { %struct.wait_queue_head, [44 x i8] } { %struct.wait_queue_head { %struct.spinlock { %union.anon.1 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.63, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, %struct.list_head { ptr getelementptr (i8, ptr @module_wq, i64 44), ptr getelementptr (i8, ptr @module_wq, i64 44) } }, [44 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"include/trace/events/module.h\00", [34 x i8] zeroinitializer }, align 32
@trace_module_free.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.59 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@init_completion.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.60 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"&x->wait\00", [23 x i8] zeroinitializer }, align 32
@module_unload_free.__UNIQUE_ID_ddebug289 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.55, ptr @.str.61, ptr @.str, ptr @.str.62, i8 0, i8 -46, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.61 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"module_unload_free\00", [45 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"%s unusing %s\0A\00", [17 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"module_wq.lock\00", [17 x i8] zeroinitializer }, align 32
@find_symbol.arr = internal constant { [2 x %struct.symsearch], [32 x i8] } { [2 x %struct.symsearch] [%struct.symsearch { ptr @__start___ksymtab, ptr @__stop___ksymtab, ptr @__start___kcrctab, i32 0 }, %struct.symsearch { ptr @__start___ksymtab_gpl, ptr @__stop___ksymtab_gpl, ptr @__start___kcrctab_gpl, i32 1 }], [32 x i8] zeroinitializer }, align 32
@__start___ksymtab = external dso_local constant [0 x %struct.kernel_symbol], align 4
@__stop___ksymtab = external dso_local constant [0 x %struct.kernel_symbol], align 4
@__start___kcrctab = external dso_local constant [0 x i32], align 4
@__start___ksymtab_gpl = external dso_local constant [0 x %struct.kernel_symbol], align 4
@__stop___ksymtab_gpl = external dso_local constant [0 x %struct.kernel_symbol], align 4
@__start___kcrctab_gpl = external dso_local constant [0 x i32], align 4
@find_symbol.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@find_symbol.__UNIQUE_ID_ddebug281 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.55, ptr @.str.64, ptr @.str, ptr @.str.65, i8 0, i8 -118, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.64 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"find_symbol\00", [20 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Failed to find symbol %s\0A\00", [38 x i8] zeroinitializer }, align 32
@trace_module_get.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_module_put.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.66 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"void *\00", [25 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"umod\00", [27 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"len\00", [28 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"uargs\00", [26 x i8] zeroinitializer }, align 32
@__do_sys_init_module.__UNIQUE_ID_ddebug309 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.55, ptr @.str.70, ptr @.str, ptr @.str.71, i8 4, i8 21, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.70 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"__do_sys_init_module\00", [43 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"init_module: umod=%p, len=%lu, uargs=%p\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"init_module\00", [20 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/linux/thread_info.h\00", [36 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/uaccess.h\00", [40 x i8] zeroinitializer }, align 32
@load_module._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.76, ptr @.str.77, ptr @.str, i32 3987, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"\013Module %s is blacklisted\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"load_module\00", [20 x i8] zeroinitializer }, align 32
@load_module._entry_ptr = internal global ptr @load_module._entry, section ".printk_index", align 4
@load_module.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@load_module._entry.78 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.79, ptr @.str.77, ptr @.str, i32 4020, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [91 x i8], [37 x i8] } { [91 x i8] c"\015%s: module verification failed: signature and/or required key missing - tainting kernel\0A\00", [37 x i8] zeroinitializer }, align 32
@load_module._entry_ptr.80 = internal global ptr @load_module._entry.78, section ".printk_index", align 4
@load_module._entry.81 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.82, ptr @.str.77, ptr @.str, i32 4101, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\014%s: parameters '%s' after `--' ignored\0A\00", [54 x i8] zeroinitializer }, align 32
@load_module._entry_ptr.83 = internal global ptr @load_module._entry.81, section ".printk_index", align 4
@.str.84 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"~Module signature appended~\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"unsigned module\00", [16 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"module with unsupported crypto\00", [33 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"module with unavailable key\00", [36 x i8] zeroinitializer }, align 32
@module_sig_check._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.88, ptr @.str.89, ptr @.str, i32 2930, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"\015Loading of %s is rejected\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"module_sig_check\00", [47 x i8] zeroinitializer }, align 32
@module_sig_check._entry_ptr = internal global ptr @module_sig_check._entry, section ".printk_index", align 4
@elf_validity_check._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.90, ptr @.str.91, ptr @.str, i32 2975, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"\013Invalid ELF header len %lu\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"elf_validity_check\00", [45 x i8] zeroinitializer }, align 32
@elf_validity_check._entry_ptr = internal global ptr @elf_validity_check._entry, section ".printk_index", align 4
@.str.92 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"\7FELF\00", [27 x i8] zeroinitializer }, align 32
@elf_validity_check._entry.93 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.94, ptr @.str.91, ptr @.str, i32 2980, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\013Invalid ELF header magic: != %s\0A\00", [61 x i8] zeroinitializer }, align 32
@elf_validity_check._entry_ptr.95 = internal global ptr @elf_validity_check._entry.93, section ".printk_index", align 4
@elf_validity_check._entry.96 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.97, ptr @.str.91, ptr @.str, i32 2985, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\013Invalid ELF header type: %u != %u\0A\00", [59 x i8] zeroinitializer }, align 32
@elf_validity_check._entry_ptr.98 = internal global ptr @elf_validity_check._entry.96, section ".printk_index", align 4
@elf_validity_check._entry.99 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.100, ptr @.str.91, ptr @.str, i32 2990, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\013Invalid architecture in ELF header: %u\0A\00", [54 x i8] zeroinitializer }, align 32
@elf_validity_check._entry_ptr.101 = internal global ptr @elf_validity_check._entry.99, section ".printk_index", align 4
@elf_validity_check._entry.102 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.103, ptr @.str.91, ptr @.str, i32 2994, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\013Invalid ELF section header size\0A\00", [61 x i8] zeroinitializer }, align 32
@elf_validity_check._entry_ptr.104 = internal global ptr @elf_validity_check._entry.102, section ".printk_index", align 4
@elf_validity_check._entry.105 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.106, ptr @.str.91, ptr @.str, i32 3006, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\013Invalid ELF section header overflow\0A\00", [57 x i8] zeroinitializer }, align 32
@elf_validity_check._entry_ptr.107 = internal global ptr @elf_validity_check._entry.105, section ".printk_index", align 4
@elf_validity_check._entry.108 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.109, ptr @.str.91, ptr @.str, i32 3019, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\013Invalid ELF section name index: %d || e_shstrndx (%d) >= e_shnum (%d)\0A\00", [55 x i8] zeroinitializer }, align 32
@elf_validity_check._entry_ptr.110 = internal global ptr @elf_validity_check._entry.108, section ".printk_index", align 4
@elf_validity_check._entry.111 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.112, ptr @.str.91, ptr @.str, i32 3026, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\013Invalid ELF section hdr(type %u)\0A\00", [60 x i8] zeroinitializer }, align 32
@elf_validity_check._entry_ptr.113 = internal global ptr @elf_validity_check._entry.111, section ".printk_index", align 4
@elf_validity_check._entry.114 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.115, ptr @.str.91, ptr @.str, i32 3037, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\013ELF Spec violation: section name table isn't null terminated\0A\00", [32 x i8] zeroinitializer }, align 32
@elf_validity_check._entry_ptr.116 = internal global ptr @elf_validity_check._entry.114, section ".printk_index", align 4
@elf_validity_check._entry.117 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.118, ptr @.str.91, ptr @.str, i32 3049, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"\013ELF Spec violation: section 0 type(%d)!=SH_NULL or non-zero len or addr\0A\00", [53 x i8] zeroinitializer }, align 32
@elf_validity_check._entry_ptr.119 = internal global ptr @elf_validity_check._entry.117, section ".printk_index", align 4
@elf_validity_check._entry.120 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.121, ptr @.str.91, ptr @.str, i32 3064, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [74 x i8], [54 x i8] } { [74 x i8] c"\013Invalid ELF sh_link!=SHN_UNDEF(%d) or (sh_link(%d) >= hdr->e_shnum(%d)\0A\00", [54 x i8] zeroinitializer }, align 32
@elf_validity_check._entry_ptr.122 = internal global ptr @elf_validity_check._entry.120, section ".printk_index", align 4
@elf_validity_check._entry.123 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.124, ptr @.str.91, ptr @.str, i32 3072, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\013Invalid ELF section in module (section %u type %u)\0A\00", [42 x i8] zeroinitializer }, align 32
@elf_validity_check._entry_ptr.125 = internal global ptr @elf_validity_check._entry.123, section ".printk_index", align 4
@elf_validity_check._entry.126 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.127, ptr @.str.91, ptr @.str, i32 3079, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013Invalid ELF section name in module (section %u type %u)\0A\00", [37 x i8] zeroinitializer }, align 32
@elf_validity_check._entry_ptr.128 = internal global ptr @elf_validity_check._entry.126, section ".printk_index", align 4
@.str.129 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c".modinfo\00", [23 x i8] zeroinitializer }, align 32
@setup_load_info._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.130, ptr @.str.131, ptr @.str, i32 3240, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\014%s: module has no symbols (stripped?)\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"setup_load_info\00", [16 x i8] zeroinitializer }, align 32
@setup_load_info._entry_ptr = internal global ptr @setup_load_info._entry, section ".printk_index", align 4
@.str.132 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"(missing .modinfo section or name field)\00", [55 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c".gnu.linkonce.this_module\00", [38 x i8] zeroinitializer }, align 32
@setup_load_info._entry.134 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.131, ptr @.str, i32 3247, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\014%s: No module found in object\0A\00", [63 x i8] zeroinitializer }, align 32
@setup_load_info._entry_ptr.136 = internal global ptr @setup_load_info._entry.134, section ".printk_index", align 4
@.str.137 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"__versions\00", [21 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c".data..percpu\00", [18 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c",\00", [30 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"module_layout\00", [18 x i8] zeroinitializer }, align 32
@__const.check_modstruct_version.fsa = private unnamed_addr constant { ptr, i8, i8, [2 x i8], ptr, ptr, ptr, i32 } { ptr @.str.140, i8 1, i8 0, [2 x i8] zeroinitializer, ptr null, ptr null, ptr null, i32 0 }, align 4
@check_version.__UNIQUE_ID_ddebug291 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.55, ptr @.str.141, ptr @.str, ptr @.str.142, i8 1, i8 62, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.141 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"check_version\00", [18 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Found checksum %X vs module %lX\0A\00", [63 x i8] zeroinitializer }, align 32
@check_version.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@check_version._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.143, ptr @.str.141, ptr @.str, i32 1279, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\014%s: no symbol version for %s\0A\00", [32 x i8] zeroinitializer }, align 32
@check_version._entry_ptr = internal global ptr @check_version._entry, section ".printk_index", align 4
@check_version._entry.144 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.145, ptr @.str.141, ptr @.str, i32 1284, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\014%s: disagrees about version of symbol %s\0A\00", [52 x i8] zeroinitializer }, align 32
@check_version._entry_ptr.146 = internal global ptr @check_version._entry.144, section ".printk_index", align 4
@try_to_force_load._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.147, ptr @.str.148, ptr @.str, i32 1224, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"\014%s: %s: kernel tainted.\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"try_to_force_load\00", [46 x i8] zeroinitializer }, align 32
@try_to_force_load._entry_ptr = internal global ptr @try_to_force_load._entry, section ".printk_index", align 4
@.str.149 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c".data..ro_after_init\00", [43 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"__jump_table\00", [19 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"vermagic\00", [23 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"bad vermagic\00", [19 x i8] zeroinitializer }, align 32
@vermagic = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"5.17.0 SMP mod_unload modversions ARMv6 p2v8 \00", [50 x i8] zeroinitializer }, align 32
@check_modinfo._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.153, ptr @.str.154, ptr @.str, i32 3285, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\013%s: version magic '%s' should be '%s'\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"check_modinfo\00", [18 x i8] zeroinitializer }, align 32
@check_modinfo._entry_ptr = internal global ptr @check_modinfo._entry, section ".printk_index", align 4
@.str.155 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"intree\00", [25 x i8] zeroinitializer }, align 32
@check_modinfo._entry.156 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.157, ptr @.str.154, ptr @.str, i32 3292, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\014%s: loading out-of-tree module taints kernel.\0A\00", [47 x i8] zeroinitializer }, align 32
@check_modinfo._entry_ptr.158 = internal global ptr @check_modinfo._entry.156, section ".printk_index", align 4
@.str.159 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"staging\00", [24 x i8] zeroinitializer }, align 32
@check_modinfo._entry.160 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.161, ptr @.str.154, ptr @.str, i32 3301, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [91 x i8], [37 x i8] } { [91 x i8] c"\014%s: module is from the staging directory, the quality is unknown, you have been warned.\0A\00", [37 x i8] zeroinitializer }, align 32
@check_modinfo._entry_ptr.162 = internal global ptr @check_modinfo._entry.160, section ".printk_index", align 4
@.str.163 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"license\00", [24 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c" \00", [30 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"retpoline\00", [22 x i8] zeroinitializer }, align 32
@check_modinfo_retpoline._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.166, ptr @.str.167, ptr @.str, i32 3141, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\014%s: loading module not compiled with retpoline compiler.\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"check_modinfo_retpoline\00", [40 x i8] zeroinitializer }, align 32
@check_modinfo_retpoline._entry_ptr = internal global ptr @check_modinfo_retpoline._entry, section ".printk_index", align 4
@.str.168 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"livepatch\00", [22 x i8] zeroinitializer }, align 32
@check_modinfo_livepatch._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.169, ptr @.str.170, ptr @.str, i32 3127, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [78 x i8], [50 x i8] } { [78 x i8] c"\013%s: module is marked as livepatch module, but livepatch support is disabled\00", [50 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"check_modinfo_livepatch\00", [40 x i8] zeroinitializer }, align 32
@check_modinfo_livepatch._entry_ptr = internal global ptr @check_modinfo_livepatch._entry, section ".printk_index", align 4
@.str.171 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"unspecified\00", [20 x i8] zeroinitializer }, align 32
@set_license._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.172, ptr @.str.173, ptr @.str, i32 2522, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\014%s: module license '%s' taints kernel.\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"set_license\00", [20 x i8] zeroinitializer }, align 32
@set_license._entry_ptr = internal global ptr @set_license._entry, section ".printk_index", align 4
@.str.174 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"GPL\00", [28 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"GPL v2\00", [25 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"GPL and additional rights\00", [38 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Dual BSD/GPL\00", [19 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Dual MIT/GPL\00", [19 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Dual MPL/GPL\00", [19 x i8] zeroinitializer }, align 32
@module_enforce_rwx_sections._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.180, ptr @.str.181, ptr @.str, i32 2043, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\013%s: section %s (index %d) has invalid WRITE|EXEC flags\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.181 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"module_enforce_rwx_sections\00", [36 x i8] zeroinitializer }, align 32
@module_enforce_rwx_sections._entry_ptr = internal global ptr @module_enforce_rwx_sections._entry, section ".printk_index", align 4
@layout_sections.masks = internal constant { [5 x [2 x i32]], [56 x i8] } { [5 x [2 x i32]] [[2 x i32] [i32 6, i32 0], [2 x i32] [i32 2, i32 1], [2 x i32] [i32 2097154, i32 0], [2 x i32] [i32 3, i32 0], [2 x i32] [i32 2, i32 0]], [56 x i8] zeroinitializer }, align 32
@layout_sections.__UNIQUE_ID_ddebug296 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.55, ptr @.str.182, ptr @.str, ptr @.str.183, i8 2, i8 98, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.182 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"layout_sections\00", [16 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Core section allocation order:\0A\00", [32 x i8] zeroinitializer }, align 32
@layout_sections.__UNIQUE_ID_ddebug297 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.55, ptr @.str.182, ptr @.str, ptr @.str.184, i8 2, i8 101, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.184 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"\09%s\0A\00", [27 x i8] zeroinitializer }, align 32
@layout_sections.__UNIQUE_ID_ddebug298 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.55, ptr @.str.182, ptr @.str, ptr @.str.185, i8 2, i8 107, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.185 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Init section allocation order:\0A\00", [32 x i8] zeroinitializer }, align 32
@layout_sections.__UNIQUE_ID_ddebug299 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.55, ptr @.str.182, ptr @.str, ptr @.str.184, i8 2, i8 110, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@layout_symtab.__UNIQUE_ID_ddebug300 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.55, ptr @.str.186, ptr @.str, ptr @.str.184, i8 2, i8 -91, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.186 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"layout_symtab\00", [18 x i8] zeroinitializer }, align 32
@layout_symtab.__UNIQUE_ID_ddebug301 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.55, ptr @.str.186, ptr @.str, ptr @.str.184, i8 2, i8 -85, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@move_module.__UNIQUE_ID_ddebug304 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.55, ptr @.str.187, ptr @.str, ptr @.str.188, i8 3, i8 97, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.187 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"move_module\00", [20 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"final section addresses:\0A\00", [38 x i8] zeroinitializer }, align 32
@move_module.__UNIQUE_ID_ddebug305 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.55, ptr @.str.187, ptr @.str, ptr @.str.189, i8 3, i8 101, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.189 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"\090x%lx %s\0A\00", [21 x i8] zeroinitializer }, align 32
@percpu_modalloc._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.190, ptr @.str.191, ptr @.str, i32 600, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.190 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\014%s: per-cpu alignment %li > %li\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"percpu_modalloc\00", [16 x i8] zeroinitializer }, align 32
@percpu_modalloc._entry_ptr = internal global ptr @percpu_modalloc._entry, section ".printk_index", align 4
@percpu_modalloc._entry.192 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.193, ptr @.str.191, ptr @.str, i32 607, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.193 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\014%s: Could not allocate %lu bytes percpu data\0A\00", [48 x i8] zeroinitializer }, align 32
@percpu_modalloc._entry_ptr.194 = internal global ptr @percpu_modalloc._entry.192, section ".printk_index", align 4
@init_param_lock.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.195 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"&mod->param_lock\00", [47 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"__param\00", [24 x i8] zeroinitializer }, align 32
@.str.197 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"__ksymtab\00", [22 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"__kcrctab\00", [22 x i8] zeroinitializer }, align 32
@.str.199 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"__ksymtab_gpl\00", [18 x i8] zeroinitializer }, align 32
@.str.200 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"__kcrctab_gpl\00", [18 x i8] zeroinitializer }, align 32
@.str.201 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c".ctors\00", [25 x i8] zeroinitializer }, align 32
@.str.202 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c".init_array\00", [20 x i8] zeroinitializer }, align 32
@find_module_sections._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.203, ptr @.str.204, ptr @.str, i32 3338, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\014%s: has both .ctors and .init_array.\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"find_module_sections\00", [43 x i8] zeroinitializer }, align 32
@find_module_sections._entry_ptr = internal global ptr @find_module_sections._entry, section ".printk_index", align 4
@.str.205 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c".noinstr.text\00", [18 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"__tracepoints_ptrs\00", [45 x i8] zeroinitializer }, align 32
@.str.207 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"___srcu_struct_ptrs\00", [44 x i8] zeroinitializer }, align 32
@.str.208 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"__bpf_raw_tp_map\00", [47 x i8] zeroinitializer }, align 32
@.str.209 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"_ftrace_events\00", [17 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"_ftrace_eval_map\00", [47 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"__trace_printk_fmt\00", [45 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"__mcount_loc\00", [19 x i8] zeroinitializer }, align 32
@.str.213 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c".kprobes.text\00", [18 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"_kprobe_blacklist\00", [46 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c".printk_index\00", [18 x i8] zeroinitializer }, align 32
@.str.216 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"__ex_table\00", [21 x i8] zeroinitializer }, align 32
@.str.217 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"__obsparm\00", [22 x i8] zeroinitializer }, align 32
@find_module_sections._entry.218 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.219, ptr @.str.204, ptr @.str, i32 3414, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.219 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\014%s: Ignoring obsolete parameters\0A\00", [60 x i8] zeroinitializer }, align 32
@find_module_sections._entry_ptr.220 = internal global ptr @find_module_sections._entry.218, section ".printk_index", align 4
@.str.221 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"__dyndbg\00", [23 x i8] zeroinitializer }, align 32
@.str.222 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ndiswrapper\00", [20 x i8] zeroinitializer }, align 32
@.str.223 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"driverloader\00", [19 x i8] zeroinitializer }, align 32
@.str.224 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"lve\00", [28 x i8] zeroinitializer }, align 32
@check_module_license_and_versions._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.225, ptr @.str.226, ptr @.str, i32 3508, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.225 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\014%s: module license taints kernel.\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"check_module_license_and_versions\00", [62 x i8] zeroinitializer }, align 32
@check_module_license_and_versions._entry_ptr = internal global ptr @check_module_license_and_versions._entry, section ".printk_index", align 4
@.str.227 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"no versions for exported symbols\00", [63 x i8] zeroinitializer }, align 32
@modinfo_attrs = internal constant { [9 x ptr], [60 x i8] } { [9 x ptr] [ptr @module_uevent, ptr @modinfo_version, ptr @modinfo_srcversion, ptr @modinfo_initstate, ptr @modinfo_coresize, ptr @modinfo_initsize, ptr @modinfo_taint, ptr @modinfo_refcnt, ptr null], [60 x i8] zeroinitializer }, align 32
@modinfo_version = internal global { %struct.module_attribute, [56 x i8] } { %struct.module_attribute { %struct.attribute { ptr @.str.228, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @show_modinfo_version, ptr null, ptr @setup_modinfo_version, ptr @modinfo_version_exists, ptr @free_modinfo_version }, [56 x i8] zeroinitializer }, align 32
@modinfo_srcversion = internal global { %struct.module_attribute, [56 x i8] } { %struct.module_attribute { %struct.attribute { ptr @.str.229, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @show_modinfo_srcversion, ptr null, ptr @setup_modinfo_srcversion, ptr @modinfo_srcversion_exists, ptr @free_modinfo_srcversion }, [56 x i8] zeroinitializer }, align 32
@modinfo_initstate = internal global { %struct.module_attribute, [56 x i8] } { %struct.module_attribute { %struct.attribute { ptr @.str.230, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @show_initstate, ptr null, ptr null, ptr null, ptr null }, [56 x i8] zeroinitializer }, align 32
@modinfo_coresize = internal global { %struct.module_attribute, [56 x i8] } { %struct.module_attribute { %struct.attribute { ptr @.str.235, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @show_coresize, ptr null, ptr null, ptr null, ptr null }, [56 x i8] zeroinitializer }, align 32
@modinfo_initsize = internal global { %struct.module_attribute, [56 x i8] } { %struct.module_attribute { %struct.attribute { ptr @.str.237, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @show_initsize, ptr null, ptr null, ptr null, ptr null }, [56 x i8] zeroinitializer }, align 32
@modinfo_taint = internal global { %struct.module_attribute, [56 x i8] } { %struct.module_attribute { %struct.attribute { ptr @.str.238, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @show_taint, ptr null, ptr null, ptr null, ptr null }, [56 x i8] zeroinitializer }, align 32
@modinfo_refcnt = internal global { %struct.module_attribute, [56 x i8] } { %struct.module_attribute { %struct.attribute { ptr @.str.43, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @show_refcnt, ptr null, ptr null, ptr null, ptr null }, [56 x i8] zeroinitializer }, align 32
@.str.228 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"version\00", [24 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"srcversion\00", [21 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"initstate\00", [22 x i8] zeroinitializer }, align 32
@.str.232 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"live\00", [27 x i8] zeroinitializer }, align 32
@.str.233 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"coming\00", [25 x i8] zeroinitializer }, align 32
@.str.234 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"going\00", [26 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"coresize\00", [23 x i8] zeroinitializer }, align 32
@.str.236 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%u\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"initsize\00", [23 x i8] zeroinitializer }, align 32
@.str.238 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"taint\00", [26 x i8] zeroinitializer }, align 32
@taint_flags = external dso_local local_unnamed_addr constant [18 x %struct.taint_flag], align 1
@.str.239 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%i\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"__gnu_lto\00", [22 x i8] zeroinitializer }, align 32
@simplify_symbols.__UNIQUE_ID_ddebug294 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.55, ptr @.str.241, ptr @.str, ptr @.str.242, i8 2, i8 64, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.241 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"simplify_symbols\00", [47 x i8] zeroinitializer }, align 32
@.str.242 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Common symbol: %s\0A\00", [45 x i8] zeroinitializer }, align 32
@simplify_symbols._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.243, ptr @.str.241, ptr @.str, i32 2307, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.243 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\014%s: please compile with -fno-common\0A\00", [57 x i8] zeroinitializer }, align 32
@simplify_symbols._entry_ptr = internal global ptr @simplify_symbols._entry, section ".printk_index", align 4
@simplify_symbols.__UNIQUE_ID_ddebug295 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.55, ptr @.str.241, ptr @.str, ptr @.str.244, i8 2, i8 66, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.244 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Absolute symbol: 0x%08lx\0A\00", [38 x i8] zeroinitializer }, align 32
@simplify_symbols._entry.245 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.246, ptr @.str.241, ptr @.str, i32 2337, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.246 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\014%s: Unknown symbol %s (err %d)\0A\00", [62 x i8] zeroinitializer }, align 32
@simplify_symbols._entry_ptr.247 = internal global ptr @simplify_symbols._entry.245, section ".printk_index", align 4
@resolve_symbol_wait._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.248, ptr @.str.249, ptr @.str, i32 1463, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.248 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\014%s: gave up waiting for init of module %s.\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.249 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"resolve_symbol_wait\00", [44 x i8] zeroinitializer }, align 32
@resolve_symbol_wait._entry_ptr = internal global ptr @resolve_symbol_wait._entry, section ".printk_index", align 4
@.str.250 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"kernel\00", [25 x i8] zeroinitializer }, align 32
@inherit_taint._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.251, ptr @.str.252, ptr @.str, i32 1382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.251 = internal constant { [78 x i8], [50 x i8] } { [78 x i8] c"\013%s: module using GPL-only symbols uses symbols from proprietary module %s.\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.252 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"inherit_taint\00", [18 x i8] zeroinitializer }, align 32
@inherit_taint._entry_ptr = internal global ptr @inherit_taint._entry, section ".printk_index", align 4
@inherit_taint._entry.253 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.254, ptr @.str.252, ptr @.str, i32 1388, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.254 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\014%s: module uses symbols from proprietary module %s, inheriting taint.\0A\00", [55 x i8] zeroinitializer }, align 32
@inherit_taint._entry_ptr.255 = internal global ptr @inherit_taint._entry.253, section ".printk_index", align 4
@.str.256 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"import_ns\00", [22 x i8] zeroinitializer }, align 32
@verify_namespace_is_imported._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.257, ptr @.str.258, ptr @.str, i32 1367, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.257 = internal constant { [74 x i8], [54 x i8] } { [74 x i8] c"\014%s: module uses symbol (%s) from namespace %s, but does not import it.\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.258 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"verify_namespace_is_imported\00", [35 x i8] zeroinitializer }, align 32
@verify_namespace_is_imported._entry_ptr = internal global ptr @verify_namespace_is_imported._entry, section ".printk_index", align 4
@already_uses.__UNIQUE_ID_ddebug286 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.55, ptr @.str.259, ptr @.str, ptr @.str.260, i8 0, i8 -61, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.259 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"already_uses\00", [19 x i8] zeroinitializer }, align 32
@.str.260 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"%s uses %s!\0A\00", [19 x i8] zeroinitializer }, align 32
@already_uses.__UNIQUE_ID_ddebug287 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.55, ptr @.str.259, ptr @.str, ptr @.str.261, i8 0, i8 -60, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.261 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"%s does not use %s!\0A\00", [43 x i8] zeroinitializer }, align 32
@add_module_usage.__UNIQUE_ID_ddebug288 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.55, ptr @.str.262, ptr @.str, ptr @.str.263, i8 0, i8 -56, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.262 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"add_module_usage\00", [47 x i8] zeroinitializer }, align 32
@.str.263 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"Allocating new usage for %s.\0A\00", [34 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@.str.264 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"_GLOBAL_OFFSET_TABLE_\00", [42 x i8] zeroinitializer }, align 32
@apply_relocate_add._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.265, ptr @.str.266, ptr @.str.267, i32 83, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.265 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\013module %s: REL relocation unsupported\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.266 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"apply_relocate_add\00", [45 x i8] zeroinitializer }, align 32
@.str.267 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"include/linux/moduleloader.h\00", [35 x i8] zeroinitializer }, align 32
@apply_relocate_add._entry_ptr = internal global ptr @apply_relocate_add._entry, section ".printk_index", align 4
@.str.268 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c".debug\00", [25 x i8] zeroinitializer }, align 32
@cpu_cache = external dso_local local_unnamed_addr global %struct.cpu_cache_fns, align 4
@verify_exported_symbols._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.269, ptr @.str.270, ptr @.str, i32 2259, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.269 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\013%s: exports duplicate symbol %s (owned by %s)\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.270 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"verify_exported_symbols\00", [40 x i8] zeroinitializer }, align 32
@verify_exported_symbols._entry_ptr = internal global ptr @verify_exported_symbols._entry, section ".printk_index", align 4
@rodata_enabled = external dso_local local_unnamed_addr global i8, align 1
@.str.271 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"async_probe\00", [20 x i8] zeroinitializer }, align 32
@unknown_module_param_cb._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.272, ptr @.str.273, ptr @.str, i32 3932, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.272 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\014%s: unknown parameter '%s' ignored\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.273 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"unknown_module_param_cb\00", [40 x i8] zeroinitializer }, align 32
@unknown_module_param_cb._entry_ptr = internal global ptr @unknown_module_param_cb._entry, section ".printk_index", align 4
@.str.274 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"holders\00", [24 x i8] zeroinitializer }, align 32
@module_sysfs_initialized = external dso_local local_unnamed_addr global i32, align 4
@mod_sysfs_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.275, ptr @.str.276, ptr @.str, i32 1818, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.275 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\013%s: module sysfs not initialized\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.276 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"mod_sysfs_init\00", [17 x i8] zeroinitializer }, align 32
@mod_sysfs_init._entry_ptr = internal global ptr @mod_sysfs_init._entry, section ".printk_index", align 4
@module_kset = external dso_local local_unnamed_addr global ptr, align 4
@mod_sysfs_init._entry.277 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.278, ptr @.str.276, ptr @.str, i32 1825, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.278 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\013%s: module is already loaded\0A\00", [32 x i8] zeroinitializer }, align 32
@mod_sysfs_init._entry_ptr.279 = internal global ptr @mod_sysfs_init._entry.277, section ".printk_index", align 4
@module_ktype = external dso_local global %struct.kobj_type, align 4
@.str.280 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"%s\00", [29 x i8] zeroinitializer }, align 32
@module_add_modinfo_attrs.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.281 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"sections\00", [23 x i8] zeroinitializer }, align 32
@add_sect_attrs.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.282 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"0x%px\0A\00", [25 x i8] zeroinitializer }, align 32
@add_notes_attrs.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.283 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"notes\00", [26 x i8] zeroinitializer }, align 32
@trace_module_load.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@do_init_module._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.284, ptr @.str.285, ptr @.str, i32 3739, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.284 = internal constant { [106 x i8], [54 x i8] } { [106 x i8] c"\014%s: '%s'->init suspiciously returned %d, it should follow 0/-E convention\0A%s: loading module anyway...\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.285 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"do_init_module\00", [17 x i8] zeroinitializer }, align 32
@do_init_module._entry_ptr = internal global ptr @do_init_module._entry, section ".printk_index", align 4
@init_free_list = internal global { %struct.llist_head, [28 x i8] } zeroinitializer, align 32
@init_free_wq = internal global { %struct.work_struct, [52 x i8] } { %struct.work_struct { %struct.atomic_t { i32 -48 }, %struct.list_head { ptr getelementptr (i8, ptr @init_free_wq, i64 4), ptr getelementptr (i8, ptr @init_free_wq, i64 4) }, ptr @do_free_init, %struct.lockdep_map { ptr @init_free_wq, [2 x ptr] zeroinitializer, ptr @.str.286, i8 0, i8 0, i8 0, i32 0, i32 0 } }, [52 x i8] zeroinitializer }, align 32
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@.str.286 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"init_free_wq\00", [19 x i8] zeroinitializer }, align 32
@.str.287 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"fd\00", [29 x i8] zeroinitializer }, align 32
@__do_sys_finit_module.__UNIQUE_ID_ddebug310 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.55, ptr @.str.288, ptr @.str, ptr @.str.289, i8 4, i8 26, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.288 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"__do_sys_finit_module\00", [42 x i8] zeroinitializer }, align 32
@.str.289 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"finit_module: fd=%d, uargs=%p, flags=%i\0A\00", [55 x i8] zeroinitializer }, align 32
@find_kallsyms_symbol.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.290 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"axtd\00", [27 x i8] zeroinitializer }, align 32
@find_kallsyms_symbol_value.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.291 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"modules\00", [24 x i8] zeroinitializer }, align 32
@modules_proc_ops = internal constant { %struct.proc_ops, [52 x i8] } { %struct.proc_ops { i32 1, ptr @modules_open, ptr @seq_read, ptr null, ptr null, ptr @seq_lseek, ptr @seq_release, ptr null, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@modules_op = internal constant { %struct.seq_operations, [16 x i8] } { %struct.seq_operations { ptr @m_start, ptr @m_stop, ptr @m_next, ptr @m_show }, [16 x i8] zeroinitializer }, align 32
@.str.292 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%s %u\00", [26 x i8] zeroinitializer }, align 32
@.str.293 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c" %s\00", [28 x i8] zeroinitializer }, align 32
@.str.294 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Unloading\00", [22 x i8] zeroinitializer }, align 32
@.str.295 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Loading\00", [24 x i8] zeroinitializer }, align 32
@.str.296 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"Live\00", [27 x i8] zeroinitializer }, align 32
@.str.297 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c" 0x%px\00", [25 x i8] zeroinitializer }, align 32
@.str.298 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"\0A\00", [30 x i8] zeroinitializer }, align 32
@.str.299 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c" %i \00", [27 x i8] zeroinitializer }, align 32
@.str.300 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%s,\00", [28 x i8] zeroinitializer }, align 32
@.str.301 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"[permanent],\00", [19 x i8] zeroinitializer }, align 32
@.str.302 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"-\00", [30 x i8] zeroinitializer }, align 32
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@module_assert_mutex_or_preempt.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@switch.table.show_initstate = internal constant { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.232, ptr @.str.233, ptr @.str.234], [20 x i8] zeroinitializer }, align 32
@___asan_gen_.303 = private unnamed_addr constant [31 x i8] c"str__module__trace_system_name\00", align 1
@___asan_gen_.304 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.305 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.304, i32 36, i32 1 }
@___asan_gen_.306 = private unnamed_addr constant [31 x i8] c"trace_event_fields_module_load\00", align 1
@___asan_gen_.309 = private unnamed_addr constant [35 x i8] c"trace_event_type_funcs_module_load\00", align 1
@___asan_gen_.312 = private unnamed_addr constant [22 x i8] c"print_fmt_module_load\00", align 1
@___asan_gen_.315 = private unnamed_addr constant [18 x i8] c"event_module_load\00", align 1
@___asan_gen_.318 = private unnamed_addr constant [31 x i8] c"trace_event_fields_module_free\00", align 1
@___asan_gen_.321 = private unnamed_addr constant [35 x i8] c"trace_event_type_funcs_module_free\00", align 1
@___asan_gen_.324 = private unnamed_addr constant [22 x i8] c"print_fmt_module_free\00", align 1
@___asan_gen_.327 = private unnamed_addr constant [18 x i8] c"event_module_free\00", align 1
@___asan_gen_.330 = private unnamed_addr constant [33 x i8] c"trace_event_fields_module_refcnt\00", align 1
@___asan_gen_.333 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_module_refcnt\00", align 1
@___asan_gen_.336 = private unnamed_addr constant [24 x i8] c"print_fmt_module_refcnt\00", align 1
@___asan_gen_.339 = private unnamed_addr constant [17 x i8] c"event_module_get\00", align 1
@___asan_gen_.341 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.592, i32 92, i32 1 }
@___asan_gen_.342 = private unnamed_addr constant [17 x i8] c"event_module_put\00", align 1
@___asan_gen_.344 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.592, i32 99, i32 1 }
@___asan_gen_.345 = private unnamed_addr constant [34 x i8] c"trace_event_fields_module_request\00", align 1
@___asan_gen_.348 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_module_request\00", align 1
@___asan_gen_.351 = private unnamed_addr constant [25 x i8] c"print_fmt_module_request\00", align 1
@___asan_gen_.354 = private unnamed_addr constant [21 x i8] c"event_module_request\00", align 1
@___asan_gen_.357 = private unnamed_addr constant [8 x i8] c"modules\00", align 1
@___asan_gen_.359 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 92, i32 8 }
@___asan_gen_.360 = private unnamed_addr constant [12 x i8] c"kdb_modules\00", align 1
@___asan_gen_.362 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 256, i32 19 }
@___asan_gen_.363 = private unnamed_addr constant [12 x i8] c"sig_enforce\00", align 1
@___asan_gen_.365 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 271, i32 13 }
@___asan_gen_.366 = private unnamed_addr constant [17 x i8] c"modules_disabled\00", align 1
@___asan_gen_.368 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 293, i32 5 }
@___asan_gen_.369 = private unnamed_addr constant [19 x i8] c"module_notify_list\00", align 1
@___asan_gen_.377 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 640, i32 2 }
@___asan_gen_.381 = private unnamed_addr constant [27 x i8] c"event_enter__delete_module\00", align 1
@___asan_gen_.387 = private unnamed_addr constant [26 x i8] c"event_exit__delete_module\00", align 1
@___asan_gen_.393 = private unnamed_addr constant [21 x i8] c"types__delete_module\00", align 1
@___asan_gen_.396 = private unnamed_addr constant [20 x i8] c"args__delete_module\00", align 1
@___asan_gen_.401 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1171, i32 2 }
@___asan_gen_.402 = private unnamed_addr constant [14 x i8] c"module_uevent\00", align 1
@___asan_gen_.404 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1170, i32 25 }
@___asan_gen_.407 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2844, i32 25 }
@___asan_gen_.410 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2849, i32 25 }
@___asan_gen_.411 = private constant [17 x i8] c"module_blacklist\00", align 1
@___asan_gen_.413 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3544, i32 14 }
@___asan_gen_.417 = private unnamed_addr constant [25 x i8] c"event_enter__init_module\00", align 1
@___asan_gen_.423 = private unnamed_addr constant [24 x i8] c"event_exit__init_module\00", align 1
@___asan_gen_.429 = private unnamed_addr constant [19 x i8] c"types__init_module\00", align 1
@___asan_gen_.432 = private unnamed_addr constant [18 x i8] c"args__init_module\00", align 1
@___asan_gen_.438 = private unnamed_addr constant [26 x i8] c"event_enter__finit_module\00", align 1
@___asan_gen_.444 = private unnamed_addr constant [25 x i8] c"event_exit__finit_module\00", align 1
@___asan_gen_.450 = private unnamed_addr constant [20 x i8] c"types__finit_module\00", align 1
@___asan_gen_.453 = private unnamed_addr constant [19 x i8] c"args__finit_module\00", align 1
@___asan_gen_.458 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4416, i32 14 }
@___asan_gen_.467 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4783, i32 2 }
@___asan_gen_.473 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4789, i32 3 }
@___asan_gen_.474 = private unnamed_addr constant [21 x i8] c"last_unloaded_module\00", align 1
@___asan_gen_.476 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 747, i32 13 }
@___asan_gen_.482 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4793, i32 3 }
@___asan_gen_.488 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4794, i32 2 }
@___asan_gen_.507 = private unnamed_addr constant [8 x i8] c"__flags\00", align 1
@___asan_gen_.527 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.592, i32 31, i32 1 }
@___asan_gen_.545 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.592, i32 70, i32 1 }
@___asan_gen_.554 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.592, i32 107, i32 1 }
@___asan_gen_.560 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 299, i32 8 }
@___asan_gen_.561 = private unnamed_addr constant [13 x i8] c"module_mutex\00", align 1
@___asan_gen_.569 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 91, i32 8 }
@___asan_gen_.578 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 912, i32 1 }
@___asan_gen_.587 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 946, i32 3 }
@___asan_gen_.588 = private unnamed_addr constant [10 x i8] c"module_wq\00", align 1
@___asan_gen_.592 = private unnamed_addr constant [33 x i8] c"../include/trace/events/module.h\00", align 1
@___asan_gen_.593 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.592, i32 50, i32 1 }
@___asan_gen_.595 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.596 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.595, i32 108, i32 2 }
@___asan_gen_.601 = private unnamed_addr constant [30 x i8] c"../include/linux/completion.h\00", align 1
@___asan_gen_.602 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.601, i32 87, i32 2 }
@___asan_gen_.608 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 841, i32 3 }
@___asan_gen_.611 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 297, i32 8 }
@___asan_gen_.612 = private unnamed_addr constant [4 x i8] c"arr\00", align 1
@___asan_gen_.614 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 519, i32 32 }
@___asan_gen_.620 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 553, i32 2 }
@___asan_gen_.632 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4169, i32 1 }
@___asan_gen_.638 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4179, i32 2 }
@___asan_gen_.641 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3169, i32 27 }
@___asan_gen_.644 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.646, i32 230, i32 6 }
@___asan_gen_.646 = private unnamed_addr constant [31 x i8] c"../include/linux/thread_info.h\00", align 1
@___asan_gen_.647 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.646, i32 214, i32 2 }
@___asan_gen_.649 = private unnamed_addr constant [27 x i8] c"../include/linux/uaccess.h\00", align 1
@___asan_gen_.650 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.649, i32 156, i32 2 }
@___asan_gen_.659 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3987, i32 3 }
@___asan_gen_.665 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4018, i32 3 }
@___asan_gen_.671 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4100, i32 3 }
@___asan_gen_.674 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2894, i32 42 }
@___asan_gen_.677 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2911, i32 12 }
@___asan_gen_.680 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2914, i32 12 }
@___asan_gen_.683 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2917, i32 12 }
@___asan_gen_.692 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2930, i32 3 }
@___asan_gen_.701 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2975, i32 3 }
@___asan_gen_.704 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2979, i32 33 }
@___asan_gen_.710 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2980, i32 3 }
@___asan_gen_.716 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2984, i32 3 }
@___asan_gen_.722 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2989, i32 3 }
@___asan_gen_.728 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2994, i32 3 }
@___asan_gen_.734 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3006, i32 3 }
@___asan_gen_.740 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3017, i32 3 }
@___asan_gen_.746 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3026, i32 3 }
@___asan_gen_.752 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3037, i32 3 }
@___asan_gen_.758 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3048, i32 3 }
@___asan_gen_.764 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3062, i32 5 }
@___asan_gen_.770 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3071, i32 5 }
@___asan_gen_.776 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3078, i32 6 }
@___asan_gen_.779 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3223, i32 36 }
@___asan_gen_.791 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3239, i32 3 }
@___asan_gen_.794 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3244, i32 35 }
@___asan_gen_.800 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3246, i32 3 }
@___asan_gen_.803 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3263, i32 37 }
@___asan_gen_.806 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 621, i32 24 }
@___asan_gen_.809 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3554, i32 20 }
@___asan_gen_.812 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1292, i32 11 }
@___asan_gen_.818 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1273, i32 3 }
@___asan_gen_.824 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1279, i32 2 }
@___asan_gen_.830 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1283, i32 2 }
@___asan_gen_.839 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1224, i32 3 }
@___asan_gen_.842 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3593, i32 23 }
@___asan_gen_.845 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3602, i32 23 }
@___asan_gen_.848 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3272, i32 43 }
@___asan_gen_.851 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3280, i32 32 }
@___asan_gen_.852 = private unnamed_addr constant [9 x i8] c"vermagic\00", align 1
@___asan_gen_.854 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1218, i32 19 }
@___asan_gen_.863 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3284, i32 3 }
@___asan_gen_.866 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3289, i32 25 }
@___asan_gen_.872 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3291, i32 4 }
@___asan_gen_.875 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3298, i32 24 }
@___asan_gen_.881 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3300, i32 3 }
@___asan_gen_.884 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3309, i32 37 }
@___asan_gen_.887 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1314, i32 29 }
@___asan_gen_.890 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3137, i32 44 }
@___asan_gen_.899 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3140, i32 2 }
@___asan_gen_.902 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3125, i32 24 }
@___asan_gen_.911 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3126, i32 3 }
@___asan_gen_.914 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2517, i32 13 }
@___asan_gen_.923 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2521, i32 4 }
@___asan_gen_.926 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.940, i32 7, i32 26 }
@___asan_gen_.929 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.940, i32 8, i32 22 }
@___asan_gen_.932 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.940, i32 9, i32 22 }
@___asan_gen_.935 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.940, i32 10, i32 22 }
@___asan_gen_.938 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.940, i32 11, i32 22 }
@___asan_gen_.940 = private unnamed_addr constant [27 x i8] c"../include/linux/license.h\00", align 1
@___asan_gen_.941 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.940, i32 12, i32 22 }
@___asan_gen_.950 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2042, i32 4 }
@___asan_gen_.951 = private unnamed_addr constant [6 x i8] c"masks\00", align 1
@___asan_gen_.953 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2426, i32 29 }
@___asan_gen_.959 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2443, i32 2 }
@___asan_gen_.962 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2455, i32 4 }
@___asan_gen_.965 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2476, i32 2 }
@___asan_gen_.968 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2708, i32 2 }
@___asan_gen_.974 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3460, i32 2 }
@___asan_gen_.977 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3478, i32 3 }
@___asan_gen_.986 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 599, i32 3 }
@___asan_gen_.992 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 606, i32 3 }
@___asan_gen_.998 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1899, i32 2 }
@___asan_gen_.1001 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3316, i32 31 }
@___asan_gen_.1004 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3318, i32 33 }
@___asan_gen_.1007 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3320, i32 33 }
@___asan_gen_.1010 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3321, i32 37 }
@___asan_gen_.1013 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3324, i32 37 }
@___asan_gen_.1016 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3327, i32 34 }
@___asan_gen_.1019 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3330, i32 35 }
@___asan_gen_.1028 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3337, i32 3 }
@___asan_gen_.1031 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3343, i32 47 }
@___asan_gen_.1034 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3347, i32 45 }
@___asan_gen_.1037 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3352, i32 45 }
@___asan_gen_.1040 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3357, i32 43 }
@___asan_gen_.1043 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3370, i32 41 }
@___asan_gen_.1046 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3373, i32 40 }
@___asan_gen_.1049 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3378, i32 52 }
@___asan_gen_.1052 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3384, i32 45 }
@___asan_gen_.1055 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3394, i32 47 }
@___asan_gen_.1058 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3396, i32 45 }
@___asan_gen_.1061 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3401, i32 47 }
@___asan_gen_.1064 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3410, i32 36 }
@___asan_gen_.1067 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3413, i32 25 }
@___asan_gen_.1073 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3414, i32 3 }
@___asan_gen_.1076 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3416, i32 35 }
@___asan_gen_.1079 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3494, i32 24 }
@___asan_gen_.1082 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3498, i32 24 }
@___asan_gen_.1085 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3503, i32 24 }
@___asan_gen_.1094 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3508, i32 3 }
@___asan_gen_.1097 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3514, i32 7 }
@___asan_gen_.1098 = private unnamed_addr constant [14 x i8] c"modinfo_attrs\00", align 1
@___asan_gen_.1100 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1204, i32 33 }
@___asan_gen_.1101 = private unnamed_addr constant [16 x i8] c"modinfo_version\00", align 1
@___asan_gen_.1104 = private unnamed_addr constant [19 x i8] c"modinfo_srcversion\00", align 1
@___asan_gen_.1107 = private unnamed_addr constant [18 x i8] c"modinfo_initstate\00", align 1
@___asan_gen_.1109 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1157, i32 32 }
@___asan_gen_.1110 = private unnamed_addr constant [17 x i8] c"modinfo_coresize\00", align 1
@___asan_gen_.1112 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1179, i32 32 }
@___asan_gen_.1113 = private unnamed_addr constant [17 x i8] c"modinfo_initsize\00", align 1
@___asan_gen_.1115 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1188, i32 32 }
@___asan_gen_.1116 = private unnamed_addr constant [14 x i8] c"modinfo_taint\00", align 1
@___asan_gen_.1118 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1201, i32 32 }
@___asan_gen_.1119 = private unnamed_addr constant [15 x i8] c"modinfo_refcnt\00", align 1
@___asan_gen_.1121 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1054, i32 32 }
@___asan_gen_.1124 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 744, i32 1 }
@___asan_gen_.1127 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 745, i32 1 }
@___asan_gen_.1130 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1158, i32 2 }
@___asan_gen_.1133 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1143, i32 11 }
@___asan_gen_.1136 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1146, i32 11 }
@___asan_gen_.1139 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1149, i32 11 }
@___asan_gen_.1142 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1180, i32 2 }
@___asan_gen_.1145 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1176, i32 25 }
@___asan_gen_.1148 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1189, i32 2 }
@___asan_gen_.1151 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1202, i32 2 }
@___asan_gen_.1154 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1051, i32 25 }
@___asan_gen_.1157 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2298, i32 23 }
@___asan_gen_.1163 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2305, i32 4 }
@___asan_gen_.1169 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2306, i32 4 }
@___asan_gen_.1172 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2313, i32 4 }
@___asan_gen_.1178 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2336, i32 4 }
@___asan_gen_.1187 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1462, i32 3 }
@___asan_gen_.1190 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1444, i32 21 }
@___asan_gen_.1199 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1381, i32 3 }
@___asan_gen_.1205 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1387, i32 3 }
@___asan_gen_.1208 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1354, i32 42 }
@___asan_gen_.1217 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1362, i32 3 }
@___asan_gen_.1223 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 781, i32 4 }
@___asan_gen_.1226 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 785, i32 2 }
@___asan_gen_.1232 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 800, i32 2 }
@___asan_gen_.1235 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2278, i32 24 }
@___asan_gen_.1246 = private unnamed_addr constant [32 x i8] c"../include/linux/moduleloader.h\00", align 1
@___asan_gen_.1247 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1246, i32 82, i32 2 }
@___asan_gen_.1250 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2658, i32 9 }
@___asan_gen_.1259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 2256, i32 5 }
@___asan_gen_.1262 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3924, i32 20 }
@___asan_gen_.1271 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3932, i32 3 }
@___asan_gen_.1274 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1855, i32 44 }
@___asan_gen_.1283 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1818, i32 3 }
@___asan_gen_.1289 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1825, i32 3 }
@___asan_gen_.1292 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1836, i32 8 }
@___asan_gen_.1295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1767, i32 4 }
@___asan_gen_.1298 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1551, i32 25 }
@___asan_gen_.1301 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1561, i32 3 }
@___asan_gen_.1304 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1514, i32 44 }
@___asan_gen_.1305 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.1307 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1662, i32 4 }
@___asan_gen_.1310 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1673, i32 44 }
@___asan_gen_.1311 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.1319 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 3736, i32 3 }
@___asan_gen_.1320 = private unnamed_addr constant [15 x i8] c"init_free_list\00", align 1
@___asan_gen_.1322 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 97, i32 8 }
@___asan_gen_.1323 = private unnamed_addr constant [13 x i8] c"init_free_wq\00", align 1
@___asan_gen_.1328 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 96, i32 8 }
@___asan_gen_.1331 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4189, i32 1 }
@___asan_gen_.1337 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4200, i32 2 }
@___asan_gen_.1340 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4239, i32 33 }
@___asan_gen_.1343 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4663, i32 14 }
@___asan_gen_.1344 = private unnamed_addr constant [17 x i8] c"modules_proc_ops\00", align 1
@___asan_gen_.1346 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4653, i32 30 }
@___asan_gen_.1347 = private unnamed_addr constant [11 x i8] c"modules_op\00", align 1
@___asan_gen_.1349 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4627, i32 36 }
@___asan_gen_.1352 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4600, i32 16 }
@___asan_gen_.1355 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4605, i32 16 }
@___asan_gen_.1358 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4606, i32 41 }
@___asan_gen_.1361 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4607, i32 42 }
@___asan_gen_.1364 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4608, i32 6 }
@___asan_gen_.1367 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4611, i32 16 }
@___asan_gen_.1370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 4617, i32 14 }
@___asan_gen_.1373 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 993, i32 16 }
@___asan_gen_.1376 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1001, i32 17 }
@___asan_gen_.1379 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1006, i32 15 }
@___asan_gen_.1380 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.1381 = private constant [19 x i8] c"../kernel/module.c\00", align 1
@___asan_gen_.1382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1381, i32 1010, i32 15 }
@___asan_gen_.1383 = private unnamed_addr constant [28 x i8] c"switch.table.show_initstate\00", align 1
@llvm.compiler.used = appending global [467 x ptr] [ptr @__UNIQUE_ID_sig_enforcetype278, ptr @__bpf_trace_tp_map_module_free, ptr @__bpf_trace_tp_map_module_get, ptr @__bpf_trace_tp_map_module_load, ptr @__bpf_trace_tp_map_module_put, ptr @__bpf_trace_tp_map_module_request, ptr @__event_enter__delete_module, ptr @__event_enter__finit_module, ptr @__event_enter__init_module, ptr @__event_exit__delete_module, ptr @__event_exit__finit_module, ptr @__event_exit__init_module, ptr @__event_module_free, ptr @__event_module_get, ptr @__event_module_load, ptr @__event_module_put, ptr @__event_module_request, ptr @__initcall__kmod_module__325_4666_proc_modules_init6, ptr @__ksymtab___SCK__tp_func_module_get, ptr @__ksymtab___module_get, ptr @__ksymtab___module_put_and_kthread_exit, ptr @__ksymtab___symbol_get, ptr @__ksymtab___symbol_put, ptr @__ksymtab___traceiter_module_get, ptr @__ksymtab___tracepoint_module_get, ptr @__ksymtab_is_module_sig_enforced, ptr @__ksymtab_module_layout, ptr @__ksymtab_module_put, ptr @__ksymtab_module_refcount, ptr @__ksymtab_register_module_notifier, ptr @__ksymtab_symbol_put_addr, ptr @__ksymtab_try_module_get, ptr @__ksymtab_unregister_module_notifier, ptr @__p_syscall_meta__delete_module, ptr @__p_syscall_meta__finit_module, ptr @__p_syscall_meta__init_module, ptr @__param_module_blacklist, ptr @__param_nomodule, ptr @__param_sig_enforce, ptr @__syscall_meta__delete_module, ptr @__syscall_meta__finit_module, ptr @__syscall_meta__init_module, ptr @__tracepoint_module_free, ptr @__tracepoint_module_get, ptr @__tracepoint_module_load, ptr @__tracepoint_module_put, ptr @__tracepoint_module_request, ptr @__tracepoint_ptr_module_free, ptr @__tracepoint_ptr_module_get, ptr @__tracepoint_ptr_module_load, ptr @__tracepoint_ptr_module_put, ptr @__tracepoint_ptr_module_request, ptr @apply_relocate_add._entry, ptr @apply_relocate_add._entry_ptr, ptr @check_modinfo._entry, ptr @check_modinfo._entry.156, ptr @check_modinfo._entry.160, ptr @check_modinfo._entry_ptr, ptr @check_modinfo._entry_ptr.158, ptr @check_modinfo._entry_ptr.162, ptr @check_modinfo_livepatch._entry, ptr @check_modinfo_livepatch._entry_ptr, ptr @check_modinfo_retpoline._entry, ptr @check_modinfo_retpoline._entry_ptr, ptr @check_module_license_and_versions._entry, ptr @check_module_license_and_versions._entry_ptr, ptr @check_version._entry, ptr @check_version._entry.144, ptr @check_version._entry_ptr, ptr @check_version._entry_ptr.146, ptr @do_init_module._entry, ptr @do_init_module._entry_ptr, ptr @elf_validity_check._entry, ptr @elf_validity_check._entry.102, ptr @elf_validity_check._entry.105, ptr @elf_validity_check._entry.108, ptr @elf_validity_check._entry.111, ptr @elf_validity_check._entry.114, ptr @elf_validity_check._entry.117, ptr @elf_validity_check._entry.120, ptr @elf_validity_check._entry.123, ptr @elf_validity_check._entry.126, ptr @elf_validity_check._entry.93, ptr @elf_validity_check._entry.96, ptr @elf_validity_check._entry.99, ptr @elf_validity_check._entry_ptr, ptr @elf_validity_check._entry_ptr.101, ptr @elf_validity_check._entry_ptr.104, ptr @elf_validity_check._entry_ptr.107, ptr @elf_validity_check._entry_ptr.110, ptr @elf_validity_check._entry_ptr.113, ptr @elf_validity_check._entry_ptr.116, ptr @elf_validity_check._entry_ptr.119, ptr @elf_validity_check._entry_ptr.122, ptr @elf_validity_check._entry_ptr.125, ptr @elf_validity_check._entry_ptr.128, ptr @elf_validity_check._entry_ptr.95, ptr @elf_validity_check._entry_ptr.98, ptr @event_class_module_free, ptr @event_class_module_load, ptr @event_class_module_refcnt, ptr @event_class_module_request, ptr @event_enter__delete_module, ptr @event_enter__finit_module, ptr @event_enter__init_module, ptr @event_exit__delete_module, ptr @event_exit__finit_module, ptr @event_exit__init_module, ptr @event_module_free, ptr @event_module_get, ptr @event_module_load, ptr @event_module_put, ptr @event_module_request, ptr @find_module_sections._entry, ptr @find_module_sections._entry.218, ptr @find_module_sections._entry_ptr, ptr @find_module_sections._entry_ptr.220, ptr @inherit_taint._entry, ptr @inherit_taint._entry.253, ptr @inherit_taint._entry_ptr, ptr @inherit_taint._entry_ptr.255, ptr @load_module._entry, ptr @load_module._entry.78, ptr @load_module._entry.81, ptr @load_module._entry_ptr, ptr @load_module._entry_ptr.80, ptr @load_module._entry_ptr.83, ptr @mod_sysfs_init._entry, ptr @mod_sysfs_init._entry.277, ptr @mod_sysfs_init._entry_ptr, ptr @mod_sysfs_init._entry_ptr.279, ptr @module_enforce_rwx_sections._entry, ptr @module_enforce_rwx_sections._entry_ptr, ptr @module_sig_check._entry, ptr @module_sig_check._entry_ptr, ptr @percpu_modalloc._entry, ptr @percpu_modalloc._entry.192, ptr @percpu_modalloc._entry_ptr, ptr @percpu_modalloc._entry_ptr.194, ptr @print_modules._entry, ptr @print_modules._entry.18, ptr @print_modules._entry.21, ptr @print_modules._entry.24, ptr @print_modules._entry_ptr, ptr @print_modules._entry_ptr.20, ptr @print_modules._entry_ptr.23, ptr @print_modules._entry_ptr.26, ptr @resolve_symbol_wait._entry, ptr @resolve_symbol_wait._entry_ptr, ptr @set_license._entry, ptr @set_license._entry_ptr, ptr @setup_load_info._entry, ptr @setup_load_info._entry.134, ptr @setup_load_info._entry_ptr, ptr @setup_load_info._entry_ptr.136, ptr @simplify_symbols._entry, ptr @simplify_symbols._entry.245, ptr @simplify_symbols._entry_ptr, ptr @simplify_symbols._entry_ptr.247, ptr @try_to_force_load._entry, ptr @try_to_force_load._entry_ptr, ptr @unknown_module_param_cb._entry, ptr @unknown_module_param_cb._entry_ptr, ptr @verify_exported_symbols._entry, ptr @verify_exported_symbols._entry_ptr, ptr @verify_namespace_is_imported._entry, ptr @verify_namespace_is_imported._entry_ptr, ptr @str__module__trace_system_name, ptr @trace_event_fields_module_load, ptr @trace_event_type_funcs_module_load, ptr @print_fmt_module_load, ptr @trace_event_fields_module_free, ptr @trace_event_type_funcs_module_free, ptr @print_fmt_module_free, ptr @trace_event_fields_module_refcnt, ptr @trace_event_type_funcs_module_refcnt, ptr @print_fmt_module_refcnt, ptr @trace_event_fields_module_request, ptr @trace_event_type_funcs_module_request, ptr @print_fmt_module_request, ptr @modules, ptr @kdb_modules, ptr @sig_enforce, ptr @modules_disabled, ptr @module_notify_list, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @types__delete_module, ptr @args__delete_module, ptr @.str.5, ptr @module_uevent, ptr @.str.6, ptr @.str.7, ptr @module_blacklist, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @types__init_module, ptr @args__init_module, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @types__finit_module, ptr @args__finit_module, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.19, ptr @last_unloaded_module, ptr @.str.22, ptr @.str.25, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @trace_raw_output_module_load.__flags, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @module_mutex, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @module_wq, ptr @.str.58, ptr @.str.59, ptr @init_completion.__key, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @find_symbol.arr, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.79, ptr @.str.82, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.94, ptr @.str.97, ptr @.str.100, ptr @.str.103, ptr @.str.106, ptr @.str.109, ptr @.str.112, ptr @.str.115, ptr @.str.118, ptr @.str.121, ptr @.str.124, ptr @.str.127, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.135, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.145, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @vermagic, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.157, ptr @.str.159, ptr @.str.161, ptr @.str.163, ptr @.str.164, ptr @.str.165, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @.str.181, ptr @layout_sections.masks, ptr @.str.182, ptr @.str.183, ptr @.str.184, ptr @.str.185, ptr @.str.186, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.190, ptr @.str.191, ptr @.str.193, ptr @init_param_lock.__key, ptr @.str.195, ptr @.str.196, ptr @.str.197, ptr @.str.198, ptr @.str.199, ptr @.str.200, ptr @.str.201, ptr @.str.202, ptr @.str.203, ptr @.str.204, ptr @.str.205, ptr @.str.206, ptr @.str.207, ptr @.str.208, ptr @.str.209, ptr @.str.210, ptr @.str.211, ptr @.str.212, ptr @.str.213, ptr @.str.214, ptr @.str.215, ptr @.str.216, ptr @.str.217, ptr @.str.219, ptr @.str.221, ptr @.str.222, ptr @.str.223, ptr @.str.224, ptr @.str.225, ptr @.str.226, ptr @.str.227, ptr @modinfo_attrs, ptr @modinfo_version, ptr @modinfo_srcversion, ptr @modinfo_initstate, ptr @modinfo_coresize, ptr @modinfo_initsize, ptr @modinfo_taint, ptr @modinfo_refcnt, ptr @.str.228, ptr @.str.229, ptr @.str.230, ptr @.str.232, ptr @.str.233, ptr @.str.234, ptr @.str.235, ptr @.str.236, ptr @.str.237, ptr @.str.238, ptr @.str.239, ptr @.str.240, ptr @.str.241, ptr @.str.242, ptr @.str.243, ptr @.str.244, ptr @.str.246, ptr @.str.248, ptr @.str.249, ptr @.str.250, ptr @.str.251, ptr @.str.252, ptr @.str.254, ptr @.str.256, ptr @.str.257, ptr @.str.258, ptr @.str.259, ptr @.str.260, ptr @.str.261, ptr @.str.262, ptr @.str.263, ptr @.str.264, ptr @.str.265, ptr @.str.266, ptr @.str.267, ptr @.str.268, ptr @.str.269, ptr @.str.270, ptr @.str.271, ptr @.str.272, ptr @.str.273, ptr @.str.274, ptr @.str.275, ptr @.str.276, ptr @.str.278, ptr @.str.280, ptr @module_add_modinfo_attrs.__key, ptr @.str.281, ptr @add_sect_attrs.__key, ptr @.str.282, ptr @add_notes_attrs.__key, ptr @.str.283, ptr @.str.284, ptr @.str.285, ptr @init_free_list, ptr @init_free_wq, ptr @.str.286, ptr @.str.287, ptr @.str.288, ptr @.str.289, ptr @.str.290, ptr @.str.291, ptr @modules_proc_ops, ptr @modules_op, ptr @.str.292, ptr @.str.293, ptr @.str.294, ptr @.str.295, ptr @.str.296, ptr @.str.297, ptr @.str.298, ptr @.str.299, ptr @.str.300, ptr @.str.301, ptr @.str.302, ptr @switch.table.show_initstate], section "llvm.metadata"
@0 = internal global [361 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__module__trace_system_name to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.303 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_module_load to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_module_load to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.309 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_module_load to i32), i32 165, i32 224, i32 ptrtoint (ptr @___asan_gen_.312 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_module_load to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.315 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_module_free to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.318 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_module_free to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.321 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_module_free to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.324 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_module_free to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.327 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_module_refcnt to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.330 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_module_refcnt to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.333 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_module_refcnt to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_module_get to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.341 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_module_put to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.342 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_module_request to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_module_request to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_module_request to i32), i32 77, i32 128, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_module_request to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @modules to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.357 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.359 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @kdb_modules to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.360 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sig_enforce to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @modules_disabled to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.366 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.368 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @module_notify_list to i32), i32 100, i32 160, i32 ptrtoint (ptr @___asan_gen_.369 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.377 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.377 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__delete_module to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__delete_module to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.387 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__delete_module to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__delete_module to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.396 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @module_uevent to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.402 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.407 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @module_blacklist to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__init_module to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__init_module to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.423 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__init_module to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__init_module to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.432 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__finit_module to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.438 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__finit_module to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__finit_module to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.450 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__finit_module to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_modules._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_modules._entry.18 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @last_unloaded_module to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.474 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_modules._entry.21 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_modules._entry.24 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_module_load.__flags to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.507 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @module_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.561 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @module_wq to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_completion.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1305 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @find_symbol.arr to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.612 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.620 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.620 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.641 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @load_module._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.659 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.659 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.659 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @load_module._entry.78 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 91, i32 128, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @load_module._entry.81 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.680 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.683 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @module_sig_check._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @elf_validity_check._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.704 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @elf_validity_check._entry.93 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @elf_validity_check._entry.96 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.716 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.716 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @elf_validity_check._entry.99 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @elf_validity_check._entry.102 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @elf_validity_check._entry.105 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @elf_validity_check._entry.108 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @elf_validity_check._entry.111 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @elf_validity_check._entry.114 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @elf_validity_check._entry.117 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.758 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.758 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @elf_validity_check._entry.120 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.764 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 74, i32 128, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.764 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @elf_validity_check._entry.123 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @elf_validity_check._entry.126 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.779 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @setup_load_info._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.794 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @setup_load_info._entry.134 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.803 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.809 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_version._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_version._entry.144 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.830 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.830 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @try_to_force_load._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.839 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.839 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.839 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.845 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.851 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vermagic to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.852 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_modinfo._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.863 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.863 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.863 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.866 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_modinfo._entry.156 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.872 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.872 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.875 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_modinfo._entry.160 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.881 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 91, i32 128, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.881 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.884 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.887 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.890 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_modinfo_retpoline._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.899 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.899 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.899 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_modinfo_livepatch._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.911 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 78, i32 128, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.911 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.911 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.914 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_license._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.923 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.923 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.923 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.926 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.929 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.935 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.938 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.941 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @module_enforce_rwx_sections._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.950 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.950 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.950 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @layout_sections.masks to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.951 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.953 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.959 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.959 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.184 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.965 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.968 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.977 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @percpu_modalloc._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.986 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.986 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.986 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @percpu_modalloc._entry.192 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_param_lock.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1305 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1001 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1004 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1007 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1010 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1013 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1016 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1019 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @find_module_sections._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1028 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1028 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1028 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1031 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1034 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.207 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1040 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1043 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1046 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1049 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.213 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1055 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1067 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @find_module_sections._entry.218 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1073 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.219 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1073 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1076 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.222 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1079 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1082 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.224 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1085 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_module_license_and_versions._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1094 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.225 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1094 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1094 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1097 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @modinfo_attrs to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1098 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1100 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @modinfo_version to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1101 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1124 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @modinfo_srcversion to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1104 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1127 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @modinfo_initstate to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1107 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1109 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @modinfo_coresize to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1110 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1112 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @modinfo_initsize to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1113 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1115 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @modinfo_taint to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1116 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1118 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @modinfo_refcnt to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1121 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.228 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1124 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1127 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1130 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.232 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1133 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1136 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.234 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1139 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1142 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.236 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1145 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1148 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.239 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1154 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.241 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @simplify_symbols._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.243 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.244 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1172 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @simplify_symbols._entry.245 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.246 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @resolve_symbol_wait._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.248 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.249 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.250 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @inherit_taint._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.251 to i32), i32 78, i32 128, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.252 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @inherit_taint._entry.253 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.254 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.256 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @verify_namespace_is_imported._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.257 to i32), i32 74, i32 128, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.258 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.259 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.260 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.261 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.262 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.263 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.264 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @apply_relocate_add._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.265 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.266 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.267 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @verify_exported_symbols._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.269 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.270 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.271 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1262 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @unknown_module_param_cb._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.272 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.273 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.274 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mod_sysfs_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.275 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.276 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mod_sysfs_init._entry.277 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1289 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.278 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1289 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.280 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @module_add_modinfo_attrs.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1305 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.281 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1298 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @add_sect_attrs.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1305 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1301 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.282 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1304 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @add_notes_attrs.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1305 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.283 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1310 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @do_init_module._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1311 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1319 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.284 to i32), i32 106, i32 160, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1319 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.285 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1319 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_free_list to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1320 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1322 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_free_wq to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1323 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.286 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.287 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.288 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.289 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.290 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.291 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1343 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @modules_proc_ops to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1344 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @modules_op to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1347 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.292 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.293 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.294 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.295 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.296 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.297 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.298 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.299 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.300 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.301 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.302 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1380 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.show_initstate to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1383 to i32), i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

@sys_delete_module = dso_local alias i32 (ptr, i32), ptr @__se_sys_delete_module
@sys_init_module = dso_local alias i32 (ptr, i32, ptr), ptr @__se_sys_init_module
@sys_finit_module = dso_local alias i32 (i32, ptr, i32), ptr @__se_sys_finit_module

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_module_load(ptr nocapture readnone %__data, ptr noundef %mod) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_module_load, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mod) #29
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_module_free(ptr nocapture readnone %__data, ptr noundef %mod) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_module_free, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mod) #29
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_module_get(ptr nocapture readnone %__data, ptr noundef %mod, i32 noundef %ip) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_module_get, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mod, i32 noundef %ip) #29
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_module_put(ptr nocapture readnone %__data, ptr noundef %mod, i32 noundef %ip) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_module_put, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mod, i32 noundef %ip) #29
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_module_request(ptr nocapture readnone %__data, ptr noundef %name, i1 noundef zeroext %wait, i32 noundef %ip) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_module_request, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %name, i1 noundef zeroext %wait, i32 noundef %ip) #29
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool10.not = icmp eq ptr %6, null
  br i1 %tobool10.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_module_load(ptr noundef %__data, ptr noundef readonly %mod) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #29
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !770

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !771

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #29
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %name.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %call.i25 = tail call i32 @strlen(ptr noundef nonnull %name.i) #31
  %add = add i32 %call.i25, 17
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #29
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %add.i = shl i32 %call.i25, 16
  %or.i = add i32 %add.i, 65552
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_module_load, ptr %call3, i32 0, i32 2
  %3 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %taints = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 28
  %4 = ptrtoint ptr %taints to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %taints, align 4
  %taints6 = getelementptr inbounds %struct.trace_event_raw_module_load, ptr %call3, i32 0, i32 1
  %6 = ptrtoint ptr %taints6 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %taints6, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 16
  %tobool9.not = icmp eq ptr %name.i, null
  %spec.select = select i1 %tobool9.not, ptr @.str.27, ptr %name.i
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #32
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #29
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #29
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_module_load(ptr noundef %__data, ptr noundef readonly %mod) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #29
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !772
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #29
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !772
  %name.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %call.i = tail call i32 @strlen(ptr noundef nonnull %name.i) #31
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65552
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %add12 = add i32 %call.i, 28
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #29
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #29
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #29
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !760) #29
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_module_load, ptr %call13, i32 0, i32 2
  %27 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %taints = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 28
  %28 = ptrtoint ptr %taints to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %taints, align 4
  %taints17 = getelementptr inbounds %struct.trace_event_raw_module_load, ptr %call13, i32 0, i32 1
  %30 = ptrtoint ptr %taints17 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %taints17, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 16
  %tobool21.not = icmp eq ptr %name.i, null
  %spec.select = select i1 %tobool21.not, ptr @.str.27, ptr %name.i
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #32
  %31 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rctx, align 4
  %33 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %32, ptr noundef %__data, i64 noundef 1, ptr noundef %34, ptr noundef %11, ptr noundef null) #29
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #29
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #29
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_module_free(ptr noundef %__data, ptr noundef readonly %mod) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #29
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !770

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !771

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #29
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %name.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %call.i22 = tail call i32 @strlen(ptr noundef nonnull %name.i) #31
  %add = add i32 %call.i22, 13
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #29
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %add.i = shl i32 %call.i22, 16
  %or.i = add i32 %add.i, 65548
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_module_free, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 12
  %tobool8.not = icmp eq ptr %name.i, null
  %spec.select = select i1 %tobool8.not, ptr @.str.27, ptr %name.i
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #32
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #29
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #29
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_module_free(ptr noundef %__data, ptr noundef readonly %mod) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #29
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !772
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #29
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !772
  %name.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %call.i = tail call i32 @strlen(ptr noundef nonnull %name.i) #31
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65548
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %add12 = add i32 %call.i, 24
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #29
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #29
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #29
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !760) #29
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_module_free, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 12
  %tobool20.not = icmp eq ptr %name.i, null
  %spec.select = select i1 %tobool20.not, ptr @.str.27, ptr %name.i
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #32
  %28 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rctx, align 4
  %30 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %29, ptr noundef %__data, i64 noundef 1, ptr noundef %31, ptr noundef %11, ptr noundef null) #29
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #29
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #29
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_module_refcnt(ptr noundef %__data, ptr noundef %mod, i32 noundef %ip) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #29
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !770

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !771

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #29
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %name.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %call.i29 = tail call i32 @strlen(ptr noundef nonnull %name.i) #31
  %add = add i32 %call.i29, 21
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #29
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %add.i = shl i32 %call.i29, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_module_refcnt, ptr %call3, i32 0, i32 3
  %3 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %ip6 = getelementptr inbounds %struct.trace_event_raw_module_refcnt, ptr %call3, i32 0, i32 1
  %4 = ptrtoint ptr %ip6 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %ip, ptr %ip6, align 4
  %refcnt = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 66
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %refcnt, i32 noundef 4) #29
  %5 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %refcnt, align 4
  %refcnt8 = getelementptr inbounds %struct.trace_event_raw_module_refcnt, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %refcnt8 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %refcnt8, align 4
  %8 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %9, 65535
  %add.ptr = getelementptr i8, ptr %call3, i32 %and
  %tobool11.not = icmp eq ptr %name.i, null
  %spec.select = select i1 %tobool11.not, ptr @.str.27, ptr %name.i
  %call14 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #32
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #29
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #29
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_module_refcnt(ptr noundef %__data, ptr noundef %mod, i32 noundef %ip) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #29
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !772
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #29
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !772
  %name.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %call.i = tail call i32 @strlen(ptr noundef nonnull %name.i) #31
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65556
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %add12 = add i32 %call.i, 32
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #29
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #29
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #29
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !760) #29
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_module_refcnt, ptr %call13, i32 0, i32 3
  %27 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %ip17 = getelementptr inbounds %struct.trace_event_raw_module_refcnt, ptr %call13, i32 0, i32 1
  %28 = ptrtoint ptr %ip17 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %ip, ptr %ip17, align 4
  %refcnt = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 66
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %refcnt, i32 noundef 4) #29
  %29 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %refcnt, align 4
  %refcnt19 = getelementptr inbounds %struct.trace_event_raw_module_refcnt, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %refcnt19 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %refcnt19, align 4
  %32 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %__data_loc_name, align 4
  %and21 = and i32 %33, 65535
  %add.ptr = getelementptr i8, ptr %call13, i32 %and21
  %tobool23.not = icmp eq ptr %name.i, null
  %spec.select = select i1 %tobool23.not, ptr @.str.27, ptr %name.i
  %call26 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #32
  %34 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rctx, align 4
  %36 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %35, ptr noundef %__data, i64 noundef 1, ptr noundef %37, ptr noundef %11, ptr noundef null) #29
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #29
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #29
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_module_request(ptr noundef %__data, ptr noundef readonly %name, i1 noundef zeroext %wait, i32 noundef %ip) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  %frombool = zext i1 %wait to i8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #29
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !770

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !771

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #29
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %tobool.not.i29 = icmp eq ptr %name, null
  %spec.select.i = select i1 %tobool.not.i29, ptr @.str.27, ptr %name
  %call.i30 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #31
  %add = add i32 %call.i30, 21
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #29
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %cleanup, label %if.end6

if.end6:                                          ; preds = %if.end
  %add.i = shl i32 %call.i30, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_module_request, ptr %call3, i32 0, i32 3
  %3 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %ip8 = getelementptr inbounds %struct.trace_event_raw_module_request, ptr %call3, i32 0, i32 1
  %4 = ptrtoint ptr %ip8 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %ip, ptr %ip8, align 4
  %wait10 = getelementptr inbounds %struct.trace_event_raw_module_request, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %wait10 to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %frombool, ptr %wait10, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %call14 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #32
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #29
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #29
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_module_request(ptr noundef %__data, ptr noundef readonly %name, i1 noundef zeroext %wait, i32 noundef %ip) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  %frombool = zext i1 %wait to i8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #29
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !772
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #29
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !772
  %tobool.not.i = icmp eq ptr %name, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.27, ptr %name
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #31
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65556
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i53.not = icmp eq ptr %15, null
  br i1 %tobool.not.i53.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true8, %entry
  %add13 = add i32 %call.i, 32
  %and = and i32 %add13, -8
  %sub = add i32 %and, -4
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #29
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %cleanup, label %if.end17

if.end17:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #29
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #29
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !760) #29
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_module_request, ptr %call14, i32 0, i32 3
  %27 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %ip19 = getelementptr inbounds %struct.trace_event_raw_module_request, ptr %call14, i32 0, i32 1
  %28 = ptrtoint ptr %ip19 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %ip, ptr %ip19, align 4
  %wait21 = getelementptr inbounds %struct.trace_event_raw_module_request, ptr %call14, i32 0, i32 2
  %29 = ptrtoint ptr %wait21 to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 %frombool, ptr %wait21, align 4
  %add.ptr = getelementptr i8, ptr %call14, i32 20
  %call26 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #32
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef %sub, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #29
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end, %land.lhs.true8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #29
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #29
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_module_load(ptr noundef %__data, ptr noundef %mod) #0 align 64 {
entry:
  %0 = ptrtoint ptr %mod to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #29
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_module_free(ptr noundef %__data, ptr noundef %mod) #0 align 64 {
entry:
  %0 = ptrtoint ptr %mod to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #29
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_module_refcnt(ptr noundef %__data, ptr noundef %mod, i32 noundef %ip) #0 align 64 {
entry:
  %0 = ptrtoint ptr %mod to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %ip to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #29
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_module_request(ptr noundef %__data, ptr noundef %name, i1 noundef zeroext %wait, i32 noundef %ip) #0 align 64 {
entry:
  %0 = ptrtoint ptr %name to i32
  %conv = zext i32 %0 to i64
  %conv5 = zext i1 %wait to i64
  %conv9 = zext i32 %ip to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv5, i64 noundef %conv9) #29
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define dso_local void @set_module_sig_enforced() local_unnamed_addr #3 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  store i8 1, ptr @sig_enforce, align 1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @is_module_sig_enforced() #4 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i8, ptr @sig_enforce, align 1, !range !773
  %tobool = icmp ne i8 %0, 0
  ret i1 %tobool
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @register_module_notifier(ptr noundef %nb) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @blocking_notifier_chain_register(ptr noundef nonnull @module_notify_list, ptr noundef %nb) #29
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blocking_notifier_chain_register(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @unregister_module_notifier(ptr noundef %nb) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @blocking_notifier_chain_unregister(ptr noundef nonnull @module_notify_list, ptr noundef %nb) #29
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blocking_notifier_chain_unregister(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: noreturn nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__module_put_and_kthread_exit(ptr noundef %mod, i32 noundef %code) #5 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @module_put(ptr noundef %mod)
  call void @__asan_handle_no_return()
  tail call void @kthread_exit(i32 noundef %code) #33
  unreachable
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @module_put(ptr noundef %module) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %module, null
  br i1 %tobool.not, label %if.end27, label %do.body

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !774
  %refcnt = getelementptr inbounds %struct.module, ptr %module, i32 0, i32 66
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt, i32 noundef 4) #29
  %4 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %refcnt, align 4
  br label %do.body1.i.i

do.body1.i.i:                                     ; preds = %arch_atomic_cmpxchg.exit.i.i.i, %do.body
  %c.0.i.i = phi i32 [ %5, %do.body ], [ %asmresult3.i.i.i.i.i, %arch_atomic_cmpxchg.exit.i.i.i ]
  %sub.i.i = add i32 %c.0.i.i, -1
  %cmp.i.i = icmp slt i32 %sub.i.i, 0
  br i1 %cmp.i.i, label %do.end12, label %do.cond3.i.i, !prof !771

do.cond3.i.i:                                     ; preds = %do.body1.i.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !775
  tail call void @llvm.prefetch.p0(ptr %refcnt, i32 1, i32 3, i32 1) #29
  br label %do.body.i.i.i.i.i

do.body.i.i.i.i.i:                                ; preds = %do.body.i.i.i.i.i, %do.cond3.i.i
  %6 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %refcnt, ptr %refcnt, i32 %c.0.i.i, i32 %sub.i.i, ptr elementtype(i32) %refcnt) #29, !srcloc !776
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %6, 0
  %tobool.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %arch_atomic_cmpxchg.exit.i.i.i, label %do.body.i.i.i.i.i

arch_atomic_cmpxchg.exit.i.i.i:                   ; preds = %do.body.i.i.i.i.i
  %asmresult3.i.i.i.i.i = extractvalue { i32, i32 } %6, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !777
  %cmp.not.i.i.i = icmp eq i32 %asmresult3.i.i.i.i.i, %c.0.i.i
  br i1 %cmp.not.i.i.i, label %if.end, label %do.body1.i.i, !prof !770

do.end12:                                         ; preds = %do.body1.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1094, i32 noundef 9, ptr noundef null) #29
  br label %if.end

if.end:                                           ; preds = %do.end12, %arch_atomic_cmpxchg.exit.i.i.i
  %7 = tail call ptr @llvm.returnaddress(i32 0)
  %8 = ptrtoint ptr %7 to i32
  tail call fastcc void @trace_module_put(ptr noundef nonnull %module, i32 noundef %8)
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !778
  %9 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i31 = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i31 to ptr
  %preempt_count.i.i32 = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i32 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i32, align 4
  %sub.i = add i32 %12, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i32, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.end, %entry
  ret void
}

; Function Attrs: noreturn null_pointer_is_valid
declare dso_local void @kthread_exit(i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @find_module(ptr nocapture noundef readonly %name) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @strlen(ptr noundef %name) #32
  %call1 = tail call fastcc ptr @find_module_all(ptr noundef %name, i32 noundef %call, i1 noundef zeroext false)
  ret ptr %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @find_module_all(ptr nocapture noundef readonly %name, i32 noundef %len, i1 noundef zeroext %even_unformed) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %module_assert_mutex_or_preempt.exit, label %if.end.i, !prof !771

if.end.i:                                         ; preds = %entry
  %call.i = tail call i32 @rcu_read_lock_sched_held() #29
  %tobool4.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool4.not.i, label %land.rhs.i, label %module_assert_mutex_or_preempt.exit

land.rhs.i:                                       ; preds = %if.end.i
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @module_mutex, i32 0, i32 5), i32 noundef -1) #29
  %tobool6.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool6.not.i, label %land.rhs14.i, label %module_assert_mutex_or_preempt.exit

land.rhs14.i:                                     ; preds = %land.rhs.i
  %.b57.i = load i1, ptr @module_assert_mutex_or_preempt.__already_done, align 1
  br i1 %.b57.i, label %module_assert_mutex_or_preempt.exit, label %if.then25.i, !prof !770

if.then25.i:                                      ; preds = %land.rhs14.i
  store i1 true, ptr @module_assert_mutex_or_preempt.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 266, i32 noundef 9, ptr noundef null) #29
  br label %module_assert_mutex_or_preempt.exit

module_assert_mutex_or_preempt.exit:              ; preds = %if.then25.i, %land.rhs14.i, %land.rhs.i, %if.end.i, %entry
  %call.i42 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @module_mutex, i32 0, i32 5), i32 noundef -1) #29
  %tobool.not = icmp eq i32 %call.i42, 0
  br i1 %tobool.not, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %module_assert_mutex_or_preempt.exit
  %call1 = tail call i32 @rcu_read_lock_any_held() #29
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.lhs.true3, label %do.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %call4 = tail call i32 @debug_lockdep_rcu_enabled() #29
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %do.end, label %land.lhs.true6

land.lhs.true6:                                   ; preds = %land.lhs.true3
  %.b41 = load i1, ptr @find_module_all.__warned, align 1
  br i1 %.b41, label %do.end, label %if.then

if.then:                                          ; preds = %land.lhs.true6
  store i1 true, ptr @find_module_all.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 569, ptr noundef nonnull @.str.1) #29
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true6, %land.lhs.true3, %land.lhs.true, %module_assert_mutex_or_preempt.exit
  %.pn43 = load volatile ptr, ptr @modules, align 4
  %cmp.not45 = icmp eq ptr %.pn43, @modules
  br i1 %cmp.not45, label %cleanup, label %for.body

for.body:                                         ; preds = %for.inc, %do.end
  %.pn46 = phi ptr [ %.pn, %for.inc ], [ %.pn43, %do.end ]
  %mod.047 = getelementptr i8, ptr %.pn46, i32 -4
  br i1 %even_unformed, label %if.end16, label %land.lhs.true13

land.lhs.true13:                                  ; preds = %for.body
  %1 = ptrtoint ptr %mod.047 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %mod.047, align 128
  %cmp14 = icmp eq i32 %2, 3
  br i1 %cmp14, label %for.inc, label %if.end16

if.end16:                                         ; preds = %land.lhs.true13, %for.body
  %name17 = getelementptr i8, ptr %.pn46, i32 8
  %call18 = tail call i32 @strlen(ptr noundef %name17) #32
  %cmp19 = icmp eq i32 %call18, %len
  br i1 %cmp19, label %land.lhs.true20, label %for.inc

land.lhs.true20:                                  ; preds = %if.end16
  %bcmp = tail call i32 @bcmp(ptr %name17, ptr %name, i32 %len) #32
  %tobool24.not = icmp eq i32 %bcmp, 0
  br i1 %tobool24.not, label %cleanup, label %for.inc

for.inc:                                          ; preds = %land.lhs.true20, %if.end16, %land.lhs.true13
  %3 = ptrtoint ptr %.pn46 to i32
  call void @__asan_load4_noabort(i32 %3)
  %.pn = load volatile ptr, ptr %.pn46, align 4
  %cmp.not = icmp eq ptr %.pn, @modules
  br i1 %cmp.not, label %cleanup, label %for.body

cleanup:                                          ; preds = %for.inc, %land.lhs.true20, %do.end
  %retval.0 = phi ptr [ null, %do.end ], [ null, %for.inc ], [ %mod.047, %land.lhs.true20 ]
  ret ptr %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #7

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @__is_module_percpu_address(i32 noundef %addr, ptr noundef %can_addr) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !779
  %call = tail call i32 @rcu_read_lock_any_held() #29
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %do.end7

land.lhs.true:                                    ; preds = %entry
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #29
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %do.end7, label %land.lhs.true4

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b82 = load i1, ptr @__is_module_percpu_address.__warned, align 1
  br i1 %.b82, label %do.end7, label %if.then

if.then:                                          ; preds = %land.lhs.true4
  store i1 true, ptr @__is_module_percpu_address.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 640, ptr noundef nonnull @.str.1) #29
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4, %land.lhs.true, %entry
  %.pn90 = load volatile ptr, ptr @modules, align 4
  %cmp.not91 = icmp eq ptr %.pn90, @modules
  br i1 %cmp.not91, label %do.body62, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %do.end7
  %4 = inttoptr i32 %addr to ptr
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %.pn92 = phi ptr [ %.pn90, %for.body.lr.ph ], [ %.pn, %for.inc ]
  %mod.0 = getelementptr i8, ptr %.pn92, i32 -4
  %5 = ptrtoint ptr %mod.0 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %mod.0, align 128
  %cmp12 = icmp eq i32 %6, 3
  br i1 %cmp12, label %for.inc, label %if.end14

if.end14:                                         ; preds = %for.body
  %percpu_size = getelementptr i8, ptr %.pn92, i32 712
  %7 = ptrtoint ptr %percpu_size to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %percpu_size, align 4
  %tobool15.not = icmp eq i32 %8, 0
  br i1 %tobool15.not, label %for.inc, label %for.cond18.preheader

for.cond18.preheader:                             ; preds = %if.end14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %9 = load i32, ptr @nr_cpu_ids, align 4
  %percpu = getelementptr i8, ptr %.pn92, i32 708
  br label %for.cond18

for.cond18:                                       ; preds = %for.body21, %for.cond18.preheader
  %cpu.0 = phi i32 [ %call19, %for.body21 ], [ -1, %for.cond18.preheader ]
  %call19 = tail call i32 @cpumask_next(i32 noundef %cpu.0, ptr noundef nonnull @__cpu_possible_mask) #34
  %cmp20 = icmp ult i32 %call19, %9
  br i1 %cmp20, label %for.body21, label %for.inc

for.body21:                                       ; preds = %for.cond18
  %10 = ptrtoint ptr %percpu to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %percpu, align 8
  %12 = ptrtoint ptr %11 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call19
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %12
  %15 = inttoptr i32 %add to ptr
  %cmp27.not = icmp uge ptr %4, %15
  %add.ptr30 = getelementptr i8, ptr %15, i32 %8
  %cmp31 = icmp ugt ptr %add.ptr30, %4
  %or.cond = select i1 %cmp27.not, i1 %cmp31, i1 false
  br i1 %or.cond, label %if.then32, label %for.cond18

if.then32:                                        ; preds = %for.body21
  %tobool33.not = icmp eq ptr %can_addr, null
  br i1 %tobool33.not, label %do.body48, label %if.then34

if.then34:                                        ; preds = %if.then32
  %sub.ptr.sub = sub i32 %addr, %add
  %16 = ptrtoint ptr %can_addr to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %sub.ptr.sub, ptr %can_addr, align 4
  %17 = ptrtoint ptr %percpu to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %percpu, align 8
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__boot_cpu_id to i32))
  %20 = load i32, ptr @__boot_cpu_id, align 4
  %arrayidx44 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %20
  %21 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx44, align 4
  %add45 = add i32 %sub.ptr.sub, %19
  %add46 = add i32 %add45, %22
  store i32 %add46, ptr %can_addr, align 4
  br label %do.body48

do.body48:                                        ; preds = %if.then34, %if.then32
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !780
  br label %cleanup65

for.inc:                                          ; preds = %for.cond18, %if.end14, %for.body
  %23 = ptrtoint ptr %.pn92 to i32
  call void @__asan_load4_noabort(i32 %23)
  %.pn = load volatile ptr, ptr %.pn92, align 4
  %cmp.not = icmp eq ptr %.pn, @modules
  br i1 %cmp.not, label %do.body62, label %for.body

do.body62:                                        ; preds = %for.inc, %do.end7
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !781
  br label %cleanup65

cleanup65:                                        ; preds = %do.body62, %do.body48
  %cmp.not89 = phi i1 [ true, %do.body48 ], [ false, %do.body62 ]
  %24 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i83 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i83 to ptr
  %preempt_count.i.i84 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i84 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i84, align 4
  %sub.i = add i32 %27, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i84, align 4
  ret i1 %cmp.not89
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_any_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #8

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @is_module_percpu_address(i32 noundef %addr) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @__is_module_percpu_address(i32 noundef %addr, ptr noundef null)
  ret i1 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @module_refcount(ptr noundef %mod) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %refcnt = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 66
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcnt, i32 noundef 4) #29
  %0 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %refcnt, align 4
  %sub = add i32 %1, -1
  ret i32 %sub
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_delete_module(i32 noundef %name_user, i32 noundef %flags) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %name_user to ptr
  %call = tail call fastcc i32 @__do_sys_delete_module(ptr noundef %0, i32 noundef %flags)
  ret i32 %call
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__do_sys_delete_module(ptr noundef %name_user, i32 noundef %flags) unnamed_addr #9 align 64 {
entry:
  %name = alloca [60 x i8], align 1
  %forced = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 60, ptr nonnull %name) #29
  %0 = call ptr @memset(ptr %name, i32 255, i32 60)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %forced) #29
  %call = tail call zeroext i1 @capable(i32 noundef 16) #29
  br i1 %call, label %lor.lhs.false, label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, ptr @modules_disabled, align 4
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.end, label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %call1 = call i32 @strncpy_from_user(ptr noundef nonnull %name, ptr noundef %name_user, i32 noundef 59) #29
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %cleanup, label %if.end3

if.end3:                                          ; preds = %if.end
  %arrayidx = getelementptr inbounds [60 x i8], ptr %name, i32 0, i32 59
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 0, ptr %arrayidx, align 1
  %call5 = call i32 @mutex_lock_interruptible_nested(ptr noundef nonnull @module_mutex, i32 noundef 0) #29
  %cmp6.not = icmp eq i32 %call5, 0
  br i1 %cmp6.not, label %if.end8, label %cleanup

if.end8:                                          ; preds = %if.end3
  %call.i = call i32 @strlen(ptr noundef nonnull %name) #31
  %call1.i = call fastcc ptr @find_module_all(ptr noundef nonnull %name, i32 noundef %call.i, i1 noundef zeroext false) #29
  %tobool11.not = icmp eq ptr %call1.i, null
  br i1 %tobool11.not, label %out, label %if.end13

if.end13:                                         ; preds = %if.end8
  %source_list = getelementptr inbounds %struct.module, ptr %call1.i, i32 0, i32 63
  %3 = ptrtoint ptr %source_list to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %source_list, align 4
  %cmp.i.not = icmp eq ptr %4, %source_list
  br i1 %cmp.i.not, label %if.end17, label %out

if.end17:                                         ; preds = %if.end13
  %5 = ptrtoint ptr %call1.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %call1.i, align 128
  %cmp18.not = icmp eq i32 %6, 0
  br i1 %cmp18.not, label %if.end28, label %do.body

do.body:                                          ; preds = %if.end17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__do_sys_delete_module.__UNIQUE_ID_ddebug290, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__do_sys_delete_module, %if.then24)) #29
          to label %out [label %if.then24], !srcloc !782

if.then24:                                        ; preds = %do.body
  %name25 = getelementptr inbounds %struct.module, ptr %call1.i, i32 0, i32 2
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__do_sys_delete_module.__UNIQUE_ID_ddebug290, ptr noundef nonnull @.str.57, ptr noundef %name25) #29
  br label %out

if.end28:                                         ; preds = %if.end17
  %init = getelementptr inbounds %struct.module, ptr %call1.i, i32 0, i32 23
  %7 = ptrtoint ptr %init to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %init, align 4
  %tobool29.not = icmp eq ptr %8, null
  br i1 %tobool29.not, label %if.end36, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end28
  %exit = getelementptr inbounds %struct.module, ptr %call1.i, i32 0, i32 65
  %9 = ptrtoint ptr %exit to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %exit, align 64
  %tobool30.not = icmp eq ptr %10, null
  br i1 %tobool30.not, label %if.then31, label %if.end36

if.then31:                                        ; preds = %land.lhs.true
  %and.i = and i32 %flags, 512
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %try_force_unload.exit.thread, label %try_force_unload.exit

try_force_unload.exit.thread:                     ; preds = %if.then31
  %11 = ptrtoint ptr %forced to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %forced, align 4
  br label %out

try_force_unload.exit:                            ; preds = %if.then31
  call void @add_taint(i32 noundef 3, i32 noundef 1) #29
  %12 = ptrtoint ptr %forced to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %and.i, ptr %forced, align 4
  br label %if.end36

if.end36:                                         ; preds = %try_force_unload.exit, %land.lhs.true, %if.end28
  %call37 = call fastcc i32 @try_stop_module(ptr noundef nonnull %call1.i, i32 noundef %flags, ptr noundef nonnull %forced)
  %cmp38.not = icmp eq i32 %call37, 0
  br i1 %cmp38.not, label %if.end40, label %out

if.end40:                                         ; preds = %if.end36
  call void @mutex_unlock(ptr noundef nonnull @module_mutex) #29
  %exit41 = getelementptr inbounds %struct.module, ptr %call1.i, i32 0, i32 65
  %13 = ptrtoint ptr %exit41 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %exit41, align 64
  %cmp42.not = icmp eq ptr %14, null
  br i1 %cmp42.not, label %if.end45, label %if.then43

if.then43:                                        ; preds = %if.end40
  call void %14() #29
  br label %if.end45

if.end45:                                         ; preds = %if.then43, %if.end40
  %call46 = call i32 @blocking_notifier_call_chain(ptr noundef nonnull @module_notify_list, i32 noundef 2, ptr noundef nonnull %call1.i) #29
  call void @ftrace_release_mod(ptr noundef nonnull %call1.i) #29
  call void @async_synchronize_full() #29
  %name47 = getelementptr inbounds %struct.module, ptr %call1.i, i32 0, i32 2
  %call49 = call i32 @strlcpy(ptr noundef nonnull @last_unloaded_module, ptr noundef %name47, i32 noundef 61) #29
  call fastcc void @free_module(ptr noundef nonnull %call1.i)
  call void @__wake_up(ptr noundef nonnull @module_wq, i32 noundef 3, i32 noundef 0, ptr noundef null) #29
  br label %cleanup

out:                                              ; preds = %if.end36, %try_force_unload.exit.thread, %if.then24, %do.body, %if.end13, %if.end8
  %ret.0 = phi i32 [ %call37, %if.end36 ], [ -2, %if.end8 ], [ -11, %if.end13 ], [ -16, %if.then24 ], [ -16, %do.body ], [ -16, %try_force_unload.exit.thread ]
  call void @mutex_unlock(ptr noundef nonnull @module_mutex) #29
  br label %cleanup

cleanup:                                          ; preds = %out, %if.end45, %if.end3, %if.end, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ %ret.0, %out ], [ 0, %if.end45 ], [ -1, %lor.lhs.false ], [ -1, %entry ], [ -14, %if.end ], [ -4, %if.end3 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %forced) #29
  call void @llvm.lifetime.end.p0(i64 60, ptr nonnull %name) #29
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__symbol_put(ptr noundef %symbol) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %fsa = alloca %struct.find_symbol_arg, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fsa) #29
  %0 = getelementptr inbounds i8, ptr %fsa, i32 4
  %1 = call ptr @memset(ptr %0, i32 0, i32 20)
  %2 = ptrtoint ptr %fsa to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %symbol, ptr %fsa, align 4
  %gplok = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 1
  %3 = ptrtoint ptr %gplok to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 1, ptr %gplok, align 4
  %4 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %7, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !783
  %call = call fastcc zeroext i1 @find_symbol(ptr noundef nonnull %fsa)
  br i1 %call, label %do.end11, label %do.body4, !prof !770

do.body4:                                         ; preds = %entry
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1021, 0\0A.popsection", ""() #29, !srcloc !784
  unreachable

do.end11:                                         ; preds = %entry
  %owner = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 3
  %8 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %owner, align 4
  tail call void @module_put(ptr noundef %9)
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !785
  %10 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i15 = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i15 to ptr
  %preempt_count.i.i16 = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i16 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i16, align 4
  %sub.i = add i32 %13, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i16, align 4
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fsa) #29
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @find_symbol(ptr nocapture noundef %fsa) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %arr = alloca [2 x %struct.symsearch], align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %module_assert_mutex_or_preempt.exit, label %if.end.i, !prof !771

if.end.i:                                         ; preds = %entry
  %call.i = tail call i32 @rcu_read_lock_sched_held() #29
  %tobool4.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool4.not.i, label %land.rhs.i, label %module_assert_mutex_or_preempt.exit

land.rhs.i:                                       ; preds = %if.end.i
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @module_mutex, i32 0, i32 5), i32 noundef -1) #29
  %tobool6.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool6.not.i, label %land.rhs14.i, label %module_assert_mutex_or_preempt.exit

land.rhs14.i:                                     ; preds = %land.rhs.i
  %.b57.i = load i1, ptr @module_assert_mutex_or_preempt.__already_done, align 1
  br i1 %.b57.i, label %module_assert_mutex_or_preempt.exit, label %if.then25.i, !prof !770

if.then25.i:                                      ; preds = %land.rhs14.i
  store i1 true, ptr @module_assert_mutex_or_preempt.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 266, i32 noundef 9, ptr noundef null) #29
  br label %module_assert_mutex_or_preempt.exit

module_assert_mutex_or_preempt.exit:              ; preds = %if.then25.i, %land.rhs14.i, %land.rhs.i, %if.end.i, %entry
  %gplok.i.i = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 1
  %1 = ptrtoint ptr %fsa to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %fsa, align 4
  %call.i81 = tail call ptr @bsearch(ptr noundef %2, ptr noundef nonnull @__start___ksymtab, i32 noundef sdiv (i32 sub (i32 ptrtoint (ptr @__stop___ksymtab to i32), i32 ptrtoint (ptr @__start___ksymtab to i32)), i32 12), i32 noundef 12, ptr noundef nonnull @cmp_name) #29
  %cmp.not.i = icmp eq ptr %call.i81, null
  br i1 %cmp.not.i, label %for.inc, label %find_exported_symbol_in_section.exit

find_exported_symbol_in_section.exit:             ; preds = %land.lhs.true.i.1, %module_assert_mutex_or_preempt.exit
  %i.0123.lcssa = phi i32 [ 1, %land.lhs.true.i.1 ], [ 0, %module_assert_mutex_or_preempt.exit ]
  %.lcssa138 = phi ptr [ @__start___ksymtab_gpl, %land.lhs.true.i.1 ], [ @__start___ksymtab, %module_assert_mutex_or_preempt.exit ]
  %call.i81.lcssa = phi ptr [ %call.i81.1, %land.lhs.true.i.1 ], [ %call.i81, %module_assert_mutex_or_preempt.exit ]
  %sub.ptr.rhs.cast.i.le = ptrtoint ptr %.lcssa138 to i32
  %sub.ptr.lhs.cast3.i.le = ptrtoint ptr %call.i81.lcssa to i32
  %sub.ptr.sub5.i.le = sub i32 %sub.ptr.lhs.cast3.i.le, %sub.ptr.rhs.cast.i.le
  %sub.ptr.div6.i.le = sdiv exact i32 %sub.ptr.sub5.i.le, 12
  %owner1.i.i = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 3
  %3 = ptrtoint ptr %owner1.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %owner1.i.i, align 4
  %crcs.i.i = getelementptr [2 x %struct.symsearch], ptr @find_symbol.arr, i32 0, i32 %i.0123.lcssa, i32 2
  %4 = ptrtoint ptr %crcs.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %crcs.i.i, align 4
  %add.ptr.i.i = getelementptr i32, ptr %5, i32 %sub.ptr.div6.i.le
  %crc.i.i = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 4
  %6 = ptrtoint ptr %crc.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %add.ptr.i.i, ptr %crc.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.kernel_symbol, ptr %.lcssa138, i32 %sub.ptr.div6.i.le
  %sym.i.i = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 5
  %7 = ptrtoint ptr %sym.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %arrayidx.i.i, ptr %sym.i.i, align 4
  %license4.i.i = getelementptr [2 x %struct.symsearch], ptr @find_symbol.arr, i32 0, i32 %i.0123.lcssa, i32 3
  %8 = ptrtoint ptr %license4.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %license4.i.i, align 4
  %license5.i.i = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 6
  %10 = ptrtoint ptr %license5.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %license5.i.i, align 4
  br label %cleanup60

for.inc:                                          ; preds = %module_assert_mutex_or_preempt.exit
  %11 = ptrtoint ptr %fsa to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %fsa, align 4
  %call.i81.1 = tail call ptr @bsearch(ptr noundef %12, ptr noundef nonnull @__start___ksymtab_gpl, i32 noundef sdiv (i32 sub (i32 ptrtoint (ptr @__stop___ksymtab_gpl to i32), i32 ptrtoint (ptr @__start___ksymtab_gpl to i32)), i32 12), i32 noundef 12, ptr noundef nonnull @cmp_name) #29
  %cmp.not.i.1 = icmp eq ptr %call.i81.1, null
  br i1 %cmp.not.i.1, label %for.inc.1, label %land.lhs.true.i.1

land.lhs.true.i.1:                                ; preds = %for.inc
  %13 = ptrtoint ptr %gplok.i.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %gplok.i.i, align 4, !range !773
  %tobool.not.i.i.1 = icmp eq i8 %14, 0
  br i1 %tobool.not.i.i.1, label %for.inc.1, label %find_exported_symbol_in_section.exit

for.inc.1:                                        ; preds = %land.lhs.true.i.1, %for.inc
  %call.i83 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @module_mutex, i32 0, i32 5), i32 noundef -1) #29
  %tobool.not = icmp eq i32 %call.i83, 0
  br i1 %tobool.not, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %for.inc.1
  %call2 = tail call i32 @rcu_read_lock_any_held() #29
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true4, label %do.end

land.lhs.true4:                                   ; preds = %land.lhs.true
  %call5 = tail call i32 @debug_lockdep_rcu_enabled() #29
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %do.end, label %land.lhs.true7

land.lhs.true7:                                   ; preds = %land.lhs.true4
  %.b80 = load i1, ptr @find_symbol.__warned, align 1
  br i1 %.b80, label %do.end, label %if.then9

if.then9:                                         ; preds = %land.lhs.true7
  store i1 true, ptr @find_symbol.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 536, ptr noundef nonnull @.str.1) #29
  br label %do.end

do.end:                                           ; preds = %if.then9, %land.lhs.true7, %land.lhs.true4, %land.lhs.true, %for.inc.1
  %.pn128 = load volatile ptr, ptr @modules, align 4
  %cmp16.not130 = icmp eq ptr %.pn128, @modules
  br i1 %cmp16.not130, label %do.body50, label %for.body17.lr.ph

for.body17.lr.ph:                                 ; preds = %do.end
  %15 = getelementptr inbounds %struct.symsearch, ptr %arr, i32 0, i32 1
  %16 = getelementptr inbounds %struct.symsearch, ptr %arr, i32 0, i32 2
  %17 = getelementptr inbounds %struct.symsearch, ptr %arr, i32 0, i32 3
  %18 = getelementptr inbounds [2 x %struct.symsearch], ptr %arr, i32 0, i32 1
  %19 = getelementptr inbounds [2 x %struct.symsearch], ptr %arr, i32 0, i32 1, i32 1
  %20 = getelementptr inbounds [2 x %struct.symsearch], ptr %arr, i32 0, i32 1, i32 2
  %21 = getelementptr inbounds [2 x %struct.symsearch], ptr %arr, i32 0, i32 1, i32 3
  br label %for.body17

for.body17:                                       ; preds = %for.inc40, %for.body17.lr.ph
  %.pn131 = phi ptr [ %.pn128, %for.body17.lr.ph ], [ %.pn, %for.inc40 ]
  %mod.0132 = getelementptr i8, ptr %.pn131, i32 -4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %arr) #29
  %syms = getelementptr i8, ptr %.pn131, i32 256
  %22 = ptrtoint ptr %syms to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %syms, align 4
  %24 = ptrtoint ptr %arr to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %23, ptr %arr, align 4
  %num_syms = getelementptr i8, ptr %.pn131, i32 264
  %25 = ptrtoint ptr %num_syms to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %num_syms, align 4
  %add.ptr19 = getelementptr %struct.kernel_symbol, ptr %23, i32 %26
  %27 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %add.ptr19, ptr %15, align 4
  %crcs20 = getelementptr i8, ptr %.pn131, i32 260
  %28 = ptrtoint ptr %crcs20 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %crcs20, align 8
  %30 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %29, ptr %16, align 4
  %31 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 0, ptr %17, align 4
  %gpl_syms = getelementptr i8, ptr %.pn131, i32 372
  %32 = ptrtoint ptr %gpl_syms to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %gpl_syms, align 8
  %34 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %33, ptr %18, align 4
  %num_gpl_syms = getelementptr i8, ptr %.pn131, i32 368
  %35 = ptrtoint ptr %num_gpl_syms to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %num_gpl_syms, align 4
  %add.ptr24 = getelementptr %struct.kernel_symbol, ptr %33, i32 %36
  %37 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %add.ptr24, ptr %19, align 4
  %gpl_crcs = getelementptr i8, ptr %.pn131, i32 376
  %38 = ptrtoint ptr %gpl_crcs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %gpl_crcs, align 4
  %40 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %39, ptr %20, align 4
  %41 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 1, ptr %21, align 4
  %42 = ptrtoint ptr %mod.0132 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %mod.0132, align 128
  %cmp27 = icmp eq i32 %43, 3
  br i1 %cmp27, label %for.inc40, label %for.body32.preheader

for.body32.preheader:                             ; preds = %for.body17
  %44 = ptrtoint ptr %fsa to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %fsa, align 4
  %46 = ptrtoint ptr %arr to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %arr, align 4
  %48 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %15, align 4
  %sub.ptr.lhs.cast.i85 = ptrtoint ptr %49 to i32
  %sub.ptr.rhs.cast.i86 = ptrtoint ptr %47 to i32
  %sub.ptr.sub.i87 = sub i32 %sub.ptr.lhs.cast.i85, %sub.ptr.rhs.cast.i86
  %sub.ptr.div.i88 = sdiv exact i32 %sub.ptr.sub.i87, 12
  %call.i89 = tail call ptr @bsearch(ptr noundef %45, ptr noundef %47, i32 noundef %sub.ptr.div.i88, i32 noundef 12, ptr noundef nonnull @cmp_name) #29
  %cmp.not.i90 = icmp eq ptr %call.i89, null
  br i1 %cmp.not.i90, label %for.inc37, label %land.lhs.true.i97

land.lhs.true.i97:                                ; preds = %for.body32.preheader
  %50 = ptrtoint ptr %gplok.i.i to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %gplok.i.i, align 4, !range !773
  %tobool.not.i.i96 = icmp eq i8 %51, 0
  br i1 %tobool.not.i.i96, label %land.lhs.true.i.i100, label %cleanup

land.lhs.true.i.i100:                             ; preds = %land.lhs.true.i97
  %52 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %17, align 4
  %cmp.i.i99 = icmp eq i32 %53, 1
  br i1 %cmp.i.i99, label %for.inc37, label %cleanup

for.inc37:                                        ; preds = %land.lhs.true.i.i100, %for.body32.preheader
  %54 = ptrtoint ptr %fsa to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %fsa, align 4
  %56 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %18, align 4
  %58 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %19, align 4
  %sub.ptr.lhs.cast.i85.1 = ptrtoint ptr %59 to i32
  %sub.ptr.rhs.cast.i86.1 = ptrtoint ptr %57 to i32
  %sub.ptr.sub.i87.1 = sub i32 %sub.ptr.lhs.cast.i85.1, %sub.ptr.rhs.cast.i86.1
  %sub.ptr.div.i88.1 = sdiv exact i32 %sub.ptr.sub.i87.1, 12
  %call.i89.1 = tail call ptr @bsearch(ptr noundef %55, ptr noundef %57, i32 noundef %sub.ptr.div.i88.1, i32 noundef 12, ptr noundef nonnull @cmp_name) #29
  %cmp.not.i90.1 = icmp eq ptr %call.i89.1, null
  br i1 %cmp.not.i90.1, label %for.inc40, label %land.lhs.true.i97.1

land.lhs.true.i97.1:                              ; preds = %for.inc37
  %60 = ptrtoint ptr %gplok.i.i to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %gplok.i.i, align 4, !range !773
  %tobool.not.i.i96.1 = icmp eq i8 %61, 0
  br i1 %tobool.not.i.i96.1, label %land.lhs.true.i.i100.1, label %cleanup

land.lhs.true.i.i100.1:                           ; preds = %land.lhs.true.i97.1
  %62 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %21, align 4
  %cmp.i.i99.1 = icmp eq i32 %63, 1
  br i1 %cmp.i.i99.1, label %for.inc40, label %cleanup

cleanup:                                          ; preds = %land.lhs.true.i.i100.1, %land.lhs.true.i97.1, %land.lhs.true.i.i100, %land.lhs.true.i97
  %.lcssa163.sink = phi ptr [ %57, %land.lhs.true.i.i100.1 ], [ %57, %land.lhs.true.i97.1 ], [ %47, %land.lhs.true.i.i100 ], [ %47, %land.lhs.true.i97 ]
  %i.1126.lcssa = phi i32 [ 1, %land.lhs.true.i.i100.1 ], [ 1, %land.lhs.true.i97.1 ], [ 0, %land.lhs.true.i.i100 ], [ 0, %land.lhs.true.i97 ]
  %call.i89.lcssa = phi ptr [ %call.i89.1, %land.lhs.true.i.i100.1 ], [ %call.i89.1, %land.lhs.true.i97.1 ], [ %call.i89, %land.lhs.true.i.i100 ], [ %call.i89, %land.lhs.true.i97 ]
  %mod.0132.le = getelementptr i8, ptr %.pn131, i32 -4
  %sub.ptr.rhs.cast.i86.le = ptrtoint ptr %.lcssa163.sink to i32
  %sub.ptr.lhs.cast3.i91.le = ptrtoint ptr %call.i89.lcssa to i32
  %sub.ptr.sub5.i93.le = sub i32 %sub.ptr.lhs.cast3.i91.le, %sub.ptr.rhs.cast.i86.le
  %sub.ptr.div6.i94.le = sdiv exact i32 %sub.ptr.sub5.i93.le, 12
  %owner1.i.i101 = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 3
  %64 = ptrtoint ptr %owner1.i.i101 to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr %mod.0132.le, ptr %owner1.i.i101, align 4
  %crcs.i.i102 = getelementptr [2 x %struct.symsearch], ptr %arr, i32 0, i32 %i.1126.lcssa, i32 2
  %65 = ptrtoint ptr %crcs.i.i102 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %crcs.i.i102, align 4
  %cmp2.not.i.i103 = icmp eq ptr %66, null
  %add.ptr.i.i104 = getelementptr i32, ptr %66, i32 %sub.ptr.div6.i94.le
  %spec.select.i.i105 = select i1 %cmp2.not.i.i103, ptr null, ptr %add.ptr.i.i104
  %crc.i.i106 = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 4
  %67 = ptrtoint ptr %crc.i.i106 to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr %spec.select.i.i105, ptr %crc.i.i106, align 4
  %arrayidx.i.i107 = getelementptr %struct.kernel_symbol, ptr %.lcssa163.sink, i32 %sub.ptr.div6.i94.le
  %sym.i.i108 = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 5
  %68 = ptrtoint ptr %sym.i.i108 to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %arrayidx.i.i107, ptr %sym.i.i108, align 4
  %license4.i.i109 = getelementptr [2 x %struct.symsearch], ptr %arr, i32 0, i32 %i.1126.lcssa, i32 3
  %69 = ptrtoint ptr %license4.i.i109 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %license4.i.i109, align 4
  %license5.i.i110 = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 6
  %71 = ptrtoint ptr %license5.i.i110 to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %70, ptr %license5.i.i110, align 4
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %arr) #29
  br label %cleanup60

for.inc40:                                        ; preds = %land.lhs.true.i.i100.1, %for.inc37, %for.body17
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %arr) #29
  %72 = ptrtoint ptr %.pn131 to i32
  call void @__asan_load4_noabort(i32 %72)
  %.pn = load volatile ptr, ptr %.pn131, align 4
  %cmp16.not = icmp eq ptr %.pn, @modules
  br i1 %cmp16.not, label %do.body50, label %for.body17

do.body50:                                        ; preds = %for.inc40, %do.end
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @find_symbol.__UNIQUE_ID_ddebug281, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@find_symbol, %if.then56)) #29
          to label %cleanup60 [label %if.then56], !srcloc !782

if.then56:                                        ; preds = %do.body50
  %73 = ptrtoint ptr %fsa to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %fsa, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @find_symbol.__UNIQUE_ID_ddebug281, ptr noundef nonnull @.str.65, ptr noundef %74) #29
  br label %cleanup60

cleanup60:                                        ; preds = %if.then56, %do.body50, %cleanup, %find_exported_symbol_in_section.exit
  %retval.2 = phi i1 [ true, %cleanup ], [ true, %find_exported_symbol_in_section.exit ], [ false, %if.then56 ], [ false, %do.body50 ]
  ret i1 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @symbol_put_addr(ptr noundef %addr) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %addr to i32
  %call = tail call i32 @core_kernel_text(i32 noundef %0) #29
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %do.body, label %cleanup

do.body:                                          ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %4, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !786
  %call.i = tail call ptr @__module_address(i32 noundef %0) #29
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %do.body8, label %if.then.i

if.then.i:                                        ; preds = %do.body
  %init_layout.i = getelementptr inbounds %struct.module, ptr %call.i, i32 0, i32 26
  %5 = ptrtoint ptr %init_layout.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %init_layout.i, align 16
  %text_size.i = getelementptr inbounds %struct.module, ptr %call.i, i32 0, i32 26, i32 2
  %7 = ptrtoint ptr %text_size.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %text_size.i, align 8
  %cmp.not.i.i = icmp ugt ptr %6, %addr
  %add.ptr.i.i = getelementptr i8, ptr %6, i32 %8
  %cmp1.i.i = icmp ule ptr %add.ptr.i.i, %addr
  %tobool3.not.i = or i1 %cmp.not.i.i, %cmp1.i.i
  br i1 %tobool3.not.i, label %land.lhs.true.i, label %do.end16

land.lhs.true.i:                                  ; preds = %if.then.i
  %core_layout.i = getelementptr inbounds %struct.module, ptr %call.i, i32 0, i32 25
  %9 = ptrtoint ptr %core_layout.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %core_layout.i, align 128
  %text_size6.i = getelementptr inbounds %struct.module, ptr %call.i, i32 0, i32 25, i32 2
  %11 = ptrtoint ptr %text_size6.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %text_size6.i, align 8
  %cmp.not.i18.i = icmp ugt ptr %10, %addr
  %add.ptr.i19.i = getelementptr i8, ptr %10, i32 %12
  %cmp1.i20.i = icmp ule ptr %add.ptr.i19.i, %addr
  %tobool8.not.i = or i1 %cmp.not.i18.i, %cmp1.i20.i
  br i1 %tobool8.not.i, label %do.body8, label %do.end16

do.body8:                                         ; preds = %land.lhs.true.i, %do.body
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1042, 0\0A.popsection", ""() #29, !srcloc !787
  unreachable

do.end16:                                         ; preds = %land.lhs.true.i, %if.then.i
  tail call void @module_put(ptr noundef nonnull %call.i)
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !788
  %13 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i23 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i23 to ptr
  %preempt_count.i.i24 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i24 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i24, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i24, align 4
  br label %cleanup

cleanup:                                          ; preds = %do.end16, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @core_kernel_text(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__module_text_address(i32 noundef %addr) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @__module_address(i32 noundef %addr)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.end10, label %if.then

if.then:                                          ; preds = %entry
  %init_layout = getelementptr inbounds %struct.module, ptr %call, i32 0, i32 26
  %0 = ptrtoint ptr %init_layout to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %init_layout, align 16
  %text_size = getelementptr inbounds %struct.module, ptr %call, i32 0, i32 26, i32 2
  %2 = ptrtoint ptr %text_size to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %text_size, align 8
  %4 = inttoptr i32 %addr to ptr
  %cmp.not.i = icmp ugt ptr %1, %4
  %add.ptr.i = getelementptr i8, ptr %1, i32 %3
  %cmp1.i = icmp ule ptr %add.ptr.i, %4
  %tobool3.not = or i1 %cmp.not.i, %cmp1.i
  br i1 %tobool3.not, label %land.lhs.true, label %if.end10

land.lhs.true:                                    ; preds = %if.then
  %core_layout = getelementptr inbounds %struct.module, ptr %call, i32 0, i32 25
  %5 = ptrtoint ptr %core_layout to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %core_layout, align 128
  %text_size6 = getelementptr inbounds %struct.module, ptr %call, i32 0, i32 25, i32 2
  %7 = ptrtoint ptr %text_size6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %text_size6, align 8
  %cmp.not.i18 = icmp ugt ptr %6, %4
  %add.ptr.i19 = getelementptr i8, ptr %6, i32 %8
  %cmp1.i20 = icmp ule ptr %add.ptr.i19, %4
  %tobool8.not = or i1 %cmp.not.i18, %cmp1.i20
  %spec.select = select i1 %tobool8.not, ptr null, ptr %call
  br label %if.end10

if.end10:                                         ; preds = %land.lhs.true, %if.then, %entry
  %mod.0 = phi ptr [ %call, %if.then ], [ null, %entry ], [ %spec.select, %land.lhs.true ]
  ret ptr %mod.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__module_get(ptr noundef %module) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %module, null
  br i1 %tobool.not, label %if.end, label %do.body

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !789
  %refcnt = getelementptr inbounds %struct.module, ptr %module, i32 0, i32 66
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt, i32 noundef 4) #29
  tail call void @llvm.prefetch.p0(ptr %refcnt, i32 1, i32 3, i32 1) #29
  %4 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt, ptr %refcnt, i32 1, ptr elementtype(i32) %refcnt) #29, !srcloc !790
  %5 = tail call ptr @llvm.returnaddress(i32 0)
  %6 = ptrtoint ptr %5 to i32
  tail call fastcc void @trace_module_get(ptr noundef nonnull %module, i32 noundef %6)
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !791
  %7 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i5 = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i5 to ptr
  %preempt_count.i.i6 = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i.i6 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i.i6, align 4
  %sub.i = add i32 %10, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i6, align 4
  br label %if.end

if.end:                                           ; preds = %do.body, %entry
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_module_get(ptr noundef %mod, i32 noundef %ip) unnamed_addr #9 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_module_get, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_module_get, %do.body)) #29
          to label %if.end48 [label %do.body], !srcloc !782

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !770

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 108, i32 noundef 9, ptr noundef null) #29
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %if.end31

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !792
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_module_get, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i, %if.end31
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i ], [ %13, %if.end31 ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %mod, i32 noundef %ip) #29
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !793
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !793
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !770

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 108, i32 noundef 9, ptr noundef null) #29
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !794
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_module_get, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #29
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #29
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_module_get.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_module_get.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 97, ptr noundef nonnull @.str.15) #29
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !795
  %38 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #10

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @try_module_get(ptr noundef %module) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %module, null
  br i1 %tobool.not, label %if.end9, label %do.body

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !796
  %4 = ptrtoint ptr %module to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %module, align 128
  %cmp.i.not = icmp eq i32 %5, 2
  br i1 %cmp.i.not, label %do.body6, label %land.rhs, !prof !771

land.rhs:                                         ; preds = %do.body
  %refcnt = getelementptr inbounds %struct.module, ptr %module, i32 0, i32 66
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt, i32 noundef 4) #29
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !797
  tail call void @llvm.prefetch.p0(ptr %refcnt, i32 1, i32 3, i32 1) #29
  %6 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %refcnt, ptr %refcnt, i32 0, i32 1, ptr elementtype(i32) %refcnt) #29, !srcloc !798
  %asmresult.i.i.i.i = extractvalue { i32, i32, i32 } %6, 0
  %cmp.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i, label %do.body6, label %if.then5

if.then5:                                         ; preds = %land.rhs
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !799
  %7 = tail call ptr @llvm.returnaddress(i32 0)
  %8 = ptrtoint ptr %7 to i32
  tail call fastcc void @trace_module_get(ptr noundef nonnull %module, i32 noundef %8)
  br label %do.body6

do.body6:                                         ; preds = %if.then5, %land.rhs, %do.body
  %9 = phi i1 [ true, %if.then5 ], [ false, %land.rhs ], [ false, %do.body ]
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !800
  %10 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i14 = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i14 to ptr
  %preempt_count.i.i15 = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i15 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i15, align 4
  %sub.i = add i32 %13, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i15, align 4
  br label %if.end9

if.end9:                                          ; preds = %do.body6, %entry
  %ret.1.off0 = phi i1 [ %9, %do.body6 ], [ true, %entry ]
  ret i1 %ret.1.off0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_module_put(ptr noundef %mod, i32 noundef %ip) unnamed_addr #9 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_module_put, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_module_put, %do.body)) #29
          to label %if.end48 [label %do.body], !srcloc !782

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !770

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 108, i32 noundef 9, ptr noundef null) #29
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %if.end31

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !801
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_module_put, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i, %if.end31
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i ], [ %13, %if.end31 ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %mod, i32 noundef %ip) #29
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !802
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !802
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !770

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 108, i32 noundef 9, ptr noundef null) #29
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !794
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_module_put, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #29
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #29
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_module_put.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_module_put.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 104, ptr noundef nonnull @.str.15) #29
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !795
  %38 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @store_uevent(ptr nocapture noundef readnone %mattr, ptr noundef %mk, ptr noundef %buffer, i32 noundef %count) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @kobject_synth_uevent(ptr noundef %mk, ptr noundef %buffer, i32 noundef %count) #29
  %tobool.not = icmp eq i32 %call, 0
  %count.call = select i1 %tobool.not, i32 %count, i32 %call
  ret i32 %count.call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local void @module_memfree(ptr noundef %module_region) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %3, 15728640
  %4 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i26 = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i26 to ptr
  %preempt_count.i27 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i27 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i27, align 4
  %and2 = and i32 %7, 983040
  %or = or i32 %and2, %and
  %8 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i28 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i28 to ptr
  %preempt_count.i29 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i29 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i29, align 4
  %and4 = and i32 %11, 65280
  %or5 = or i32 %or, %and4
  %tobool.not = icmp eq i32 %or5, 0
  br i1 %tobool.not, label %if.end, label %do.end, !prof !770

do.end:                                           ; preds = %entry
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2142, i32 noundef 9, ptr noundef null) #29
  br label %if.end

if.end:                                           ; preds = %do.end, %entry
  tail call void @vfree(ptr noundef %module_region) #29
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @vfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local void @module_arch_cleanup(ptr noundef %mod) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local void @module_arch_freeing_init(ptr noundef %mod) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__symbol_get(ptr noundef %symbol) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %fsa = alloca %struct.find_symbol_arg, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fsa) #29
  %0 = getelementptr inbounds i8, ptr %fsa, i32 4
  %1 = call ptr @memset(ptr %0, i32 0, i32 20)
  %2 = ptrtoint ptr %fsa to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %symbol, ptr %fsa, align 4
  %gplok = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 1
  %3 = ptrtoint ptr %gplok to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 1, ptr %gplok, align 4
  %warn = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 2
  %4 = ptrtoint ptr %warn to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 1, ptr %warn, align 1
  %5 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %8, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !803
  %call = call fastcc zeroext i1 @find_symbol(ptr noundef nonnull %fsa)
  br i1 %call, label %lor.lhs.false, label %do.body2

lor.lhs.false:                                    ; preds = %entry
  %owner = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 3
  %9 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %owner, align 4
  %tobool.not.i = icmp eq ptr %10, null
  br i1 %tobool.not.i, label %do.body5, label %land.rhs.i

land.rhs.i:                                       ; preds = %lor.lhs.false
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %10, align 128
  switch i32 %12, label %do.body.i.i [
    i32 3, label %do.body3.i
    i32 1, label %do.body2
  ], !prof !804

do.body3.i:                                       ; preds = %land.rhs.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 320, 0\0A.popsection", ""() #29, !srcloc !805
  unreachable

do.body.i.i:                                      ; preds = %land.rhs.i
  %13 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %16, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !796
  %17 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %10, align 128
  %cmp.i.not.i.i = icmp eq i32 %18, 2
  br i1 %cmp.i.not.i.i, label %try_module_get.exit.i, label %land.rhs.i.i, !prof !771

land.rhs.i.i:                                     ; preds = %do.body.i.i
  %refcnt.i.i = getelementptr inbounds %struct.module, ptr %10, i32 0, i32 66
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i.i, i32 noundef 4) #29
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !797
  tail call void @llvm.prefetch.p0(ptr %refcnt.i.i, i32 1, i32 3, i32 1) #29
  %19 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i.i, ptr %refcnt.i.i, i32 0, i32 1, ptr elementtype(i32) %refcnt.i.i) #29, !srcloc !798
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %19, 0
  %cmp.not.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i.i, label %try_module_get.exit.i, label %if.then5.i.i

if.then5.i.i:                                     ; preds = %land.rhs.i.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !799
  %20 = tail call ptr @llvm.returnaddress(i32 0) #29
  %21 = ptrtoint ptr %20 to i32
  tail call fastcc void @trace_module_get(ptr noundef nonnull %10, i32 noundef %21) #29
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !800
  %22 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i14.i.i.c = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i14.i.i.c to ptr
  %preempt_count.i.i15.i.i.c = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i15.i.i.c to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i15.i.i.c, align 4
  %sub.i.i.c.i.c = add i32 %25, -1
  store volatile i32 %sub.i.i.c.i.c, ptr %preempt_count.i.i15.i.i.c, align 4
  br label %do.body5

try_module_get.exit.i:                            ; preds = %land.rhs.i.i, %do.body.i.i
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !800
  %26 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i14.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i14.i.i to ptr
  %preempt_count.i.i15.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i15.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i15.i.i, align 4
  %sub.i.i.c.i = add i32 %29, -1
  store volatile i32 %sub.i.i.c.i, ptr %preempt_count.i.i15.i.i, align 4
  br label %do.body2

do.body2:                                         ; preds = %try_module_get.exit.i, %land.rhs.i, %entry
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !806
  %30 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i9 = and i32 %30, -16384
  %31 = inttoptr i32 %and.i.i.i9 to ptr
  %preempt_count.i.i10 = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %preempt_count.i.i10 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %preempt_count.i.i10, align 4
  %sub.i = add i32 %33, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i10, align 4
  br label %cleanup

do.body5:                                         ; preds = %if.then5.i.i, %lor.lhs.false
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !807
  %34 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i11 = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i.i11 to ptr
  %preempt_count.i.i12 = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %preempt_count.i.i12 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %preempt_count.i.i12, align 4
  %sub.i13 = add i32 %37, -1
  store volatile i32 %sub.i13, ptr %preempt_count.i.i12, align 4
  %sym = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 5
  %38 = ptrtoint ptr %sym to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %sym, align 4
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %39, align 4
  %42 = inttoptr i32 %41 to ptr
  br label %cleanup

cleanup:                                          ; preds = %do.body5, %do.body2
  %retval.0 = phi ptr [ null, %do.body2 ], [ %42, %do.body5 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fsa) #29
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local i32 @arch_mod_section_prepend(ptr noundef %mod, i32 noundef %section) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local ptr @module_alloc(i32 noundef %size) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @high_memory to i32))
  %0 = load ptr, ptr @high_memory, align 4
  %1 = ptrtoint ptr %0 to i32
  %add = add i32 %1, 8388608
  %and = and i32 %add, -8388608
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %2 = load i32, ptr @pgprot_kernel, align 4
  %3 = tail call ptr @llvm.returnaddress(i32 0)
  %call = tail call noalias ptr @__vmalloc_node_range(i32 noundef %size, i32 noundef 1, i32 noundef %and, i32 noundef -8388608, i32 noundef 3264, i32 noundef %2, i32 noundef 256, i32 noundef -1, ptr noundef %3) #35
  ret ptr %call
}

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__vmalloc_node_range(i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #11

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local zeroext i1 @module_init_section(ptr noundef %name) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call1.i = tail call i32 @strncmp(ptr noundef %name, ptr noundef nonnull dereferenceable(6) @.str.6, i32 noundef 5) #29
  %cmp.i = icmp eq i32 %call1.i, 0
  ret i1 %cmp.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local zeroext i1 @module_exit_section(ptr noundef %name) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call1.i = tail call i32 @strncmp(ptr noundef %name, ptr noundef nonnull dereferenceable(6) @.str.7, i32 noundef 5) #29
  %cmp.i = icmp eq i32 %call1.i, 0
  ret i1 %cmp.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local i32 @module_frob_arch_sections(ptr noundef %hdr, ptr noundef %sechdrs, ptr noundef %secstrings, ptr noundef %mod) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local i32 @module_finalize(ptr noundef %hdr, ptr noundef %sechdrs, ptr noundef %me) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_init_module(i32 noundef %umod, i32 noundef %len, i32 noundef %uargs) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %umod to ptr
  %1 = inttoptr i32 %uargs to ptr
  %call = tail call fastcc i32 @__do_sys_init_module(ptr noundef %0, i32 noundef %len, ptr noundef %1)
  ret i32 %call
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__do_sys_init_module(ptr noundef %umod, i32 noundef %len, ptr noundef %uargs) unnamed_addr #9 align 64 {
entry:
  %info = alloca %struct.load_info, align 4
  call void @llvm.lifetime.start.p0(i64 84, ptr nonnull %info) #29
  %0 = call ptr @memset(ptr %info, i32 0, i32 84)
  %call.i = tail call zeroext i1 @capable(i32 noundef 16) #29
  br i1 %call.i, label %may_init_module.exit, label %cleanup

may_init_module.exit:                             ; preds = %entry
  %1 = load i32, ptr @modules_disabled, align 4
  %tobool.not.i.not = icmp eq i32 %1, 0
  br i1 %tobool.not.i.not, label %do.body, label %cleanup

do.body:                                          ; preds = %may_init_module.exit
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__do_sys_init_module.__UNIQUE_ID_ddebug309, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__do_sys_init_module, %if.then5)) #29
          to label %do.end [label %if.then5], !srcloc !782

if.then5:                                         ; preds = %do.body
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__do_sys_init_module.__UNIQUE_ID_ddebug309, ptr noundef nonnull @.str.71, ptr noundef %umod, i32 noundef %len, ptr noundef %uargs) #29
  br label %do.end

do.end:                                           ; preds = %if.then5, %do.body
  %len1.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 3
  %2 = ptrtoint ptr %len1.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %len, ptr %len1.i, align 4
  %cmp.i = icmp ult i32 %len, 52
  br i1 %cmp.i, label %cleanup, label %if.end.i

if.end.i:                                         ; preds = %do.end
  %call.i20 = tail call i32 @security_kernel_load_data(i32 noundef 2, i1 noundef zeroext true) #29
  %tobool.not.i21 = icmp eq i32 %call.i20, 0
  br i1 %tobool.not.i21, label %if.end4.i, label %cleanup

if.end4.i:                                        ; preds = %if.end.i
  %3 = ptrtoint ptr %len1.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %len1.i, align 4
  %call6.i = tail call noalias ptr @__vmalloc(i32 noundef %4, i32 noundef 11456) #35
  %hdr.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 2
  %5 = ptrtoint ptr %hdr.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call6.i, ptr %hdr.i, align 4
  %tobool8.not.i = icmp eq ptr %call6.i, null
  br i1 %tobool8.not.i, label %cleanup, label %if.end10.i

if.end10.i:                                       ; preds = %if.end4.i
  %6 = ptrtoint ptr %len1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %len1.i, align 4
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.cond.i.i, %if.end10.i
  %usrc.addr.0.i.i = phi ptr [ %umod, %if.end10.i ], [ %add.ptr4.i.i, %do.cond.i.i ]
  %len.addr.0.i.i = phi i32 [ %7, %if.end10.i ], [ %sub.i.i, %do.cond.i.i ]
  %dst.addr.0.i.i = phi ptr [ %call6.i, %if.end10.i ], [ %add.ptr.i.i, %do.cond.i.i ]
  %8 = tail call i32 @llvm.umin.i32(i32 %len.addr.0.i.i, i32 65536) #29
  tail call void @__check_object_size(ptr noundef %dst.addr.0.i.i, i32 noundef %8, i1 noundef zeroext false) #29
  tail call void @__might_fault(ptr noundef nonnull @.str.75, i32 noundef 156) #29
  %call.i.i.i.i = tail call zeroext i1 @should_fail_usercopy() #29
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %land.lhs.true.i.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %do.body.i.i
  %9 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %usrc.addr.0.i.i, i32 %8, i32 -1226833920) #36, !srcloc !808
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %9, 0
  %cmp.i6.i.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %cmp.i6.i.i.i, label %if.then.i7.i.i.i, label %if.end.i.i.i.i, !prof !770

if.then.i7.i.i.i:                                 ; preds = %land.lhs.true.i.i.i.i
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dst.addr.0.i.i, i32 noundef %8) #29
  %10 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i.i.i.i.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 4
  %12 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i.i.i) #17, !srcloc !809
  %and.i.i.i.i.i.i = and i32 %12, -13
  %or.i.i.i.i.i.i = or i32 %and.i.i.i.i.i.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i.i.i) #29, !srcloc !810
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #29, !srcloc !811
  %call1.i.i.i.i.i = tail call i32 @arm_copy_from_user(ptr noundef %dst.addr.0.i.i, ptr noundef %usrc.addr.0.i.i, i32 noundef %8) #29
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %12) #29, !srcloc !810
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #29, !srcloc !811
  br label %if.end.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %if.then.i7.i.i.i, %land.lhs.true.i.i.i.i, %do.body.i.i
  %res.0.i.i.i.i = phi i32 [ %8, %do.body.i.i ], [ %call1.i.i.i.i.i, %if.then.i7.i.i.i ], [ %8, %land.lhs.true.i.i.i.i ]
  %tobool4.not.i.i.i.i = icmp eq i32 %res.0.i.i.i.i, 0
  br i1 %tobool4.not.i.i.i.i, label %do.cond.i.i, label %if.then11.i.i.i.i, !prof !770

if.then11.i.i.i.i:                                ; preds = %if.end.i.i.i.i
  %sub.i.i.i.i = sub i32 %8, %res.0.i.i.i.i
  %add.ptr.i.i.i.i = getelementptr i8, ptr %dst.addr.0.i.i, i32 %sub.i.i.i.i
  %13 = call ptr @memset(ptr %add.ptr.i.i.i.i, i32 0, i32 %res.0.i.i.i.i)
  br label %if.then21.i

do.cond.i.i:                                      ; preds = %if.end.i.i.i.i
  tail call void @__might_resched(ptr noundef nonnull @.str, i32 noundef 3102, i32 noundef 0) #29
  %call.i.i.i = tail call i32 @__cond_resched() #29
  %add.ptr.i.i = getelementptr i8, ptr %dst.addr.0.i.i, i32 %8
  %add.ptr4.i.i = getelementptr i8, ptr %usrc.addr.0.i.i, i32 %8
  %sub.i.i = sub i32 %len.addr.0.i.i, %8
  %tobool.not.i.i = icmp eq i32 %sub.i.i, 0
  br i1 %tobool.not.i.i, label %out.i, label %do.body.i.i

out.i:                                            ; preds = %do.cond.i.i
  %14 = ptrtoint ptr %hdr.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %hdr.i, align 4
  %16 = ptrtoint ptr %len1.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %len1.i, align 4
  %conv.i = zext i32 %17 to i64
  %call19.i = tail call i32 @security_kernel_post_load_data(ptr noundef %15, i64 noundef %conv.i, i32 noundef 2, ptr noundef nonnull @.str.72) #29
  %tobool20.not.i = icmp eq i32 %call19.i, 0
  br i1 %tobool20.not.i, label %if.end10, label %if.then21.i

if.then21.i:                                      ; preds = %out.i, %if.then11.i.i.i.i
  %err.040.i = phi i32 [ %call19.i, %out.i ], [ -14, %if.then11.i.i.i.i ]
  %18 = ptrtoint ptr %hdr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %hdr.i, align 4
  tail call void @vfree(ptr noundef %19) #29
  br label %cleanup

if.end10:                                         ; preds = %out.i
  %call11 = call fastcc i32 @load_module(ptr noundef nonnull %info, ptr noundef %uargs, i32 noundef 0)
  br label %cleanup

cleanup:                                          ; preds = %if.end10, %if.then21.i, %if.end4.i, %if.end.i, %do.end, %may_init_module.exit, %entry
  %retval.0 = phi i32 [ %call11, %if.end10 ], [ -1, %may_init_module.exit ], [ -1, %entry ], [ %err.040.i, %if.then21.i ], [ -12, %if.end4.i ], [ %call.i20, %if.end.i ], [ -8, %do.end ]
  call void @llvm.lifetime.end.p0(i64 84, ptr nonnull %info) #29
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_finit_module(i32 noundef %fd, i32 noundef %uargs, i32 noundef %flags) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %info.i = alloca %struct.load_info, align 4
  %buf.i = alloca ptr, align 4
  %0 = inttoptr i32 %uargs to ptr
  call void @llvm.lifetime.start.p0(i64 84, ptr nonnull %info.i) #29
  %1 = call ptr @memset(ptr %info.i, i32 0, i32 84)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %buf.i) #29
  %2 = ptrtoint ptr %buf.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %buf.i, align 4
  %call.i.i = tail call zeroext i1 @capable(i32 noundef 16) #29
  br i1 %call.i.i, label %may_init_module.exit.i, label %__do_sys_finit_module.exit

may_init_module.exit.i:                           ; preds = %entry
  %3 = load i32, ptr @modules_disabled, align 4
  %tobool.not.i.not.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i.not.i, label %do.body.i, label %__do_sys_finit_module.exit

do.body.i:                                        ; preds = %may_init_module.exit.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__do_sys_finit_module.__UNIQUE_ID_ddebug310, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__se_sys_finit_module, %if.then5.i)) #29
          to label %do.end.i [label %if.then5.i], !srcloc !782

if.then5.i:                                       ; preds = %do.body.i
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__do_sys_finit_module.__UNIQUE_ID_ddebug310, ptr noundef nonnull @.str.289, i32 noundef %fd, ptr noundef %0, i32 noundef %flags) #29
  br label %do.end.i

do.end.i:                                         ; preds = %if.then5.i, %do.body.i
  %tobool7.not.i = icmp ult i32 %flags, 8
  br i1 %tobool7.not.i, label %if.end9.i, label %__do_sys_finit_module.exit

if.end9.i:                                        ; preds = %do.end.i
  %call10.i = call i32 @kernel_read_file_from_fd(i32 noundef %fd, i64 noundef 0, ptr noundef nonnull %buf.i, i32 noundef 2147483647, ptr noundef null, i32 noundef 2) #29
  %cmp.i = icmp slt i32 %call10.i, 0
  br i1 %cmp.i, label %__do_sys_finit_module.exit, label %if.end12.i

if.end12.i:                                       ; preds = %if.end9.i
  %and13.i = and i32 %flags, 4
  %tobool14.not.i = icmp eq i32 %and13.i, 0
  %4 = ptrtoint ptr %buf.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %buf.i, align 4
  br i1 %tobool14.not.i, label %if.else.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.end12.i
  call void @vfree(ptr noundef %5) #29
  br label %__do_sys_finit_module.exit

if.else.i:                                        ; preds = %if.end12.i
  %hdr.i = getelementptr inbounds %struct.load_info, ptr %info.i, i32 0, i32 2
  %6 = ptrtoint ptr %hdr.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %5, ptr %hdr.i, align 4
  %len20.i = getelementptr inbounds %struct.load_info, ptr %info.i, i32 0, i32 3
  %7 = ptrtoint ptr %len20.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %call10.i, ptr %len20.i, align 4
  %call22.i = call fastcc i32 @load_module(ptr noundef nonnull %info.i, ptr noundef %0, i32 noundef %flags) #29
  br label %__do_sys_finit_module.exit

__do_sys_finit_module.exit:                       ; preds = %if.else.i, %if.then15.i, %if.end9.i, %do.end.i, %may_init_module.exit.i, %entry
  %retval.0.i = phi i32 [ -95, %if.then15.i ], [ %call22.i, %if.else.i ], [ -1, %may_init_module.exit.i ], [ -22, %do.end.i ], [ %call10.i, %if.end9.i ], [ -1, %entry ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %buf.i) #29
  call void @llvm.lifetime.end.p0(i64 84, ptr nonnull %info.i) #29
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local ptr @dereference_module_function_descriptor(ptr noundef %mod, ptr noundef %ptr) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  ret ptr %ptr
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @module_address_lookup(i32 noundef %addr, ptr noundef %size, ptr noundef %offset, ptr noundef writeonly %modname, ptr noundef writeonly %modbuildid, ptr noundef %namebuf) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !812
  %call = tail call ptr @__module_address(i32 noundef %addr)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %do.body13, label %if.then

if.then:                                          ; preds = %entry
  %tobool1.not = icmp eq ptr %modname, null
  br i1 %tobool1.not, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  %name = getelementptr inbounds %struct.module, ptr %call, i32 0, i32 2
  %4 = ptrtoint ptr %modname to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %name, ptr %modname, align 4
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %tobool3.not = icmp eq ptr %modbuildid, null
  br i1 %tobool3.not, label %if.end8, label %if.then4

if.then4:                                         ; preds = %if.end
  %build_id = getelementptr inbounds %struct.module, ptr %call, i32 0, i32 3
  %5 = ptrtoint ptr %modbuildid to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %build_id, ptr %modbuildid, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.then4, %if.end
  %call7 = tail call fastcc ptr @find_kallsyms_symbol(ptr noundef nonnull %call, i32 noundef %addr, ptr noundef %size, ptr noundef %offset)
  %tobool9.not = icmp eq ptr %call7, null
  br i1 %tobool9.not, label %do.body13, label %if.then10

if.then10:                                        ; preds = %if.end8
  %call11 = tail call ptr @strncpy(ptr noundef %namebuf, ptr noundef nonnull %call7, i32 noundef 127)
  br label %do.body13

do.body13:                                        ; preds = %if.then10, %if.end8, %entry
  %ret.1 = phi ptr [ %namebuf, %if.then10 ], [ null, %if.end8 ], [ null, %entry ]
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !813
  %6 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i25 = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i.i25 to ptr
  %preempt_count.i.i26 = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i.i26 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i.i26, align 4
  %sub.i = add i32 %9, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i26, align 4
  ret ptr %ret.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__module_address(i32 noundef %addr) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 1), align 8
  %cmp = icmp ugt i32 %0, %addr
  br i1 %cmp, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, ptr getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 2), align 4
  %cmp1 = icmp ult i32 %1, %addr
  br i1 %cmp1, label %cleanup, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %module_assert_mutex_or_preempt.exit, label %if.end.i, !prof !771

if.end.i:                                         ; preds = %if.end
  %call.i = tail call i32 @rcu_read_lock_sched_held() #29
  %tobool4.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool4.not.i, label %land.rhs.i, label %module_assert_mutex_or_preempt.exit

land.rhs.i:                                       ; preds = %if.end.i
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @module_mutex, i32 0, i32 5), i32 noundef -1) #29
  %tobool6.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool6.not.i, label %land.rhs14.i, label %module_assert_mutex_or_preempt.exit

land.rhs14.i:                                     ; preds = %land.rhs.i
  %.b57.i = load i1, ptr @module_assert_mutex_or_preempt.__already_done, align 1
  br i1 %.b57.i, label %module_assert_mutex_or_preempt.exit, label %if.then25.i, !prof !770

if.then25.i:                                      ; preds = %land.rhs14.i
  store i1 true, ptr @module_assert_mutex_or_preempt.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 266, i32 noundef 9, ptr noundef null) #29
  br label %module_assert_mutex_or_preempt.exit

module_assert_mutex_or_preempt.exit:              ; preds = %if.then25.i, %land.rhs14.i, %land.rhs.i, %if.end.i, %if.end
  %3 = inttoptr i32 %addr to ptr
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %__lt_find.exit.i.i, %module_assert_mutex_or_preempt.exit
  %4 = load volatile i32, ptr @mod_tree, align 128
  %and.i.i = and i32 %4, 1
  %arrayidx.i.i.i = getelementptr %struct.mod_tree_root, ptr @mod_tree, i32 0, i32 0, i32 1, i32 %and.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %node.03.i.i.i = load volatile ptr, ptr %arrayidx.i.i.i, align 4
  %tobool.not4.i.i.i = icmp eq ptr %node.03.i.i.i, null
  br i1 %tobool.not4.i.i.i, label %__lt_find.exit.i.i, label %while.body.lr.ph.i.i.i

while.body.lr.ph.i.i.i:                           ; preds = %do.body.i.i
  %.neg.i.i.i.i = mul nuw nsw i32 %and.i.i, -12
  br label %while.body.i.i.i

while.body.i.i.i:                                 ; preds = %if.end16.i.i.i, %while.body.lr.ph.i.i.i
  %node.05.i.i.i = phi ptr [ %node.03.i.i.i, %while.body.lr.ph.i.i.i ], [ %node.0.i.i.i, %if.end16.i.i.i ]
  %add.ptr.i.i.i.i = getelementptr i8, ptr %node.05.i.i.i, i32 %.neg.i.i.i.i
  %add.ptr.i.i.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i.i, i32 -24
  %6 = ptrtoint ptr %add.ptr.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %add.ptr.i.i.i.i.i, align 4
  %cmp.i.i.i.i = icmp ugt ptr %7, %3
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i, label %mod_tree_comp.exit.i.i.i

mod_tree_comp.exit.i.i.i:                         ; preds = %while.body.i.i.i
  %8 = ptrtoint ptr %7 to i32
  %size.i.i.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i.i, i32 -20
  %9 = ptrtoint ptr %size.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %size.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %10, %8
  %cmp2.not.i.not.i.i.i = icmp ugt i32 %add.i.i.i.i, %addr
  br i1 %cmp2.not.i.not.i.i.i, label %__lt_find.exit.i.i, label %if.then9.i.i.i

if.then.i.i.i:                                    ; preds = %while.body.i.i.i
  %rb_left.i.i.i = getelementptr inbounds %struct.rb_node, ptr %node.05.i.i.i, i32 0, i32 2
  br label %if.end16.i.i.i

if.then9.i.i.i:                                   ; preds = %mod_tree_comp.exit.i.i.i
  %rb_right.i.i.i = getelementptr inbounds %struct.rb_node, ptr %node.05.i.i.i, i32 0, i32 1
  br label %if.end16.i.i.i

if.end16.i.i.i:                                   ; preds = %if.then9.i.i.i, %if.then.i.i.i
  %node.1.in.i.i.i = phi ptr [ %rb_left.i.i.i, %if.then.i.i.i ], [ %rb_right.i.i.i, %if.then9.i.i.i ]
  %11 = ptrtoint ptr %node.1.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %node.0.i.i.i = load volatile ptr, ptr %node.1.in.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %node.0.i.i.i, null
  br i1 %tobool.not.i.i.i, label %__lt_find.exit.i.i, label %while.body.i.i.i

__lt_find.exit.i.i:                               ; preds = %if.end16.i.i.i, %mod_tree_comp.exit.i.i.i, %do.body.i.i
  %retval.0.i.i.i = phi ptr [ null, %do.body.i.i ], [ %add.ptr.i.i.i.i, %mod_tree_comp.exit.i.i.i ], [ null, %if.end16.i.i.i ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !814
  %12 = load volatile i32, ptr @mod_tree, align 128
  %cmp.i.i.i.not.i.i = icmp eq i32 %12, %4
  br i1 %cmp.i.i.i.not.i.i, label %latch_tree_find.exit.i, label %do.body.i.i

latch_tree_find.exit.i:                           ; preds = %__lt_find.exit.i.i
  %tobool.not.i25 = icmp eq ptr %retval.0.i.i.i, null
  br i1 %tobool.not.i25, label %cleanup, label %mod_find.exit

mod_find.exit:                                    ; preds = %latch_tree_find.exit.i
  %add.ptr.i = getelementptr i8, ptr %retval.0.i.i.i, i32 -4
  %13 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %add.ptr.i, align 4
  %tobool.not = icmp eq ptr %14, null
  br i1 %tobool.not, label %cleanup, label %do.body

do.body:                                          ; preds = %mod_find.exit
  %init_layout.i.i = getelementptr inbounds %struct.module, ptr %14, i32 0, i32 26
  %15 = ptrtoint ptr %init_layout.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %init_layout.i.i, align 16
  %17 = ptrtoint ptr %16 to i32
  %cmp.not.i.i = icmp ugt i32 %17, %addr
  br i1 %cmp.not.i.i, label %lor.rhs.i, label %within_module_init.exit.i

within_module_init.exit.i:                        ; preds = %do.body
  %size.i.i = getelementptr inbounds %struct.module, ptr %14, i32 0, i32 26, i32 1
  %18 = ptrtoint ptr %size.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %size.i.i, align 4
  %add.i.i = add i32 %19, %17
  %cmp4.i.i = icmp ugt i32 %add.i.i, %addr
  br i1 %cmp4.i.i, label %do.end14, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %within_module_init.exit.i, %do.body
  %core_layout.i.i = getelementptr inbounds %struct.module, ptr %14, i32 0, i32 25
  %20 = ptrtoint ptr %core_layout.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %core_layout.i.i, align 128
  %22 = ptrtoint ptr %21 to i32
  %cmp.not.i4.i = icmp ugt i32 %22, %addr
  br i1 %cmp.not.i4.i, label %do.body8, label %within_module.exit, !prof !815

within_module.exit:                               ; preds = %lor.rhs.i
  %size.i5.i = getelementptr inbounds %struct.module, ptr %14, i32 0, i32 25, i32 1
  %23 = ptrtoint ptr %size.i5.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %size.i5.i, align 4
  %add.i6.i = add i32 %24, %22
  %cmp4.i7.i = icmp ugt i32 %add.i6.i, %addr
  br i1 %cmp4.i7.i, label %do.end14, label %do.body8, !prof !770

do.body8:                                         ; preds = %within_module.exit, %lor.rhs.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4732, 0\0A.popsection", ""() #29, !srcloc !816
  unreachable

do.end14:                                         ; preds = %within_module.exit, %within_module_init.exit.i
  %25 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %14, align 128
  %cmp15 = icmp eq i32 %26, 3
  %spec.store.select = select i1 %cmp15, ptr null, ptr %14
  br label %cleanup

cleanup:                                          ; preds = %do.end14, %mod_find.exit, %latch_tree_find.exit.i, %lor.lhs.false, %entry
  %retval.0 = phi ptr [ null, %lor.lhs.false ], [ null, %entry ], [ %spec.store.select, %do.end14 ], [ null, %mod_find.exit ], [ null, %latch_tree_find.exit.i ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @find_kallsyms_symbol(ptr noundef %mod, i32 noundef %addr, ptr noundef writeonly %size, ptr noundef writeonly %offset) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %kallsyms1 = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 32
  %0 = ptrtoint ptr %kallsyms1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %kallsyms1, align 8
  %call = tail call i32 @rcu_read_lock_sched_held() #29
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %do.end8

land.lhs.true:                                    ; preds = %entry
  %call3 = tail call i32 @debug_lockdep_rcu_enabled() #29
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %do.end8, label %land.lhs.true5

land.lhs.true5:                                   ; preds = %land.lhs.true
  %.b97 = load i1, ptr @find_kallsyms_symbol.__warned, align 1
  br i1 %.b97, label %do.end8, label %if.then

if.then:                                          ; preds = %land.lhs.true5
  store i1 true, ptr @find_kallsyms_symbol.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 4259, ptr noundef nonnull @.str.15) #29
  br label %do.end8

do.end8:                                          ; preds = %if.then, %land.lhs.true5, %land.lhs.true, %entry
  %init_layout.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26
  %2 = ptrtoint ptr %init_layout.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %init_layout.i, align 16
  %4 = ptrtoint ptr %3 to i32
  %cmp.not.i = icmp ugt i32 %4, %addr
  br i1 %cmp.not.i, label %if.else, label %within_module_init.exit

within_module_init.exit:                          ; preds = %do.end8
  %size.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26, i32 1
  %5 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %size.i, align 4
  %add.i = add i32 %6, %4
  %cmp4.i = icmp ugt i32 %add.i, %addr
  br i1 %cmp4.i, label %if.then11, label %if.else

if.then11:                                        ; preds = %within_module_init.exit
  %text_size = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26, i32 2
  br label %if.end17

if.else:                                          ; preds = %within_module_init.exit, %do.end8
  %core_layout = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25
  %7 = ptrtoint ptr %core_layout to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %core_layout, align 128
  %9 = ptrtoint ptr %8 to i32
  %text_size15 = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25, i32 2
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then11
  %text_size15.sink = phi ptr [ %text_size15, %if.else ], [ %text_size, %if.then11 ]
  %.sink123 = phi i32 [ %9, %if.else ], [ %4, %if.then11 ]
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %1, align 4
  %num_symtab = getelementptr inbounds %struct.mod_kallsyms, ptr %1, i32 0, i32 1
  %12 = ptrtoint ptr %num_symtab to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %num_symtab, align 4
  %cmp111 = icmp ugt i32 %13, 1
  br i1 %cmp111, label %for.body.lr.ph, label %cleanup61

for.body.lr.ph:                                   ; preds = %if.end17
  %st_value.i = getelementptr inbounds %struct.elf32_sym, ptr %11, i32 0, i32 1
  %14 = ptrtoint ptr %st_value.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %st_value.i, align 4
  %16 = ptrtoint ptr %text_size15.sink to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %text_size15.sink, align 8
  %add16 = add i32 %17, %.sink123
  %strtab.i = getelementptr inbounds %struct.mod_kallsyms, ptr %1, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %cleanup, %for.body.lr.ph
  %i.0115 = phi i32 [ 1, %for.body.lr.ph ], [ %inc, %cleanup ]
  %best.0114 = phi i32 [ 0, %for.body.lr.ph ], [ %best.2, %cleanup ]
  %bestval.0113 = phi i32 [ %15, %for.body.lr.ph ], [ %bestval.2, %cleanup ]
  %nextval.1112 = phi i32 [ %add16, %for.body.lr.ph ], [ %nextval.3, %cleanup ]
  %st_value.i99 = getelementptr %struct.elf32_sym, ptr %11, i32 %i.0115, i32 1
  %18 = ptrtoint ptr %st_value.i99 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %st_value.i99, align 4
  %st_shndx = getelementptr %struct.elf32_sym, ptr %11, i32 %i.0115, i32 5
  %20 = ptrtoint ptr %st_shndx to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %st_shndx, align 2
  %cmp22 = icmp eq i16 %21, 0
  br i1 %cmp22, label %cleanup, label %if.end25

if.end25:                                         ; preds = %for.body
  %arrayidx20 = getelementptr %struct.elf32_sym, ptr %11, i32 %i.0115
  %22 = ptrtoint ptr %strtab.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %strtab.i, align 4
  %24 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx20, align 4
  %add.ptr.i = getelementptr i8, ptr %23, i32 %25
  %26 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %add.ptr.i, align 1
  switch i8 %27, label %if.end34 [
    i8 0, label %cleanup
    i8 46, label %land.lhs.true.i
    i8 36, label %land.lhs.true10.i
  ]

land.lhs.true.i:                                  ; preds = %if.end25
  %arrayidx2.i = getelementptr i8, ptr %add.ptr.i, i32 1
  %28 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %arrayidx2.i, align 1
  %cmp4.i103 = icmp eq i8 %29, 76
  br i1 %cmp4.i103, label %cleanup, label %if.end34

land.lhs.true10.i:                                ; preds = %if.end25
  %arrayidx11.i = getelementptr i8, ptr %add.ptr.i, i32 1
  %30 = ptrtoint ptr %arrayidx11.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %arrayidx11.i, align 1
  %conv12.i = zext i8 %31 to i32
  %memchr.i = tail call ptr @memchr(ptr noundef nonnull @.str.290, i32 %conv12.i, i32 5) #31
  %tobool.not.i = icmp eq ptr %memchr.i, null
  br i1 %tobool.not.i, label %if.end34, label %is_arm_mapping_symbol.exit

is_arm_mapping_symbol.exit:                       ; preds = %land.lhs.true10.i
  %arrayidx13.i = getelementptr i8, ptr %add.ptr.i, i32 2
  %32 = ptrtoint ptr %arrayidx13.i to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %arrayidx13.i, align 1
  switch i8 %33, label %if.end34 [
    i8 46, label %cleanup
    i8 0, label %cleanup
  ]

if.end34:                                         ; preds = %is_arm_mapping_symbol.exit, %land.lhs.true10.i, %land.lhs.true.i, %if.end25
  %cmp35.not = icmp ule i32 %19, %addr
  %cmp38 = icmp ugt i32 %19, %bestval.0113
  %or.cond = select i1 %cmp35.not, i1 %cmp38, i1 false
  %bestval.1 = select i1 %or.cond, i32 %19, i32 %bestval.0113
  %best.1 = select i1 %or.cond, i32 %i.0115, i32 %best.0114
  %cmp42 = icmp ugt i32 %19, %addr
  %cmp45 = icmp ult i32 %19, %nextval.1112
  %or.cond98 = select i1 %cmp42, i1 %cmp45, i1 false
  %nextval.2 = select i1 %or.cond98, i32 %19, i32 %nextval.1112
  br label %cleanup

cleanup:                                          ; preds = %if.end34, %is_arm_mapping_symbol.exit, %is_arm_mapping_symbol.exit, %land.lhs.true.i, %if.end25, %for.body
  %nextval.3 = phi i32 [ %nextval.2, %if.end34 ], [ %nextval.1112, %for.body ], [ %nextval.1112, %is_arm_mapping_symbol.exit ], [ %nextval.1112, %if.end25 ], [ %nextval.1112, %land.lhs.true.i ], [ %nextval.1112, %is_arm_mapping_symbol.exit ]
  %bestval.2 = phi i32 [ %bestval.1, %if.end34 ], [ %bestval.0113, %for.body ], [ %bestval.0113, %is_arm_mapping_symbol.exit ], [ %bestval.0113, %if.end25 ], [ %bestval.0113, %land.lhs.true.i ], [ %bestval.0113, %is_arm_mapping_symbol.exit ]
  %best.2 = phi i32 [ %best.1, %if.end34 ], [ %best.0114, %for.body ], [ %best.0114, %is_arm_mapping_symbol.exit ], [ %best.0114, %if.end25 ], [ %best.0114, %land.lhs.true.i ], [ %best.0114, %is_arm_mapping_symbol.exit ]
  %inc = add nuw i32 %i.0115, 1
  %exitcond.not = icmp eq i32 %inc, %13
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %cleanup
  %tobool50.not = icmp eq i32 %best.2, 0
  br i1 %tobool50.not, label %cleanup61, label %if.end52

if.end52:                                         ; preds = %for.end
  %tobool53.not = icmp eq ptr %size, null
  br i1 %tobool53.not, label %if.end55, label %if.then54

if.then54:                                        ; preds = %if.end52
  %sub = sub i32 %nextval.3, %bestval.2
  %34 = ptrtoint ptr %size to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %sub, ptr %size, align 4
  br label %if.end55

if.end55:                                         ; preds = %if.then54, %if.end52
  %tobool56.not = icmp eq ptr %offset, null
  br i1 %tobool56.not, label %if.end59, label %if.then57

if.then57:                                        ; preds = %if.end55
  %sub58 = sub i32 %addr, %bestval.2
  %35 = ptrtoint ptr %offset to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %sub58, ptr %offset, align 4
  br label %if.end59

if.end59:                                         ; preds = %if.then57, %if.end55
  %strtab.i105 = getelementptr inbounds %struct.mod_kallsyms, ptr %1, i32 0, i32 2
  %36 = ptrtoint ptr %strtab.i105 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %strtab.i105, align 4
  %38 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %1, align 4
  %arrayidx.i106 = getelementptr %struct.elf32_sym, ptr %39, i32 %best.2
  %40 = ptrtoint ptr %arrayidx.i106 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %arrayidx.i106, align 4
  %add.ptr.i107 = getelementptr i8, ptr %37, i32 %41
  br label %cleanup61

cleanup61:                                        ; preds = %if.end59, %for.end, %if.end17
  %retval.0 = phi ptr [ %add.ptr.i107, %if.end59 ], [ null, %for.end ], [ null, %if.end17 ]
  ret ptr %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strncpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly, i32 noundef) local_unnamed_addr #12

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @lookup_module_symbol_name(i32 noundef %addr, ptr noundef %symname) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !817
  %call = tail call i32 @rcu_read_lock_any_held() #29
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %do.end7

land.lhs.true:                                    ; preds = %entry
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #29
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %do.end7, label %land.lhs.true4

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b44 = load i1, ptr @lookup_module_symbol_name.__warned, align 1
  br i1 %.b44, label %do.end7, label %if.then

if.then:                                          ; preds = %land.lhs.true4
  store i1 true, ptr @lookup_module_symbol_name.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 4357, ptr noundef nonnull @.str.1) #29
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4, %land.lhs.true, %entry
  %.pn52 = load volatile ptr, ptr @modules, align 4
  %cmp.not54 = icmp eq ptr %.pn52, @modules
  br i1 %cmp.not54, label %do.body34, label %for.body

for.body:                                         ; preds = %for.inc, %do.end7
  %.pn55 = phi ptr [ %.pn, %for.inc ], [ %.pn52, %do.end7 ]
  %mod.056 = getelementptr i8, ptr %.pn55, i32 -4
  %4 = ptrtoint ptr %mod.056 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mod.056, align 128
  %cmp12 = icmp eq i32 %5, 3
  br i1 %cmp12, label %for.inc, label %if.end14

if.end14:                                         ; preds = %for.body
  %init_layout.i.i = getelementptr i8, ptr %.pn55, i32 556
  %6 = ptrtoint ptr %init_layout.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %init_layout.i.i, align 16
  %8 = ptrtoint ptr %7 to i32
  %cmp.not.i.i = icmp ugt i32 %8, %addr
  br i1 %cmp.not.i.i, label %lor.rhs.i, label %within_module_init.exit.i

within_module_init.exit.i:                        ; preds = %if.end14
  %size.i.i = getelementptr i8, ptr %.pn55, i32 560
  %9 = ptrtoint ptr %size.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %size.i.i, align 4
  %add.i.i = add i32 %10, %8
  %cmp4.i.i = icmp ugt i32 %add.i.i, %addr
  br i1 %cmp4.i.i, label %if.then16, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %within_module_init.exit.i, %if.end14
  %core_layout.i.i = getelementptr i8, ptr %.pn55, i32 508
  %11 = ptrtoint ptr %core_layout.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %core_layout.i.i, align 128
  %13 = ptrtoint ptr %12 to i32
  %cmp.not.i4.i = icmp ugt i32 %13, %addr
  br i1 %cmp.not.i4.i, label %for.inc, label %within_module.exit

within_module.exit:                               ; preds = %lor.rhs.i
  %size.i5.i = getelementptr i8, ptr %.pn55, i32 512
  %14 = ptrtoint ptr %size.i5.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %size.i5.i, align 4
  %add.i6.i = add i32 %15, %13
  %cmp4.i7.i = icmp ugt i32 %add.i6.i, %addr
  br i1 %cmp4.i7.i, label %if.then16, label %for.inc

if.then16:                                        ; preds = %within_module.exit, %within_module_init.exit.i
  %mod.056.le = getelementptr i8, ptr %.pn55, i32 -4
  %call17 = tail call fastcc ptr @find_kallsyms_symbol(ptr noundef %mod.056.le, i32 noundef %addr, ptr noundef null, ptr noundef null)
  %tobool18.not = icmp eq ptr %call17, null
  br i1 %tobool18.not, label %do.body34, label %if.end20

if.end20:                                         ; preds = %if.then16
  %call21 = tail call i32 @strlcpy(ptr noundef %symname, ptr noundef nonnull %call17, i32 noundef 128) #29
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !818
  br label %cleanup37

for.inc:                                          ; preds = %within_module.exit, %lor.rhs.i, %for.body
  %16 = ptrtoint ptr %.pn55 to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pn = load volatile ptr, ptr %.pn55, align 4
  %cmp.not = icmp eq ptr %.pn, @modules
  br i1 %cmp.not, label %do.body34, label %for.body

do.body34:                                        ; preds = %for.inc, %if.then16, %do.end7
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !819
  br label %cleanup37

cleanup37:                                        ; preds = %do.body34, %if.end20
  %retval.1 = phi i32 [ -34, %do.body34 ], [ 0, %if.end20 ]
  %17 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i45 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i.i45 to ptr
  %preempt_count.i.i46 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %preempt_count.i.i46 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %preempt_count.i.i46, align 4
  %sub.i = add i32 %20, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i46, align 4
  ret i32 %retval.1
}

; Function Attrs: nofree null_pointer_is_valid
declare dso_local i32 @strlcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #13

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @lookup_module_symbol_attrs(i32 noundef %addr, ptr noundef %size, ptr noundef %offset, ptr noundef %modname, ptr noundef %name) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !820
  %call = tail call i32 @rcu_read_lock_any_held() #29
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %do.end7

land.lhs.true:                                    ; preds = %entry
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #29
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %do.end7, label %land.lhs.true4

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b55 = load i1, ptr @lookup_module_symbol_attrs.__warned, align 1
  br i1 %.b55, label %do.end7, label %if.then

if.then:                                          ; preds = %land.lhs.true4
  store i1 true, ptr @lookup_module_symbol_attrs.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 4383, ptr noundef nonnull @.str.1) #29
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4, %land.lhs.true, %entry
  %.pn64 = load volatile ptr, ptr @modules, align 4
  %cmp.not66 = icmp eq ptr %.pn64, @modules
  br i1 %cmp.not66, label %do.body42, label %for.body

for.body:                                         ; preds = %for.inc, %do.end7
  %.pn67 = phi ptr [ %.pn, %for.inc ], [ %.pn64, %do.end7 ]
  %mod.068 = getelementptr i8, ptr %.pn67, i32 -4
  %4 = ptrtoint ptr %mod.068 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mod.068, align 128
  %cmp12 = icmp eq i32 %5, 3
  br i1 %cmp12, label %for.inc, label %if.end14

if.end14:                                         ; preds = %for.body
  %init_layout.i.i = getelementptr i8, ptr %.pn67, i32 556
  %6 = ptrtoint ptr %init_layout.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %init_layout.i.i, align 16
  %8 = ptrtoint ptr %7 to i32
  %cmp.not.i.i = icmp ugt i32 %8, %addr
  br i1 %cmp.not.i.i, label %lor.rhs.i, label %within_module_init.exit.i

within_module_init.exit.i:                        ; preds = %if.end14
  %size.i.i = getelementptr i8, ptr %.pn67, i32 560
  %9 = ptrtoint ptr %size.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %size.i.i, align 4
  %add.i.i = add i32 %10, %8
  %cmp4.i.i = icmp ugt i32 %add.i.i, %addr
  br i1 %cmp4.i.i, label %if.then16, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %within_module_init.exit.i, %if.end14
  %core_layout.i.i = getelementptr i8, ptr %.pn67, i32 508
  %11 = ptrtoint ptr %core_layout.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %core_layout.i.i, align 128
  %13 = ptrtoint ptr %12 to i32
  %cmp.not.i4.i = icmp ugt i32 %13, %addr
  br i1 %cmp.not.i4.i, label %for.inc, label %within_module.exit

within_module.exit:                               ; preds = %lor.rhs.i
  %size.i5.i = getelementptr i8, ptr %.pn67, i32 512
  %14 = ptrtoint ptr %size.i5.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %size.i5.i, align 4
  %add.i6.i = add i32 %15, %13
  %cmp4.i7.i = icmp ugt i32 %add.i6.i, %addr
  br i1 %cmp4.i7.i, label %if.then16, label %for.inc

if.then16:                                        ; preds = %within_module.exit, %within_module_init.exit.i
  %mod.068.le = getelementptr i8, ptr %.pn67, i32 -4
  %call17 = tail call fastcc ptr @find_kallsyms_symbol(ptr noundef %mod.068.le, i32 noundef %addr, ptr noundef %size, ptr noundef %offset)
  %tobool18.not = icmp eq ptr %call17, null
  br i1 %tobool18.not, label %do.body42, label %if.end20

if.end20:                                         ; preds = %if.then16
  %tobool21.not = icmp eq ptr %modname, null
  br i1 %tobool21.not, label %if.end25, label %if.then22

if.then22:                                        ; preds = %if.end20
  %name23 = getelementptr i8, ptr %.pn67, i32 8
  %call24 = tail call i32 @strlcpy(ptr noundef nonnull %modname, ptr noundef %name23, i32 noundef 60) #29
  br label %if.end25

if.end25:                                         ; preds = %if.then22, %if.end20
  %tobool26.not = icmp eq ptr %name, null
  br i1 %tobool26.not, label %do.body30, label %if.then27

if.then27:                                        ; preds = %if.end25
  %call28 = tail call i32 @strlcpy(ptr noundef nonnull %name, ptr noundef nonnull %call17, i32 noundef 128) #29
  br label %do.body30

do.body30:                                        ; preds = %if.then27, %if.end25
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !821
  br label %cleanup45

for.inc:                                          ; preds = %within_module.exit, %lor.rhs.i, %for.body
  %16 = ptrtoint ptr %.pn67 to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pn = load volatile ptr, ptr %.pn67, align 4
  %cmp.not = icmp eq ptr %.pn, @modules
  br i1 %cmp.not, label %do.body42, label %for.body

do.body42:                                        ; preds = %for.inc, %if.then16, %do.end7
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !822
  br label %cleanup45

cleanup45:                                        ; preds = %do.body42, %do.body30
  %retval.1 = phi i32 [ -34, %do.body42 ], [ 0, %do.body30 ]
  %17 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i56 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i.i56 to ptr
  %preempt_count.i.i57 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %preempt_count.i.i57 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %preempt_count.i.i57, align 4
  %sub.i = add i32 %20, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i57, align 4
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @module_get_kallsym(i32 noundef %symnum, ptr nocapture noundef %value, ptr nocapture noundef writeonly %type, ptr noundef %name, ptr noundef %module_name, ptr nocapture noundef writeonly %exported) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !823
  %call = tail call i32 @rcu_read_lock_any_held() #29
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %do.end7

land.lhs.true:                                    ; preds = %entry
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #29
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %do.end7, label %land.lhs.true4

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b76 = load i1, ptr @module_get_kallsym.__warned, align 1
  br i1 %.b76, label %do.end7, label %if.then

if.then:                                          ; preds = %land.lhs.true4
  store i1 true, ptr @module_get_kallsym.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 4411, ptr noundef nonnull @.str.1) #29
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4, %land.lhs.true, %entry
  %.pn88 = load volatile ptr, ptr @modules, align 4
  %cmp.not90 = icmp eq ptr %.pn88, @modules
  br i1 %cmp.not90, label %do.body55, label %for.body

for.body:                                         ; preds = %for.inc, %do.end7
  %.pn92 = phi ptr [ %.pn, %for.inc ], [ %.pn88, %do.end7 ]
  %symnum.addr.091 = phi i32 [ %symnum.addr.1.ph, %for.inc ], [ %symnum, %do.end7 ]
  %mod.093 = getelementptr i8, ptr %.pn92, i32 -4
  %4 = ptrtoint ptr %mod.093 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mod.093, align 128
  %cmp12 = icmp eq i32 %5, 3
  br i1 %cmp12, label %for.inc, label %if.end14

if.end14:                                         ; preds = %for.body
  %kallsyms19 = getelementptr i8, ptr %.pn92, i32 676
  %6 = ptrtoint ptr %kallsyms19 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %kallsyms19, align 8
  %call21 = tail call i32 @rcu_read_lock_sched_held() #29
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %land.lhs.true23, label %do.end31

land.lhs.true23:                                  ; preds = %if.end14
  %call24 = tail call i32 @debug_lockdep_rcu_enabled() #29
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %do.end31, label %land.lhs.true26

land.lhs.true26:                                  ; preds = %land.lhs.true23
  %.b7475 = load i1, ptr @module_get_kallsym.__warned.14, align 1
  br i1 %.b7475, label %do.end31, label %if.then28

if.then28:                                        ; preds = %land.lhs.true26
  store i1 true, ptr @module_get_kallsym.__warned.14, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 4416, ptr noundef nonnull @.str.15) #29
  br label %do.end31

do.end31:                                         ; preds = %if.then28, %land.lhs.true26, %land.lhs.true23, %if.end14
  %num_symtab = getelementptr inbounds %struct.mod_kallsyms, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %num_symtab to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_symtab, align 4
  %cmp33 = icmp ult i32 %symnum.addr.091, %9
  br i1 %cmp33, label %if.then34, label %if.end45

if.then34:                                        ; preds = %do.end31
  %mod.093.le = getelementptr i8, ptr %.pn92, i32 -4
  %10 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %7, align 4
  %st_value.i = getelementptr %struct.elf32_sym, ptr %11, i32 %symnum.addr.091, i32 1
  %12 = ptrtoint ptr %st_value.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %st_value.i, align 4
  %14 = ptrtoint ptr %value to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %value, align 4
  %typetab = getelementptr inbounds %struct.mod_kallsyms, ptr %7, i32 0, i32 3
  %15 = ptrtoint ptr %typetab to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %typetab, align 4
  %arrayidx36 = getelementptr i8, ptr %16, i32 %symnum.addr.091
  %17 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %arrayidx36, align 1
  %19 = ptrtoint ptr %type to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %18, ptr %type, align 1
  %strtab.i = getelementptr inbounds %struct.mod_kallsyms, ptr %7, i32 0, i32 2
  %20 = ptrtoint ptr %strtab.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %strtab.i, align 4
  %22 = load ptr, ptr %7, align 4
  %arrayidx.i = getelementptr %struct.elf32_sym, ptr %22, i32 %symnum.addr.091
  %23 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx.i, align 4
  %add.ptr.i = getelementptr i8, ptr %21, i32 %24
  %call38 = tail call i32 @strlcpy(ptr noundef %name, ptr noundef %add.ptr.i, i32 noundef 128) #29
  %name39 = getelementptr i8, ptr %.pn92, i32 8
  %call40 = tail call i32 @strlcpy(ptr noundef %module_name, ptr noundef %name39, i32 noundef 60) #29
  %25 = ptrtoint ptr %value to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %value, align 4
  %tobool.not.i = icmp eq ptr %mod.093.le, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then34
  %call.i.i = tail call ptr @bsearch(ptr noundef %name, ptr noundef nonnull @__start___ksymtab, i32 noundef sdiv (i32 sub (i32 ptrtoint (ptr @__stop___ksymtab to i32), i32 ptrtoint (ptr @__start___ksymtab to i32)), i32 12), i32 noundef 12, ptr noundef nonnull @cmp_name) #29
  br label %if.end.i

if.else.i:                                        ; preds = %if.then34
  %syms.i = getelementptr i8, ptr %.pn92, i32 256
  %27 = ptrtoint ptr %syms.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %syms.i, align 4
  %num_syms.i = getelementptr i8, ptr %.pn92, i32 264
  %29 = ptrtoint ptr %num_syms.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %num_syms.i, align 4
  %add.ptr.idx.i = mul i32 %30, 12
  %sub.ptr.div.i.i = sdiv exact i32 %add.ptr.idx.i, 12
  %call.i10.i = tail call ptr @bsearch(ptr noundef %name, ptr noundef %28, i32 noundef %sub.ptr.div.i.i, i32 noundef 12, ptr noundef nonnull @cmp_name) #29
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then.i
  %ks.0.i = phi ptr [ %call.i10.i, %if.else.i ], [ %call.i.i, %if.then.i ]
  %cmp.not.i = icmp eq ptr %ks.0.i, null
  br i1 %cmp.not.i, label %cleanup, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.end.i
  %31 = ptrtoint ptr %ks.0.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %ks.0.i, align 4
  %cmp4.i = icmp eq i32 %32, %26
  %phi.cast.i = zext i1 %cmp4.i to i32
  br label %cleanup

if.end45:                                         ; preds = %do.end31
  %sub = sub i32 %symnum.addr.091, %9
  br label %for.inc

cleanup:                                          ; preds = %land.rhs.i, %if.end.i
  %33 = phi i32 [ 0, %if.end.i ], [ %phi.cast.i, %land.rhs.i ]
  %34 = ptrtoint ptr %exported to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %exported, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !824
  br label %cleanup58

for.inc:                                          ; preds = %if.end45, %for.body
  %symnum.addr.1.ph = phi i32 [ %symnum.addr.091, %for.body ], [ %sub, %if.end45 ]
  %35 = ptrtoint ptr %.pn92 to i32
  call void @__asan_load4_noabort(i32 %35)
  %.pn = load volatile ptr, ptr %.pn92, align 4
  %cmp.not = icmp eq ptr %.pn, @modules
  br i1 %cmp.not, label %do.body55, label %for.body

do.body55:                                        ; preds = %for.inc, %do.end7
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !825
  br label %cleanup58

cleanup58:                                        ; preds = %do.body55, %cleanup
  %retval.2 = phi i32 [ 0, %cleanup ], [ -34, %do.body55 ]
  %36 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i77 = and i32 %36, -16384
  %37 = inttoptr i32 %and.i.i.i77 to ptr
  %preempt_count.i.i78 = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 1
  %38 = ptrtoint ptr %preempt_count.i.i78 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %preempt_count.i.i78, align 4
  %sub.i = add i32 %39, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i78, align 4
  ret i32 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @module_kallsyms_lookup_name(ptr noundef %name) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !826
  %call = tail call ptr @strnchr(ptr noundef %name, i32 noundef 60, i32 noundef 58) #29
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %do.body5, label %if.then

if.then:                                          ; preds = %entry
  %sub.ptr.lhs.cast = ptrtoint ptr %call to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %name to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call1 = tail call fastcc ptr @find_module_all(ptr noundef %name, i32 noundef %sub.ptr.sub, i1 noundef zeroext false)
  %cmp2.not = icmp eq ptr %call1, null
  br i1 %cmp2.not, label %do.body37, label %if.then3

if.then3:                                         ; preds = %if.then
  %add.ptr = getelementptr i8, ptr %call, i32 1
  %call4 = tail call fastcc i32 @find_kallsyms_symbol_value(ptr noundef nonnull %call1, ptr noundef %add.ptr)
  br label %do.body37

do.body5:                                         ; preds = %entry
  %call6 = tail call i32 @rcu_read_lock_any_held() #29
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %land.lhs.true, label %do.end14

land.lhs.true:                                    ; preds = %do.body5
  %call7 = tail call i32 @debug_lockdep_rcu_enabled() #29
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %do.end14, label %land.lhs.true9

land.lhs.true9:                                   ; preds = %land.lhs.true
  %.b48 = load i1, ptr @module_kallsyms_lookup_name.__warned, align 1
  br i1 %.b48, label %do.end14, label %if.then11

if.then11:                                        ; preds = %land.lhs.true9
  store i1 true, ptr @module_kallsyms_lookup_name.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 4463, ptr noundef nonnull @.str.1) #29
  br label %do.end14

do.end14:                                         ; preds = %if.then11, %land.lhs.true9, %land.lhs.true, %do.body5
  %.pn51 = load volatile ptr, ptr @modules, align 4
  %cmp20.not53 = icmp eq ptr %.pn51, @modules
  br i1 %cmp20.not53, label %do.body37, label %for.body

for.body:                                         ; preds = %for.inc, %do.end14
  %.pn54 = phi ptr [ %.pn, %for.inc ], [ %.pn51, %do.end14 ]
  %mod.055 = getelementptr i8, ptr %.pn54, i32 -4
  %4 = ptrtoint ptr %mod.055 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mod.055, align 128
  %cmp21 = icmp eq i32 %5, 3
  br i1 %cmp21, label %for.inc, label %if.end23

if.end23:                                         ; preds = %for.body
  %call24 = tail call fastcc i32 @find_kallsyms_symbol_value(ptr noundef %mod.055, ptr noundef %name)
  %cmp25.not = icmp eq i32 %call24, 0
  br i1 %cmp25.not, label %for.inc, label %do.body37

for.inc:                                          ; preds = %if.end23, %for.body
  %6 = ptrtoint ptr %.pn54 to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pn = load volatile ptr, ptr %.pn54, align 4
  %cmp20.not = icmp eq ptr %.pn, @modules
  br i1 %cmp20.not, label %do.body37, label %for.body

do.body37:                                        ; preds = %for.inc, %if.end23, %do.end14, %if.then3, %if.then
  %ret.2 = phi i32 [ %call4, %if.then3 ], [ 0, %if.then ], [ 0, %do.end14 ], [ 0, %for.inc ], [ %call24, %if.end23 ]
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !827
  %7 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i49 = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i49 to ptr
  %preempt_count.i.i50 = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i.i50 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i.i50, align 4
  %sub.i = add i32 %10, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i50, align 4
  ret i32 %ret.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @strnchr(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @find_kallsyms_symbol_value(ptr noundef %mod, ptr nocapture noundef readonly %name) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %kallsyms1 = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 32
  %0 = ptrtoint ptr %kallsyms1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %kallsyms1, align 8
  %call = tail call i32 @rcu_read_lock_sched_held() #29
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %do.end8

land.lhs.true:                                    ; preds = %entry
  %call3 = tail call i32 @debug_lockdep_rcu_enabled() #29
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %do.end8, label %land.lhs.true5

land.lhs.true5:                                   ; preds = %land.lhs.true
  %.b27 = load i1, ptr @find_kallsyms_symbol_value.__warned, align 1
  br i1 %.b27, label %do.end8, label %if.then

if.then:                                          ; preds = %land.lhs.true5
  store i1 true, ptr @find_kallsyms_symbol_value.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 4438, ptr noundef nonnull @.str.15) #29
  br label %do.end8

do.end8:                                          ; preds = %if.then, %land.lhs.true5, %land.lhs.true, %entry
  %num_symtab = getelementptr inbounds %struct.mod_kallsyms, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %num_symtab to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_symtab, align 4
  %cmp32.not = icmp eq i32 %3, 0
  br i1 %cmp32.not, label %cleanup19, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %do.end8
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %1, align 4
  %strtab.i = getelementptr inbounds %struct.mod_kallsyms, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %strtab.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %strtab.i, align 4
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %i.033 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %arrayidx = getelementptr %struct.elf32_sym, ptr %5, i32 %i.033
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx, align 4
  %add.ptr.i = getelementptr i8, ptr %7, i32 %9
  %call11 = tail call i32 @strcmp(ptr noundef %name, ptr noundef %add.ptr.i) #32
  %cmp12 = icmp eq i32 %call11, 0
  br i1 %cmp12, label %land.lhs.true13, label %for.inc

land.lhs.true13:                                  ; preds = %for.body
  %st_shndx = getelementptr %struct.elf32_sym, ptr %5, i32 %i.033, i32 5
  %10 = ptrtoint ptr %st_shndx to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %st_shndx, align 2
  %cmp14.not = icmp eq i16 %11, 0
  br i1 %cmp14.not, label %for.inc, label %cleanup

cleanup:                                          ; preds = %land.lhs.true13
  %st_value.i = getelementptr %struct.elf32_sym, ptr %5, i32 %i.033, i32 1
  %12 = ptrtoint ptr %st_value.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %st_value.i, align 4
  br label %cleanup19

for.inc:                                          ; preds = %land.lhs.true13, %for.body
  %inc = add nuw i32 %i.033, 1
  %exitcond.not = icmp eq i32 %inc, %3
  br i1 %exitcond.not, label %cleanup19, label %for.body

cleanup19:                                        ; preds = %for.inc, %cleanup, %do.end8
  %retval.2 = phi i32 [ %13, %cleanup ], [ 0, %do.end8 ], [ 0, %for.inc ]
  ret i32 %retval.2
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @proc_modules_init() #14 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @proc_create(ptr noundef nonnull @.str.291, i16 noundef zeroext 0, ptr noundef null, ptr noundef nonnull @modules_proc_ops) #29
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @search_module_extables(i32 noundef %addr) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !828
  %call = tail call ptr @__module_address(i32 noundef %addr)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %do.body6, label %if.end

if.end:                                           ; preds = %entry
  %num_exentries = getelementptr inbounds %struct.module, ptr %call, i32 0, i32 21
  %4 = ptrtoint ptr %num_exentries to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_exentries, align 4
  %tobool1.not = icmp eq i32 %5, 0
  br i1 %tobool1.not, label %do.body6, label %if.end3

if.end3:                                          ; preds = %if.end
  %extable = getelementptr inbounds %struct.module, ptr %call, i32 0, i32 22
  %6 = ptrtoint ptr %extable to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %extable, align 8
  %call5 = tail call ptr @search_extable(ptr noundef %7, i32 noundef %5, i32 noundef %addr) #29
  br label %do.body6

do.body6:                                         ; preds = %if.end3, %if.end, %entry
  %e.0 = phi ptr [ %call5, %if.end3 ], [ null, %if.end ], [ null, %entry ]
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !829
  %8 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i13 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i13 to ptr
  %preempt_count.i.i14 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i14 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i14, align 4
  %sub.i = add i32 %11, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i14, align 4
  ret ptr %e.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @search_extable(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @is_module_address(i32 noundef %addr) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !830
  %call = tail call ptr @__module_address(i32 noundef %addr)
  %cmp = icmp ne ptr %call, null
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !831
  %4 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i4 = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i4 to ptr
  %preempt_count.i.i5 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i5, align 4
  %sub.i = add i32 %7, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i5, align 4
  ret i1 %cmp
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @is_module_text_address(i32 noundef %addr) local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !832
  %call.i = tail call ptr @__module_address(i32 noundef %addr) #29
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %__module_text_address.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %init_layout.i = getelementptr inbounds %struct.module, ptr %call.i, i32 0, i32 26
  %4 = ptrtoint ptr %init_layout.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %init_layout.i, align 16
  %text_size.i = getelementptr inbounds %struct.module, ptr %call.i, i32 0, i32 26, i32 2
  %6 = ptrtoint ptr %text_size.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %text_size.i, align 8
  %8 = inttoptr i32 %addr to ptr
  %cmp.not.i.i = icmp ugt ptr %5, %8
  %add.ptr.i.i = getelementptr i8, ptr %5, i32 %7
  %cmp1.i.i = icmp ule ptr %add.ptr.i.i, %8
  %tobool3.not.i = or i1 %cmp.not.i.i, %cmp1.i.i
  br i1 %tobool3.not.i, label %land.lhs.true.i, label %__module_text_address.exit

land.lhs.true.i:                                  ; preds = %if.then.i
  %core_layout.i = getelementptr inbounds %struct.module, ptr %call.i, i32 0, i32 25
  %9 = ptrtoint ptr %core_layout.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %core_layout.i, align 128
  %text_size6.i = getelementptr inbounds %struct.module, ptr %call.i, i32 0, i32 25, i32 2
  %11 = ptrtoint ptr %text_size6.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %text_size6.i, align 8
  %cmp.not.i18.i = icmp ugt ptr %10, %8
  %add.ptr.i19.i = getelementptr i8, ptr %10, i32 %12
  %cmp1.i20.i = icmp ule ptr %add.ptr.i19.i, %8
  %tobool8.not.i = or i1 %cmp.not.i18.i, %cmp1.i20.i
  %spec.select.i = select i1 %tobool8.not.i, ptr null, ptr %call.i
  br label %__module_text_address.exit

__module_text_address.exit:                       ; preds = %land.lhs.true.i, %if.then.i, %entry
  %mod.0.i = phi ptr [ %call.i, %if.then.i ], [ null, %entry ], [ %spec.select.i, %land.lhs.true.i ]
  %cmp = icmp ne ptr %mod.0.i, null
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !833
  %13 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i4 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i4 to ptr
  %preempt_count.i.i5 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i5 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i5, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i5, align 4
  ret i1 %cmp
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @print_modules() local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %buf = alloca [22 x i8], align 1
  call void @llvm.lifetime.start.p0(i64 22, ptr nonnull %buf) #29
  %0 = getelementptr inbounds [22 x i8], ptr %buf, i32 0, i32 1
  %1 = call ptr @memset(ptr %buf, i32 255, i32 22)
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.16) #37
  %2 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %5, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !834
  %call5 = tail call i32 @rcu_read_lock_any_held() #29
  %tobool.not = icmp eq i32 %call5, 0
  br i1 %tobool.not, label %land.lhs.true, label %do.end11

land.lhs.true:                                    ; preds = %entry
  %call6 = tail call i32 @debug_lockdep_rcu_enabled() #29
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %do.end11, label %land.lhs.true8

land.lhs.true8:                                   ; preds = %land.lhs.true
  %.b55 = load i1, ptr @print_modules.__warned, align 1
  br i1 %.b55, label %do.end11, label %if.then

if.then:                                          ; preds = %land.lhs.true8
  store i1 true, ptr @print_modules.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 4786, ptr noundef nonnull @.str.1) #29
  br label %do.end11

do.end11:                                         ; preds = %if.then, %land.lhs.true8, %land.lhs.true, %entry
  %.pn59 = load volatile ptr, ptr @modules, align 4
  %cmp.not61 = icmp eq ptr %.pn59, @modules
  br i1 %cmp.not61, label %do.body35, label %for.body

for.body:                                         ; preds = %for.inc, %do.end11
  %.pn62 = phi ptr [ %.pn, %for.inc ], [ %.pn59, %do.end11 ]
  %mod.063 = getelementptr i8, ptr %.pn62, i32 -4
  %6 = ptrtoint ptr %mod.063 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %mod.063, align 128
  %cmp17 = icmp eq i32 %7, 3
  br i1 %cmp17, label %for.inc, label %do.end7.i

do.end7.i:                                        ; preds = %for.body
  %name = getelementptr i8, ptr %.pn62, i32 8
  %taints.i = getelementptr i8, ptr %.pn62, i32 656
  %8 = ptrtoint ptr %taints.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %taints.i, align 4
  %.fr.i = freeze i32 %9
  %tobool8.not.i = icmp ne i32 %.fr.i, 0
  %.off.i = add i32 %7, -1
  %switch.i = icmp ult i32 %.off.i, 2
  %or.cond.i = select i1 %tobool8.not.i, i1 true, i1 %switch.i
  br i1 %or.cond.i, label %if.then14.i, label %module_flags.exit

if.then14.i:                                      ; preds = %do.end7.i
  %10 = ptrtoint ptr %buf to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 40, ptr %buf, align 1
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i, %if.then14.i
  %i.011.i.i = phi i32 [ 0, %if.then14.i ], [ %inc4.i.i, %for.inc.i.i ]
  %l.010.i.i = phi i32 [ 0, %if.then14.i ], [ %l.1.i.i, %for.inc.i.i ]
  %arrayidx.i.i = getelementptr [18 x %struct.taint_flag], ptr @taint_flags, i32 0, i32 %i.011.i.i
  %module.i.i = getelementptr [18 x %struct.taint_flag], ptr @taint_flags, i32 0, i32 %i.011.i.i, i32 2
  %11 = ptrtoint ptr %module.i.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %module.i.i, align 1, !range !773
  %tobool.not.i.i = icmp eq i8 %12, 0
  br i1 %tobool.not.i.i, label %for.inc.i.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %div3.i.i.i = lshr i32 %i.011.i.i, 5
  %arrayidx.i.i.i = getelementptr i32, ptr %taints.i, i32 %div3.i.i.i
  %13 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %15 = shl nuw i32 1, %i.011.i.i
  %16 = and i32 %14, %15
  %tobool1.not.i.i = icmp eq i32 %16, 0
  br i1 %tobool1.not.i.i, label %for.inc.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %land.lhs.true.i.i
  %17 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %arrayidx.i.i, align 1
  %inc.i.i = add i32 %l.010.i.i, 1
  %arrayidx3.i.i = getelementptr i8, ptr %0, i32 %l.010.i.i
  %19 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %18, ptr %arrayidx3.i.i, align 1
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.then.i.i, %land.lhs.true.i.i, %for.body.i.i
  %l.1.i.i = phi i32 [ %inc.i.i, %if.then.i.i ], [ %l.010.i.i, %land.lhs.true.i.i ], [ %l.010.i.i, %for.body.i.i ]
  %inc4.i.i = add nuw nsw i32 %i.011.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc4.i.i, 18
  br i1 %exitcond.not.i.i, label %module_flags_taint.exit.i, label %for.body.i.i

module_flags_taint.exit.i:                        ; preds = %for.inc.i.i
  %add.i58 = add i32 %l.1.i.i, 1
  %20 = ptrtoint ptr %mod.063 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %mod.063, align 128
  %cmp16.i = icmp eq i32 %21, 2
  br i1 %cmp16.i, label %if.then17.i, label %if.end20.i

if.then17.i:                                      ; preds = %module_flags_taint.exit.i
  %inc18.i = add i32 %l.1.i.i, 2
  %arrayidx19.i = getelementptr i8, ptr %buf, i32 %add.i58
  %22 = ptrtoint ptr %arrayidx19.i to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 45, ptr %arrayidx19.i, align 1
  %23 = ptrtoint ptr %mod.063 to i32
  call void @__asan_load4_noabort(i32 %23)
  %.pr.i = load i32, ptr %mod.063, align 128
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then17.i, %module_flags_taint.exit.i
  %24 = phi i32 [ %.pr.i, %if.then17.i ], [ %21, %module_flags_taint.exit.i ]
  %bx.0.i = phi i32 [ %inc18.i, %if.then17.i ], [ %add.i58, %module_flags_taint.exit.i ]
  %cmp22.i = icmp eq i32 %24, 1
  br i1 %cmp22.i, label %if.then23.i, label %if.end26.i

if.then23.i:                                      ; preds = %if.end20.i
  %inc24.i = add i32 %bx.0.i, 1
  %arrayidx25.i = getelementptr i8, ptr %buf, i32 %bx.0.i
  %25 = ptrtoint ptr %arrayidx25.i to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 43, ptr %arrayidx25.i, align 1
  br label %if.end26.i

if.end26.i:                                       ; preds = %if.then23.i, %if.end20.i
  %bx.1.i = phi i32 [ %inc24.i, %if.then23.i ], [ %bx.0.i, %if.end20.i ]
  %inc27.i = add i32 %bx.1.i, 1
  %arrayidx28.i = getelementptr i8, ptr %buf, i32 %bx.1.i
  %26 = ptrtoint ptr %arrayidx28.i to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 41, ptr %arrayidx28.i, align 1
  br label %module_flags.exit

module_flags.exit:                                ; preds = %if.end26.i, %do.end7.i
  %bx.2.i = phi i32 [ %inc27.i, %if.end26.i ], [ 0, %do.end7.i ]
  %arrayidx30.i = getelementptr i8, ptr %buf, i32 %bx.2.i
  %27 = ptrtoint ptr %arrayidx30.i to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 0, ptr %arrayidx30.i, align 1
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.19, ptr noundef %name, ptr noundef nonnull %buf) #37
  br label %for.inc

for.inc:                                          ; preds = %module_flags.exit, %for.body
  %28 = ptrtoint ptr %.pn62 to i32
  call void @__asan_load4_noabort(i32 %28)
  %.pn = load volatile ptr, ptr %.pn62, align 4
  %cmp.not = icmp eq ptr %.pn, @modules
  br i1 %cmp.not, label %do.body35, label %for.body

do.body35:                                        ; preds = %for.inc, %do.end11
  call void asm sideeffect "", "~{memory}"() #29, !srcloc !835
  %29 = call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i56 = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i56 to ptr
  %preempt_count.i.i57 = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i57 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i57, align 4
  %sub.i = add i32 %32, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i57, align 4
  %33 = load i8, ptr @last_unloaded_module, align 1
  %tobool38.not = icmp eq i8 %33, 0
  br i1 %tobool38.not, label %do.end48, label %do.end42

do.end42:                                         ; preds = %do.body35
  %call44 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.22, ptr noundef nonnull @last_unloaded_module) #37
  br label %do.end48

do.end48:                                         ; preds = %do.end42, %do.body35
  %call50 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.25) #37
  call void @llvm.lifetime.end.p0(i64 22, ptr nonnull %buf) #29
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #15

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @module_layout(ptr nocapture %mod, ptr nocapture %ver, ptr nocapture %kp, ptr nocapture %ks, ptr nocapture %tp) #16 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #12

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_module_load(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #29
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_module_load, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %taints = getelementptr inbounds %struct.trace_event_raw_module_load, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %taints to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %taints, align 4
  %call1 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.38, i32 noundef %5, ptr noundef nonnull @trace_raw_output_module_load.__flags) #29
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.32, ptr noundef %add.ptr, ptr noundef %call1) #29
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #29
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_flags_seq(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_module_free(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #29
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_module_free, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.39, ptr noundef %add.ptr) #29
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #29
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_module_refcnt(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #29
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_module_refcnt, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %ip = getelementptr inbounds %struct.trace_event_raw_module_refcnt, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %ip to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ip, align 4
  %6 = inttoptr i32 %5 to ptr
  %refcnt = getelementptr inbounds %struct.trace_event_raw_module_refcnt, ptr %1, i32 0, i32 2
  %7 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %refcnt, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.44, ptr noundef %add.ptr, ptr noundef %6, i32 noundef %8) #29
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #29
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_module_request(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #29
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_module_request, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %wait = getelementptr inbounds %struct.trace_event_raw_module_request, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %wait to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %wait, align 4, !range !773
  %6 = zext i8 %5 to i32
  %ip = getelementptr inbounds %struct.trace_event_raw_module_request, ptr %1, i32 0, i32 1
  %7 = ptrtoint ptr %ip to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %ip, align 4
  %9 = inttoptr i32 %8 to ptr
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.47, ptr noundef %add.ptr, i32 noundef %6, ptr noundef %9) #29
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #29
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #17

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run1(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run2(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run3(ptr noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @capable(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @strncpy_from_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mutex_lock_interruptible_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_pr_debug(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @try_stop_module(ptr noundef %mod, i32 noundef %flags, ptr nocapture noundef writeonly %forced) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %refcnt.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 66
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i, i32 noundef 4) #29
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !836
  tail call void @llvm.prefetch.p0(ptr %refcnt.i, i32 1, i32 3, i32 1) #29
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i, ptr %refcnt.i, i32 1, ptr elementtype(i32) %refcnt.i) #29, !srcloc !837
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %0, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !838
  %cmp.i = icmp slt i32 %asmresult.i.i.i.i, 0
  br i1 %cmp.i, label %do.body2.i, label %do.end7.i, !prof !771

do.body2.i:                                       ; preds = %entry
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 872, 0\0A.popsection", ""() #29, !srcloc !839
  unreachable

do.end7.i:                                        ; preds = %entry
  %tobool8.not.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %tobool8.not.i, label %if.end3, label %if.then9.i

if.then9.i:                                       ; preds = %do.end7.i
  %call.i.i16.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i, i32 noundef 4) #29
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !797
  tail call void @llvm.prefetch.p0(ptr %refcnt.i, i32 1, i32 3, i32 1) #29
  %1 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i, ptr %refcnt.i, i32 0, i32 1, ptr elementtype(i32) %refcnt.i) #29, !srcloc !798
  %asmresult.i.i.i17.i = extractvalue { i32, i32, i32 } %1, 0
  %cmp.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i17.i, 0
  br i1 %cmp.not.i.i.i.i, label %if.end3, label %if.then

if.then:                                          ; preds = %if.then9.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !799
  %and.i = and i32 %flags, 512
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %try_force_unload.exit.thread, label %try_force_unload.exit

try_force_unload.exit.thread:                     ; preds = %if.then
  %2 = ptrtoint ptr %forced to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %forced, align 4
  br label %return

try_force_unload.exit:                            ; preds = %if.then
  tail call void @add_taint(i32 noundef 3, i32 noundef 1) #29
  %3 = ptrtoint ptr %forced to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %and.i, ptr %forced, align 4
  br label %if.end3

if.end3:                                          ; preds = %try_force_unload.exit, %if.then9.i, %do.end7.i
  %4 = ptrtoint ptr %mod to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 2, ptr %mod, align 128
  br label %return

return:                                           ; preds = %if.end3, %try_force_unload.exit.thread
  %retval.0 = phi i32 [ 0, %if.end3 ], [ -11, %try_force_unload.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blocking_notifier_call_chain(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ftrace_release_mod(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @async_synchronize_full() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @free_module(ptr noundef %mod) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %c.i.i.i = alloca %struct.completion, align 4
  tail call fastcc void @trace_module_free(ptr noundef %mod)
  tail call void @mutex_lock_nested(ptr noundef nonnull @module_mutex, i32 noundef 0) #29
  %target_list.i.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 64
  %0 = ptrtoint ptr %target_list.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn12.i.i = load ptr, ptr %target_list.i.i, align 4
  %cmp.not13.i.i = icmp eq ptr %.pn12.i.i, %target_list.i.i
  br i1 %cmp.not13.i.i, label %del_usage_links.exit.i, label %for.body.lr.ph.i.i

for.body.lr.ph.i.i:                               ; preds = %entry
  %name.i.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i, %for.body.lr.ph.i.i
  %.pn14.i.i = phi ptr [ %.pn12.i.i, %for.body.lr.ph.i.i ], [ %.pn.i.i, %for.body.i.i ]
  %target.i.i = getelementptr i8, ptr %.pn14.i.i, i32 12
  %1 = ptrtoint ptr %target.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %target.i.i, align 4
  %holders_dir.i.i = getelementptr inbounds %struct.module, ptr %2, i32 0, i32 8
  %3 = ptrtoint ptr %holders_dir.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %holders_dir.i.i, align 128
  tail call void @sysfs_remove_link(ptr noundef %4, ptr noundef %name.i.i) #29
  %5 = ptrtoint ptr %.pn14.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn.i.i = load ptr, ptr %.pn14.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, %target_list.i.i
  br i1 %cmp.not.i.i, label %del_usage_links.exit.i, label %for.body.i.i

del_usage_links.exit.i:                           ; preds = %for.body.i.i, %entry
  tail call void @mutex_unlock(ptr noundef nonnull @module_mutex) #29
  %modinfo_attrs.i.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 5
  %6 = ptrtoint ptr %modinfo_attrs.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %modinfo_attrs.i.i, align 4
  %tobool.not21.i.i = icmp eq ptr %7, null
  br i1 %tobool.not21.i.i, label %module_remove_modinfo_attrs.exit.i, label %for.body.lr.ph.i6.i

for.body.lr.ph.i6.i:                              ; preds = %del_usage_links.exit.i
  %mkobj.i.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 4
  br label %for.body.i7.i

for.body.i7.i:                                    ; preds = %for.inc.i.i, %for.body.lr.ph.i6.i
  %arrayidx23.i.i = phi ptr [ %7, %for.body.lr.ph.i6.i ], [ %arrayidx.i.i, %for.inc.i.i ]
  %8 = phi ptr [ %7, %for.body.lr.ph.i6.i ], [ %14, %for.inc.i.i ]
  %i.022.i.i = phi i32 [ 0, %for.body.lr.ph.i6.i ], [ %inc.i.i, %for.inc.i.i ]
  %9 = ptrtoint ptr %arrayidx23.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx23.i.i, align 4
  %tobool3.not.i.i = icmp eq ptr %10, null
  br i1 %tobool3.not.i.i, label %module_remove_modinfo_attrs.exit.i, label %if.end5.i.i

if.end5.i.i:                                      ; preds = %for.body.i7.i
  tail call void @sysfs_remove_file_ns(ptr noundef %mkobj.i.i, ptr noundef nonnull %arrayidx23.i.i, ptr noundef null) #29
  %free.i.i = getelementptr %struct.module_attribute, ptr %8, i32 %i.022.i.i, i32 5
  %11 = ptrtoint ptr %free.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %free.i.i, align 4
  %tobool7.not.i.i = icmp eq ptr %12, null
  br i1 %tobool7.not.i.i, label %for.inc.i.i, label %if.then8.i.i

if.then8.i.i:                                     ; preds = %if.end5.i.i
  tail call void %12(ptr noundef %mod) #29
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.then8.i.i, %if.end5.i.i
  %inc.i.i = add i32 %i.022.i.i, 1
  %13 = ptrtoint ptr %modinfo_attrs.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %modinfo_attrs.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.module_attribute, ptr %14, i32 %inc.i.i
  %tobool.not.i.i = icmp eq ptr %arrayidx.i.i, null
  br i1 %tobool.not.i.i, label %module_remove_modinfo_attrs.exit.i, label %for.body.i7.i

module_remove_modinfo_attrs.exit.i:               ; preds = %for.inc.i.i, %for.body.i7.i, %del_usage_links.exit.i
  %.lcssa.i.i = phi ptr [ null, %del_usage_links.exit.i ], [ %8, %for.body.i7.i ], [ %14, %for.inc.i.i ]
  tail call void @kfree(ptr noundef %.lcssa.i.i) #29
  tail call void @module_param_sysfs_remove(ptr noundef %mod) #29
  %drivers_dir.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 4, i32 2
  %15 = ptrtoint ptr %drivers_dir.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %drivers_dir.i, align 4
  tail call void @kobject_put(ptr noundef %16) #29
  %holders_dir.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 8
  %17 = ptrtoint ptr %holders_dir.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %holders_dir.i, align 128
  tail call void @kobject_put(ptr noundef %18) #29
  %notes_attrs.i.i.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 35
  %19 = ptrtoint ptr %notes_attrs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %notes_attrs.i.i.i, align 64
  %tobool.not.i.i.i = icmp eq ptr %20, null
  br i1 %tobool.not.i.i.i, label %remove_notes_attrs.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %module_remove_modinfo_attrs.exit.i
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %20, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %22, null
  br i1 %tobool.not.i.i.i.i, label %free_notes_attrs.exit.i.i.i, label %while.cond.preheader.i.i.i.i

while.cond.preheader.i.i.i.i:                     ; preds = %if.then.i.i.i
  %notes.i.i.i = getelementptr inbounds %struct.module_notes_attrs, ptr %20, i32 0, i32 1
  %23 = ptrtoint ptr %notes.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %notes.i.i.i, align 4
  %cmp.not8.i.i.i.i = icmp eq i32 %24, 0
  br i1 %cmp.not8.i.i.i.i, label %while.end.i.i.i.i, label %while.body.i.i.i.i

while.body.i.i.i.i:                               ; preds = %while.body.i.i.i.i, %while.cond.preheader.i.i.i.i
  %i.addr.09.i.i.i.i = phi i32 [ %dec.i.i.i.i, %while.body.i.i.i.i ], [ %24, %while.cond.preheader.i.i.i.i ]
  %dec.i.i.i.i = add i32 %i.addr.09.i.i.i.i, -1
  %25 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %20, align 4
  %arrayidx.i.i.i.i = getelementptr %struct.module_notes_attrs, ptr %20, i32 0, i32 2, i32 %dec.i.i.i.i
  tail call void @sysfs_remove_bin_file(ptr noundef %26, ptr noundef %arrayidx.i.i.i.i) #29
  %cmp.not.i.i.i.i = icmp eq i32 %dec.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i, label %while.end.i.i.i.i, label %while.body.i.i.i.i

while.end.i.i.i.i:                                ; preds = %while.body.i.i.i.i, %while.cond.preheader.i.i.i.i
  %27 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %20, align 4
  tail call void @kobject_put(ptr noundef %28) #29
  br label %free_notes_attrs.exit.i.i.i

free_notes_attrs.exit.i.i.i:                      ; preds = %while.end.i.i.i.i, %if.then.i.i.i
  tail call void @kfree(ptr noundef nonnull %20) #29
  br label %remove_notes_attrs.exit.i.i

remove_notes_attrs.exit.i.i:                      ; preds = %free_notes_attrs.exit.i.i.i, %module_remove_modinfo_attrs.exit.i
  %sect_attrs.i.i.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 34
  %29 = ptrtoint ptr %sect_attrs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %sect_attrs.i.i.i, align 4
  %tobool.not.i3.i.i = icmp eq ptr %30, null
  br i1 %tobool.not.i3.i.i, label %mod_sysfs_teardown.exit, label %if.then.i4.i.i

if.then.i4.i.i:                                   ; preds = %remove_notes_attrs.exit.i.i
  %mkobj.i.i.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 4
  tail call void @sysfs_remove_group(ptr noundef %mkobj.i.i.i, ptr noundef nonnull %30) #29
  %31 = ptrtoint ptr %sect_attrs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %sect_attrs.i.i.i, align 4
  %nsections.i.i.i.i = getelementptr inbounds %struct.module_sect_attrs, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %nsections.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %nsections.i.i.i.i, align 4
  %cmp5.not.i.i.i.i = icmp eq i32 %34, 0
  br i1 %cmp5.not.i.i.i.i, label %free_sect_attrs.exit.i.i.i, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.body.i.i.i.i, %if.then.i4.i.i
  %section.06.i.i.i.i = phi i32 [ %inc.i.i.i.i, %for.body.i.i.i.i ], [ 0, %if.then.i4.i.i ]
  %arrayidx.i.i5.i.i = getelementptr %struct.module_sect_attrs, ptr %32, i32 0, i32 2, i32 %section.06.i.i.i.i
  %35 = ptrtoint ptr %arrayidx.i.i5.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx.i.i5.i.i, align 4
  tail call void @kfree(ptr noundef %36) #29
  %inc.i.i.i.i = add nuw i32 %section.06.i.i.i.i, 1
  %37 = ptrtoint ptr %nsections.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %nsections.i.i.i.i, align 4
  %cmp.i.i.i.i = icmp ult i32 %inc.i.i.i.i, %38
  br i1 %cmp.i.i.i.i, label %for.body.i.i.i.i, label %free_sect_attrs.exit.i.i.i

free_sect_attrs.exit.i.i.i:                       ; preds = %for.body.i.i.i.i, %if.then.i4.i.i
  tail call void @kfree(ptr noundef %32) #29
  %39 = ptrtoint ptr %sect_attrs.i.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %sect_attrs.i.i.i, align 4
  br label %mod_sysfs_teardown.exit

mod_sysfs_teardown.exit:                          ; preds = %free_sect_attrs.exit.i.i.i, %remove_notes_attrs.exit.i.i
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %c.i.i.i) #29
  %40 = getelementptr inbounds i8, ptr %c.i.i.i, i32 4
  %41 = call ptr @memset(ptr %40, i32 255, i32 52)
  %42 = ptrtoint ptr %c.i.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 0, ptr %c.i.i.i, align 4
  call void @__init_swait_queue_head(ptr noundef %40, ptr noundef nonnull @.str.60, ptr noundef nonnull @init_completion.__key) #29
  %mkobj.i6.i.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 4
  %kobj_completion.i.i.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 4, i32 4
  %43 = ptrtoint ptr %kobj_completion.i.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %c.i.i.i, ptr %kobj_completion.i.i.i, align 4
  call void @kobject_put(ptr noundef %mkobj.i6.i.i) #29
  call void @wait_for_completion(ptr noundef nonnull %c.i.i.i) #29
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %c.i.i.i) #29
  call void @mutex_lock_nested(ptr noundef nonnull @module_mutex, i32 noundef 0) #29
  %44 = ptrtoint ptr %mod to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 3, ptr %mod, align 128
  call void @mutex_unlock(ptr noundef nonnull @module_mutex) #29
  %name = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %call = call i32 @ddebug_remove_module(ptr noundef %name) #29
  call void @module_arch_cleanup(ptr noundef %mod)
  call fastcc void @module_unload_free(ptr noundef %mod)
  %kp = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 13
  %45 = ptrtoint ptr %kp to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %kp, align 4
  %num_kp = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 14
  %47 = ptrtoint ptr %num_kp to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %num_kp, align 16
  call void @destroy_params(ptr noundef %46, i32 noundef %48) #29
  call void @mutex_lock_nested(ptr noundef nonnull @module_mutex, i32 noundef 0) #29
  %list = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 1
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %list) #29
  br i1 %call.i.i, label %if.end.i.i, label %list_del_rcu.exit

if.end.i.i:                                       ; preds = %mod_sysfs_teardown.exit
  %prev.i.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 1, i32 1
  %49 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %prev.i.i, align 4
  %51 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %52, i32 0, i32 1
  %53 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %50, ptr %prev1.i.i.i, align 4
  %54 = ptrtoint ptr %50 to i32
  call void @__asan_store4_noabort(i32 %54)
  store volatile ptr %52, ptr %50, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i, %mod_sysfs_teardown.exit
  %prev.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 1, i32 1
  %55 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  call fastcc void @mod_tree_remove(ptr noundef %mod)
  call void @module_bug_cleanup(ptr noundef %mod) #29
  call void @synchronize_rcu() #29
  call void @mutex_unlock(ptr noundef nonnull @module_mutex) #29
  call void @module_arch_freeing_init(ptr noundef %mod)
  %init_layout = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26
  %56 = ptrtoint ptr %init_layout to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %init_layout, align 16
  call void @module_memfree(ptr noundef %57)
  %args = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 36
  %58 = ptrtoint ptr %args to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %args, align 4
  call void @kfree(ptr noundef %59) #29
  %percpu.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 37
  %60 = ptrtoint ptr %percpu.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %percpu.i, align 8
  call void @free_percpu(ptr noundef %61) #29
  %core_layout = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25
  %62 = ptrtoint ptr %core_layout to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %core_layout, align 128
  %size = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25, i32 1
  %64 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %size, align 4
  call void @lockdep_free_key_range(ptr noundef %63, i32 noundef %65) #29
  %66 = ptrtoint ptr %core_layout to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %core_layout, align 128
  call void @module_memfree(ptr noundef %67)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @add_taint(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #18

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_module_free(ptr noundef %mod) unnamed_addr #9 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_module_free, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_module_free, %do.body)) #29
          to label %if.end48 [label %do.body], !srcloc !782

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !770

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 108, i32 noundef 9, ptr noundef null) #29
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %if.end31

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !840
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_module_free, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i, %if.end31
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i ], [ %13, %if.end31 ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %mod) #29
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !841
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !841
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !770

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 108, i32 noundef 9, ptr noundef null) #29
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !794
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_module_free, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #29
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #29
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_module_free.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_module_free.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 65, ptr noundef nonnull @.str.15) #29
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !795
  %38 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ddebug_remove_module(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @module_unload_free(ptr noundef %mod) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @module_mutex, i32 noundef 0) #29
  %target_list = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 64
  %0 = ptrtoint ptr %target_list to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %target_list, align 8
  %cmp.not40 = icmp eq ptr %1, %target_list
  br i1 %cmp.not40, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %name = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %list_del.exit36, %for.body.lr.ph
  %.pn.in41 = phi ptr [ %1, %for.body.lr.ph ], [ %.pn46, %list_del.exit36 ]
  %use.044 = getelementptr i8, ptr %.pn.in41, i32 -8
  %2 = ptrtoint ptr %.pn.in41 to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn46 = load ptr, ptr %.pn.in41, align 4
  %target = getelementptr i8, ptr %.pn.in41, i32 12
  %3 = ptrtoint ptr %target to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %target, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @module_unload_free.__UNIQUE_ID_ddebug289, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@module_unload_free, %if.then)) #29
          to label %do.end [label %if.then], !srcloc !782

if.then:                                          ; preds = %for.body
  %name13 = getelementptr inbounds %struct.module, ptr %4, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @module_unload_free.__UNIQUE_ID_ddebug289, ptr noundef nonnull @.str.62, ptr noundef %name, ptr noundef %name13) #29
  br label %do.end

do.end:                                           ; preds = %if.then, %for.body
  tail call void @module_put(ptr noundef %4)
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %use.044) #29
  br i1 %call.i.i, label %if.end.i.i, label %list_del.exit

if.end.i.i:                                       ; preds = %do.end
  %prev.i.i = getelementptr i8, ptr %.pn.in41, i32 -4
  %5 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %prev.i.i, align 4
  %7 = ptrtoint ptr %use.044 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %use.044, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %6, ptr %prev1.i.i.i, align 4
  %10 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %8, ptr %6, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %do.end
  %11 = ptrtoint ptr %use.044 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr inttoptr (i32 256 to ptr), ptr %use.044, align 4
  %prev.i = getelementptr i8, ptr %.pn.in41, i32 -4
  %12 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %call.i.i31 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in41) #29
  br i1 %call.i.i31, label %if.end.i.i34, label %list_del.exit36

if.end.i.i34:                                     ; preds = %list_del.exit
  %prev.i.i32 = getelementptr inbounds %struct.list_head, ptr %.pn.in41, i32 0, i32 1
  %13 = ptrtoint ptr %prev.i.i32 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %prev.i.i32, align 4
  %15 = ptrtoint ptr %.pn.in41 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %.pn.in41, align 4
  %prev1.i.i.i33 = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %prev1.i.i.i33 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %14, ptr %prev1.i.i.i33, align 4
  %18 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %16, ptr %14, align 4
  br label %list_del.exit36

list_del.exit36:                                  ; preds = %if.end.i.i34, %list_del.exit
  %19 = ptrtoint ptr %.pn.in41 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn.in41, align 4
  %prev.i35 = getelementptr inbounds %struct.list_head, ptr %.pn.in41, i32 0, i32 1
  %20 = ptrtoint ptr %prev.i35 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i35, align 4
  tail call void @kfree(ptr noundef %use.044) #29
  %cmp.not = icmp eq ptr %.pn46, %target_list
  br i1 %cmp.not, label %for.end, label %for.body

for.end:                                          ; preds = %list_del.exit36, %entry
  tail call void @mutex_unlock(ptr noundef nonnull @module_mutex) #29
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @destroy_params(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mod_tree_remove(ptr noundef %mod) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %node1.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25, i32 5, i32 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !842
  %0 = load i32, ptr @mod_tree, align 128
  %inc.i.i.i = add i32 %0, 1
  store i32 %inc.i.i.i, ptr @mod_tree, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !843
  tail call void @rb_erase(ptr noundef %node1.i, ptr noundef getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 0, i32 1, i32 0)) #29
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !842
  %1 = load i32, ptr @mod_tree, align 128
  %inc.i1.i.i = add i32 %1, 1
  store i32 %inc.i1.i.i, ptr @mod_tree, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !843
  %arrayidx.i.i.i = getelementptr %struct.module, ptr %mod, i32 0, i32 25, i32 5, i32 1, i32 0, i32 1
  tail call void @rb_erase(ptr noundef %arrayidx.i.i.i, ptr noundef getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 0, i32 1, i32 1)) #29
  %size.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26, i32 1
  %2 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %size.i, align 4
  %tobool.not.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i, label %mod_tree_remove_init.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %node1.i.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26, i32 5, i32 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !842
  %4 = load i32, ptr @mod_tree, align 128
  %inc.i.i.i.i = add i32 %4, 1
  store i32 %inc.i.i.i.i, ptr @mod_tree, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !843
  tail call void @rb_erase(ptr noundef %node1.i.i, ptr noundef getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 0, i32 1, i32 0)) #29
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !842
  %5 = load i32, ptr @mod_tree, align 128
  %inc.i1.i.i.i = add i32 %5, 1
  store i32 %inc.i1.i.i.i, ptr @mod_tree, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !843
  %arrayidx.i.i.i.i = getelementptr %struct.module, ptr %mod, i32 0, i32 26, i32 5, i32 1, i32 0, i32 1
  tail call void @rb_erase(ptr noundef %arrayidx.i.i.i.i, ptr noundef getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 0, i32 1, i32 1)) #29
  br label %mod_tree_remove_init.exit

mod_tree_remove_init.exit:                        ; preds = %if.then.i, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @module_bug_cleanup(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_rcu() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_free_key_range(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @module_param_sysfs_remove(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kobject_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sysfs_remove_link(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sysfs_remove_file_ns(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sysfs_remove_bin_file(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sysfs_remove_group(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @wait_for_completion(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_swait_queue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rb_erase(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_percpu(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bsearch(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @cmp_name(ptr nocapture noundef readonly %name, ptr nocapture noundef readonly %sym) #19 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %name.i = getelementptr inbounds %struct.kernel_symbol, ptr %sym, i32 0, i32 1
  %0 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %name.i, align 4
  %call1 = tail call i32 @strcmp(ptr noundef %name, ptr noundef %1) #32
  ret i32 %call1
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #7

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kobject_synth_uevent(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @load_module(ptr noundef %info, ptr noundef %uargs, i32 noundef %flags) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %fsa.i = alloca %struct.find_symbol_arg, align 4
  %hdr.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 2
  %0 = ptrtoint ptr %hdr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hdr.i, align 4
  %and.i = and i32 %flags, 3
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %sw.epilog.i

land.lhs.true.i:                                  ; preds = %entry
  %len.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 3
  %2 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %len.i, align 4
  %cmp.i = icmp ugt i32 %3, 28
  br i1 %cmp.i, label %land.lhs.true2.i, label %sw.epilog.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %add.ptr.i = getelementptr i8, ptr %1, i32 %3
  %add.ptr4.i = getelementptr i8, ptr %add.ptr.i, i32 -28
  %bcmp.i = tail call i32 @bcmp(ptr noundef dereferenceable(28) %add.ptr4.i, ptr noundef nonnull dereferenceable(28) @.str.84, i32 28) #31
  %cmp5.i = icmp eq i32 %bcmp.i, 0
  br i1 %cmp5.i, label %if.then.i, label %sw.epilog.i

if.then.i:                                        ; preds = %land.lhs.true2.i
  %sub.i = add i32 %3, -28
  %4 = ptrtoint ptr %len.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %sub.i, ptr %len.i, align 4
  %call7.i = tail call i32 @mod_verify_sig(ptr noundef %1, ptr noundef %info) #29
  switch i32 %call7.i, label %module_sig_check.exit [
    i32 0, label %module_sig_check.exit.thread
    i32 -61, label %sw.epilog.i
    i32 -65, label %sw.bb11.i
    i32 -126, label %sw.bb12.i
  ]

module_sig_check.exit.thread:                     ; preds = %if.then.i
  %sig_ok.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 13
  %5 = ptrtoint ptr %sig_ok.i to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 1, ptr %sig_ok.i, align 4
  br label %if.end

sw.bb11.i:                                        ; preds = %if.then.i
  br label %sw.epilog.i

sw.bb12.i:                                        ; preds = %if.then.i
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.bb12.i, %sw.bb11.i, %if.then.i, %land.lhs.true2.i, %land.lhs.true.i, %entry
  %reason.0.i = phi ptr [ @.str.87, %sw.bb12.i ], [ @.str.86, %sw.bb11.i ], [ @.str.85, %entry ], [ @.str.85, %land.lhs.true2.i ], [ @.str.85, %land.lhs.true.i ], [ @.str.85, %if.then.i ]
  %6 = load i8, ptr @sig_enforce, align 1, !range !773
  %tobool.i.not.i = icmp eq i8 %6, 0
  br i1 %tobool.i.not.i, label %if.end16.i, label %module_sig_check.exit.thread362

module_sig_check.exit.thread362:                  ; preds = %sw.epilog.i
  %call15.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.88, ptr noundef nonnull %reason.0.i) #37
  br label %free_copy

if.end16.i:                                       ; preds = %sw.epilog.i
  %call17.i = tail call i32 @security_locked_down(i32 noundef 1) #29
  br label %module_sig_check.exit

module_sig_check.exit:                            ; preds = %if.end16.i, %if.then.i
  %retval.0.i = phi i32 [ %call17.i, %if.end16.i ], [ %call7.i, %if.then.i ]
  %tobool.not = icmp eq i32 %retval.0.i, 0
  br i1 %tobool.not, label %if.end, label %free_copy

if.end:                                           ; preds = %module_sig_check.exit, %module_sig_check.exit.thread
  %len.i253 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 3
  %7 = ptrtoint ptr %len.i253 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %len.i253, align 4
  %cmp.i254 = icmp ult i32 %8, 52
  br i1 %cmp.i254, label %do.end.i255, label %if.end.i

do.end.i255:                                      ; preds = %if.end
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.90, i32 noundef %8) #37
  br label %free_copy

if.end.i:                                         ; preds = %if.end
  %9 = ptrtoint ptr %hdr.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %hdr.i, align 4
  %bcmp.i257 = tail call i32 @bcmp(ptr noundef dereferenceable(4) %10, ptr noundef nonnull dereferenceable(4) @.str.92, i32 4) #31
  %cmp3.not.i = icmp eq i32 %bcmp.i257, 0
  br i1 %cmp3.not.i, label %if.end10.i, label %do.end7.i

do.end7.i:                                        ; preds = %if.end.i
  %call9.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.94, ptr noundef nonnull @.str.92) #37
  br label %free_copy

if.end10.i:                                       ; preds = %if.end.i
  %e_type.i = getelementptr inbounds %struct.elf32_hdr, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %e_type.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %e_type.i, align 4
  %cmp12.not.i = icmp eq i16 %12, 1
  br i1 %cmp12.not.i, label %if.end23.i, label %do.end17.i

do.end17.i:                                       ; preds = %if.end10.i
  %conv.i = zext i16 %12 to i32
  %call22.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.97, i32 noundef %conv.i, i32 noundef 1) #37
  br label %free_copy

if.end23.i:                                       ; preds = %if.end10.i
  %call25.i = tail call i32 @elf_check_arch(ptr noundef %10) #29
  %tobool.not.i258 = icmp eq i32 %call25.i, 0
  %13 = ptrtoint ptr %hdr.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %hdr.i, align 4
  br i1 %tobool.not.i258, label %do.end29.i, label %if.end34.i

do.end29.i:                                       ; preds = %if.end23.i
  %e_machine.i = getelementptr inbounds %struct.elf32_hdr, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %e_machine.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %e_machine.i, align 2
  %conv32.i = zext i16 %16 to i32
  %call33.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.100, i32 noundef %conv32.i) #37
  br label %free_copy

if.end34.i:                                       ; preds = %if.end23.i
  %e_shentsize.i = getelementptr inbounds %struct.elf32_hdr, ptr %14, i32 0, i32 11
  %17 = ptrtoint ptr %e_shentsize.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %e_shentsize.i, align 2
  %cmp37.not.i = icmp eq i16 %18, 40
  br i1 %cmp37.not.i, label %if.end45.i, label %do.end42.i

do.end42.i:                                       ; preds = %if.end34.i
  %call44.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.103) #37
  br label %free_copy

if.end45.i:                                       ; preds = %if.end34.i
  %e_shoff.i = getelementptr inbounds %struct.elf32_hdr, ptr %14, i32 0, i32 6
  %19 = ptrtoint ptr %e_shoff.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %e_shoff.i, align 4
  %21 = ptrtoint ptr %len.i253 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %len.i253, align 4
  %cmp48.not.i = icmp ugt i32 %22, %20
  br i1 %cmp48.not.i, label %lor.lhs.false.i, label %do.end60.i

lor.lhs.false.i:                                  ; preds = %if.end45.i
  %e_shnum.i = getelementptr inbounds %struct.elf32_hdr, ptr %14, i32 0, i32 12
  %23 = ptrtoint ptr %e_shnum.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %e_shnum.i, align 4
  %conv51.i = zext i16 %24 to i32
  %mul.i = mul nuw nsw i32 %conv51.i, 40
  %sub.i259 = sub i32 %22, %20
  %cmp55.i = icmp ugt i32 %mul.i, %sub.i259
  br i1 %cmp55.i, label %do.end60.i, label %if.end63.i

do.end60.i:                                       ; preds = %lor.lhs.false.i, %if.end45.i
  %call62.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.106) #37
  br label %free_copy

if.end63.i:                                       ; preds = %lor.lhs.false.i
  %add.ptr.i260 = getelementptr i8, ptr %14, i32 %20
  %sechdrs.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 4
  %25 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %add.ptr.i260, ptr %sechdrs.i, align 4
  %e_shstrndx.i = getelementptr inbounds %struct.elf32_hdr, ptr %14, i32 0, i32 13
  %26 = ptrtoint ptr %e_shstrndx.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %e_shstrndx.i, align 2
  %conv68.i = zext i16 %27 to i32
  %cmp69.i = icmp eq i16 %27, 0
  br i1 %cmp69.i, label %do.end83.i, label %lor.lhs.false71.i

lor.lhs.false71.i:                                ; preds = %if.end63.i
  %28 = ptrtoint ptr %e_shnum.i to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %e_shnum.i, align 4
  %cmp78.not.i = icmp ult i16 %27, %29
  br i1 %cmp78.not.i, label %if.end95.i, label %do.end83.i

do.end83.i:                                       ; preds = %lor.lhs.false71.i, %if.end63.i
  %30 = ptrtoint ptr %e_shnum.i to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %e_shnum.i, align 4
  %conv93.i = zext i16 %31 to i32
  %call94.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.109, i32 noundef %conv68.i, i32 noundef %conv68.i, i32 noundef %conv93.i) #37
  br label %free_copy

if.end95.i:                                       ; preds = %lor.lhs.false71.i
  %arrayidx.i = getelementptr %struct.elf32_shdr, ptr %add.ptr.i260, i32 %conv68.i
  %sh_offset.i.i = getelementptr inbounds %struct.elf32_shdr, ptr %arrayidx.i, i32 0, i32 4
  %32 = ptrtoint ptr %sh_offset.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %sh_offset.i.i, align 4
  %sh_size.i.i = getelementptr inbounds %struct.elf32_shdr, ptr %arrayidx.i, i32 0, i32 5
  %34 = ptrtoint ptr %sh_size.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %sh_size.i.i, align 4
  %add.i.i = add i32 %35, %33
  %cmp.i.i = icmp ult i32 %add.i.i, %33
  %cmp2.i.i = icmp ugt i32 %add.i.i, %22
  %or.cond284.i = select i1 %cmp.i.i, i1 true, i1 %cmp2.i.i
  br i1 %or.cond284.i, label %do.end105.i, label %if.end108.i

do.end105.i:                                      ; preds = %if.end95.i
  %sh_type.i = getelementptr inbounds %struct.elf32_shdr, ptr %arrayidx.i, i32 0, i32 1
  %36 = ptrtoint ptr %sh_type.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %sh_type.i, align 4
  %call107.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.112, i32 noundef %37) #37
  br label %free_copy

if.end108.i:                                      ; preds = %if.end95.i
  %add.ptr110.i = getelementptr i8, ptr %14, i32 %33
  %secstrings.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  %38 = ptrtoint ptr %secstrings.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %add.ptr110.i, ptr %secstrings.i, align 4
  %39 = ptrtoint ptr %sh_size.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %sh_size.i.i, align 4
  %sub112.i = add i32 %40, -1
  %arrayidx113.i = getelementptr i8, ptr %add.ptr110.i, i32 %sub112.i
  %41 = ptrtoint ptr %arrayidx113.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %arrayidx113.i, align 1
  %cmp115.not.i = icmp eq i8 %42, 0
  br i1 %cmp115.not.i, label %if.end123.i, label %do.end120.i

do.end120.i:                                      ; preds = %if.end108.i
  %call122.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.115) #37
  br label %free_copy

if.end123.i:                                      ; preds = %if.end108.i
  %sh_type126.i = getelementptr inbounds %struct.elf32_shdr, ptr %add.ptr.i260, i32 0, i32 1
  %43 = ptrtoint ptr %sh_type126.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %sh_type126.i, align 4
  %cmp127.not.i = icmp eq i32 %44, 0
  br i1 %cmp127.not.i, label %lor.lhs.false129.i, label %do.end143.i

lor.lhs.false129.i:                               ; preds = %if.end123.i
  %sh_size132.i = getelementptr inbounds %struct.elf32_shdr, ptr %add.ptr.i260, i32 0, i32 5
  %45 = ptrtoint ptr %sh_size132.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %sh_size132.i, align 4
  %cmp133.not.i = icmp eq i32 %46, 0
  br i1 %cmp133.not.i, label %lor.lhs.false135.i, label %do.end143.i

lor.lhs.false135.i:                               ; preds = %lor.lhs.false129.i
  %sh_addr.i = getelementptr inbounds %struct.elf32_shdr, ptr %add.ptr.i260, i32 0, i32 3
  %47 = ptrtoint ptr %sh_addr.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %sh_addr.i, align 4
  %cmp138.not.i = icmp eq i32 %48, 0
  br i1 %cmp138.not.i, label %for.cond.preheader.i, label %do.end143.i

for.cond.preheader.i:                             ; preds = %lor.lhs.false135.i
  %49 = ptrtoint ptr %e_shnum.i to i32
  call void @__asan_load2_noabort(i32 %49)
  %50 = load i16, ptr %e_shnum.i, align 4
  %conv152.i = zext i16 %50 to i32
  %cmp153296.i = icmp ugt i16 %50, 1
  br i1 %cmp153296.i, label %for.body.i, label %if.end4

do.end143.i:                                      ; preds = %lor.lhs.false135.i, %lor.lhs.false129.i, %if.end123.i
  %call148.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.118, i32 noundef %44) #37
  br label %free_copy

for.body.i:                                       ; preds = %for.inc.i, %for.cond.preheader.i
  %i.0297.i = phi i32 [ %inc.i, %for.inc.i ], [ 1, %for.cond.preheader.i ]
  %arrayidx156.i = getelementptr %struct.elf32_shdr, ptr %add.ptr.i260, i32 %i.0297.i
  %sh_type157.i = getelementptr %struct.elf32_shdr, ptr %add.ptr.i260, i32 %i.0297.i, i32 1
  %51 = ptrtoint ptr %sh_type157.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %sh_type157.i, align 4
  switch i32 %52, label %sw.default.i [
    i32 0, label %for.inc.i
    i32 8, label %for.inc.i
    i32 2, label %sw.bb158.i
  ]

sw.bb158.i:                                       ; preds = %for.body.i
  %sh_link.i = getelementptr %struct.elf32_shdr, ptr %add.ptr.i260, i32 %i.0297.i, i32 6
  %53 = ptrtoint ptr %sh_link.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %sh_link.i, align 4
  %cmp159.i = icmp ne i32 %54, 0
  %cmp166.not.i = icmp ult i32 %54, %conv152.i
  %or.cond.i = select i1 %cmp159.i, i1 %cmp166.not.i, i1 false
  br i1 %or.cond.i, label %sw.default.i, label %do.end171.i

do.end171.i:                                      ; preds = %sw.bb158.i
  %call178.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.121, i32 noundef %54, i32 noundef %54, i32 noundef %conv152.i) #37
  br label %free_copy

sw.default.i:                                     ; preds = %sw.bb158.i, %for.body.i
  %sh_offset.i267.i = getelementptr inbounds %struct.elf32_shdr, ptr %arrayidx156.i, i32 0, i32 4
  %55 = ptrtoint ptr %sh_offset.i267.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %sh_offset.i267.i, align 4
  %sh_size.i268.i = getelementptr inbounds %struct.elf32_shdr, ptr %arrayidx156.i, i32 0, i32 5
  %57 = ptrtoint ptr %sh_size.i268.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %sh_size.i268.i, align 4
  %add.i269.i = add i32 %58, %56
  %cmp.i270.i = icmp ult i32 %add.i269.i, %56
  %cmp2.i272.i = icmp ugt i32 %add.i269.i, %22
  %or.cond285.i = select i1 %cmp.i270.i, i1 true, i1 %cmp2.i272.i
  br i1 %or.cond285.i, label %do.end186.i, label %if.end190.i

do.end186.i:                                      ; preds = %sw.default.i
  %call189.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.124, i32 noundef %i.0297.i, i32 noundef %52) #37
  br label %free_copy

if.end190.i:                                      ; preds = %sw.default.i
  %sh_flags.i = getelementptr %struct.elf32_shdr, ptr %add.ptr.i260, i32 %i.0297.i, i32 2
  %59 = ptrtoint ptr %sh_flags.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %sh_flags.i, align 4
  %and.i261 = and i32 %60, 2
  %tobool191.not.i = icmp eq i32 %and.i261, 0
  br i1 %tobool191.not.i, label %for.inc.i, label %if.then192.i

if.then192.i:                                     ; preds = %if.end190.i
  %61 = ptrtoint ptr %arrayidx156.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %arrayidx156.i, align 4
  %cmp194.not.i = icmp ult i32 %62, %40
  br i1 %cmp194.not.i, label %for.inc.i, label %do.end199.i

do.end199.i:                                      ; preds = %if.then192.i
  %call202.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.127, i32 noundef %i.0297.i, i32 noundef %52) #37
  br label %free_copy

for.inc.i:                                        ; preds = %if.then192.i, %if.end190.i, %for.body.i, %for.body.i
  %inc.i = add nuw nsw i32 %i.0297.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %conv152.i
  br i1 %exitcond.not.i, label %if.end4, label %for.body.i

if.end4:                                          ; preds = %for.inc.i, %for.cond.preheader.i
  %63 = ptrtoint ptr %hdr.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %hdr.i, align 4
  %e_shnum.i.i = getelementptr inbounds %struct.elf32_hdr, ptr %64, i32 0, i32 12
  %65 = ptrtoint ptr %e_shnum.i.i to i32
  call void @__asan_load2_noabort(i32 %65)
  %66 = load i16, ptr %e_shnum.i.i, align 4
  %conv.i.i = zext i16 %66 to i32
  %cmp14.i.i = icmp ugt i16 %66, 1
  br i1 %cmp14.i.i, label %for.body.lr.ph.i.i, label %find_sec.exit.thread.i

for.body.lr.ph.i.i:                               ; preds = %if.end4
  %67 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %sechdrs.i, align 4
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i, %for.body.lr.ph.i.i
  %i.015.i.i = phi i32 [ 1, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.inc.i.i ]
  %sh_flags.i.i = getelementptr %struct.elf32_shdr, ptr %68, i32 %i.015.i.i, i32 2
  %69 = ptrtoint ptr %sh_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %sh_flags.i.i, align 4
  %and.i.i = and i32 %70, 2
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %for.inc.i.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %arrayidx.i.i = getelementptr %struct.elf32_shdr, ptr %68, i32 %i.015.i.i
  %71 = ptrtoint ptr %secstrings.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %secstrings.i, align 4
  %73 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %arrayidx.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %72, i32 %74
  %call.i.i = tail call i32 @strcmp(ptr noundef %add.ptr.i.i, ptr noundef nonnull dereferenceable(9) @.str.129) #31
  %cmp2.i.i263 = icmp eq i32 %call.i.i, 0
  br i1 %cmp2.i.i263, label %if.then.i264, label %for.inc.i.i

for.inc.i.i:                                      ; preds = %land.lhs.true.i.i, %for.body.i.i
  %inc.i.i = add nuw nsw i32 %i.015.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, %conv.i.i
  br i1 %exitcond.not.i.i, label %find_sec.exit.thread.i, label %for.body.i.i

find_sec.exit.thread.i:                           ; preds = %for.inc.i.i, %if.end4
  %info1159.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15, i32 4
  %75 = ptrtoint ptr %info1159.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 0, ptr %info1159.i, align 4
  br label %if.end.i266

if.then.i264:                                     ; preds = %land.lhs.true.i.i
  %info1.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15, i32 4
  %76 = ptrtoint ptr %info1.i to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %i.015.i.i, ptr %info1.i, align 4
  %sh_offset.i.i.i = getelementptr %struct.elf32_shdr, ptr %68, i32 %i.015.i.i, i32 4
  %77 = ptrtoint ptr %sh_offset.i.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %sh_offset.i.i.i, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %64, i32 %78
  %tobool3.not56.i.i.i = icmp eq ptr %add.ptr.i.i.i, null
  br i1 %tobool3.not56.i.i.i, label %get_modinfo.exit.i, label %for.body.i.preheader.i.i

for.body.i.preheader.i.i:                         ; preds = %if.then.i264
  %sh_size.i.i.i = getelementptr %struct.elf32_shdr, ptr %68, i32 %i.015.i.i, i32 5
  %79 = ptrtoint ptr %sh_size.i.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %sh_size.i.i.i, align 4
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %next_string.exit46.i.i.i, %for.body.i.preheader.i.i
  %p.058.i.i.i = phi ptr [ %incdec.ptr5.i37.i.i.i, %next_string.exit46.i.i.i ], [ %add.ptr.i.i.i, %for.body.i.preheader.i.i ]
  %size.457.i.i.i = phi i32 [ %dec6.i42.i.i.i, %next_string.exit46.i.i.i ], [ %80, %for.body.i.preheader.i.i ]
  %call4.i.i.i = tail call i32 @strncmp(ptr noundef nonnull %p.058.i.i.i, ptr noundef nonnull dereferenceable(5) @.str.31, i32 noundef 4) #29
  %cmp.i.i.i = icmp eq i32 %call4.i.i.i, 0
  br i1 %cmp.i.i.i, label %land.lhs.true.i.i.i, label %while.cond.i32.i.i.i.preheader

while.cond.i32.i.i.i.preheader:                   ; preds = %land.lhs.true.i.i.i, %for.body.i.i.i
  br label %while.cond.i32.i.i.i

land.lhs.true.i.i.i:                              ; preds = %for.body.i.i.i
  %arrayidx5.i.i.i = getelementptr i8, ptr %p.058.i.i.i, i32 4
  %81 = ptrtoint ptr %arrayidx5.i.i.i to i32
  call void @__asan_load1_noabort(i32 %81)
  %82 = load i8, ptr %arrayidx5.i.i.i, align 1
  %cmp6.i.i.i = icmp eq i8 %82, 61
  br i1 %cmp6.i.i.i, label %if.then8.i.i.i, label %while.cond.i32.i.i.i.preheader

if.then8.i.i.i:                                   ; preds = %land.lhs.true.i.i.i
  %add.ptr10.i.i.i = getelementptr i8, ptr %p.058.i.i.i, i32 5
  br label %get_modinfo.exit.i

while.cond.i32.i.i.i:                             ; preds = %while.body.i36.i.i.i, %while.cond.i32.i.i.i.preheader
  %size.5.i.i.i = phi i32 [ %dec.i34.i.i.i, %while.body.i36.i.i.i ], [ %size.457.i.i.i, %while.cond.i32.i.i.i.preheader ]
  %string.addr.0.i30.i.i.i = phi ptr [ %incdec.ptr.i33.i.i.i, %while.body.i36.i.i.i ], [ %p.058.i.i.i, %while.cond.i32.i.i.i.preheader ]
  %83 = ptrtoint ptr %string.addr.0.i30.i.i.i to i32
  call void @__asan_load1_noabort(i32 %83)
  %84 = load i8, ptr %string.addr.0.i30.i.i.i, align 1
  %tobool.not.i31.i.i.i = icmp eq i8 %84, 0
  br i1 %tobool.not.i31.i.i.i, label %while.body4.i44.i.i.i, label %while.body.i36.i.i.i

while.body.i36.i.i.i:                             ; preds = %while.cond.i32.i.i.i
  %incdec.ptr.i33.i.i.i = getelementptr i8, ptr %string.addr.0.i30.i.i.i, i32 1
  %dec.i34.i.i.i = add i32 %size.5.i.i.i, -1
  %cmp.i35.i.i.i = icmp ult i32 %size.5.i.i.i, 2
  br i1 %cmp.i35.i.i.i, label %get_modinfo.exit.i, label %while.cond.i32.i.i.i

while.cond1thread-pre-split.i40.i.i.i:            ; preds = %while.body4.i44.i.i.i
  %dec6.i42.i.i.i = add i32 %size.6.i.i.i, -1
  %incdec.ptr5.i37.i.i.i = getelementptr i8, ptr %string.addr.118.i41.i.i.i, i32 1
  %85 = ptrtoint ptr %incdec.ptr5.i37.i.i.i to i32
  call void @__asan_load1_noabort(i32 %85)
  %.pr.i38.i.i.i = load i8, ptr %incdec.ptr5.i37.i.i.i, align 1
  %tobool3.not.i39.i.i.i = icmp eq i8 %.pr.i38.i.i.i, 0
  br i1 %tobool3.not.i39.i.i.i, label %while.body4.i44.i.i.i, label %next_string.exit46.i.i.i

while.body4.i44.i.i.i:                            ; preds = %while.cond1thread-pre-split.i40.i.i.i, %while.cond.i32.i.i.i
  %size.6.i.i.i = phi i32 [ %dec6.i42.i.i.i, %while.cond1thread-pre-split.i40.i.i.i ], [ %size.5.i.i.i, %while.cond.i32.i.i.i ]
  %string.addr.118.i41.i.i.i = phi ptr [ %incdec.ptr5.i37.i.i.i, %while.cond1thread-pre-split.i40.i.i.i ], [ %string.addr.0.i30.i.i.i, %while.cond.i32.i.i.i ]
  %cmp7.i43.i.i.i = icmp ult i32 %size.6.i.i.i, 2
  br i1 %cmp7.i43.i.i.i, label %get_modinfo.exit.i, label %while.cond1thread-pre-split.i40.i.i.i

next_string.exit46.i.i.i:                         ; preds = %while.cond1thread-pre-split.i40.i.i.i
  %tobool3.not.i.i.i = icmp eq ptr %incdec.ptr5.i37.i.i.i, null
  br i1 %tobool3.not.i.i.i, label %get_modinfo.exit.i, label %for.body.i.i.i

get_modinfo.exit.i:                               ; preds = %next_string.exit46.i.i.i, %while.body4.i44.i.i.i, %while.body.i36.i.i.i, %if.then8.i.i.i, %if.then.i264
  %retval.0.i.i.i = phi ptr [ %add.ptr10.i.i.i, %if.then8.i.i.i ], [ null, %if.then.i264 ], [ null, %while.body4.i44.i.i.i ], [ null, %while.body.i36.i.i.i ], [ null, %next_string.exit46.i.i.i ]
  %86 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %86)
  store ptr %retval.0.i.i.i, ptr %info, align 4
  br label %if.end.i266

if.end.i266:                                      ; preds = %get_modinfo.exit.i, %find_sec.exit.thread.i
  %index161.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15
  %87 = ptrtoint ptr %e_shnum.i.i to i32
  call void @__asan_load2_noabort(i32 %87)
  %88 = load i16, ptr %e_shnum.i.i, align 4
  %conv.i265 = zext i16 %88 to i32
  %cmp176.i = icmp ugt i16 %88, 1
  br i1 %cmp176.i, label %for.body.lr.ph.i, label %for.end.i

for.body.lr.ph.i:                                 ; preds = %if.end.i266
  %89 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %sechdrs.i, align 4
  br label %for.body.i269

for.body.i269:                                    ; preds = %for.inc.i274, %for.body.lr.ph.i
  %i.0177.i = phi i32 [ 1, %for.body.lr.ph.i ], [ %inc.i272, %for.inc.i274 ]
  %sh_type.i268 = getelementptr %struct.elf32_shdr, ptr %90, i32 %i.0177.i, i32 1
  %91 = ptrtoint ptr %sh_type.i268 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %sh_type.i268, align 4
  %cmp6.i = icmp eq i32 %92, 2
  br i1 %cmp6.i, label %if.then8.i, label %for.inc.i274

if.then8.i:                                       ; preds = %for.body.i269
  %93 = ptrtoint ptr %index161.i to i32
  call void @__asan_store4_noabort(i32 %93)
  store i32 %i.0177.i, ptr %index161.i, align 4
  %sh_link.i270 = getelementptr %struct.elf32_shdr, ptr %90, i32 %i.0177.i, i32 6
  %94 = ptrtoint ptr %sh_link.i270 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %sh_link.i270, align 4
  %str.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15, i32 1
  %96 = ptrtoint ptr %str.i to i32
  call void @__asan_store4_noabort(i32 %96)
  store i32 %95, ptr %str.i, align 4
  %sh_offset.i = getelementptr %struct.elf32_shdr, ptr %90, i32 %95, i32 4
  %97 = ptrtoint ptr %sh_offset.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %sh_offset.i, align 4
  %add.ptr.i271 = getelementptr i8, ptr %64, i32 %98
  %strtab.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 6
  %99 = ptrtoint ptr %strtab.i to i32
  call void @__asan_store4_noabort(i32 %99)
  store ptr %add.ptr.i271, ptr %strtab.i, align 4
  br label %for.end.i

for.inc.i274:                                     ; preds = %for.body.i269
  %inc.i272 = add nuw nsw i32 %i.0177.i, 1
  %exitcond.not.i273 = icmp eq i32 %inc.i272, %conv.i265
  br i1 %exitcond.not.i273, label %for.end.i, label %for.body.i269

for.end.i:                                        ; preds = %for.inc.i274, %if.then8.i, %if.end.i266
  %100 = ptrtoint ptr %index161.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %index161.i, align 4
  %cmp21.i = icmp eq i32 %101, 0
  br i1 %cmp21.i, label %do.end.i275, label %if.end27.i

do.end.i275:                                      ; preds = %for.end.i
  %102 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %info, align 4
  %tobool25.not.i = icmp eq ptr %103, null
  %..str.132.i = select i1 %tobool25.not.i, ptr @.str.132, ptr %103
  %call26.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.130, ptr noundef %..str.132.i) #37
  br label %free_copy

if.end27.i:                                       ; preds = %for.end.i
  %104 = ptrtoint ptr %e_shnum.i.i to i32
  call void @__asan_load2_noabort(i32 %104)
  %105 = load i16, ptr %e_shnum.i.i, align 4
  %conv.i108.i = zext i16 %105 to i32
  %cmp14.i109.i = icmp ugt i16 %105, 1
  br i1 %cmp14.i109.i, label %for.body.lr.ph.i112.i, label %do.end36.i

for.body.lr.ph.i112.i:                            ; preds = %if.end27.i
  %106 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %sechdrs.i, align 4
  br label %for.body.i117.i

for.body.i117.i:                                  ; preds = %for.inc.i125.i, %for.body.lr.ph.i112.i
  %i.015.i113.i = phi i32 [ 1, %for.body.lr.ph.i112.i ], [ %inc.i123.i, %for.inc.i125.i ]
  %sh_flags.i114.i = getelementptr %struct.elf32_shdr, ptr %107, i32 %i.015.i113.i, i32 2
  %108 = ptrtoint ptr %sh_flags.i114.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %sh_flags.i114.i, align 4
  %and.i115.i = and i32 %109, 2
  %tobool.not.i116.i = icmp eq i32 %and.i115.i, 0
  br i1 %tobool.not.i116.i, label %for.inc.i125.i, label %land.lhs.true.i122.i

land.lhs.true.i122.i:                             ; preds = %for.body.i117.i
  %arrayidx.i118.i = getelementptr %struct.elf32_shdr, ptr %107, i32 %i.015.i113.i
  %110 = ptrtoint ptr %secstrings.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %secstrings.i, align 4
  %112 = ptrtoint ptr %arrayidx.i118.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %arrayidx.i118.i, align 4
  %add.ptr.i119.i = getelementptr i8, ptr %111, i32 %113
  %call.i120.i = tail call i32 @strcmp(ptr noundef %add.ptr.i119.i, ptr noundef nonnull dereferenceable(26) @.str.133) #31
  %cmp2.i121.i = icmp eq i32 %call.i120.i, 0
  br i1 %cmp2.i121.i, label %if.end45.i277, label %for.inc.i125.i

for.inc.i125.i:                                   ; preds = %land.lhs.true.i122.i, %for.body.i117.i
  %inc.i123.i = add nuw nsw i32 %i.015.i113.i, 1
  %exitcond.not.i124.i = icmp eq i32 %inc.i123.i, %conv.i108.i
  br i1 %exitcond.not.i124.i, label %do.end36.i, label %for.body.i117.i

do.end36.i:                                       ; preds = %for.inc.i125.i, %if.end27.i
  %mod164.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15, i32 2
  %114 = ptrtoint ptr %mod164.i to i32
  call void @__asan_store4_noabort(i32 %114)
  store i32 0, ptr %mod164.i, align 4
  %115 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %info, align 4
  %tobool39.not.i = icmp eq ptr %116, null
  %..str.13270.i = select i1 %tobool39.not.i, ptr @.str.132, ptr %116
  %call44.i276 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.135, ptr noundef %..str.13270.i) #37
  br label %free_copy

if.end45.i277:                                    ; preds = %land.lhs.true.i122.i
  %mod.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15, i32 2
  %117 = ptrtoint ptr %mod.i to i32
  call void @__asan_store4_noabort(i32 %117)
  store i32 %i.015.i113.i, ptr %mod.i, align 4
  %sh_offset51.i = getelementptr %struct.elf32_shdr, ptr %107, i32 %i.015.i113.i, i32 4
  %118 = ptrtoint ptr %sh_offset51.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %sh_offset51.i, align 4
  %add.ptr52.i = getelementptr i8, ptr %64, i32 %119
  %mod53.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 1
  %120 = ptrtoint ptr %mod53.i to i32
  call void @__asan_store4_noabort(i32 %120)
  store ptr %add.ptr52.i, ptr %mod53.i, align 4
  %121 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %info, align 4
  %tobool55.not.i = icmp eq ptr %122, null
  br i1 %tobool55.not.i, label %if.then56.i, label %if.end60.i

if.then56.i:                                      ; preds = %if.end45.i277
  %name58.i = getelementptr inbounds %struct.module, ptr %add.ptr52.i, i32 0, i32 2
  %123 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %123)
  store ptr %name58.i, ptr %info, align 4
  br label %if.end60.i

if.end60.i:                                       ; preds = %if.then56.i, %if.end45.i277
  %and.i278 = and i32 %flags, 1
  %tobool61.not.i = icmp eq i32 %and.i278, 0
  br i1 %tobool61.not.i, label %if.else.i, label %if.end67.i

if.else.i:                                        ; preds = %if.end60.i
  %124 = ptrtoint ptr %e_shnum.i.i to i32
  call void @__asan_load2_noabort(i32 %124)
  %125 = load i16, ptr %e_shnum.i.i, align 4
  %conv.i130.i = zext i16 %125 to i32
  %cmp14.i131.i = icmp ugt i16 %125, 1
  br i1 %cmp14.i131.i, label %for.body.i139.i, label %if.end67.i

for.body.i139.i:                                  ; preds = %for.inc.i147.i, %if.else.i
  %i.015.i135.i = phi i32 [ %inc.i145.i, %for.inc.i147.i ], [ 1, %if.else.i ]
  %sh_flags.i136.i = getelementptr %struct.elf32_shdr, ptr %107, i32 %i.015.i135.i, i32 2
  %126 = ptrtoint ptr %sh_flags.i136.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %sh_flags.i136.i, align 4
  %and.i137.i = and i32 %127, 2
  %tobool.not.i138.i = icmp eq i32 %and.i137.i, 0
  br i1 %tobool.not.i138.i, label %for.inc.i147.i, label %land.lhs.true.i144.i

land.lhs.true.i144.i:                             ; preds = %for.body.i139.i
  %arrayidx.i140.i = getelementptr %struct.elf32_shdr, ptr %107, i32 %i.015.i135.i
  %128 = ptrtoint ptr %arrayidx.i140.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %arrayidx.i140.i, align 4
  %add.ptr.i141.i = getelementptr i8, ptr %111, i32 %129
  %call.i142.i = tail call i32 @strcmp(ptr noundef %add.ptr.i141.i, ptr noundef nonnull dereferenceable(11) @.str.137) #31
  %cmp2.i143.i = icmp eq i32 %call.i142.i, 0
  br i1 %cmp2.i143.i, label %if.end67.i, label %for.inc.i147.i

for.inc.i147.i:                                   ; preds = %land.lhs.true.i144.i, %for.body.i139.i
  %inc.i145.i = add nuw nsw i32 %i.015.i135.i, 1
  %exitcond.not.i146.i = icmp eq i32 %inc.i145.i, %conv.i130.i
  br i1 %exitcond.not.i146.i, label %if.end67.i, label %for.body.i139.i

if.end67.i:                                       ; preds = %for.inc.i147.i, %land.lhs.true.i144.i, %if.else.i, %if.end60.i
  %retval.2.i148.sink.i = phi i32 [ 0, %if.end60.i ], [ 0, %if.else.i ], [ %i.015.i135.i, %land.lhs.true.i144.i ], [ 0, %for.inc.i147.i ]
  %vers66.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15, i32 3
  %130 = ptrtoint ptr %vers66.i to i32
  call void @__asan_store4_noabort(i32 %130)
  store i32 %retval.2.i148.sink.i, ptr %vers66.i, align 4
  %131 = ptrtoint ptr %e_shnum.i.i to i32
  call void @__asan_load2_noabort(i32 %131)
  %132 = load i16, ptr %e_shnum.i.i, align 4
  %conv.i.i.i = zext i16 %132 to i32
  %cmp14.i.i.i = icmp ugt i16 %132, 1
  br i1 %cmp14.i.i.i, label %for.body.i.i152.i, label %if.end8

for.body.i.i152.i:                                ; preds = %for.inc.i.i156.i, %if.end67.i
  %i.015.i.i.i = phi i32 [ %inc.i.i.i, %for.inc.i.i156.i ], [ 1, %if.end67.i ]
  %sh_flags.i.i.i = getelementptr %struct.elf32_shdr, ptr %107, i32 %i.015.i.i.i, i32 2
  %133 = ptrtoint ptr %sh_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %sh_flags.i.i.i, align 4
  %and.i.i.i = and i32 %134, 2
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %for.inc.i.i156.i, label %land.lhs.true.i.i155.i

land.lhs.true.i.i155.i:                           ; preds = %for.body.i.i152.i
  %arrayidx.i.i.i = getelementptr %struct.elf32_shdr, ptr %107, i32 %i.015.i.i.i
  %135 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %arrayidx.i.i.i, align 4
  %add.ptr.i.i153.i = getelementptr i8, ptr %111, i32 %136
  %call.i.i154.i = tail call i32 @strcmp(ptr noundef %add.ptr.i.i153.i, ptr noundef nonnull dereferenceable(14) @.str.138) #31
  %cmp2.i.i.i = icmp eq i32 %call.i.i154.i, 0
  br i1 %cmp2.i.i.i, label %if.end8, label %for.inc.i.i156.i

for.inc.i.i156.i:                                 ; preds = %land.lhs.true.i.i155.i, %for.body.i.i152.i
  %inc.i.i.i = add nuw nsw i32 %i.015.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i32 %inc.i.i.i, %conv.i.i.i
  br i1 %exitcond.not.i.i.i, label %if.end8, label %for.body.i.i152.i

if.end8:                                          ; preds = %for.inc.i.i156.i, %land.lhs.true.i.i155.i, %if.end67.i
  %retval.2.i.i.i = phi i32 [ 0, %if.end67.i ], [ 0, %for.inc.i.i156.i ], [ %i.015.i.i.i, %land.lhs.true.i.i155.i ]
  %pcpu.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15, i32 5
  %137 = ptrtoint ptr %pcpu.i to i32
  call void @__asan_store4_noabort(i32 %137)
  store i32 %retval.2.i.i.i, ptr %pcpu.i, align 4
  %138 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load ptr, ptr %info, align 4
  %140 = load ptr, ptr @module_blacklist, align 4
  %tobool.not.i280 = icmp eq ptr %140, null
  br i1 %tobool.not.i280, label %if.end13, label %for.cond.preheader.i281

for.cond.preheader.i281:                          ; preds = %if.end8
  %141 = ptrtoint ptr %140 to i32
  call void @__asan_load1_noabort(i32 %141)
  %142 = load i8, ptr %140, align 1
  %tobool1.not21.i = icmp eq i8 %142, 0
  br i1 %tobool1.not21.i, label %if.end13, label %for.body.lr.ph.i282

for.body.lr.ph.i282:                              ; preds = %for.cond.preheader.i281
  %call2.i = tail call i32 @strlen(ptr noundef %139) #31
  br label %for.body.i285

for.body.i285:                                    ; preds = %if.end6.i, %for.body.lr.ph.i282
  %p.022.i = phi ptr [ %140, %for.body.lr.ph.i282 ], [ %add.ptr.i290, %if.end6.i ]
  %call.i283 = tail call i32 @strcspn(ptr noundef %p.022.i, ptr noundef nonnull @.str.139) #29
  %cmp.i284 = icmp eq i32 %call2.i, %call.i283
  br i1 %cmp.i284, label %land.lhs.true.i287, label %if.end6.i

land.lhs.true.i287:                               ; preds = %for.body.i285
  %bcmp.i286 = tail call i32 @bcmp(ptr %139, ptr %p.022.i, i32 %call2.i) #31
  %tobool4.not.i = icmp eq i32 %bcmp.i286, 0
  br i1 %tobool4.not.i, label %if.then10, label %if.end6.i

if.end6.i:                                        ; preds = %land.lhs.true.i287, %for.body.i285
  %arrayidx.i288 = getelementptr i8, ptr %p.022.i, i32 %call.i283
  %143 = ptrtoint ptr %arrayidx.i288 to i32
  call void @__asan_load1_noabort(i32 %143)
  %144 = load i8, ptr %arrayidx.i288, align 1
  %cmp7.i = icmp eq i8 %144, 44
  %inc.i289 = zext i1 %cmp7.i to i32
  %spec.select.i = add i32 %call.i283, %inc.i289
  %add.ptr.i290 = getelementptr i8, ptr %p.022.i, i32 %spec.select.i
  %145 = ptrtoint ptr %add.ptr.i290 to i32
  call void @__asan_load1_noabort(i32 %145)
  %146 = load i8, ptr %add.ptr.i290, align 1
  %tobool1.not.i = icmp eq i8 %146, 0
  br i1 %tobool1.not.i, label %if.end13, label %for.body.i285

if.then10:                                        ; preds = %land.lhs.true.i287
  %call12 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.76, ptr noundef %139) #37
  br label %free_copy

if.end13:                                         ; preds = %if.end6.i, %for.cond.preheader.i281, %if.end8
  %147 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %sechdrs.i, align 4
  %sh_addr.i293 = getelementptr inbounds %struct.elf32_shdr, ptr %148, i32 0, i32 3
  %149 = ptrtoint ptr %sh_addr.i293 to i32
  call void @__asan_store4_noabort(i32 %149)
  store i32 0, ptr %sh_addr.i293, align 4
  %150 = ptrtoint ptr %hdr.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %hdr.i, align 4
  %e_shnum1.i = getelementptr inbounds %struct.elf32_hdr, ptr %151, i32 0, i32 12
  %152 = ptrtoint ptr %e_shnum1.i to i32
  call void @__asan_load2_noabort(i32 %152)
  %153 = load i16, ptr %e_shnum1.i, align 4
  %cmp3.i = icmp ugt i16 %153, 1
  br i1 %cmp3.i, label %for.body.i300, label %rewrite_section_headers.exit

for.body.i300:                                    ; preds = %for.body.i300, %if.end13
  %154 = phi ptr [ %162, %for.body.i300 ], [ %151, %if.end13 ]
  %i.04.i = phi i32 [ %inc.i296, %for.body.i300 ], [ 1, %if.end13 ]
  %155 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load ptr, ptr %sechdrs.i, align 4
  %157 = ptrtoint ptr %154 to i32
  %sh_offset.i295 = getelementptr %struct.elf32_shdr, ptr %156, i32 %i.04.i, i32 4
  %158 = ptrtoint ptr %sh_offset.i295 to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %sh_offset.i295, align 4
  %add.i = add i32 %159, %157
  %sh_addr5.i = getelementptr %struct.elf32_shdr, ptr %156, i32 %i.04.i, i32 3
  %160 = ptrtoint ptr %sh_addr5.i to i32
  call void @__asan_store4_noabort(i32 %160)
  store i32 %add.i, ptr %sh_addr5.i, align 4
  %inc.i296 = add nuw nsw i32 %i.04.i, 1
  %161 = ptrtoint ptr %hdr.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load ptr, ptr %hdr.i, align 4
  %e_shnum.i297 = getelementptr inbounds %struct.elf32_hdr, ptr %162, i32 0, i32 12
  %163 = ptrtoint ptr %e_shnum.i297 to i32
  call void @__asan_load2_noabort(i32 %163)
  %164 = load i16, ptr %e_shnum.i297, align 4
  %conv.i298 = zext i16 %164 to i32
  %cmp.i299 = icmp ult i32 %inc.i296, %conv.i298
  br i1 %cmp.i299, label %for.body.i300, label %rewrite_section_headers.exit

rewrite_section_headers.exit:                     ; preds = %for.body.i300, %if.end13
  %165 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %sechdrs.i, align 4
  %167 = ptrtoint ptr %vers66.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load i32, ptr %vers66.i, align 4
  %sh_flags.i301 = getelementptr %struct.elf32_shdr, ptr %166, i32 %168, i32 2
  %169 = ptrtoint ptr %sh_flags.i301 to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %sh_flags.i301, align 4
  %and.i302 = and i32 %170, -3
  store i32 %and.i302, ptr %sh_flags.i301, align 4
  %171 = load ptr, ptr %sechdrs.i, align 4
  %info10.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15, i32 4
  %172 = ptrtoint ptr %info10.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %info10.i, align 4
  %sh_flags12.i = getelementptr %struct.elf32_shdr, ptr %171, i32 %173, i32 2
  %174 = ptrtoint ptr %sh_flags12.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %sh_flags12.i, align 4
  %and13.i = and i32 %175, -3
  store i32 %and13.i, ptr %sh_flags12.i, align 4
  %176 = ptrtoint ptr %mod53.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load ptr, ptr %mod53.i, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fsa.i) #29
  %178 = call ptr @memcpy(ptr %fsa.i, ptr @__const.check_modstruct_version.fsa, i32 24)
  %179 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i.i = and i32 %179, -16384
  %180 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %180, i32 0, i32 1
  %181 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i304 = add i32 %182, 1
  store volatile i32 %add.i.i304, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !844
  %call.i305 = call fastcc zeroext i1 @find_symbol(ptr noundef nonnull %fsa.i) #29
  tail call void asm sideeffect "", "~{memory}"() #29
  %183 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i16.i = and i32 %183, -16384
  %184 = inttoptr i32 %and.i.i.i16.i to ptr
  %preempt_count.i.i17.i = getelementptr inbounds %struct.thread_info, ptr %184, i32 0, i32 1
  %185 = ptrtoint ptr %preempt_count.i.i17.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load volatile i32, ptr %preempt_count.i.i17.i, align 4
  %sub.i18.i = add i32 %186, -1
  store volatile i32 %sub.i18.i, ptr %preempt_count.i.i17.i, align 4
  br i1 %call.i305, label %check_modstruct_version.exit, label %do.body1.i

do.body1.i:                                       ; preds = %rewrite_section_headers.exit
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1303, 0\0A.popsection", ""() #29, !srcloc !845
  unreachable

check_modstruct_version.exit:                     ; preds = %rewrite_section_headers.exit
  %crc.i = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa.i, i32 0, i32 4
  %187 = ptrtoint ptr %crc.i to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %crc.i, align 4
  %call13.i = tail call fastcc i32 @check_version(ptr noundef %info, ptr noundef nonnull @.str.140, ptr noundef %177, ptr noundef %188) #29
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fsa.i) #29
  %tobool20.not = icmp eq i32 %call13.i, 0
  br i1 %tobool20.not, label %free_copy, label %if.end22

if.end22:                                         ; preds = %check_modstruct_version.exit
  %189 = ptrtoint ptr %mod53.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load ptr, ptr %mod53.i, align 4
  %191 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %sechdrs.i, align 4
  %193 = ptrtoint ptr %info10.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %info10.i, align 4
  %195 = ptrtoint ptr %hdr.i to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %hdr.i, align 4
  %sh_offset.i.i.i.i = getelementptr %struct.elf32_shdr, ptr %192, i32 %194, i32 4
  %197 = ptrtoint ptr %sh_offset.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load i32, ptr %sh_offset.i.i.i.i, align 4
  %add.ptr.i.i.i.i = getelementptr i8, ptr %196, i32 %198
  %tobool3.not56.i.i.i.i = icmp eq ptr %add.ptr.i.i.i.i, null
  br i1 %tobool3.not56.i.i.i.i, label %if.then2.i.i, label %for.body.i.preheader.i.i.i

for.body.i.preheader.i.i.i:                       ; preds = %if.end22
  %sh_size.i.i.i.i = getelementptr %struct.elf32_shdr, ptr %192, i32 %194, i32 5
  %199 = ptrtoint ptr %sh_size.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load i32, ptr %sh_size.i.i.i.i, align 4
  br label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %next_string.exit46.i.i.i.i, %for.body.i.preheader.i.i.i
  %p.058.i.i.i.i = phi ptr [ %incdec.ptr5.i37.i.i.i.i, %next_string.exit46.i.i.i.i ], [ %add.ptr.i.i.i.i, %for.body.i.preheader.i.i.i ]
  %size.457.i.i.i.i = phi i32 [ %dec6.i42.i.i.i.i, %next_string.exit46.i.i.i.i ], [ %200, %for.body.i.preheader.i.i.i ]
  %call4.i.i.i.i = tail call i32 @strncmp(ptr noundef nonnull %p.058.i.i.i.i, ptr noundef nonnull dereferenceable(9) @.str.151, i32 noundef 8) #29
  %cmp.i.i.i.i = icmp eq i32 %call4.i.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %land.lhs.true.i.i.i.i, label %while.cond.i32.i.i.i.i.preheader

land.lhs.true.i.i.i.i:                            ; preds = %for.body.i.i.i.i
  %arrayidx5.i.i.i.i = getelementptr i8, ptr %p.058.i.i.i.i, i32 8
  %201 = ptrtoint ptr %arrayidx5.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %201)
  %202 = load i8, ptr %arrayidx5.i.i.i.i, align 1
  %cmp6.i.i.i.i = icmp eq i8 %202, 61
  br i1 %cmp6.i.i.i.i, label %get_modinfo.exit.i.i, label %while.cond.i32.i.i.i.i.preheader

while.cond.i32.i.i.i.i.preheader:                 ; preds = %land.lhs.true.i.i.i.i, %for.body.i.i.i.i
  br label %while.cond.i32.i.i.i.i

while.cond.i32.i.i.i.i:                           ; preds = %while.body.i36.i.i.i.i, %while.cond.i32.i.i.i.i.preheader
  %size.5.i.i.i.i = phi i32 [ %dec.i34.i.i.i.i, %while.body.i36.i.i.i.i ], [ %size.457.i.i.i.i, %while.cond.i32.i.i.i.i.preheader ]
  %string.addr.0.i30.i.i.i.i = phi ptr [ %incdec.ptr.i33.i.i.i.i, %while.body.i36.i.i.i.i ], [ %p.058.i.i.i.i, %while.cond.i32.i.i.i.i.preheader ]
  %203 = ptrtoint ptr %string.addr.0.i30.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %203)
  %204 = load i8, ptr %string.addr.0.i30.i.i.i.i, align 1
  %tobool.not.i31.i.i.i.i = icmp eq i8 %204, 0
  br i1 %tobool.not.i31.i.i.i.i, label %while.body4.i44.i.i.i.i, label %while.body.i36.i.i.i.i

while.body.i36.i.i.i.i:                           ; preds = %while.cond.i32.i.i.i.i
  %incdec.ptr.i33.i.i.i.i = getelementptr i8, ptr %string.addr.0.i30.i.i.i.i, i32 1
  %dec.i34.i.i.i.i = add i32 %size.5.i.i.i.i, -1
  %cmp.i35.i.i.i.i = icmp ult i32 %size.5.i.i.i.i, 2
  br i1 %cmp.i35.i.i.i.i, label %if.then2.i.i, label %while.cond.i32.i.i.i.i

while.cond1thread-pre-split.i40.i.i.i.i:          ; preds = %while.body4.i44.i.i.i.i
  %dec6.i42.i.i.i.i = add i32 %size.6.i.i.i.i, -1
  %incdec.ptr5.i37.i.i.i.i = getelementptr i8, ptr %string.addr.118.i41.i.i.i.i, i32 1
  %205 = ptrtoint ptr %incdec.ptr5.i37.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %205)
  %.pr.i38.i.i.i.i = load i8, ptr %incdec.ptr5.i37.i.i.i.i, align 1
  %tobool3.not.i39.i.i.i.i = icmp eq i8 %.pr.i38.i.i.i.i, 0
  br i1 %tobool3.not.i39.i.i.i.i, label %while.body4.i44.i.i.i.i, label %next_string.exit46.i.i.i.i

while.body4.i44.i.i.i.i:                          ; preds = %while.cond1thread-pre-split.i40.i.i.i.i, %while.cond.i32.i.i.i.i
  %size.6.i.i.i.i = phi i32 [ %dec6.i42.i.i.i.i, %while.cond1thread-pre-split.i40.i.i.i.i ], [ %size.5.i.i.i.i, %while.cond.i32.i.i.i.i ]
  %string.addr.118.i41.i.i.i.i = phi ptr [ %incdec.ptr5.i37.i.i.i.i, %while.cond1thread-pre-split.i40.i.i.i.i ], [ %string.addr.0.i30.i.i.i.i, %while.cond.i32.i.i.i.i ]
  %cmp7.i43.i.i.i.i = icmp ult i32 %size.6.i.i.i.i, 2
  br i1 %cmp7.i43.i.i.i.i, label %if.then2.i.i, label %while.cond1thread-pre-split.i40.i.i.i.i

next_string.exit46.i.i.i.i:                       ; preds = %while.cond1thread-pre-split.i40.i.i.i.i
  %tobool3.not.i.i.i.i = icmp eq ptr %incdec.ptr5.i37.i.i.i.i, null
  br i1 %tobool3.not.i.i.i.i, label %if.then2.i.i, label %for.body.i.i.i.i

get_modinfo.exit.i.i:                             ; preds = %land.lhs.true.i.i.i.i
  %add.ptr10.i.i.i.i = getelementptr i8, ptr %p.058.i.i.i.i, i32 9
  %and.i.i306 = and i32 %flags, 2
  %tobool.not.i.i307 = icmp ne i32 %and.i.i306, 0
  %tobool1.not247.i.i = icmp eq ptr %add.ptr10.i.i.i.i, null
  %tobool1.not.i.i = or i1 %tobool.not.i.i307, %tobool1.not247.i.i
  br i1 %tobool1.not.i.i, label %if.then2.i.i, label %if.else.i.i

if.then2.i.i:                                     ; preds = %get_modinfo.exit.i.i, %next_string.exit46.i.i.i.i, %while.body4.i44.i.i.i.i, %while.body.i36.i.i.i.i, %if.end22
  %call.i.i.i = tail call i32 @test_taint(i32 noundef 1) #29
  %tobool.not.i.i.i308 = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i.i308, label %do.end.i.i.i, label %try_to_force_load.exit.i.i

do.end.i.i.i:                                     ; preds = %if.then2.i.i
  %name.i.i.i = getelementptr inbounds %struct.module, ptr %190, i32 0, i32 2
  %call1.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.147, ptr noundef %name.i.i.i, ptr noundef nonnull @.str.152) #37
  br label %try_to_force_load.exit.i.i

try_to_force_load.exit.i.i:                       ; preds = %do.end.i.i.i, %if.then2.i.i
  tail call void @add_taint(i32 noundef 1, i32 noundef 1) #29
  %taints.i.i.i.i = getelementptr inbounds %struct.module, ptr %190, i32 0, i32 28
  tail call void @_set_bit(i32 noundef 1, ptr noundef %taints.i.i.i.i) #29
  br label %if.end13.i.i

if.else.i.i:                                      ; preds = %get_modinfo.exit.i.i
  %206 = ptrtoint ptr %vers66.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %vers66.i, align 4
  %tobool7.not.i.i = icmp eq i32 %207, 0
  br i1 %tobool7.not.i.i, label %same_magic.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.else.i.i
  %call.i64.i.i = tail call i32 @strcspn(ptr noundef nonnull %add.ptr10.i.i.i.i, ptr noundef nonnull @.str.164) #29
  %add.ptr.i.i.i309 = getelementptr i8, ptr %add.ptr10.i.i.i.i, i32 %call.i64.i.i
  br label %same_magic.exit.i.i

same_magic.exit.i.i:                              ; preds = %if.then.i.i.i, %if.else.i.i
  %bmagic.addr.0.i.i.i = phi ptr [ getelementptr inbounds ([46 x i8], ptr @vermagic, i32 0, i32 6), %if.then.i.i.i ], [ @vermagic, %if.else.i.i ]
  %amagic.addr.0.i.i.i = phi ptr [ %add.ptr.i.i.i309, %if.then.i.i.i ], [ %add.ptr10.i.i.i.i, %if.else.i.i ]
  %call3.i.i.i = tail call i32 @strcmp(ptr noundef %amagic.addr.0.i.i.i, ptr noundef nonnull %bmagic.addr.0.i.i.i) #31
  %cmp.i.not.i.i = icmp eq i32 %call3.i.i.i, 0
  br i1 %cmp.i.not.i.i, label %if.end13.i.i, label %do.end.i.i

do.end.i.i:                                       ; preds = %same_magic.exit.i.i
  %208 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load ptr, ptr %info, align 4
  %call11.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.153, ptr noundef %209, ptr noundef nonnull %add.ptr10.i.i.i.i, ptr noundef nonnull @vermagic) #37
  br label %if.then25

if.end13.i.i:                                     ; preds = %same_magic.exit.i.i, %try_to_force_load.exit.i.i
  %210 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load ptr, ptr %sechdrs.i, align 4
  %212 = ptrtoint ptr %info10.i to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load i32, ptr %info10.i, align 4
  %214 = ptrtoint ptr %hdr.i to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load ptr, ptr %hdr.i, align 4
  %sh_offset.i.i69.i.i = getelementptr %struct.elf32_shdr, ptr %211, i32 %213, i32 4
  %216 = ptrtoint ptr %sh_offset.i.i69.i.i to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load i32, ptr %sh_offset.i.i69.i.i, align 4
  %add.ptr.i.i70.i.i = getelementptr i8, ptr %215, i32 %217
  %tobool3.not56.i.i71.i.i = icmp eq ptr %add.ptr.i.i70.i.i, null
  br i1 %tobool3.not56.i.i71.i.i, label %if.then16.i.i, label %for.body.i.preheader.i73.i.i

for.body.i.preheader.i73.i.i:                     ; preds = %if.end13.i.i
  %sh_size.i.i72.i.i = getelementptr %struct.elf32_shdr, ptr %211, i32 %213, i32 5
  %218 = ptrtoint ptr %sh_size.i.i72.i.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load i32, ptr %sh_size.i.i72.i.i, align 4
  br label %for.body.i.i78.i.i

for.body.i.i78.i.i:                               ; preds = %next_string.exit46.i.i104.i.i, %for.body.i.preheader.i73.i.i
  %p.058.i.i74.i.i = phi ptr [ %incdec.ptr5.i37.i.i95.i.i, %next_string.exit46.i.i104.i.i ], [ %add.ptr.i.i70.i.i, %for.body.i.preheader.i73.i.i ]
  %size.457.i.i75.i.i = phi i32 [ %dec6.i42.i.i94.i.i, %next_string.exit46.i.i104.i.i ], [ %219, %for.body.i.preheader.i73.i.i ]
  %call4.i.i76.i.i = tail call i32 @strncmp(ptr noundef nonnull %p.058.i.i74.i.i, ptr noundef nonnull dereferenceable(7) @.str.155, i32 noundef 6) #29
  %cmp.i.i77.i.i = icmp eq i32 %call4.i.i76.i.i, 0
  br i1 %cmp.i.i77.i.i, label %land.lhs.true.i.i81.i.i, label %while.cond.i32.i.i89.i.i.preheader

land.lhs.true.i.i81.i.i:                          ; preds = %for.body.i.i78.i.i
  %arrayidx5.i.i79.i.i = getelementptr i8, ptr %p.058.i.i74.i.i, i32 6
  %220 = ptrtoint ptr %arrayidx5.i.i79.i.i to i32
  call void @__asan_load1_noabort(i32 %220)
  %221 = load i8, ptr %arrayidx5.i.i79.i.i, align 1
  %cmp6.i.i80.i.i = icmp eq i8 %221, 61
  br i1 %cmp6.i.i80.i.i, label %get_modinfo.exit106.i.i, label %while.cond.i32.i.i89.i.i.preheader

while.cond.i32.i.i89.i.i.preheader:               ; preds = %land.lhs.true.i.i81.i.i, %for.body.i.i78.i.i
  br label %while.cond.i32.i.i89.i.i

while.cond.i32.i.i89.i.i:                         ; preds = %while.body.i36.i.i93.i.i, %while.cond.i32.i.i89.i.i.preheader
  %size.5.i.i86.i.i = phi i32 [ %dec.i34.i.i91.i.i, %while.body.i36.i.i93.i.i ], [ %size.457.i.i75.i.i, %while.cond.i32.i.i89.i.i.preheader ]
  %string.addr.0.i30.i.i87.i.i = phi ptr [ %incdec.ptr.i33.i.i90.i.i, %while.body.i36.i.i93.i.i ], [ %p.058.i.i74.i.i, %while.cond.i32.i.i89.i.i.preheader ]
  %222 = ptrtoint ptr %string.addr.0.i30.i.i87.i.i to i32
  call void @__asan_load1_noabort(i32 %222)
  %223 = load i8, ptr %string.addr.0.i30.i.i87.i.i, align 1
  %tobool.not.i31.i.i88.i.i = icmp eq i8 %223, 0
  br i1 %tobool.not.i31.i.i88.i.i, label %while.body4.i44.i.i102.i.i, label %while.body.i36.i.i93.i.i

while.body.i36.i.i93.i.i:                         ; preds = %while.cond.i32.i.i89.i.i
  %incdec.ptr.i33.i.i90.i.i = getelementptr i8, ptr %string.addr.0.i30.i.i87.i.i, i32 1
  %dec.i34.i.i91.i.i = add i32 %size.5.i.i86.i.i, -1
  %cmp.i35.i.i92.i.i = icmp ult i32 %size.5.i.i86.i.i, 2
  br i1 %cmp.i35.i.i92.i.i, label %if.then16.i.i, label %while.cond.i32.i.i89.i.i

while.cond1thread-pre-split.i40.i.i98.i.i:        ; preds = %while.body4.i44.i.i102.i.i
  %dec6.i42.i.i94.i.i = add i32 %size.6.i.i99.i.i, -1
  %incdec.ptr5.i37.i.i95.i.i = getelementptr i8, ptr %string.addr.118.i41.i.i100.i.i, i32 1
  %224 = ptrtoint ptr %incdec.ptr5.i37.i.i95.i.i to i32
  call void @__asan_load1_noabort(i32 %224)
  %.pr.i38.i.i96.i.i = load i8, ptr %incdec.ptr5.i37.i.i95.i.i, align 1
  %tobool3.not.i39.i.i97.i.i = icmp eq i8 %.pr.i38.i.i96.i.i, 0
  br i1 %tobool3.not.i39.i.i97.i.i, label %while.body4.i44.i.i102.i.i, label %next_string.exit46.i.i104.i.i

while.body4.i44.i.i102.i.i:                       ; preds = %while.cond1thread-pre-split.i40.i.i98.i.i, %while.cond.i32.i.i89.i.i
  %size.6.i.i99.i.i = phi i32 [ %dec6.i42.i.i94.i.i, %while.cond1thread-pre-split.i40.i.i98.i.i ], [ %size.5.i.i86.i.i, %while.cond.i32.i.i89.i.i ]
  %string.addr.118.i41.i.i100.i.i = phi ptr [ %incdec.ptr5.i37.i.i95.i.i, %while.cond1thread-pre-split.i40.i.i98.i.i ], [ %string.addr.0.i30.i.i87.i.i, %while.cond.i32.i.i89.i.i ]
  %cmp7.i43.i.i101.i.i = icmp ult i32 %size.6.i.i99.i.i, 2
  br i1 %cmp7.i43.i.i101.i.i, label %if.then16.i.i, label %while.cond1thread-pre-split.i40.i.i98.i.i

next_string.exit46.i.i104.i.i:                    ; preds = %while.cond1thread-pre-split.i40.i.i98.i.i
  %tobool3.not.i.i103.i.i = icmp eq ptr %incdec.ptr5.i37.i.i95.i.i, null
  br i1 %tobool3.not.i.i103.i.i, label %if.then16.i.i, label %for.body.i.i78.i.i

get_modinfo.exit106.i.i:                          ; preds = %land.lhs.true.i.i81.i.i
  %add.ptr10.i.i83.i.i = getelementptr i8, ptr %p.058.i.i74.i.i, i32 7
  %tobool15.not.i.i = icmp eq ptr %add.ptr10.i.i83.i.i, null
  br i1 %tobool15.not.i.i, label %if.then16.i.i, label %if.end27.i.i

if.then16.i.i:                                    ; preds = %get_modinfo.exit106.i.i, %next_string.exit46.i.i104.i.i, %while.body4.i44.i.i102.i.i, %while.body.i36.i.i93.i.i, %if.end13.i.i
  %call17.i.i = tail call i32 @test_taint(i32 noundef 12) #29
  %tobool18.not.i.i = icmp eq i32 %call17.i.i, 0
  br i1 %tobool18.not.i.i, label %do.end22.i.i, label %if.end26.i.i

do.end22.i.i:                                     ; preds = %if.then16.i.i
  %name24.i.i = getelementptr inbounds %struct.module, ptr %190, i32 0, i32 2
  %call25.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.157, ptr noundef %name24.i.i) #37
  br label %if.end26.i.i

if.end26.i.i:                                     ; preds = %do.end22.i.i, %if.then16.i.i
  tail call void @add_taint(i32 noundef 12, i32 noundef 0) #29
  %taints.i.i.i = getelementptr inbounds %struct.module, ptr %190, i32 0, i32 28
  tail call void @_set_bit(i32 noundef 12, ptr noundef %taints.i.i.i) #29
  br label %if.end27.i.i

if.end27.i.i:                                     ; preds = %if.end26.i.i, %get_modinfo.exit106.i.i
  %225 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load ptr, ptr %sechdrs.i, align 4
  %227 = ptrtoint ptr %info10.i to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load i32, ptr %info10.i, align 4
  %229 = ptrtoint ptr %hdr.i to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load ptr, ptr %hdr.i, align 4
  %sh_offset.i.i.i.i.i = getelementptr %struct.elf32_shdr, ptr %226, i32 %228, i32 4
  %231 = ptrtoint ptr %sh_offset.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load i32, ptr %sh_offset.i.i.i.i.i, align 4
  %add.ptr.i.i.i.i.i = getelementptr i8, ptr %230, i32 %232
  %tobool3.not56.i.i.i.i.i = icmp eq ptr %add.ptr.i.i.i.i.i, null
  br i1 %tobool3.not56.i.i.i.i.i, label %if.end38.i.i, label %for.body.i.preheader.i.i.i.i

for.body.i.preheader.i.i.i.i:                     ; preds = %if.end27.i.i
  %sh_size.i.i.i.i.i = getelementptr %struct.elf32_shdr, ptr %226, i32 %228, i32 5
  %233 = ptrtoint ptr %sh_size.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load i32, ptr %sh_size.i.i.i.i.i, align 4
  br label %for.body.i.i.i.i.i

for.body.i.i.i.i.i:                               ; preds = %next_string.exit46.i.i.i.i.i, %for.body.i.preheader.i.i.i.i
  %p.058.i.i.i.i.i = phi ptr [ %incdec.ptr5.i37.i.i.i.i.i, %next_string.exit46.i.i.i.i.i ], [ %add.ptr.i.i.i.i.i, %for.body.i.preheader.i.i.i.i ]
  %size.457.i.i.i.i.i = phi i32 [ %dec6.i42.i.i.i.i.i, %next_string.exit46.i.i.i.i.i ], [ %234, %for.body.i.preheader.i.i.i.i ]
  %call4.i.i.i.i.i = tail call i32 @strncmp(ptr noundef nonnull %p.058.i.i.i.i.i, ptr noundef nonnull dereferenceable(10) @.str.165, i32 noundef 9) #29
  %cmp.i.i.i.i.i = icmp eq i32 %call4.i.i.i.i.i, 0
  br i1 %cmp.i.i.i.i.i, label %land.lhs.true.i.i.i.i.i, label %while.cond.i32.i.i.i.i.i.preheader

land.lhs.true.i.i.i.i.i:                          ; preds = %for.body.i.i.i.i.i
  %arrayidx5.i.i.i.i.i = getelementptr i8, ptr %p.058.i.i.i.i.i, i32 9
  %235 = ptrtoint ptr %arrayidx5.i.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %235)
  %236 = load i8, ptr %arrayidx5.i.i.i.i.i, align 1
  %cmp6.i.i.i.i.i = icmp eq i8 %236, 61
  br i1 %cmp6.i.i.i.i.i, label %for.body.i.i120.i.i.preheader, label %while.cond.i32.i.i.i.i.i.preheader

while.cond.i32.i.i.i.i.i.preheader:               ; preds = %land.lhs.true.i.i.i.i.i, %for.body.i.i.i.i.i
  br label %while.cond.i32.i.i.i.i.i

while.cond.i32.i.i.i.i.i:                         ; preds = %while.body.i36.i.i.i.i.i, %while.cond.i32.i.i.i.i.i.preheader
  %size.5.i.i.i.i.i = phi i32 [ %dec.i34.i.i.i.i.i, %while.body.i36.i.i.i.i.i ], [ %size.457.i.i.i.i.i, %while.cond.i32.i.i.i.i.i.preheader ]
  %string.addr.0.i30.i.i.i.i.i = phi ptr [ %incdec.ptr.i33.i.i.i.i.i, %while.body.i36.i.i.i.i.i ], [ %p.058.i.i.i.i.i, %while.cond.i32.i.i.i.i.i.preheader ]
  %237 = ptrtoint ptr %string.addr.0.i30.i.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %237)
  %238 = load i8, ptr %string.addr.0.i30.i.i.i.i.i, align 1
  %tobool.not.i31.i.i.i.i.i = icmp eq i8 %238, 0
  br i1 %tobool.not.i31.i.i.i.i.i, label %while.body4.i44.i.i.i.i.i, label %while.body.i36.i.i.i.i.i

while.body.i36.i.i.i.i.i:                         ; preds = %while.cond.i32.i.i.i.i.i
  %incdec.ptr.i33.i.i.i.i.i = getelementptr i8, ptr %string.addr.0.i30.i.i.i.i.i, i32 1
  %dec.i34.i.i.i.i.i = add i32 %size.5.i.i.i.i.i, -1
  %cmp.i35.i.i.i.i.i = icmp ult i32 %size.5.i.i.i.i.i, 2
  br i1 %cmp.i35.i.i.i.i.i, label %for.body.i.i120.i.i.preheader, label %while.cond.i32.i.i.i.i.i

while.cond1thread-pre-split.i40.i.i.i.i.i:        ; preds = %while.body4.i44.i.i.i.i.i
  %dec6.i42.i.i.i.i.i = add i32 %size.6.i.i.i.i.i, -1
  %incdec.ptr5.i37.i.i.i.i.i = getelementptr i8, ptr %string.addr.118.i41.i.i.i.i.i, i32 1
  %239 = ptrtoint ptr %incdec.ptr5.i37.i.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %239)
  %.pr.i38.i.i.i.i.i = load i8, ptr %incdec.ptr5.i37.i.i.i.i.i, align 1
  %tobool3.not.i39.i.i.i.i.i = icmp eq i8 %.pr.i38.i.i.i.i.i, 0
  br i1 %tobool3.not.i39.i.i.i.i.i, label %while.body4.i44.i.i.i.i.i, label %next_string.exit46.i.i.i.i.i

while.body4.i44.i.i.i.i.i:                        ; preds = %while.cond1thread-pre-split.i40.i.i.i.i.i, %while.cond.i32.i.i.i.i.i
  %size.6.i.i.i.i.i = phi i32 [ %dec6.i42.i.i.i.i.i, %while.cond1thread-pre-split.i40.i.i.i.i.i ], [ %size.5.i.i.i.i.i, %while.cond.i32.i.i.i.i.i ]
  %string.addr.118.i41.i.i.i.i.i = phi ptr [ %incdec.ptr5.i37.i.i.i.i.i, %while.cond1thread-pre-split.i40.i.i.i.i.i ], [ %string.addr.0.i30.i.i.i.i.i, %while.cond.i32.i.i.i.i.i ]
  %cmp7.i43.i.i.i.i.i = icmp ult i32 %size.6.i.i.i.i.i, 2
  br i1 %cmp7.i43.i.i.i.i.i, label %for.body.i.i120.i.i.preheader, label %while.cond1thread-pre-split.i40.i.i.i.i.i

next_string.exit46.i.i.i.i.i:                     ; preds = %while.cond1thread-pre-split.i40.i.i.i.i.i
  %tobool3.not.i.i.i.i.i = icmp eq ptr %incdec.ptr5.i37.i.i.i.i.i, null
  br i1 %tobool3.not.i.i.i.i.i, label %for.body.i.i120.i.i.preheader, label %for.body.i.i.i.i.i

for.body.i.i120.i.i.preheader:                    ; preds = %next_string.exit46.i.i.i.i.i, %while.body4.i44.i.i.i.i.i, %while.body.i36.i.i.i.i.i, %land.lhs.true.i.i.i.i.i
  br label %for.body.i.i120.i.i

for.body.i.i120.i.i:                              ; preds = %next_string.exit46.i.i146.i.i, %for.body.i.i120.i.i.preheader
  %p.058.i.i116.i.i = phi ptr [ %incdec.ptr5.i37.i.i137.i.i, %next_string.exit46.i.i146.i.i ], [ %add.ptr.i.i.i.i.i, %for.body.i.i120.i.i.preheader ]
  %size.457.i.i117.i.i = phi i32 [ %dec6.i42.i.i136.i.i, %next_string.exit46.i.i146.i.i ], [ %234, %for.body.i.i120.i.i.preheader ]
  %call4.i.i118.i.i = tail call i32 @strncmp(ptr noundef nonnull %p.058.i.i116.i.i, ptr noundef nonnull dereferenceable(8) @.str.159, i32 noundef 7) #29
  %cmp.i.i119.i.i = icmp eq i32 %call4.i.i118.i.i, 0
  br i1 %cmp.i.i119.i.i, label %land.lhs.true.i.i123.i.i, label %while.cond.i32.i.i131.i.i.preheader

land.lhs.true.i.i123.i.i:                         ; preds = %for.body.i.i120.i.i
  %arrayidx5.i.i121.i.i = getelementptr i8, ptr %p.058.i.i116.i.i, i32 7
  %240 = ptrtoint ptr %arrayidx5.i.i121.i.i to i32
  call void @__asan_load1_noabort(i32 %240)
  %241 = load i8, ptr %arrayidx5.i.i121.i.i, align 1
  %cmp6.i.i122.i.i = icmp eq i8 %241, 61
  br i1 %cmp6.i.i122.i.i, label %get_modinfo.exit148.i.i, label %while.cond.i32.i.i131.i.i.preheader

while.cond.i32.i.i131.i.i.preheader:              ; preds = %land.lhs.true.i.i123.i.i, %for.body.i.i120.i.i
  br label %while.cond.i32.i.i131.i.i

while.cond.i32.i.i131.i.i:                        ; preds = %while.body.i36.i.i135.i.i, %while.cond.i32.i.i131.i.i.preheader
  %size.5.i.i128.i.i = phi i32 [ %dec.i34.i.i133.i.i, %while.body.i36.i.i135.i.i ], [ %size.457.i.i117.i.i, %while.cond.i32.i.i131.i.i.preheader ]
  %string.addr.0.i30.i.i129.i.i = phi ptr [ %incdec.ptr.i33.i.i132.i.i, %while.body.i36.i.i135.i.i ], [ %p.058.i.i116.i.i, %while.cond.i32.i.i131.i.i.preheader ]
  %242 = ptrtoint ptr %string.addr.0.i30.i.i129.i.i to i32
  call void @__asan_load1_noabort(i32 %242)
  %243 = load i8, ptr %string.addr.0.i30.i.i129.i.i, align 1
  %tobool.not.i31.i.i130.i.i = icmp eq i8 %243, 0
  br i1 %tobool.not.i31.i.i130.i.i, label %while.body4.i44.i.i144.i.i, label %while.body.i36.i.i135.i.i

while.body.i36.i.i135.i.i:                        ; preds = %while.cond.i32.i.i131.i.i
  %incdec.ptr.i33.i.i132.i.i = getelementptr i8, ptr %string.addr.0.i30.i.i129.i.i, i32 1
  %dec.i34.i.i133.i.i = add i32 %size.5.i.i128.i.i, -1
  %cmp.i35.i.i134.i.i = icmp ult i32 %size.5.i.i128.i.i, 2
  br i1 %cmp.i35.i.i134.i.i, label %if.end38.i.i, label %while.cond.i32.i.i131.i.i

while.cond1thread-pre-split.i40.i.i140.i.i:       ; preds = %while.body4.i44.i.i144.i.i
  %dec6.i42.i.i136.i.i = add i32 %size.6.i.i141.i.i, -1
  %incdec.ptr5.i37.i.i137.i.i = getelementptr i8, ptr %string.addr.118.i41.i.i142.i.i, i32 1
  %244 = ptrtoint ptr %incdec.ptr5.i37.i.i137.i.i to i32
  call void @__asan_load1_noabort(i32 %244)
  %.pr.i38.i.i138.i.i = load i8, ptr %incdec.ptr5.i37.i.i137.i.i, align 1
  %tobool3.not.i39.i.i139.i.i = icmp eq i8 %.pr.i38.i.i138.i.i, 0
  br i1 %tobool3.not.i39.i.i139.i.i, label %while.body4.i44.i.i144.i.i, label %next_string.exit46.i.i146.i.i

while.body4.i44.i.i144.i.i:                       ; preds = %while.cond1thread-pre-split.i40.i.i140.i.i, %while.cond.i32.i.i131.i.i
  %size.6.i.i141.i.i = phi i32 [ %dec6.i42.i.i136.i.i, %while.cond1thread-pre-split.i40.i.i140.i.i ], [ %size.5.i.i128.i.i, %while.cond.i32.i.i131.i.i ]
  %string.addr.118.i41.i.i142.i.i = phi ptr [ %incdec.ptr5.i37.i.i137.i.i, %while.cond1thread-pre-split.i40.i.i140.i.i ], [ %string.addr.0.i30.i.i129.i.i, %while.cond.i32.i.i131.i.i ]
  %cmp7.i43.i.i143.i.i = icmp ult i32 %size.6.i.i141.i.i, 2
  br i1 %cmp7.i43.i.i143.i.i, label %if.end38.i.i, label %while.cond1thread-pre-split.i40.i.i140.i.i

next_string.exit46.i.i146.i.i:                    ; preds = %while.cond1thread-pre-split.i40.i.i140.i.i
  %tobool3.not.i.i145.i.i = icmp eq ptr %incdec.ptr5.i37.i.i137.i.i, null
  br i1 %tobool3.not.i.i145.i.i, label %if.end38.i.i, label %for.body.i.i120.i.i

get_modinfo.exit148.i.i:                          ; preds = %land.lhs.true.i.i123.i.i
  %add.ptr10.i.i125.i.i = getelementptr i8, ptr %p.058.i.i116.i.i, i32 8
  %tobool29.not.i.i = icmp eq ptr %add.ptr10.i.i125.i.i, null
  br i1 %tobool29.not.i.i, label %if.end38.i.i, label %if.then30.i.i

if.then30.i.i:                                    ; preds = %get_modinfo.exit148.i.i
  tail call void @add_taint(i32 noundef 10, i32 noundef 0) #29
  %taints.i149.i.i = getelementptr inbounds %struct.module, ptr %190, i32 0, i32 28
  tail call void @_set_bit(i32 noundef 10, ptr noundef %taints.i149.i.i) #29
  %name35.i.i = getelementptr inbounds %struct.module, ptr %190, i32 0, i32 2
  %call37.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.161, ptr noundef %name35.i.i) #37
  br label %if.end38.i.i

if.end38.i.i:                                     ; preds = %if.then30.i.i, %get_modinfo.exit148.i.i, %next_string.exit46.i.i146.i.i, %while.body4.i44.i.i144.i.i, %while.body.i36.i.i135.i.i, %if.end27.i.i
  %245 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load ptr, ptr %sechdrs.i, align 4
  %247 = ptrtoint ptr %info10.i to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load i32, ptr %info10.i, align 4
  %249 = ptrtoint ptr %hdr.i to i32
  call void @__asan_load4_noabort(i32 %249)
  %250 = load ptr, ptr %hdr.i, align 4
  %sh_offset.i.i.i153.i.i = getelementptr %struct.elf32_shdr, ptr %246, i32 %248, i32 4
  %251 = ptrtoint ptr %sh_offset.i.i.i153.i.i to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load i32, ptr %sh_offset.i.i.i153.i.i, align 4
  %add.ptr.i.i.i154.i.i = getelementptr i8, ptr %250, i32 %252
  %tobool3.not56.i.i.i155.i.i = icmp eq ptr %add.ptr.i.i.i154.i.i, null
  br i1 %tobool3.not56.i.i.i155.i.i, label %get_modinfo.exit231.i.i, label %for.body.i.preheader.i.i157.i.i

for.body.i.preheader.i.i157.i.i:                  ; preds = %if.end38.i.i
  %sh_size.i.i.i156.i.i = getelementptr %struct.elf32_shdr, ptr %246, i32 %248, i32 5
  %253 = ptrtoint ptr %sh_size.i.i.i156.i.i to i32
  call void @__asan_load4_noabort(i32 %253)
  %254 = load i32, ptr %sh_size.i.i.i156.i.i, align 4
  br label %for.body.i.i.i162.i.i

for.body.i.i.i162.i.i:                            ; preds = %next_string.exit46.i.i.i185.i.i, %for.body.i.preheader.i.i157.i.i
  %p.058.i.i.i158.i.i = phi ptr [ %incdec.ptr5.i37.i.i.i176.i.i, %next_string.exit46.i.i.i185.i.i ], [ %add.ptr.i.i.i154.i.i, %for.body.i.preheader.i.i157.i.i ]
  %size.457.i.i.i159.i.i = phi i32 [ %dec6.i42.i.i.i175.i.i, %next_string.exit46.i.i.i185.i.i ], [ %254, %for.body.i.preheader.i.i157.i.i ]
  %call4.i.i.i160.i.i = tail call i32 @strncmp(ptr noundef nonnull %p.058.i.i.i158.i.i, ptr noundef nonnull dereferenceable(10) @.str.168, i32 noundef 9) #29
  %cmp.i.i.i161.i.i = icmp eq i32 %call4.i.i.i160.i.i, 0
  br i1 %cmp.i.i.i161.i.i, label %land.lhs.true.i.i.i165.i.i, label %while.cond.i32.i.i.i170.i.i.preheader

land.lhs.true.i.i.i165.i.i:                       ; preds = %for.body.i.i.i162.i.i
  %arrayidx5.i.i.i163.i.i = getelementptr i8, ptr %p.058.i.i.i158.i.i, i32 9
  %255 = ptrtoint ptr %arrayidx5.i.i.i163.i.i to i32
  call void @__asan_load1_noabort(i32 %255)
  %256 = load i8, ptr %arrayidx5.i.i.i163.i.i, align 1
  %cmp6.i.i.i164.i.i = icmp eq i8 %256, 61
  br i1 %cmp6.i.i.i164.i.i, label %get_modinfo.exit.i.i.i, label %while.cond.i32.i.i.i170.i.i.preheader

while.cond.i32.i.i.i170.i.i.preheader:            ; preds = %land.lhs.true.i.i.i165.i.i, %for.body.i.i.i162.i.i
  br label %while.cond.i32.i.i.i170.i.i

while.cond.i32.i.i.i170.i.i:                      ; preds = %while.body.i36.i.i.i174.i.i, %while.cond.i32.i.i.i170.i.i.preheader
  %size.5.i.i.i167.i.i = phi i32 [ %dec.i34.i.i.i172.i.i, %while.body.i36.i.i.i174.i.i ], [ %size.457.i.i.i159.i.i, %while.cond.i32.i.i.i170.i.i.preheader ]
  %string.addr.0.i30.i.i.i168.i.i = phi ptr [ %incdec.ptr.i33.i.i.i171.i.i, %while.body.i36.i.i.i174.i.i ], [ %p.058.i.i.i158.i.i, %while.cond.i32.i.i.i170.i.i.preheader ]
  %257 = ptrtoint ptr %string.addr.0.i30.i.i.i168.i.i to i32
  call void @__asan_load1_noabort(i32 %257)
  %258 = load i8, ptr %string.addr.0.i30.i.i.i168.i.i, align 1
  %tobool.not.i31.i.i.i169.i.i = icmp eq i8 %258, 0
  br i1 %tobool.not.i31.i.i.i169.i.i, label %while.body4.i44.i.i.i183.i.i, label %while.body.i36.i.i.i174.i.i

while.body.i36.i.i.i174.i.i:                      ; preds = %while.cond.i32.i.i.i170.i.i
  %incdec.ptr.i33.i.i.i171.i.i = getelementptr i8, ptr %string.addr.0.i30.i.i.i168.i.i, i32 1
  %dec.i34.i.i.i172.i.i = add i32 %size.5.i.i.i167.i.i, -1
  %cmp.i35.i.i.i173.i.i = icmp ult i32 %size.5.i.i.i167.i.i, 2
  br i1 %cmp.i35.i.i.i173.i.i, label %for.body.i.i203.i.i.preheader, label %while.cond.i32.i.i.i170.i.i

while.cond1thread-pre-split.i40.i.i.i179.i.i:     ; preds = %while.body4.i44.i.i.i183.i.i
  %dec6.i42.i.i.i175.i.i = add i32 %size.6.i.i.i180.i.i, -1
  %incdec.ptr5.i37.i.i.i176.i.i = getelementptr i8, ptr %string.addr.118.i41.i.i.i181.i.i, i32 1
  %259 = ptrtoint ptr %incdec.ptr5.i37.i.i.i176.i.i to i32
  call void @__asan_load1_noabort(i32 %259)
  %.pr.i38.i.i.i177.i.i = load i8, ptr %incdec.ptr5.i37.i.i.i176.i.i, align 1
  %tobool3.not.i39.i.i.i178.i.i = icmp eq i8 %.pr.i38.i.i.i177.i.i, 0
  br i1 %tobool3.not.i39.i.i.i178.i.i, label %while.body4.i44.i.i.i183.i.i, label %next_string.exit46.i.i.i185.i.i

while.body4.i44.i.i.i183.i.i:                     ; preds = %while.cond1thread-pre-split.i40.i.i.i179.i.i, %while.cond.i32.i.i.i170.i.i
  %size.6.i.i.i180.i.i = phi i32 [ %dec6.i42.i.i.i175.i.i, %while.cond1thread-pre-split.i40.i.i.i179.i.i ], [ %size.5.i.i.i167.i.i, %while.cond.i32.i.i.i170.i.i ]
  %string.addr.118.i41.i.i.i181.i.i = phi ptr [ %incdec.ptr5.i37.i.i.i176.i.i, %while.cond1thread-pre-split.i40.i.i.i179.i.i ], [ %string.addr.0.i30.i.i.i168.i.i, %while.cond.i32.i.i.i170.i.i ]
  %cmp7.i43.i.i.i182.i.i = icmp ult i32 %size.6.i.i.i180.i.i, 2
  br i1 %cmp7.i43.i.i.i182.i.i, label %for.body.i.i203.i.i.preheader, label %while.cond1thread-pre-split.i40.i.i.i179.i.i

next_string.exit46.i.i.i185.i.i:                  ; preds = %while.cond1thread-pre-split.i40.i.i.i179.i.i
  %tobool3.not.i.i.i184.i.i = icmp eq ptr %incdec.ptr5.i37.i.i.i176.i.i, null
  br i1 %tobool3.not.i.i.i184.i.i, label %for.body.i.i203.i.i.preheader, label %for.body.i.i.i162.i.i

get_modinfo.exit.i.i.i:                           ; preds = %land.lhs.true.i.i.i165.i.i
  %add.ptr10.i.i.i.i.i = getelementptr i8, ptr %p.058.i.i.i158.i.i, i32 10
  %tobool.not.i186.i.i = icmp eq ptr %add.ptr10.i.i.i.i.i, null
  br i1 %tobool.not.i186.i.i, label %for.body.i.i203.i.i.preheader, label %check_modinfo_livepatch.exit.i.i

for.body.i.i203.i.i.preheader:                    ; preds = %get_modinfo.exit.i.i.i, %next_string.exit46.i.i.i185.i.i, %while.body4.i44.i.i.i183.i.i, %while.body.i36.i.i.i174.i.i
  br label %for.body.i.i203.i.i

check_modinfo_livepatch.exit.i.i:                 ; preds = %get_modinfo.exit.i.i.i
  %name.i187.i.i = getelementptr inbounds %struct.module, ptr %190, i32 0, i32 2
  %call1.i188.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.169, ptr noundef %name.i187.i.i) #37
  br label %if.then25

for.body.i.i203.i.i:                              ; preds = %next_string.exit46.i.i229.i.i, %for.body.i.i203.i.i.preheader
  %p.058.i.i199.i.i = phi ptr [ %incdec.ptr5.i37.i.i220.i.i, %next_string.exit46.i.i229.i.i ], [ %add.ptr.i.i.i154.i.i, %for.body.i.i203.i.i.preheader ]
  %size.457.i.i200.i.i = phi i32 [ %dec6.i42.i.i219.i.i, %next_string.exit46.i.i229.i.i ], [ %254, %for.body.i.i203.i.i.preheader ]
  %call4.i.i201.i.i = tail call i32 @strncmp(ptr noundef nonnull %p.058.i.i199.i.i, ptr noundef nonnull dereferenceable(8) @.str.163, i32 noundef 7) #29
  %cmp.i.i202.i.i = icmp eq i32 %call4.i.i201.i.i, 0
  br i1 %cmp.i.i202.i.i, label %land.lhs.true.i.i206.i.i, label %while.cond.i32.i.i214.i.i.preheader

while.cond.i32.i.i214.i.i.preheader:              ; preds = %land.lhs.true.i.i206.i.i, %for.body.i.i203.i.i
  br label %while.cond.i32.i.i214.i.i

land.lhs.true.i.i206.i.i:                         ; preds = %for.body.i.i203.i.i
  %arrayidx5.i.i204.i.i = getelementptr i8, ptr %p.058.i.i199.i.i, i32 7
  %260 = ptrtoint ptr %arrayidx5.i.i204.i.i to i32
  call void @__asan_load1_noabort(i32 %260)
  %261 = load i8, ptr %arrayidx5.i.i204.i.i, align 1
  %cmp6.i.i205.i.i = icmp eq i8 %261, 61
  br i1 %cmp6.i.i205.i.i, label %if.then8.i.i209.i.i, label %while.cond.i32.i.i214.i.i.preheader

if.then8.i.i209.i.i:                              ; preds = %land.lhs.true.i.i206.i.i
  %add.ptr10.i.i208.i.i = getelementptr i8, ptr %p.058.i.i199.i.i, i32 8
  br label %get_modinfo.exit231.i.i

while.cond.i32.i.i214.i.i:                        ; preds = %while.body.i36.i.i218.i.i, %while.cond.i32.i.i214.i.i.preheader
  %size.5.i.i211.i.i = phi i32 [ %dec.i34.i.i216.i.i, %while.body.i36.i.i218.i.i ], [ %size.457.i.i200.i.i, %while.cond.i32.i.i214.i.i.preheader ]
  %string.addr.0.i30.i.i212.i.i = phi ptr [ %incdec.ptr.i33.i.i215.i.i, %while.body.i36.i.i218.i.i ], [ %p.058.i.i199.i.i, %while.cond.i32.i.i214.i.i.preheader ]
  %262 = ptrtoint ptr %string.addr.0.i30.i.i212.i.i to i32
  call void @__asan_load1_noabort(i32 %262)
  %263 = load i8, ptr %string.addr.0.i30.i.i212.i.i, align 1
  %tobool.not.i31.i.i213.i.i = icmp eq i8 %263, 0
  br i1 %tobool.not.i31.i.i213.i.i, label %while.body4.i44.i.i227.i.i, label %while.body.i36.i.i218.i.i

while.body.i36.i.i218.i.i:                        ; preds = %while.cond.i32.i.i214.i.i
  %incdec.ptr.i33.i.i215.i.i = getelementptr i8, ptr %string.addr.0.i30.i.i212.i.i, i32 1
  %dec.i34.i.i216.i.i = add i32 %size.5.i.i211.i.i, -1
  %cmp.i35.i.i217.i.i = icmp ult i32 %size.5.i.i211.i.i, 2
  br i1 %cmp.i35.i.i217.i.i, label %get_modinfo.exit231.i.i, label %while.cond.i32.i.i214.i.i

while.cond1thread-pre-split.i40.i.i223.i.i:       ; preds = %while.body4.i44.i.i227.i.i
  %dec6.i42.i.i219.i.i = add i32 %size.6.i.i224.i.i, -1
  %incdec.ptr5.i37.i.i220.i.i = getelementptr i8, ptr %string.addr.118.i41.i.i225.i.i, i32 1
  %264 = ptrtoint ptr %incdec.ptr5.i37.i.i220.i.i to i32
  call void @__asan_load1_noabort(i32 %264)
  %.pr.i38.i.i221.i.i = load i8, ptr %incdec.ptr5.i37.i.i220.i.i, align 1
  %tobool3.not.i39.i.i222.i.i = icmp eq i8 %.pr.i38.i.i221.i.i, 0
  br i1 %tobool3.not.i39.i.i222.i.i, label %while.body4.i44.i.i227.i.i, label %next_string.exit46.i.i229.i.i

while.body4.i44.i.i227.i.i:                       ; preds = %while.cond1thread-pre-split.i40.i.i223.i.i, %while.cond.i32.i.i214.i.i
  %size.6.i.i224.i.i = phi i32 [ %dec6.i42.i.i219.i.i, %while.cond1thread-pre-split.i40.i.i223.i.i ], [ %size.5.i.i211.i.i, %while.cond.i32.i.i214.i.i ]
  %string.addr.118.i41.i.i225.i.i = phi ptr [ %incdec.ptr5.i37.i.i220.i.i, %while.cond1thread-pre-split.i40.i.i223.i.i ], [ %string.addr.0.i30.i.i212.i.i, %while.cond.i32.i.i214.i.i ]
  %cmp7.i43.i.i226.i.i = icmp ult i32 %size.6.i.i224.i.i, 2
  br i1 %cmp7.i43.i.i226.i.i, label %get_modinfo.exit231.i.i, label %while.cond1thread-pre-split.i40.i.i223.i.i

next_string.exit46.i.i229.i.i:                    ; preds = %while.cond1thread-pre-split.i40.i.i223.i.i
  %tobool3.not.i.i228.i.i = icmp eq ptr %incdec.ptr5.i37.i.i220.i.i, null
  br i1 %tobool3.not.i.i228.i.i, label %get_modinfo.exit231.i.i, label %for.body.i.i203.i.i

get_modinfo.exit231.i.i:                          ; preds = %next_string.exit46.i.i229.i.i, %while.body4.i44.i.i227.i.i, %while.body.i36.i.i218.i.i, %if.then8.i.i209.i.i, %if.end38.i.i
  %retval.0.i.i230.i.i = phi ptr [ %add.ptr10.i.i208.i.i, %if.then8.i.i209.i.i ], [ null, %if.end38.i.i ], [ null, %while.body4.i44.i.i227.i.i ], [ null, %while.body.i36.i.i218.i.i ], [ null, %next_string.exit46.i.i229.i.i ]
  %tobool.not.i232.i.i = icmp eq ptr %retval.0.i.i230.i.i, null
  %spec.store.select.i.i.i = select i1 %tobool.not.i232.i.i, ptr @.str.171, ptr %retval.0.i.i230.i.i
  %call.i.i233.i.i = tail call i32 @strcmp(ptr noundef %spec.store.select.i.i.i, ptr noundef nonnull dereferenceable(4) @.str.174) #31
  %cmp.i.i234.i.i = icmp eq i32 %call.i.i233.i.i, 0
  br i1 %cmp.i.i234.i.i, label %if.end.i312, label %lor.lhs.false.i.i.i.i

lor.lhs.false.i.i.i.i:                            ; preds = %get_modinfo.exit231.i.i
  %call1.i.i.i.i = tail call i32 @strcmp(ptr noundef %spec.store.select.i.i.i, ptr noundef nonnull dereferenceable(7) @.str.175) #31
  %cmp2.i.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %cmp2.i.i.i.i, label %if.end.i312, label %lor.lhs.false3.i.i.i.i

lor.lhs.false3.i.i.i.i:                           ; preds = %lor.lhs.false.i.i.i.i
  %call4.i.i235.i.i = tail call i32 @strcmp(ptr noundef %spec.store.select.i.i.i, ptr noundef nonnull dereferenceable(26) @.str.176) #31
  %cmp5.i.i.i.i = icmp eq i32 %call4.i.i235.i.i, 0
  br i1 %cmp5.i.i.i.i, label %if.end.i312, label %lor.lhs.false6.i.i.i.i

lor.lhs.false6.i.i.i.i:                           ; preds = %lor.lhs.false3.i.i.i.i
  %call7.i.i.i.i = tail call i32 @strcmp(ptr noundef %spec.store.select.i.i.i, ptr noundef nonnull dereferenceable(13) @.str.177) #31
  %cmp8.i.i.i.i = icmp eq i32 %call7.i.i.i.i, 0
  br i1 %cmp8.i.i.i.i, label %if.end.i312, label %lor.lhs.false9.i.i.i.i

lor.lhs.false9.i.i.i.i:                           ; preds = %lor.lhs.false6.i.i.i.i
  %call10.i.i.i.i = tail call i32 @strcmp(ptr noundef %spec.store.select.i.i.i, ptr noundef nonnull dereferenceable(13) @.str.178) #31
  %cmp11.i.i.i.i = icmp eq i32 %call10.i.i.i.i, 0
  br i1 %cmp11.i.i.i.i, label %if.end.i312, label %license_is_gpl_compatible.exit.i.i.i

license_is_gpl_compatible.exit.i.i.i:             ; preds = %lor.lhs.false9.i.i.i.i
  %call12.i.i.i.i = tail call i32 @strcmp(ptr noundef %spec.store.select.i.i.i, ptr noundef nonnull dereferenceable(13) @.str.179) #31
  %cmp13.i.not.i.i.i = icmp eq i32 %call12.i.i.i.i, 0
  br i1 %cmp13.i.not.i.i.i, label %if.end.i312, label %if.then2.i.i.i

if.then2.i.i.i:                                   ; preds = %license_is_gpl_compatible.exit.i.i.i
  %call3.i236.i.i = tail call i32 @test_taint(i32 noundef 0) #29
  %tobool4.not.i.i.i = icmp eq i32 %call3.i236.i.i, 0
  br i1 %tobool4.not.i.i.i, label %do.end.i238.i.i, label %if.end7.i.i.i

do.end.i238.i.i:                                  ; preds = %if.then2.i.i.i
  %name.i237.i.i = getelementptr inbounds %struct.module, ptr %190, i32 0, i32 2
  %call6.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.172, ptr noundef %name.i237.i.i, ptr noundef %spec.store.select.i.i.i) #37
  br label %if.end7.i.i.i

if.end7.i.i.i:                                    ; preds = %do.end.i238.i.i, %if.then2.i.i.i
  tail call void @add_taint(i32 noundef 0, i32 noundef 1) #29
  %taints.i.i239.i.i = getelementptr inbounds %struct.module, ptr %190, i32 0, i32 28
  tail call void @_set_bit(i32 noundef 0, ptr noundef %taints.i.i239.i.i) #29
  br label %if.end.i312

if.end.i312:                                      ; preds = %if.end7.i.i.i, %license_is_gpl_compatible.exit.i.i.i, %lor.lhs.false9.i.i.i.i, %lor.lhs.false6.i.i.i.i, %lor.lhs.false3.i.i.i.i, %lor.lhs.false.i.i.i.i, %get_modinfo.exit231.i.i
  %265 = ptrtoint ptr %hdr.i to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load ptr, ptr %hdr.i, align 4
  %267 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load ptr, ptr %sechdrs.i, align 4
  %269 = ptrtoint ptr %secstrings.i to i32
  call void @__asan_load4_noabort(i32 %269)
  %270 = load ptr, ptr %secstrings.i, align 4
  %271 = ptrtoint ptr %mod53.i to i32
  call void @__asan_load4_noabort(i32 %271)
  %272 = load ptr, ptr %mod53.i, align 4
  %call4.i = tail call i32 @module_frob_arch_sections(ptr noundef %266, ptr noundef %268, ptr noundef %270, ptr noundef %272) #29
  %cmp.i311 = icmp slt i32 %call4.i, 0
  br i1 %cmp.i311, label %if.then5.i, label %if.end7.i

if.then5.i:                                       ; preds = %if.end.i312
  %273 = inttoptr i32 %call4.i to ptr
  br label %layout_and_allocate.exit

if.end7.i:                                        ; preds = %if.end.i312
  %274 = ptrtoint ptr %hdr.i to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load ptr, ptr %hdr.i, align 4
  %276 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load ptr, ptr %sechdrs.i, align 4
  %278 = ptrtoint ptr %secstrings.i to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load ptr, ptr %secstrings.i, align 4
  %280 = ptrtoint ptr %mod53.i to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load ptr, ptr %mod53.i, align 4
  %e_shnum.i.i313 = getelementptr inbounds %struct.elf32_hdr, ptr %275, i32 0, i32 12
  %282 = ptrtoint ptr %e_shnum.i.i313 to i32
  call void @__asan_load2_noabort(i32 %282)
  %283 = load i16, ptr %e_shnum.i.i313, align 4
  %conv.i.i314 = zext i16 %283 to i32
  %cmp12.not.i.i = icmp eq i16 %283, 0
  br i1 %cmp12.not.i.i, label %if.end16.i328, label %for.body.i.i317

for.body.i.i317:                                  ; preds = %for.inc.i.i320, %if.end7.i
  %i.013.i.i = phi i32 [ %inc.i.i318, %for.inc.i.i320 ], [ 0, %if.end7.i ]
  %sh_flags.i.i315 = getelementptr %struct.elf32_shdr, ptr %277, i32 %i.013.i.i, i32 2
  %284 = ptrtoint ptr %sh_flags.i.i315 to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load i32, ptr %sh_flags.i.i315, align 4
  %and.i82.i = and i32 %285, 5
  %cmp2.i.i316 = icmp eq i32 %and.i82.i, 5
  br i1 %cmp2.i.i316, label %if.then14.i, label %for.inc.i.i320

for.inc.i.i320:                                   ; preds = %for.body.i.i317
  %inc.i.i318 = add nuw nsw i32 %i.013.i.i, 1
  %exitcond.not.i.i319 = icmp eq i32 %inc.i.i318, %conv.i.i314
  br i1 %exitcond.not.i.i319, label %if.end16.i328, label %for.body.i.i317

if.then14.i:                                      ; preds = %for.body.i.i317
  %arrayidx.i.i321 = getelementptr %struct.elf32_shdr, ptr %277, i32 %i.013.i.i
  %name.i.i = getelementptr inbounds %struct.module, ptr %281, i32 0, i32 2
  %286 = ptrtoint ptr %arrayidx.i.i321 to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load i32, ptr %arrayidx.i.i321, align 4
  %add.ptr.i.i322 = getelementptr i8, ptr %279, i32 %287
  %call.i.i323 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.180, ptr noundef %name.i.i, ptr noundef %add.ptr.i.i322, i32 noundef %i.013.i.i) #37
  br label %if.then25

if.end16.i328:                                    ; preds = %for.inc.i.i320, %if.end7.i
  %288 = ptrtoint ptr %pcpu.i to i32
  call void @__asan_load4_noabort(i32 %288)
  %289 = load i32, ptr %pcpu.i, align 4
  %sh_flags.i325 = getelementptr %struct.elf32_shdr, ptr %277, i32 %289, i32 2
  %290 = ptrtoint ptr %sh_flags.i325 to i32
  call void @__asan_load4_noabort(i32 %290)
  %291 = load i32, ptr %sh_flags.i325, align 4
  %and.i326 = and i32 %291, -3
  store i32 %and.i326, ptr %sh_flags.i325, align 4
  %292 = ptrtoint ptr %hdr.i to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load ptr, ptr %hdr.i, align 4
  %e_shnum.i85.i = getelementptr inbounds %struct.elf32_hdr, ptr %293, i32 0, i32 12
  %294 = ptrtoint ptr %e_shnum.i85.i to i32
  call void @__asan_load2_noabort(i32 %294)
  %295 = load i16, ptr %e_shnum.i85.i, align 4
  %conv.i86.i = zext i16 %295 to i32
  %cmp14.i.i327 = icmp ugt i16 %295, 1
  br i1 %cmp14.i.i327, label %for.body.lr.ph.i.i329, label %if.end24.i

for.body.lr.ph.i.i329:                            ; preds = %if.end16.i328
  %296 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load ptr, ptr %sechdrs.i, align 4
  br label %for.body.i90.i

for.body.i90.i:                                   ; preds = %for.inc.i97.i, %for.body.lr.ph.i.i329
  %i.015.i.i330 = phi i32 [ 1, %for.body.lr.ph.i.i329 ], [ %inc.i95.i, %for.inc.i97.i ]
  %sh_flags.i87.i = getelementptr %struct.elf32_shdr, ptr %297, i32 %i.015.i.i330, i32 2
  %298 = ptrtoint ptr %sh_flags.i87.i to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load i32, ptr %sh_flags.i87.i, align 4
  %and.i88.i = and i32 %299, 2
  %tobool.not.i89.i = icmp eq i32 %and.i88.i, 0
  br i1 %tobool.not.i89.i, label %for.inc.i97.i, label %land.lhs.true.i.i331

land.lhs.true.i.i331:                             ; preds = %for.body.i90.i
  %arrayidx.i91.i = getelementptr %struct.elf32_shdr, ptr %297, i32 %i.015.i.i330
  %300 = ptrtoint ptr %secstrings.i to i32
  call void @__asan_load4_noabort(i32 %300)
  %301 = load ptr, ptr %secstrings.i, align 4
  %302 = ptrtoint ptr %arrayidx.i91.i to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load i32, ptr %arrayidx.i91.i, align 4
  %add.ptr.i92.i = getelementptr i8, ptr %301, i32 %303
  %call.i93.i = tail call i32 @strcmp(ptr noundef %add.ptr.i92.i, ptr noundef nonnull dereferenceable(21) @.str.149) #31
  %cmp2.i94.i = icmp eq i32 %call.i93.i, 0
  br i1 %cmp2.i94.i, label %if.then20.i, label %for.inc.i97.i

for.inc.i97.i:                                    ; preds = %land.lhs.true.i.i331, %for.body.i90.i
  %inc.i95.i = add nuw nsw i32 %i.015.i.i330, 1
  %exitcond.not.i96.i = icmp eq i32 %inc.i95.i, %conv.i86.i
  br i1 %exitcond.not.i96.i, label %if.end24.i, label %for.body.i90.i

if.then20.i:                                      ; preds = %land.lhs.true.i.i331
  %or.i = or i32 %299, 2097152
  %304 = ptrtoint ptr %sh_flags.i87.i to i32
  call void @__asan_store4_noabort(i32 %304)
  store i32 %or.i, ptr %sh_flags.i87.i, align 4
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then20.i, %for.inc.i97.i, %if.end16.i328
  %305 = ptrtoint ptr %hdr.i to i32
  call void @__asan_load4_noabort(i32 %305)
  %306 = load ptr, ptr %hdr.i, align 4
  %e_shnum.i99.i = getelementptr inbounds %struct.elf32_hdr, ptr %306, i32 0, i32 12
  %307 = ptrtoint ptr %e_shnum.i99.i to i32
  call void @__asan_load2_noabort(i32 %307)
  %308 = load i16, ptr %e_shnum.i99.i, align 4
  %conv.i100.i = zext i16 %308 to i32
  %cmp14.i101.i = icmp ugt i16 %308, 1
  br i1 %cmp14.i101.i, label %for.body.lr.ph.i104.i, label %if.end32.i

for.body.lr.ph.i104.i:                            ; preds = %if.end24.i
  %309 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %309)
  %310 = load ptr, ptr %sechdrs.i, align 4
  br label %for.body.i109.i

for.body.i109.i:                                  ; preds = %for.inc.i117.i, %for.body.lr.ph.i104.i
  %i.015.i105.i = phi i32 [ 1, %for.body.lr.ph.i104.i ], [ %inc.i115.i, %for.inc.i117.i ]
  %sh_flags.i106.i = getelementptr %struct.elf32_shdr, ptr %310, i32 %i.015.i105.i, i32 2
  %311 = ptrtoint ptr %sh_flags.i106.i to i32
  call void @__asan_load4_noabort(i32 %311)
  %312 = load i32, ptr %sh_flags.i106.i, align 4
  %and.i107.i = and i32 %312, 2
  %tobool.not.i108.i = icmp eq i32 %and.i107.i, 0
  br i1 %tobool.not.i108.i, label %for.inc.i117.i, label %land.lhs.true.i114.i

land.lhs.true.i114.i:                             ; preds = %for.body.i109.i
  %arrayidx.i110.i = getelementptr %struct.elf32_shdr, ptr %310, i32 %i.015.i105.i
  %313 = ptrtoint ptr %secstrings.i to i32
  call void @__asan_load4_noabort(i32 %313)
  %314 = load ptr, ptr %secstrings.i, align 4
  %315 = ptrtoint ptr %arrayidx.i110.i to i32
  call void @__asan_load4_noabort(i32 %315)
  %316 = load i32, ptr %arrayidx.i110.i, align 4
  %add.ptr.i111.i = getelementptr i8, ptr %314, i32 %316
  %call.i112.i = tail call i32 @strcmp(ptr noundef %add.ptr.i111.i, ptr noundef nonnull dereferenceable(13) @.str.150) #31
  %cmp2.i113.i = icmp eq i32 %call.i112.i, 0
  br i1 %cmp2.i113.i, label %if.then27.i, label %for.inc.i117.i

for.inc.i117.i:                                   ; preds = %land.lhs.true.i114.i, %for.body.i109.i
  %inc.i115.i = add nuw nsw i32 %i.015.i105.i, 1
  %exitcond.not.i116.i = icmp eq i32 %inc.i115.i, %conv.i100.i
  br i1 %exitcond.not.i116.i, label %if.end32.i, label %for.body.i109.i

if.then27.i:                                      ; preds = %land.lhs.true.i114.i
  %or31.i = or i32 %312, 2097152
  %317 = ptrtoint ptr %sh_flags.i106.i to i32
  call void @__asan_store4_noabort(i32 %317)
  store i32 %or31.i, ptr %sh_flags.i106.i, align 4
  br label %if.end32.i

if.end32.i:                                       ; preds = %if.then27.i, %for.inc.i117.i, %if.end24.i
  %318 = ptrtoint ptr %mod53.i to i32
  call void @__asan_load4_noabort(i32 %318)
  %319 = load ptr, ptr %mod53.i, align 4
  tail call fastcc void @layout_sections(ptr noundef %319, ptr noundef %info) #29
  %320 = ptrtoint ptr %mod53.i to i32
  call void @__asan_load4_noabort(i32 %320)
  %321 = load ptr, ptr %mod53.i, align 4
  tail call fastcc void @layout_symtab(ptr noundef %321, ptr noundef %info) #29
  %322 = ptrtoint ptr %mod53.i to i32
  call void @__asan_load4_noabort(i32 %322)
  %323 = load ptr, ptr %mod53.i, align 4
  %call36.i = tail call fastcc i32 @move_module(ptr noundef %323, ptr noundef %info) #29
  %tobool37.not.i = icmp eq i32 %call36.i, 0
  br i1 %tobool37.not.i, label %if.end40.i, label %if.then38.i

if.then38.i:                                      ; preds = %if.end32.i
  %324 = inttoptr i32 %call36.i to ptr
  br label %layout_and_allocate.exit

if.end40.i:                                       ; preds = %if.end32.i
  %325 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %325)
  %326 = load ptr, ptr %sechdrs.i, align 4
  %327 = ptrtoint ptr %mod.i to i32
  call void @__asan_load4_noabort(i32 %327)
  %328 = load i32, ptr %mod.i, align 4
  %sh_addr.i332 = getelementptr %struct.elf32_shdr, ptr %326, i32 %328, i32 3
  %329 = ptrtoint ptr %sh_addr.i332 to i32
  call void @__asan_load4_noabort(i32 %329)
  %330 = load i32, ptr %sh_addr.i332, align 4
  %331 = inttoptr i32 %330 to ptr
  tail call void @kmemleak_scan_area(ptr noundef %331, i32 noundef 896, i32 noundef 3264) #29
  %332 = ptrtoint ptr %hdr.i to i32
  call void @__asan_load4_noabort(i32 %332)
  %333 = load ptr, ptr %hdr.i, align 4
  %e_shnum29.i.i = getelementptr inbounds %struct.elf32_hdr, ptr %333, i32 0, i32 12
  %334 = ptrtoint ptr %e_shnum29.i.i to i32
  call void @__asan_load2_noabort(i32 %334)
  %335 = load i16, ptr %e_shnum29.i.i, align 4
  %cmp31.i.i = icmp ugt i16 %335, 1
  br i1 %cmp31.i.i, label %for.body.i124.i, label %layout_and_allocate.exit

for.body.i124.i:                                  ; preds = %for.inc.i128.i, %if.end40.i
  %i.032.i.i = phi i32 [ %inc.i125.i, %for.inc.i128.i ], [ 1, %if.end40.i ]
  %336 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %336)
  %337 = load ptr, ptr %sechdrs.i, align 4
  %sh_flags.i123.i = getelementptr %struct.elf32_shdr, ptr %337, i32 %i.032.i.i, i32 2
  %338 = ptrtoint ptr %sh_flags.i123.i to i32
  call void @__asan_load4_noabort(i32 %338)
  %339 = load i32, ptr %sh_flags.i123.i, align 4
  %340 = and i32 %339, 7
  %341 = icmp eq i32 %340, 3
  br i1 %341, label %if.end.i.i, label %for.inc.i128.i

if.end.i.i:                                       ; preds = %for.body.i124.i
  %sh_addr.i.i = getelementptr %struct.elf32_shdr, ptr %337, i32 %i.032.i.i, i32 3
  %342 = ptrtoint ptr %sh_addr.i.i to i32
  call void @__asan_load4_noabort(i32 %342)
  %343 = load i32, ptr %sh_addr.i.i, align 4
  %344 = inttoptr i32 %343 to ptr
  %sh_size.i.i333 = getelementptr %struct.elf32_shdr, ptr %337, i32 %i.032.i.i, i32 5
  %345 = ptrtoint ptr %sh_size.i.i333 to i32
  call void @__asan_load4_noabort(i32 %345)
  %346 = load i32, ptr %sh_size.i.i333, align 4
  tail call void @kmemleak_scan_area(ptr noundef %344, i32 noundef %346, i32 noundef 3264) #29
  br label %for.inc.i128.i

for.inc.i128.i:                                   ; preds = %if.end.i.i, %for.body.i124.i
  %inc.i125.i = add nuw nsw i32 %i.032.i.i, 1
  %347 = ptrtoint ptr %hdr.i to i32
  call void @__asan_load4_noabort(i32 %347)
  %348 = load ptr, ptr %hdr.i, align 4
  %e_shnum.i126.i = getelementptr inbounds %struct.elf32_hdr, ptr %348, i32 0, i32 12
  %349 = ptrtoint ptr %e_shnum.i126.i to i32
  call void @__asan_load2_noabort(i32 %349)
  %350 = load i16, ptr %e_shnum.i126.i, align 4
  %conv.i127.i = zext i16 %350 to i32
  %cmp.i.i334 = icmp ult i32 %inc.i125.i, %conv.i127.i
  br i1 %cmp.i.i334, label %for.body.i124.i, label %layout_and_allocate.exit

layout_and_allocate.exit:                         ; preds = %for.inc.i128.i, %if.end40.i, %if.then38.i, %if.then5.i
  %retval.0.i335 = phi ptr [ %273, %if.then5.i ], [ %324, %if.then38.i ], [ %331, %if.end40.i ], [ %331, %for.inc.i128.i ]
  %cmp.i336 = icmp ugt ptr %retval.0.i335, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i336, label %if.then25, label %if.end27

if.then25:                                        ; preds = %layout_and_allocate.exit, %if.then14.i, %check_modinfo_livepatch.exit.i.i, %do.end.i.i
  %retval.0.i335372 = phi ptr [ %retval.0.i335, %layout_and_allocate.exit ], [ inttoptr (i32 -8 to ptr), %if.then14.i ], [ inttoptr (i32 -8 to ptr), %check_modinfo_livepatch.exit.i.i ], [ inttoptr (i32 -8 to ptr), %do.end.i.i ]
  %351 = ptrtoint ptr %retval.0.i335372 to i32
  br label %free_copy

if.end27:                                         ; preds = %layout_and_allocate.exit
  %name28 = getelementptr inbounds %struct.module, ptr %retval.0.i335, i32 0, i32 2
  %call29 = tail call fastcc i32 @add_unformed_module(ptr noundef %retval.0.i335)
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %if.end32, label %free_module

if.end32:                                         ; preds = %if.end27
  %sig_ok = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 13
  %352 = ptrtoint ptr %sig_ok to i32
  call void @__asan_load1_noabort(i32 %352)
  %353 = load i8, ptr %sig_ok, align 4, !range !773
  %tobool33.not = icmp eq i8 %353, 0
  %sig_ok34 = getelementptr inbounds %struct.module, ptr %retval.0.i335, i32 0, i32 19
  %354 = ptrtoint ptr %sig_ok34 to i32
  call void @__asan_store1_noabort(i32 %354)
  store i8 %353, ptr %sig_ok34, align 1
  br i1 %tobool33.not, label %land.end, label %if.end59

land.end:                                         ; preds = %if.end32
  %.b252 = load i1, ptr @load_module.__already_done, align 1
  br i1 %.b252, label %if.end51, label %if.then43, !prof !770

if.then43:                                        ; preds = %land.end
  store i1 true, ptr @load_module.__already_done, align 1
  %call50 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.79, ptr noundef %name28) #37
  br label %if.end51

if.end51:                                         ; preds = %if.then43, %land.end
  tail call void @add_taint(i32 noundef 13, i32 noundef 0) #29
  %taints.i = getelementptr inbounds %struct.module, ptr %retval.0.i335, i32 0, i32 28
  tail call void @_set_bit(i32 noundef 13, ptr noundef %taints.i) #29
  br label %if.end59

if.end59:                                         ; preds = %if.end51, %if.end32
  %call60 = tail call fastcc i32 @percpu_modalloc(ptr noundef %retval.0.i335, ptr noundef %info)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %if.end63, label %unlink_mod

if.end63:                                         ; preds = %if.end59
  tail call fastcc void @module_unload_init(ptr noundef %retval.0.i335)
  %param_lock.i = getelementptr inbounds %struct.module, ptr %retval.0.i335, i32 0, i32 12
  tail call void @__mutex_init(ptr noundef %param_lock.i, ptr noundef nonnull @.str.195, ptr noundef nonnull @init_param_lock.__key) #29
  %call68 = tail call fastcc i32 @find_module_sections(ptr noundef %retval.0.i335, ptr noundef %info)
  %tobool69.not = icmp eq i32 %call68, 0
  br i1 %tobool69.not, label %if.end71, label %free_unload

if.end71:                                         ; preds = %if.end63
  tail call fastcc void @check_module_license_and_versions(ptr noundef %retval.0.i335)
  tail call fastcc void @setup_modinfo(ptr noundef %retval.0.i335, ptr noundef %info)
  %call76 = tail call fastcc i32 @simplify_symbols(ptr noundef %retval.0.i335, ptr noundef %info)
  %cmp = icmp slt i32 %call76, 0
  br i1 %cmp, label %free_modinfo, label %if.end78

if.end78:                                         ; preds = %if.end71
  %call79 = tail call fastcc i32 @apply_relocations(ptr noundef %retval.0.i335, ptr noundef %info)
  %cmp80 = icmp slt i32 %call79, 0
  br i1 %cmp80, label %free_modinfo, label %if.end82

if.end82:                                         ; preds = %if.end78
  %call83 = tail call fastcc i32 @post_relocation(ptr noundef %retval.0.i335, ptr noundef %info)
  %cmp84 = icmp slt i32 %call83, 0
  br i1 %cmp84, label %free_modinfo, label %if.end86

if.end86:                                         ; preds = %if.end82
  tail call fastcc void @flush_module_icache(ptr noundef %retval.0.i335)
  %call87 = tail call ptr @strndup_user(ptr noundef %uargs, i32 noundef 2147483647) #29
  %args = getelementptr inbounds %struct.module, ptr %retval.0.i335, i32 0, i32 36
  %355 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %355)
  store ptr %call87, ptr %args, align 4
  %cmp.i337 = icmp ugt ptr %call87, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i337, label %if.then90, label %if.end93

if.then90:                                        ; preds = %if.end86
  %356 = ptrtoint ptr %call87 to i32
  br label %free_arch_cleanup

if.end93:                                         ; preds = %if.end86
  tail call fastcc void @init_build_id(ptr noundef %retval.0.i335, ptr noundef %info)
  %debug = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 11
  %357 = ptrtoint ptr %debug to i32
  call void @__asan_load4_noabort(i32 %357)
  %358 = load ptr, ptr %debug, align 4
  %tobool.not.i338 = icmp eq ptr %358, null
  br i1 %tobool.not.i338, label %dynamic_debug_setup.exit, label %if.end.i340

if.end.i340:                                      ; preds = %if.end93
  %num_debug = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 12
  %359 = ptrtoint ptr %num_debug to i32
  call void @__asan_load4_noabort(i32 %359)
  %360 = load i32, ptr %num_debug, align 4
  %call.i339 = tail call i32 @ddebug_add_module(ptr noundef nonnull %358, i32 noundef %360, ptr noundef %name28) #29
  br label %dynamic_debug_setup.exit

dynamic_debug_setup.exit:                         ; preds = %if.end.i340, %if.end93
  tail call void @ftrace_module_init(ptr noundef %retval.0.i335) #29
  %call94 = tail call fastcc i32 @complete_formation(ptr noundef %retval.0.i335, ptr noundef %info)
  %tobool95.not = icmp eq i32 %call94, 0
  br i1 %tobool95.not, label %if.end97, label %ddebug_cleanup

if.end97:                                         ; preds = %dynamic_debug_setup.exit
  %call98 = tail call fastcc i32 @prepare_coming_module(ptr noundef %retval.0.i335)
  %tobool99.not = icmp eq i32 %call98, 0
  br i1 %tobool99.not, label %if.end101, label %bug_cleanup

if.end101:                                        ; preds = %if.end97
  %361 = ptrtoint ptr %args to i32
  call void @__asan_load4_noabort(i32 %361)
  %362 = load ptr, ptr %args, align 4
  %kp = getelementptr inbounds %struct.module, ptr %retval.0.i335, i32 0, i32 13
  %363 = ptrtoint ptr %kp to i32
  call void @__asan_load4_noabort(i32 %363)
  %364 = load ptr, ptr %kp, align 4
  %num_kp = getelementptr inbounds %struct.module, ptr %retval.0.i335, i32 0, i32 14
  %365 = ptrtoint ptr %num_kp to i32
  call void @__asan_load4_noabort(i32 %365)
  %366 = load i32, ptr %num_kp, align 16
  %call105 = tail call ptr @parse_args(ptr noundef %name28, ptr noundef %362, ptr noundef %364, i32 noundef %366, i16 noundef signext -32768, i16 noundef signext 32767, ptr noundef %retval.0.i335, ptr noundef nonnull @unknown_module_param_cb) #29
  %cmp.i341 = icmp ugt ptr %call105, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i341, label %if.then107, label %if.else

if.then107:                                       ; preds = %if.end101
  %367 = ptrtoint ptr %call105 to i32
  br label %coming_cleanup

if.else:                                          ; preds = %if.end101
  %tobool109.not = icmp eq ptr %call105, null
  br i1 %tobool109.not, label %if.end119, label %do.end113

do.end113:                                        ; preds = %if.else
  %call117 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.82, ptr noundef %name28, ptr noundef nonnull %call105) #37
  br label %if.end119

if.end119:                                        ; preds = %do.end113, %if.else
  %368 = ptrtoint ptr %kp to i32
  call void @__asan_load4_noabort(i32 %368)
  %369 = load ptr, ptr %kp, align 4
  %370 = ptrtoint ptr %num_kp to i32
  call void @__asan_load4_noabort(i32 %370)
  %371 = load i32, ptr %num_kp, align 16
  %call122 = tail call fastcc i32 @mod_sysfs_setup(ptr noundef %retval.0.i335, ptr noundef %info, ptr noundef %369, i32 noundef %371)
  %cmp123 = icmp slt i32 %call122, 0
  br i1 %cmp123, label %coming_cleanup, label %if.end125

if.end125:                                        ; preds = %if.end119
  %and.i342 = and i32 %flags, 4
  %tobool.not.i343 = icmp eq i32 %and.i342, 0
  br i1 %tobool.not.i343, label %if.else.i345, label %free_copy.exit

if.else.i345:                                     ; preds = %if.end125
  %372 = ptrtoint ptr %hdr.i to i32
  call void @__asan_load4_noabort(i32 %372)
  %373 = load ptr, ptr %hdr.i, align 4
  tail call void @vfree(ptr noundef %373) #29
  br label %free_copy.exit

free_copy.exit:                                   ; preds = %if.else.i345, %if.end125
  tail call fastcc void @trace_module_load(ptr noundef %retval.0.i335)
  %call133 = tail call fastcc i32 @do_init_module(ptr noundef %retval.0.i335)
  br label %cleanup

coming_cleanup:                                   ; preds = %if.end119, %if.then107
  %err.0 = phi i32 [ %367, %if.then107 ], [ %call122, %if.end119 ]
  %374 = ptrtoint ptr %retval.0.i335 to i32
  call void @__asan_store4_noabort(i32 %374)
  store i32 2, ptr %retval.0.i335, align 128
  %375 = ptrtoint ptr %kp to i32
  call void @__asan_load4_noabort(i32 %375)
  %376 = load ptr, ptr %kp, align 4
  %377 = ptrtoint ptr %num_kp to i32
  call void @__asan_load4_noabort(i32 %377)
  %378 = load i32, ptr %num_kp, align 16
  tail call void @destroy_params(ptr noundef %376, i32 noundef %378) #29
  %call136 = tail call i32 @blocking_notifier_call_chain(ptr noundef nonnull @module_notify_list, i32 noundef 2, ptr noundef %retval.0.i335) #29
  br label %bug_cleanup

bug_cleanup:                                      ; preds = %coming_cleanup, %if.end97
  %err.1 = phi i32 [ %call98, %if.end97 ], [ %err.0, %coming_cleanup ]
  %379 = ptrtoint ptr %retval.0.i335 to i32
  call void @__asan_store4_noabort(i32 %379)
  store i32 2, ptr %retval.0.i335, align 128
  tail call void @mutex_lock_nested(ptr noundef nonnull @module_mutex, i32 noundef 0) #29
  tail call void @module_bug_cleanup(ptr noundef %retval.0.i335) #29
  tail call void @mutex_unlock(ptr noundef nonnull @module_mutex) #29
  br label %ddebug_cleanup

ddebug_cleanup:                                   ; preds = %bug_cleanup, %dynamic_debug_setup.exit
  %err.2 = phi i32 [ %call94, %dynamic_debug_setup.exit ], [ %err.1, %bug_cleanup ]
  tail call void @ftrace_release_mod(ptr noundef %retval.0.i335) #29
  %380 = ptrtoint ptr %debug to i32
  call void @__asan_load4_noabort(i32 %380)
  %381 = load ptr, ptr %debug, align 4
  %tobool.not.i347 = icmp eq ptr %381, null
  br i1 %tobool.not.i347, label %dynamic_debug_remove.exit, label %if.then.i350

if.then.i350:                                     ; preds = %ddebug_cleanup
  %call.i349 = tail call i32 @ddebug_remove_module(ptr noundef %name28) #29
  br label %dynamic_debug_remove.exit

dynamic_debug_remove.exit:                        ; preds = %if.then.i350, %ddebug_cleanup
  tail call void @synchronize_rcu() #29
  %382 = ptrtoint ptr %args to i32
  call void @__asan_load4_noabort(i32 %382)
  %383 = load ptr, ptr %args, align 4
  tail call void @kfree(ptr noundef %383) #29
  br label %free_arch_cleanup

free_arch_cleanup:                                ; preds = %dynamic_debug_remove.exit, %if.then90
  %err.3 = phi i32 [ %356, %if.then90 ], [ %err.2, %dynamic_debug_remove.exit ]
  tail call void @module_arch_cleanup(ptr noundef %retval.0.i335)
  br label %free_modinfo

free_modinfo:                                     ; preds = %free_arch_cleanup, %if.end82, %if.end78, %if.end71
  %err.4 = phi i32 [ %call76, %if.end71 ], [ %call79, %if.end78 ], [ %call83, %if.end82 ], [ %err.3, %free_arch_cleanup ]
  tail call fastcc void @free_modinfo(ptr noundef %retval.0.i335)
  br label %free_unload

free_unload:                                      ; preds = %free_modinfo, %if.end63
  %err.5 = phi i32 [ %call68, %if.end63 ], [ %err.4, %free_modinfo ]
  tail call fastcc void @module_unload_free(ptr noundef %retval.0.i335)
  br label %unlink_mod

unlink_mod:                                       ; preds = %free_unload, %if.end59
  %err.6 = phi i32 [ %call60, %if.end59 ], [ %err.5, %free_unload ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @module_mutex, i32 noundef 0) #29
  %list = getelementptr inbounds %struct.module, ptr %retval.0.i335, i32 0, i32 1
  %call.i.i352 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %list) #29
  br i1 %call.i.i352, label %if.end.i.i353, label %list_del_rcu.exit

if.end.i.i353:                                    ; preds = %unlink_mod
  %prev.i.i = getelementptr inbounds %struct.module, ptr %retval.0.i335, i32 0, i32 1, i32 1
  %384 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %384)
  %385 = load ptr, ptr %prev.i.i, align 4
  %386 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %386)
  %387 = load ptr, ptr %list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %387, i32 0, i32 1
  %388 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %388)
  store ptr %385, ptr %prev1.i.i.i, align 4
  %389 = ptrtoint ptr %385 to i32
  call void @__asan_store4_noabort(i32 %389)
  store volatile ptr %387, ptr %385, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i353, %unlink_mod
  %prev.i = getelementptr inbounds %struct.module, ptr %retval.0.i335, i32 0, i32 1, i32 1
  %390 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %390)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call fastcc void @mod_tree_remove(ptr noundef %retval.0.i335)
  tail call void @__wake_up(ptr noundef nonnull @module_wq, i32 noundef 3, i32 noundef 0, ptr noundef null) #29
  tail call void @synchronize_rcu() #29
  tail call void @mutex_unlock(ptr noundef nonnull @module_mutex) #29
  br label %free_module

free_module:                                      ; preds = %list_del_rcu.exit, %if.end27
  %err.7 = phi i32 [ %call29, %if.end27 ], [ %err.6, %list_del_rcu.exit ]
  %core_layout = getelementptr inbounds %struct.module, ptr %retval.0.i335, i32 0, i32 25
  %391 = ptrtoint ptr %core_layout to i32
  call void @__asan_load4_noabort(i32 %391)
  %392 = load ptr, ptr %core_layout, align 128
  %size = getelementptr inbounds %struct.module, ptr %retval.0.i335, i32 0, i32 25, i32 1
  %393 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %393)
  %394 = load i32, ptr %size, align 4
  tail call void @lockdep_free_key_range(ptr noundef %392, i32 noundef %394) #29
  tail call fastcc void @module_deallocate(ptr noundef %retval.0.i335)
  br label %free_copy

free_copy:                                        ; preds = %free_module, %if.then25, %check_modstruct_version.exit, %if.then10, %do.end36.i, %do.end.i275, %do.end199.i, %do.end186.i, %do.end171.i, %do.end143.i, %do.end120.i, %do.end105.i, %do.end83.i, %do.end60.i, %do.end42.i, %do.end29.i, %do.end17.i, %do.end7.i, %do.end.i255, %module_sig_check.exit, %module_sig_check.exit.thread362
  %err.8 = phi i32 [ %retval.0.i, %module_sig_check.exit ], [ -1, %if.then10 ], [ %351, %if.then25 ], [ %err.7, %free_module ], [ -8, %check_modstruct_version.exit ], [ -129, %module_sig_check.exit.thread362 ], [ -8, %do.end105.i ], [ -8, %do.end186.i ], [ -8, %do.end199.i ], [ -8, %do.end171.i ], [ -8, %do.end143.i ], [ -8, %do.end120.i ], [ -8, %do.end83.i ], [ -8, %do.end60.i ], [ -8, %do.end42.i ], [ -8, %do.end29.i ], [ -8, %do.end17.i ], [ -8, %do.end7.i ], [ -8, %do.end.i255 ], [ -8, %do.end.i275 ], [ -8, %do.end36.i ]
  %and.i354 = and i32 %flags, 4
  %tobool.not.i355 = icmp eq i32 %and.i354, 0
  br i1 %tobool.not.i355, label %if.else.i357, label %cleanup

if.else.i357:                                     ; preds = %free_copy
  %395 = ptrtoint ptr %hdr.i to i32
  call void @__asan_load4_noabort(i32 %395)
  %396 = load ptr, ptr %hdr.i, align 4
  tail call void @vfree(ptr noundef %396) #29
  br label %cleanup

cleanup:                                          ; preds = %if.else.i357, %free_copy, %free_copy.exit
  %retval.0 = phi i32 [ %call133, %free_copy.exit ], [ %err.8, %free_copy ], [ %err.8, %if.else.i357 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_kernel_load_data(i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__vmalloc(i32 noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_kernel_post_load_data(ptr noundef, i64 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__check_object_size(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_fault(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @should_fail_usercopy() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_from_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @add_unformed_module(ptr noundef %mod) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %__wq_entry = alloca %struct.wait_queue_entry, align 4
  %0 = ptrtoint ptr %mod to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 3, ptr %mod, align 128
  %name = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  br label %again

again:                                            ; preds = %if.end22, %entry
  call void @mutex_lock_nested(ptr noundef nonnull @module_mutex, i32 noundef 0) #29
  %call = call i32 @strlen(ptr noundef %name) #32
  %call3 = call fastcc ptr @find_module_all(ptr noundef %name, i32 noundef %call, i1 noundef zeroext true)
  %cmp.not = icmp eq ptr %call3, null
  br i1 %cmp.not, label %if.end28, label %if.then

if.then:                                          ; preds = %again
  %1 = ptrtoint ptr %call3 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %call3, align 128
  %cmp5.not = icmp eq i32 %2, 0
  br i1 %cmp5.not, label %out, label %if.then6

if.then6:                                         ; preds = %if.then
  call void @mutex_unlock(ptr noundef nonnull @module_mutex) #29
  call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 3849) #29
  %3 = call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task.i, align 8
  %task_state_change.i = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 212
  %7 = ptrtoint ptr %task_state_change.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %task_state_change.i, align 4
  call void @mutex_lock_nested(ptr noundef nonnull @module_mutex, i32 noundef 0) #29
  %call1.i = call i32 @strlen(ptr noundef %name) #31
  %call2.i = call fastcc ptr @find_module_all(ptr noundef %name, i32 noundef %call1.i, i1 noundef zeroext true) #29
  %tobool.not.i = icmp eq ptr %call2.i, null
  br i1 %tobool.not.i, label %finished_loading.exit.thread, label %finished_loading.exit

finished_loading.exit.thread:                     ; preds = %if.then6
  call void @mutex_unlock(ptr noundef nonnull @module_mutex) #29
  br label %if.end22

finished_loading.exit:                            ; preds = %if.then6
  %8 = ptrtoint ptr %call2.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %call2.i, align 128
  %cmp.i = icmp eq i32 %9, 0
  call void @mutex_unlock(ptr noundef nonnull @module_mutex) #29
  br i1 %cmp.i, label %if.end22, label %if.then13

if.then13:                                        ; preds = %finished_loading.exit
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry) #29
  %10 = call ptr @memset(ptr %__wq_entry, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry, i32 noundef 0) #29
  br label %for.cond

for.cond:                                         ; preds = %cleanup, %if.then13
  %call15 = call i32 @prepare_to_wait_event(ptr noundef nonnull @module_wq, ptr noundef nonnull %__wq_entry, i32 noundef 1) #29
  %11 = call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i41 = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i41 to ptr
  %task.i42 = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task.i42 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task.i42, align 8
  %task_state_change.i43 = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 212
  %15 = ptrtoint ptr %task_state_change.i43 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 0, ptr %task_state_change.i43, align 4
  call void @mutex_lock_nested(ptr noundef nonnull @module_mutex, i32 noundef 0) #29
  %call1.i44 = call i32 @strlen(ptr noundef %name) #31
  %call2.i45 = call fastcc ptr @find_module_all(ptr noundef %name, i32 noundef %call1.i44, i1 noundef zeroext true) #29
  %tobool.not.i46 = icmp eq ptr %call2.i45, null
  br i1 %tobool.not.i46, label %finished_loading.exit49.thread, label %finished_loading.exit49

finished_loading.exit49.thread:                   ; preds = %for.cond
  call void @mutex_unlock(ptr noundef nonnull @module_mutex) #29
  br label %for.end

finished_loading.exit49:                          ; preds = %for.cond
  %16 = ptrtoint ptr %call2.i45 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %call2.i45, align 128
  %cmp.i47 = icmp eq i32 %17, 0
  call void @mutex_unlock(ptr noundef nonnull @module_mutex) #29
  br i1 %cmp.i47, label %for.end, label %if.end

if.end:                                           ; preds = %finished_loading.exit49
  %tobool.not = icmp eq i32 %call15, 0
  br i1 %tobool.not, label %cleanup, label %__out

cleanup:                                          ; preds = %if.end
  call void @schedule() #29
  br label %for.cond

for.end:                                          ; preds = %finished_loading.exit49, %finished_loading.exit49.thread
  call void @finish_wait(ptr noundef nonnull @module_wq, ptr noundef nonnull %__wq_entry) #29
  br label %__out

__out:                                            ; preds = %for.end, %if.end
  %__ret14.157 = phi i32 [ 0, %for.end ], [ %call15, %if.end ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry) #29
  br label %if.end22

if.end22:                                         ; preds = %__out, %finished_loading.exit, %finished_loading.exit.thread
  %__ret.0 = phi i32 [ 0, %finished_loading.exit ], [ %__ret14.157, %__out ], [ 0, %finished_loading.exit.thread ]
  %tobool24.not = icmp eq i32 %__ret.0, 0
  br i1 %tobool24.not, label %again, label %out_unlocked

if.end28:                                         ; preds = %again
  %core_layout.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25
  %18 = ptrtoint ptr %core_layout.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %core_layout.i, align 128
  %size.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25, i32 1
  %20 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %size.i, align 4
  %22 = ptrtoint ptr %19 to i32
  %add.i.i = add i32 %21, %22
  %23 = load i32, ptr getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 1), align 8
  %cmp.i.i = icmp ugt i32 %23, %22
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %if.end28
  store i32 %22, ptr getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 1), align 8
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %if.end28
  %24 = load i32, ptr getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 2), align 4
  %cmp1.i.i = icmp ugt i32 %add.i.i, %24
  br i1 %cmp1.i.i, label %if.then2.i.i, label %__mod_update_bounds.exit.i

if.then2.i.i:                                     ; preds = %if.end.i.i
  store i32 %add.i.i, ptr getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 2), align 4
  br label %__mod_update_bounds.exit.i

__mod_update_bounds.exit.i:                       ; preds = %if.then2.i.i, %if.end.i.i
  %size2.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26, i32 1
  %25 = ptrtoint ptr %size2.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %size2.i, align 4
  %tobool.not.i50 = icmp eq i32 %26, 0
  br i1 %tobool.not.i50, label %mod_update_bounds.exit, label %if.then.i

if.then.i:                                        ; preds = %__mod_update_bounds.exit.i
  %init_layout.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26
  %27 = ptrtoint ptr %init_layout.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %init_layout.i, align 16
  %29 = ptrtoint ptr %28 to i32
  %add.i11.i = add i32 %26, %29
  %30 = load i32, ptr getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 1), align 8
  %cmp.i12.i = icmp ugt i32 %30, %29
  br i1 %cmp.i12.i, label %if.then.i13.i, label %if.end.i15.i

if.then.i13.i:                                    ; preds = %if.then.i
  store i32 %29, ptr getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 1), align 8
  br label %if.end.i15.i

if.end.i15.i:                                     ; preds = %if.then.i13.i, %if.then.i
  %31 = load i32, ptr getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 2), align 4
  %cmp1.i14.i = icmp ugt i32 %add.i11.i, %31
  br i1 %cmp1.i14.i, label %if.then2.i16.i, label %mod_update_bounds.exit

if.then2.i16.i:                                   ; preds = %if.end.i15.i
  store i32 %add.i11.i, ptr getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 2), align 4
  br label %mod_update_bounds.exit

mod_update_bounds.exit:                           ; preds = %if.then2.i16.i, %if.end.i15.i, %__mod_update_bounds.exit.i
  %list = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 1
  %32 = load ptr, ptr @modules, align 4
  %call.i.i = call zeroext i1 @__list_add_valid(ptr noundef %list, ptr noundef nonnull @modules, ptr noundef %32) #29
  br i1 %call.i.i, label %if.end.i.i51, label %list_add_rcu.exit

if.end.i.i51:                                     ; preds = %mod_update_bounds.exit
  %33 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %32, ptr %list, align 4
  %prev2.i.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 1, i32 1
  %34 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr @modules, ptr %prev2.i.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !846
  store volatile ptr %list, ptr @modules, align 4
  %prev37.i.i = getelementptr inbounds %struct.list_head, ptr %32, i32 0, i32 1
  %35 = ptrtoint ptr %prev37.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %list, ptr %prev37.i.i, align 4
  br label %list_add_rcu.exit

list_add_rcu.exit:                                ; preds = %if.end.i.i51, %mod_update_bounds.exit
  %mtn.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25, i32 5
  %36 = ptrtoint ptr %mtn.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %mod, ptr %mtn.i, align 4
  %mtn2.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26, i32 5
  %37 = ptrtoint ptr %mtn2.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %mod, ptr %mtn2.i, align 4
  call fastcc void @__mod_tree_insert(ptr noundef %mtn.i) #29
  %38 = ptrtoint ptr %size2.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %size2.i, align 4
  %tobool.not.i53 = icmp eq i32 %39, 0
  br i1 %tobool.not.i53, label %out, label %if.then.i54

if.then.i54:                                      ; preds = %list_add_rcu.exit
  call fastcc void @__mod_tree_insert(ptr noundef %mtn2.i) #29
  br label %out

out:                                              ; preds = %if.then.i54, %list_add_rcu.exit, %if.then
  %err.0 = phi i32 [ 0, %list_add_rcu.exit ], [ 0, %if.then.i54 ], [ -17, %if.then ]
  call void @mutex_unlock(ptr noundef nonnull @module_mutex) #29
  br label %out_unlocked

out_unlocked:                                     ; preds = %out, %if.end22
  %err.1 = phi i32 [ %err.0, %out ], [ %__ret.0, %if.end22 ]
  ret i32 %err.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @percpu_modalloc(ptr noundef %mod, ptr nocapture noundef readonly %info) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %sechdrs = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 4
  %0 = ptrtoint ptr %sechdrs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sechdrs, align 4
  %pcpu = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15, i32 5
  %2 = ptrtoint ptr %pcpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %pcpu, align 4
  %sh_addralign = getelementptr %struct.elf32_shdr, ptr %1, i32 %3, i32 8
  %4 = ptrtoint ptr %sh_addralign to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sh_addralign, align 4
  %sh_size = getelementptr %struct.elf32_shdr, ptr %1, i32 %3, i32 5
  %6 = ptrtoint ptr %sh_size to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sh_size, align 4
  %tobool.not = icmp eq i32 %7, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %cmp = icmp ugt i32 %5, 4096
  br i1 %cmp, label %do.end, label %if.end2

do.end:                                           ; preds = %if.end
  %name = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.190, ptr noundef %name, i32 noundef %5, i32 noundef 4096) #37
  br label %if.end2

if.end2:                                          ; preds = %do.end, %if.end
  %align.0 = phi i32 [ 4096, %do.end ], [ %5, %if.end ]
  %8 = ptrtoint ptr %sh_size to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sh_size, align 4
  %call4 = tail call noalias ptr @__alloc_reserved_percpu(i32 noundef %9, i32 noundef %align.0) #35
  %percpu = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 37
  %10 = ptrtoint ptr %percpu to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %call4, ptr %percpu, align 8
  %tobool6.not = icmp eq ptr %call4, null
  br i1 %tobool6.not, label %do.end10, label %if.end16

do.end10:                                         ; preds = %if.end2
  %name12 = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %11 = ptrtoint ptr %sh_size to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sh_size, align 4
  %call15 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.193, ptr noundef %name12, i32 noundef %12) #37
  br label %cleanup

if.end16:                                         ; preds = %if.end2
  %13 = ptrtoint ptr %sh_size to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sh_size, align 4
  %percpu_size = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 38
  %15 = ptrtoint ptr %percpu_size to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %percpu_size, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %do.end10, %entry
  %retval.0 = phi i32 [ 0, %if.end16 ], [ -12, %do.end10 ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @module_unload_init(ptr noundef %mod) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %refcnt = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 66
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt, i32 noundef 4) #29
  %0 = ptrtoint ptr %refcnt to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile i32 1, ptr %refcnt, align 4
  %source_list = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 63
  %1 = ptrtoint ptr %source_list to i32
  call void @__asan_store4_noabort(i32 %1)
  store volatile ptr %source_list, ptr %source_list, align 4
  %prev.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 63, i32 1
  %2 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %source_list, ptr %prev.i, align 4
  %target_list = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 64
  %3 = ptrtoint ptr %target_list to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile ptr %target_list, ptr %target_list, align 4
  %prev.i2 = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 64, i32 1
  %4 = ptrtoint ptr %prev.i2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %target_list, ptr %prev.i2, align 4
  %call.i.i1 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt, i32 noundef 4) #29
  tail call void @llvm.prefetch.p0(ptr %refcnt, i32 1, i32 3, i32 1) #29
  %5 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt, ptr %refcnt, i32 1, ptr elementtype(i32) %refcnt) #29, !srcloc !790
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @find_module_sections(ptr noundef %mod, ptr noundef %info) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %num_kp = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 14
  %hdr.i.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 2
  %0 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i = getelementptr inbounds %struct.elf32_hdr, ptr %1, i32 0, i32 12
  %2 = ptrtoint ptr %e_shnum.i.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %e_shnum.i.i, align 4
  %conv.i.i = zext i16 %3 to i32
  %cmp14.i.i = icmp ugt i16 %3, 1
  br i1 %cmp14.i.i, label %for.body.lr.ph.i.i, label %section_objs.exit

for.body.lr.ph.i.i:                               ; preds = %entry
  %sechdrs.i.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 4
  %4 = ptrtoint ptr %sechdrs.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sechdrs.i.i, align 4
  %secstrings.i.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i, %for.body.lr.ph.i.i
  %i.015.i.i = phi i32 [ 1, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.inc.i.i ]
  %sh_flags.i.i = getelementptr %struct.elf32_shdr, ptr %5, i32 %i.015.i.i, i32 2
  %6 = ptrtoint ptr %sh_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sh_flags.i.i, align 4
  %and.i.i = and i32 %7, 2
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %for.inc.i.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %arrayidx.i.i = getelementptr %struct.elf32_shdr, ptr %5, i32 %i.015.i.i
  %8 = ptrtoint ptr %secstrings.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %secstrings.i.i, align 4
  %10 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %9, i32 %11
  %call.i.i = tail call i32 @strcmp(ptr noundef %add.ptr.i.i, ptr noundef nonnull dereferenceable(8) @.str.196) #31
  %cmp2.i.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp2.i.i, label %section_objs.exit, label %for.inc.i.i

for.inc.i.i:                                      ; preds = %land.lhs.true.i.i, %for.body.i.i
  %inc.i.i = add nuw nsw i32 %i.015.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, %conv.i.i
  br i1 %exitcond.not.i.i, label %section_objs.exit, label %for.body.i.i

section_objs.exit:                                ; preds = %for.inc.i.i, %land.lhs.true.i.i, %entry
  %retval.2.i.i = phi i32 [ 0, %entry ], [ %i.015.i.i, %land.lhs.true.i.i ], [ 0, %for.inc.i.i ]
  %sechdrs.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 4
  %12 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %sechdrs.i, align 4
  %sh_size.i = getelementptr %struct.elf32_shdr, ptr %13, i32 %retval.2.i.i, i32 5
  %14 = ptrtoint ptr %sh_size.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %sh_size.i, align 4
  %div.i = udiv i32 %15, 20
  %16 = ptrtoint ptr %num_kp to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %div.i, ptr %num_kp, align 4
  %17 = load ptr, ptr %sechdrs.i, align 4
  %sh_addr.i = getelementptr %struct.elf32_shdr, ptr %17, i32 %retval.2.i.i, i32 3
  %18 = ptrtoint ptr %sh_addr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %sh_addr.i, align 4
  %20 = inttoptr i32 %19 to ptr
  %kp = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 13
  %21 = ptrtoint ptr %kp to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %20, ptr %kp, align 4
  %num_syms = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 11
  %22 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i104 = getelementptr inbounds %struct.elf32_hdr, ptr %23, i32 0, i32 12
  %24 = ptrtoint ptr %e_shnum.i.i104 to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %e_shnum.i.i104, align 4
  %conv.i.i105 = zext i16 %25 to i32
  %cmp14.i.i106 = icmp ugt i16 %25, 1
  br i1 %cmp14.i.i106, label %for.body.lr.ph.i.i109, label %section_objs.exit128

for.body.lr.ph.i.i109:                            ; preds = %section_objs.exit
  %26 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %sechdrs.i, align 4
  %secstrings.i.i108 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i114

for.body.i.i114:                                  ; preds = %for.inc.i.i122, %for.body.lr.ph.i.i109
  %i.015.i.i110 = phi i32 [ 1, %for.body.lr.ph.i.i109 ], [ %inc.i.i120, %for.inc.i.i122 ]
  %sh_flags.i.i111 = getelementptr %struct.elf32_shdr, ptr %27, i32 %i.015.i.i110, i32 2
  %28 = ptrtoint ptr %sh_flags.i.i111 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %sh_flags.i.i111, align 4
  %and.i.i112 = and i32 %29, 2
  %tobool.not.i.i113 = icmp eq i32 %and.i.i112, 0
  br i1 %tobool.not.i.i113, label %for.inc.i.i122, label %land.lhs.true.i.i119

land.lhs.true.i.i119:                             ; preds = %for.body.i.i114
  %arrayidx.i.i115 = getelementptr %struct.elf32_shdr, ptr %27, i32 %i.015.i.i110
  %30 = ptrtoint ptr %secstrings.i.i108 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %secstrings.i.i108, align 4
  %32 = ptrtoint ptr %arrayidx.i.i115 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %arrayidx.i.i115, align 4
  %add.ptr.i.i116 = getelementptr i8, ptr %31, i32 %33
  %call.i.i117 = tail call i32 @strcmp(ptr noundef %add.ptr.i.i116, ptr noundef nonnull dereferenceable(10) @.str.197) #31
  %cmp2.i.i118 = icmp eq i32 %call.i.i117, 0
  br i1 %cmp2.i.i118, label %section_objs.exit128, label %for.inc.i.i122

for.inc.i.i122:                                   ; preds = %land.lhs.true.i.i119, %for.body.i.i114
  %inc.i.i120 = add nuw nsw i32 %i.015.i.i110, 1
  %exitcond.not.i.i121 = icmp eq i32 %inc.i.i120, %conv.i.i105
  br i1 %exitcond.not.i.i121, label %section_objs.exit128, label %for.body.i.i114

section_objs.exit128:                             ; preds = %for.inc.i.i122, %land.lhs.true.i.i119, %section_objs.exit
  %retval.2.i.i123 = phi i32 [ 0, %section_objs.exit ], [ %i.015.i.i110, %land.lhs.true.i.i119 ], [ 0, %for.inc.i.i122 ]
  %34 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %sechdrs.i, align 4
  %sh_size.i125 = getelementptr %struct.elf32_shdr, ptr %35, i32 %retval.2.i.i123, i32 5
  %36 = ptrtoint ptr %sh_size.i125 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %sh_size.i125, align 4
  %div.i126 = udiv i32 %37, 12
  %38 = ptrtoint ptr %num_syms to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %div.i126, ptr %num_syms, align 4
  %39 = load ptr, ptr %sechdrs.i, align 4
  %sh_addr.i127 = getelementptr %struct.elf32_shdr, ptr %39, i32 %retval.2.i.i123, i32 3
  %40 = ptrtoint ptr %sh_addr.i127 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %sh_addr.i127, align 4
  %42 = inttoptr i32 %41 to ptr
  %syms = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 9
  %43 = ptrtoint ptr %syms to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %42, ptr %syms, align 4
  %44 = load ptr, ptr %sechdrs.i, align 4
  %45 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i131 = getelementptr inbounds %struct.elf32_hdr, ptr %46, i32 0, i32 12
  %47 = ptrtoint ptr %e_shnum.i.i131 to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %e_shnum.i.i131, align 4
  %conv.i.i132 = zext i16 %48 to i32
  %cmp14.i.i133 = icmp ugt i16 %48, 1
  br i1 %cmp14.i.i133, label %for.body.lr.ph.i.i135, label %section_addr.exit

for.body.lr.ph.i.i135:                            ; preds = %section_objs.exit128
  %secstrings.i.i134 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i140

for.body.i.i140:                                  ; preds = %for.inc.i.i148, %for.body.lr.ph.i.i135
  %i.015.i.i136 = phi i32 [ 1, %for.body.lr.ph.i.i135 ], [ %inc.i.i146, %for.inc.i.i148 ]
  %sh_flags.i.i137 = getelementptr %struct.elf32_shdr, ptr %44, i32 %i.015.i.i136, i32 2
  %49 = ptrtoint ptr %sh_flags.i.i137 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %sh_flags.i.i137, align 4
  %and.i.i138 = and i32 %50, 2
  %tobool.not.i.i139 = icmp eq i32 %and.i.i138, 0
  br i1 %tobool.not.i.i139, label %for.inc.i.i148, label %land.lhs.true.i.i145

land.lhs.true.i.i145:                             ; preds = %for.body.i.i140
  %arrayidx.i.i141 = getelementptr %struct.elf32_shdr, ptr %44, i32 %i.015.i.i136
  %51 = ptrtoint ptr %secstrings.i.i134 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %secstrings.i.i134, align 4
  %53 = ptrtoint ptr %arrayidx.i.i141 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %arrayidx.i.i141, align 4
  %add.ptr.i.i142 = getelementptr i8, ptr %52, i32 %54
  %call.i.i143 = tail call i32 @strcmp(ptr noundef %add.ptr.i.i142, ptr noundef nonnull dereferenceable(10) @.str.198) #31
  %cmp2.i.i144 = icmp eq i32 %call.i.i143, 0
  br i1 %cmp2.i.i144, label %section_addr.exit, label %for.inc.i.i148

for.inc.i.i148:                                   ; preds = %land.lhs.true.i.i145, %for.body.i.i140
  %inc.i.i146 = add nuw nsw i32 %i.015.i.i136, 1
  %exitcond.not.i.i147 = icmp eq i32 %inc.i.i146, %conv.i.i132
  br i1 %exitcond.not.i.i147, label %section_addr.exit, label %for.body.i.i140

section_addr.exit:                                ; preds = %for.inc.i.i148, %land.lhs.true.i.i145, %section_objs.exit128
  %retval.2.i.i149 = phi i32 [ 0, %section_objs.exit128 ], [ %i.015.i.i136, %land.lhs.true.i.i145 ], [ 0, %for.inc.i.i148 ]
  %sh_addr.i150 = getelementptr %struct.elf32_shdr, ptr %44, i32 %retval.2.i.i149, i32 3
  %55 = ptrtoint ptr %sh_addr.i150 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %sh_addr.i150, align 4
  %57 = inttoptr i32 %56 to ptr
  %crcs = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 10
  %58 = ptrtoint ptr %crcs to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %57, ptr %crcs, align 8
  %num_gpl_syms = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 15
  %59 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i152 = getelementptr inbounds %struct.elf32_hdr, ptr %60, i32 0, i32 12
  %61 = ptrtoint ptr %e_shnum.i.i152 to i32
  call void @__asan_load2_noabort(i32 %61)
  %62 = load i16, ptr %e_shnum.i.i152, align 4
  %conv.i.i153 = zext i16 %62 to i32
  %cmp14.i.i154 = icmp ugt i16 %62, 1
  br i1 %cmp14.i.i154, label %for.body.lr.ph.i.i157, label %section_objs.exit176

for.body.lr.ph.i.i157:                            ; preds = %section_addr.exit
  %63 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %sechdrs.i, align 4
  %secstrings.i.i156 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i162

for.body.i.i162:                                  ; preds = %for.inc.i.i170, %for.body.lr.ph.i.i157
  %i.015.i.i158 = phi i32 [ 1, %for.body.lr.ph.i.i157 ], [ %inc.i.i168, %for.inc.i.i170 ]
  %sh_flags.i.i159 = getelementptr %struct.elf32_shdr, ptr %64, i32 %i.015.i.i158, i32 2
  %65 = ptrtoint ptr %sh_flags.i.i159 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %sh_flags.i.i159, align 4
  %and.i.i160 = and i32 %66, 2
  %tobool.not.i.i161 = icmp eq i32 %and.i.i160, 0
  br i1 %tobool.not.i.i161, label %for.inc.i.i170, label %land.lhs.true.i.i167

land.lhs.true.i.i167:                             ; preds = %for.body.i.i162
  %arrayidx.i.i163 = getelementptr %struct.elf32_shdr, ptr %64, i32 %i.015.i.i158
  %67 = ptrtoint ptr %secstrings.i.i156 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %secstrings.i.i156, align 4
  %69 = ptrtoint ptr %arrayidx.i.i163 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %arrayidx.i.i163, align 4
  %add.ptr.i.i164 = getelementptr i8, ptr %68, i32 %70
  %call.i.i165 = tail call i32 @strcmp(ptr noundef %add.ptr.i.i164, ptr noundef nonnull dereferenceable(14) @.str.199) #31
  %cmp2.i.i166 = icmp eq i32 %call.i.i165, 0
  br i1 %cmp2.i.i166, label %section_objs.exit176, label %for.inc.i.i170

for.inc.i.i170:                                   ; preds = %land.lhs.true.i.i167, %for.body.i.i162
  %inc.i.i168 = add nuw nsw i32 %i.015.i.i158, 1
  %exitcond.not.i.i169 = icmp eq i32 %inc.i.i168, %conv.i.i153
  br i1 %exitcond.not.i.i169, label %section_objs.exit176, label %for.body.i.i162

section_objs.exit176:                             ; preds = %for.inc.i.i170, %land.lhs.true.i.i167, %section_addr.exit
  %retval.2.i.i171 = phi i32 [ 0, %section_addr.exit ], [ %i.015.i.i158, %land.lhs.true.i.i167 ], [ 0, %for.inc.i.i170 ]
  %71 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %sechdrs.i, align 4
  %sh_size.i173 = getelementptr %struct.elf32_shdr, ptr %72, i32 %retval.2.i.i171, i32 5
  %73 = ptrtoint ptr %sh_size.i173 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %sh_size.i173, align 4
  %div.i174 = udiv i32 %74, 12
  %75 = ptrtoint ptr %num_gpl_syms to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 %div.i174, ptr %num_gpl_syms, align 4
  %76 = load ptr, ptr %sechdrs.i, align 4
  %sh_addr.i175 = getelementptr %struct.elf32_shdr, ptr %76, i32 %retval.2.i.i171, i32 3
  %77 = ptrtoint ptr %sh_addr.i175 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %sh_addr.i175, align 4
  %79 = inttoptr i32 %78 to ptr
  %gpl_syms = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 16
  %80 = ptrtoint ptr %gpl_syms to i32
  call void @__asan_store4_noabort(i32 %80)
  store ptr %79, ptr %gpl_syms, align 8
  %81 = load ptr, ptr %sechdrs.i, align 4
  %82 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i179 = getelementptr inbounds %struct.elf32_hdr, ptr %83, i32 0, i32 12
  %84 = ptrtoint ptr %e_shnum.i.i179 to i32
  call void @__asan_load2_noabort(i32 %84)
  %85 = load i16, ptr %e_shnum.i.i179, align 4
  %conv.i.i180 = zext i16 %85 to i32
  %cmp14.i.i181 = icmp ugt i16 %85, 1
  br i1 %cmp14.i.i181, label %for.body.lr.ph.i.i183, label %section_addr.exit199

for.body.lr.ph.i.i183:                            ; preds = %section_objs.exit176
  %secstrings.i.i182 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i188

for.body.i.i188:                                  ; preds = %for.inc.i.i196, %for.body.lr.ph.i.i183
  %i.015.i.i184 = phi i32 [ 1, %for.body.lr.ph.i.i183 ], [ %inc.i.i194, %for.inc.i.i196 ]
  %sh_flags.i.i185 = getelementptr %struct.elf32_shdr, ptr %81, i32 %i.015.i.i184, i32 2
  %86 = ptrtoint ptr %sh_flags.i.i185 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %sh_flags.i.i185, align 4
  %and.i.i186 = and i32 %87, 2
  %tobool.not.i.i187 = icmp eq i32 %and.i.i186, 0
  br i1 %tobool.not.i.i187, label %for.inc.i.i196, label %land.lhs.true.i.i193

land.lhs.true.i.i193:                             ; preds = %for.body.i.i188
  %arrayidx.i.i189 = getelementptr %struct.elf32_shdr, ptr %81, i32 %i.015.i.i184
  %88 = ptrtoint ptr %secstrings.i.i182 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %secstrings.i.i182, align 4
  %90 = ptrtoint ptr %arrayidx.i.i189 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %arrayidx.i.i189, align 4
  %add.ptr.i.i190 = getelementptr i8, ptr %89, i32 %91
  %call.i.i191 = tail call i32 @strcmp(ptr noundef %add.ptr.i.i190, ptr noundef nonnull dereferenceable(14) @.str.200) #31
  %cmp2.i.i192 = icmp eq i32 %call.i.i191, 0
  br i1 %cmp2.i.i192, label %section_addr.exit199, label %for.inc.i.i196

for.inc.i.i196:                                   ; preds = %land.lhs.true.i.i193, %for.body.i.i188
  %inc.i.i194 = add nuw nsw i32 %i.015.i.i184, 1
  %exitcond.not.i.i195 = icmp eq i32 %inc.i.i194, %conv.i.i180
  br i1 %exitcond.not.i.i195, label %section_addr.exit199, label %for.body.i.i188

section_addr.exit199:                             ; preds = %for.inc.i.i196, %land.lhs.true.i.i193, %section_objs.exit176
  %retval.2.i.i197 = phi i32 [ 0, %section_objs.exit176 ], [ %i.015.i.i184, %land.lhs.true.i.i193 ], [ 0, %for.inc.i.i196 ]
  %sh_addr.i198 = getelementptr %struct.elf32_shdr, ptr %81, i32 %retval.2.i.i197, i32 3
  %92 = ptrtoint ptr %sh_addr.i198 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %sh_addr.i198, align 4
  %94 = inttoptr i32 %93 to ptr
  %gpl_crcs = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 17
  %95 = ptrtoint ptr %gpl_crcs to i32
  call void @__asan_store4_noabort(i32 %95)
  store ptr %94, ptr %gpl_crcs, align 4
  %num_ctors = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 68
  %96 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i201 = getelementptr inbounds %struct.elf32_hdr, ptr %97, i32 0, i32 12
  %98 = ptrtoint ptr %e_shnum.i.i201 to i32
  call void @__asan_load2_noabort(i32 %98)
  %99 = load i16, ptr %e_shnum.i.i201, align 4
  %conv.i.i202 = zext i16 %99 to i32
  %cmp14.i.i203 = icmp ugt i16 %99, 1
  br i1 %cmp14.i.i203, label %for.body.lr.ph.i.i206, label %section_objs.exit225

for.body.lr.ph.i.i206:                            ; preds = %section_addr.exit199
  %100 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %sechdrs.i, align 4
  %secstrings.i.i205 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i211

for.body.i.i211:                                  ; preds = %for.inc.i.i219, %for.body.lr.ph.i.i206
  %i.015.i.i207 = phi i32 [ 1, %for.body.lr.ph.i.i206 ], [ %inc.i.i217, %for.inc.i.i219 ]
  %sh_flags.i.i208 = getelementptr %struct.elf32_shdr, ptr %101, i32 %i.015.i.i207, i32 2
  %102 = ptrtoint ptr %sh_flags.i.i208 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %sh_flags.i.i208, align 4
  %and.i.i209 = and i32 %103, 2
  %tobool.not.i.i210 = icmp eq i32 %and.i.i209, 0
  br i1 %tobool.not.i.i210, label %for.inc.i.i219, label %land.lhs.true.i.i216

land.lhs.true.i.i216:                             ; preds = %for.body.i.i211
  %arrayidx.i.i212 = getelementptr %struct.elf32_shdr, ptr %101, i32 %i.015.i.i207
  %104 = ptrtoint ptr %secstrings.i.i205 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %secstrings.i.i205, align 4
  %106 = ptrtoint ptr %arrayidx.i.i212 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %arrayidx.i.i212, align 4
  %add.ptr.i.i213 = getelementptr i8, ptr %105, i32 %107
  %call.i.i214 = tail call i32 @strcmp(ptr noundef %add.ptr.i.i213, ptr noundef nonnull dereferenceable(7) @.str.201) #31
  %cmp2.i.i215 = icmp eq i32 %call.i.i214, 0
  br i1 %cmp2.i.i215, label %section_objs.exit225, label %for.inc.i.i219

for.inc.i.i219:                                   ; preds = %land.lhs.true.i.i216, %for.body.i.i211
  %inc.i.i217 = add nuw nsw i32 %i.015.i.i207, 1
  %exitcond.not.i.i218 = icmp eq i32 %inc.i.i217, %conv.i.i202
  br i1 %exitcond.not.i.i218, label %section_objs.exit225, label %for.body.i.i211

section_objs.exit225:                             ; preds = %for.inc.i.i219, %land.lhs.true.i.i216, %section_addr.exit199
  %retval.2.i.i220 = phi i32 [ 0, %section_addr.exit199 ], [ %i.015.i.i207, %land.lhs.true.i.i216 ], [ 0, %for.inc.i.i219 ]
  %108 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %sechdrs.i, align 4
  %sh_size.i222 = getelementptr %struct.elf32_shdr, ptr %109, i32 %retval.2.i.i220, i32 5
  %110 = ptrtoint ptr %sh_size.i222 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %sh_size.i222, align 4
  %div.i223640 = lshr i32 %111, 2
  %112 = ptrtoint ptr %num_ctors to i32
  call void @__asan_store4_noabort(i32 %112)
  store i32 %div.i223640, ptr %num_ctors, align 4
  %113 = load ptr, ptr %sechdrs.i, align 4
  %sh_addr.i224 = getelementptr %struct.elf32_shdr, ptr %113, i32 %retval.2.i.i220, i32 3
  %114 = ptrtoint ptr %sh_addr.i224 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %sh_addr.i224, align 4
  %116 = inttoptr i32 %115 to ptr
  %ctors = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 67
  %117 = ptrtoint ptr %ctors to i32
  call void @__asan_store4_noabort(i32 %117)
  store ptr %116, ptr %ctors, align 8
  %tobool.not = icmp eq i32 %115, 0
  %118 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i227 = getelementptr inbounds %struct.elf32_hdr, ptr %119, i32 0, i32 12
  %120 = ptrtoint ptr %e_shnum.i.i227 to i32
  call void @__asan_load2_noabort(i32 %120)
  %121 = load i16, ptr %e_shnum.i.i227, align 4
  %conv.i.i228 = zext i16 %121 to i32
  %cmp14.i.i229 = icmp ugt i16 %121, 1
  br i1 %tobool.not, label %if.then, label %if.else

if.then:                                          ; preds = %section_objs.exit225
  br i1 %cmp14.i.i229, label %for.body.lr.ph.i.i232, label %section_objs.exit251

for.body.lr.ph.i.i232:                            ; preds = %if.then
  %122 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %sechdrs.i, align 4
  %secstrings.i.i231 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i237

for.body.i.i237:                                  ; preds = %for.inc.i.i245, %for.body.lr.ph.i.i232
  %i.015.i.i233 = phi i32 [ 1, %for.body.lr.ph.i.i232 ], [ %inc.i.i243, %for.inc.i.i245 ]
  %sh_flags.i.i234 = getelementptr %struct.elf32_shdr, ptr %123, i32 %i.015.i.i233, i32 2
  %124 = ptrtoint ptr %sh_flags.i.i234 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %sh_flags.i.i234, align 4
  %and.i.i235 = and i32 %125, 2
  %tobool.not.i.i236 = icmp eq i32 %and.i.i235, 0
  br i1 %tobool.not.i.i236, label %for.inc.i.i245, label %land.lhs.true.i.i242

land.lhs.true.i.i242:                             ; preds = %for.body.i.i237
  %arrayidx.i.i238 = getelementptr %struct.elf32_shdr, ptr %123, i32 %i.015.i.i233
  %126 = ptrtoint ptr %secstrings.i.i231 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %secstrings.i.i231, align 4
  %128 = ptrtoint ptr %arrayidx.i.i238 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %arrayidx.i.i238, align 4
  %add.ptr.i.i239 = getelementptr i8, ptr %127, i32 %129
  %call.i.i240 = tail call i32 @strcmp(ptr noundef %add.ptr.i.i239, ptr noundef nonnull dereferenceable(12) @.str.202) #31
  %cmp2.i.i241 = icmp eq i32 %call.i.i240, 0
  br i1 %cmp2.i.i241, label %section_objs.exit251, label %for.inc.i.i245

for.inc.i.i245:                                   ; preds = %land.lhs.true.i.i242, %for.body.i.i237
  %inc.i.i243 = add nuw nsw i32 %i.015.i.i233, 1
  %exitcond.not.i.i244 = icmp eq i32 %inc.i.i243, %conv.i.i228
  br i1 %exitcond.not.i.i244, label %section_objs.exit251, label %for.body.i.i237

section_objs.exit251:                             ; preds = %for.inc.i.i245, %land.lhs.true.i.i242, %if.then
  %retval.2.i.i246 = phi i32 [ 0, %if.then ], [ %i.015.i.i233, %land.lhs.true.i.i242 ], [ 0, %for.inc.i.i245 ]
  %130 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %sechdrs.i, align 4
  %sh_size.i248 = getelementptr %struct.elf32_shdr, ptr %131, i32 %retval.2.i.i246, i32 5
  %132 = ptrtoint ptr %sh_size.i248 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %sh_size.i248, align 4
  %div.i249652 = lshr i32 %133, 2
  %134 = ptrtoint ptr %num_ctors to i32
  call void @__asan_store4_noabort(i32 %134)
  store i32 %div.i249652, ptr %num_ctors, align 4
  %135 = load ptr, ptr %sechdrs.i, align 4
  %sh_addr.i250 = getelementptr %struct.elf32_shdr, ptr %135, i32 %retval.2.i.i246, i32 3
  %136 = ptrtoint ptr %sh_addr.i250 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %sh_addr.i250, align 4
  %138 = inttoptr i32 %137 to ptr
  %139 = ptrtoint ptr %ctors to i32
  call void @__asan_store4_noabort(i32 %139)
  store ptr %138, ptr %ctors, align 8
  br label %if.end14

if.else:                                          ; preds = %section_objs.exit225
  br i1 %cmp14.i.i229, label %for.body.lr.ph.i, label %if.end14

for.body.lr.ph.i:                                 ; preds = %if.else
  %140 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %sechdrs.i, align 4
  %secstrings.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %i.015.i = phi i32 [ 1, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i ]
  %sh_flags.i = getelementptr %struct.elf32_shdr, ptr %141, i32 %i.015.i, i32 2
  %142 = ptrtoint ptr %sh_flags.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %sh_flags.i, align 4
  %and.i = and i32 %143, 2
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %for.inc.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %arrayidx.i = getelementptr %struct.elf32_shdr, ptr %141, i32 %i.015.i
  %144 = ptrtoint ptr %secstrings.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %secstrings.i, align 4
  %146 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %arrayidx.i, align 4
  %add.ptr.i = getelementptr i8, ptr %145, i32 %147
  %call.i = tail call i32 @strcmp(ptr noundef %add.ptr.i, ptr noundef nonnull dereferenceable(12) @.str.202) #31
  %cmp2.i = icmp eq i32 %call.i, 0
  br i1 %cmp2.i, label %do.end, label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true.i, %for.body.i
  %inc.i = add nuw nsw i32 %i.015.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %conv.i.i228
  br i1 %exitcond.not.i, label %if.end14, label %for.body.i

do.end:                                           ; preds = %land.lhs.true.i
  %name = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %call13 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.203, ptr noundef %name) #37
  br label %return

if.end14:                                         ; preds = %for.inc.i, %if.else, %section_objs.exit251
  %noinstr_text_size = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 40
  %148 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i254 = getelementptr inbounds %struct.elf32_hdr, ptr %149, i32 0, i32 12
  %150 = ptrtoint ptr %e_shnum.i.i254 to i32
  call void @__asan_load2_noabort(i32 %150)
  %151 = load i16, ptr %e_shnum.i.i254, align 4
  %conv.i.i255 = zext i16 %151 to i32
  %cmp14.i.i256 = icmp ugt i16 %151, 1
  br i1 %cmp14.i.i256, label %for.body.lr.ph.i.i259, label %section_objs.exit277

for.body.lr.ph.i.i259:                            ; preds = %if.end14
  %152 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %sechdrs.i, align 4
  %secstrings.i.i258 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i264

for.body.i.i264:                                  ; preds = %for.inc.i.i272, %for.body.lr.ph.i.i259
  %i.015.i.i260 = phi i32 [ 1, %for.body.lr.ph.i.i259 ], [ %inc.i.i270, %for.inc.i.i272 ]
  %sh_flags.i.i261 = getelementptr %struct.elf32_shdr, ptr %153, i32 %i.015.i.i260, i32 2
  %154 = ptrtoint ptr %sh_flags.i.i261 to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %sh_flags.i.i261, align 4
  %and.i.i262 = and i32 %155, 2
  %tobool.not.i.i263 = icmp eq i32 %and.i.i262, 0
  br i1 %tobool.not.i.i263, label %for.inc.i.i272, label %land.lhs.true.i.i269

land.lhs.true.i.i269:                             ; preds = %for.body.i.i264
  %arrayidx.i.i265 = getelementptr %struct.elf32_shdr, ptr %153, i32 %i.015.i.i260
  %156 = ptrtoint ptr %secstrings.i.i258 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %secstrings.i.i258, align 4
  %158 = ptrtoint ptr %arrayidx.i.i265 to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %arrayidx.i.i265, align 4
  %add.ptr.i.i266 = getelementptr i8, ptr %157, i32 %159
  %call.i.i267 = tail call i32 @strcmp(ptr noundef %add.ptr.i.i266, ptr noundef nonnull dereferenceable(14) @.str.205) #31
  %cmp2.i.i268 = icmp eq i32 %call.i.i267, 0
  br i1 %cmp2.i.i268, label %section_objs.exit277, label %for.inc.i.i272

for.inc.i.i272:                                   ; preds = %land.lhs.true.i.i269, %for.body.i.i264
  %inc.i.i270 = add nuw nsw i32 %i.015.i.i260, 1
  %exitcond.not.i.i271 = icmp eq i32 %inc.i.i270, %conv.i.i255
  br i1 %exitcond.not.i.i271, label %section_objs.exit277, label %for.body.i.i264

section_objs.exit277:                             ; preds = %for.inc.i.i272, %land.lhs.true.i.i269, %if.end14
  %retval.2.i.i273 = phi i32 [ 0, %if.end14 ], [ %i.015.i.i260, %land.lhs.true.i.i269 ], [ 0, %for.inc.i.i272 ]
  %160 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %sechdrs.i, align 4
  %sh_size.i275 = getelementptr %struct.elf32_shdr, ptr %161, i32 %retval.2.i.i273, i32 5
  %162 = ptrtoint ptr %sh_size.i275 to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load i32, ptr %sh_size.i275, align 4
  %164 = ptrtoint ptr %noinstr_text_size to i32
  call void @__asan_store4_noabort(i32 %164)
  store i32 %163, ptr %noinstr_text_size, align 4
  %165 = load ptr, ptr %sechdrs.i, align 4
  %sh_addr.i276 = getelementptr %struct.elf32_shdr, ptr %165, i32 %retval.2.i.i273, i32 3
  %166 = ptrtoint ptr %sh_addr.i276 to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load i32, ptr %sh_addr.i276, align 4
  %168 = inttoptr i32 %167 to ptr
  %noinstr_text_start = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 39
  %169 = ptrtoint ptr %noinstr_text_start to i32
  call void @__asan_store4_noabort(i32 %169)
  store ptr %168, ptr %noinstr_text_start, align 16
  %num_tracepoints = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 41
  %170 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i279 = getelementptr inbounds %struct.elf32_hdr, ptr %171, i32 0, i32 12
  %172 = ptrtoint ptr %e_shnum.i.i279 to i32
  call void @__asan_load2_noabort(i32 %172)
  %173 = load i16, ptr %e_shnum.i.i279, align 4
  %conv.i.i280 = zext i16 %173 to i32
  %cmp14.i.i281 = icmp ugt i16 %173, 1
  br i1 %cmp14.i.i281, label %for.body.lr.ph.i.i284, label %section_objs.exit303

for.body.lr.ph.i.i284:                            ; preds = %section_objs.exit277
  %174 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %sechdrs.i, align 4
  %secstrings.i.i283 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i289

for.body.i.i289:                                  ; preds = %for.inc.i.i297, %for.body.lr.ph.i.i284
  %i.015.i.i285 = phi i32 [ 1, %for.body.lr.ph.i.i284 ], [ %inc.i.i295, %for.inc.i.i297 ]
  %sh_flags.i.i286 = getelementptr %struct.elf32_shdr, ptr %175, i32 %i.015.i.i285, i32 2
  %176 = ptrtoint ptr %sh_flags.i.i286 to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load i32, ptr %sh_flags.i.i286, align 4
  %and.i.i287 = and i32 %177, 2
  %tobool.not.i.i288 = icmp eq i32 %and.i.i287, 0
  br i1 %tobool.not.i.i288, label %for.inc.i.i297, label %land.lhs.true.i.i294

land.lhs.true.i.i294:                             ; preds = %for.body.i.i289
  %arrayidx.i.i290 = getelementptr %struct.elf32_shdr, ptr %175, i32 %i.015.i.i285
  %178 = ptrtoint ptr %secstrings.i.i283 to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load ptr, ptr %secstrings.i.i283, align 4
  %180 = ptrtoint ptr %arrayidx.i.i290 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load i32, ptr %arrayidx.i.i290, align 4
  %add.ptr.i.i291 = getelementptr i8, ptr %179, i32 %181
  %call.i.i292 = tail call i32 @strcmp(ptr noundef %add.ptr.i.i291, ptr noundef nonnull dereferenceable(19) @.str.206) #31
  %cmp2.i.i293 = icmp eq i32 %call.i.i292, 0
  br i1 %cmp2.i.i293, label %section_objs.exit303, label %for.inc.i.i297

for.inc.i.i297:                                   ; preds = %land.lhs.true.i.i294, %for.body.i.i289
  %inc.i.i295 = add nuw nsw i32 %i.015.i.i285, 1
  %exitcond.not.i.i296 = icmp eq i32 %inc.i.i295, %conv.i.i280
  br i1 %exitcond.not.i.i296, label %section_objs.exit303, label %for.body.i.i289

section_objs.exit303:                             ; preds = %for.inc.i.i297, %land.lhs.true.i.i294, %section_objs.exit277
  %retval.2.i.i298 = phi i32 [ 0, %section_objs.exit277 ], [ %i.015.i.i285, %land.lhs.true.i.i294 ], [ 0, %for.inc.i.i297 ]
  %182 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %sechdrs.i, align 4
  %sh_size.i300 = getelementptr %struct.elf32_shdr, ptr %183, i32 %retval.2.i.i298, i32 5
  %184 = ptrtoint ptr %sh_size.i300 to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load i32, ptr %sh_size.i300, align 4
  %div.i301641 = lshr i32 %185, 2
  %186 = ptrtoint ptr %num_tracepoints to i32
  call void @__asan_store4_noabort(i32 %186)
  store i32 %div.i301641, ptr %num_tracepoints, align 4
  %187 = load ptr, ptr %sechdrs.i, align 4
  %sh_addr.i302 = getelementptr %struct.elf32_shdr, ptr %187, i32 %retval.2.i.i298, i32 3
  %188 = ptrtoint ptr %sh_addr.i302 to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load i32, ptr %sh_addr.i302, align 4
  %190 = inttoptr i32 %189 to ptr
  %tracepoints_ptrs = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 42
  %191 = ptrtoint ptr %tracepoints_ptrs to i32
  call void @__asan_store4_noabort(i32 %191)
  store ptr %190, ptr %tracepoints_ptrs, align 4
  %num_srcu_structs = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 43
  %192 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i305 = getelementptr inbounds %struct.elf32_hdr, ptr %193, i32 0, i32 12
  %194 = ptrtoint ptr %e_shnum.i.i305 to i32
  call void @__asan_load2_noabort(i32 %194)
  %195 = load i16, ptr %e_shnum.i.i305, align 4
  %conv.i.i306 = zext i16 %195 to i32
  %cmp14.i.i307 = icmp ugt i16 %195, 1
  br i1 %cmp14.i.i307, label %for.body.lr.ph.i.i310, label %section_objs.exit329

for.body.lr.ph.i.i310:                            ; preds = %section_objs.exit303
  %196 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load ptr, ptr %sechdrs.i, align 4
  %secstrings.i.i309 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i315

for.body.i.i315:                                  ; preds = %for.inc.i.i323, %for.body.lr.ph.i.i310
  %i.015.i.i311 = phi i32 [ 1, %for.body.lr.ph.i.i310 ], [ %inc.i.i321, %for.inc.i.i323 ]
  %sh_flags.i.i312 = getelementptr %struct.elf32_shdr, ptr %197, i32 %i.015.i.i311, i32 2
  %198 = ptrtoint ptr %sh_flags.i.i312 to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load i32, ptr %sh_flags.i.i312, align 4
  %and.i.i313 = and i32 %199, 2
  %tobool.not.i.i314 = icmp eq i32 %and.i.i313, 0
  br i1 %tobool.not.i.i314, label %for.inc.i.i323, label %land.lhs.true.i.i320

land.lhs.true.i.i320:                             ; preds = %for.body.i.i315
  %arrayidx.i.i316 = getelementptr %struct.elf32_shdr, ptr %197, i32 %i.015.i.i311
  %200 = ptrtoint ptr %secstrings.i.i309 to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load ptr, ptr %secstrings.i.i309, align 4
  %202 = ptrtoint ptr %arrayidx.i.i316 to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load i32, ptr %arrayidx.i.i316, align 4
  %add.ptr.i.i317 = getelementptr i8, ptr %201, i32 %203
  %call.i.i318 = tail call i32 @strcmp(ptr noundef %add.ptr.i.i317, ptr noundef nonnull dereferenceable(20) @.str.207) #31
  %cmp2.i.i319 = icmp eq i32 %call.i.i318, 0
  br i1 %cmp2.i.i319, label %section_objs.exit329, label %for.inc.i.i323

for.inc.i.i323:                                   ; preds = %land.lhs.true.i.i320, %for.body.i.i315
  %inc.i.i321 = add nuw nsw i32 %i.015.i.i311, 1
  %exitcond.not.i.i322 = icmp eq i32 %inc.i.i321, %conv.i.i306
  br i1 %exitcond.not.i.i322, label %section_objs.exit329, label %for.body.i.i315

section_objs.exit329:                             ; preds = %for.inc.i.i323, %land.lhs.true.i.i320, %section_objs.exit303
  %retval.2.i.i324 = phi i32 [ 0, %section_objs.exit303 ], [ %i.015.i.i311, %land.lhs.true.i.i320 ], [ 0, %for.inc.i.i323 ]
  %204 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load ptr, ptr %sechdrs.i, align 4
  %sh_size.i326 = getelementptr %struct.elf32_shdr, ptr %205, i32 %retval.2.i.i324, i32 5
  %206 = ptrtoint ptr %sh_size.i326 to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %sh_size.i326, align 4
  %div.i327642 = lshr i32 %207, 2
  %208 = ptrtoint ptr %num_srcu_structs to i32
  call void @__asan_store4_noabort(i32 %208)
  store i32 %div.i327642, ptr %num_srcu_structs, align 4
  %209 = load ptr, ptr %sechdrs.i, align 4
  %sh_addr.i328 = getelementptr %struct.elf32_shdr, ptr %209, i32 %retval.2.i.i324, i32 3
  %210 = ptrtoint ptr %sh_addr.i328 to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load i32, ptr %sh_addr.i328, align 4
  %212 = inttoptr i32 %211 to ptr
  %srcu_struct_ptrs = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 44
  %213 = ptrtoint ptr %srcu_struct_ptrs to i32
  call void @__asan_store4_noabort(i32 %213)
  store ptr %212, ptr %srcu_struct_ptrs, align 4
  %num_bpf_raw_events = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 45
  %214 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i331 = getelementptr inbounds %struct.elf32_hdr, ptr %215, i32 0, i32 12
  %216 = ptrtoint ptr %e_shnum.i.i331 to i32
  call void @__asan_load2_noabort(i32 %216)
  %217 = load i16, ptr %e_shnum.i.i331, align 4
  %conv.i.i332 = zext i16 %217 to i32
  %cmp14.i.i333 = icmp ugt i16 %217, 1
  br i1 %cmp14.i.i333, label %for.body.lr.ph.i.i336, label %section_objs.exit355

for.body.lr.ph.i.i336:                            ; preds = %section_objs.exit329
  %218 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load ptr, ptr %sechdrs.i, align 4
  %secstrings.i.i335 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i341

for.body.i.i341:                                  ; preds = %for.inc.i.i349, %for.body.lr.ph.i.i336
  %i.015.i.i337 = phi i32 [ 1, %for.body.lr.ph.i.i336 ], [ %inc.i.i347, %for.inc.i.i349 ]
  %sh_flags.i.i338 = getelementptr %struct.elf32_shdr, ptr %219, i32 %i.015.i.i337, i32 2
  %220 = ptrtoint ptr %sh_flags.i.i338 to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load i32, ptr %sh_flags.i.i338, align 4
  %and.i.i339 = and i32 %221, 2
  %tobool.not.i.i340 = icmp eq i32 %and.i.i339, 0
  br i1 %tobool.not.i.i340, label %for.inc.i.i349, label %land.lhs.true.i.i346

land.lhs.true.i.i346:                             ; preds = %for.body.i.i341
  %arrayidx.i.i342 = getelementptr %struct.elf32_shdr, ptr %219, i32 %i.015.i.i337
  %222 = ptrtoint ptr %secstrings.i.i335 to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load ptr, ptr %secstrings.i.i335, align 4
  %224 = ptrtoint ptr %arrayidx.i.i342 to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load i32, ptr %arrayidx.i.i342, align 4
  %add.ptr.i.i343 = getelementptr i8, ptr %223, i32 %225
  %call.i.i344 = tail call i32 @strcmp(ptr noundef %add.ptr.i.i343, ptr noundef nonnull dereferenceable(17) @.str.208) #31
  %cmp2.i.i345 = icmp eq i32 %call.i.i344, 0
  br i1 %cmp2.i.i345, label %section_objs.exit355, label %for.inc.i.i349

for.inc.i.i349:                                   ; preds = %land.lhs.true.i.i346, %for.body.i.i341
  %inc.i.i347 = add nuw nsw i32 %i.015.i.i337, 1
  %exitcond.not.i.i348 = icmp eq i32 %inc.i.i347, %conv.i.i332
  br i1 %exitcond.not.i.i348, label %section_objs.exit355, label %for.body.i.i341

section_objs.exit355:                             ; preds = %for.inc.i.i349, %land.lhs.true.i.i346, %section_objs.exit329
  %retval.2.i.i350 = phi i32 [ 0, %section_objs.exit329 ], [ %i.015.i.i337, %land.lhs.true.i.i346 ], [ 0, %for.inc.i.i349 ]
  %226 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load ptr, ptr %sechdrs.i, align 4
  %sh_size.i352 = getelementptr %struct.elf32_shdr, ptr %227, i32 %retval.2.i.i350, i32 5
  %228 = ptrtoint ptr %sh_size.i352 to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load i32, ptr %sh_size.i352, align 4
  %div.i353643 = lshr i32 %229, 5
  %230 = ptrtoint ptr %num_bpf_raw_events to i32
  call void @__asan_store4_noabort(i32 %230)
  store i32 %div.i353643, ptr %num_bpf_raw_events, align 4
  %231 = load ptr, ptr %sechdrs.i, align 4
  %sh_addr.i354 = getelementptr %struct.elf32_shdr, ptr %231, i32 %retval.2.i.i350, i32 3
  %232 = ptrtoint ptr %sh_addr.i354 to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load i32, ptr %sh_addr.i354, align 4
  %234 = inttoptr i32 %233 to ptr
  %bpf_raw_events = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 46
  %235 = ptrtoint ptr %bpf_raw_events to i32
  call void @__asan_store4_noabort(i32 %235)
  store ptr %234, ptr %bpf_raw_events, align 4
  %num_jump_entries = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 48
  %236 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i357 = getelementptr inbounds %struct.elf32_hdr, ptr %237, i32 0, i32 12
  %238 = ptrtoint ptr %e_shnum.i.i357 to i32
  call void @__asan_load2_noabort(i32 %238)
  %239 = load i16, ptr %e_shnum.i.i357, align 4
  %conv.i.i358 = zext i16 %239 to i32
  %cmp14.i.i359 = icmp ugt i16 %239, 1
  br i1 %cmp14.i.i359, label %for.body.lr.ph.i.i362, label %section_objs.exit381

for.body.lr.ph.i.i362:                            ; preds = %section_objs.exit355
  %240 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load ptr, ptr %sechdrs.i, align 4
  %secstrings.i.i361 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i367

for.body.i.i367:                                  ; preds = %for.inc.i.i375, %for.body.lr.ph.i.i362
  %i.015.i.i363 = phi i32 [ 1, %for.body.lr.ph.i.i362 ], [ %inc.i.i373, %for.inc.i.i375 ]
  %sh_flags.i.i364 = getelementptr %struct.elf32_shdr, ptr %241, i32 %i.015.i.i363, i32 2
  %242 = ptrtoint ptr %sh_flags.i.i364 to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load i32, ptr %sh_flags.i.i364, align 4
  %and.i.i365 = and i32 %243, 2
  %tobool.not.i.i366 = icmp eq i32 %and.i.i365, 0
  br i1 %tobool.not.i.i366, label %for.inc.i.i375, label %land.lhs.true.i.i372

land.lhs.true.i.i372:                             ; preds = %for.body.i.i367
  %arrayidx.i.i368 = getelementptr %struct.elf32_shdr, ptr %241, i32 %i.015.i.i363
  %244 = ptrtoint ptr %secstrings.i.i361 to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load ptr, ptr %secstrings.i.i361, align 4
  %246 = ptrtoint ptr %arrayidx.i.i368 to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load i32, ptr %arrayidx.i.i368, align 4
  %add.ptr.i.i369 = getelementptr i8, ptr %245, i32 %247
  %call.i.i370 = tail call i32 @strcmp(ptr noundef %add.ptr.i.i369, ptr noundef nonnull dereferenceable(13) @.str.150) #31
  %cmp2.i.i371 = icmp eq i32 %call.i.i370, 0
  br i1 %cmp2.i.i371, label %section_objs.exit381, label %for.inc.i.i375

for.inc.i.i375:                                   ; preds = %land.lhs.true.i.i372, %for.body.i.i367
  %inc.i.i373 = add nuw nsw i32 %i.015.i.i363, 1
  %exitcond.not.i.i374 = icmp eq i32 %inc.i.i373, %conv.i.i358
  br i1 %exitcond.not.i.i374, label %section_objs.exit381, label %for.body.i.i367

section_objs.exit381:                             ; preds = %for.inc.i.i375, %land.lhs.true.i.i372, %section_objs.exit355
  %retval.2.i.i376 = phi i32 [ 0, %section_objs.exit355 ], [ %i.015.i.i363, %land.lhs.true.i.i372 ], [ 0, %for.inc.i.i375 ]
  %248 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load ptr, ptr %sechdrs.i, align 4
  %sh_size.i378 = getelementptr %struct.elf32_shdr, ptr %249, i32 %retval.2.i.i376, i32 5
  %250 = ptrtoint ptr %sh_size.i378 to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load i32, ptr %sh_size.i378, align 4
  %div.i379 = udiv i32 %251, 12
  %252 = ptrtoint ptr %num_jump_entries to i32
  call void @__asan_store4_noabort(i32 %252)
  store i32 %div.i379, ptr %num_jump_entries, align 4
  %253 = load ptr, ptr %sechdrs.i, align 4
  %sh_addr.i380 = getelementptr %struct.elf32_shdr, ptr %253, i32 %retval.2.i.i376, i32 3
  %254 = ptrtoint ptr %sh_addr.i380 to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load i32, ptr %sh_addr.i380, align 4
  %256 = inttoptr i32 %255 to ptr
  %jump_entries = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 47
  %257 = ptrtoint ptr %jump_entries to i32
  call void @__asan_store4_noabort(i32 %257)
  store ptr %256, ptr %jump_entries, align 16
  %num_trace_events = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 52
  %258 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i383 = getelementptr inbounds %struct.elf32_hdr, ptr %259, i32 0, i32 12
  %260 = ptrtoint ptr %e_shnum.i.i383 to i32
  call void @__asan_load2_noabort(i32 %260)
  %261 = load i16, ptr %e_shnum.i.i383, align 4
  %conv.i.i384 = zext i16 %261 to i32
  %cmp14.i.i385 = icmp ugt i16 %261, 1
  br i1 %cmp14.i.i385, label %for.body.lr.ph.i.i388, label %section_objs.exit407

for.body.lr.ph.i.i388:                            ; preds = %section_objs.exit381
  %262 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load ptr, ptr %sechdrs.i, align 4
  %secstrings.i.i387 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i393

for.body.i.i393:                                  ; preds = %for.inc.i.i401, %for.body.lr.ph.i.i388
  %i.015.i.i389 = phi i32 [ 1, %for.body.lr.ph.i.i388 ], [ %inc.i.i399, %for.inc.i.i401 ]
  %sh_flags.i.i390 = getelementptr %struct.elf32_shdr, ptr %263, i32 %i.015.i.i389, i32 2
  %264 = ptrtoint ptr %sh_flags.i.i390 to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load i32, ptr %sh_flags.i.i390, align 4
  %and.i.i391 = and i32 %265, 2
  %tobool.not.i.i392 = icmp eq i32 %and.i.i391, 0
  br i1 %tobool.not.i.i392, label %for.inc.i.i401, label %land.lhs.true.i.i398

land.lhs.true.i.i398:                             ; preds = %for.body.i.i393
  %arrayidx.i.i394 = getelementptr %struct.elf32_shdr, ptr %263, i32 %i.015.i.i389
  %266 = ptrtoint ptr %secstrings.i.i387 to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load ptr, ptr %secstrings.i.i387, align 4
  %268 = ptrtoint ptr %arrayidx.i.i394 to i32
  call void @__asan_load4_noabort(i32 %268)
  %269 = load i32, ptr %arrayidx.i.i394, align 4
  %add.ptr.i.i395 = getelementptr i8, ptr %267, i32 %269
  %call.i.i396 = tail call i32 @strcmp(ptr noundef %add.ptr.i.i395, ptr noundef nonnull dereferenceable(15) @.str.209) #31
  %cmp2.i.i397 = icmp eq i32 %call.i.i396, 0
  br i1 %cmp2.i.i397, label %section_objs.exit407, label %for.inc.i.i401

for.inc.i.i401:                                   ; preds = %land.lhs.true.i.i398, %for.body.i.i393
  %inc.i.i399 = add nuw nsw i32 %i.015.i.i389, 1
  %exitcond.not.i.i400 = icmp eq i32 %inc.i.i399, %conv.i.i384
  br i1 %exitcond.not.i.i400, label %section_objs.exit407, label %for.body.i.i393

section_objs.exit407:                             ; preds = %for.inc.i.i401, %land.lhs.true.i.i398, %section_objs.exit381
  %retval.2.i.i402 = phi i32 [ 0, %section_objs.exit381 ], [ %i.015.i.i389, %land.lhs.true.i.i398 ], [ 0, %for.inc.i.i401 ]
  %270 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %270)
  %271 = load ptr, ptr %sechdrs.i, align 4
  %sh_size.i404 = getelementptr %struct.elf32_shdr, ptr %271, i32 %retval.2.i.i402, i32 5
  %272 = ptrtoint ptr %sh_size.i404 to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load i32, ptr %sh_size.i404, align 4
  %div.i405644 = lshr i32 %273, 2
  %274 = ptrtoint ptr %num_trace_events to i32
  call void @__asan_store4_noabort(i32 %274)
  store i32 %div.i405644, ptr %num_trace_events, align 4
  %275 = load ptr, ptr %sechdrs.i, align 4
  %sh_addr.i406 = getelementptr %struct.elf32_shdr, ptr %275, i32 %retval.2.i.i402, i32 3
  %276 = ptrtoint ptr %sh_addr.i406 to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load i32, ptr %sh_addr.i406, align 4
  %278 = inttoptr i32 %277 to ptr
  %trace_events = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 51
  %279 = ptrtoint ptr %trace_events to i32
  call void @__asan_store4_noabort(i32 %279)
  store ptr %278, ptr %trace_events, align 128
  %num_trace_evals = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 54
  %280 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i409 = getelementptr inbounds %struct.elf32_hdr, ptr %281, i32 0, i32 12
  %282 = ptrtoint ptr %e_shnum.i.i409 to i32
  call void @__asan_load2_noabort(i32 %282)
  %283 = load i16, ptr %e_shnum.i.i409, align 4
  %conv.i.i410 = zext i16 %283 to i32
  %cmp14.i.i411 = icmp ugt i16 %283, 1
  br i1 %cmp14.i.i411, label %for.body.lr.ph.i.i414, label %section_objs.exit433

for.body.lr.ph.i.i414:                            ; preds = %section_objs.exit407
  %284 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load ptr, ptr %sechdrs.i, align 4
  %secstrings.i.i413 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i419

for.body.i.i419:                                  ; preds = %for.inc.i.i427, %for.body.lr.ph.i.i414
  %i.015.i.i415 = phi i32 [ 1, %for.body.lr.ph.i.i414 ], [ %inc.i.i425, %for.inc.i.i427 ]
  %sh_flags.i.i416 = getelementptr %struct.elf32_shdr, ptr %285, i32 %i.015.i.i415, i32 2
  %286 = ptrtoint ptr %sh_flags.i.i416 to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load i32, ptr %sh_flags.i.i416, align 4
  %and.i.i417 = and i32 %287, 2
  %tobool.not.i.i418 = icmp eq i32 %and.i.i417, 0
  br i1 %tobool.not.i.i418, label %for.inc.i.i427, label %land.lhs.true.i.i424

land.lhs.true.i.i424:                             ; preds = %for.body.i.i419
  %arrayidx.i.i420 = getelementptr %struct.elf32_shdr, ptr %285, i32 %i.015.i.i415
  %288 = ptrtoint ptr %secstrings.i.i413 to i32
  call void @__asan_load4_noabort(i32 %288)
  %289 = load ptr, ptr %secstrings.i.i413, align 4
  %290 = ptrtoint ptr %arrayidx.i.i420 to i32
  call void @__asan_load4_noabort(i32 %290)
  %291 = load i32, ptr %arrayidx.i.i420, align 4
  %add.ptr.i.i421 = getelementptr i8, ptr %289, i32 %291
  %call.i.i422 = tail call i32 @strcmp(ptr noundef %add.ptr.i.i421, ptr noundef nonnull dereferenceable(17) @.str.210) #31
  %cmp2.i.i423 = icmp eq i32 %call.i.i422, 0
  br i1 %cmp2.i.i423, label %section_objs.exit433, label %for.inc.i.i427

for.inc.i.i427:                                   ; preds = %land.lhs.true.i.i424, %for.body.i.i419
  %inc.i.i425 = add nuw nsw i32 %i.015.i.i415, 1
  %exitcond.not.i.i426 = icmp eq i32 %inc.i.i425, %conv.i.i410
  br i1 %exitcond.not.i.i426, label %section_objs.exit433, label %for.body.i.i419

section_objs.exit433:                             ; preds = %for.inc.i.i427, %land.lhs.true.i.i424, %section_objs.exit407
  %retval.2.i.i428 = phi i32 [ 0, %section_objs.exit407 ], [ %i.015.i.i415, %land.lhs.true.i.i424 ], [ 0, %for.inc.i.i427 ]
  %292 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load ptr, ptr %sechdrs.i, align 4
  %sh_size.i430 = getelementptr %struct.elf32_shdr, ptr %293, i32 %retval.2.i.i428, i32 5
  %294 = ptrtoint ptr %sh_size.i430 to i32
  call void @__asan_load4_noabort(i32 %294)
  %295 = load i32, ptr %sh_size.i430, align 4
  %div.i431645 = lshr i32 %295, 2
  %296 = ptrtoint ptr %num_trace_evals to i32
  call void @__asan_store4_noabort(i32 %296)
  store i32 %div.i431645, ptr %num_trace_evals, align 4
  %297 = load ptr, ptr %sechdrs.i, align 4
  %sh_addr.i432 = getelementptr %struct.elf32_shdr, ptr %297, i32 %retval.2.i.i428, i32 3
  %298 = ptrtoint ptr %sh_addr.i432 to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load i32, ptr %sh_addr.i432, align 4
  %300 = inttoptr i32 %299 to ptr
  %trace_evals = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 53
  %301 = ptrtoint ptr %trace_evals to i32
  call void @__asan_store4_noabort(i32 %301)
  store ptr %300, ptr %trace_evals, align 8
  %num_trace_bprintk_fmt = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 49
  %302 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i435 = getelementptr inbounds %struct.elf32_hdr, ptr %303, i32 0, i32 12
  %304 = ptrtoint ptr %e_shnum.i.i435 to i32
  call void @__asan_load2_noabort(i32 %304)
  %305 = load i16, ptr %e_shnum.i.i435, align 4
  %conv.i.i436 = zext i16 %305 to i32
  %cmp14.i.i437 = icmp ugt i16 %305, 1
  br i1 %cmp14.i.i437, label %for.body.lr.ph.i.i440, label %section_objs.exit459

for.body.lr.ph.i.i440:                            ; preds = %section_objs.exit433
  %306 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %306)
  %307 = load ptr, ptr %sechdrs.i, align 4
  %secstrings.i.i439 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i445

for.body.i.i445:                                  ; preds = %for.inc.i.i453, %for.body.lr.ph.i.i440
  %i.015.i.i441 = phi i32 [ 1, %for.body.lr.ph.i.i440 ], [ %inc.i.i451, %for.inc.i.i453 ]
  %sh_flags.i.i442 = getelementptr %struct.elf32_shdr, ptr %307, i32 %i.015.i.i441, i32 2
  %308 = ptrtoint ptr %sh_flags.i.i442 to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load i32, ptr %sh_flags.i.i442, align 4
  %and.i.i443 = and i32 %309, 2
  %tobool.not.i.i444 = icmp eq i32 %and.i.i443, 0
  br i1 %tobool.not.i.i444, label %for.inc.i.i453, label %land.lhs.true.i.i450

land.lhs.true.i.i450:                             ; preds = %for.body.i.i445
  %arrayidx.i.i446 = getelementptr %struct.elf32_shdr, ptr %307, i32 %i.015.i.i441
  %310 = ptrtoint ptr %secstrings.i.i439 to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load ptr, ptr %secstrings.i.i439, align 4
  %312 = ptrtoint ptr %arrayidx.i.i446 to i32
  call void @__asan_load4_noabort(i32 %312)
  %313 = load i32, ptr %arrayidx.i.i446, align 4
  %add.ptr.i.i447 = getelementptr i8, ptr %311, i32 %313
  %call.i.i448 = tail call i32 @strcmp(ptr noundef %add.ptr.i.i447, ptr noundef nonnull dereferenceable(19) @.str.211) #31
  %cmp2.i.i449 = icmp eq i32 %call.i.i448, 0
  br i1 %cmp2.i.i449, label %section_objs.exit459, label %for.inc.i.i453

for.inc.i.i453:                                   ; preds = %land.lhs.true.i.i450, %for.body.i.i445
  %inc.i.i451 = add nuw nsw i32 %i.015.i.i441, 1
  %exitcond.not.i.i452 = icmp eq i32 %inc.i.i451, %conv.i.i436
  br i1 %exitcond.not.i.i452, label %section_objs.exit459, label %for.body.i.i445

section_objs.exit459:                             ; preds = %for.inc.i.i453, %land.lhs.true.i.i450, %section_objs.exit433
  %retval.2.i.i454 = phi i32 [ 0, %section_objs.exit433 ], [ %i.015.i.i441, %land.lhs.true.i.i450 ], [ 0, %for.inc.i.i453 ]
  %314 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %314)
  %315 = load ptr, ptr %sechdrs.i, align 4
  %sh_size.i456 = getelementptr %struct.elf32_shdr, ptr %315, i32 %retval.2.i.i454, i32 5
  %316 = ptrtoint ptr %sh_size.i456 to i32
  call void @__asan_load4_noabort(i32 %316)
  %317 = load i32, ptr %sh_size.i456, align 4
  %div.i457646 = lshr i32 %317, 2
  %318 = ptrtoint ptr %num_trace_bprintk_fmt to i32
  call void @__asan_store4_noabort(i32 %318)
  store i32 %div.i457646, ptr %num_trace_bprintk_fmt, align 4
  %319 = load ptr, ptr %sechdrs.i, align 4
  %sh_addr.i458 = getelementptr %struct.elf32_shdr, ptr %319, i32 %retval.2.i.i454, i32 3
  %320 = ptrtoint ptr %sh_addr.i458 to i32
  call void @__asan_load4_noabort(i32 %320)
  %321 = load i32, ptr %sh_addr.i458, align 4
  %322 = inttoptr i32 %321 to ptr
  %trace_bprintk_fmt_start = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 50
  %323 = ptrtoint ptr %trace_bprintk_fmt_start to i32
  call void @__asan_store4_noabort(i32 %323)
  store ptr %322, ptr %trace_bprintk_fmt_start, align 4
  %num_ftrace_callsites = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 55
  %324 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %324)
  %325 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i461 = getelementptr inbounds %struct.elf32_hdr, ptr %325, i32 0, i32 12
  %326 = ptrtoint ptr %e_shnum.i.i461 to i32
  call void @__asan_load2_noabort(i32 %326)
  %327 = load i16, ptr %e_shnum.i.i461, align 4
  %conv.i.i462 = zext i16 %327 to i32
  %cmp14.i.i463 = icmp ugt i16 %327, 1
  br i1 %cmp14.i.i463, label %for.body.lr.ph.i.i466, label %section_objs.exit485

for.body.lr.ph.i.i466:                            ; preds = %section_objs.exit459
  %328 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %328)
  %329 = load ptr, ptr %sechdrs.i, align 4
  %secstrings.i.i465 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i471

for.body.i.i471:                                  ; preds = %for.inc.i.i479, %for.body.lr.ph.i.i466
  %i.015.i.i467 = phi i32 [ 1, %for.body.lr.ph.i.i466 ], [ %inc.i.i477, %for.inc.i.i479 ]
  %sh_flags.i.i468 = getelementptr %struct.elf32_shdr, ptr %329, i32 %i.015.i.i467, i32 2
  %330 = ptrtoint ptr %sh_flags.i.i468 to i32
  call void @__asan_load4_noabort(i32 %330)
  %331 = load i32, ptr %sh_flags.i.i468, align 4
  %and.i.i469 = and i32 %331, 2
  %tobool.not.i.i470 = icmp eq i32 %and.i.i469, 0
  br i1 %tobool.not.i.i470, label %for.inc.i.i479, label %land.lhs.true.i.i476

land.lhs.true.i.i476:                             ; preds = %for.body.i.i471
  %arrayidx.i.i472 = getelementptr %struct.elf32_shdr, ptr %329, i32 %i.015.i.i467
  %332 = ptrtoint ptr %secstrings.i.i465 to i32
  call void @__asan_load4_noabort(i32 %332)
  %333 = load ptr, ptr %secstrings.i.i465, align 4
  %334 = ptrtoint ptr %arrayidx.i.i472 to i32
  call void @__asan_load4_noabort(i32 %334)
  %335 = load i32, ptr %arrayidx.i.i472, align 4
  %add.ptr.i.i473 = getelementptr i8, ptr %333, i32 %335
  %call.i.i474 = tail call i32 @strcmp(ptr noundef %add.ptr.i.i473, ptr noundef nonnull dereferenceable(13) @.str.212) #31
  %cmp2.i.i475 = icmp eq i32 %call.i.i474, 0
  br i1 %cmp2.i.i475, label %section_objs.exit485, label %for.inc.i.i479

for.inc.i.i479:                                   ; preds = %land.lhs.true.i.i476, %for.body.i.i471
  %inc.i.i477 = add nuw nsw i32 %i.015.i.i467, 1
  %exitcond.not.i.i478 = icmp eq i32 %inc.i.i477, %conv.i.i462
  br i1 %exitcond.not.i.i478, label %section_objs.exit485, label %for.body.i.i471

section_objs.exit485:                             ; preds = %for.inc.i.i479, %land.lhs.true.i.i476, %section_objs.exit459
  %retval.2.i.i480 = phi i32 [ 0, %section_objs.exit459 ], [ %i.015.i.i467, %land.lhs.true.i.i476 ], [ 0, %for.inc.i.i479 ]
  %336 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %336)
  %337 = load ptr, ptr %sechdrs.i, align 4
  %sh_size.i482 = getelementptr %struct.elf32_shdr, ptr %337, i32 %retval.2.i.i480, i32 5
  %338 = ptrtoint ptr %sh_size.i482 to i32
  call void @__asan_load4_noabort(i32 %338)
  %339 = load i32, ptr %sh_size.i482, align 4
  %div.i483647 = lshr i32 %339, 2
  %340 = ptrtoint ptr %num_ftrace_callsites to i32
  call void @__asan_store4_noabort(i32 %340)
  store i32 %div.i483647, ptr %num_ftrace_callsites, align 4
  %341 = load ptr, ptr %sechdrs.i, align 4
  %sh_addr.i484 = getelementptr %struct.elf32_shdr, ptr %341, i32 %retval.2.i.i480, i32 3
  %342 = ptrtoint ptr %sh_addr.i484 to i32
  call void @__asan_load4_noabort(i32 %342)
  %343 = load i32, ptr %sh_addr.i484, align 4
  %344 = inttoptr i32 %343 to ptr
  %ftrace_callsites = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 56
  %345 = ptrtoint ptr %ftrace_callsites to i32
  call void @__asan_store4_noabort(i32 %345)
  store ptr %344, ptr %ftrace_callsites, align 4
  %kprobes_text_size = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 58
  %346 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %346)
  %347 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i487 = getelementptr inbounds %struct.elf32_hdr, ptr %347, i32 0, i32 12
  %348 = ptrtoint ptr %e_shnum.i.i487 to i32
  call void @__asan_load2_noabort(i32 %348)
  %349 = load i16, ptr %e_shnum.i.i487, align 4
  %conv.i.i488 = zext i16 %349 to i32
  %cmp14.i.i489 = icmp ugt i16 %349, 1
  br i1 %cmp14.i.i489, label %for.body.lr.ph.i.i492, label %section_objs.exit510

for.body.lr.ph.i.i492:                            ; preds = %section_objs.exit485
  %350 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %350)
  %351 = load ptr, ptr %sechdrs.i, align 4
  %secstrings.i.i491 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i497

for.body.i.i497:                                  ; preds = %for.inc.i.i505, %for.body.lr.ph.i.i492
  %i.015.i.i493 = phi i32 [ 1, %for.body.lr.ph.i.i492 ], [ %inc.i.i503, %for.inc.i.i505 ]
  %sh_flags.i.i494 = getelementptr %struct.elf32_shdr, ptr %351, i32 %i.015.i.i493, i32 2
  %352 = ptrtoint ptr %sh_flags.i.i494 to i32
  call void @__asan_load4_noabort(i32 %352)
  %353 = load i32, ptr %sh_flags.i.i494, align 4
  %and.i.i495 = and i32 %353, 2
  %tobool.not.i.i496 = icmp eq i32 %and.i.i495, 0
  br i1 %tobool.not.i.i496, label %for.inc.i.i505, label %land.lhs.true.i.i502

land.lhs.true.i.i502:                             ; preds = %for.body.i.i497
  %arrayidx.i.i498 = getelementptr %struct.elf32_shdr, ptr %351, i32 %i.015.i.i493
  %354 = ptrtoint ptr %secstrings.i.i491 to i32
  call void @__asan_load4_noabort(i32 %354)
  %355 = load ptr, ptr %secstrings.i.i491, align 4
  %356 = ptrtoint ptr %arrayidx.i.i498 to i32
  call void @__asan_load4_noabort(i32 %356)
  %357 = load i32, ptr %arrayidx.i.i498, align 4
  %add.ptr.i.i499 = getelementptr i8, ptr %355, i32 %357
  %call.i.i500 = tail call i32 @strcmp(ptr noundef %add.ptr.i.i499, ptr noundef nonnull dereferenceable(14) @.str.213) #31
  %cmp2.i.i501 = icmp eq i32 %call.i.i500, 0
  br i1 %cmp2.i.i501, label %section_objs.exit510, label %for.inc.i.i505

for.inc.i.i505:                                   ; preds = %land.lhs.true.i.i502, %for.body.i.i497
  %inc.i.i503 = add nuw nsw i32 %i.015.i.i493, 1
  %exitcond.not.i.i504 = icmp eq i32 %inc.i.i503, %conv.i.i488
  br i1 %exitcond.not.i.i504, label %section_objs.exit510, label %for.body.i.i497

section_objs.exit510:                             ; preds = %for.inc.i.i505, %land.lhs.true.i.i502, %section_objs.exit485
  %retval.2.i.i506 = phi i32 [ 0, %section_objs.exit485 ], [ %i.015.i.i493, %land.lhs.true.i.i502 ], [ 0, %for.inc.i.i505 ]
  %358 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %358)
  %359 = load ptr, ptr %sechdrs.i, align 4
  %sh_size.i508 = getelementptr %struct.elf32_shdr, ptr %359, i32 %retval.2.i.i506, i32 5
  %360 = ptrtoint ptr %sh_size.i508 to i32
  call void @__asan_load4_noabort(i32 %360)
  %361 = load i32, ptr %sh_size.i508, align 4
  %362 = ptrtoint ptr %kprobes_text_size to i32
  call void @__asan_store4_noabort(i32 %362)
  store i32 %361, ptr %kprobes_text_size, align 4
  %363 = load ptr, ptr %sechdrs.i, align 4
  %sh_addr.i509 = getelementptr %struct.elf32_shdr, ptr %363, i32 %retval.2.i.i506, i32 3
  %364 = ptrtoint ptr %sh_addr.i509 to i32
  call void @__asan_load4_noabort(i32 %364)
  %365 = load i32, ptr %sh_addr.i509, align 4
  %366 = inttoptr i32 %365 to ptr
  %kprobes_text_start = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 57
  %367 = ptrtoint ptr %kprobes_text_start to i32
  call void @__asan_store4_noabort(i32 %367)
  store ptr %366, ptr %kprobes_text_start, align 8
  %num_kprobe_blacklist = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 60
  %368 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %368)
  %369 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i512 = getelementptr inbounds %struct.elf32_hdr, ptr %369, i32 0, i32 12
  %370 = ptrtoint ptr %e_shnum.i.i512 to i32
  call void @__asan_load2_noabort(i32 %370)
  %371 = load i16, ptr %e_shnum.i.i512, align 4
  %conv.i.i513 = zext i16 %371 to i32
  %cmp14.i.i514 = icmp ugt i16 %371, 1
  br i1 %cmp14.i.i514, label %for.body.lr.ph.i.i517, label %section_objs.exit536

for.body.lr.ph.i.i517:                            ; preds = %section_objs.exit510
  %372 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %372)
  %373 = load ptr, ptr %sechdrs.i, align 4
  %secstrings.i.i516 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i522

for.body.i.i522:                                  ; preds = %for.inc.i.i530, %for.body.lr.ph.i.i517
  %i.015.i.i518 = phi i32 [ 1, %for.body.lr.ph.i.i517 ], [ %inc.i.i528, %for.inc.i.i530 ]
  %sh_flags.i.i519 = getelementptr %struct.elf32_shdr, ptr %373, i32 %i.015.i.i518, i32 2
  %374 = ptrtoint ptr %sh_flags.i.i519 to i32
  call void @__asan_load4_noabort(i32 %374)
  %375 = load i32, ptr %sh_flags.i.i519, align 4
  %and.i.i520 = and i32 %375, 2
  %tobool.not.i.i521 = icmp eq i32 %and.i.i520, 0
  br i1 %tobool.not.i.i521, label %for.inc.i.i530, label %land.lhs.true.i.i527

land.lhs.true.i.i527:                             ; preds = %for.body.i.i522
  %arrayidx.i.i523 = getelementptr %struct.elf32_shdr, ptr %373, i32 %i.015.i.i518
  %376 = ptrtoint ptr %secstrings.i.i516 to i32
  call void @__asan_load4_noabort(i32 %376)
  %377 = load ptr, ptr %secstrings.i.i516, align 4
  %378 = ptrtoint ptr %arrayidx.i.i523 to i32
  call void @__asan_load4_noabort(i32 %378)
  %379 = load i32, ptr %arrayidx.i.i523, align 4
  %add.ptr.i.i524 = getelementptr i8, ptr %377, i32 %379
  %call.i.i525 = tail call i32 @strcmp(ptr noundef %add.ptr.i.i524, ptr noundef nonnull dereferenceable(18) @.str.214) #31
  %cmp2.i.i526 = icmp eq i32 %call.i.i525, 0
  br i1 %cmp2.i.i526, label %section_objs.exit536, label %for.inc.i.i530

for.inc.i.i530:                                   ; preds = %land.lhs.true.i.i527, %for.body.i.i522
  %inc.i.i528 = add nuw nsw i32 %i.015.i.i518, 1
  %exitcond.not.i.i529 = icmp eq i32 %inc.i.i528, %conv.i.i513
  br i1 %exitcond.not.i.i529, label %section_objs.exit536, label %for.body.i.i522

section_objs.exit536:                             ; preds = %for.inc.i.i530, %land.lhs.true.i.i527, %section_objs.exit510
  %retval.2.i.i531 = phi i32 [ 0, %section_objs.exit510 ], [ %i.015.i.i518, %land.lhs.true.i.i527 ], [ 0, %for.inc.i.i530 ]
  %380 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %380)
  %381 = load ptr, ptr %sechdrs.i, align 4
  %sh_size.i533 = getelementptr %struct.elf32_shdr, ptr %381, i32 %retval.2.i.i531, i32 5
  %382 = ptrtoint ptr %sh_size.i533 to i32
  call void @__asan_load4_noabort(i32 %382)
  %383 = load i32, ptr %sh_size.i533, align 4
  %div.i534648 = lshr i32 %383, 2
  %384 = ptrtoint ptr %num_kprobe_blacklist to i32
  call void @__asan_store4_noabort(i32 %384)
  store i32 %div.i534648, ptr %num_kprobe_blacklist, align 4
  %385 = load ptr, ptr %sechdrs.i, align 4
  %sh_addr.i535 = getelementptr %struct.elf32_shdr, ptr %385, i32 %retval.2.i.i531, i32 3
  %386 = ptrtoint ptr %sh_addr.i535 to i32
  call void @__asan_load4_noabort(i32 %386)
  %387 = load i32, ptr %sh_addr.i535, align 4
  %388 = inttoptr i32 %387 to ptr
  %kprobe_blacklist = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 59
  %389 = ptrtoint ptr %kprobe_blacklist to i32
  call void @__asan_store4_noabort(i32 %389)
  store ptr %388, ptr %kprobe_blacklist, align 32
  %printk_index_size = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 61
  %390 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %390)
  %391 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i538 = getelementptr inbounds %struct.elf32_hdr, ptr %391, i32 0, i32 12
  %392 = ptrtoint ptr %e_shnum.i.i538 to i32
  call void @__asan_load2_noabort(i32 %392)
  %393 = load i16, ptr %e_shnum.i.i538, align 4
  %conv.i.i539 = zext i16 %393 to i32
  %cmp14.i.i540 = icmp ugt i16 %393, 1
  br i1 %cmp14.i.i540, label %for.body.lr.ph.i.i543, label %section_objs.exit562

for.body.lr.ph.i.i543:                            ; preds = %section_objs.exit536
  %394 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %394)
  %395 = load ptr, ptr %sechdrs.i, align 4
  %secstrings.i.i542 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i548

for.body.i.i548:                                  ; preds = %for.inc.i.i556, %for.body.lr.ph.i.i543
  %i.015.i.i544 = phi i32 [ 1, %for.body.lr.ph.i.i543 ], [ %inc.i.i554, %for.inc.i.i556 ]
  %sh_flags.i.i545 = getelementptr %struct.elf32_shdr, ptr %395, i32 %i.015.i.i544, i32 2
  %396 = ptrtoint ptr %sh_flags.i.i545 to i32
  call void @__asan_load4_noabort(i32 %396)
  %397 = load i32, ptr %sh_flags.i.i545, align 4
  %and.i.i546 = and i32 %397, 2
  %tobool.not.i.i547 = icmp eq i32 %and.i.i546, 0
  br i1 %tobool.not.i.i547, label %for.inc.i.i556, label %land.lhs.true.i.i553

land.lhs.true.i.i553:                             ; preds = %for.body.i.i548
  %arrayidx.i.i549 = getelementptr %struct.elf32_shdr, ptr %395, i32 %i.015.i.i544
  %398 = ptrtoint ptr %secstrings.i.i542 to i32
  call void @__asan_load4_noabort(i32 %398)
  %399 = load ptr, ptr %secstrings.i.i542, align 4
  %400 = ptrtoint ptr %arrayidx.i.i549 to i32
  call void @__asan_load4_noabort(i32 %400)
  %401 = load i32, ptr %arrayidx.i.i549, align 4
  %add.ptr.i.i550 = getelementptr i8, ptr %399, i32 %401
  %call.i.i551 = tail call i32 @strcmp(ptr noundef %add.ptr.i.i550, ptr noundef nonnull dereferenceable(14) @.str.215) #31
  %cmp2.i.i552 = icmp eq i32 %call.i.i551, 0
  br i1 %cmp2.i.i552, label %section_objs.exit562, label %for.inc.i.i556

for.inc.i.i556:                                   ; preds = %land.lhs.true.i.i553, %for.body.i.i548
  %inc.i.i554 = add nuw nsw i32 %i.015.i.i544, 1
  %exitcond.not.i.i555 = icmp eq i32 %inc.i.i554, %conv.i.i539
  br i1 %exitcond.not.i.i555, label %section_objs.exit562, label %for.body.i.i548

section_objs.exit562:                             ; preds = %for.inc.i.i556, %land.lhs.true.i.i553, %section_objs.exit536
  %retval.2.i.i557 = phi i32 [ 0, %section_objs.exit536 ], [ %i.015.i.i544, %land.lhs.true.i.i553 ], [ 0, %for.inc.i.i556 ]
  %402 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %402)
  %403 = load ptr, ptr %sechdrs.i, align 4
  %sh_size.i559 = getelementptr %struct.elf32_shdr, ptr %403, i32 %retval.2.i.i557, i32 5
  %404 = ptrtoint ptr %sh_size.i559 to i32
  call void @__asan_load4_noabort(i32 %404)
  %405 = load i32, ptr %sh_size.i559, align 4
  %div.i560649 = lshr i32 %405, 2
  %406 = ptrtoint ptr %printk_index_size to i32
  call void @__asan_store4_noabort(i32 %406)
  store i32 %div.i560649, ptr %printk_index_size, align 4
  %407 = load ptr, ptr %sechdrs.i, align 4
  %sh_addr.i561 = getelementptr %struct.elf32_shdr, ptr %407, i32 %retval.2.i.i557, i32 3
  %408 = ptrtoint ptr %sh_addr.i561 to i32
  call void @__asan_load4_noabort(i32 %408)
  %409 = load i32, ptr %sh_addr.i561, align 4
  %410 = inttoptr i32 %409 to ptr
  %printk_index_start = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 62
  %411 = ptrtoint ptr %printk_index_start to i32
  call void @__asan_store4_noabort(i32 %411)
  store ptr %410, ptr %printk_index_start, align 4
  %num_exentries = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 21
  %412 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %412)
  %413 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i564 = getelementptr inbounds %struct.elf32_hdr, ptr %413, i32 0, i32 12
  %414 = ptrtoint ptr %e_shnum.i.i564 to i32
  call void @__asan_load2_noabort(i32 %414)
  %415 = load i16, ptr %e_shnum.i.i564, align 4
  %conv.i.i565 = zext i16 %415 to i32
  %cmp14.i.i566 = icmp ugt i16 %415, 1
  br i1 %cmp14.i.i566, label %for.body.lr.ph.i.i569, label %section_objs.exit588

for.body.lr.ph.i.i569:                            ; preds = %section_objs.exit562
  %416 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %416)
  %417 = load ptr, ptr %sechdrs.i, align 4
  %secstrings.i.i568 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i574

for.body.i.i574:                                  ; preds = %for.inc.i.i582, %for.body.lr.ph.i.i569
  %i.015.i.i570 = phi i32 [ 1, %for.body.lr.ph.i.i569 ], [ %inc.i.i580, %for.inc.i.i582 ]
  %sh_flags.i.i571 = getelementptr %struct.elf32_shdr, ptr %417, i32 %i.015.i.i570, i32 2
  %418 = ptrtoint ptr %sh_flags.i.i571 to i32
  call void @__asan_load4_noabort(i32 %418)
  %419 = load i32, ptr %sh_flags.i.i571, align 4
  %and.i.i572 = and i32 %419, 2
  %tobool.not.i.i573 = icmp eq i32 %and.i.i572, 0
  br i1 %tobool.not.i.i573, label %for.inc.i.i582, label %land.lhs.true.i.i579

land.lhs.true.i.i579:                             ; preds = %for.body.i.i574
  %arrayidx.i.i575 = getelementptr %struct.elf32_shdr, ptr %417, i32 %i.015.i.i570
  %420 = ptrtoint ptr %secstrings.i.i568 to i32
  call void @__asan_load4_noabort(i32 %420)
  %421 = load ptr, ptr %secstrings.i.i568, align 4
  %422 = ptrtoint ptr %arrayidx.i.i575 to i32
  call void @__asan_load4_noabort(i32 %422)
  %423 = load i32, ptr %arrayidx.i.i575, align 4
  %add.ptr.i.i576 = getelementptr i8, ptr %421, i32 %423
  %call.i.i577 = tail call i32 @strcmp(ptr noundef %add.ptr.i.i576, ptr noundef nonnull dereferenceable(11) @.str.216) #31
  %cmp2.i.i578 = icmp eq i32 %call.i.i577, 0
  br i1 %cmp2.i.i578, label %section_objs.exit588, label %for.inc.i.i582

for.inc.i.i582:                                   ; preds = %land.lhs.true.i.i579, %for.body.i.i574
  %inc.i.i580 = add nuw nsw i32 %i.015.i.i570, 1
  %exitcond.not.i.i581 = icmp eq i32 %inc.i.i580, %conv.i.i565
  br i1 %exitcond.not.i.i581, label %section_objs.exit588, label %for.body.i.i574

section_objs.exit588:                             ; preds = %for.inc.i.i582, %land.lhs.true.i.i579, %section_objs.exit562
  %retval.2.i.i583 = phi i32 [ 0, %section_objs.exit562 ], [ %i.015.i.i570, %land.lhs.true.i.i579 ], [ 0, %for.inc.i.i582 ]
  %424 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %424)
  %425 = load ptr, ptr %sechdrs.i, align 4
  %sh_size.i585 = getelementptr %struct.elf32_shdr, ptr %425, i32 %retval.2.i.i583, i32 5
  %426 = ptrtoint ptr %sh_size.i585 to i32
  call void @__asan_load4_noabort(i32 %426)
  %427 = load i32, ptr %sh_size.i585, align 4
  %div.i586650 = lshr i32 %427, 3
  %428 = ptrtoint ptr %num_exentries to i32
  call void @__asan_store4_noabort(i32 %428)
  store i32 %div.i586650, ptr %num_exentries, align 4
  %429 = load ptr, ptr %sechdrs.i, align 4
  %sh_addr.i587 = getelementptr %struct.elf32_shdr, ptr %429, i32 %retval.2.i.i583, i32 3
  %430 = ptrtoint ptr %sh_addr.i587 to i32
  call void @__asan_load4_noabort(i32 %430)
  %431 = load i32, ptr %sh_addr.i587, align 4
  %432 = inttoptr i32 %431 to ptr
  %extable = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 22
  %433 = ptrtoint ptr %extable to i32
  call void @__asan_store4_noabort(i32 %433)
  store ptr %432, ptr %extable, align 8
  %434 = load ptr, ptr %sechdrs.i, align 4
  %435 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %435)
  %436 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i591 = getelementptr inbounds %struct.elf32_hdr, ptr %436, i32 0, i32 12
  %437 = ptrtoint ptr %e_shnum.i.i591 to i32
  call void @__asan_load2_noabort(i32 %437)
  %438 = load i16, ptr %e_shnum.i.i591, align 4
  %conv.i.i592 = zext i16 %438 to i32
  %cmp14.i.i593 = icmp ugt i16 %438, 1
  br i1 %cmp14.i.i593, label %for.body.lr.ph.i.i595, label %section_addr.exit611

for.body.lr.ph.i.i595:                            ; preds = %section_objs.exit588
  %secstrings.i.i594 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i600

for.body.i.i600:                                  ; preds = %for.inc.i.i608, %for.body.lr.ph.i.i595
  %i.015.i.i596 = phi i32 [ 1, %for.body.lr.ph.i.i595 ], [ %inc.i.i606, %for.inc.i.i608 ]
  %sh_flags.i.i597 = getelementptr %struct.elf32_shdr, ptr %434, i32 %i.015.i.i596, i32 2
  %439 = ptrtoint ptr %sh_flags.i.i597 to i32
  call void @__asan_load4_noabort(i32 %439)
  %440 = load i32, ptr %sh_flags.i.i597, align 4
  %and.i.i598 = and i32 %440, 2
  %tobool.not.i.i599 = icmp eq i32 %and.i.i598, 0
  br i1 %tobool.not.i.i599, label %for.inc.i.i608, label %land.lhs.true.i.i605

land.lhs.true.i.i605:                             ; preds = %for.body.i.i600
  %arrayidx.i.i601 = getelementptr %struct.elf32_shdr, ptr %434, i32 %i.015.i.i596
  %441 = ptrtoint ptr %secstrings.i.i594 to i32
  call void @__asan_load4_noabort(i32 %441)
  %442 = load ptr, ptr %secstrings.i.i594, align 4
  %443 = ptrtoint ptr %arrayidx.i.i601 to i32
  call void @__asan_load4_noabort(i32 %443)
  %444 = load i32, ptr %arrayidx.i.i601, align 4
  %add.ptr.i.i602 = getelementptr i8, ptr %442, i32 %444
  %call.i.i603 = tail call i32 @strcmp(ptr noundef %add.ptr.i.i602, ptr noundef nonnull dereferenceable(10) @.str.217) #31
  %cmp2.i.i604 = icmp eq i32 %call.i.i603, 0
  br i1 %cmp2.i.i604, label %section_addr.exit611, label %for.inc.i.i608

for.inc.i.i608:                                   ; preds = %land.lhs.true.i.i605, %for.body.i.i600
  %inc.i.i606 = add nuw nsw i32 %i.015.i.i596, 1
  %exitcond.not.i.i607 = icmp eq i32 %inc.i.i606, %conv.i.i592
  br i1 %exitcond.not.i.i607, label %section_addr.exit611, label %for.body.i.i600

section_addr.exit611:                             ; preds = %for.inc.i.i608, %land.lhs.true.i.i605, %section_objs.exit588
  %retval.2.i.i609 = phi i32 [ 0, %section_objs.exit588 ], [ %i.015.i.i596, %land.lhs.true.i.i605 ], [ 0, %for.inc.i.i608 ]
  %sh_addr.i610 = getelementptr %struct.elf32_shdr, ptr %434, i32 %retval.2.i.i609, i32 3
  %445 = ptrtoint ptr %sh_addr.i610 to i32
  call void @__asan_load4_noabort(i32 %445)
  %446 = load i32, ptr %sh_addr.i610, align 4
  %tobool29.not = icmp eq i32 %446, 0
  br i1 %tobool29.not, label %if.end37, label %do.end32

do.end32:                                         ; preds = %section_addr.exit611
  %name34 = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %call36 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.219, ptr noundef %name34) #37
  br label %if.end37

if.end37:                                         ; preds = %do.end32, %section_addr.exit611
  %num_debug = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 12
  %447 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %447)
  %448 = load ptr, ptr %hdr.i.i, align 4
  %e_shnum.i.i613 = getelementptr inbounds %struct.elf32_hdr, ptr %448, i32 0, i32 12
  %449 = ptrtoint ptr %e_shnum.i.i613 to i32
  call void @__asan_load2_noabort(i32 %449)
  %450 = load i16, ptr %e_shnum.i.i613, align 4
  %conv.i.i614 = zext i16 %450 to i32
  %cmp14.i.i615 = icmp ugt i16 %450, 1
  br i1 %cmp14.i.i615, label %for.body.lr.ph.i.i618, label %section_objs.exit637

for.body.lr.ph.i.i618:                            ; preds = %if.end37
  %451 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %451)
  %452 = load ptr, ptr %sechdrs.i, align 4
  %secstrings.i.i617 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body.i.i623

for.body.i.i623:                                  ; preds = %for.inc.i.i631, %for.body.lr.ph.i.i618
  %i.015.i.i619 = phi i32 [ 1, %for.body.lr.ph.i.i618 ], [ %inc.i.i629, %for.inc.i.i631 ]
  %sh_flags.i.i620 = getelementptr %struct.elf32_shdr, ptr %452, i32 %i.015.i.i619, i32 2
  %453 = ptrtoint ptr %sh_flags.i.i620 to i32
  call void @__asan_load4_noabort(i32 %453)
  %454 = load i32, ptr %sh_flags.i.i620, align 4
  %and.i.i621 = and i32 %454, 2
  %tobool.not.i.i622 = icmp eq i32 %and.i.i621, 0
  br i1 %tobool.not.i.i622, label %for.inc.i.i631, label %land.lhs.true.i.i628

land.lhs.true.i.i628:                             ; preds = %for.body.i.i623
  %arrayidx.i.i624 = getelementptr %struct.elf32_shdr, ptr %452, i32 %i.015.i.i619
  %455 = ptrtoint ptr %secstrings.i.i617 to i32
  call void @__asan_load4_noabort(i32 %455)
  %456 = load ptr, ptr %secstrings.i.i617, align 4
  %457 = ptrtoint ptr %arrayidx.i.i624 to i32
  call void @__asan_load4_noabort(i32 %457)
  %458 = load i32, ptr %arrayidx.i.i624, align 4
  %add.ptr.i.i625 = getelementptr i8, ptr %456, i32 %458
  %call.i.i626 = tail call i32 @strcmp(ptr noundef %add.ptr.i.i625, ptr noundef nonnull dereferenceable(9) @.str.221) #31
  %cmp2.i.i627 = icmp eq i32 %call.i.i626, 0
  br i1 %cmp2.i.i627, label %section_objs.exit637, label %for.inc.i.i631

for.inc.i.i631:                                   ; preds = %land.lhs.true.i.i628, %for.body.i.i623
  %inc.i.i629 = add nuw nsw i32 %i.015.i.i619, 1
  %exitcond.not.i.i630 = icmp eq i32 %inc.i.i629, %conv.i.i614
  br i1 %exitcond.not.i.i630, label %section_objs.exit637, label %for.body.i.i623

section_objs.exit637:                             ; preds = %for.inc.i.i631, %land.lhs.true.i.i628, %if.end37
  %retval.2.i.i632 = phi i32 [ 0, %if.end37 ], [ %i.015.i.i619, %land.lhs.true.i.i628 ], [ 0, %for.inc.i.i631 ]
  %459 = ptrtoint ptr %sechdrs.i to i32
  call void @__asan_load4_noabort(i32 %459)
  %460 = load ptr, ptr %sechdrs.i, align 4
  %sh_size.i634 = getelementptr %struct.elf32_shdr, ptr %460, i32 %retval.2.i.i632, i32 5
  %461 = ptrtoint ptr %sh_size.i634 to i32
  call void @__asan_load4_noabort(i32 %461)
  %462 = load i32, ptr %sh_size.i634, align 4
  %div.i635651 = lshr i32 %462, 5
  %463 = ptrtoint ptr %num_debug to i32
  call void @__asan_store4_noabort(i32 %463)
  store i32 %div.i635651, ptr %num_debug, align 4
  %sh_addr.i636 = getelementptr %struct.elf32_shdr, ptr %460, i32 %retval.2.i.i632, i32 3
  %464 = ptrtoint ptr %sh_addr.i636 to i32
  call void @__asan_load4_noabort(i32 %464)
  %465 = load i32, ptr %sh_addr.i636, align 4
  %466 = inttoptr i32 %465 to ptr
  %debug = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 11
  %467 = ptrtoint ptr %debug to i32
  call void @__asan_store4_noabort(i32 %467)
  store ptr %466, ptr %debug, align 4
  br label %return

return:                                           ; preds = %section_objs.exit637, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ 0, %section_objs.exit637 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @check_module_license_and_versions(ptr noundef %mod) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @test_taint(i32 noundef 0) #29
  %name = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %call1 = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(12) @.str.222) #32
  %cmp = icmp eq i32 %call1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @add_taint(i32 noundef 0, i32 noundef 1) #29
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call4 = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(13) @.str.223) #32
  %cmp5 = icmp eq i32 %call4, 0
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end
  tail call void @add_taint(i32 noundef 0, i32 noundef 1) #29
  %taints.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 28
  tail call void @_set_bit(i32 noundef 0, ptr noundef %taints.i) #29
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end
  %call10 = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(4) @.str.224) #32
  %cmp11 = icmp eq i32 %call10, 0
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end7
  tail call void @add_taint(i32 noundef 0, i32 noundef 1) #29
  %taints.i1 = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 28
  tail call void @_set_bit(i32 noundef 0, ptr noundef %taints.i1) #29
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %if.end7
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %if.end20

land.lhs.true:                                    ; preds = %if.end13
  %call14 = tail call i32 @test_taint(i32 noundef 0) #29
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.end20, label %do.end

do.end:                                           ; preds = %land.lhs.true
  %call19 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.225, ptr noundef %name) #37
  br label %if.end20

if.end20:                                         ; preds = %do.end, %land.lhs.true, %if.end13
  %num_syms = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 11
  %0 = ptrtoint ptr %num_syms to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_syms, align 4
  %tobool21.not = icmp eq i32 %1, 0
  br i1 %tobool21.not, label %lor.lhs.false, label %land.lhs.true22

land.lhs.true22:                                  ; preds = %if.end20
  %crcs = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 10
  %2 = ptrtoint ptr %crcs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %crcs, align 8
  %tobool23.not = icmp eq ptr %3, null
  br i1 %tobool23.not, label %if.then27, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true22, %if.end20
  %num_gpl_syms = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 15
  %4 = ptrtoint ptr %num_gpl_syms to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_gpl_syms, align 4
  %tobool24.not = icmp eq i32 %5, 0
  br i1 %tobool24.not, label %cleanup, label %land.lhs.true25

land.lhs.true25:                                  ; preds = %lor.lhs.false
  %gpl_crcs = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 17
  %6 = ptrtoint ptr %gpl_crcs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %gpl_crcs, align 4
  %tobool26.not = icmp eq ptr %7, null
  br i1 %tobool26.not, label %if.then27, label %cleanup

if.then27:                                        ; preds = %land.lhs.true25, %land.lhs.true22
  %call.i = tail call i32 @test_taint(i32 noundef 1) #29
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %do.end.i, label %try_to_force_load.exit

do.end.i:                                         ; preds = %if.then27
  %call1.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.147, ptr noundef %name, ptr noundef nonnull @.str.227) #37
  br label %try_to_force_load.exit

try_to_force_load.exit:                           ; preds = %do.end.i, %if.then27
  tail call void @add_taint(i32 noundef 1, i32 noundef 1) #29
  %taints.i.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 28
  tail call void @_set_bit(i32 noundef 1, ptr noundef %taints.i.i) #29
  br label %cleanup

cleanup:                                          ; preds = %try_to_force_load.exit, %land.lhs.true25, %lor.lhs.false
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @setup_modinfo(ptr noundef %mod, ptr nocapture noundef readonly %info) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %sechdrs.i.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 4
  %info1.i.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15, i32 4
  %hdr.i.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc, %entry
  %0 = phi ptr [ @module_uevent, %entry ], [ %21, %for.inc ]
  %i.012 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %setup = getelementptr inbounds %struct.module_attribute, ptr %0, i32 0, i32 3
  %1 = ptrtoint ptr %setup to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %setup, align 4
  %tobool1.not = icmp eq ptr %2, null
  br i1 %tobool1.not, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %0, align 4
  %call.i.i = tail call i32 @strlen(ptr noundef %4) #31
  %5 = ptrtoint ptr %sechdrs.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %sechdrs.i.i, align 4
  %7 = ptrtoint ptr %info1.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %info1.i.i, align 4
  %9 = ptrtoint ptr %hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %hdr.i.i, align 4
  %sh_offset.i.i = getelementptr %struct.elf32_shdr, ptr %6, i32 %8, i32 4
  %11 = ptrtoint ptr %sh_offset.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sh_offset.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %10, i32 %12
  %tobool3.not56.i.i = icmp eq ptr %add.ptr.i.i, null
  br i1 %tobool3.not56.i.i, label %get_modinfo.exit, label %for.body.i.preheader.i

for.body.i.preheader.i:                           ; preds = %if.then
  %sh_size.i.i = getelementptr %struct.elf32_shdr, ptr %6, i32 %8, i32 5
  %13 = ptrtoint ptr %sh_size.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sh_size.i.i, align 4
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %next_string.exit46.i.i, %for.body.i.preheader.i
  %p.058.i.i = phi ptr [ %incdec.ptr5.i37.i.i, %next_string.exit46.i.i ], [ %add.ptr.i.i, %for.body.i.preheader.i ]
  %size.457.i.i = phi i32 [ %dec6.i42.i.i, %next_string.exit46.i.i ], [ %14, %for.body.i.preheader.i ]
  %call4.i.i = tail call i32 @strncmp(ptr noundef nonnull %p.058.i.i, ptr noundef %4, i32 noundef %call.i.i) #29
  %cmp.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %cmp.i.i, label %land.lhs.true.i.i, label %while.cond.i32.i.i.preheader

while.cond.i32.i.i.preheader:                     ; preds = %land.lhs.true.i.i, %for.body.i.i
  br label %while.cond.i32.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %arrayidx5.i.i = getelementptr i8, ptr %p.058.i.i, i32 %call.i.i
  %15 = ptrtoint ptr %arrayidx5.i.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %arrayidx5.i.i, align 1
  %cmp6.i.i = icmp eq i8 %16, 61
  br i1 %cmp6.i.i, label %if.then8.i.i, label %while.cond.i32.i.i.preheader

if.then8.i.i:                                     ; preds = %land.lhs.true.i.i
  %arrayidx5.i.i.le = getelementptr i8, ptr %p.058.i.i, i32 1
  %add.ptr10.i.i = getelementptr i8, ptr %arrayidx5.i.i.le, i32 %call.i.i
  br label %get_modinfo.exit

while.cond.i32.i.i:                               ; preds = %while.body.i36.i.i, %while.cond.i32.i.i.preheader
  %size.5.i.i = phi i32 [ %dec.i34.i.i, %while.body.i36.i.i ], [ %size.457.i.i, %while.cond.i32.i.i.preheader ]
  %string.addr.0.i30.i.i = phi ptr [ %incdec.ptr.i33.i.i, %while.body.i36.i.i ], [ %p.058.i.i, %while.cond.i32.i.i.preheader ]
  %17 = ptrtoint ptr %string.addr.0.i30.i.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %string.addr.0.i30.i.i, align 1
  %tobool.not.i31.i.i = icmp eq i8 %18, 0
  br i1 %tobool.not.i31.i.i, label %while.body4.i44.i.i, label %while.body.i36.i.i

while.body.i36.i.i:                               ; preds = %while.cond.i32.i.i
  %incdec.ptr.i33.i.i = getelementptr i8, ptr %string.addr.0.i30.i.i, i32 1
  %dec.i34.i.i = add i32 %size.5.i.i, -1
  %cmp.i35.i.i = icmp ult i32 %size.5.i.i, 2
  br i1 %cmp.i35.i.i, label %get_modinfo.exit, label %while.cond.i32.i.i

while.cond1thread-pre-split.i40.i.i:              ; preds = %while.body4.i44.i.i
  %dec6.i42.i.i = add i32 %size.6.i.i, -1
  %incdec.ptr5.i37.i.i = getelementptr i8, ptr %string.addr.118.i41.i.i, i32 1
  %19 = ptrtoint ptr %incdec.ptr5.i37.i.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %.pr.i38.i.i = load i8, ptr %incdec.ptr5.i37.i.i, align 1
  %tobool3.not.i39.i.i = icmp eq i8 %.pr.i38.i.i, 0
  br i1 %tobool3.not.i39.i.i, label %while.body4.i44.i.i, label %next_string.exit46.i.i

while.body4.i44.i.i:                              ; preds = %while.cond1thread-pre-split.i40.i.i, %while.cond.i32.i.i
  %size.6.i.i = phi i32 [ %dec6.i42.i.i, %while.cond1thread-pre-split.i40.i.i ], [ %size.5.i.i, %while.cond.i32.i.i ]
  %string.addr.118.i41.i.i = phi ptr [ %incdec.ptr5.i37.i.i, %while.cond1thread-pre-split.i40.i.i ], [ %string.addr.0.i30.i.i, %while.cond.i32.i.i ]
  %cmp7.i43.i.i = icmp ult i32 %size.6.i.i, 2
  br i1 %cmp7.i43.i.i, label %get_modinfo.exit, label %while.cond1thread-pre-split.i40.i.i

next_string.exit46.i.i:                           ; preds = %while.cond1thread-pre-split.i40.i.i
  %tobool3.not.i.i = icmp eq ptr %incdec.ptr5.i37.i.i, null
  br i1 %tobool3.not.i.i, label %get_modinfo.exit, label %for.body.i.i

get_modinfo.exit:                                 ; preds = %next_string.exit46.i.i, %while.body4.i44.i.i, %while.body.i36.i.i, %if.then8.i.i, %if.then
  %retval.0.i.i = phi ptr [ %add.ptr10.i.i, %if.then8.i.i ], [ null, %if.then ], [ null, %while.body4.i44.i.i ], [ null, %while.body.i36.i.i ], [ null, %next_string.exit46.i.i ]
  tail call void %2(ptr noundef %mod, ptr noundef %retval.0.i.i) #29
  br label %for.inc

for.inc:                                          ; preds = %get_modinfo.exit, %for.body
  %inc = add nuw nsw i32 %i.012, 1
  %arrayidx = getelementptr [9 x ptr], ptr @modinfo_attrs, i32 0, i32 %inc
  %20 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx, align 4
  %exitcond = icmp eq i32 %inc, 8
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @simplify_symbols(ptr noundef %mod, ptr nocapture noundef readonly %info) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %owner.i = alloca [60 x i8], align 1
  %__wq_entry.i = alloca %struct.wait_queue_entry, align 4
  %sechdrs = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 4
  %0 = ptrtoint ptr %sechdrs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sechdrs, align 4
  %index = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15
  %2 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %index, align 4
  %sh_addr = getelementptr %struct.elf32_shdr, ptr %1, i32 %3, i32 3
  %4 = ptrtoint ptr %sh_addr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sh_addr, align 4
  %6 = inttoptr i32 %5 to ptr
  %sh_size = getelementptr %struct.elf32_shdr, ptr %1, i32 %3, i32 5
  %7 = ptrtoint ptr %sh_size to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sh_size, align 4
  %cmp132 = icmp ugt i32 %8, 31
  br i1 %cmp132, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %strtab = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 6
  %name53.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %hdr = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 2
  %pcpu = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15, i32 5
  %percpu.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 37
  br label %for.body

for.body:                                         ; preds = %sw.epilog, %for.body.lr.ph
  %i.0134 = phi i32 [ 1, %for.body.lr.ph ], [ %inc, %sw.epilog ]
  %ret.0133 = phi i32 [ 0, %for.body.lr.ph ], [ %ret.1, %sw.epilog ]
  %9 = ptrtoint ptr %strtab to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %strtab, align 4
  %arrayidx2 = getelementptr %struct.elf32_sym, ptr %6, i32 %i.0134
  %11 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx2, align 4
  %add.ptr = getelementptr i8, ptr %10, i32 %12
  %st_shndx = getelementptr %struct.elf32_sym, ptr %6, i32 %i.0134, i32 5
  %13 = ptrtoint ptr %st_shndx to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %st_shndx, align 2
  %conv = zext i16 %14 to i32
  switch i16 %14, label %sw.default [
    i16 -14, label %sw.bb
    i16 -15, label %do.body17
    i16 -224, label %sw.epilog
    i16 0, label %sw.bb34
  ]

sw.bb:                                            ; preds = %for.body
  %call = call i32 @strncmp(ptr noundef %add.ptr, ptr noundef nonnull dereferenceable(10) @.str.240, i32 noundef 9)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %sw.epilog, label %do.body

do.body:                                          ; preds = %sw.bb
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @simplify_symbols.__UNIQUE_ID_ddebug294, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@simplify_symbols, %if.then8)) #29
          to label %do.end12 [label %if.then8], !srcloc !782

if.then8:                                         ; preds = %do.body
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @simplify_symbols.__UNIQUE_ID_ddebug294, ptr noundef nonnull @.str.242, ptr noundef %add.ptr) #29
  br label %do.end12

do.end12:                                         ; preds = %if.then8, %do.body
  %call15 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.243, ptr noundef %name53.i) #37
  br label %sw.epilog

do.body17:                                        ; preds = %for.body
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @simplify_symbols.__UNIQUE_ID_ddebug295, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@simplify_symbols, %if.then29)) #29
          to label %sw.epilog [label %if.then29], !srcloc !782

if.then29:                                        ; preds = %do.body17
  %st_value = getelementptr %struct.elf32_sym, ptr %6, i32 %i.0134, i32 1
  %15 = ptrtoint ptr %st_value to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %st_value, align 4
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @simplify_symbols.__UNIQUE_ID_ddebug295, ptr noundef nonnull @.str.244, i32 noundef %16) #29
  br label %sw.epilog

sw.bb34:                                          ; preds = %for.body
  call void @llvm.lifetime.start.p0(i64 60, ptr nonnull %owner.i) #29
  %17 = call ptr @memset(ptr %owner.i, i32 255, i32 60)
  call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 1461) #29
  %call.i = call fastcc ptr @resolve_symbol(ptr noundef %mod, ptr noundef %info, ptr noundef %add.ptr, ptr noundef nonnull %owner.i) #29
  %cmp.not.i = icmp eq ptr %call.i, inttoptr (i32 -16 to ptr)
  br i1 %cmp.not.i, label %if.then12.i, label %resolve_symbol_wait.exit

if.then12.i:                                      ; preds = %sw.bb34
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry.i) #29
  %18 = call ptr @memset(ptr %__wq_entry.i, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry.i, i32 noundef 0) #29
  %call14104.i = call i32 @prepare_to_wait_event(ptr noundef nonnull @module_wq, ptr noundef nonnull %__wq_entry.i, i32 noundef 1) #29
  %call17105.i = call fastcc ptr @resolve_symbol(ptr noundef %mod, ptr noundef %info, ptr noundef %add.ptr, ptr noundef nonnull %owner.i) #29
  %cmp.i75106.i = icmp ugt ptr %call17105.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i75106.i, label %lor.end22.i, label %for.end.i

lor.end22.thread.i:                               ; preds = %cleanup.i
  %tobool27.not76.i = icmp eq i32 %call43.i, 0
  %spec.select.i = select i1 %tobool27.not76.i, i32 1, i32 %call43.i
  br label %for.end.i

lor.end22.i:                                      ; preds = %cleanup.i, %if.then12.i
  %call17109.i = phi ptr [ %call17.i, %cleanup.i ], [ %call17105.i, %if.then12.i ]
  %call14108.i = phi i32 [ %call14.i, %cleanup.i ], [ %call14104.i, %if.then12.i ]
  %__ret13.0107.i = phi i32 [ %call43.i, %cleanup.i ], [ 3000, %if.then12.i ]
  %cmp21.not.i = icmp eq ptr %call17109.i, inttoptr (i32 -16 to ptr)
  %tobool33.not.i = icmp eq i32 %__ret13.0107.i, 0
  br i1 %cmp21.not.i, label %19, label %for.end.loopexit.split.loop.exit99.i

19:                                               ; preds = %lor.end22.i
  br i1 %tobool33.not.i, label %for.end.i, label %if.end39.i

if.end39.i:                                       ; preds = %19
  %tobool40.not.i = icmp eq i32 %call14108.i, 0
  br i1 %tobool40.not.i, label %cleanup.i, label %if.end45.i

cleanup.i:                                        ; preds = %if.end39.i
  %call43.i = call i32 @schedule_timeout(i32 noundef %__ret13.0107.i) #29
  %call14.i = call i32 @prepare_to_wait_event(ptr noundef nonnull @module_wq, ptr noundef nonnull %__wq_entry.i, i32 noundef 1) #29
  %call17.i = call fastcc ptr @resolve_symbol(ptr noundef %mod, ptr noundef %info, ptr noundef %add.ptr, ptr noundef nonnull %owner.i) #29
  %cmp.i75.i = icmp ugt ptr %call17.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i75.i, label %lor.end22.i, label %lor.end22.thread.i

for.end.loopexit.split.loop.exit99.i:             ; preds = %lor.end22.i
  %spec.store.select60.le.i = select i1 %tobool33.not.i, i32 1, i32 %__ret13.0107.i
  br label %for.end.i

for.end.i:                                        ; preds = %for.end.loopexit.split.loop.exit99.i, %19, %lor.end22.thread.i, %if.then12.i
  %call1794.i = phi ptr [ %call17109.i, %for.end.loopexit.split.loop.exit99.i ], [ %call17105.i, %if.then12.i ], [ %call17.i, %lor.end22.thread.i ], [ inttoptr (i32 -16 to ptr), %19 ]
  %__ret13.2.ph.i = phi i32 [ %spec.store.select60.le.i, %for.end.loopexit.split.loop.exit99.i ], [ 3000, %if.then12.i ], [ %spec.select.i, %lor.end22.thread.i ], [ 0, %19 ]
  call void @finish_wait(ptr noundef nonnull @module_wq, ptr noundef nonnull %__wq_entry.i) #29
  br label %if.end45.i

if.end45.i:                                       ; preds = %for.end.i, %if.end39.i
  %call1793.i = phi ptr [ %call1794.i, %for.end.i ], [ inttoptr (i32 -16 to ptr), %if.end39.i ]
  %__ret13.282.i = phi i32 [ %__ret13.2.ph.i, %for.end.i ], [ %call14108.i, %if.end39.i ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry.i) #29
  %cmp47.i = icmp slt i32 %__ret13.282.i, 1
  br i1 %cmp47.i, label %do.end51.i, label %resolve_symbol_wait.exit

do.end51.i:                                       ; preds = %if.end45.i
  %call56.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.248, ptr noundef %name53.i, ptr noundef nonnull %owner.i) #37
  br label %resolve_symbol_wait.exit

resolve_symbol_wait.exit:                         ; preds = %do.end51.i, %if.end45.i, %sw.bb34
  %ksym.090.i = phi ptr [ %call1793.i, %do.end51.i ], [ %call1793.i, %if.end45.i ], [ %call.i, %sw.bb34 ]
  call void @llvm.lifetime.end.p0(i64 60, ptr nonnull %owner.i) #29
  %tobool36.not = icmp eq ptr %ksym.090.i, null
  br i1 %tobool36.not, label %land.lhs.true44.critedge, label %land.lhs.true

land.lhs.true:                                    ; preds = %resolve_symbol_wait.exit
  %cmp.i = icmp ugt ptr %ksym.090.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end52, label %if.then38

if.then38:                                        ; preds = %land.lhs.true
  %20 = ptrtoint ptr %ksym.090.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %ksym.090.i, align 4
  %st_value41 = getelementptr %struct.elf32_sym, ptr %6, i32 %i.0134, i32 1
  %22 = ptrtoint ptr %st_value41 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %st_value41, align 4
  br label %sw.epilog

land.lhs.true44.critedge:                         ; preds = %resolve_symbol_wait.exit
  %st_info = getelementptr %struct.elf32_sym, ptr %6, i32 %i.0134, i32 3
  %23 = ptrtoint ptr %st_info to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %st_info, align 4
  %.mask = and i8 %24, -16
  %cmp47 = icmp eq i8 %.mask, 32
  br i1 %cmp47, label %sw.epilog, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true44.critedge
  %25 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %hdr, align 4
  %e_machine = getelementptr inbounds %struct.elf32_hdr, ptr %26, i32 0, i32 2
  %27 = ptrtoint ptr %e_machine to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %e_machine, align 2
  switch i16 %28, label %if.end52 [
    i16 3, label %ignore_undef_symbol.exit
    i16 62, label %ignore_undef_symbol.exit
  ]

ignore_undef_symbol.exit:                         ; preds = %lor.lhs.false, %lor.lhs.false
  %call.i117 = call i32 @strcmp(ptr noundef %add.ptr, ptr noundef nonnull dereferenceable(22) @.str.264) #31
  %tobool.not.i = icmp eq i32 %call.i117, 0
  br i1 %tobool.not.i, label %sw.epilog, label %if.end52

if.end52:                                         ; preds = %ignore_undef_symbol.exit, %lor.lhs.false, %land.lhs.true
  %29 = ptrtoint ptr %ksym.090.i to i32
  %call53. = select i1 %tobool36.not, i32 -2, i32 %29
  %call61 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.246, ptr noundef %name53.i, ptr noundef %add.ptr, i32 noundef %call53.) #37
  br label %sw.epilog

sw.default:                                       ; preds = %for.body
  %30 = ptrtoint ptr %pcpu to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %pcpu, align 4
  %cmp66 = icmp eq i32 %31, %conv
  br i1 %cmp66, label %if.then68, label %if.else

if.then68:                                        ; preds = %sw.default
  %32 = ptrtoint ptr %percpu.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %percpu.i, align 8
  %34 = ptrtoint ptr %33 to i32
  br label %if.end75

if.else:                                          ; preds = %sw.default
  %35 = ptrtoint ptr %sechdrs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %sechdrs, align 4
  %sh_addr74 = getelementptr %struct.elf32_shdr, ptr %36, i32 %conv, i32 3
  %37 = ptrtoint ptr %sh_addr74 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %sh_addr74, align 4
  br label %if.end75

if.end75:                                         ; preds = %if.else, %if.then68
  %secbase.0 = phi i32 [ %34, %if.then68 ], [ %38, %if.else ]
  %st_value77 = getelementptr %struct.elf32_sym, ptr %6, i32 %i.0134, i32 1
  %39 = ptrtoint ptr %st_value77 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %st_value77, align 4
  %add = add i32 %40, %secbase.0
  store i32 %add, ptr %st_value77, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end75, %if.end52, %ignore_undef_symbol.exit, %land.lhs.true44.critedge, %if.then38, %if.then29, %do.body17, %do.end12, %sw.bb, %for.body
  %ret.1 = phi i32 [ %ret.0133, %if.end75 ], [ %call53., %if.end52 ], [ %ret.0133, %land.lhs.true44.critedge ], [ %ret.0133, %ignore_undef_symbol.exit ], [ %ret.0133, %if.then38 ], [ %ret.0133, %for.body ], [ %ret.0133, %if.then29 ], [ -8, %do.end12 ], [ %ret.0133, %sw.bb ], [ %ret.0133, %do.body17 ]
  %inc = add nuw nsw i32 %i.0134, 1
  %41 = ptrtoint ptr %sh_size to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %sh_size, align 4
  %div113 = lshr i32 %42, 4
  %cmp = icmp ult i32 %inc, %div113
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %sw.epilog, %entry
  %ret.0.lcssa = phi i32 [ 0, %entry ], [ %ret.1, %sw.epilog ]
  ret i32 %ret.0.lcssa
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @apply_relocations(ptr noundef %mod, ptr nocapture noundef readonly %info) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %hdr = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 2
  %0 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hdr, align 4
  %e_shnum90 = getelementptr inbounds %struct.elf32_hdr, ptr %1, i32 0, i32 12
  %2 = ptrtoint ptr %e_shnum90 to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %e_shnum90, align 4
  %cmp92 = icmp ugt i16 %3, 1
  br i1 %cmp92, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %conv91 = zext i16 %3 to i32
  %sechdrs = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 4
  %strtab24 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 6
  %index25 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %conv96 = phi i32 [ %conv91, %for.body.lr.ph ], [ %conv, %for.inc ]
  %err.095 = phi i32 [ 0, %for.body.lr.ph ], [ %err.2.ph, %for.inc ]
  %i.093 = phi i32 [ 1, %for.body.lr.ph ], [ %inc, %for.inc ]
  %4 = ptrtoint ptr %sechdrs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sechdrs, align 4
  %sh_info = getelementptr %struct.elf32_shdr, ptr %5, i32 %i.093, i32 7
  %6 = ptrtoint ptr %sh_info to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sh_info, align 4
  %cmp5.not = icmp ult i32 %7, %conv96
  br i1 %cmp5.not, label %if.end, label %for.inc

if.end:                                           ; preds = %for.body
  %sh_flags = getelementptr %struct.elf32_shdr, ptr %5, i32 %7, i32 2
  %8 = ptrtoint ptr %sh_flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sh_flags, align 4
  %and = and i32 %9, 2
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.inc, label %if.end10

if.end10:                                         ; preds = %if.end
  %sh_flags13 = getelementptr %struct.elf32_shdr, ptr %5, i32 %i.093, i32 2
  %10 = ptrtoint ptr %sh_flags13 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sh_flags13, align 4
  %and14 = and i32 %11, 1048576
  %tobool15.not = icmp eq i32 %and14, 0
  br i1 %tobool15.not, label %if.else, label %for.inc

if.else:                                          ; preds = %if.end10
  %sh_type = getelementptr %struct.elf32_shdr, ptr %5, i32 %i.093, i32 1
  %12 = ptrtoint ptr %sh_type to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sh_type, align 4
  switch i32 %13, label %if.end42 [
    i32 9, label %if.then22
    i32 4, label %if.end42.thread
  ]

if.then22:                                        ; preds = %if.else
  %14 = ptrtoint ptr %strtab24 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %strtab24, align 4
  %16 = ptrtoint ptr %index25 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %index25, align 4
  %call27 = tail call i32 @apply_relocate(ptr noundef %5, ptr noundef %15, i32 noundef %17, i32 noundef %i.093, ptr noundef %mod) #29
  br label %if.end42

if.end42.thread:                                  ; preds = %if.else
  %tobool.not.i = icmp eq ptr %mod, null
  %name.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.250, ptr %name.i
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.265, ptr noundef %spec.select.i) #37
  br label %for.end

if.end42:                                         ; preds = %if.then22, %if.else
  %err.1 = phi i32 [ %call27, %if.then22 ], [ %err.095, %if.else ]
  %cmp43 = icmp slt i32 %err.1, 0
  br i1 %cmp43, label %for.end, label %for.inc

for.inc:                                          ; preds = %if.end42, %if.end10, %if.end, %for.body
  %err.2.ph = phi i32 [ %err.1, %if.end42 ], [ %err.095, %if.end ], [ %err.095, %for.body ], [ 0, %if.end10 ]
  %inc = add nuw nsw i32 %i.093, 1
  %18 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %hdr, align 4
  %e_shnum = getelementptr inbounds %struct.elf32_hdr, ptr %19, i32 0, i32 12
  %20 = ptrtoint ptr %e_shnum to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %e_shnum, align 4
  %conv = zext i16 %21 to i32
  %cmp = icmp ult i32 %inc, %conv
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %if.end42, %if.end42.thread, %entry
  %err.3 = phi i32 [ -8, %if.end42.thread ], [ 0, %entry ], [ %err.2.ph, %for.inc ], [ %err.1, %if.end42 ]
  ret i32 %err.3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @post_relocation(ptr noundef %mod, ptr nocapture noundef readonly %info) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %extable = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 22
  %0 = ptrtoint ptr %extable to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %extable, align 8
  %num_exentries = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 21
  %2 = ptrtoint ptr %num_exentries to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_exentries, align 4
  %add.ptr = getelementptr %struct.exception_table_entry, ptr %1, i32 %3
  tail call void @sort_extable(ptr noundef %1, ptr noundef %add.ptr) #29
  %sechdrs = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 4
  %4 = ptrtoint ptr %sechdrs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sechdrs, align 4
  %pcpu = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15, i32 5
  %6 = ptrtoint ptr %pcpu to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pcpu, align 4
  %sh_addr = getelementptr %struct.elf32_shdr, ptr %5, i32 %7, i32 3
  %8 = ptrtoint ptr %sh_addr to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sh_addr, align 4
  %10 = inttoptr i32 %9 to ptr
  %sh_size = getelementptr %struct.elf32_shdr, ptr %5, i32 %7, i32 5
  %11 = ptrtoint ptr %sh_size to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sh_size, align 4
  %call4.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #34
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %13 = load i32, ptr @nr_cpu_ids, align 4
  %cmp5.i = icmp ult i32 %call4.i, %13
  br i1 %cmp5.i, label %do.body.lr.ph.i, label %percpu_modcopy.exit

do.body.lr.ph.i:                                  ; preds = %entry
  %percpu.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 37
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i, %do.body.lr.ph.i
  %call6.i = phi i32 [ %call4.i, %do.body.lr.ph.i ], [ %call.i, %do.body.i ]
  %14 = ptrtoint ptr %percpu.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %percpu.i, align 8
  %16 = ptrtoint ptr %15 to i32
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call6.i
  %17 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %18, %16
  %19 = inttoptr i32 %add.i to ptr
  %20 = call ptr @memcpy(ptr %19, ptr %10, i32 %12)
  %call.i = tail call i32 @cpumask_next(i32 noundef %call6.i, ptr noundef nonnull @__cpu_possible_mask) #34
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.i = icmp ult i32 %call.i, %21
  br i1 %cmp.i, label %do.body.i, label %percpu_modcopy.exit

percpu_modcopy.exit:                              ; preds = %do.body.i, %entry
  %22 = ptrtoint ptr %sechdrs to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %sechdrs, align 4
  %index.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15
  %24 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %index.i, align 4
  %init_layout.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26
  %26 = ptrtoint ptr %init_layout.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %init_layout.i, align 16
  %mod_kallsyms_init_off.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 14
  %28 = ptrtoint ptr %mod_kallsyms_init_off.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %mod_kallsyms_init_off.i, align 4
  %add.ptr.i = getelementptr i8, ptr %27, i32 %29
  %kallsyms.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 32
  %30 = ptrtoint ptr %kallsyms.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %add.ptr.i, ptr %kallsyms.i, align 8
  %sh_addr.i = getelementptr %struct.elf32_shdr, ptr %23, i32 %25, i32 3
  %31 = ptrtoint ptr %sh_addr.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %sh_addr.i, align 4
  %33 = inttoptr i32 %32 to ptr
  %34 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %33, ptr %add.ptr.i, align 4
  %sh_size.i = getelementptr %struct.elf32_shdr, ptr %23, i32 %25, i32 5
  %35 = ptrtoint ptr %sh_size.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %sh_size.i, align 4
  %div113.i = lshr i32 %36, 4
  %37 = load ptr, ptr %kallsyms.i, align 8
  %num_symtab.i = getelementptr inbounds %struct.mod_kallsyms, ptr %37, i32 0, i32 1
  %38 = ptrtoint ptr %num_symtab.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %div113.i, ptr %num_symtab.i, align 4
  %39 = load ptr, ptr %sechdrs, align 4
  %str.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15, i32 1
  %40 = ptrtoint ptr %str.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %str.i, align 4
  %sh_addr6.i = getelementptr %struct.elf32_shdr, ptr %39, i32 %41, i32 3
  %42 = ptrtoint ptr %sh_addr6.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %sh_addr6.i, align 4
  %44 = inttoptr i32 %43 to ptr
  %45 = load ptr, ptr %kallsyms.i, align 8
  %strtab.i = getelementptr inbounds %struct.mod_kallsyms, ptr %45, i32 0, i32 2
  %46 = ptrtoint ptr %strtab.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %44, ptr %strtab.i, align 4
  %47 = load ptr, ptr %init_layout.i, align 16
  %init_typeoffs.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 9
  %48 = ptrtoint ptr %init_typeoffs.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %init_typeoffs.i, align 4
  %add.ptr10.i = getelementptr i8, ptr %47, i32 %49
  %50 = load ptr, ptr %kallsyms.i, align 8
  %typetab.i = getelementptr inbounds %struct.mod_kallsyms, ptr %50, i32 0, i32 3
  %51 = ptrtoint ptr %typetab.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %add.ptr10.i, ptr %typetab.i, align 4
  %core_layout.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25
  %52 = ptrtoint ptr %core_layout.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %core_layout.i, align 128
  %symoffs.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 7
  %54 = ptrtoint ptr %symoffs.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %symoffs.i, align 4
  %add.ptr13.i = getelementptr i8, ptr %53, i32 %55
  %core_kallsyms.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 33
  %56 = ptrtoint ptr %core_kallsyms.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %add.ptr13.i, ptr %core_kallsyms.i, align 4
  %stroffs.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 8
  %57 = ptrtoint ptr %stroffs.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %stroffs.i, align 4
  %add.ptr17.i = getelementptr i8, ptr %53, i32 %58
  %strtab19.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 33, i32 2
  %59 = ptrtoint ptr %strtab19.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr %add.ptr17.i, ptr %strtab19.i, align 4
  %core_typeoffs.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 10
  %60 = ptrtoint ptr %core_typeoffs.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %core_typeoffs.i, align 4
  %add.ptr22.i = getelementptr i8, ptr %53, i32 %61
  %typetab24.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 33, i32 3
  %62 = ptrtoint ptr %typetab24.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %add.ptr22.i, ptr %typetab24.i, align 4
  %63 = load ptr, ptr %kallsyms.i, align 8
  %64 = ptrtoint ptr %63 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %63, align 4
  %num_symtab28127.i = getelementptr inbounds %struct.mod_kallsyms, ptr %63, i32 0, i32 1
  %66 = ptrtoint ptr %num_symtab28127.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %num_symtab28127.i, align 4
  %cmp128.not.i = icmp eq i32 %67, 0
  br i1 %cmp128.not.i, label %add_kallsyms.exit, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %percpu_modcopy.exit
  %secstrings.i.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  %hdr.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %68 = phi ptr [ %63, %for.body.lr.ph.i ], [ %125, %for.inc.i ]
  %i.0133.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc59.i, %for.inc.i ]
  %s.0131.i = phi ptr [ %add.ptr17.i, %for.body.lr.ph.i ], [ %s.1.i, %for.inc.i ]
  %ndst.0129.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %ndst.1.i, %for.inc.i ]
  %add.ptr29.i = getelementptr %struct.elf32_sym, ptr %65, i32 %i.0133.i
  %69 = ptrtoint ptr %sechdrs to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %sechdrs, align 4
  %st_info.i.i = getelementptr %struct.elf32_sym, ptr %65, i32 %i.0133.i, i32 3
  %71 = ptrtoint ptr %st_info.i.i to i32
  call void @__asan_load1_noabort(i32 %71)
  %72 = load i8, ptr %st_info.i.i, align 4
  %conv.i.i = zext i8 %72 to i32
  %.mask.i.i = and i32 %conv.i.i, 240
  %cmp.i.i = icmp eq i32 %.mask.i.i, 32
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i
  %and.i.i = and i32 %conv.i.i, 15
  %cmp5.i.i = icmp eq i32 %and.i.i, 1
  %..i.i = select i1 %cmp5.i.i, i8 118, i8 119
  br label %elf_type.exit.i

if.end.i.i:                                       ; preds = %for.body.i
  %st_shndx.i.i = getelementptr %struct.elf32_sym, ptr %65, i32 %i.0133.i, i32 5
  %73 = ptrtoint ptr %st_shndx.i.i to i32
  call void @__asan_load2_noabort(i32 %73)
  %74 = load i16, ptr %st_shndx.i.i, align 2
  %conv8.i.i = zext i16 %74 to i32
  switch i16 %74, label %lor.lhs.false.i.i [
    i16 0, label %elf_type.exit.i
    i16 -15, label %if.then21.i.i
  ]

lor.lhs.false.i.i:                                ; preds = %if.end.i.i
  %75 = ptrtoint ptr %pcpu to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %pcpu, align 4
  %cmp19.i.i = icmp eq i32 %76, %conv8.i.i
  br i1 %cmp19.i.i, label %if.then21.i.i, label %if.end22.i.i

if.then21.i.i:                                    ; preds = %lor.lhs.false.i.i, %if.end.i.i
  br label %elf_type.exit.i

if.end22.i.i:                                     ; preds = %lor.lhs.false.i.i
  %cmp25.i.i = icmp ugt i16 %74, -257
  br i1 %cmp25.i.i, label %elf_type.exit.i, label %if.end28.i.i

if.end28.i.i:                                     ; preds = %if.end22.i.i
  %sh_flags.i.i = getelementptr %struct.elf32_shdr, ptr %70, i32 %conv8.i.i, i32 2
  %77 = ptrtoint ptr %sh_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %sh_flags.i.i, align 4
  %and30.i.i = and i32 %78, 4
  %tobool.not.i.i = icmp eq i32 %and30.i.i, 0
  br i1 %tobool.not.i.i, label %if.end32.i.i, label %elf_type.exit.i

if.end32.i.i:                                     ; preds = %if.end28.i.i
  %and37.i.i = and i32 %78, 2
  %tobool38.not.i.i = icmp eq i32 %and37.i.i, 0
  br i1 %tobool38.not.i.i, label %if.end61.i.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %if.end32.i.i
  %sh_type.i.i = getelementptr %struct.elf32_shdr, ptr %70, i32 %conv8.i.i, i32 1
  %79 = ptrtoint ptr %sh_type.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %sh_type.i.i, align 4
  %cmp42.not.i.i = icmp eq i32 %80, 8
  br i1 %cmp42.not.i.i, label %if.end61.i.i, label %if.then44.i.i

if.then44.i.i:                                    ; preds = %land.lhs.true.i.i
  %and49.i.i = and i32 %78, 1
  %tobool50.not.i.i = icmp eq i32 %and49.i.i, 0
  %spec.select.i.i = select i1 %tobool50.not.i.i, i8 114, i8 100
  br label %elf_type.exit.i

if.end61.i.i:                                     ; preds = %land.lhs.true.i.i, %if.end32.i.i
  %sh_type65.i.i = getelementptr %struct.elf32_shdr, ptr %70, i32 %conv8.i.i, i32 1
  %81 = ptrtoint ptr %sh_type65.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %sh_type65.i.i, align 4
  %cmp66.i.i = icmp eq i32 %82, 8
  br i1 %cmp66.i.i, label %elf_type.exit.i, label %if.end77.i.i

if.end77.i.i:                                     ; preds = %if.end61.i.i
  %arrayidx64.i.i = getelementptr %struct.elf32_shdr, ptr %70, i32 %conv8.i.i
  %83 = ptrtoint ptr %secstrings.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %secstrings.i.i, align 4
  %85 = ptrtoint ptr %arrayidx64.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %arrayidx64.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %84, i32 %86
  %call1.i.i = tail call i32 @strncmp(ptr noundef %add.ptr.i.i, ptr noundef nonnull dereferenceable(7) @.str.268, i32 noundef 6) #29
  %cmp.i123.i = icmp eq i32 %call1.i.i, 0
  %.105.i.i = select i1 %cmp.i123.i, i8 110, i8 63
  br label %elf_type.exit.i

elf_type.exit.i:                                  ; preds = %if.end77.i.i, %if.end61.i.i, %if.then44.i.i, %if.end28.i.i, %if.end22.i.i, %if.then21.i.i, %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i8 [ 97, %if.then21.i.i ], [ %..i.i, %if.then.i.i ], [ 85, %if.end.i.i ], [ 63, %if.end22.i.i ], [ 116, %if.end28.i.i ], [ 98, %if.end61.i.i ], [ %.105.i.i, %if.end77.i.i ], [ %spec.select.i.i, %if.then44.i.i ]
  %typetab31.i = getelementptr inbounds %struct.mod_kallsyms, ptr %68, i32 0, i32 3
  %87 = ptrtoint ptr %typetab31.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %typetab31.i, align 4
  %arrayidx32.i = getelementptr i8, ptr %88, i32 %i.0133.i
  %89 = ptrtoint ptr %arrayidx32.i to i32
  call void @__asan_store1_noabort(i32 %89)
  store i8 %retval.0.i.i, ptr %arrayidx32.i, align 1
  %cmp33.i = icmp eq i32 %i.0133.i, 0
  br i1 %cmp33.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %elf_type.exit.i
  %90 = ptrtoint ptr %sechdrs to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %sechdrs, align 4
  %92 = ptrtoint ptr %hdr.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %hdr.i, align 4
  %e_shnum.i = getelementptr inbounds %struct.elf32_hdr, ptr %93, i32 0, i32 12
  %94 = ptrtoint ptr %e_shnum.i to i32
  call void @__asan_load2_noabort(i32 %94)
  %95 = load i16, ptr %e_shnum.i, align 4
  %96 = ptrtoint ptr %pcpu to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %pcpu, align 4
  %st_shndx.i114.i = getelementptr %struct.elf32_sym, ptr %65, i32 %i.0133.i, i32 5
  %98 = ptrtoint ptr %st_shndx.i114.i to i32
  call void @__asan_load2_noabort(i32 %98)
  %99 = load i16, ptr %st_shndx.i114.i, align 2
  %conv.i115.i = zext i16 %99 to i32
  %cmp.i116.i = icmp ne i16 %99, 0
  %cmp4.not.i.i = icmp ult i16 %99, %95
  %or.cond.i.i = and i1 %cmp.i116.i, %cmp4.not.i.i
  br i1 %or.cond.i.i, label %lor.lhs.false6.i.i, label %for.inc.i

lor.lhs.false6.i.i:                               ; preds = %lor.lhs.false.i
  %100 = ptrtoint ptr %add.ptr29.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %add.ptr29.i, align 4
  %tobool.not.i117.i = icmp eq i32 %101, 0
  br i1 %tobool.not.i117.i, label %for.inc.i, label %if.end.i118.i

if.end.i118.i:                                    ; preds = %lor.lhs.false6.i.i
  %cmp9.i.i = icmp eq i32 %97, %conv.i115.i
  br i1 %cmp9.i.i, label %if.then.i, label %if.end12.i.i

if.end12.i.i:                                     ; preds = %if.end.i118.i
  %sh_flags.i119.i = getelementptr %struct.elf32_shdr, ptr %91, i32 %conv.i115.i, i32 2
  %102 = ptrtoint ptr %sh_flags.i119.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %sh_flags.i119.i, align 4
  %and.i120.i = and i32 %103, 2
  %tobool15.not.i.i = icmp eq i32 %and.i120.i, 0
  br i1 %tobool15.not.i.i, label %for.inc.i, label %is_core_symbol.exit.i

is_core_symbol.exit.i:                            ; preds = %if.end12.i.i
  %sh_entsize.i.i = getelementptr %struct.elf32_shdr, ptr %91, i32 %conv.i115.i, i32 9
  %104 = ptrtoint ptr %sh_entsize.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %sh_entsize.i.i, align 4
  %tobool18.not.i.i = icmp sgt i32 %105, -1
  br i1 %tobool18.not.i.i, label %if.then.i, label %for.inc.i

if.then.i:                                        ; preds = %is_core_symbol.exit.i, %if.end.i118.i, %elf_type.exit.i
  %106 = ptrtoint ptr %kallsyms.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %kallsyms.i, align 8
  %typetab42.i = getelementptr inbounds %struct.mod_kallsyms, ptr %107, i32 0, i32 3
  %108 = ptrtoint ptr %typetab42.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %typetab42.i, align 4
  %arrayidx43.i = getelementptr i8, ptr %109, i32 %i.0133.i
  %110 = ptrtoint ptr %arrayidx43.i to i32
  call void @__asan_load1_noabort(i32 %110)
  %111 = load i8, ptr %arrayidx43.i, align 1
  %112 = ptrtoint ptr %typetab24.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %typetab24.i, align 4
  %arrayidx46.i = getelementptr i8, ptr %113, i32 %ndst.0129.i
  %114 = ptrtoint ptr %arrayidx46.i to i32
  call void @__asan_store1_noabort(i32 %114)
  store i8 %111, ptr %arrayidx46.i, align 1
  %arrayidx47.i = getelementptr %struct.elf32_sym, ptr %add.ptr13.i, i32 %ndst.0129.i
  %115 = call ptr @memcpy(ptr %arrayidx47.i, ptr %add.ptr29.i, i32 16)
  %116 = ptrtoint ptr %strtab19.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %strtab19.i, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %s.0131.i to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %117 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %inc.i = add i32 %ndst.0129.i, 1
  %118 = ptrtoint ptr %arrayidx47.i to i32
  call void @__asan_store4_noabort(i32 %118)
  store i32 %sub.ptr.sub.i, ptr %arrayidx47.i, align 4
  %119 = load ptr, ptr %kallsyms.i, align 8
  %strtab53.i = getelementptr inbounds %struct.mod_kallsyms, ptr %119, i32 0, i32 2
  %120 = ptrtoint ptr %strtab53.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %strtab53.i, align 4
  %122 = ptrtoint ptr %add.ptr29.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %add.ptr29.i, align 4
  %arrayidx56.i = getelementptr i8, ptr %121, i32 %123
  %call57.i = tail call i32 @strlcpy(ptr noundef %s.0131.i, ptr noundef %arrayidx56.i, i32 noundef 128) #29
  %add.i18 = add i32 %call57.i, 1
  %add.ptr58.i = getelementptr i8, ptr %s.0131.i, i32 %add.i18
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %is_core_symbol.exit.i, %if.end12.i.i, %lor.lhs.false6.i.i, %lor.lhs.false.i
  %ndst.1.i = phi i32 [ %inc.i, %if.then.i ], [ %ndst.0129.i, %is_core_symbol.exit.i ], [ %ndst.0129.i, %lor.lhs.false6.i.i ], [ %ndst.0129.i, %lor.lhs.false.i ], [ %ndst.0129.i, %if.end12.i.i ]
  %s.1.i = phi ptr [ %add.ptr58.i, %if.then.i ], [ %s.0131.i, %is_core_symbol.exit.i ], [ %s.0131.i, %lor.lhs.false6.i.i ], [ %s.0131.i, %lor.lhs.false.i ], [ %s.0131.i, %if.end12.i.i ]
  %inc59.i = add nuw i32 %i.0133.i, 1
  %124 = ptrtoint ptr %kallsyms.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %kallsyms.i, align 8
  %num_symtab28.i = getelementptr inbounds %struct.mod_kallsyms, ptr %125, i32 0, i32 1
  %126 = ptrtoint ptr %num_symtab28.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %num_symtab28.i, align 4
  %cmp.i19 = icmp ult i32 %inc59.i, %127
  br i1 %cmp.i19, label %for.body.i, label %add_kallsyms.exit

add_kallsyms.exit:                                ; preds = %for.inc.i, %percpu_modcopy.exit
  %ndst.0.lcssa.i = phi i32 [ 0, %percpu_modcopy.exit ], [ %ndst.1.i, %for.inc.i ]
  %num_symtab61.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 33, i32 1
  %128 = ptrtoint ptr %num_symtab61.i to i32
  call void @__asan_store4_noabort(i32 %128)
  store i32 %ndst.0.lcssa.i, ptr %num_symtab61.i, align 4
  %hdr = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 2
  %129 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %hdr, align 4
  %131 = ptrtoint ptr %sechdrs to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %sechdrs, align 4
  %call = tail call i32 @module_finalize(ptr noundef %130, ptr noundef %132, ptr noundef %mod)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @flush_module_icache(ptr nocapture noundef readonly %mod) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %init_layout = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26
  %0 = ptrtoint ptr %init_layout to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %init_layout, align 16
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 5) to i32))
  %2 = load ptr, ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 5), align 4
  %3 = ptrtoint ptr %1 to i32
  %size = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26, i32 1
  %4 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %size, align 4
  %add = add i32 %5, %3
  tail call void %2(i32 noundef %3, i32 noundef %add) #29
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 5) to i32))
  %6 = load ptr, ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 5), align 4
  %core_layout = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25
  %7 = ptrtoint ptr %core_layout to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %core_layout, align 128
  %9 = ptrtoint ptr %8 to i32
  %size10 = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25, i32 1
  %10 = ptrtoint ptr %size10 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %size10, align 4
  %add11 = add i32 %11, %9
  tail call void %6(i32 noundef %9, i32 noundef %add11) #29
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @strndup_user(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @init_build_id(ptr noundef %mod, ptr nocapture noundef readonly %info) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %hdr = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 2
  %0 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hdr, align 4
  %e_shnum12 = getelementptr inbounds %struct.elf32_hdr, ptr %1, i32 0, i32 12
  %2 = ptrtoint ptr %e_shnum12 to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %e_shnum12, align 4
  %cmp14.not = icmp eq i16 %3, 0
  br i1 %cmp14.not, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %sechdrs = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 4
  %build_id = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %i.015 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %4 = ptrtoint ptr %sechdrs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sechdrs, align 4
  %sh_flags.i = getelementptr %struct.elf32_shdr, ptr %5, i32 %i.015, i32 2
  %6 = ptrtoint ptr %sh_flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sh_flags.i, align 4
  %and.i = and i32 %7, 2
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %for.inc, label %sect_empty.exit

sect_empty.exit:                                  ; preds = %for.body
  %sh_size.i = getelementptr %struct.elf32_shdr, ptr %5, i32 %i.015, i32 5
  %8 = ptrtoint ptr %sh_size.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sh_size.i, align 4
  %cmp.i = icmp eq i32 %9, 0
  br i1 %cmp.i, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %sect_empty.exit
  %sh_type = getelementptr %struct.elf32_shdr, ptr %5, i32 %i.015, i32 1
  %10 = ptrtoint ptr %sh_type to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sh_type, align 4
  %cmp2 = icmp eq i32 %11, 7
  br i1 %cmp2, label %land.lhs.true4, label %for.inc

land.lhs.true4:                                   ; preds = %land.lhs.true
  %sh_addr = getelementptr %struct.elf32_shdr, ptr %5, i32 %i.015, i32 3
  %12 = ptrtoint ptr %sh_addr to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sh_addr, align 4
  %14 = inttoptr i32 %13 to ptr
  %15 = ptrtoint ptr %sh_size.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %sh_size.i, align 4
  %call5 = tail call i32 @build_id_parse_buf(ptr noundef %14, ptr noundef %build_id, i32 noundef %16) #29
  %tobool.not = icmp eq i32 %call5, 0
  br i1 %tobool.not, label %for.end, label %for.inc

for.inc:                                          ; preds = %land.lhs.true4, %land.lhs.true, %sect_empty.exit, %for.body
  %inc = add nuw nsw i32 %i.015, 1
  %17 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %hdr, align 4
  %e_shnum = getelementptr inbounds %struct.elf32_hdr, ptr %18, i32 0, i32 12
  %19 = ptrtoint ptr %e_shnum to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %e_shnum, align 4
  %conv = zext i16 %20 to i32
  %cmp = icmp ult i32 %inc, %conv
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %land.lhs.true4, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @ftrace_module_init(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @complete_formation(ptr noundef %mod, ptr nocapture noundef readonly %info) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %fsa.i = alloca %struct.find_symbol_arg, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @module_mutex, i32 noundef 0) #29
  %syms.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 9
  %0 = ptrtoint ptr %syms.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %syms.i, align 4
  %num_syms.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 11
  %2 = ptrtoint ptr %num_syms.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_syms.i, align 4
  %gpl_syms.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 16
  %4 = ptrtoint ptr %gpl_syms.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %gpl_syms.i, align 8
  %num_gpl_syms.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 15
  %6 = ptrtoint ptr %num_gpl_syms.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_gpl_syms.i, align 4
  %gplok.i = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa.i, i32 0, i32 1
  %add.ptr.i = getelementptr %struct.kernel_symbol, ptr %1, i32 %3
  %cmp938.i = icmp ult ptr %1, %add.ptr.i
  br i1 %cmp938.i, label %for.body10.i, label %for.inc19.i

for.body10.i:                                     ; preds = %for.inc.critedge.i, %entry
  %s.039.i = phi ptr [ %incdec.ptr.i, %for.inc.critedge.i ], [ %1, %entry ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fsa.i) #29
  %8 = call ptr @memset(ptr %gplok.i, i32 0, i32 20)
  %name.i.i = getelementptr inbounds %struct.kernel_symbol, ptr %s.039.i, i32 0, i32 1
  %9 = ptrtoint ptr %name.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %name.i.i, align 4
  %11 = ptrtoint ptr %fsa.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %10, ptr %fsa.i, align 4
  %12 = ptrtoint ptr %gplok.i to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 1, ptr %gplok.i, align 4
  %call12.i = call fastcc zeroext i1 @find_symbol(ptr noundef nonnull %fsa.i) #29
  br i1 %call12.i, label %out, label %for.inc.critedge.i

for.inc.critedge.i:                               ; preds = %for.body10.i
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fsa.i) #29
  %incdec.ptr.i = getelementptr %struct.kernel_symbol, ptr %s.039.i, i32 1
  %cmp9.i = icmp ult ptr %incdec.ptr.i, %add.ptr.i
  br i1 %cmp9.i, label %for.body10.i, label %for.inc19.i

for.inc19.i:                                      ; preds = %for.inc.critedge.i, %entry
  %add.ptr.1.i = getelementptr %struct.kernel_symbol, ptr %5, i32 %7
  %cmp938.1.i = icmp ult ptr %5, %add.ptr.1.i
  br i1 %cmp938.1.i, label %for.body10.1.i, label %if.end

for.body10.1.i:                                   ; preds = %for.inc.critedge.1.i, %for.inc19.i
  %s.039.1.i = phi ptr [ %incdec.ptr.1.i, %for.inc.critedge.1.i ], [ %5, %for.inc19.i ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fsa.i) #29
  %13 = call ptr @memset(ptr %gplok.i, i32 0, i32 20)
  %name.i.1.i = getelementptr inbounds %struct.kernel_symbol, ptr %s.039.1.i, i32 0, i32 1
  %14 = ptrtoint ptr %name.i.1.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %name.i.1.i, align 4
  %16 = ptrtoint ptr %fsa.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %15, ptr %fsa.i, align 4
  %17 = ptrtoint ptr %gplok.i to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 1, ptr %gplok.i, align 4
  %call12.1.i = call fastcc zeroext i1 @find_symbol(ptr noundef nonnull %fsa.i) #29
  br i1 %call12.1.i, label %out, label %for.inc.critedge.1.i

for.inc.critedge.1.i:                             ; preds = %for.body10.1.i
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fsa.i) #29
  %incdec.ptr.1.i = getelementptr %struct.kernel_symbol, ptr %s.039.1.i, i32 1
  %cmp9.1.i = icmp ult ptr %incdec.ptr.1.i, %add.ptr.1.i
  br i1 %cmp9.1.i, label %for.body10.1.i, label %if.end

if.end:                                           ; preds = %for.inc.critedge.1.i, %for.inc19.i
  %hdr = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 2
  %18 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %hdr, align 4
  %sechdrs = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 4
  %20 = ptrtoint ptr %sechdrs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %sechdrs, align 4
  tail call void @module_bug_finalize(ptr noundef %19, ptr noundef %21, ptr noundef %mod) #29
  tail call fastcc void @module_enable_ro(ptr noundef %mod, i1 noundef zeroext false)
  %core_layout.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25
  %22 = ptrtoint ptr %core_layout.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %core_layout.i, align 4
  %24 = ptrtoint ptr %23 to i32
  %and.i.i = and i32 %24, 4095
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %do.body7.i.i, label %do.body3.i.i, !prof !770

do.body3.i.i:                                     ; preds = %if.end
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1981, 0\0A.popsection", ""() #29, !srcloc !847
  unreachable

do.body7.i.i:                                     ; preds = %if.end
  %text_size.i.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25, i32 2
  %25 = ptrtoint ptr %text_size.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %text_size.i.i, align 4
  %and8.i.i = and i32 %26, 4095
  %tobool9.not.i.i = icmp eq i32 %and8.i.i, 0
  br i1 %tobool9.not.i.i, label %do.body23.i.i, label %do.body17.i.i, !prof !770

do.body17.i.i:                                    ; preds = %do.body7.i.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1982, 0\0A.popsection", ""() #29, !srcloc !848
  unreachable

do.body23.i.i:                                    ; preds = %do.body7.i.i
  %ro_size.i.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25, i32 3
  %27 = ptrtoint ptr %ro_size.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %ro_size.i.i, align 4
  %and24.i.i = and i32 %28, 4095
  %tobool25.not.i.i = icmp eq i32 %and24.i.i, 0
  br i1 %tobool25.not.i.i, label %frob_rodata.exit.i, label %do.body33.i.i, !prof !770

do.body33.i.i:                                    ; preds = %do.body23.i.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1983, 0\0A.popsection", ""() #29, !srcloc !849
  unreachable

frob_rodata.exit.i:                               ; preds = %do.body23.i.i
  %add.i.i = add i32 %26, %24
  %sub.i.i = sub i32 %28, %26
  %shr.i.i = lshr i32 %sub.i.i, 12
  %call.i.i = tail call i32 @set_memory_nx(i32 noundef %add.i.i, i32 noundef %shr.i.i) #29, !callees !850
  %29 = ptrtoint ptr %core_layout.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %core_layout.i, align 4
  %31 = ptrtoint ptr %30 to i32
  %and.i8.i = and i32 %31, 4095
  %tobool.not.i9.i = icmp eq i32 %and.i8.i, 0
  br i1 %tobool.not.i9.i, label %do.body7.i14.i, label %do.body3.i10.i, !prof !770

do.body3.i10.i:                                   ; preds = %frob_rodata.exit.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1991, 0\0A.popsection", ""() #29, !srcloc !851
  unreachable

do.body7.i14.i:                                   ; preds = %frob_rodata.exit.i
  %32 = ptrtoint ptr %ro_size.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %ro_size.i.i, align 4
  %and8.i12.i = and i32 %33, 4095
  %tobool9.not.i13.i = icmp eq i32 %and8.i12.i, 0
  br i1 %tobool9.not.i13.i, label %do.body23.i18.i, label %do.body17.i15.i, !prof !770

do.body17.i15.i:                                  ; preds = %do.body7.i14.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1992, 0\0A.popsection", ""() #29, !srcloc !852
  unreachable

do.body23.i18.i:                                  ; preds = %do.body7.i14.i
  %ro_after_init_size.i.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25, i32 4
  %34 = ptrtoint ptr %ro_after_init_size.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %ro_after_init_size.i.i, align 4
  %and24.i16.i = and i32 %35, 4095
  %tobool25.not.i17.i = icmp eq i32 %and24.i16.i, 0
  br i1 %tobool25.not.i17.i, label %frob_ro_after_init.exit.i, label %do.body33.i19.i, !prof !770

do.body33.i19.i:                                  ; preds = %do.body23.i18.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1993, 0\0A.popsection", ""() #29, !srcloc !853
  unreachable

frob_ro_after_init.exit.i:                        ; preds = %do.body23.i18.i
  %add.i20.i = add i32 %33, %31
  %sub.i21.i = sub i32 %35, %33
  %shr.i22.i = lshr i32 %sub.i21.i, 12
  %call.i23.i = tail call i32 @set_memory_nx(i32 noundef %add.i20.i, i32 noundef %shr.i22.i) #29, !callees !850
  %36 = ptrtoint ptr %core_layout.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %core_layout.i, align 4
  %38 = ptrtoint ptr %37 to i32
  %and.i24.i = and i32 %38, 4095
  %tobool.not.i25.i = icmp eq i32 %and.i24.i, 0
  br i1 %tobool.not.i25.i, label %do.body7.i30.i, label %do.body3.i26.i, !prof !770

do.body3.i26.i:                                   ; preds = %frob_ro_after_init.exit.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2001, 0\0A.popsection", ""() #29, !srcloc !854
  unreachable

do.body7.i30.i:                                   ; preds = %frob_ro_after_init.exit.i
  %39 = ptrtoint ptr %ro_after_init_size.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %ro_after_init_size.i.i, align 4
  %and8.i28.i = and i32 %40, 4095
  %tobool9.not.i29.i = icmp eq i32 %and8.i28.i, 0
  br i1 %tobool9.not.i29.i, label %do.body23.i34.i, label %do.body17.i31.i, !prof !770

do.body17.i31.i:                                  ; preds = %do.body7.i30.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2002, 0\0A.popsection", ""() #29, !srcloc !855
  unreachable

do.body23.i34.i:                                  ; preds = %do.body7.i30.i
  %size.i.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25, i32 1
  %41 = ptrtoint ptr %size.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %size.i.i, align 4
  %and24.i32.i = and i32 %42, 4095
  %tobool25.not.i33.i = icmp eq i32 %and24.i32.i, 0
  br i1 %tobool25.not.i33.i, label %frob_writable_data.exit.i, label %do.body33.i35.i, !prof !770

do.body33.i35.i:                                  ; preds = %do.body23.i34.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2003, 0\0A.popsection", ""() #29, !srcloc !856
  unreachable

frob_writable_data.exit.i:                        ; preds = %do.body23.i34.i
  %add.i36.i = add i32 %40, %38
  %sub.i37.i = sub i32 %42, %40
  %shr.i38.i = lshr i32 %sub.i37.i, 12
  %call.i39.i = tail call i32 @set_memory_nx(i32 noundef %add.i36.i, i32 noundef %shr.i38.i) #29
  %init_layout.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26
  %43 = ptrtoint ptr %init_layout.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %init_layout.i, align 4
  %45 = ptrtoint ptr %44 to i32
  %and.i40.i = and i32 %45, 4095
  %tobool.not.i41.i = icmp eq i32 %and.i40.i, 0
  br i1 %tobool.not.i41.i, label %do.body7.i46.i, label %do.body3.i42.i, !prof !770

do.body3.i42.i:                                   ; preds = %frob_writable_data.exit.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1981, 0\0A.popsection", ""() #29, !srcloc !847
  unreachable

do.body7.i46.i:                                   ; preds = %frob_writable_data.exit.i
  %text_size.i43.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26, i32 2
  %46 = ptrtoint ptr %text_size.i43.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %text_size.i43.i, align 4
  %and8.i44.i = and i32 %47, 4095
  %tobool9.not.i45.i = icmp eq i32 %and8.i44.i, 0
  br i1 %tobool9.not.i45.i, label %do.body23.i51.i, label %do.body17.i47.i, !prof !770

do.body17.i47.i:                                  ; preds = %do.body7.i46.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1982, 0\0A.popsection", ""() #29, !srcloc !848
  unreachable

do.body23.i51.i:                                  ; preds = %do.body7.i46.i
  %ro_size.i48.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26, i32 3
  %48 = ptrtoint ptr %ro_size.i48.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %ro_size.i48.i, align 4
  %and24.i49.i = and i32 %49, 4095
  %tobool25.not.i50.i = icmp eq i32 %and24.i49.i, 0
  br i1 %tobool25.not.i50.i, label %frob_rodata.exit57.i, label %do.body33.i52.i, !prof !770

do.body33.i52.i:                                  ; preds = %do.body23.i51.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1983, 0\0A.popsection", ""() #29, !srcloc !849
  unreachable

frob_rodata.exit57.i:                             ; preds = %do.body23.i51.i
  %add.i53.i = add i32 %47, %45
  %sub.i54.i = sub i32 %49, %47
  %shr.i55.i = lshr i32 %sub.i54.i, 12
  %call.i56.i = tail call i32 @set_memory_nx(i32 noundef %add.i53.i, i32 noundef %shr.i55.i) #29, !callees !850
  %50 = ptrtoint ptr %init_layout.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %init_layout.i, align 4
  %52 = ptrtoint ptr %51 to i32
  %and.i58.i = and i32 %52, 4095
  %tobool.not.i59.i = icmp eq i32 %and.i58.i, 0
  br i1 %tobool.not.i59.i, label %do.body7.i64.i, label %do.body3.i60.i, !prof !770

do.body3.i60.i:                                   ; preds = %frob_rodata.exit57.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2001, 0\0A.popsection", ""() #29, !srcloc !854
  unreachable

do.body7.i64.i:                                   ; preds = %frob_rodata.exit57.i
  %ro_after_init_size.i61.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26, i32 4
  %53 = ptrtoint ptr %ro_after_init_size.i61.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %ro_after_init_size.i61.i, align 4
  %and8.i62.i = and i32 %54, 4095
  %tobool9.not.i63.i = icmp eq i32 %and8.i62.i, 0
  br i1 %tobool9.not.i63.i, label %do.body23.i69.i, label %do.body17.i65.i, !prof !770

do.body17.i65.i:                                  ; preds = %do.body7.i64.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2002, 0\0A.popsection", ""() #29, !srcloc !855
  unreachable

do.body23.i69.i:                                  ; preds = %do.body7.i64.i
  %size.i66.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26, i32 1
  %55 = ptrtoint ptr %size.i66.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %size.i66.i, align 4
  %and24.i67.i = and i32 %56, 4095
  %tobool25.not.i68.i = icmp eq i32 %and24.i67.i, 0
  br i1 %tobool25.not.i68.i, label %module_enable_nx.exit, label %do.body33.i70.i, !prof !770

do.body33.i70.i:                                  ; preds = %do.body23.i69.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2003, 0\0A.popsection", ""() #29, !srcloc !856
  unreachable

module_enable_nx.exit:                            ; preds = %do.body23.i69.i
  %add.i71.i = add i32 %54, %52
  %sub.i72.i = sub i32 %56, %54
  %shr.i73.i = lshr i32 %sub.i72.i, 12
  %call.i74.i = tail call i32 @set_memory_nx(i32 noundef %add.i71.i, i32 noundef %shr.i73.i) #29
  %57 = ptrtoint ptr %core_layout.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %core_layout.i, align 4
  %59 = ptrtoint ptr %58 to i32
  %and.i.i9 = and i32 %59, 4095
  %tobool.not.i.i10 = icmp eq i32 %and.i.i9, 0
  br i1 %tobool.not.i.i10, label %do.body7.i.i15, label %do.body3.i.i11, !prof !770

do.body3.i.i11:                                   ; preds = %module_enable_nx.exit
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1962, 0\0A.popsection", ""() #29, !srcloc !857
  unreachable

do.body7.i.i15:                                   ; preds = %module_enable_nx.exit
  %60 = ptrtoint ptr %text_size.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %text_size.i.i, align 4
  %and8.i.i13 = and i32 %61, 4095
  %tobool9.not.i.i14 = icmp eq i32 %and8.i.i13, 0
  br i1 %tobool9.not.i.i14, label %frob_text.exit.i, label %do.body17.i.i16, !prof !770

do.body17.i.i16:                                  ; preds = %do.body7.i.i15
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1963, 0\0A.popsection", ""() #29, !srcloc !858
  unreachable

frob_text.exit.i:                                 ; preds = %do.body7.i.i15
  %shr.i.i17 = lshr i32 %61, 12
  %call.i.i18 = tail call i32 @set_memory_x(i32 noundef %59, i32 noundef %shr.i.i17) #29, !callees !859
  %62 = ptrtoint ptr %init_layout.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %init_layout.i, align 4
  %64 = ptrtoint ptr %63 to i32
  %and.i2.i = and i32 %64, 4095
  %tobool.not.i3.i = icmp eq i32 %and.i2.i, 0
  br i1 %tobool.not.i3.i, label %do.body7.i8.i, label %do.body3.i4.i, !prof !770

do.body3.i4.i:                                    ; preds = %frob_text.exit.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1962, 0\0A.popsection", ""() #29, !srcloc !857
  unreachable

do.body7.i8.i:                                    ; preds = %frob_text.exit.i
  %65 = ptrtoint ptr %text_size.i43.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %text_size.i43.i, align 4
  %and8.i6.i = and i32 %66, 4095
  %tobool9.not.i7.i = icmp eq i32 %and8.i6.i, 0
  br i1 %tobool9.not.i7.i, label %module_enable_x.exit, label %do.body17.i9.i, !prof !770

do.body17.i9.i:                                   ; preds = %do.body7.i8.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1963, 0\0A.popsection", ""() #29, !srcloc !858
  unreachable

module_enable_x.exit:                             ; preds = %do.body7.i8.i
  %shr.i10.i = lshr i32 %66, 12
  %call.i11.i = tail call i32 @set_memory_x(i32 noundef %64, i32 noundef %shr.i10.i) #29, !callees !859
  %67 = ptrtoint ptr %mod to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 1, ptr %mod, align 128
  br label %cleanup

out:                                              ; preds = %for.body10.1.i, %for.body10.i
  %s.039.lcssa.i = phi ptr [ %s.039.1.i, %for.body10.1.i ], [ %s.039.i, %for.body10.i ]
  %name.i.le.i = getelementptr inbounds %struct.kernel_symbol, ptr %s.039.lcssa.i, i32 0, i32 1
  %name13.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %68 = ptrtoint ptr %name.i.le.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %name.i.le.i, align 4
  %owner.i = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa.i, i32 0, i32 3
  %70 = ptrtoint ptr %owner.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %owner.i, align 4
  %tobool.not.i = icmp eq ptr %71, null
  %name16.i = getelementptr inbounds %struct.module, ptr %71, i32 0, i32 2
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.250, ptr %name16.i
  %call18.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.269, ptr noundef %name13.i, ptr noundef %69, ptr noundef %spec.select.i) #37
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fsa.i) #29
  br label %cleanup

cleanup:                                          ; preds = %out, %module_enable_x.exit
  %retval.0 = phi i32 [ -8, %out ], [ 0, %module_enable_x.exit ]
  tail call void @mutex_unlock(ptr noundef nonnull @module_mutex) #29
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @prepare_coming_module(ptr noundef %mod) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @ftrace_module_enable(ptr noundef %mod) #29
  %call1 = tail call i32 @blocking_notifier_call_chain_robust(ptr noundef nonnull @module_notify_list, i32 noundef 1, i32 noundef 2, ptr noundef %mod) #29
  %and.i = and i32 %call1, -32769
  %cmp.i = icmp sgt i32 %and.i, 1
  %sub.i = sub i32 1, %and.i
  %spec.select.i = select i1 %cmp.i, i32 %sub.i, i32 0
  ret i32 %spec.select.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @parse_args(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i16 noundef signext, i16 noundef signext, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @unknown_module_param_cb(ptr noundef %param, ptr noundef %val, ptr noundef %modname, ptr nocapture noundef writeonly %arg) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @strcmp(ptr noundef %param, ptr noundef nonnull dereferenceable(12) @.str.271) #32
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %async_probe_requested = getelementptr inbounds %struct.module, ptr %arg, i32 0, i32 20
  %0 = ptrtoint ptr %async_probe_requested to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 1, ptr %async_probe_requested, align 2
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @ddebug_dyndbg_module_param_cb(ptr noundef %param, ptr noundef %val, ptr noundef %modname) #29
  %cmp2.not = icmp eq i32 %call1, 0
  br i1 %cmp2.not, label %cleanup, label %do.end

do.end:                                           ; preds = %if.end
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.272, ptr noundef %modname, ptr noundef %param) #37
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end, %if.then
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mod_sysfs_setup(ptr noundef %mod, ptr nocapture noundef readonly %info, ptr noundef %kparam, i32 noundef %num_params) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %c.i = alloca %struct.completion, align 4
  %c.i.i = alloca %struct.completion, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @module_sysfs_initialized to i32))
  %0 = load i32, ptr @module_sysfs_initialized, align 4
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %do.end.i, label %if.end.i

do.end.i:                                         ; preds = %entry
  %name.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.275, ptr noundef %name.i) #37
  br label %cleanup

if.end.i:                                         ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @module_kset to i32))
  %1 = load ptr, ptr @module_kset, align 4
  %name1.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %call3.i = tail call ptr @kset_find_obj(ptr noundef %1, ptr noundef %name1.i) #29
  %tobool4.not.i = icmp eq ptr %call3.i, null
  br i1 %tobool4.not.i, label %if.end13.i, label %do.end8.i

do.end8.i:                                        ; preds = %if.end.i
  %call12.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.278, ptr noundef %name1.i) #37
  tail call void @kobject_put(ptr noundef nonnull %call3.i) #29
  br label %cleanup

if.end13.i:                                       ; preds = %if.end.i
  %mkobj.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 4
  %mod14.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 4, i32 1
  %2 = ptrtoint ptr %mod14.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %mod, ptr %mod14.i, align 4
  %3 = call ptr @memset(ptr %mkobj.i, i32 0, i32 136)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @module_kset to i32))
  %4 = load ptr, ptr @module_kset, align 4
  %kset.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 4, i32 0, i32 3
  %5 = ptrtoint ptr %kset.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %4, ptr %kset.i, align 4
  %call23.i = tail call i32 (ptr, ptr, ptr, ptr, ...) @kobject_init_and_add(ptr noundef %mkobj.i, ptr noundef nonnull @module_ktype, ptr noundef null, ptr noundef nonnull @.str.280, ptr noundef %name1.i) #29
  %tobool24.not.i = icmp eq i32 %call23.i, 0
  br i1 %tobool24.not.i, label %if.end, label %if.then25.i

if.then25.i:                                      ; preds = %if.end13.i
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %c.i.i) #29
  %6 = getelementptr inbounds i8, ptr %c.i.i, i32 4
  %7 = call ptr @memset(ptr %6, i32 255, i32 52)
  %8 = ptrtoint ptr %c.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %c.i.i, align 4
  call void @__init_swait_queue_head(ptr noundef %6, ptr noundef nonnull @.str.60, ptr noundef nonnull @init_completion.__key) #29
  %kobj_completion.i.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 4, i32 4
  %9 = ptrtoint ptr %kobj_completion.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %c.i.i, ptr %kobj_completion.i.i, align 4
  call void @kobject_put(ptr noundef %mkobj.i) #29
  call void @wait_for_completion(ptr noundef nonnull %c.i.i) #29
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %c.i.i) #29
  br label %cleanup

if.end:                                           ; preds = %if.end13.i
  %call1 = tail call ptr @kobject_create_and_add(ptr noundef nonnull @.str.274, ptr noundef %mkobj.i) #29
  %holders_dir = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 8
  %10 = ptrtoint ptr %holders_dir to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %call1, ptr %holders_dir, align 128
  %tobool3.not = icmp eq ptr %call1, null
  br i1 %tobool3.not, label %out_unreg, label %if.end5

if.end5:                                          ; preds = %if.end
  %call6 = tail call i32 @module_param_sysfs_setup(ptr noundef %mod, ptr noundef %kparam, i32 noundef %num_params) #29
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.end9, label %out_unreg_holders

if.end9:                                          ; preds = %if.end5
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %11 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %11, i32 noundef 3520, i32 noundef 400) #38
  %modinfo_attrs.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 5
  %12 = ptrtoint ptr %modinfo_attrs.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %call7.i.i.i, ptr %modinfo_attrs.i, align 4
  %tobool.not.i36 = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i36, label %out_unreg_param, label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %if.end9
  %13 = phi ptr [ %19, %for.inc.i ], [ @module_uevent, %if.end9 ]
  %i.040.i = phi i32 [ %inc.i, %for.inc.i ], [ 0, %if.end9 ]
  %temp_attr.039.i = phi ptr [ %temp_attr.1.i, %for.inc.i ], [ %call7.i.i.i, %if.end9 ]
  %test.i = getelementptr inbounds %struct.module_attribute, ptr %13, i32 0, i32 4
  %14 = ptrtoint ptr %test.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %test.i, align 4
  %tobool4.not.i38 = icmp eq ptr %15, null
  br i1 %tobool4.not.i38, label %if.then8.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %call6.i = tail call i32 %15(ptr noundef %mod) #29
  %tobool7.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.not.i, label %for.inc.i, label %if.then8.i

if.then8.i:                                       ; preds = %lor.lhs.false.i, %for.body.i
  %16 = call ptr @memcpy(ptr %temp_attr.039.i, ptr %13, i32 40)
  %key.i = getelementptr inbounds %struct.attribute, ptr %temp_attr.039.i, i32 0, i32 3
  %17 = ptrtoint ptr %key.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr @module_add_modinfo_attrs.__key, ptr %key.i, align 4
  %call.i.i = tail call i32 @sysfs_create_file_ns(ptr noundef %mkobj.i, ptr noundef %temp_attr.039.i, ptr noundef null) #29
  %tobool12.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool12.not.i, label %if.end14.i, label %error_out.i

if.end14.i:                                       ; preds = %if.then8.i
  %incdec.ptr.i = getelementptr %struct.module_attribute, ptr %temp_attr.039.i, i32 1
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end14.i, %lor.lhs.false.i
  %temp_attr.1.i = phi ptr [ %incdec.ptr.i, %if.end14.i ], [ %temp_attr.039.i, %lor.lhs.false.i ]
  %inc.i = add nuw nsw i32 %i.040.i, 1
  %arrayidx.i = getelementptr [9 x ptr], ptr @modinfo_attrs, i32 0, i32 %inc.i
  %18 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx.i, align 4
  %exitcond.i = icmp eq i32 %inc.i, 8
  br i1 %exitcond.i, label %if.end13, label %for.body.i

error_out.i:                                      ; preds = %if.then8.i
  %cmp.not.i = icmp eq i32 %i.040.i, 0
  %20 = ptrtoint ptr %modinfo_attrs.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %modinfo_attrs.i, align 4
  br i1 %cmp.not.i, label %out_unreg_param.sink.split, label %if.then16.i

if.then16.i:                                      ; preds = %error_out.i
  %tobool.not21.i.i = icmp eq ptr %21, null
  br i1 %tobool.not21.i.i, label %out_unreg_param.sink.split, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i, %if.then16.i
  %arrayidx23.i.i = phi ptr [ %arrayidx.i.i, %for.inc.i.i ], [ %21, %if.then16.i ]
  %22 = phi ptr [ %28, %for.inc.i.i ], [ %21, %if.then16.i ]
  %i.022.i.i = phi i32 [ %inc.i.i, %for.inc.i.i ], [ 0, %if.then16.i ]
  %exitcond43.not.i = icmp eq i32 %i.022.i.i, %i.040.i
  br i1 %exitcond43.not.i, label %out_unreg_param.sink.split, label %if.end.i.i

if.end.i.i:                                       ; preds = %for.body.i.i
  %23 = ptrtoint ptr %arrayidx23.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %arrayidx23.i.i, align 4
  %tobool3.not.i.i = icmp eq ptr %24, null
  br i1 %tobool3.not.i.i, label %out_unreg_param.sink.split, label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.end.i.i
  tail call void @sysfs_remove_file_ns(ptr noundef %mkobj.i, ptr noundef nonnull %arrayidx23.i.i, ptr noundef null) #29
  %free.i.i = getelementptr %struct.module_attribute, ptr %22, i32 %i.022.i.i, i32 5
  %25 = ptrtoint ptr %free.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %free.i.i, align 4
  %tobool7.not.i.i = icmp eq ptr %26, null
  br i1 %tobool7.not.i.i, label %for.inc.i.i, label %if.then8.i.i

if.then8.i.i:                                     ; preds = %if.end5.i.i
  tail call void %26(ptr noundef %mod) #29
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.then8.i.i, %if.end5.i.i
  %inc.i.i = add nuw nsw i32 %i.022.i.i, 1
  %27 = ptrtoint ptr %modinfo_attrs.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %modinfo_attrs.i, align 4
  %arrayidx.i.i = getelementptr %struct.module_attribute, ptr %28, i32 %inc.i.i
  %tobool.not.i.i = icmp eq ptr %arrayidx.i.i, null
  br i1 %tobool.not.i.i, label %out_unreg_param.sink.split, label %for.body.i.i

if.end13:                                         ; preds = %for.inc.i
  tail call void @mutex_lock_nested(ptr noundef nonnull @module_mutex, i32 noundef 0) #29
  %target_list.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 64
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i44, %if.end13
  %.pn.in.i = phi ptr [ %target_list.i, %if.end13 ], [ %.pn.i, %for.body.i44 ]
  %29 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %.pn.i = load ptr, ptr %.pn.in.i, align 4
  %cmp.not.i41 = icmp eq ptr %.pn.i, %target_list.i
  br i1 %cmp.not.i41, label %add_usage_links.exit.thread, label %for.body.i44

add_usage_links.exit.thread:                      ; preds = %for.cond.i
  tail call void @mutex_unlock(ptr noundef nonnull @module_mutex) #29
  tail call fastcc void @add_sect_attrs(ptr noundef %mod, ptr noundef %info)
  tail call fastcc void @add_notes_attrs(ptr noundef %mod, ptr noundef %info)
  br label %cleanup

for.body.i44:                                     ; preds = %for.cond.i
  %target.i = getelementptr i8, ptr %.pn.i, i32 12
  %30 = ptrtoint ptr %target.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %target.i, align 4
  %holders_dir.i = getelementptr inbounds %struct.module, ptr %31, i32 0, i32 8
  %32 = ptrtoint ptr %holders_dir.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %holders_dir.i, align 128
  %call.i42 = tail call i32 @sysfs_create_link(ptr noundef %33, ptr noundef %mkobj.i, ptr noundef %name1.i) #29
  %tobool.not.i43 = icmp eq i32 %call.i42, 0
  br i1 %tobool.not.i43, label %for.cond.i, label %if.then9.i

if.then9.i:                                       ; preds = %for.body.i44
  tail call void @mutex_unlock(ptr noundef nonnull @module_mutex) #29
  tail call void @mutex_lock_nested(ptr noundef nonnull @module_mutex, i32 noundef 0) #29
  %34 = ptrtoint ptr %target_list.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %.pn12.i.i = load ptr, ptr %target_list.i, align 4
  %cmp.not13.i.i = icmp eq ptr %.pn12.i.i, %target_list.i
  br i1 %cmp.not13.i.i, label %out_unreg_modinfo_attrs, label %for.body.i.i45

for.body.i.i45:                                   ; preds = %for.body.i.i45, %if.then9.i
  %.pn14.i.i = phi ptr [ %.pn.i.i, %for.body.i.i45 ], [ %.pn12.i.i, %if.then9.i ]
  %target.i.i = getelementptr i8, ptr %.pn14.i.i, i32 12
  %35 = ptrtoint ptr %target.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %target.i.i, align 4
  %holders_dir.i.i = getelementptr inbounds %struct.module, ptr %36, i32 0, i32 8
  %37 = ptrtoint ptr %holders_dir.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %holders_dir.i.i, align 128
  tail call void @sysfs_remove_link(ptr noundef %38, ptr noundef %name1.i) #29
  %39 = ptrtoint ptr %.pn14.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %.pn.i.i = load ptr, ptr %.pn14.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, %target_list.i
  br i1 %cmp.not.i.i, label %out_unreg_modinfo_attrs, label %for.body.i.i45

out_unreg_modinfo_attrs:                          ; preds = %for.body.i.i45, %if.then9.i
  tail call void @mutex_unlock(ptr noundef nonnull @module_mutex) #29
  %40 = ptrtoint ptr %modinfo_attrs.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %modinfo_attrs.i, align 4
  %tobool.not21.i = icmp eq ptr %41, null
  br i1 %tobool.not21.i, label %out_unreg_param.sink.split, label %for.body.i48

for.body.i48:                                     ; preds = %for.inc.i55, %out_unreg_modinfo_attrs
  %arrayidx23.i = phi ptr [ %arrayidx.i53, %for.inc.i55 ], [ %41, %out_unreg_modinfo_attrs ]
  %42 = phi ptr [ %48, %for.inc.i55 ], [ %41, %out_unreg_modinfo_attrs ]
  %i.022.i = phi i32 [ %inc.i52, %for.inc.i55 ], [ 0, %out_unreg_modinfo_attrs ]
  %43 = ptrtoint ptr %arrayidx23.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %arrayidx23.i, align 4
  %tobool3.not.i = icmp eq ptr %44, null
  br i1 %tobool3.not.i, label %out_unreg_param.sink.split, label %if.end5.i

if.end5.i:                                        ; preds = %for.body.i48
  tail call void @sysfs_remove_file_ns(ptr noundef %mkobj.i, ptr noundef nonnull %arrayidx23.i, ptr noundef null) #29
  %free.i = getelementptr %struct.module_attribute, ptr %42, i32 %i.022.i, i32 5
  %45 = ptrtoint ptr %free.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %free.i, align 4
  %tobool7.not.i50 = icmp eq ptr %46, null
  br i1 %tobool7.not.i50, label %for.inc.i55, label %if.then8.i51

if.then8.i51:                                     ; preds = %if.end5.i
  tail call void %46(ptr noundef %mod) #29
  br label %for.inc.i55

for.inc.i55:                                      ; preds = %if.then8.i51, %if.end5.i
  %inc.i52 = add i32 %i.022.i, 1
  %47 = ptrtoint ptr %modinfo_attrs.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %modinfo_attrs.i, align 4
  %arrayidx.i53 = getelementptr %struct.module_attribute, ptr %48, i32 %inc.i52
  %tobool.not.i54 = icmp eq ptr %arrayidx.i53, null
  br i1 %tobool.not.i54, label %out_unreg_param.sink.split, label %for.body.i48

out_unreg_param.sink.split:                       ; preds = %for.inc.i55, %for.body.i48, %out_unreg_modinfo_attrs, %for.inc.i.i, %if.end.i.i, %for.body.i.i, %if.then16.i, %error_out.i
  %.lcssa.i.sink.i.sink = phi ptr [ %21, %error_out.i ], [ null, %if.then16.i ], [ null, %out_unreg_modinfo_attrs ], [ %48, %for.inc.i55 ], [ %42, %for.body.i48 ], [ %28, %for.inc.i.i ], [ %22, %if.end.i.i ], [ %22, %for.body.i.i ]
  %err.0.ph = phi i32 [ %call.i.i, %error_out.i ], [ %call.i.i, %if.then16.i ], [ %call.i42, %out_unreg_modinfo_attrs ], [ %call.i42, %for.body.i48 ], [ %call.i42, %for.inc.i55 ], [ %call.i.i, %for.body.i.i ], [ %call.i.i, %if.end.i.i ], [ %call.i.i, %for.inc.i.i ]
  tail call void @kfree(ptr noundef %.lcssa.i.sink.i.sink) #29
  br label %out_unreg_param

out_unreg_param:                                  ; preds = %out_unreg_param.sink.split, %if.end9
  %err.0 = phi i32 [ -12, %if.end9 ], [ %err.0.ph, %out_unreg_param.sink.split ]
  tail call void @module_param_sysfs_remove(ptr noundef %mod) #29
  br label %out_unreg_holders

out_unreg_holders:                                ; preds = %out_unreg_param, %if.end5
  %err.1 = phi i32 [ %call6, %if.end5 ], [ %err.0, %out_unreg_param ]
  %49 = ptrtoint ptr %holders_dir to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %holders_dir, align 128
  tail call void @kobject_put(ptr noundef %50) #29
  br label %out_unreg

out_unreg:                                        ; preds = %out_unreg_holders, %if.end
  %err.2 = phi i32 [ %err.1, %out_unreg_holders ], [ -12, %if.end ]
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %c.i) #29
  %51 = getelementptr inbounds i8, ptr %c.i, i32 4
  %52 = call ptr @memset(ptr %51, i32 255, i32 52)
  %53 = ptrtoint ptr %c.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 0, ptr %c.i, align 4
  call void @__init_swait_queue_head(ptr noundef %51, ptr noundef nonnull @.str.60, ptr noundef nonnull @init_completion.__key) #29
  %kobj_completion.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 4, i32 4
  %54 = ptrtoint ptr %kobj_completion.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %c.i, ptr %kobj_completion.i, align 4
  call void @kobject_put(ptr noundef %mkobj.i) #29
  call void @wait_for_completion(ptr noundef nonnull %c.i) #29
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %c.i) #29
  br label %cleanup

cleanup:                                          ; preds = %out_unreg, %add_usage_links.exit.thread, %if.then25.i, %do.end8.i, %do.end.i
  %retval.0 = phi i32 [ 0, %add_usage_links.exit.thread ], [ %err.2, %out_unreg ], [ -22, %do.end.i ], [ %call23.i, %if.then25.i ], [ -22, %do.end8.i ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_module_load(ptr noundef %mod) unnamed_addr #9 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_module_load, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_module_load, %do.body)) #29
          to label %if.end48 [label %do.body], !srcloc !782

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !770

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 108, i32 noundef 9, ptr noundef null) #29
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %if.end31

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !860
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_module_load, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i, %if.end31
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i ], [ %13, %if.end31 ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %mod) #29
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !861
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !861
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !770

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 108, i32 noundef 9, ptr noundef null) #29
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !794
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_module_load, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #29
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #29
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_module_load.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_module_load.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 48, ptr noundef nonnull @.str.15) #29
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !795
  %38 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @do_init_module(ptr noundef %mod) unnamed_addr #20 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3264, i32 noundef 8) #38
  %tobool.not = icmp eq ptr %call7.i, null
  br i1 %tobool.not, label %fail, label %if.end

if.end:                                           ; preds = %entry
  %init_layout = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26
  %1 = ptrtoint ptr %init_layout to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %init_layout, align 16
  %module_init = getelementptr inbounds %struct.mod_initfree, ptr %call7.i, i32 0, i32 1
  %3 = ptrtoint ptr %module_init to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %2, ptr %module_init, align 4
  %num_ctors.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 68
  %4 = ptrtoint ptr %num_ctors.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_ctors.i, align 4
  %cmp4.not.i = icmp eq i32 %5, 0
  br i1 %cmp4.not.i, label %do_mod_ctors.exit, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %if.end
  %ctors.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 67
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %i.05.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i ]
  %6 = ptrtoint ptr %ctors.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ctors.i, align 8
  %arrayidx.i = getelementptr ptr, ptr %7, i32 %i.05.i
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx.i, align 4
  tail call void %9() #29
  %inc.i = add nuw i32 %i.05.i, 1
  %10 = ptrtoint ptr %num_ctors.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %num_ctors.i, align 4
  %cmp.i = icmp ult i32 %inc.i, %11
  br i1 %cmp.i, label %for.body.i, label %do_mod_ctors.exit

do_mod_ctors.exit:                                ; preds = %for.body.i, %if.end
  %init = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 23
  %12 = ptrtoint ptr %init to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %init, align 4
  %cmp.not = icmp eq ptr %13, null
  br i1 %cmp.not, label %if.end11, label %if.end4

if.end4:                                          ; preds = %do_mod_ctors.exit
  %call3 = tail call i32 @do_one_initcall(ptr noundef nonnull %13) #29
  %cmp5 = icmp slt i32 %call3, 0
  br i1 %cmp5, label %fail_free_freeinit, label %if.end7

if.end7:                                          ; preds = %if.end4
  %cmp8.not = icmp eq i32 %call3, 0
  br i1 %cmp8.not, label %if.end11, label %do.end

do.end:                                           ; preds = %if.end7
  %name = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %call10 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.284, ptr noundef nonnull @.str.285, ptr noundef %name, i32 noundef %call3, ptr noundef nonnull @.str.285) #37
  tail call void @dump_stack() #37
  br label %if.end11

if.end11:                                         ; preds = %do.end, %if.end7, %do_mod_ctors.exit
  %14 = ptrtoint ptr %mod to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %mod, align 128
  %call12 = tail call i32 @blocking_notifier_call_chain(ptr noundef nonnull @module_notify_list, i32 noundef 0, ptr noundef %mod) #29
  %mkobj = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 4
  %call13 = tail call i32 @kobject_uevent(ptr noundef %mkobj, i32 noundef 0) #29
  %async_probe_requested = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 20
  %15 = ptrtoint ptr %async_probe_requested to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %async_probe_requested, align 2, !range !773
  %tobool14.not = icmp eq i8 %16, 0
  br i1 %tobool14.not, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end11
  tail call void @async_synchronize_full() #29
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %if.end11
  %17 = ptrtoint ptr %init_layout to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %init_layout, align 16
  %size = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26, i32 1
  %19 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %size, align 4
  %add.ptr = getelementptr i8, ptr %18, i32 %20
  tail call void @ftrace_free_mem(ptr noundef %mod, ptr noundef %18, ptr noundef %add.ptr) #29
  tail call void @mutex_lock_nested(ptr noundef nonnull @module_mutex, i32 noundef 0) #29
  tail call void @module_put(ptr noundef %mod)
  tail call void @trim_init_extable(ptr noundef %mod) #29
  %core_kallsyms = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 33
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !862
  %kallsyms47 = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 32
  %21 = ptrtoint ptr %kallsyms47 to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %core_kallsyms, ptr %kallsyms47, align 8
  tail call fastcc void @module_enable_ro(ptr noundef %mod, i1 noundef zeroext true)
  %22 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %size, align 4
  %tobool.not.i = icmp eq i32 %23, 0
  br i1 %tobool.not.i, label %mod_tree_remove_init.exit, label %if.then.i

if.then.i:                                        ; preds = %if.end16
  %node1.i.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26, i32 5, i32 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !842
  %24 = load i32, ptr @mod_tree, align 128
  %inc.i.i.i.i = add i32 %24, 1
  store i32 %inc.i.i.i.i, ptr @mod_tree, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !843
  tail call void @rb_erase(ptr noundef %node1.i.i, ptr noundef getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 0, i32 1, i32 0)) #29
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !842
  %25 = load i32, ptr @mod_tree, align 128
  %inc.i1.i.i.i = add i32 %25, 1
  store i32 %inc.i1.i.i.i, ptr @mod_tree, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !843
  %arrayidx.i.i.i.i = getelementptr %struct.module, ptr %mod, i32 0, i32 26, i32 5, i32 1, i32 0, i32 1
  tail call void @rb_erase(ptr noundef %arrayidx.i.i.i.i, ptr noundef getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 0, i32 1, i32 1)) #29
  br label %mod_tree_remove_init.exit

mod_tree_remove_init.exit:                        ; preds = %if.then.i, %if.end16
  tail call void @module_arch_freeing_init(ptr noundef %mod)
  %26 = call ptr @memset(ptr %init_layout, i32 0, i32 20)
  %call.i = tail call zeroext i1 @llist_add_batch(ptr noundef nonnull %call7.i, ptr noundef nonnull %call7.i, ptr noundef nonnull @init_free_list) #29
  br i1 %call.i, label %if.then67, label %if.end69

if.then67:                                        ; preds = %mod_tree_remove_init.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %27 = load ptr, ptr @system_wq, align 4
  %call.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %27, ptr noundef nonnull @init_free_wq) #29
  br label %if.end69

if.end69:                                         ; preds = %if.then67, %mod_tree_remove_init.exit
  tail call void @mutex_unlock(ptr noundef nonnull @module_mutex) #29
  br label %cleanup

fail_free_freeinit:                               ; preds = %if.end4
  tail call void @kfree(ptr noundef nonnull %call7.i) #29
  br label %fail

fail:                                             ; preds = %fail_free_freeinit, %entry
  %ret.1 = phi i32 [ %call3, %fail_free_freeinit ], [ -12, %entry ]
  %28 = ptrtoint ptr %mod to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 2, ptr %mod, align 128
  tail call void @synchronize_rcu() #29
  tail call void @module_put(ptr noundef %mod)
  %call71 = tail call i32 @blocking_notifier_call_chain(ptr noundef nonnull @module_notify_list, i32 noundef 2, ptr noundef %mod) #29
  tail call void @ftrace_release_mod(ptr noundef %mod) #29
  tail call fastcc void @free_module(ptr noundef %mod)
  br label %cleanup

cleanup:                                          ; preds = %fail, %if.end69
  %retval.0 = phi i32 [ %ret.1, %fail ], [ 0, %if.end69 ]
  tail call void @__wake_up(ptr noundef nonnull @module_wq, i32 noundef 3, i32 noundef 0, ptr noundef null) #29
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @free_modinfo(ptr noundef %mod) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr getelementptr inbounds (%struct.module_attribute, ptr @module_uevent, i32 0, i32 5), align 4
  %tobool1.not = icmp eq ptr %0, null
  br i1 %tobool1.not, label %for.inc, label %if.then

if.then:                                          ; preds = %entry
  tail call void %0(ptr noundef %mod) #29
  br label %for.inc

for.inc:                                          ; preds = %if.then, %entry
  %1 = load ptr, ptr getelementptr inbounds (%struct.module_attribute, ptr @modinfo_version, i32 0, i32 5), align 4
  %tobool1.not.1 = icmp eq ptr %1, null
  br i1 %tobool1.not.1, label %for.inc.1, label %if.then.1

if.then.1:                                        ; preds = %for.inc
  tail call void %1(ptr noundef %mod) #29
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then.1, %for.inc
  %2 = load ptr, ptr getelementptr inbounds (%struct.module_attribute, ptr @modinfo_srcversion, i32 0, i32 5), align 4
  %tobool1.not.2 = icmp eq ptr %2, null
  br i1 %tobool1.not.2, label %for.inc.2, label %if.then.2

if.then.2:                                        ; preds = %for.inc.1
  tail call void %2(ptr noundef %mod) #29
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.then.2, %for.inc.1
  %3 = load ptr, ptr getelementptr inbounds (%struct.module_attribute, ptr @modinfo_initstate, i32 0, i32 5), align 4
  %tobool1.not.3 = icmp eq ptr %3, null
  br i1 %tobool1.not.3, label %for.inc.3, label %if.then.3

if.then.3:                                        ; preds = %for.inc.2
  tail call void %3(ptr noundef %mod) #29
  br label %for.inc.3

for.inc.3:                                        ; preds = %if.then.3, %for.inc.2
  %4 = load ptr, ptr getelementptr inbounds (%struct.module_attribute, ptr @modinfo_coresize, i32 0, i32 5), align 4
  %tobool1.not.4 = icmp eq ptr %4, null
  br i1 %tobool1.not.4, label %for.inc.4, label %if.then.4

if.then.4:                                        ; preds = %for.inc.3
  tail call void %4(ptr noundef %mod) #29
  br label %for.inc.4

for.inc.4:                                        ; preds = %if.then.4, %for.inc.3
  %5 = load ptr, ptr getelementptr inbounds (%struct.module_attribute, ptr @modinfo_initsize, i32 0, i32 5), align 4
  %tobool1.not.5 = icmp eq ptr %5, null
  br i1 %tobool1.not.5, label %for.inc.5, label %if.then.5

if.then.5:                                        ; preds = %for.inc.4
  tail call void %5(ptr noundef %mod) #29
  br label %for.inc.5

for.inc.5:                                        ; preds = %if.then.5, %for.inc.4
  %6 = load ptr, ptr getelementptr inbounds (%struct.module_attribute, ptr @modinfo_taint, i32 0, i32 5), align 4
  %tobool1.not.6 = icmp eq ptr %6, null
  br i1 %tobool1.not.6, label %for.inc.6, label %if.then.6

if.then.6:                                        ; preds = %for.inc.5
  tail call void %6(ptr noundef %mod) #29
  br label %for.inc.6

for.inc.6:                                        ; preds = %if.then.6, %for.inc.5
  %7 = load ptr, ptr getelementptr inbounds (%struct.module_attribute, ptr @modinfo_refcnt, i32 0, i32 5), align 4
  %tobool1.not.7 = icmp eq ptr %7, null
  br i1 %tobool1.not.7, label %for.inc.7, label %if.then.7

if.then.7:                                        ; preds = %for.inc.6
  tail call void %7(ptr noundef %mod) #29
  br label %for.inc.7

for.inc.7:                                        ; preds = %if.then.7, %for.inc.6
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @module_deallocate(ptr noundef %mod) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %percpu.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 37
  %0 = ptrtoint ptr %percpu.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %percpu.i, align 8
  tail call void @free_percpu(ptr noundef %1) #29
  tail call void @module_arch_freeing_init(ptr noundef %mod)
  %init_layout = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26
  %2 = ptrtoint ptr %init_layout to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %init_layout, align 16
  tail call void @module_memfree(ptr noundef %3)
  %core_layout = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25
  %4 = ptrtoint ptr %core_layout to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %core_layout, align 128
  tail call void @module_memfree(ptr noundef %5)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mod_verify_sig(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_locked_down(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @elf_check_arch(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcspn(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #7

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @check_version(ptr nocapture noundef readonly %info, ptr noundef %symname, ptr noundef %mod, ptr noundef readonly %crc) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %sechdrs1 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 4
  %0 = ptrtoint ptr %sechdrs1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sechdrs1, align 4
  %vers = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15, i32 3
  %2 = ptrtoint ptr %vers to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vers, align 4
  %tobool.not = icmp eq ptr %crc, null
  br i1 %tobool.not, label %cleanup60, label %if.end

if.end:                                           ; preds = %entry
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %call.i = tail call i32 @test_taint(i32 noundef 1) #29
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %do.end.i, label %try_to_force_load.exit

do.end.i:                                         ; preds = %if.then2
  %name.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %call1.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.147, ptr noundef %name.i, ptr noundef %symname) #37
  br label %try_to_force_load.exit

try_to_force_load.exit:                           ; preds = %do.end.i, %if.then2
  tail call void @add_taint(i32 noundef 1, i32 noundef 1) #29
  %taints.i.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 28
  tail call void @_set_bit(i32 noundef 1, ptr noundef %taints.i.i) #29
  br label %cleanup60

if.end4:                                          ; preds = %if.end
  %sh_addr = getelementptr %struct.elf32_shdr, ptr %1, i32 %3, i32 3
  %4 = ptrtoint ptr %sh_addr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sh_addr, align 4
  %6 = inttoptr i32 %5 to ptr
  %sh_size = getelementptr %struct.elf32_shdr, ptr %1, i32 %3, i32 5
  %7 = ptrtoint ptr %sh_size to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sh_size, align 4
  %cmp690.not = icmp ult i32 %8, 64
  br i1 %cmp690.not, label %land.end, label %for.body.preheader

for.body.preheader:                               ; preds = %if.end4
  %div84 = lshr i32 %8, 6
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.preheader
  %i.091 = phi i32 [ %inc, %for.inc ], [ 0, %for.body.preheader ]
  %name = getelementptr %struct.modversion_info, ptr %6, i32 %i.091, i32 1
  %call9 = tail call i32 @strcmp(ptr noundef %name, ptr noundef %symname) #32
  %cmp10.not = icmp eq i32 %call9, 0
  br i1 %cmp10.not, label %if.end13, label %for.inc

if.end13:                                         ; preds = %for.body
  %arrayidx8.le = getelementptr %struct.modversion_info, ptr %6, i32 %i.091
  %9 = ptrtoint ptr %crc to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %crc, align 4
  %11 = ptrtoint ptr %arrayidx8.le to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx8.le, align 4
  %cmp16 = icmp eq i32 %12, %10
  br i1 %cmp16, label %cleanup60, label %do.body

do.body:                                          ; preds = %if.end13
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @check_version.__UNIQUE_ID_ddebug291, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@check_version, %if.then24)) #29
          to label %do.end56 [label %if.then24], !srcloc !782

if.then24:                                        ; preds = %do.body
  %13 = ptrtoint ptr %arrayidx8.le to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx8.le, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @check_version.__UNIQUE_ID_ddebug291, ptr noundef nonnull @.str.142, i32 noundef %10, i32 noundef %14) #29
  br label %do.end56

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %i.091, 1
  %exitcond.not = icmp eq i32 %inc, %div84
  br i1 %exitcond.not, label %land.end, label %for.body

land.end:                                         ; preds = %for.inc, %if.end4
  %.b85 = load i1, ptr @check_version.__already_done, align 1
  br i1 %.b85, label %cleanup60, label %if.then39, !prof !770

if.then39:                                        ; preds = %land.end
  store i1 true, ptr @check_version.__already_done, align 1
  %15 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %info, align 4
  %call45 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.143, ptr noundef %16, ptr noundef %symname) #37
  br label %cleanup60

do.end56:                                         ; preds = %if.then24, %do.body
  %17 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %info, align 4
  %call59 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.145, ptr noundef %18, ptr noundef %symname) #37
  br label %cleanup60

cleanup60:                                        ; preds = %do.end56, %if.then39, %land.end, %if.end13, %try_to_force_load.exit, %entry
  %retval.2 = phi i32 [ 1, %try_to_force_load.exit ], [ 0, %do.end56 ], [ 1, %entry ], [ 1, %if.then39 ], [ 1, %land.end ], [ 1, %if.end13 ]
  ret i32 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @test_taint(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @layout_sections(ptr noundef %mod, ptr nocapture noundef readonly %info) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %hdr = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 2
  %0 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hdr, align 4
  %e_shnum312 = getelementptr inbounds %struct.elf32_hdr, ptr %1, i32 0, i32 12
  %2 = ptrtoint ptr %e_shnum312 to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %e_shnum312, align 4
  %cmp314.not = icmp eq i16 %3, 0
  br i1 %cmp314.not, label %do.body, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %sechdrs = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %i.0315 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %4 = ptrtoint ptr %sechdrs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sechdrs, align 4
  %sh_entsize = getelementptr %struct.elf32_shdr, ptr %5, i32 %i.0315, i32 9
  %6 = ptrtoint ptr %sh_entsize to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -1, ptr %sh_entsize, align 4
  %inc = add nuw nsw i32 %i.0315, 1
  %7 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %hdr, align 4
  %e_shnum = getelementptr inbounds %struct.elf32_hdr, ptr %8, i32 0, i32 12
  %9 = ptrtoint ptr %e_shnum to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %e_shnum, align 4
  %conv = zext i16 %10 to i32
  %cmp = icmp ult i32 %inc, %conv
  br i1 %cmp, label %for.body, label %do.body

do.body:                                          ; preds = %for.body, %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @layout_sections.__UNIQUE_ID_ddebug296, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@layout_sections, %if.then)) #29
          to label %do.end [label %if.then], !srcloc !782

if.then:                                          ; preds = %do.body
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @layout_sections.__UNIQUE_ID_ddebug296, ptr noundef nonnull @.str.183) #29
  br label %do.end

do.end:                                           ; preds = %if.then, %do.body
  %sechdrs15 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 4
  %secstrings = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  %size = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25, i32 1
  %ro_after_init_size = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25, i32 4
  %ro_size = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25, i32 3
  %text_size = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25, i32 2
  br label %for.cond8.preheader

for.cond8.preheader:                              ; preds = %for.inc94, %do.end
  %m.0321 = phi i32 [ 0, %do.end ], [ %inc95, %for.inc94 ]
  %11 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %hdr, align 4
  %e_shnum10316 = getelementptr inbounds %struct.elf32_hdr, ptr %12, i32 0, i32 12
  %13 = ptrtoint ptr %e_shnum10316 to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %e_shnum10316, align 4
  %cmp12318.not = icmp eq i16 %14, 0
  br i1 %cmp12318.not, label %for.end58, label %for.body14.lr.ph

for.body14.lr.ph:                                 ; preds = %for.cond8.preheader
  %arrayidx17 = getelementptr [5 x [2 x i32]], ptr @layout_sections.masks, i32 0, i32 %m.0321
  %15 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx17, align 4
  %arrayidx25 = getelementptr [5 x [2 x i32]], ptr @layout_sections.masks, i32 0, i32 %m.0321, i32 1
  br label %for.body14

for.body14:                                       ; preds = %cleanup, %for.body14.lr.ph
  %i.1319 = phi i32 [ 0, %for.body14.lr.ph ], [ %inc57, %cleanup ]
  %17 = ptrtoint ptr %sechdrs15 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sechdrs15, align 4
  %arrayidx16 = getelementptr %struct.elf32_shdr, ptr %18, i32 %i.1319
  %19 = ptrtoint ptr %secstrings to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %secstrings, align 4
  %21 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx16, align 4
  %add.ptr = getelementptr i8, ptr %20, i32 %22
  %sh_flags = getelementptr %struct.elf32_shdr, ptr %18, i32 %i.1319, i32 2
  %23 = ptrtoint ptr %sh_flags to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %sh_flags, align 4
  %and = and i32 %16, %24
  %cmp21.not = icmp eq i32 %and, %16
  br i1 %cmp21.not, label %lor.lhs.false, label %cleanup

lor.lhs.false:                                    ; preds = %for.body14
  %25 = ptrtoint ptr %arrayidx25 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %arrayidx25, align 4
  %and26 = and i32 %26, %24
  %tobool27.not = icmp eq i32 %and26, 0
  br i1 %tobool27.not, label %lor.lhs.false28, label %cleanup

lor.lhs.false28:                                  ; preds = %lor.lhs.false
  %sh_entsize29 = getelementptr %struct.elf32_shdr, ptr %18, i32 %i.1319, i32 9
  %27 = ptrtoint ptr %sh_entsize29 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %sh_entsize29, align 4
  %cmp30.not = icmp eq i32 %28, -1
  br i1 %cmp30.not, label %lor.lhs.false32, label %cleanup

lor.lhs.false32:                                  ; preds = %lor.lhs.false28
  %call.i = tail call zeroext i1 @module_init_section(ptr noundef %add.ptr) #29
  br i1 %call.i, label %cleanup, label %if.end36

if.end36:                                         ; preds = %lor.lhs.false32
  %call.i295 = tail call i32 @arch_mod_section_prepend(ptr noundef %mod, i32 noundef %i.1319) #29
  %29 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %size, align 4
  %add.i = add i32 %30, %call.i295
  store i32 %add.i, ptr %size, align 4
  %sh_addralign.i = getelementptr %struct.elf32_shdr, ptr %18, i32 %i.1319, i32 8
  %31 = ptrtoint ptr %sh_addralign.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %sh_addralign.i, align 4
  %tobool.not.i = icmp eq i32 %32, 0
  %.op.i = add i32 %32, -1
  %sub.i = select i1 %tobool.not.i, i32 0, i32 %.op.i
  %add1.i = add i32 %sub.i, %add.i
  %neg.i = xor i32 %sub.i, -1
  %and.i = and i32 %add1.i, %neg.i
  %sh_size.i = getelementptr %struct.elf32_shdr, ptr %18, i32 %i.1319, i32 5
  %33 = ptrtoint ptr %sh_size.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %sh_size.i, align 4
  %add9.i = add i32 %and.i, %34
  store i32 %add9.i, ptr %size, align 4
  %35 = ptrtoint ptr %sh_entsize29 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %and.i, ptr %sh_entsize29, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @layout_sections.__UNIQUE_ID_ddebug297, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@layout_sections, %if.then51)) #29
          to label %cleanup [label %if.then51], !srcloc !782

if.then51:                                        ; preds = %if.end36
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @layout_sections.__UNIQUE_ID_ddebug297, ptr noundef nonnull @.str.184, ptr noundef %add.ptr) #29
  br label %cleanup

cleanup:                                          ; preds = %if.then51, %if.end36, %lor.lhs.false32, %lor.lhs.false28, %lor.lhs.false, %for.body14
  %inc57 = add nuw nsw i32 %i.1319, 1
  %36 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %hdr, align 4
  %e_shnum10 = getelementptr inbounds %struct.elf32_hdr, ptr %37, i32 0, i32 12
  %38 = ptrtoint ptr %e_shnum10 to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %e_shnum10, align 4
  %conv11 = zext i16 %39 to i32
  %cmp12 = icmp ult i32 %inc57, %conv11
  br i1 %cmp12, label %for.body14, label %for.end58

for.end58:                                        ; preds = %cleanup, %for.cond8.preheader
  switch i32 %m.0321, label %for.inc94 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb67
    i32 2, label %sw.bb77
    i32 4, label %for.inc94.thread
  ]

sw.bb:                                            ; preds = %for.end58
  %40 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %size, align 4
  %add = add i32 %41, 4095
  %and61 = and i32 %add, -4096
  store i32 %and61, ptr %size, align 4
  %42 = ptrtoint ptr %text_size to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %and61, ptr %text_size, align 8
  br label %for.inc94

sw.bb67:                                          ; preds = %for.end58
  %43 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %size, align 4
  %add70 = add i32 %44, 4095
  %and71 = and i32 %add70, -4096
  store i32 %and71, ptr %size, align 4
  %45 = ptrtoint ptr %ro_size to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %and71, ptr %ro_size, align 4
  br label %for.inc94

sw.bb77:                                          ; preds = %for.end58
  %46 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %size, align 4
  %add80 = add i32 %47, 4095
  %and81 = and i32 %add80, -4096
  store i32 %and81, ptr %size, align 4
  %48 = ptrtoint ptr %ro_after_init_size to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %and81, ptr %ro_after_init_size, align 16
  br label %for.inc94

for.inc94.thread:                                 ; preds = %for.end58
  %49 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %size, align 4
  %add90 = add i32 %50, 4095
  %and91 = and i32 %add90, -4096
  store i32 %and91, ptr %size, align 4
  br label %do.body97

for.inc94:                                        ; preds = %sw.bb77, %sw.bb67, %sw.bb, %for.end58
  %inc95 = add nuw nsw i32 %m.0321, 1
  %exitcond.not = icmp eq i32 %inc95, 5
  br i1 %exitcond.not, label %do.body97, label %for.cond8.preheader

do.body97:                                        ; preds = %for.inc94, %for.inc94.thread
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @layout_sections.__UNIQUE_ID_ddebug298, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@layout_sections, %if.then109)) #29
          to label %do.end112 [label %if.then109], !srcloc !782

if.then109:                                       ; preds = %do.body97
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @layout_sections.__UNIQUE_ID_ddebug298, ptr noundef nonnull @.str.185) #29
  br label %do.end112

do.end112:                                        ; preds = %if.then109, %do.body97
  %size153 = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26, i32 1
  %ro_size203 = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26, i32 3
  %ro_after_init_size205 = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26, i32 4
  %text_size189 = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26, i32 2
  br label %for.cond117.preheader

for.cond117.preheader:                            ; preds = %for.inc214, %do.end112
  %m.1328 = phi i32 [ 0, %do.end112 ], [ %inc215, %for.inc214 ]
  %51 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %hdr, align 4
  %e_shnum119323 = getelementptr inbounds %struct.elf32_hdr, ptr %52, i32 0, i32 12
  %53 = ptrtoint ptr %e_shnum119323 to i32
  call void @__asan_load2_noabort(i32 %53)
  %54 = load i16, ptr %e_shnum119323, align 4
  %cmp121325.not = icmp eq i16 %54, 0
  br i1 %cmp121325.not, label %for.end178, label %for.body123.lr.ph

for.body123.lr.ph:                                ; preds = %for.cond117.preheader
  %arrayidx132 = getelementptr [5 x [2 x i32]], ptr @layout_sections.masks, i32 0, i32 %m.1328
  %55 = ptrtoint ptr %arrayidx132 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %arrayidx132, align 4
  %arrayidx142 = getelementptr [5 x [2 x i32]], ptr @layout_sections.masks, i32 0, i32 %m.1328, i32 1
  br label %for.body123

for.body123:                                      ; preds = %cleanup172, %for.body123.lr.ph
  %i.2326 = phi i32 [ 0, %for.body123.lr.ph ], [ %inc177, %cleanup172 ]
  %57 = ptrtoint ptr %sechdrs15 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %sechdrs15, align 4
  %arrayidx126 = getelementptr %struct.elf32_shdr, ptr %58, i32 %i.2326
  %59 = ptrtoint ptr %secstrings to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %secstrings, align 4
  %61 = ptrtoint ptr %arrayidx126 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %arrayidx126, align 4
  %add.ptr130 = getelementptr i8, ptr %60, i32 %62
  %sh_flags131 = getelementptr %struct.elf32_shdr, ptr %58, i32 %i.2326, i32 2
  %63 = ptrtoint ptr %sh_flags131 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %sh_flags131, align 4
  %and134 = and i32 %56, %64
  %cmp137.not = icmp eq i32 %and134, %56
  br i1 %cmp137.not, label %lor.lhs.false139, label %cleanup172

lor.lhs.false139:                                 ; preds = %for.body123
  %65 = ptrtoint ptr %arrayidx142 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %arrayidx142, align 4
  %and143 = and i32 %66, %64
  %tobool144.not = icmp eq i32 %and143, 0
  br i1 %tobool144.not, label %lor.lhs.false145, label %cleanup172

lor.lhs.false145:                                 ; preds = %lor.lhs.false139
  %sh_entsize146 = getelementptr %struct.elf32_shdr, ptr %58, i32 %i.2326, i32 9
  %67 = ptrtoint ptr %sh_entsize146 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %sh_entsize146, align 4
  %cmp147.not = icmp eq i32 %68, -1
  br i1 %cmp147.not, label %lor.lhs.false149, label %cleanup172

lor.lhs.false149:                                 ; preds = %lor.lhs.false145
  %call.i296 = tail call zeroext i1 @module_init_section(ptr noundef %add.ptr130) #29
  br i1 %call.i296, label %if.end152, label %cleanup172

if.end152:                                        ; preds = %lor.lhs.false149
  %call.i297 = tail call i32 @arch_mod_section_prepend(ptr noundef %mod, i32 noundef %i.2326) #29
  %69 = ptrtoint ptr %size153 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %size153, align 4
  %add.i298 = add i32 %70, %call.i297
  store i32 %add.i298, ptr %size153, align 4
  %sh_addralign.i299 = getelementptr %struct.elf32_shdr, ptr %58, i32 %i.2326, i32 8
  %71 = ptrtoint ptr %sh_addralign.i299 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %sh_addralign.i299, align 4
  %tobool.not.i300 = icmp eq i32 %72, 0
  %.op.i301 = add i32 %72, -1
  %sub.i302 = select i1 %tobool.not.i300, i32 0, i32 %.op.i301
  %add1.i303 = add i32 %sub.i302, %add.i298
  %neg.i304 = xor i32 %sub.i302, -1
  %and.i305 = and i32 %add1.i303, %neg.i304
  %sh_size.i306 = getelementptr %struct.elf32_shdr, ptr %58, i32 %i.2326, i32 5
  %73 = ptrtoint ptr %sh_size.i306 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %sh_size.i306, align 4
  %add9.i307 = add i32 %and.i305, %74
  store i32 %add9.i307, ptr %size153, align 4
  %or = or i32 %and.i305, -2147483648
  %75 = ptrtoint ptr %sh_entsize146 to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 %or, ptr %sh_entsize146, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @layout_sections.__UNIQUE_ID_ddebug299, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@layout_sections, %if.then168)) #29
          to label %cleanup172 [label %if.then168], !srcloc !782

if.then168:                                       ; preds = %if.end152
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @layout_sections.__UNIQUE_ID_ddebug299, ptr noundef nonnull @.str.184, ptr noundef %add.ptr130) #29
  br label %cleanup172

cleanup172:                                       ; preds = %if.then168, %if.end152, %lor.lhs.false149, %lor.lhs.false145, %lor.lhs.false139, %for.body123
  %inc177 = add nuw nsw i32 %i.2326, 1
  %76 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %hdr, align 4
  %e_shnum119 = getelementptr inbounds %struct.elf32_hdr, ptr %77, i32 0, i32 12
  %78 = ptrtoint ptr %e_shnum119 to i32
  call void @__asan_load2_noabort(i32 %78)
  %79 = load i16, ptr %e_shnum119, align 4
  %conv120 = zext i16 %79 to i32
  %cmp121 = icmp ult i32 %inc177, %conv120
  br i1 %cmp121, label %for.body123, label %for.end178

for.end178:                                       ; preds = %cleanup172, %for.cond117.preheader
  switch i32 %m.1328, label %for.inc214 [
    i32 0, label %sw.bb179
    i32 1, label %sw.bb190
    i32 2, label %sw.bb201
    i32 4, label %for.inc214.thread
  ]

sw.bb179:                                         ; preds = %for.end178
  %80 = ptrtoint ptr %size153 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %size153, align 4
  %add182 = add i32 %81, 4095
  %and183 = and i32 %add182, -4096
  store i32 %and183, ptr %size153, align 4
  %82 = ptrtoint ptr %text_size189 to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 %and183, ptr %text_size189, align 8
  br label %for.inc214

sw.bb190:                                         ; preds = %for.end178
  %83 = ptrtoint ptr %size153 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %size153, align 4
  %add193 = add i32 %84, 4095
  %and194 = and i32 %add193, -4096
  store i32 %and194, ptr %size153, align 4
  %85 = ptrtoint ptr %ro_size203 to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 %and194, ptr %ro_size203, align 4
  br label %for.inc214

sw.bb201:                                         ; preds = %for.end178
  %86 = ptrtoint ptr %ro_size203 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %ro_size203, align 4
  %88 = ptrtoint ptr %ro_after_init_size205 to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 %87, ptr %ro_after_init_size205, align 16
  br label %for.inc214

for.inc214.thread:                                ; preds = %for.end178
  %89 = ptrtoint ptr %size153 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %size153, align 4
  %add209 = add i32 %90, 4095
  %and210 = and i32 %add209, -4096
  store i32 %and210, ptr %size153, align 4
  br label %for.end216

for.inc214:                                       ; preds = %sw.bb201, %sw.bb190, %sw.bb179, %for.end178
  %inc215 = add nuw nsw i32 %m.1328, 1
  %exitcond330.not = icmp eq i32 %inc215, 5
  br i1 %exitcond330.not, label %for.end216, label %for.cond117.preheader

for.end216:                                       ; preds = %for.inc214, %for.inc214.thread
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @layout_symtab(ptr noundef %mod, ptr nocapture noundef %info) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %sechdrs = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 4
  %0 = ptrtoint ptr %sechdrs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sechdrs, align 4
  %index = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15
  %2 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %index, align 4
  %str = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15, i32 1
  %4 = ptrtoint ptr %str to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %str, align 4
  %add.ptr3 = getelementptr %struct.elf32_shdr, ptr %1, i32 %5
  %sh_flags = getelementptr %struct.elf32_shdr, ptr %1, i32 %3, i32 2
  %6 = ptrtoint ptr %sh_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sh_flags, align 4
  %or = or i32 %7, 2
  store i32 %or, ptr %sh_flags, align 4
  %size = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26, i32 1
  %8 = load i32, ptr %index, align 4
  %call.i = tail call i32 @arch_mod_section_prepend(ptr noundef %mod, i32 noundef %8) #29
  %9 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %size, align 4
  %add.i = add i32 %10, %call.i
  store i32 %add.i, ptr %size, align 4
  %sh_addralign.i = getelementptr %struct.elf32_shdr, ptr %1, i32 %3, i32 8
  %11 = ptrtoint ptr %sh_addralign.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sh_addralign.i, align 4
  %tobool.not.i = icmp eq i32 %12, 0
  %.op.i = add i32 %12, -1
  %sub.i = select i1 %tobool.not.i, i32 0, i32 %.op.i
  %add1.i = add i32 %sub.i, %add.i
  %neg.i = xor i32 %sub.i, -1
  %and.i = and i32 %add1.i, %neg.i
  %sh_size.i = getelementptr %struct.elf32_shdr, ptr %1, i32 %3, i32 5
  %13 = ptrtoint ptr %sh_size.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sh_size.i, align 4
  %add9.i = add i32 %and.i, %14
  store i32 %add9.i, ptr %size, align 4
  %or6 = or i32 %and.i, -2147483648
  %sh_entsize = getelementptr %struct.elf32_shdr, ptr %1, i32 %3, i32 9
  %15 = ptrtoint ptr %sh_entsize to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %or6, ptr %sh_entsize, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @layout_symtab.__UNIQUE_ID_ddebug300, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@layout_symtab, %if.then)) #29
          to label %do.end [label %if.then], !srcloc !782

if.then:                                          ; preds = %entry
  %add.ptr = getelementptr %struct.elf32_shdr, ptr %1, i32 %3
  %secstrings = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  %16 = ptrtoint ptr %secstrings to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %secstrings, align 4
  %18 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %add.ptr, align 4
  %add.ptr10 = getelementptr i8, ptr %17, i32 %19
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @layout_symtab.__UNIQUE_ID_ddebug300, ptr noundef nonnull @.str.184, ptr noundef %add.ptr10) #29
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %hdr = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 2
  %20 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %hdr, align 4
  %sh_offset = getelementptr %struct.elf32_shdr, ptr %1, i32 %3, i32 4
  %22 = ptrtoint ptr %sh_offset to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %sh_offset, align 4
  %add.ptr11 = getelementptr i8, ptr %21, i32 %23
  %24 = ptrtoint ptr %sh_size.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %sh_size.i, align 4
  %div163 = lshr i32 %25, 4
  %cmp186.not = icmp ult i32 %25, 16
  br i1 %cmp186.not, label %for.end, label %for.inc.peel

for.inc.peel:                                     ; preds = %do.end
  %strtab = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 6
  %umax = call i32 @llvm.umax.i32(i32 %div163, i32 1)
  %26 = ptrtoint ptr %strtab to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %strtab, align 4
  %28 = ptrtoint ptr %add.ptr11 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %add.ptr11, align 4
  %arrayidx22.peel = getelementptr i8, ptr %27, i32 %29
  %call23.peel = tail call i32 @strlen(ptr noundef %arrayidx22.peel) #32
  %add24.peel = add i32 %call23.peel, 1
  %exitcond.peel.not = icmp ult i32 %25, 32
  br i1 %exitcond.peel.not, label %for.end, label %for.body.peel.next

for.body.peel.next:                               ; preds = %for.inc.peel
  %pcpu = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15, i32 5
  %e_shnum = getelementptr inbounds %struct.elf32_hdr, ptr %21, i32 0, i32 12
  %30 = ptrtoint ptr %sechdrs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %sechdrs, align 4
  %32 = ptrtoint ptr %e_shnum to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %e_shnum, align 4
  %34 = ptrtoint ptr %pcpu to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %pcpu, align 4
  br label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.inc, %for.body.peel.next
  %i.0190 = phi i32 [ 1, %for.body.peel.next ], [ %inc26, %for.inc ]
  %strtab_size.0189 = phi i32 [ %add24.peel, %for.body.peel.next ], [ %strtab_size.1, %for.inc ]
  %ndst.0187 = phi i32 [ 1, %for.body.peel.next ], [ %ndst.1, %for.inc ]
  %add.ptr15 = getelementptr %struct.elf32_sym, ptr %add.ptr11, i32 %i.0190
  %st_shndx.i = getelementptr inbounds %struct.elf32_sym, ptr %add.ptr15, i32 0, i32 5
  %36 = ptrtoint ptr %st_shndx.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %st_shndx.i, align 2
  %conv.i = zext i16 %37 to i32
  %cmp.i = icmp ne i16 %37, 0
  %cmp4.not.i = icmp ult i16 %37, %33
  %or.cond.i = and i1 %cmp.i, %cmp4.not.i
  br i1 %or.cond.i, label %lor.lhs.false6.i, label %for.inc

lor.lhs.false6.i:                                 ; preds = %lor.lhs.false
  %38 = ptrtoint ptr %add.ptr15 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %add.ptr15, align 4
  %tobool.not.i167 = icmp eq i32 %39, 0
  br i1 %tobool.not.i167, label %for.inc, label %if.end.i

if.end.i:                                         ; preds = %lor.lhs.false6.i
  %cmp9.i = icmp eq i32 %35, %conv.i
  br i1 %cmp9.i, label %if.then21, label %if.end12.i

if.end12.i:                                       ; preds = %if.end.i
  %sh_flags.i = getelementptr %struct.elf32_shdr, ptr %31, i32 %conv.i, i32 2
  %40 = ptrtoint ptr %sh_flags.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %sh_flags.i, align 4
  %and.i168 = and i32 %41, 2
  %tobool15.not.i = icmp eq i32 %and.i168, 0
  br i1 %tobool15.not.i, label %for.inc, label %is_core_symbol.exit

is_core_symbol.exit:                              ; preds = %if.end12.i
  %sh_entsize.i = getelementptr %struct.elf32_shdr, ptr %31, i32 %conv.i, i32 9
  %42 = ptrtoint ptr %sh_entsize.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %sh_entsize.i, align 4
  %tobool18.not.i = icmp sgt i32 %43, -1
  br i1 %tobool18.not.i, label %if.then21, label %for.inc

if.then21:                                        ; preds = %is_core_symbol.exit, %if.end.i
  %44 = ptrtoint ptr %strtab to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %strtab, align 4
  %arrayidx = getelementptr %struct.elf32_sym, ptr %add.ptr11, i32 %i.0190
  %46 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %arrayidx, align 4
  %arrayidx22 = getelementptr i8, ptr %45, i32 %47
  %call23 = tail call i32 @strlen(ptr noundef %arrayidx22) #32
  %add = add i32 %strtab_size.0189, 1
  %add24 = add i32 %add, %call23
  %inc = add i32 %ndst.0187, 1
  br label %for.inc

for.inc:                                          ; preds = %if.then21, %is_core_symbol.exit, %if.end12.i, %lor.lhs.false6.i, %lor.lhs.false
  %ndst.1 = phi i32 [ %inc, %if.then21 ], [ %ndst.0187, %is_core_symbol.exit ], [ %ndst.0187, %lor.lhs.false6.i ], [ %ndst.0187, %lor.lhs.false ], [ %ndst.0187, %if.end12.i ]
  %strtab_size.1 = phi i32 [ %add24, %if.then21 ], [ %strtab_size.0189, %is_core_symbol.exit ], [ %strtab_size.0189, %lor.lhs.false6.i ], [ %strtab_size.0189, %lor.lhs.false ], [ %strtab_size.0189, %if.end12.i ]
  %inc26 = add nuw nsw i32 %i.0190, 1
  %exitcond.not = icmp eq i32 %inc26, %umax
  br i1 %exitcond.not, label %for.end, label %lor.lhs.false, !llvm.loop !863

for.end:                                          ; preds = %for.inc, %for.inc.peel, %do.end
  %ndst.0.lcssa = phi i32 [ 0, %do.end ], [ 1, %for.inc.peel ], [ %ndst.1, %for.inc ]
  %strtab_size.0.lcssa = phi i32 [ 0, %do.end ], [ %add24.peel, %for.inc.peel ], [ %strtab_size.1, %for.inc ]
  %size27 = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25, i32 1
  %48 = ptrtoint ptr %size27 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %size27, align 4
  %50 = ptrtoint ptr %sh_addralign.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %sh_addralign.i, align 4
  %tobool28.not = icmp eq i32 %51, 0
  %.op = add i32 %51, -1
  %sub = select i1 %tobool28.not, i32 0, i32 %.op
  %add29 = add i32 %sub, %49
  %neg = xor i32 %sub, -1
  %and = and i32 %add29, %neg
  %symoffs = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 7
  %52 = ptrtoint ptr %symoffs to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %and, ptr %symoffs, align 4
  %mul = shl i32 %ndst.0.lcssa, 4
  %add38 = add i32 %and, %mul
  store i32 %add38, ptr %size27, align 4
  %stroffs = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 8
  %53 = ptrtoint ptr %stroffs to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %add38, ptr %stroffs, align 4
  %54 = load i32, ptr %size27, align 4
  %add43 = add i32 %54, %strtab_size.0.lcssa
  store i32 %add43, ptr %size27, align 4
  %core_typeoffs = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 10
  %55 = ptrtoint ptr %core_typeoffs to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %add43, ptr %core_typeoffs, align 4
  %56 = load i32, ptr %size27, align 4
  %add49 = add i32 %ndst.0.lcssa, 4095
  %add52 = add i32 %add49, %56
  %and53 = and i32 %add52, -4096
  store i32 %and53, ptr %size27, align 4
  %sh_flags56 = getelementptr %struct.elf32_shdr, ptr %1, i32 %5, i32 2
  %57 = ptrtoint ptr %sh_flags56 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %sh_flags56, align 4
  %or57 = or i32 %58, 2
  store i32 %or57, ptr %sh_flags56, align 4
  %59 = ptrtoint ptr %str to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %str, align 4
  %call.i170 = tail call i32 @arch_mod_section_prepend(ptr noundef %mod, i32 noundef %60) #29
  %61 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %size, align 4
  %add.i171 = add i32 %62, %call.i170
  store i32 %add.i171, ptr %size, align 4
  %sh_addralign.i172 = getelementptr %struct.elf32_shdr, ptr %1, i32 %5, i32 8
  %63 = ptrtoint ptr %sh_addralign.i172 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %sh_addralign.i172, align 4
  %tobool.not.i173 = icmp eq i32 %64, 0
  %.op.i174 = add i32 %64, -1
  %sub.i175 = select i1 %tobool.not.i173, i32 0, i32 %.op.i174
  %add1.i176 = add i32 %sub.i175, %add.i171
  %neg.i177 = xor i32 %sub.i175, -1
  %and.i178 = and i32 %add1.i176, %neg.i177
  %sh_size.i179 = getelementptr %struct.elf32_shdr, ptr %1, i32 %5, i32 5
  %65 = ptrtoint ptr %sh_size.i179 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %sh_size.i179, align 4
  %add9.i180 = add i32 %and.i178, %66
  store i32 %add9.i180, ptr %size, align 4
  %or63 = or i32 %and.i178, -2147483648
  %sh_entsize64 = getelementptr %struct.elf32_shdr, ptr %1, i32 %5, i32 9
  %67 = ptrtoint ptr %sh_entsize64 to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %or63, ptr %sh_entsize64, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @layout_symtab.__UNIQUE_ID_ddebug301, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@layout_symtab, %if.then77)) #29
          to label %do.end83 [label %if.then77], !srcloc !782

if.then77:                                        ; preds = %for.end
  %secstrings78 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  %68 = ptrtoint ptr %secstrings78 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %secstrings78, align 4
  %70 = ptrtoint ptr %add.ptr3 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %add.ptr3, align 4
  %add.ptr80 = getelementptr i8, ptr %69, i32 %71
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @layout_symtab.__UNIQUE_ID_ddebug301, ptr noundef nonnull @.str.184, ptr noundef %add.ptr80) #29
  br label %do.end83

do.end83:                                         ; preds = %if.then77, %for.end
  %72 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %size, align 4
  %add86 = add i32 %73, 3
  %and87 = and i32 %add86, -4
  store i32 %and87, ptr %size, align 4
  %mod_kallsyms_init_off = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 14
  %74 = ptrtoint ptr %mod_kallsyms_init_off to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %and87, ptr %mod_kallsyms_init_off, align 4
  %75 = load i32, ptr %size, align 4
  %add94 = add i32 %75, 16
  store i32 %add94, ptr %size, align 4
  %init_typeoffs = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 9
  %76 = ptrtoint ptr %init_typeoffs to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %add94, ptr %init_typeoffs, align 4
  %77 = load i32, ptr %size, align 4
  %add100 = add nuw nsw i32 %div163, 4095
  %add103 = add i32 %add100, %77
  %and104 = and i32 %add103, -4096
  store i32 %and104, ptr %size, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @move_module(ptr nocapture noundef %mod, ptr nocapture noundef readonly %info) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %core_layout = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25
  %size = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25, i32 1
  %0 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %size, align 4
  %call = tail call ptr @module_alloc(i32 noundef %1)
  tail call void @kmemleak_not_leak(ptr noundef %call) #29
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %cleanup69, label %if.end

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %size, align 4
  %4 = call ptr @memset(ptr %call, i32 0, i32 %3)
  %5 = ptrtoint ptr %core_layout to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call, ptr %core_layout, align 128
  %init_layout = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26
  %size4 = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26, i32 1
  %6 = ptrtoint ptr %size4 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %size4, align 4
  %tobool5.not = icmp eq i32 %7, 0
  br i1 %tobool5.not, label %do.body, label %if.then6

if.then6:                                         ; preds = %if.end
  %call9 = tail call ptr @module_alloc(i32 noundef %7)
  tail call void @kmemleak_ignore(ptr noundef %call9) #29
  %tobool10.not = icmp eq ptr %call9, null
  br i1 %tobool10.not, label %if.then11, label %if.end14

if.then11:                                        ; preds = %if.then6
  %8 = ptrtoint ptr %core_layout to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %core_layout, align 128
  tail call void @module_memfree(ptr noundef %9)
  br label %cleanup69

if.end14:                                         ; preds = %if.then6
  %10 = ptrtoint ptr %size4 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %size4, align 4
  %12 = call ptr @memset(ptr %call9, i32 0, i32 %11)
  br label %do.body

do.body:                                          ; preds = %if.end14, %if.end
  %storemerge = phi ptr [ %call9, %if.end14 ], [ null, %if.end ]
  %13 = ptrtoint ptr %init_layout to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %storemerge, ptr %init_layout, align 16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @move_module.__UNIQUE_ID_ddebug304, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@move_module, %if.then26)) #29
          to label %do.end [label %if.then26], !srcloc !782

if.then26:                                        ; preds = %do.body
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @move_module.__UNIQUE_ID_ddebug304, ptr noundef nonnull @.str.188) #29
  br label %do.end

do.end:                                           ; preds = %if.then26, %do.body
  %hdr = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 2
  %14 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %hdr, align 4
  %e_shnum107 = getelementptr inbounds %struct.elf32_hdr, ptr %15, i32 0, i32 12
  %16 = ptrtoint ptr %e_shnum107 to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %e_shnum107, align 4
  %cmp109.not = icmp eq i16 %17, 0
  br i1 %cmp109.not, label %cleanup69, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %do.end
  %sechdrs = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 4
  %secstrings = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body

for.body:                                         ; preds = %cleanup, %for.body.lr.ph
  %i.0110 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %cleanup ]
  %18 = ptrtoint ptr %sechdrs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sechdrs, align 4
  %arrayidx = getelementptr %struct.elf32_shdr, ptr %19, i32 %i.0110
  %sh_flags = getelementptr %struct.elf32_shdr, ptr %19, i32 %i.0110, i32 2
  %20 = ptrtoint ptr %sh_flags to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sh_flags, align 4
  %and = and i32 %21, 2
  %tobool29.not = icmp eq i32 %and, 0
  br i1 %tobool29.not, label %cleanup, label %if.end31

if.end31:                                         ; preds = %for.body
  %sh_entsize = getelementptr %struct.elf32_shdr, ptr %19, i32 %i.0110, i32 9
  %22 = ptrtoint ptr %sh_entsize to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %sh_entsize, align 4
  %tobool33.not = icmp sgt i32 %23, -1
  br i1 %tobool33.not, label %if.else39, label %if.then34

if.then34:                                        ; preds = %if.end31
  %24 = ptrtoint ptr %init_layout to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %init_layout, align 16
  %and38 = and i32 %23, 2147483647
  %add.ptr = getelementptr i8, ptr %25, i32 %and38
  br label %if.end44

if.else39:                                        ; preds = %if.end31
  %26 = ptrtoint ptr %core_layout to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %core_layout, align 128
  %add.ptr43 = getelementptr i8, ptr %27, i32 %23
  br label %if.end44

if.end44:                                         ; preds = %if.else39, %if.then34
  %dest.0 = phi ptr [ %add.ptr, %if.then34 ], [ %add.ptr43, %if.else39 ]
  %sh_type = getelementptr %struct.elf32_shdr, ptr %19, i32 %i.0110, i32 1
  %28 = ptrtoint ptr %sh_type to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %sh_type, align 4
  %cmp45.not = icmp eq i32 %29, 8
  br i1 %cmp45.not, label %if.end48, label %if.then47

if.then47:                                        ; preds = %if.end44
  %sh_addr = getelementptr %struct.elf32_shdr, ptr %19, i32 %i.0110, i32 3
  %30 = ptrtoint ptr %sh_addr to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %sh_addr, align 4
  %32 = inttoptr i32 %31 to ptr
  %sh_size = getelementptr %struct.elf32_shdr, ptr %19, i32 %i.0110, i32 5
  %33 = ptrtoint ptr %sh_size to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %sh_size, align 4
  %35 = call ptr @memcpy(ptr %dest.0, ptr %32, i32 %34)
  br label %if.end48

if.end48:                                         ; preds = %if.then47, %if.end44
  %36 = ptrtoint ptr %dest.0 to i32
  %sh_addr49 = getelementptr %struct.elf32_shdr, ptr %19, i32 %i.0110, i32 3
  %37 = ptrtoint ptr %sh_addr49 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %sh_addr49, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @move_module.__UNIQUE_ID_ddebug305, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@move_module, %if.then62)) #29
          to label %cleanup [label %if.then62], !srcloc !782

if.then62:                                        ; preds = %if.end48
  %38 = ptrtoint ptr %sh_addr49 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %sh_addr49, align 4
  %40 = ptrtoint ptr %secstrings to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %secstrings, align 4
  %42 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %arrayidx, align 4
  %add.ptr64 = getelementptr i8, ptr %41, i32 %43
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @move_module.__UNIQUE_ID_ddebug305, ptr noundef nonnull @.str.189, i32 noundef %39, ptr noundef %add.ptr64) #29
  br label %cleanup

cleanup:                                          ; preds = %if.then62, %if.end48, %for.body
  %inc = add nuw nsw i32 %i.0110, 1
  %44 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %hdr, align 4
  %e_shnum = getelementptr inbounds %struct.elf32_hdr, ptr %45, i32 0, i32 12
  %46 = ptrtoint ptr %e_shnum to i32
  call void @__asan_load2_noabort(i32 %46)
  %47 = load i16, ptr %e_shnum, align 4
  %conv = zext i16 %47 to i32
  %cmp = icmp ult i32 %inc, %conv
  br i1 %cmp, label %for.body, label %cleanup69

cleanup69:                                        ; preds = %cleanup, %do.end, %if.then11, %entry
  %retval.0 = phi i32 [ -12, %if.then11 ], [ -12, %entry ], [ 0, %do.end ], [ 0, %cleanup ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmemleak_not_leak(ptr noundef) local_unnamed_addr #2 section ".ref.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmemleak_ignore(ptr noundef) local_unnamed_addr #2 section ".ref.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmemleak_scan_area(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2 section ".ref.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_wait_entry(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @prepare_to_wait_event(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_wait(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__mod_tree_insert(ptr noundef %node) unnamed_addr #20 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %node1 = getelementptr inbounds %struct.mod_tree_node, ptr %node, i32 0, i32 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !842
  %0 = load i32, ptr @mod_tree, align 128
  %inc.i.i = add i32 %0, 1
  store i32 %inc.i.i, ptr @mod_tree, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !843
  %1 = load ptr, ptr getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 0, i32 1, i32 0), align 32
  %tobool.not1.i.i = icmp eq ptr %1, null
  br i1 %tobool.not1.i.i, label %__lt_insert.exit.i, label %while.body.lr.ph.i.i

while.body.lr.ph.i.i:                             ; preds = %entry
  %add.ptr.i.i.i.i = getelementptr %struct.mod_tree_node, ptr %node, i32 -1, i32 1, i32 0, i32 0, i32 1
  %2 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %add.ptr.i.i.i.i, align 4
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i, %while.body.lr.ph.i.i
  %4 = phi ptr [ %1, %while.body.lr.ph.i.i ], [ %8, %while.body.i.i ]
  %add.ptr.i2.i.i.i = getelementptr i8, ptr %4, i32 -24
  %5 = ptrtoint ptr %add.ptr.i2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %add.ptr.i2.i.i.i, align 4
  %cmp.i.i.i = icmp ult ptr %3, %6
  %rb_left.i.i = getelementptr inbounds %struct.rb_node, ptr %4, i32 0, i32 2
  %rb_right.i.i = getelementptr inbounds %struct.rb_node, ptr %4, i32 0, i32 1
  %link.1.i.i = select i1 %cmp.i.i.i, ptr %rb_left.i.i, ptr %rb_right.i.i
  %7 = ptrtoint ptr %link.1.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %link.1.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %8, null
  br i1 %tobool.not.i.i, label %while.cond.while.end_crit_edge.i.i, label %while.body.i.i

while.cond.while.end_crit_edge.i.i:               ; preds = %while.body.i.i
  %phi.cast.le.i.i = ptrtoint ptr %4 to i32
  br label %__lt_insert.exit.i

__lt_insert.exit.i:                               ; preds = %while.cond.while.end_crit_edge.i.i, %entry
  %link.0.lcssa.i.i = phi ptr [ %link.1.i.i, %while.cond.while.end_crit_edge.i.i ], [ getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 0, i32 1, i32 0), %entry ]
  %parent.0.lcssa.i.i = phi i32 [ %phi.cast.le.i.i, %while.cond.while.end_crit_edge.i.i ], [ 0, %entry ]
  %9 = ptrtoint ptr %node1 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %parent.0.lcssa.i.i, ptr %node1, align 4
  %rb_right.i.i.i = getelementptr %struct.mod_tree_node, ptr %node, i32 0, i32 1, i32 0, i32 0, i32 1
  %10 = ptrtoint ptr %rb_right.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %rb_right.i.i.i, align 4
  %rb_left.i.i.i = getelementptr %struct.mod_tree_node, ptr %node, i32 0, i32 1, i32 0, i32 0, i32 2
  %11 = ptrtoint ptr %rb_left.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %rb_left.i.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !865
  %12 = ptrtoint ptr %link.0.lcssa.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %node1, ptr %link.0.lcssa.i.i, align 4
  tail call void @rb_insert_color(ptr noundef %node1, ptr noundef getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 0, i32 1, i32 0)) #29
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !842
  %13 = load i32, ptr @mod_tree, align 128
  %inc.i18.i = add i32 %13, 1
  store i32 %inc.i18.i, ptr @mod_tree, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !843
  %14 = load ptr, ptr getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 0, i32 1, i32 1), align 4
  %tobool.not1.i1.i = icmp eq ptr %14, null
  br i1 %tobool.not1.i1.i, label %latch_tree_insert.exit, label %while.body.lr.ph.i3.i

while.body.lr.ph.i3.i:                            ; preds = %__lt_insert.exit.i
  %add.ptr.i.i.i2.i = getelementptr %struct.mod_tree_node, ptr %node, i32 -1, i32 1, i32 0, i32 0, i32 1
  %15 = ptrtoint ptr %add.ptr.i.i.i2.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %add.ptr.i.i.i2.i, align 4
  br label %while.body.i10.i

while.body.i10.i:                                 ; preds = %while.body.i10.i, %while.body.lr.ph.i3.i
  %17 = phi ptr [ %14, %while.body.lr.ph.i3.i ], [ %21, %while.body.i10.i ]
  %add.ptr.i2.i.i4.i = getelementptr i8, ptr %17, i32 -36
  %18 = ptrtoint ptr %add.ptr.i2.i.i4.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %add.ptr.i2.i.i4.i, align 4
  %cmp.i.i5.i = icmp ult ptr %16, %19
  %rb_left.i6.i = getelementptr inbounds %struct.rb_node, ptr %17, i32 0, i32 2
  %rb_right.i7.i = getelementptr inbounds %struct.rb_node, ptr %17, i32 0, i32 1
  %link.1.i8.i = select i1 %cmp.i.i5.i, ptr %rb_left.i6.i, ptr %rb_right.i7.i
  %20 = ptrtoint ptr %link.1.i8.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %link.1.i8.i, align 4
  %tobool.not.i9.i = icmp eq ptr %21, null
  br i1 %tobool.not.i9.i, label %while.cond.while.end_crit_edge.i12.i, label %while.body.i10.i

while.cond.while.end_crit_edge.i12.i:             ; preds = %while.body.i10.i
  %phi.cast.le.i11.i = ptrtoint ptr %17 to i32
  br label %latch_tree_insert.exit

latch_tree_insert.exit:                           ; preds = %while.cond.while.end_crit_edge.i12.i, %__lt_insert.exit.i
  %link.0.lcssa.i13.i = phi ptr [ %link.1.i8.i, %while.cond.while.end_crit_edge.i12.i ], [ getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 0, i32 1, i32 1), %__lt_insert.exit.i ]
  %parent.0.lcssa.i14.i = phi i32 [ %phi.cast.le.i11.i, %while.cond.while.end_crit_edge.i12.i ], [ 0, %__lt_insert.exit.i ]
  %arrayidx2.i.i = getelementptr %struct.mod_tree_node, ptr %node, i32 0, i32 1, i32 0, i32 1
  %22 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %parent.0.lcssa.i14.i, ptr %arrayidx2.i.i, align 4
  %rb_right.i.i15.i = getelementptr %struct.mod_tree_node, ptr %node, i32 0, i32 1, i32 0, i32 1, i32 1
  %23 = ptrtoint ptr %rb_right.i.i15.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr null, ptr %rb_right.i.i15.i, align 4
  %rb_left.i.i16.i = getelementptr %struct.mod_tree_node, ptr %node, i32 0, i32 1, i32 0, i32 1, i32 2
  %24 = ptrtoint ptr %rb_left.i.i16.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr null, ptr %rb_left.i.i16.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !865
  %25 = ptrtoint ptr %link.0.lcssa.i13.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %arrayidx2.i.i, ptr %link.0.lcssa.i13.i, align 4
  tail call void @rb_insert_color(ptr noundef %arrayidx2.i.i, ptr noundef getelementptr inbounds (%struct.mod_tree_root, ptr @mod_tree, i32 0, i32 0, i32 1, i32 1)) #29
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rb_insert_color(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__alloc_reserved_percpu(i32 noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @show_modinfo_version(ptr nocapture noundef readnone %mattr, ptr nocapture noundef readonly %mk, ptr noundef %buffer) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %mod = getelementptr inbounds %struct.module_kobject, ptr %mk, i32 0, i32 1
  %0 = ptrtoint ptr %mod to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mod, align 4
  %version = getelementptr inbounds %struct.module, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %version, align 8
  %call = tail call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %buffer, i32 noundef 4096, ptr noundef nonnull @.str.39, ptr noundef %3) #29
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @setup_modinfo_version(ptr nocapture noundef writeonly %mod, ptr noundef %s) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call noalias ptr @kstrdup(ptr noundef %s, i32 noundef 3264) #29
  %version = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 6
  %0 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %call, ptr %version, align 8
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @modinfo_version_exists(ptr nocapture noundef readonly %mod) #21 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %version = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 6
  %0 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %version, align 8
  %cmp = icmp ne ptr %1, null
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @free_modinfo_version(ptr nocapture noundef %mod) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %version = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 6
  %0 = ptrtoint ptr %version to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %version, align 8
  tail call void @kfree(ptr noundef %1) #29
  %2 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %version, align 8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @scnprintf(ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kstrdup(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @show_modinfo_srcversion(ptr nocapture noundef readnone %mattr, ptr nocapture noundef readonly %mk, ptr noundef %buffer) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %mod = getelementptr inbounds %struct.module_kobject, ptr %mk, i32 0, i32 1
  %0 = ptrtoint ptr %mod to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mod, align 4
  %srcversion = getelementptr inbounds %struct.module, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %srcversion to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %srcversion, align 4
  %call = tail call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %buffer, i32 noundef 4096, ptr noundef nonnull @.str.39, ptr noundef %3) #29
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @setup_modinfo_srcversion(ptr nocapture noundef writeonly %mod, ptr noundef %s) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call noalias ptr @kstrdup(ptr noundef %s, i32 noundef 3264) #29
  %srcversion = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 7
  %0 = ptrtoint ptr %srcversion to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %call, ptr %srcversion, align 4
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @modinfo_srcversion_exists(ptr nocapture noundef readonly %mod) #21 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %srcversion = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 7
  %0 = ptrtoint ptr %srcversion to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %srcversion, align 4
  %cmp = icmp ne ptr %1, null
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @free_modinfo_srcversion(ptr nocapture noundef %mod) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %srcversion = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 7
  %0 = ptrtoint ptr %srcversion to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %srcversion, align 4
  tail call void @kfree(ptr noundef %1) #29
  %2 = ptrtoint ptr %srcversion to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %srcversion, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @show_initstate(ptr nocapture noundef readnone %mattr, ptr nocapture noundef readonly %mk, ptr nocapture noundef writeonly %buffer) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %mod = getelementptr inbounds %struct.module_kobject, ptr %mk, i32 0, i32 1
  %0 = ptrtoint ptr %mod to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mod, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 128
  %4 = icmp ult i32 %3, 3
  br i1 %4, label %switch.lookup, label %do.body

do.body:                                          ; preds = %entry
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1152, 0\0A.popsection", ""() #29, !srcloc !866
  unreachable

switch.lookup:                                    ; preds = %entry
  %switch.gep = getelementptr inbounds [3 x ptr], ptr @switch.table.show_initstate, i32 0, i32 %3
  %5 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %5)
  %switch.load = load ptr, ptr %switch.gep, align 4
  %call = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buffer, ptr noundef nonnull @.str.39, ptr noundef nonnull %switch.load)
  ret i32 %call
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #22

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @show_coresize(ptr nocapture noundef readnone %mattr, ptr nocapture noundef readonly %mk, ptr nocapture noundef writeonly %buffer) #23 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %mod = getelementptr inbounds %struct.module_kobject, ptr %mk, i32 0, i32 1
  %0 = ptrtoint ptr %mod to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mod, align 4
  %size = getelementptr inbounds %struct.module, ptr %1, i32 0, i32 25, i32 1
  %2 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %size, align 4
  %call = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buffer, ptr noundef nonnull @.str.236, i32 noundef %3)
  ret i32 %call
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @show_initsize(ptr nocapture noundef readnone %mattr, ptr nocapture noundef readonly %mk, ptr nocapture noundef writeonly %buffer) #23 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %mod = getelementptr inbounds %struct.module_kobject, ptr %mk, i32 0, i32 1
  %0 = ptrtoint ptr %mod to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mod, align 4
  %size = getelementptr inbounds %struct.module, ptr %1, i32 0, i32 26, i32 1
  %2 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %size, align 4
  %call = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buffer, ptr noundef nonnull @.str.236, i32 noundef %3)
  ret i32 %call
}

; Function Attrs: nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @show_taint(ptr nocapture noundef readnone %mattr, ptr nocapture noundef readonly %mk, ptr nocapture noundef writeonly %buffer) #24 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %mod = getelementptr inbounds %struct.module_kobject, ptr %mk, i32 0, i32 1
  %0 = ptrtoint ptr %mod to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mod, align 4
  %taints.i = getelementptr inbounds %struct.module, ptr %1, i32 0, i32 28
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %entry
  %i.011.i = phi i32 [ 0, %entry ], [ %inc4.i, %for.inc.i ]
  %l.010.i = phi i32 [ 0, %entry ], [ %l.1.i, %for.inc.i ]
  %arrayidx.i = getelementptr [18 x %struct.taint_flag], ptr @taint_flags, i32 0, i32 %i.011.i
  %module.i = getelementptr [18 x %struct.taint_flag], ptr @taint_flags, i32 0, i32 %i.011.i, i32 2
  %2 = ptrtoint ptr %module.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %module.i, align 1, !range !773
  %tobool.not.i = icmp eq i8 %3, 0
  br i1 %tobool.not.i, label %for.inc.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %div3.i.i = lshr i32 %i.011.i, 5
  %arrayidx.i.i = getelementptr i32, ptr %taints.i, i32 %div3.i.i
  %4 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %arrayidx.i.i, align 4
  %6 = shl nuw i32 1, %i.011.i
  %7 = and i32 %5, %6
  %tobool1.not.i = icmp eq i32 %7, 0
  br i1 %tobool1.not.i, label %for.inc.i, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx.i, align 1
  %inc.i = add i32 %l.010.i, 1
  %arrayidx3.i = getelementptr i8, ptr %buffer, i32 %l.010.i
  %10 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 %9, ptr %arrayidx3.i, align 1
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %land.lhs.true.i, %for.body.i
  %l.1.i = phi i32 [ %inc.i, %if.then.i ], [ %l.010.i, %land.lhs.true.i ], [ %l.010.i, %for.body.i ]
  %inc4.i = add nuw nsw i32 %i.011.i, 1
  %exitcond.not.i = icmp eq i32 %inc4.i, 18
  br i1 %exitcond.not.i, label %module_flags_taint.exit, label %for.body.i

module_flags_taint.exit:                          ; preds = %for.inc.i
  %inc = add i32 %l.1.i, 1
  %arrayidx = getelementptr i8, ptr %buffer, i32 %l.1.i
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 10, ptr %arrayidx, align 1
  ret i32 %inc
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @show_refcnt(ptr nocapture noundef readnone %mattr, ptr nocapture noundef readonly %mk, ptr nocapture noundef writeonly %buffer) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %mod = getelementptr inbounds %struct.module_kobject, ptr %mk, i32 0, i32 1
  %0 = ptrtoint ptr %mod to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mod, align 4
  %refcnt.i = getelementptr inbounds %struct.module, ptr %1, i32 0, i32 66
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcnt.i, i32 noundef 4) #29
  %2 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %refcnt.i, align 4
  %sub.i = add i32 %3, -1
  %call1 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buffer, ptr noundef nonnull @.str.239, i32 noundef %sub.i)
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @resolve_symbol(ptr noundef %mod, ptr nocapture noundef readonly %info, ptr noundef %name, ptr noundef %ownername) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %fsa = alloca %struct.find_symbol_arg, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fsa) #29
  %0 = getelementptr inbounds i8, ptr %fsa, i32 4
  %1 = call ptr @memset(ptr %0, i32 0, i32 20)
  %2 = ptrtoint ptr %fsa to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %name, ptr %fsa, align 4
  %gplok = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 1
  %taints = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 28
  %3 = ptrtoint ptr %taints to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %taints, align 4
  %5 = trunc i32 %4 to i8
  %6 = and i8 %5, 1
  %7 = xor i8 %6, 1
  %8 = ptrtoint ptr %gplok to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %7, ptr %gplok, align 4
  %warn = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 2
  %9 = ptrtoint ptr %warn to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 1, ptr %warn, align 1
  %10 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task, align 8
  %task_state_change = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 212
  %14 = ptrtoint ptr %task_state_change to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %task_state_change, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @module_mutex, i32 noundef 0) #29
  %call2 = call fastcc zeroext i1 @find_symbol(ptr noundef nonnull %fsa)
  br i1 %call2, label %if.end, label %unlock

if.end:                                           ; preds = %entry
  %license = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 6
  %15 = ptrtoint ptr %license to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %license, align 4
  %cmp = icmp eq i32 %16, 1
  br i1 %cmp, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %using_gplonly_symbols = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 18
  %17 = ptrtoint ptr %using_gplonly_symbols to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 1, ptr %using_gplonly_symbols, align 128
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end
  %owner = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 3
  %18 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %owner, align 4
  %tobool.not.i = icmp eq ptr %19, null
  br i1 %tobool.not.i, label %if.end7, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end4
  %taints.i = getelementptr inbounds %struct.module, ptr %19, i32 0, i32 28
  %20 = ptrtoint ptr %taints.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %taints.i, align 4
  %and1.i.i = and i32 %21, 1
  %tobool1.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool1.not.i, label %if.end7, label %if.end.i

if.end.i:                                         ; preds = %lor.lhs.false.i
  %using_gplonly_symbols.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 18
  %22 = ptrtoint ptr %using_gplonly_symbols.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %using_gplonly_symbols.i, align 128, !range !773
  %tobool2.not.i = icmp eq i8 %23, 0
  br i1 %tobool2.not.i, label %if.end7.i, label %if.then6

if.end7.i:                                        ; preds = %if.end.i
  %24 = ptrtoint ptr %taints to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %taints, align 4
  %and1.i29.i = and i32 %25, 1
  %tobool10.not.i = icmp eq i32 %and1.i29.i, 0
  br i1 %tobool10.not.i, label %do.end13.i, label %if.end7

do.end13.i:                                       ; preds = %if.end7.i
  %name15.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %name17.i = getelementptr inbounds %struct.module, ptr %19, i32 0, i32 2
  %call19.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.254, ptr noundef %name15.i, ptr noundef %name17.i) #37
  tail call void @_set_bit(i32 noundef 0, ptr noundef %taints) #29
  br label %if.end7

if.then6:                                         ; preds = %if.end.i
  %name.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %name4.i = getelementptr inbounds %struct.module, ptr %19, i32 0, i32 2
  %call6.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.251, ptr noundef %name.i, ptr noundef %name4.i) #37
  %sym = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 5
  %26 = ptrtoint ptr %sym to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr null, ptr %sym, align 4
  br label %getname

if.end7:                                          ; preds = %do.end13.i, %if.end7.i, %lor.lhs.false.i, %if.end4
  %crc = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 4
  %27 = ptrtoint ptr %crc to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %crc, align 4
  %call8 = tail call fastcc i32 @check_version(ptr noundef %info, ptr noundef %name, ptr noundef %mod, ptr noundef %28)
  %tobool9.not = icmp eq i32 %call8, 0
  %sym12 = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 5
  br i1 %tobool9.not, label %if.then10, label %if.end13

if.then10:                                        ; preds = %if.end7
  %29 = ptrtoint ptr %sym12 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr inttoptr (i32 -22 to ptr), ptr %sym12, align 4
  br label %getname

if.end13:                                         ; preds = %if.end7
  %30 = ptrtoint ptr %sym12 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %sym12, align 4
  %namespace.i.i = getelementptr inbounds %struct.kernel_symbol, ptr %31, i32 0, i32 2
  %32 = ptrtoint ptr %namespace.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %namespace.i.i, align 4
  %tobool.not.i44 = icmp eq ptr %33, null
  br i1 %tobool.not.i44, label %verify_namespace_is_imported.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end13
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %33, align 1
  %tobool1.not.i45 = icmp eq i8 %35, 0
  br i1 %tobool1.not.i45, label %verify_namespace_is_imported.exit, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %sechdrs.i.i.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 4
  %36 = ptrtoint ptr %sechdrs.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %sechdrs.i.i.i, align 4
  %info1.i.i.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 15, i32 4
  %38 = ptrtoint ptr %info1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %info1.i.i.i, align 4
  %hdr.i.i.i = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 2
  %40 = ptrtoint ptr %hdr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %hdr.i.i.i, align 4
  %sh_offset.i.i.i = getelementptr %struct.elf32_shdr, ptr %37, i32 %39, i32 4
  %42 = ptrtoint ptr %sh_offset.i.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %sh_offset.i.i.i, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %41, i32 %43
  %tobool3.not56.i.i.i = icmp eq ptr %add.ptr.i.i.i, null
  br i1 %tobool3.not56.i.i.i, label %do.end.i47, label %for.body.i.preheader.i.i

for.body.i.preheader.i.i:                         ; preds = %if.then.i
  %sh_size.i.i.i = getelementptr %struct.elf32_shdr, ptr %37, i32 %39, i32 5
  %44 = ptrtoint ptr %sh_size.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %sh_size.i.i.i, align 4
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %next_string.exit46.i.i.i, %for.body.i.preheader.i.i
  %p.058.i.i.i = phi ptr [ %incdec.ptr5.i37.i.i.i, %next_string.exit46.i.i.i ], [ %add.ptr.i.i.i, %for.body.i.preheader.i.i ]
  %size.457.i.i.i = phi i32 [ %dec6.i42.i.i.i, %next_string.exit46.i.i.i ], [ %45, %for.body.i.preheader.i.i ]
  %call4.i.i.i = tail call i32 @strncmp(ptr noundef nonnull %p.058.i.i.i, ptr noundef nonnull dereferenceable(10) @.str.256, i32 noundef 9) #29
  %cmp.i.i.i = icmp eq i32 %call4.i.i.i, 0
  br i1 %cmp.i.i.i, label %land.lhs.true.i.i.i, label %while.cond.i32.i.i.i.preheader

land.lhs.true.i.i.i:                              ; preds = %for.body.i.i.i
  %arrayidx5.i.i.i = getelementptr i8, ptr %p.058.i.i.i, i32 9
  %46 = ptrtoint ptr %arrayidx5.i.i.i to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %arrayidx5.i.i.i, align 1
  %cmp6.i.i.i = icmp eq i8 %47, 61
  br i1 %cmp6.i.i.i, label %get_modinfo.exit.i, label %while.cond.i32.i.i.i.preheader

while.cond.i32.i.i.i.preheader:                   ; preds = %land.lhs.true.i.i.i, %for.body.i.i.i
  br label %while.cond.i32.i.i.i

while.cond.i32.i.i.i:                             ; preds = %while.body.i36.i.i.i, %while.cond.i32.i.i.i.preheader
  %size.5.i.i.i = phi i32 [ %dec.i34.i.i.i, %while.body.i36.i.i.i ], [ %size.457.i.i.i, %while.cond.i32.i.i.i.preheader ]
  %string.addr.0.i30.i.i.i = phi ptr [ %incdec.ptr.i33.i.i.i, %while.body.i36.i.i.i ], [ %p.058.i.i.i, %while.cond.i32.i.i.i.preheader ]
  %48 = ptrtoint ptr %string.addr.0.i30.i.i.i to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %string.addr.0.i30.i.i.i, align 1
  %tobool.not.i31.i.i.i = icmp eq i8 %49, 0
  br i1 %tobool.not.i31.i.i.i, label %while.body4.i44.i.i.i, label %while.body.i36.i.i.i

while.body.i36.i.i.i:                             ; preds = %while.cond.i32.i.i.i
  %incdec.ptr.i33.i.i.i = getelementptr i8, ptr %string.addr.0.i30.i.i.i, i32 1
  %dec.i34.i.i.i = add i32 %size.5.i.i.i, -1
  %cmp.i35.i.i.i = icmp ult i32 %size.5.i.i.i, 2
  br i1 %cmp.i35.i.i.i, label %do.end.i47, label %while.cond.i32.i.i.i

while.cond1thread-pre-split.i40.i.i.i:            ; preds = %while.body4.i44.i.i.i
  %dec6.i42.i.i.i = add i32 %size.6.i.i.i, -1
  %incdec.ptr5.i37.i.i.i = getelementptr i8, ptr %string.addr.118.i41.i.i.i, i32 1
  %50 = ptrtoint ptr %incdec.ptr5.i37.i.i.i to i32
  call void @__asan_load1_noabort(i32 %50)
  %.pr.i38.i.i.i = load i8, ptr %incdec.ptr5.i37.i.i.i, align 1
  %tobool3.not.i39.i.i.i = icmp eq i8 %.pr.i38.i.i.i, 0
  br i1 %tobool3.not.i39.i.i.i, label %while.body4.i44.i.i.i, label %next_string.exit46.i.i.i

while.body4.i44.i.i.i:                            ; preds = %while.cond1thread-pre-split.i40.i.i.i, %while.cond.i32.i.i.i
  %size.6.i.i.i = phi i32 [ %dec6.i42.i.i.i, %while.cond1thread-pre-split.i40.i.i.i ], [ %size.5.i.i.i, %while.cond.i32.i.i.i ]
  %string.addr.118.i41.i.i.i = phi ptr [ %incdec.ptr5.i37.i.i.i, %while.cond1thread-pre-split.i40.i.i.i ], [ %string.addr.0.i30.i.i.i, %while.cond.i32.i.i.i ]
  %cmp7.i43.i.i.i = icmp ult i32 %size.6.i.i.i, 2
  br i1 %cmp7.i43.i.i.i, label %do.end.i47, label %while.cond1thread-pre-split.i40.i.i.i

next_string.exit46.i.i.i:                         ; preds = %while.cond1thread-pre-split.i40.i.i.i
  %tobool3.not.i.i.i = icmp eq ptr %incdec.ptr5.i37.i.i.i, null
  br i1 %tobool3.not.i.i.i, label %do.end.i47, label %for.body.i.i.i

get_modinfo.exit.i:                               ; preds = %land.lhs.true.i.i.i
  %add.ptr10.i.i.i = getelementptr i8, ptr %p.058.i.i.i, i32 10
  %tobool3.not21.i = icmp eq ptr %add.ptr10.i.i.i, null
  br i1 %tobool3.not21.i, label %do.end.i47, label %while.body.lr.ph.i

while.body.lr.ph.i:                               ; preds = %get_modinfo.exit.i
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.neg.i.i = add i32 %45, %sub.ptr.rhs.cast.i.i
  br label %while.body.i

while.body.i:                                     ; preds = %get_next_modinfo.exit.i, %while.body.lr.ph.i
  %imported_namespace.022.i = phi ptr [ %add.ptr10.i.i.i, %while.body.lr.ph.i ], [ %add.ptr10.i.i, %get_next_modinfo.exit.i ]
  %call4.i = tail call i32 @strcmp(ptr noundef nonnull %33, ptr noundef nonnull %imported_namespace.022.i) #31
  %cmp.i = icmp eq i32 %call4.i, 0
  br i1 %cmp.i, label %verify_namespace_is_imported.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %while.body.i
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %imported_namespace.022.i to i32
  %sub.i.i = sub i32 %sub.ptr.sub.neg.i.i, %sub.ptr.lhs.cast.i.i
  br label %while.cond.i.i.i

while.cond.i.i.i:                                 ; preds = %while.body.i.i.i, %if.then.i.i
  %size.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %dec.i.i.i, %while.body.i.i.i ]
  %string.addr.0.i.i.i = phi ptr [ %imported_namespace.022.i, %if.then.i.i ], [ %incdec.ptr.i.i.i, %while.body.i.i.i ]
  %51 = ptrtoint ptr %string.addr.0.i.i.i to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %string.addr.0.i.i.i, align 1
  %tobool.not.i.i.i = icmp eq i8 %52, 0
  br i1 %tobool.not.i.i.i, label %while.body4.i.i.i, label %while.body.i.i.i

while.body.i.i.i:                                 ; preds = %while.cond.i.i.i
  %incdec.ptr.i.i.i = getelementptr i8, ptr %string.addr.0.i.i.i, i32 1
  %dec.i.i.i = add i32 %size.0.i.i, -1
  %cmp.i.i1.i = icmp ult i32 %size.0.i.i, 2
  br i1 %cmp.i.i1.i, label %do.end.i47, label %while.cond.i.i.i

while.cond1thread-pre-split.i.i.i:                ; preds = %while.body4.i.i.i
  %dec6.i.i.i = add i32 %size.1.i.i, -1
  %incdec.ptr5.i.i.i = getelementptr i8, ptr %string.addr.118.i.i.i, i32 1
  %53 = ptrtoint ptr %incdec.ptr5.i.i.i to i32
  call void @__asan_load1_noabort(i32 %53)
  %.pr.i.i.i = load i8, ptr %incdec.ptr5.i.i.i, align 1
  %tobool3.not.i.i2.i = icmp eq i8 %.pr.i.i.i, 0
  br i1 %tobool3.not.i.i2.i, label %while.body4.i.i.i, label %if.end.i.i

while.body4.i.i.i:                                ; preds = %while.cond1thread-pre-split.i.i.i, %while.cond.i.i.i
  %size.1.i.i = phi i32 [ %dec6.i.i.i, %while.cond1thread-pre-split.i.i.i ], [ %size.0.i.i, %while.cond.i.i.i ]
  %string.addr.118.i.i.i = phi ptr [ %incdec.ptr5.i.i.i, %while.cond1thread-pre-split.i.i.i ], [ %string.addr.0.i.i.i, %while.cond.i.i.i ]
  %cmp7.i.i.i = icmp ult i32 %size.1.i.i, 2
  br i1 %cmp7.i.i.i, label %do.end.i47, label %while.cond1thread-pre-split.i.i.i

if.end.i.i:                                       ; preds = %while.cond1thread-pre-split.i.i.i
  %tobool3.not56.i.i = icmp eq ptr %incdec.ptr5.i.i.i, null
  br i1 %tobool3.not56.i.i, label %do.end.i47, label %for.body.i.i

for.body.i.i:                                     ; preds = %next_string.exit46.i.i, %if.end.i.i
  %p.058.i.i = phi ptr [ %incdec.ptr5.i37.i.i, %next_string.exit46.i.i ], [ %incdec.ptr5.i.i.i, %if.end.i.i ]
  %size.457.i.i = phi i32 [ %dec6.i42.i.i, %next_string.exit46.i.i ], [ %dec6.i.i.i, %if.end.i.i ]
  %call4.i.i = tail call i32 @strncmp(ptr noundef nonnull %p.058.i.i, ptr noundef nonnull dereferenceable(10) @.str.256, i32 noundef 9) #29
  %cmp.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %cmp.i.i, label %land.lhs.true.i.i, label %while.cond.i32.i.i.preheader

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %arrayidx5.i.i = getelementptr i8, ptr %p.058.i.i, i32 9
  %54 = ptrtoint ptr %arrayidx5.i.i to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %arrayidx5.i.i, align 1
  %cmp6.i.i = icmp eq i8 %55, 61
  br i1 %cmp6.i.i, label %get_next_modinfo.exit.i, label %while.cond.i32.i.i.preheader

while.cond.i32.i.i.preheader:                     ; preds = %land.lhs.true.i.i, %for.body.i.i
  br label %while.cond.i32.i.i

while.cond.i32.i.i:                               ; preds = %while.body.i36.i.i, %while.cond.i32.i.i.preheader
  %size.5.i.i = phi i32 [ %dec.i34.i.i, %while.body.i36.i.i ], [ %size.457.i.i, %while.cond.i32.i.i.preheader ]
  %string.addr.0.i30.i.i = phi ptr [ %incdec.ptr.i33.i.i, %while.body.i36.i.i ], [ %p.058.i.i, %while.cond.i32.i.i.preheader ]
  %56 = ptrtoint ptr %string.addr.0.i30.i.i to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %string.addr.0.i30.i.i, align 1
  %tobool.not.i31.i.i = icmp eq i8 %57, 0
  br i1 %tobool.not.i31.i.i, label %while.body4.i44.i.i, label %while.body.i36.i.i

while.body.i36.i.i:                               ; preds = %while.cond.i32.i.i
  %incdec.ptr.i33.i.i = getelementptr i8, ptr %string.addr.0.i30.i.i, i32 1
  %dec.i34.i.i = add i32 %size.5.i.i, -1
  %cmp.i35.i.i = icmp ult i32 %size.5.i.i, 2
  br i1 %cmp.i35.i.i, label %do.end.i47, label %while.cond.i32.i.i

while.cond1thread-pre-split.i40.i.i:              ; preds = %while.body4.i44.i.i
  %dec6.i42.i.i = add i32 %size.6.i.i, -1
  %incdec.ptr5.i37.i.i = getelementptr i8, ptr %string.addr.118.i41.i.i, i32 1
  %58 = ptrtoint ptr %incdec.ptr5.i37.i.i to i32
  call void @__asan_load1_noabort(i32 %58)
  %.pr.i38.i.i = load i8, ptr %incdec.ptr5.i37.i.i, align 1
  %tobool3.not.i39.i.i = icmp eq i8 %.pr.i38.i.i, 0
  br i1 %tobool3.not.i39.i.i, label %while.body4.i44.i.i, label %next_string.exit46.i.i

while.body4.i44.i.i:                              ; preds = %while.cond1thread-pre-split.i40.i.i, %while.cond.i32.i.i
  %size.6.i.i = phi i32 [ %dec6.i42.i.i, %while.cond1thread-pre-split.i40.i.i ], [ %size.5.i.i, %while.cond.i32.i.i ]
  %string.addr.118.i41.i.i = phi ptr [ %incdec.ptr5.i37.i.i, %while.cond1thread-pre-split.i40.i.i ], [ %string.addr.0.i30.i.i, %while.cond.i32.i.i ]
  %cmp7.i43.i.i = icmp ult i32 %size.6.i.i, 2
  br i1 %cmp7.i43.i.i, label %do.end.i47, label %while.cond1thread-pre-split.i40.i.i

next_string.exit46.i.i:                           ; preds = %while.cond1thread-pre-split.i40.i.i
  %tobool3.not.i.i = icmp eq ptr %incdec.ptr5.i37.i.i, null
  br i1 %tobool3.not.i.i, label %do.end.i47, label %for.body.i.i

get_next_modinfo.exit.i:                          ; preds = %land.lhs.true.i.i
  %add.ptr10.i.i = getelementptr i8, ptr %p.058.i.i, i32 10
  %tobool3.not.i = icmp eq ptr %add.ptr10.i.i, null
  br i1 %tobool3.not.i, label %do.end.i47, label %while.body.i

do.end.i47:                                       ; preds = %get_next_modinfo.exit.i, %next_string.exit46.i.i, %while.body4.i44.i.i, %while.body.i36.i.i, %if.end.i.i, %while.body4.i.i.i, %while.body.i.i.i, %get_modinfo.exit.i, %next_string.exit46.i.i.i, %while.body4.i44.i.i.i, %while.body.i36.i.i.i, %if.then.i
  %name.i46 = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 2
  %name.i.i = getelementptr inbounds %struct.kernel_symbol, ptr %31, i32 0, i32 1
  %59 = ptrtoint ptr %name.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %name.i.i, align 4
  %call9.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.257, ptr noundef %name.i46, ptr noundef %60, ptr noundef nonnull %33) #37
  br label %verify_namespace_is_imported.exit

verify_namespace_is_imported.exit:                ; preds = %do.end.i47, %while.body.i, %land.lhs.true.i, %if.end13
  %call22 = tail call fastcc i32 @ref_module(ptr noundef %mod, ptr noundef %19)
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %getname, label %if.then24

if.then24:                                        ; preds = %verify_namespace_is_imported.exit
  %61 = inttoptr i32 %call22 to ptr
  %62 = ptrtoint ptr %sym12 to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %61, ptr %sym12, align 4
  br label %getname

getname:                                          ; preds = %if.then24, %verify_namespace_is_imported.exit, %if.then10, %if.then6
  %name30 = getelementptr inbounds %struct.module, ptr %19, i32 0, i32 2
  %spec.select = select i1 %tobool.not.i, ptr @.str.250, ptr %name30
  %call31 = tail call ptr @strncpy(ptr noundef %ownername, ptr noundef %spec.select, i32 noundef 60)
  br label %unlock

unlock:                                           ; preds = %getname, %entry
  tail call void @mutex_unlock(ptr noundef nonnull @module_mutex) #29
  %sym32 = getelementptr inbounds %struct.find_symbol_arg, ptr %fsa, i32 0, i32 5
  %63 = ptrtoint ptr %sym32 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %sym32, align 4
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fsa) #29
  ret ptr %64
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @schedule_timeout(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @ref_module(ptr noundef %a, ptr noundef %b) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp = icmp eq ptr %b, null
  br i1 %cmp, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %source_list.i = getelementptr inbounds %struct.module, ptr %b, i32 0, i32 63
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i, %lor.lhs.false
  %use.0.in.i = phi ptr [ %source_list.i, %lor.lhs.false ], [ %use.0.i, %for.body.i ]
  %0 = ptrtoint ptr %use.0.in.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %use.0.i = load ptr, ptr %use.0.in.i, align 4
  %cmp.not.i = icmp eq ptr %use.0.i, %source_list.i
  br i1 %cmp.not.i, label %do.body17.i, label %for.body.i

for.body.i:                                       ; preds = %for.cond.i
  %source.i = getelementptr inbounds %struct.module_use, ptr %use.0.i, i32 0, i32 2
  %1 = ptrtoint ptr %source.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %source.i, align 4
  %cmp3.i = icmp eq ptr %2, %a
  br i1 %cmp3.i, label %do.body.i, label %for.cond.i

do.body.i:                                        ; preds = %for.body.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @already_uses.__UNIQUE_ID_ddebug286, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@ref_module, %already_uses.exit.thread20)) #29
          to label %cleanup [label %already_uses.exit.thread20], !srcloc !782

already_uses.exit.thread20:                       ; preds = %do.body.i
  %name.i = getelementptr inbounds %struct.module, ptr %a, i32 0, i32 2
  %name9.i = getelementptr inbounds %struct.module, ptr %b, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @already_uses.__UNIQUE_ID_ddebug286, ptr noundef nonnull @.str.260, ptr noundef %name.i, ptr noundef %name9.i) #29
  br label %cleanup

do.body17.i:                                      ; preds = %for.cond.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @already_uses.__UNIQUE_ID_ddebug287, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@ref_module, %already_uses.exit.thread)) #29
          to label %land.rhs.i [label %already_uses.exit.thread], !srcloc !782

already_uses.exit.thread:                         ; preds = %do.body17.i
  %name30.i = getelementptr inbounds %struct.module, ptr %a, i32 0, i32 2
  %name32.i = getelementptr inbounds %struct.module, ptr %b, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @already_uses.__UNIQUE_ID_ddebug287, ptr noundef nonnull @.str.261, ptr noundef %name30.i, ptr noundef %name32.i) #29
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %already_uses.exit.thread, %do.body17.i
  %3 = ptrtoint ptr %b to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %b, align 128
  switch i32 %4, label %do.body.i.i [
    i32 3, label %do.body3.i
    i32 1, label %cleanup
  ], !prof !804

do.body3.i:                                       ; preds = %land.rhs.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 320, 0\0A.popsection", ""() #29, !srcloc !805
  unreachable

do.body.i.i:                                      ; preds = %land.rhs.i
  %5 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %8, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !796
  %9 = ptrtoint ptr %b to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %b, align 128
  %cmp.i.not.i.i = icmp eq i32 %10, 2
  br i1 %cmp.i.not.i.i, label %strong_try_module_get.exit, label %land.rhs.i.i, !prof !771

land.rhs.i.i:                                     ; preds = %do.body.i.i
  %refcnt.i.i = getelementptr inbounds %struct.module, ptr %b, i32 0, i32 66
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i.i, i32 noundef 4) #29
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !797
  tail call void @llvm.prefetch.p0(ptr %refcnt.i.i, i32 1, i32 3, i32 1) #29
  %11 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i.i, ptr %refcnt.i.i, i32 0, i32 1, ptr elementtype(i32) %refcnt.i.i) #29, !srcloc !798
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %11, 0
  %cmp.not.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i.i, label %strong_try_module_get.exit, label %if.end4

strong_try_module_get.exit:                       ; preds = %land.rhs.i.i, %do.body.i.i
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !800
  %12 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i14.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i14.i.i to ptr
  %preempt_count.i.i15.i.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %preempt_count.i.i15.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %preempt_count.i.i15.i.i, align 4
  %sub.i.i.c.i = add i32 %15, -1
  store volatile i32 %sub.i.i.c.i, ptr %preempt_count.i.i15.i.i, align 4
  br label %cleanup

if.end4:                                          ; preds = %land.rhs.i.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !799
  %16 = tail call ptr @llvm.returnaddress(i32 0) #29
  %17 = ptrtoint ptr %16 to i32
  tail call fastcc void @trace_module_get(ptr noundef nonnull %b, i32 noundef %17) #29
  tail call void asm sideeffect "", "~{memory}"() #29, !srcloc !800
  %18 = tail call i32 @llvm.read_register.i32(metadata !760) #29
  %and.i.i.i14.i.i27 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i14.i.i27 to ptr
  %preempt_count.i.i15.i.i28 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i15.i.i28 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i15.i.i28, align 4
  %sub.i.i.c.i29 = add i32 %21, -1
  store volatile i32 %sub.i.i.c.i29, ptr %preempt_count.i.i15.i.i28, align 4
  %call5 = tail call fastcc i32 @add_module_usage(ptr noundef %a, ptr noundef nonnull %b)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %cleanup, label %if.then7

if.then7:                                         ; preds = %if.end4
  tail call void @module_put(ptr noundef nonnull %b)
  br label %cleanup

cleanup:                                          ; preds = %if.then7, %if.end4, %strong_try_module_get.exit, %land.rhs.i, %already_uses.exit.thread20, %do.body.i, %entry
  %retval.0 = phi i32 [ %call5, %if.then7 ], [ 0, %entry ], [ -2, %strong_try_module_get.exit ], [ 0, %if.end4 ], [ 0, %already_uses.exit.thread20 ], [ -16, %land.rhs.i ], [ 0, %do.body.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @add_module_usage(ptr noundef %a, ptr noundef %b) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @add_module_usage.__UNIQUE_ID_ddebug288, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@add_module_usage, %if.then)) #29
          to label %do.end [label %if.then], !srcloc !782

if.then:                                          ; preds = %entry
  %name = getelementptr inbounds %struct.module, ptr %a, i32 0, i32 2
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @add_module_usage.__UNIQUE_ID_ddebug288, ptr noundef nonnull @.str.263, ptr noundef %name) #29
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 2592, i32 noundef 24) #38
  %tobool4.not = icmp eq ptr %call7.i, null
  br i1 %tobool4.not, label %cleanup, label %if.end6

if.end6:                                          ; preds = %do.end
  %source = getelementptr inbounds %struct.module_use, ptr %call7.i, i32 0, i32 2
  %1 = ptrtoint ptr %source to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %a, ptr %source, align 8
  %target = getelementptr inbounds %struct.module_use, ptr %call7.i, i32 0, i32 3
  %2 = ptrtoint ptr %target to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %b, ptr %target, align 4
  %source_list7 = getelementptr inbounds %struct.module, ptr %b, i32 0, i32 63
  %3 = ptrtoint ptr %source_list7 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %source_list7, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i, ptr noundef %source_list7, ptr noundef %4) #29
  br i1 %call.i.i, label %if.end.i.i, label %list_add.exit

if.end.i.i:                                       ; preds = %if.end6
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call7.i, ptr %prev1.i.i, align 4
  %6 = ptrtoint ptr %call7.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %4, ptr %call7.i, align 8
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i, i32 0, i32 1
  %7 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %source_list7, ptr %prev3.i.i, align 4
  %8 = ptrtoint ptr %source_list7 to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %call7.i, ptr %source_list7, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.end6
  %target_list = getelementptr inbounds %struct.module_use, ptr %call7.i, i32 0, i32 1
  %target_list8 = getelementptr inbounds %struct.module, ptr %a, i32 0, i32 64
  %9 = ptrtoint ptr %target_list8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %target_list8, align 4
  %call.i.i16 = tail call zeroext i1 @__list_add_valid(ptr noundef %target_list, ptr noundef %target_list8, ptr noundef %10) #29
  br i1 %call.i.i16, label %if.end.i.i19, label %cleanup

if.end.i.i19:                                     ; preds = %list_add.exit
  %prev1.i.i17 = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %prev1.i.i17 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %target_list, ptr %prev1.i.i17, align 4
  %12 = ptrtoint ptr %target_list to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %10, ptr %target_list, align 8
  %prev3.i.i18 = getelementptr inbounds %struct.module_use, ptr %call7.i, i32 0, i32 1, i32 1
  %13 = ptrtoint ptr %prev3.i.i18 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %target_list8, ptr %prev3.i.i18, align 4
  %14 = ptrtoint ptr %target_list8 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %target_list, ptr %target_list8, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end.i.i19, %list_add.exit, %do.end
  %retval.0 = phi i32 [ -12, %do.end ], [ 0, %list_add.exit ], [ 0, %if.end.i.i19 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #25

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @apply_relocate(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sort_extable(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @build_id_parse_buf(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ddebug_add_module(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @module_bug_finalize(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @module_enable_ro(ptr nocapture noundef readonly %mod, i1 noundef zeroext %after_init) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @rodata_enabled to i32))
  %0 = load i8, ptr @rodata_enabled, align 1, !range !773
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.end9, label %if.end

if.end:                                           ; preds = %entry
  %core_layout = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25
  %1 = ptrtoint ptr %core_layout to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %core_layout, align 128
  %call.i = tail call ptr @find_vm_area(ptr noundef %2) #29
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %set_vm_flush_reset_perms.exit, label %if.then.i

if.then.i:                                        ; preds = %if.end
  %flags.i = getelementptr inbounds %struct.vm_struct, ptr %call.i, i32 0, i32 3
  %3 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags.i, align 4
  %or.i = or i32 %4, 256
  store i32 %or.i, ptr %flags.i, align 4
  br label %set_vm_flush_reset_perms.exit

set_vm_flush_reset_perms.exit:                    ; preds = %if.then.i, %if.end
  %init_layout = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26
  %5 = ptrtoint ptr %init_layout to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %init_layout, align 16
  %call.i16 = tail call ptr @find_vm_area(ptr noundef %6) #29
  %tobool.not.i17 = icmp eq ptr %call.i16, null
  br i1 %tobool.not.i17, label %set_vm_flush_reset_perms.exit21, label %if.then.i20

if.then.i20:                                      ; preds = %set_vm_flush_reset_perms.exit
  %flags.i18 = getelementptr inbounds %struct.vm_struct, ptr %call.i16, i32 0, i32 3
  %7 = ptrtoint ptr %flags.i18 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %flags.i18, align 4
  %or.i19 = or i32 %8, 256
  store i32 %or.i19, ptr %flags.i18, align 4
  br label %set_vm_flush_reset_perms.exit21

set_vm_flush_reset_perms.exit21:                  ; preds = %if.then.i20, %set_vm_flush_reset_perms.exit
  %9 = ptrtoint ptr %core_layout to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %core_layout, align 4
  %11 = ptrtoint ptr %10 to i32
  %and.i = and i32 %11, 4095
  %tobool.not.i22 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i22, label %do.body7.i, label %do.body3.i, !prof !770

do.body3.i:                                       ; preds = %set_vm_flush_reset_perms.exit21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1962, 0\0A.popsection", ""() #29, !srcloc !857
  unreachable

do.body7.i:                                       ; preds = %set_vm_flush_reset_perms.exit21
  %text_size.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25, i32 2
  %12 = ptrtoint ptr %text_size.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %text_size.i, align 4
  %and8.i = and i32 %13, 4095
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  br i1 %tobool9.not.i, label %frob_text.exit, label %do.body17.i, !prof !770

do.body17.i:                                      ; preds = %do.body7.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1963, 0\0A.popsection", ""() #29, !srcloc !858
  unreachable

frob_text.exit:                                   ; preds = %do.body7.i
  %shr.i = lshr i32 %13, 12
  %call.i23 = tail call i32 @set_memory_ro(i32 noundef %11, i32 noundef %shr.i) #29, !callees !859
  %14 = ptrtoint ptr %core_layout to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %core_layout, align 4
  %16 = ptrtoint ptr %15 to i32
  %and.i24 = and i32 %16, 4095
  %tobool.not.i25 = icmp eq i32 %and.i24, 0
  br i1 %tobool.not.i25, label %do.body7.i30, label %do.body3.i26, !prof !770

do.body3.i26:                                     ; preds = %frob_text.exit
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1981, 0\0A.popsection", ""() #29, !srcloc !847
  unreachable

do.body7.i30:                                     ; preds = %frob_text.exit
  %17 = ptrtoint ptr %text_size.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %text_size.i, align 4
  %and8.i28 = and i32 %18, 4095
  %tobool9.not.i29 = icmp eq i32 %and8.i28, 0
  br i1 %tobool9.not.i29, label %do.body23.i, label %do.body17.i31, !prof !770

do.body17.i31:                                    ; preds = %do.body7.i30
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1982, 0\0A.popsection", ""() #29, !srcloc !848
  unreachable

do.body23.i:                                      ; preds = %do.body7.i30
  %ro_size.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25, i32 3
  %19 = ptrtoint ptr %ro_size.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %ro_size.i, align 4
  %and24.i = and i32 %20, 4095
  %tobool25.not.i = icmp eq i32 %and24.i, 0
  br i1 %tobool25.not.i, label %frob_rodata.exit, label %do.body33.i, !prof !770

do.body33.i:                                      ; preds = %do.body23.i
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1983, 0\0A.popsection", ""() #29, !srcloc !849
  unreachable

frob_rodata.exit:                                 ; preds = %do.body23.i
  %add.i = add i32 %18, %16
  %sub.i = sub i32 %20, %18
  %shr.i32 = lshr i32 %sub.i, 12
  %call.i33 = tail call i32 @set_memory_ro(i32 noundef %add.i, i32 noundef %shr.i32) #29, !callees !850
  %21 = ptrtoint ptr %init_layout to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %init_layout, align 4
  %23 = ptrtoint ptr %22 to i32
  %and.i34 = and i32 %23, 4095
  %tobool.not.i35 = icmp eq i32 %and.i34, 0
  br i1 %tobool.not.i35, label %do.body7.i40, label %do.body3.i36, !prof !770

do.body3.i36:                                     ; preds = %frob_rodata.exit
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1962, 0\0A.popsection", ""() #29, !srcloc !857
  unreachable

do.body7.i40:                                     ; preds = %frob_rodata.exit
  %text_size.i37 = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26, i32 2
  %24 = ptrtoint ptr %text_size.i37 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %text_size.i37, align 4
  %and8.i38 = and i32 %25, 4095
  %tobool9.not.i39 = icmp eq i32 %and8.i38, 0
  br i1 %tobool9.not.i39, label %frob_text.exit44, label %do.body17.i41, !prof !770

do.body17.i41:                                    ; preds = %do.body7.i40
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1963, 0\0A.popsection", ""() #29, !srcloc !858
  unreachable

frob_text.exit44:                                 ; preds = %do.body7.i40
  %shr.i42 = lshr i32 %25, 12
  %call.i43 = tail call i32 @set_memory_ro(i32 noundef %23, i32 noundef %shr.i42) #29, !callees !859
  %26 = ptrtoint ptr %init_layout to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %init_layout, align 4
  %28 = ptrtoint ptr %27 to i32
  %and.i45 = and i32 %28, 4095
  %tobool.not.i46 = icmp eq i32 %and.i45, 0
  br i1 %tobool.not.i46, label %do.body7.i51, label %do.body3.i47, !prof !770

do.body3.i47:                                     ; preds = %frob_text.exit44
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1981, 0\0A.popsection", ""() #29, !srcloc !847
  unreachable

do.body7.i51:                                     ; preds = %frob_text.exit44
  %29 = ptrtoint ptr %text_size.i37 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %text_size.i37, align 4
  %and8.i49 = and i32 %30, 4095
  %tobool9.not.i50 = icmp eq i32 %and8.i49, 0
  br i1 %tobool9.not.i50, label %do.body23.i56, label %do.body17.i52, !prof !770

do.body17.i52:                                    ; preds = %do.body7.i51
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1982, 0\0A.popsection", ""() #29, !srcloc !848
  unreachable

do.body23.i56:                                    ; preds = %do.body7.i51
  %ro_size.i53 = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 26, i32 3
  %31 = ptrtoint ptr %ro_size.i53 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %ro_size.i53, align 4
  %and24.i54 = and i32 %32, 4095
  %tobool25.not.i55 = icmp eq i32 %and24.i54, 0
  br i1 %tobool25.not.i55, label %frob_rodata.exit62, label %do.body33.i57, !prof !770

do.body33.i57:                                    ; preds = %do.body23.i56
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1983, 0\0A.popsection", ""() #29, !srcloc !849
  unreachable

frob_rodata.exit62:                               ; preds = %do.body23.i56
  %add.i58 = add i32 %30, %28
  %sub.i59 = sub i32 %32, %30
  %shr.i60 = lshr i32 %sub.i59, 12
  %call.i61 = tail call i32 @set_memory_ro(i32 noundef %add.i58, i32 noundef %shr.i60) #29, !callees !850
  br i1 %after_init, label %if.then7, label %if.end9

if.then7:                                         ; preds = %frob_rodata.exit62
  %33 = ptrtoint ptr %core_layout to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %core_layout, align 4
  %35 = ptrtoint ptr %34 to i32
  %and.i63 = and i32 %35, 4095
  %tobool.not.i64 = icmp eq i32 %and.i63, 0
  br i1 %tobool.not.i64, label %do.body7.i69, label %do.body3.i65, !prof !770

do.body3.i65:                                     ; preds = %if.then7
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1991, 0\0A.popsection", ""() #29, !srcloc !851
  unreachable

do.body7.i69:                                     ; preds = %if.then7
  %36 = ptrtoint ptr %ro_size.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %ro_size.i, align 4
  %and8.i67 = and i32 %37, 4095
  %tobool9.not.i68 = icmp eq i32 %and8.i67, 0
  br i1 %tobool9.not.i68, label %do.body23.i73, label %do.body17.i70, !prof !770

do.body17.i70:                                    ; preds = %do.body7.i69
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1992, 0\0A.popsection", ""() #29, !srcloc !852
  unreachable

do.body23.i73:                                    ; preds = %do.body7.i69
  %ro_after_init_size.i = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 25, i32 4
  %38 = ptrtoint ptr %ro_after_init_size.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %ro_after_init_size.i, align 4
  %and24.i71 = and i32 %39, 4095
  %tobool25.not.i72 = icmp eq i32 %and24.i71, 0
  br i1 %tobool25.not.i72, label %frob_ro_after_init.exit, label %do.body33.i74, !prof !770

do.body33.i74:                                    ; preds = %do.body23.i73
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1993, 0\0A.popsection", ""() #29, !srcloc !853
  unreachable

frob_ro_after_init.exit:                          ; preds = %do.body23.i73
  %add.i75 = add i32 %37, %35
  %sub.i76 = sub i32 %39, %37
  %shr.i77 = lshr i32 %sub.i76, 12
  %call.i78 = tail call i32 @set_memory_ro(i32 noundef %add.i75, i32 noundef %shr.i77) #29, !callees !850
  br label %if.end9

if.end9:                                          ; preds = %frob_ro_after_init.exit, %frob_rodata.exit62, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @set_memory_ro(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @find_vm_area(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @set_memory_nx(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @set_memory_x(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ftrace_module_enable(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blocking_notifier_call_chain_robust(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ddebug_dyndbg_module_param_cb(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kobject_create_and_add(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @module_param_sysfs_setup(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @add_sect_attrs(ptr noundef %mod, ptr nocapture noundef readonly %info) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %hdr = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 2
  %0 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hdr, align 4
  %e_shnum = getelementptr inbounds %struct.elf32_hdr, ptr %1, i32 0, i32 12
  %2 = ptrtoint ptr %e_shnum to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %e_shnum, align 4
  %conv = zext i16 %3 to i32
  %cmp123.not = icmp eq i16 %3, 0
  br i1 %cmp123.not, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %sechdrs = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 4
  %4 = ptrtoint ptr %sechdrs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sechdrs, align 4
  br label %for.body

for.body:                                         ; preds = %for.cond, %for.body.lr.ph
  %i.0125 = phi i32 [ 0, %for.body.lr.ph ], [ %inc2, %for.cond ]
  %nloaded.0124 = phi i32 [ 0, %for.body.lr.ph ], [ %10, %for.cond ]
  %sh_flags.i = getelementptr %struct.elf32_shdr, ptr %5, i32 %i.0125, i32 2
  %6 = ptrtoint ptr %sh_flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sh_flags.i, align 4
  %and.i = and i32 %7, 2
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %sect_empty.exit.thread, label %sect_empty.exit

sect_empty.exit:                                  ; preds = %for.body
  %sh_size.i = getelementptr %struct.elf32_shdr, ptr %5, i32 %i.0125, i32 5
  %8 = ptrtoint ptr %sh_size.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sh_size.i, align 4
  %cmp.i = icmp eq i32 %9, 0
  %inc = add i32 %nloaded.0124, 1
  br i1 %cmp.i, label %sect_empty.exit.thread, label %for.cond

sect_empty.exit.thread:                           ; preds = %sect_empty.exit, %for.body
  br label %for.cond

for.cond:                                         ; preds = %sect_empty.exit.thread, %sect_empty.exit
  %10 = phi i32 [ %nloaded.0124, %sect_empty.exit.thread ], [ %inc, %sect_empty.exit ]
  %inc2 = add nuw nsw i32 %i.0125, 1
  %exitcond.not = icmp eq i32 %inc2, %conv
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.cond, %entry
  %nloaded.0.lcssa = phi i32 [ 0, %entry ], [ %10, %for.cond ]
  %11 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %nloaded.0.lcssa, i32 48) #29
  %12 = extractvalue { i32, i1 } %11, 1
  %13 = extractvalue { i32, i1 } %11, 0
  %spec.select.i = tail call i32 @llvm.uadd.sat.i32(i32 %13, i32 24) #29
  %spec.select.i.op = add i32 %spec.select.i, 3
  %spec.select.i.op.op = and i32 %spec.select.i.op, -4
  %and = select i1 %12, i32 0, i32 %spec.select.i.op.op
  %add5 = shl i32 %nloaded.0.lcssa, 2
  %mul = add i32 %add5, 4
  %add9 = add i32 %mul, %and
  %call9.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add9, i32 noundef 3520) #35
  %cmp11 = icmp eq ptr %call9.i.i, null
  br i1 %cmp11, label %cleanup62, label %if.end14

if.end14:                                         ; preds = %for.end
  %14 = ptrtoint ptr %call9.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr @.str.281, ptr %call9.i.i, align 128
  %add.ptr = getelementptr i8, ptr %call9.i.i, i32 %and
  %bin_attrs = getelementptr inbounds %struct.attribute_group, ptr %call9.i.i, i32 0, i32 4
  %15 = ptrtoint ptr %bin_attrs to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %add.ptr, ptr %bin_attrs, align 16
  %nsections = getelementptr inbounds %struct.module_sect_attrs, ptr %call9.i.i, i32 0, i32 1
  %16 = ptrtoint ptr %nsections to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %nsections, align 4
  %17 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %hdr, align 4
  %e_shnum23128 = getelementptr inbounds %struct.elf32_hdr, ptr %18, i32 0, i32 12
  %19 = ptrtoint ptr %e_shnum23128 to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %e_shnum23128, align 4
  %cmp25130.not = icmp eq i16 %20, 0
  br i1 %cmp25130.not, label %for.end56, label %for.body27.lr.ph

for.body27.lr.ph:                                 ; preds = %if.end14
  %attrs = getelementptr inbounds %struct.module_sect_attrs, ptr %call9.i.i, i32 0, i32 2
  %sechdrs28 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 4
  %secstrings = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 5
  br label %for.body27

for.body27:                                       ; preds = %for.inc54, %for.body27.lr.ph
  %gattr.0134 = phi ptr [ %add.ptr, %for.body27.lr.ph ], [ %gattr.1.ph, %for.inc54 ]
  %sattr.0133 = phi ptr [ %attrs, %for.body27.lr.ph ], [ %sattr.1.ph, %for.inc54 ]
  %i.1131 = phi i32 [ 0, %for.body27.lr.ph ], [ %inc55, %for.inc54 ]
  %21 = ptrtoint ptr %sechdrs28 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %sechdrs28, align 4
  %arrayidx29 = getelementptr %struct.elf32_shdr, ptr %22, i32 %i.1131
  %sh_flags.i103 = getelementptr %struct.elf32_shdr, ptr %22, i32 %i.1131, i32 2
  %23 = ptrtoint ptr %sh_flags.i103 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %sh_flags.i103, align 4
  %and.i104 = and i32 %24, 2
  %tobool.not.i105 = icmp eq i32 %and.i104, 0
  br i1 %tobool.not.i105, label %for.inc54, label %sect_empty.exit109

sect_empty.exit109:                               ; preds = %for.body27
  %sh_size.i106 = getelementptr %struct.elf32_shdr, ptr %22, i32 %i.1131, i32 5
  %25 = ptrtoint ptr %sh_size.i106 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %sh_size.i106, align 4
  %cmp.i107 = icmp eq i32 %26, 0
  br i1 %cmp.i107, label %for.inc54, label %do.body

do.body:                                          ; preds = %sect_empty.exit109
  %key = getelementptr inbounds %struct.attribute, ptr %sattr.0133, i32 0, i32 3
  %27 = ptrtoint ptr %key to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr @add_sect_attrs.__key, ptr %key, align 4
  %sh_addr = getelementptr %struct.elf32_shdr, ptr %22, i32 %i.1131, i32 3
  %28 = ptrtoint ptr %sh_addr to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %sh_addr, align 4
  %address = getelementptr inbounds %struct.module_sect_attr, ptr %sattr.0133, i32 0, i32 1
  %30 = ptrtoint ptr %address to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %address, align 4
  %31 = ptrtoint ptr %secstrings to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %secstrings, align 4
  %33 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx29, align 4
  %add.ptr33 = getelementptr i8, ptr %32, i32 %34
  %call34 = tail call noalias ptr @kstrdup(ptr noundef %add.ptr33, i32 noundef 3264) #29
  %35 = ptrtoint ptr %sattr.0133 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %call34, ptr %sattr.0133, align 4
  %cmp41 = icmp eq ptr %call34, null
  br i1 %cmp41, label %out, label %if.end44

if.end44:                                         ; preds = %do.body
  %36 = ptrtoint ptr %nsections to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %nsections, align 4
  %inc46 = add i32 %37, 1
  store i32 %inc46, ptr %nsections, align 4
  %read = getelementptr inbounds %struct.bin_attribute, ptr %sattr.0133, i32 0, i32 4
  %38 = ptrtoint ptr %read to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr @module_sect_read, ptr %read, align 4
  %size49 = getelementptr inbounds %struct.bin_attribute, ptr %sattr.0133, i32 0, i32 1
  %39 = ptrtoint ptr %size49 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 11, ptr %size49, align 4
  %mode = getelementptr inbounds %struct.attribute, ptr %sattr.0133, i32 0, i32 1
  %40 = ptrtoint ptr %mode to i32
  call void @__asan_store2_noabort(i32 %40)
  store i16 256, ptr %mode, align 4
  %incdec.ptr = getelementptr %struct.module_sect_attr, ptr %sattr.0133, i32 1
  %incdec.ptr53 = getelementptr ptr, ptr %gattr.0134, i32 1
  %41 = ptrtoint ptr %gattr.0134 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %sattr.0133, ptr %gattr.0134, align 4
  br label %for.inc54

for.inc54:                                        ; preds = %if.end44, %sect_empty.exit109, %for.body27
  %sattr.1.ph = phi ptr [ %sattr.0133, %sect_empty.exit109 ], [ %incdec.ptr, %if.end44 ], [ %sattr.0133, %for.body27 ]
  %gattr.1.ph = phi ptr [ %gattr.0134, %sect_empty.exit109 ], [ %incdec.ptr53, %if.end44 ], [ %gattr.0134, %for.body27 ]
  %inc55 = add nuw nsw i32 %i.1131, 1
  %42 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %hdr, align 4
  %e_shnum23 = getelementptr inbounds %struct.elf32_hdr, ptr %43, i32 0, i32 12
  %44 = ptrtoint ptr %e_shnum23 to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %e_shnum23, align 4
  %conv24 = zext i16 %45 to i32
  %cmp25 = icmp ult i32 %inc55, %conv24
  br i1 %cmp25, label %for.body27, label %for.end56

for.end56:                                        ; preds = %for.inc54, %if.end14
  %gattr.0.lcssa = phi ptr [ %add.ptr, %if.end14 ], [ %gattr.1.ph, %for.inc54 ]
  %46 = ptrtoint ptr %gattr.0.lcssa to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr null, ptr %gattr.0.lcssa, align 4
  %mkobj = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 4
  %call58 = tail call i32 @sysfs_create_group(ptr noundef %mkobj, ptr noundef nonnull %call9.i.i) #29
  %tobool.not = icmp eq i32 %call58, 0
  br i1 %tobool.not, label %if.end60, label %out

if.end60:                                         ; preds = %for.end56
  %sect_attrs61 = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 34
  %47 = ptrtoint ptr %sect_attrs61 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %call9.i.i, ptr %sect_attrs61, align 4
  br label %cleanup62

out:                                              ; preds = %for.end56, %do.body
  %48 = ptrtoint ptr %nsections to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %nsections, align 4
  %cmp5.not.i = icmp eq i32 %49, 0
  br i1 %cmp5.not.i, label %free_sect_attrs.exit, label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %out
  %section.06.i = phi i32 [ %inc.i, %for.body.i ], [ 0, %out ]
  %arrayidx.i = getelementptr %struct.module_sect_attrs, ptr %call9.i.i, i32 0, i32 2, i32 %section.06.i
  %50 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %arrayidx.i, align 8
  tail call void @kfree(ptr noundef %51) #29
  %inc.i = add nuw i32 %section.06.i, 1
  %52 = ptrtoint ptr %nsections to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %nsections, align 4
  %cmp.i110 = icmp ult i32 %inc.i, %53
  br i1 %cmp.i110, label %for.body.i, label %free_sect_attrs.exit

free_sect_attrs.exit:                             ; preds = %for.body.i, %out
  tail call void @kfree(ptr noundef nonnull %call9.i.i) #29
  br label %cleanup62

cleanup62:                                        ; preds = %free_sect_attrs.exit, %if.end60, %for.end
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @add_notes_attrs(ptr noundef %mod, ptr nocapture noundef readonly %info) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %sect_attrs = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 34
  %0 = ptrtoint ptr %sect_attrs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sect_attrs, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %cleanup, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %hdr = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 2
  %2 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hdr, align 4
  %e_shnum = getelementptr inbounds %struct.elf32_hdr, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %e_shnum to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %e_shnum, align 4
  %conv = zext i16 %5 to i32
  %cmp132.not = icmp eq i16 %5, 0
  br i1 %cmp132.not, label %cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %sechdrs = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 4
  %6 = ptrtoint ptr %sechdrs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sechdrs, align 4
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %i.0134 = phi i32 [ 0, %for.body.lr.ph ], [ %inc8, %for.inc ]
  %notes.0133 = phi i32 [ 0, %for.body.lr.ph ], [ %notes.1, %for.inc ]
  %sh_flags.i = getelementptr %struct.elf32_shdr, ptr %7, i32 %i.0134, i32 2
  %8 = ptrtoint ptr %sh_flags.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sh_flags.i, align 4
  %and.i = and i32 %9, 2
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %for.inc, label %sect_empty.exit

sect_empty.exit:                                  ; preds = %for.body
  %sh_size.i = getelementptr %struct.elf32_shdr, ptr %7, i32 %i.0134, i32 5
  %10 = ptrtoint ptr %sh_size.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sh_size.i, align 4
  %cmp.i = icmp eq i32 %11, 0
  br i1 %cmp.i, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %sect_empty.exit
  %sh_type = getelementptr %struct.elf32_shdr, ptr %7, i32 %i.0134, i32 1
  %12 = ptrtoint ptr %sh_type to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sh_type, align 4
  %cmp4 = icmp eq i32 %13, 7
  %inc = zext i1 %cmp4 to i32
  %spec.select = add i32 %notes.0133, %inc
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %sect_empty.exit, %for.body
  %notes.1 = phi i32 [ %notes.0133, %sect_empty.exit ], [ %spec.select, %land.lhs.true ], [ %notes.0133, %for.body ]
  %inc8 = add nuw nsw i32 %i.0134, 1
  %exitcond.not = icmp eq i32 %inc8, %conv
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %cmp9 = icmp eq i32 %notes.1, 0
  br i1 %cmp9, label %cleanup, label %if.end8.i.i

if.end8.i.i:                                      ; preds = %for.end
  %14 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %notes.1, i32 44) #29
  %15 = extractvalue { i32, i1 } %14, 1
  %16 = extractvalue { i32, i1 } %14, 0
  %spec.select.i = tail call i32 @llvm.uadd.sat.i32(i32 %16, i32 8) #29
  %retval.0.i = select i1 %15, i32 -1, i32 %spec.select.i
  %call9.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %retval.0.i, i32 noundef 3520) #35
  %cmp15 = icmp eq ptr %call9.i.i, null
  br i1 %cmp15, label %cleanup, label %if.end18

if.end18:                                         ; preds = %if.end8.i.i
  %notes19 = getelementptr inbounds %struct.module_notes_attrs, ptr %call9.i.i, i32 0, i32 1
  %17 = ptrtoint ptr %notes19 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %notes.1, ptr %notes19, align 4
  %18 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %hdr, align 4
  %e_shnum23136 = getelementptr inbounds %struct.elf32_hdr, ptr %19, i32 0, i32 12
  %20 = ptrtoint ptr %e_shnum23136 to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %e_shnum23136, align 4
  %cmp25138.not = icmp eq i16 %21, 0
  br i1 %cmp25138.not, label %for.end54, label %for.body27.lr.ph

for.body27.lr.ph:                                 ; preds = %if.end18
  %attrs = getelementptr inbounds %struct.module_notes_attrs, ptr %call9.i.i, i32 0, i32 2
  %sechdrs28 = getelementptr inbounds %struct.load_info, ptr %info, i32 0, i32 4
  br label %for.body27

for.body27:                                       ; preds = %for.inc52, %for.body27.lr.ph
  %nattr.0144 = phi ptr [ %attrs, %for.body27.lr.ph ], [ %nattr.2, %for.inc52 ]
  %i.1141 = phi i32 [ 0, %for.body27.lr.ph ], [ %inc53, %for.inc52 ]
  %loaded.0139 = phi i32 [ 0, %for.body27.lr.ph ], [ %loaded.1, %for.inc52 ]
  %22 = ptrtoint ptr %sechdrs28 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %sechdrs28, align 4
  %sh_flags.i121 = getelementptr %struct.elf32_shdr, ptr %23, i32 %i.1141, i32 2
  %24 = ptrtoint ptr %sh_flags.i121 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %sh_flags.i121, align 4
  %and.i122 = and i32 %25, 2
  %tobool.not.i123 = icmp eq i32 %and.i122, 0
  br i1 %tobool.not.i123, label %for.inc52, label %sect_empty.exit127

sect_empty.exit127:                               ; preds = %for.body27
  %sh_size.i124 = getelementptr %struct.elf32_shdr, ptr %23, i32 %i.1141, i32 5
  %26 = ptrtoint ptr %sh_size.i124 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %sh_size.i124, align 4
  %cmp.i125 = icmp eq i32 %27, 0
  br i1 %cmp.i125, label %for.inc52, label %if.end32

if.end32:                                         ; preds = %sect_empty.exit127
  %sh_type35 = getelementptr %struct.elf32_shdr, ptr %23, i32 %i.1141, i32 1
  %28 = ptrtoint ptr %sh_type35 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %sh_type35, align 4
  %cmp36 = icmp eq i32 %29, 7
  br i1 %cmp36, label %do.body, label %if.end50

do.body:                                          ; preds = %if.end32
  %key = getelementptr inbounds %struct.attribute, ptr %nattr.0144, i32 0, i32 3
  %30 = ptrtoint ptr %key to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr @add_notes_attrs.__key, ptr %key, align 4
  %31 = ptrtoint ptr %sect_attrs to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %sect_attrs, align 4
  %arrayidx41 = getelementptr %struct.module_sect_attrs, ptr %32, i32 0, i32 2, i32 %loaded.0139
  %33 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx41, align 4
  %35 = ptrtoint ptr %nattr.0144 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %34, ptr %nattr.0144, align 4
  %mode = getelementptr inbounds %struct.attribute, ptr %nattr.0144, i32 0, i32 1
  %36 = ptrtoint ptr %mode to i32
  call void @__asan_store2_noabort(i32 %36)
  store i16 292, ptr %mode, align 4
  %37 = ptrtoint ptr %sechdrs28 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %sechdrs28, align 4
  %sh_size = getelementptr %struct.elf32_shdr, ptr %38, i32 %i.1141, i32 5
  %39 = ptrtoint ptr %sh_size to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %sh_size, align 4
  %size = getelementptr inbounds %struct.bin_attribute, ptr %nattr.0144, i32 0, i32 1
  %41 = ptrtoint ptr %size to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %size, align 4
  %42 = load ptr, ptr %sechdrs28, align 4
  %sh_addr = getelementptr %struct.elf32_shdr, ptr %42, i32 %i.1141, i32 3
  %43 = ptrtoint ptr %sh_addr to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %sh_addr, align 4
  %45 = inttoptr i32 %44 to ptr
  %private = getelementptr inbounds %struct.bin_attribute, ptr %nattr.0144, i32 0, i32 2
  %46 = ptrtoint ptr %private to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %45, ptr %private, align 4
  %read = getelementptr inbounds %struct.bin_attribute, ptr %nattr.0144, i32 0, i32 4
  %47 = ptrtoint ptr %read to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr @module_notes_read, ptr %read, align 4
  %incdec.ptr = getelementptr %struct.bin_attribute, ptr %nattr.0144, i32 1
  br label %if.end50

if.end50:                                         ; preds = %do.body, %if.end32
  %nattr.1 = phi ptr [ %incdec.ptr, %do.body ], [ %nattr.0144, %if.end32 ]
  %inc51 = add i32 %loaded.0139, 1
  br label %for.inc52

for.inc52:                                        ; preds = %if.end50, %sect_empty.exit127, %for.body27
  %loaded.1 = phi i32 [ %loaded.0139, %sect_empty.exit127 ], [ %inc51, %if.end50 ], [ %loaded.0139, %for.body27 ]
  %nattr.2 = phi ptr [ %nattr.0144, %sect_empty.exit127 ], [ %nattr.1, %if.end50 ], [ %nattr.0144, %for.body27 ]
  %inc53 = add nuw nsw i32 %i.1141, 1
  %48 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %hdr, align 4
  %e_shnum23 = getelementptr inbounds %struct.elf32_hdr, ptr %49, i32 0, i32 12
  %50 = ptrtoint ptr %e_shnum23 to i32
  call void @__asan_load2_noabort(i32 %50)
  %51 = load i16, ptr %e_shnum23, align 4
  %conv24 = zext i16 %51 to i32
  %cmp25 = icmp ult i32 %inc53, %conv24
  br i1 %cmp25, label %for.body27, label %for.end54

for.end54:                                        ; preds = %for.inc52, %if.end18
  %mkobj = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 4
  %call55 = tail call ptr @kobject_create_and_add(ptr noundef nonnull @.str.283, ptr noundef %mkobj) #29
  %52 = ptrtoint ptr %call9.i.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %call55, ptr %call9.i.i, align 128
  %tobool57.not = icmp eq ptr %call55, null
  br i1 %tobool57.not, label %free_notes_attrs.exit, label %for.body63.preheader

for.body63.preheader:                             ; preds = %for.end54
  %umax = call i32 @llvm.umax.i32(i32 %notes.1, i32 1)
  br label %for.body63

for.body63:                                       ; preds = %for.inc71, %for.body63.preheader
  %i.2146 = phi i32 [ %inc72, %for.inc71 ], [ 0, %for.body63.preheader ]
  %53 = ptrtoint ptr %call9.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %call9.i.i, align 128
  %arrayidx66 = getelementptr %struct.module_notes_attrs, ptr %call9.i.i, i32 0, i32 2, i32 %i.2146
  %call67 = tail call i32 @sysfs_create_bin_file(ptr noundef %54, ptr noundef %arrayidx66) #29
  %tobool68.not = icmp eq i32 %call67, 0
  br i1 %tobool68.not, label %for.inc71, label %out

for.inc71:                                        ; preds = %for.body63
  %inc72 = add nuw i32 %i.2146, 1
  %exitcond148.not = icmp eq i32 %inc72, %umax
  br i1 %exitcond148.not, label %for.end73, label %for.body63

for.end73:                                        ; preds = %for.inc71
  %notes_attrs74 = getelementptr inbounds %struct.module, ptr %mod, i32 0, i32 35
  %55 = ptrtoint ptr %notes_attrs74 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %call9.i.i, ptr %notes_attrs74, align 64
  br label %cleanup

out:                                              ; preds = %for.body63
  %56 = ptrtoint ptr %call9.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %.pr = load ptr, ptr %call9.i.i, align 128
  %tobool.not.i128 = icmp eq ptr %.pr, null
  br i1 %tobool.not.i128, label %free_notes_attrs.exit, label %while.cond.preheader.i

while.cond.preheader.i:                           ; preds = %out
  %cmp.not8.i = icmp eq i32 %i.2146, 0
  br i1 %cmp.not8.i, label %while.end.i, label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %while.cond.preheader.i
  %i.addr.09.i = phi i32 [ %dec.i, %while.body.i ], [ %i.2146, %while.cond.preheader.i ]
  %dec.i = add i32 %i.addr.09.i, -1
  %57 = ptrtoint ptr %call9.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %call9.i.i, align 128
  %arrayidx.i = getelementptr %struct.module_notes_attrs, ptr %call9.i.i, i32 0, i32 2, i32 %dec.i
  tail call void @sysfs_remove_bin_file(ptr noundef %58, ptr noundef %arrayidx.i) #29
  %cmp.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.not.i, label %while.end.i, label %while.body.i

while.end.i:                                      ; preds = %while.body.i, %while.cond.preheader.i
  %59 = ptrtoint ptr %call9.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %call9.i.i, align 128
  tail call void @kobject_put(ptr noundef %60) #29
  br label %free_notes_attrs.exit

free_notes_attrs.exit:                            ; preds = %while.end.i, %out, %for.end54
  tail call void @kfree(ptr noundef nonnull %call9.i.i) #29
  br label %cleanup

cleanup:                                          ; preds = %free_notes_attrs.exit, %for.end73, %if.end8.i.i, %for.end, %for.cond.preheader, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kset_find_obj(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kobject_init_and_add(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_create_file_ns(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_create_link(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @module_sect_read(ptr nocapture noundef readonly %file, ptr nocapture noundef readnone %kobj, ptr nocapture noundef readonly %battr, ptr nocapture noundef writeonly %buf, i64 noundef %pos, i32 noundef %count) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %bounce = alloca [12 x i8], align 1
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %bounce) #29
  %cmp.not = icmp eq i64 %pos, 0
  %0 = call ptr @memset(ptr %bounce, i32 255, i32 12)
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %f_cred = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 12
  %1 = ptrtoint ptr %f_cred to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %f_cred, align 8
  %call = tail call zeroext i1 @kallsyms_show_value(ptr noundef %2) #29
  br i1 %call, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.end
  %address = getelementptr inbounds %struct.module_sect_attr, ptr %battr, i32 0, i32 1
  %3 = ptrtoint ptr %address to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %address, align 4
  %5 = inttoptr i32 %4 to ptr
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end
  %cond = phi ptr [ %5, %cond.true ], [ null, %if.end ]
  %call1 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef nonnull %bounce, i32 noundef 12, ptr noundef nonnull @.str.282, ptr noundef %cond) #29
  %6 = call i32 @llvm.umin.i32(i32 %call1, i32 %count)
  %7 = call ptr @memcpy(ptr %buf, ptr %bounce, i32 %6)
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry
  %retval.0 = phi i32 [ %6, %cond.end ], [ -22, %entry ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %bounce) #29
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_create_group(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #26

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @kallsyms_show_value(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @module_notes_read(ptr nocapture noundef readnone %filp, ptr nocapture noundef readnone %kobj, ptr nocapture noundef readonly %bin_attr, ptr nocapture noundef writeonly %buf, i64 noundef %pos, i32 noundef returned %count) #27 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.bin_attribute, ptr %bin_attr, i32 0, i32 2
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 4
  %idx.ext = trunc i64 %pos to i32
  %add.ptr = getelementptr i8, ptr %1, i32 %idx.ext
  %2 = call ptr @memcpy(ptr %buf, ptr %add.ptr, i32 %count)
  ret i32 %count
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_create_bin_file(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @do_one_initcall(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @dump_stack() local_unnamed_addr #15

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kobject_uevent(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ftrace_free_mem(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trim_init_extable(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @llist_add_batch(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @do_free_init(ptr nocapture noundef readnone %w) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @init_free_list, i32 noundef 4) #29
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !867
  tail call void @llvm.prefetch.p0(ptr nonnull @init_free_list, i32 1, i32 3, i32 1) #29
  %0 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr nonnull @init_free_list) #29, !srcloc !868
  %asmresult.i.i = extractvalue { i32, i32 } %0, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #29, !srcloc !869
  tail call void @synchronize_rcu() #29
  %tobool.not4 = icmp eq i32 %asmresult.i.i, 0
  br i1 %tobool.not4, label %for.end, label %land.rhs.preheader

land.rhs.preheader:                               ; preds = %entry
  %1 = inttoptr i32 %asmresult.i.i to ptr
  br label %land.rhs

land.rhs:                                         ; preds = %land.rhs, %land.rhs.preheader
  %pos.05 = phi ptr [ %3, %land.rhs ], [ %1, %land.rhs.preheader ]
  %2 = ptrtoint ptr %pos.05 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pos.05, align 4
  %module_init = getelementptr inbounds %struct.mod_initfree, ptr %pos.05, i32 0, i32 1
  %4 = ptrtoint ptr %module_init to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %module_init, align 4
  tail call void @module_memfree(ptr noundef %5)
  tail call void @kfree(ptr noundef nonnull %pos.05) #29
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %for.end, label %land.rhs

for.end:                                          ; preds = %land.rhs, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kernel_read_file_from_fd(i32 noundef, i64 noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @proc_create(ptr noundef, i16 noundef zeroext, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @modules_open(ptr nocapture noundef readnone %inode, ptr noundef %file) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @seq_open(ptr noundef %file, ptr noundef nonnull @modules_op) #29
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %private_data = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 16
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %f_cred = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 12
  %2 = ptrtoint ptr %f_cred to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %f_cred, align 8
  %call1 = tail call zeroext i1 @kallsyms_show_value(ptr noundef %3) #29
  %cond = select i1 %call1, ptr null, ptr inttoptr (i32 8 to ptr)
  %private = getelementptr inbounds %struct.seq_file, ptr %1, i32 0, i32 11
  %4 = ptrtoint ptr %private to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %cond, ptr %private, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @seq_read(ptr noundef, ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @seq_lseek(ptr noundef, i64 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @seq_release(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @seq_open(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @m_start(ptr nocapture noundef readnone %m, ptr nocapture noundef readonly %pos) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @module_mutex, i32 noundef 0) #29
  %0 = ptrtoint ptr %pos to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %pos, align 8
  %call = tail call ptr @seq_list_start(ptr noundef nonnull @modules, i64 noundef %1) #29
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @m_stop(ptr nocapture noundef readnone %m, ptr nocapture noundef readnone %p) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_unlock(ptr noundef nonnull @module_mutex) #29
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @m_next(ptr nocapture noundef readnone %m, ptr noundef %p, ptr noundef %pos) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @seq_list_next(ptr noundef %p, ptr noundef nonnull @modules, ptr noundef %pos) #29
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @m_show(ptr noundef %m, ptr noundef %p) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %buf = alloca [22 x i8], align 1
  %add.ptr = getelementptr i8, ptr %p, i32 -4
  call void @llvm.lifetime.start.p0(i64 22, ptr nonnull %buf) #29
  %0 = getelementptr inbounds [22 x i8], ptr %buf, i32 0, i32 1
  %1 = call ptr @memset(ptr %buf, i32 255, i32 22)
  %2 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %add.ptr, align 128
  %cmp = icmp eq i32 %3, 3
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %name = getelementptr i8, ptr %p, i32 8
  %size = getelementptr i8, ptr %p, i32 560
  %4 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %size, align 4
  %core_layout = getelementptr i8, ptr %p, i32 508
  %size1 = getelementptr i8, ptr %p, i32 512
  %6 = ptrtoint ptr %size1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %size1, align 4
  %add = add i32 %7, %5
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %m, ptr noundef nonnull @.str.292, ptr noundef %name, i32 noundef %add) #29
  %refcnt.i.i = getelementptr i8, ptr %p, i32 832
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refcnt.i.i, i32 noundef 4) #29
  %8 = ptrtoint ptr %refcnt.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %refcnt.i.i, align 4
  %sub.i.i = add i32 %9, -1
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %m, ptr noundef nonnull @.str.299, i32 noundef %sub.i.i) #29
  %source_list.i = getelementptr i8, ptr %p, i32 812
  %10 = ptrtoint ptr %source_list.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %use.023.i = load ptr, ptr %source_list.i, align 4
  %cmp.not24.i = icmp eq ptr %use.023.i, %source_list.i
  br i1 %cmp.not24.i, label %for.end.i.thread, label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %if.end
  %use.025.i = phi ptr [ %use.0.i, %for.body.i ], [ %use.023.i, %if.end ]
  %source.i = getelementptr inbounds %struct.module_use, ptr %use.025.i, i32 0, i32 2
  %11 = ptrtoint ptr %source.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %source.i, align 4
  %name.i = getelementptr inbounds %struct.module, ptr %12, i32 0, i32 2
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %m, ptr noundef nonnull @.str.300, ptr noundef %name.i) #29
  %13 = ptrtoint ptr %use.025.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %use.0.i = load ptr, ptr %use.025.i, align 4
  %cmp.not.i = icmp eq ptr %use.0.i, %source_list.i
  br i1 %cmp.not.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.body.i
  %init.i = getelementptr i8, ptr %p, i32 392
  %14 = ptrtoint ptr %init.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %init.i, align 4
  %cmp8.not.i = icmp eq ptr %15, null
  br i1 %cmp8.not.i, label %print_unload_info.exit, label %land.lhs.true.i

for.end.i.thread:                                 ; preds = %if.end
  %init.i33 = getelementptr i8, ptr %p, i32 392
  %16 = ptrtoint ptr %init.i33 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %init.i33, align 4
  %cmp8.not.i34 = icmp eq ptr %17, null
  br i1 %cmp8.not.i34, label %if.end11.sink.split.i, label %land.lhs.true.i.thread

land.lhs.true.i.thread:                           ; preds = %for.end.i.thread
  %exit.i37 = getelementptr i8, ptr %p, i32 828
  %18 = ptrtoint ptr %exit.i37 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %exit.i37, align 64
  %cmp9.i38 = icmp eq ptr %19, null
  %.str.301.mux.i40 = select i1 %cmp9.i38, ptr @.str.301, ptr @.str.302
  br label %if.end11.sink.split.i

land.lhs.true.i:                                  ; preds = %for.end.i
  %exit.i = getelementptr i8, ptr %p, i32 828
  %20 = ptrtoint ptr %exit.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %exit.i, align 64
  %cmp9.i = icmp eq ptr %21, null
  br i1 %cmp9.i, label %if.end11.sink.split.i, label %print_unload_info.exit

if.end11.sink.split.i:                            ; preds = %land.lhs.true.i, %land.lhs.true.i.thread, %for.end.i.thread
  %.str.301.sink.i = phi ptr [ @.str.301, %land.lhs.true.i ], [ @.str.302, %for.end.i.thread ], [ %.str.301.mux.i40, %land.lhs.true.i.thread ]
  tail call void @seq_puts(ptr noundef %m, ptr noundef nonnull %.str.301.sink.i) #29
  br label %print_unload_info.exit

print_unload_info.exit:                           ; preds = %if.end11.sink.split.i, %land.lhs.true.i, %for.end.i
  %22 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %add.ptr, align 128
  %cmp3 = icmp eq i32 %23, 2
  %cmp5 = icmp eq i32 %23, 1
  %cond = select i1 %cmp5, ptr @.str.295, ptr @.str.296
  %cond6 = select i1 %cmp3, ptr @.str.294, ptr %cond
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %m, ptr noundef nonnull @.str.293, ptr noundef nonnull %cond6) #29
  %private = getelementptr inbounds %struct.seq_file, ptr %m, i32 0, i32 11
  %24 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %private, align 8
  %tobool.not = icmp eq ptr %25, null
  br i1 %tobool.not, label %cond.false8, label %cond.end10

cond.false8:                                      ; preds = %print_unload_info.exit
  %26 = ptrtoint ptr %core_layout to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %core_layout, align 128
  br label %cond.end10

cond.end10:                                       ; preds = %cond.false8, %print_unload_info.exit
  %cond11 = phi ptr [ %27, %cond.false8 ], [ null, %print_unload_info.exit ]
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %m, ptr noundef nonnull @.str.297, ptr noundef %cond11) #29
  %taints = getelementptr i8, ptr %p, i32 656
  %28 = ptrtoint ptr %taints to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %taints, align 4
  %tobool12.not = icmp eq i32 %29, 0
  br i1 %tobool12.not, label %if.end15, label %if.then13

if.then13:                                        ; preds = %cond.end10
  %30 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %add.ptr, align 128
  %cmp.i = icmp eq i32 %31, 3
  br i1 %cmp.i, label %do.body2.i, label %do.end7.i, !prof !771

do.body2.i:                                       ; preds = %if.then13
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/module.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4553, 0\0A.popsection", ""() #29, !srcloc !870
  unreachable

do.end7.i:                                        ; preds = %if.then13
  %32 = ptrtoint ptr %taints to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %taints, align 4
  %.fr.i = freeze i32 %33
  %tobool8.not.i = icmp ne i32 %.fr.i, 0
  %.off.i = add i32 %31, -1
  %switch.i = icmp ult i32 %.off.i, 2
  %or.cond.i = select i1 %tobool8.not.i, i1 true, i1 %switch.i
  br i1 %or.cond.i, label %if.then14.i, label %module_flags.exit

if.then14.i:                                      ; preds = %do.end7.i
  %34 = ptrtoint ptr %buf to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 40, ptr %buf, align 1
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i, %if.then14.i
  %i.011.i.i = phi i32 [ 0, %if.then14.i ], [ %inc4.i.i, %for.inc.i.i ]
  %l.010.i.i = phi i32 [ 0, %if.then14.i ], [ %l.1.i.i, %for.inc.i.i ]
  %arrayidx.i.i = getelementptr [18 x %struct.taint_flag], ptr @taint_flags, i32 0, i32 %i.011.i.i
  %module.i.i = getelementptr [18 x %struct.taint_flag], ptr @taint_flags, i32 0, i32 %i.011.i.i, i32 2
  %35 = ptrtoint ptr %module.i.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %module.i.i, align 1, !range !773
  %tobool.not.i.i = icmp eq i8 %36, 0
  br i1 %tobool.not.i.i, label %for.inc.i.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %div3.i.i.i = lshr i32 %i.011.i.i, 5
  %arrayidx.i.i.i = getelementptr i32, ptr %taints, i32 %div3.i.i.i
  %37 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %39 = shl nuw i32 1, %i.011.i.i
  %40 = and i32 %38, %39
  %tobool1.not.i.i = icmp eq i32 %40, 0
  br i1 %tobool1.not.i.i, label %for.inc.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %land.lhs.true.i.i
  %41 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %arrayidx.i.i, align 1
  %inc.i.i = add i32 %l.010.i.i, 1
  %arrayidx3.i.i = getelementptr i8, ptr %0, i32 %l.010.i.i
  %43 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 %42, ptr %arrayidx3.i.i, align 1
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.then.i.i, %land.lhs.true.i.i, %for.body.i.i
  %l.1.i.i = phi i32 [ %inc.i.i, %if.then.i.i ], [ %l.010.i.i, %land.lhs.true.i.i ], [ %l.010.i.i, %for.body.i.i ]
  %inc4.i.i = add nuw nsw i32 %i.011.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc4.i.i, 18
  br i1 %exitcond.not.i.i, label %module_flags_taint.exit.i, label %for.body.i.i

module_flags_taint.exit.i:                        ; preds = %for.inc.i.i
  %add.i = add i32 %l.1.i.i, 1
  switch i32 %31, label %if.end26.i [
    i32 2, label %if.end26.i.sink.split
    i32 1, label %if.then23.i
  ]

if.then23.i:                                      ; preds = %module_flags_taint.exit.i
  br label %if.end26.i.sink.split

if.end26.i.sink.split:                            ; preds = %if.then23.i, %module_flags_taint.exit.i
  %.sink = phi i8 [ 43, %if.then23.i ], [ 45, %module_flags_taint.exit.i ]
  %inc18.i = add i32 %l.1.i.i, 2
  %arrayidx19.i = getelementptr i8, ptr %buf, i32 %add.i
  %44 = ptrtoint ptr %arrayidx19.i to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 %.sink, ptr %arrayidx19.i, align 1
  br label %if.end26.i

if.end26.i:                                       ; preds = %if.end26.i.sink.split, %module_flags_taint.exit.i
  %bx.1.i = phi i32 [ %add.i, %module_flags_taint.exit.i ], [ %inc18.i, %if.end26.i.sink.split ]
  %inc27.i = add i32 %bx.1.i, 1
  %arrayidx28.i = getelementptr i8, ptr %buf, i32 %bx.1.i
  %45 = ptrtoint ptr %arrayidx28.i to i32
  call void @__asan_store1_noabort(i32 %45)
  store i8 41, ptr %arrayidx28.i, align 1
  br label %module_flags.exit

module_flags.exit:                                ; preds = %if.end26.i, %do.end7.i
  %bx.2.i = phi i32 [ %inc27.i, %if.end26.i ], [ 0, %do.end7.i ]
  %arrayidx30.i = getelementptr i8, ptr %buf, i32 %bx.2.i
  %46 = ptrtoint ptr %arrayidx30.i to i32
  call void @__asan_store1_noabort(i32 %46)
  store i8 0, ptr %arrayidx30.i, align 1
  call void (ptr, ptr, ...) @seq_printf(ptr noundef %m, ptr noundef nonnull @.str.293, ptr noundef nonnull %buf) #29
  br label %if.end15

if.end15:                                         ; preds = %module_flags.exit, %cond.end10
  call void @seq_puts(ptr noundef %m, ptr noundef nonnull @.str.298) #29
  br label %cleanup

cleanup:                                          ; preds = %if.end15, %entry
  call void @llvm.lifetime.end.p0(i64 22, ptr nonnull %buf) #29
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @seq_list_start(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @seq_list_next(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_puts(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #28

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare ptr @memchr(ptr, i32, i32) local_unnamed_addr #28

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #26

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #26

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.uadd.sat.i32(i32, i32) #26

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #29

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_handle_no_return()

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #30 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 361)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #30 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 361)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { noreturn nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { noreturn null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #11 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #17 = { nounwind readonly }
attributes #18 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #19 = { mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #20 = { noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #21 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #22 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #24 = { nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #25 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #26 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #27 = { mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #28 = { argmemonly nofree nounwind readonly willreturn }
attributes #29 = { nounwind }
attributes #30 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #31 = { nobuiltin nounwind }
attributes #32 = { nobuiltin }
attributes #33 = { noreturn nounwind }
attributes #34 = { nounwind readonly willreturn }
attributes #35 = { nounwind allocsize(0) }
attributes #36 = { nounwind readnone }
attributes #37 = { cold nounwind }
attributes #38 = { nounwind allocsize(2) }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !7, !8, !10, !11, !12, !14, !15, !16, !18, !19, !20, !21, !22, !23, !24, !25, !26, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !42, !44, !45, !47, !49, !51, !53, !55, !57, !59, !60, !61, !63, !64, !65, !67, !69, !70, !71, !72, !73, !74, !75, !76, !77, !79, !81, !83, !85, !87, !89, !91, !93, !95, !97, !99, !101, !102, !103, !104, !105, !106, !107, !108, !109, !111, !112, !113, !114, !115, !116, !117, !118, !119, !121, !123, !125, !127, !128, !130, !132, !134, !135, !136, !137, !139, !141, !142, !143, !145, !146, !147, !149, !150, !151, !153, !155, !157, !158, !159, !160, !161, !162, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !200, !201, !203, !204, !206, !207, !208, !210, !212, !213, !214, !215, !216, !217, !218, !219, !221, !222, !223, !224, !225, !226, !227, !229, !230, !232, !233, !235, !236, !237, !239, !241, !242, !244, !246, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !263, !264, !265, !267, !269, !270, !272, !274, !276, !277, !278, !279, !281, !282, !283, !284, !286, !287, !288, !290, !292, !294, !296, !298, !299, !300, !301, !303, !304, !305, !306, !308, !310, !311, !312, !314, !315, !316, !318, !319, !320, !322, !323, !324, !326, !327, !328, !330, !331, !332, !334, !335, !336, !338, !339, !340, !342, !343, !344, !346, !347, !348, !350, !351, !352, !354, !355, !356, !358, !360, !361, !362, !363, !364, !366, !368, !369, !370, !372, !374, !376, !378, !380, !381, !382, !384, !385, !386, !387, !389, !390, !391, !393, !394, !395, !396, !398, !400, !402, !404, !406, !407, !408, !409, !411, !413, !414, !415, !417, !419, !420, !421, !423, !425, !427, !429, !431, !432, !433, !434, !436, !438, !439, !440, !441, !443, !445, !446, !447, !448, !450, !452, !454, !456, !458, !460, !462, !463, !464, !465, !467, !469, !470, !471, !473, !474, !476, !477, !479, !481, !482, !484, !486, !487, !488, !490, !491, !493, !494, !495, !496, !498, !499, !500, !502, !503, !505, !507, !509, !511, !513, !515, !517, !519, !520, !521, !522, !524, !526, !528, !530, !532, !534, !536, !538, !540, !542, !544, !546, !548, !550, !551, !552, !554, !556, !558, !560, !562, !563, !564, !565, !567, !569, !571, !572, !574, !575, !577, !579, !581, !583, !585, !587, !589, !591, !593, !595, !597, !599, !601, !603, !605, !607, !609, !610, !611, !613, !614, !615, !617, !618, !620, !621, !622, !624, !625, !626, !627, !629, !631, !632, !633, !634, !636, !637, !638, !640, !642, !643, !644, !645, !647, !648, !649, !651, !652, !654, !655, !656, !658, !660, !661, !662, !663, !664, !666, !668, !669, !670, !671, !673, !675, !676, !677, !678, !680, !682, !683, !684, !685, !687, !688, !689, !691, !693, !695, !697, !699, !701, !703, !704, !705, !707, !708, !709, !710, !712, !714, !715, !716, !717, !718, !720, !721, !722, !724, !726, !728, !730, !732, !734, !736, !738, !740, !742, !744, !746, !748, !750, !752, !754, !756, !758}
!llvm.named.register.sp = !{!760}
!llvm.module.flags = !{!761, !762, !763, !764, !765, !766, !767, !768}
!llvm.ident = !{!769}

!0 = !{ptr @__tracepoint_module_load, !1, !"__tracepoint_module_load", i1 false, i1 false}
!1 = !{!"../include/trace/events/module.h", i32 31, i32 1}
!2 = !{ptr @__tracepoint_ptr_module_load, !1, !"__tracepoint_ptr_module_load", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_module_load, !1, !"__SCK__tp_func_module_load", i1 false, i1 false}
!4 = !{ptr @__tracepoint_module_free, !5, !"__tracepoint_module_free", i1 false, i1 false}
!5 = !{!"../include/trace/events/module.h", i32 50, i32 1}
!6 = !{ptr @__tracepoint_ptr_module_free, !5, !"__tracepoint_ptr_module_free", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_module_free, !5, !"__SCK__tp_func_module_free", i1 false, i1 false}
!8 = !{ptr @__tracepoint_module_get, !9, !"__tracepoint_module_get", i1 false, i1 false}
!9 = !{!"../include/trace/events/module.h", i32 92, i32 1}
!10 = !{ptr @__tracepoint_ptr_module_get, !9, !"__tracepoint_ptr_module_get", i1 false, i1 false}
!11 = !{ptr @__SCK__tp_func_module_get, !9, !"__SCK__tp_func_module_get", i1 false, i1 false}
!12 = !{ptr @__tracepoint_module_put, !13, !"__tracepoint_module_put", i1 false, i1 false}
!13 = !{!"../include/trace/events/module.h", i32 99, i32 1}
!14 = !{ptr @__tracepoint_ptr_module_put, !13, !"__tracepoint_ptr_module_put", i1 false, i1 false}
!15 = !{ptr @__SCK__tp_func_module_put, !13, !"__SCK__tp_func_module_put", i1 false, i1 false}
!16 = !{ptr @__tracepoint_module_request, !17, !"__tracepoint_module_request", i1 false, i1 false}
!17 = !{!"../include/trace/events/module.h", i32 107, i32 1}
!18 = !{ptr @__tracepoint_ptr_module_request, !17, !"__tracepoint_ptr_module_request", i1 false, i1 false}
!19 = !{ptr @__SCK__tp_func_module_request, !17, !"__SCK__tp_func_module_request", i1 false, i1 false}
!20 = !{ptr @event_class_module_load, !1, !"event_class_module_load", i1 false, i1 false}
!21 = !{ptr @event_module_load, !1, !"event_module_load", i1 false, i1 false}
!22 = !{ptr @__event_module_load, !1, !"__event_module_load", i1 false, i1 false}
!23 = !{ptr @event_class_module_free, !5, !"event_class_module_free", i1 false, i1 false}
!24 = !{ptr @event_module_free, !5, !"event_module_free", i1 false, i1 false}
!25 = !{ptr @__event_module_free, !5, !"__event_module_free", i1 false, i1 false}
!26 = !{ptr @event_class_module_refcnt, !27, !"event_class_module_refcnt", i1 false, i1 false}
!27 = !{!"../include/trace/events/module.h", i32 70, i32 1}
!28 = !{ptr @event_module_get, !9, !"event_module_get", i1 false, i1 false}
!29 = !{ptr @__event_module_get, !9, !"__event_module_get", i1 false, i1 false}
!30 = !{ptr @event_module_put, !13, !"event_module_put", i1 false, i1 false}
!31 = !{ptr @__event_module_put, !13, !"__event_module_put", i1 false, i1 false}
!32 = !{ptr @event_class_module_request, !17, !"event_class_module_request", i1 false, i1 false}
!33 = !{ptr @event_module_request, !17, !"event_module_request", i1 false, i1 false}
!34 = !{ptr @__event_module_request, !17, !"__event_module_request", i1 false, i1 false}
!35 = !{ptr @__bpf_trace_tp_map_module_load, !1, !"__bpf_trace_tp_map_module_load", i1 false, i1 false}
!36 = !{ptr @__bpf_trace_tp_map_module_free, !5, !"__bpf_trace_tp_map_module_free", i1 false, i1 false}
!37 = !{ptr @__bpf_trace_tp_map_module_get, !9, !"__bpf_trace_tp_map_module_get", i1 false, i1 false}
!38 = !{ptr @__bpf_trace_tp_map_module_put, !13, !"__bpf_trace_tp_map_module_put", i1 false, i1 false}
!39 = !{ptr @__bpf_trace_tp_map_module_request, !17, !"__bpf_trace_tp_map_module_request", i1 false, i1 false}
!40 = !{ptr @kdb_modules, !41, !"kdb_modules", i1 false, i1 false}
!41 = !{!"../kernel/module.c", i32 256, i32 19}
!42 = !{ptr @__param_sig_enforce, !43, !"__param_sig_enforce", i1 false, i1 false}
!43 = !{!"../kernel/module.c", i32 272, i32 1}
!44 = !{ptr @__UNIQUE_ID_sig_enforcetype278, !43, !"__UNIQUE_ID_sig_enforcetype278", i1 false, i1 false}
!45 = !{ptr @__ksymtab_is_module_sig_enforced, !46, !"__ksymtab_is_module_sig_enforced", i1 false, i1 false}
!46 = !{!"../kernel/module.c", i32 290, i32 1}
!47 = !{ptr @modules_disabled, !48, !"modules_disabled", i1 false, i1 false}
!48 = !{!"../kernel/module.c", i32 293, i32 5}
!49 = !{ptr @__param_nomodule, !50, !"__param_nomodule", i1 false, i1 false}
!50 = !{!"../kernel/module.c", i32 294, i32 1}
!51 = !{ptr @__ksymtab_register_module_notifier, !52, !"__ksymtab_register_module_notifier", i1 false, i1 false}
!52 = !{!"../kernel/module.c", i32 305, i32 1}
!53 = !{ptr @__ksymtab_unregister_module_notifier, !54, !"__ksymtab_unregister_module_notifier", i1 false, i1 false}
!54 = !{!"../kernel/module.c", i32 311, i32 1}
!55 = !{ptr @__ksymtab___module_put_and_kthread_exit, !56, !"__ksymtab___module_put_and_kthread_exit", i1 false, i1 false}
!56 = !{!"../kernel/module.c", i32 345, i32 1}
!57 = distinct !{null, !58, !"__warned", i1 false, i1 false}
!58 = !{!"../kernel/module.c", i32 640, i32 2}
!59 = !{ptr @.str, !58, !"<string literal>", i1 false, i1 false}
!60 = !{ptr @.str.1, !58, !"<string literal>", i1 false, i1 false}
!61 = !{ptr @__ksymtab___tracepoint_module_get, !62, !"__ksymtab___tracepoint_module_get", i1 false, i1 false}
!62 = !{!"../kernel/module.c", i32 751, i32 1}
!63 = !{ptr @__ksymtab___traceiter_module_get, !62, !"__ksymtab___traceiter_module_get", i1 false, i1 false}
!64 = !{ptr @__ksymtab___SCK__tp_func_module_get, !62, !"__ksymtab___SCK__tp_func_module_get", i1 false, i1 false}
!65 = !{ptr @__ksymtab_module_refcount, !66, !"__ksymtab_module_refcount", i1 false, i1 false}
!66 = !{!"../kernel/module.c", i32 907, i32 1}
!67 = !{ptr @.str.2, !68, !"<string literal>", i1 false, i1 false}
!68 = !{!"../kernel/module.c", i32 912, i32 1}
!69 = !{ptr @event_enter__delete_module, !68, !"event_enter__delete_module", i1 false, i1 false}
!70 = !{ptr @__event_enter__delete_module, !68, !"__event_enter__delete_module", i1 false, i1 false}
!71 = !{ptr @.str.3, !68, !"<string literal>", i1 false, i1 false}
!72 = !{ptr @event_exit__delete_module, !68, !"event_exit__delete_module", i1 false, i1 false}
!73 = !{ptr @__event_exit__delete_module, !68, !"__event_exit__delete_module", i1 false, i1 false}
!74 = !{ptr @.str.4, !68, !"<string literal>", i1 false, i1 false}
!75 = !{ptr @__syscall_meta__delete_module, !68, !"__syscall_meta__delete_module", i1 false, i1 false}
!76 = !{ptr @__p_syscall_meta__delete_module, !68, !"__p_syscall_meta__delete_module", i1 false, i1 false}
!77 = !{ptr @__ksymtab___symbol_put, !78, !"__ksymtab___symbol_put", i1 false, i1 false}
!78 = !{!"../kernel/module.c", i32 1025, i32 1}
!79 = !{ptr @__ksymtab_symbol_put_addr, !80, !"__ksymtab_symbol_put_addr", i1 false, i1 false}
!80 = !{!"../kernel/module.c", i32 1046, i32 1}
!81 = !{ptr @__ksymtab___module_get, !82, !"__ksymtab___module_get", i1 false, i1 false}
!82 = !{!"../kernel/module.c", i32 1066, i32 1}
!83 = !{ptr @__ksymtab_try_module_get, !84, !"__ksymtab_try_module_get", i1 false, i1 false}
!84 = !{!"../kernel/module.c", i32 1085, i32 1}
!85 = !{ptr @__ksymtab_module_put, !86, !"__ksymtab_module_put", i1 false, i1 false}
!86 = !{!"../kernel/module.c", i32 1099, i32 1}
!87 = !{ptr @.str.5, !88, !"<string literal>", i1 false, i1 false}
!88 = !{!"../kernel/module.c", i32 1171, i32 2}
!89 = !{ptr @module_uevent, !90, !"module_uevent", i1 false, i1 false}
!90 = !{!"../kernel/module.c", i32 1170, i32 25}
!91 = !{ptr @__ksymtab___symbol_get, !92, !"__ksymtab___symbol_get", i1 false, i1 false}
!92 = !{!"../kernel/module.c", i32 2229, i32 1}
!93 = !{ptr @.str.6, !94, !"<string literal>", i1 false, i1 false}
!94 = !{!"../kernel/module.c", i32 2844, i32 25}
!95 = !{ptr @.str.7, !96, !"<string literal>", i1 false, i1 false}
!96 = !{!"../kernel/module.c", i32 2849, i32 25}
!97 = !{ptr @__param_module_blacklist, !98, !"__param_module_blacklist", i1 false, i1 false}
!98 = !{!"../kernel/module.c", i32 3562, i32 1}
!99 = !{ptr @.str.8, !100, !"<string literal>", i1 false, i1 false}
!100 = !{!"../kernel/module.c", i32 4169, i32 1}
!101 = !{ptr @event_enter__init_module, !100, !"event_enter__init_module", i1 false, i1 false}
!102 = !{ptr @__event_enter__init_module, !100, !"__event_enter__init_module", i1 false, i1 false}
!103 = !{ptr @.str.9, !100, !"<string literal>", i1 false, i1 false}
!104 = !{ptr @event_exit__init_module, !100, !"event_exit__init_module", i1 false, i1 false}
!105 = !{ptr @__event_exit__init_module, !100, !"__event_exit__init_module", i1 false, i1 false}
!106 = !{ptr @.str.10, !100, !"<string literal>", i1 false, i1 false}
!107 = !{ptr @__syscall_meta__init_module, !100, !"__syscall_meta__init_module", i1 false, i1 false}
!108 = !{ptr @__p_syscall_meta__init_module, !100, !"__p_syscall_meta__init_module", i1 false, i1 false}
!109 = !{ptr @.str.11, !110, !"<string literal>", i1 false, i1 false}
!110 = !{!"../kernel/module.c", i32 4189, i32 1}
!111 = !{ptr @event_enter__finit_module, !110, !"event_enter__finit_module", i1 false, i1 false}
!112 = !{ptr @__event_enter__finit_module, !110, !"__event_enter__finit_module", i1 false, i1 false}
!113 = !{ptr @.str.12, !110, !"<string literal>", i1 false, i1 false}
!114 = !{ptr @event_exit__finit_module, !110, !"event_exit__finit_module", i1 false, i1 false}
!115 = !{ptr @__event_exit__finit_module, !110, !"__event_exit__finit_module", i1 false, i1 false}
!116 = !{ptr @.str.13, !110, !"<string literal>", i1 false, i1 false}
!117 = !{ptr @__syscall_meta__finit_module, !110, !"__syscall_meta__finit_module", i1 false, i1 false}
!118 = !{ptr @__p_syscall_meta__finit_module, !110, !"__p_syscall_meta__finit_module", i1 false, i1 false}
!119 = distinct !{null, !120, !"__warned", i1 false, i1 false}
!120 = !{!"../kernel/module.c", i32 4357, i32 2}
!121 = distinct !{null, !122, !"__warned", i1 false, i1 false}
!122 = !{!"../kernel/module.c", i32 4383, i32 2}
!123 = distinct !{null, !124, !"__warned", i1 false, i1 false}
!124 = !{!"../kernel/module.c", i32 4411, i32 2}
!125 = distinct !{null, !126, !"__warned", i1 false, i1 false}
!126 = !{!"../kernel/module.c", i32 4416, i32 14}
!127 = !{ptr @.str.15, !126, !"<string literal>", i1 false, i1 false}
!128 = distinct !{null, !129, !"__warned", i1 false, i1 false}
!129 = !{!"../kernel/module.c", i32 4463, i32 3}
!130 = !{ptr @__initcall__kmod_module__325_4666_proc_modules_init6, !131, !"__initcall__kmod_module__325_4666_proc_modules_init6", i1 false, i1 false}
!131 = !{!"../kernel/module.c", i32 4666, i32 1}
!132 = !{ptr @.str.16, !133, !"<string literal>", i1 false, i1 false}
!133 = !{!"../kernel/module.c", i32 4783, i32 2}
!134 = !{ptr @.str.17, !133, !"<string literal>", i1 false, i1 false}
!135 = !{ptr @print_modules._entry, !133, !"_entry", i1 false, i1 false}
!136 = !{ptr @print_modules._entry_ptr, !133, !"_entry_ptr", i1 false, i1 false}
!137 = distinct !{null, !138, !"__warned", i1 false, i1 false}
!138 = !{!"../kernel/module.c", i32 4786, i32 2}
!139 = !{ptr @.str.19, !140, !"<string literal>", i1 false, i1 false}
!140 = !{!"../kernel/module.c", i32 4789, i32 3}
!141 = !{ptr @print_modules._entry.18, !140, !"_entry", i1 false, i1 false}
!142 = !{ptr @print_modules._entry_ptr.20, !140, !"_entry_ptr", i1 false, i1 false}
!143 = !{ptr @.str.22, !144, !"<string literal>", i1 false, i1 false}
!144 = !{!"../kernel/module.c", i32 4793, i32 3}
!145 = !{ptr @print_modules._entry.21, !144, !"_entry", i1 false, i1 false}
!146 = !{ptr @print_modules._entry_ptr.23, !144, !"_entry_ptr", i1 false, i1 false}
!147 = !{ptr @.str.25, !148, !"<string literal>", i1 false, i1 false}
!148 = !{!"../kernel/module.c", i32 4794, i32 2}
!149 = !{ptr @print_modules._entry.24, !148, !"_entry", i1 false, i1 false}
!150 = !{ptr @print_modules._entry_ptr.26, !148, !"_entry_ptr", i1 false, i1 false}
!151 = !{ptr @__ksymtab_module_layout, !152, !"__ksymtab_module_layout", i1 false, i1 false}
!152 = !{!"../kernel/module.c", i32 4809, i32 1}
!153 = !{ptr @last_unloaded_module, !154, !"last_unloaded_module", i1 false, i1 false}
!154 = !{!"../kernel/module.c", i32 747, i32 13}
!155 = !{ptr @module_blacklist, !156, !"module_blacklist", i1 false, i1 false}
!156 = !{!"../kernel/module.c", i32 3544, i32 14}
!157 = !{ptr @__tpstrtab_module_load, !1, !"__tpstrtab_module_load", i1 false, i1 false}
!158 = !{ptr @__tpstrtab_module_free, !5, !"__tpstrtab_module_free", i1 false, i1 false}
!159 = !{ptr @__tpstrtab_module_get, !9, !"__tpstrtab_module_get", i1 false, i1 false}
!160 = !{ptr @__tpstrtab_module_put, !13, !"__tpstrtab_module_put", i1 false, i1 false}
!161 = !{ptr @__tpstrtab_module_request, !17, !"__tpstrtab_module_request", i1 false, i1 false}
!162 = !{ptr @str__module__trace_system_name, !163, !"str__module__trace_system_name", i1 false, i1 false}
!163 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!164 = !{ptr @.str.27, !1, !"<string literal>", i1 false, i1 false}
!165 = !{ptr @.str.28, !1, !"<string literal>", i1 false, i1 false}
!166 = !{ptr @.str.29, !1, !"<string literal>", i1 false, i1 false}
!167 = !{ptr @.str.30, !1, !"<string literal>", i1 false, i1 false}
!168 = !{ptr @.str.31, !1, !"<string literal>", i1 false, i1 false}
!169 = !{ptr @trace_event_fields_module_load, !1, !"trace_event_fields_module_load", i1 false, i1 false}
!170 = !{ptr @trace_event_type_funcs_module_load, !1, !"trace_event_type_funcs_module_load", i1 false, i1 false}
!171 = !{ptr @.str.32, !1, !"<string literal>", i1 false, i1 false}
!172 = !{ptr @.str.33, !1, !"<string literal>", i1 false, i1 false}
!173 = !{ptr @.str.34, !1, !"<string literal>", i1 false, i1 false}
!174 = !{ptr @.str.35, !1, !"<string literal>", i1 false, i1 false}
!175 = !{ptr @.str.36, !1, !"<string literal>", i1 false, i1 false}
!176 = !{ptr @.str.37, !1, !"<string literal>", i1 false, i1 false}
!177 = !{ptr @trace_raw_output_module_load.__flags, !1, !"__flags", i1 false, i1 false}
!178 = !{ptr @.str.38, !1, !"<string literal>", i1 false, i1 false}
!179 = !{ptr @print_fmt_module_load, !1, !"print_fmt_module_load", i1 false, i1 false}
!180 = !{ptr @trace_event_fields_module_free, !5, !"trace_event_fields_module_free", i1 false, i1 false}
!181 = !{ptr @trace_event_type_funcs_module_free, !5, !"trace_event_type_funcs_module_free", i1 false, i1 false}
!182 = !{ptr @.str.39, !5, !"<string literal>", i1 false, i1 false}
!183 = !{ptr @print_fmt_module_free, !5, !"print_fmt_module_free", i1 false, i1 false}
!184 = !{ptr @.str.40, !27, !"<string literal>", i1 false, i1 false}
!185 = !{ptr @.str.41, !27, !"<string literal>", i1 false, i1 false}
!186 = !{ptr @.str.42, !27, !"<string literal>", i1 false, i1 false}
!187 = !{ptr @.str.43, !27, !"<string literal>", i1 false, i1 false}
!188 = !{ptr @trace_event_fields_module_refcnt, !27, !"trace_event_fields_module_refcnt", i1 false, i1 false}
!189 = !{ptr @trace_event_type_funcs_module_refcnt, !27, !"trace_event_type_funcs_module_refcnt", i1 false, i1 false}
!190 = !{ptr @.str.44, !27, !"<string literal>", i1 false, i1 false}
!191 = !{ptr @print_fmt_module_refcnt, !27, !"print_fmt_module_refcnt", i1 false, i1 false}
!192 = !{ptr @.str.45, !17, !"<string literal>", i1 false, i1 false}
!193 = !{ptr @.str.46, !17, !"<string literal>", i1 false, i1 false}
!194 = !{ptr @trace_event_fields_module_request, !17, !"trace_event_fields_module_request", i1 false, i1 false}
!195 = !{ptr @trace_event_type_funcs_module_request, !17, !"trace_event_type_funcs_module_request", i1 false, i1 false}
!196 = !{ptr @.str.47, !17, !"<string literal>", i1 false, i1 false}
!197 = !{ptr @print_fmt_module_request, !17, !"print_fmt_module_request", i1 false, i1 false}
!198 = !{ptr @modules, !199, !"modules", i1 false, i1 false}
!199 = !{!"../kernel/module.c", i32 92, i32 8}
!200 = !{ptr @__param_str_sig_enforce, !43, !"__param_str_sig_enforce", i1 false, i1 false}
!201 = !{ptr @sig_enforce, !202, !"sig_enforce", i1 false, i1 false}
!202 = !{!"../kernel/module.c", i32 271, i32 13}
!203 = !{ptr @__param_str_nomodule, !50, !"__param_str_nomodule", i1 false, i1 false}
!204 = !{ptr @.str.48, !205, !"<string literal>", i1 false, i1 false}
!205 = !{!"../kernel/module.c", i32 299, i32 8}
!206 = !{ptr @.str.49, !205, !"<string literal>", i1 false, i1 false}
!207 = !{ptr @module_notify_list, !205, !"module_notify_list", i1 false, i1 false}
!208 = distinct !{null, !209, !"__warned", i1 false, i1 false}
!209 = !{!"../kernel/module.c", i32 568, i32 2}
!210 = !{ptr @.str.50, !211, !"<string literal>", i1 false, i1 false}
!211 = !{!"../kernel/module.c", i32 91, i32 8}
!212 = !{ptr @.str.51, !211, !"<string literal>", i1 false, i1 false}
!213 = !{ptr @module_mutex, !211, !"module_mutex", i1 false, i1 false}
!214 = !{ptr @.str.52, !68, !"<string literal>", i1 false, i1 false}
!215 = !{ptr @types__delete_module, !68, !"types__delete_module", i1 false, i1 false}
!216 = !{ptr @.str.53, !68, !"<string literal>", i1 false, i1 false}
!217 = !{ptr @.str.54, !68, !"<string literal>", i1 false, i1 false}
!218 = !{ptr @args__delete_module, !68, !"args__delete_module", i1 false, i1 false}
!219 = !{ptr @.str.55, !220, !"<string literal>", i1 false, i1 false}
!220 = !{!"../kernel/module.c", i32 946, i32 3}
!221 = !{ptr @.str.56, !220, !"<string literal>", i1 false, i1 false}
!222 = !{ptr @.str.57, !220, !"<string literal>", i1 false, i1 false}
!223 = !{ptr @__do_sys_delete_module.__UNIQUE_ID_ddebug290, !220, !"__UNIQUE_ID_ddebug290", i1 false, i1 false}
!224 = distinct !{null, !5, !"__already_done", i1 false, i1 false}
!225 = !{ptr @.str.58, !5, !"<string literal>", i1 false, i1 false}
!226 = distinct !{null, !5, !"__warned", i1 false, i1 false}
!227 = distinct !{null, !228, !"__already_done", i1 false, i1 false}
!228 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!229 = !{ptr @.str.59, !228, !"<string literal>", i1 false, i1 false}
!230 = !{ptr @init_completion.__key, !231, !"__key", i1 false, i1 false}
!231 = !{!"../include/linux/completion.h", i32 87, i32 2}
!232 = !{ptr @.str.60, !231, !"<string literal>", i1 false, i1 false}
!233 = !{ptr @.str.61, !234, !"<string literal>", i1 false, i1 false}
!234 = !{!"../kernel/module.c", i32 841, i32 3}
!235 = !{ptr @.str.62, !234, !"<string literal>", i1 false, i1 false}
!236 = !{ptr @module_unload_free.__UNIQUE_ID_ddebug289, !234, !"__UNIQUE_ID_ddebug289", i1 false, i1 false}
!237 = distinct !{null, !238, !"mod_tree_ops", i1 false, i1 false}
!238 = !{!"../kernel/module.c", i32 147, i32 36}
!239 = !{ptr @.str.63, !240, !"<string literal>", i1 false, i1 false}
!240 = !{!"../kernel/module.c", i32 297, i32 8}
!241 = !{ptr @module_wq, !240, !"module_wq", i1 false, i1 false}
!242 = !{ptr @find_symbol.arr, !243, !"arr", i1 false, i1 false}
!243 = !{!"../kernel/module.c", i32 519, i32 32}
!244 = distinct !{null, !245, !"__warned", i1 false, i1 false}
!245 = !{!"../kernel/module.c", i32 535, i32 2}
!246 = !{ptr @.str.64, !247, !"<string literal>", i1 false, i1 false}
!247 = !{!"../kernel/module.c", i32 553, i32 2}
!248 = !{ptr @.str.65, !247, !"<string literal>", i1 false, i1 false}
!249 = !{ptr @find_symbol.__UNIQUE_ID_ddebug281, !247, !"__UNIQUE_ID_ddebug281", i1 false, i1 false}
!250 = distinct !{null, !9, !"__already_done", i1 false, i1 false}
!251 = distinct !{null, !9, !"__warned", i1 false, i1 false}
!252 = distinct !{null, !13, !"__already_done", i1 false, i1 false}
!253 = distinct !{null, !13, !"__warned", i1 false, i1 false}
!254 = !{ptr @___asan_gen_.411, !98, !"__param_str_module_blacklist", i1 false, i1 false}
!255 = !{ptr @.str.66, !100, !"<string literal>", i1 false, i1 false}
!256 = !{ptr @types__init_module, !100, !"types__init_module", i1 false, i1 false}
!257 = !{ptr @.str.67, !100, !"<string literal>", i1 false, i1 false}
!258 = !{ptr @.str.68, !100, !"<string literal>", i1 false, i1 false}
!259 = !{ptr @.str.69, !100, !"<string literal>", i1 false, i1 false}
!260 = !{ptr @args__init_module, !100, !"args__init_module", i1 false, i1 false}
!261 = !{ptr @.str.70, !262, !"<string literal>", i1 false, i1 false}
!262 = !{!"../kernel/module.c", i32 4179, i32 2}
!263 = !{ptr @.str.71, !262, !"<string literal>", i1 false, i1 false}
!264 = !{ptr @__do_sys_init_module.__UNIQUE_ID_ddebug309, !262, !"__UNIQUE_ID_ddebug309", i1 false, i1 false}
!265 = !{ptr @.str.72, !266, !"<string literal>", i1 false, i1 false}
!266 = !{!"../kernel/module.c", i32 3169, i32 27}
!267 = distinct !{null, !268, !"__already_done", i1 false, i1 false}
!268 = !{!"../include/linux/thread_info.h", i32 230, i32 6}
!269 = !{ptr @.str.73, !268, !"<string literal>", i1 false, i1 false}
!270 = !{ptr @.str.74, !271, !"<string literal>", i1 false, i1 false}
!271 = !{!"../include/linux/thread_info.h", i32 214, i32 2}
!272 = !{ptr @.str.75, !273, !"<string literal>", i1 false, i1 false}
!273 = !{!"../include/linux/uaccess.h", i32 156, i32 2}
!274 = !{ptr @.str.76, !275, !"<string literal>", i1 false, i1 false}
!275 = !{!"../kernel/module.c", i32 3987, i32 3}
!276 = !{ptr @.str.77, !275, !"<string literal>", i1 false, i1 false}
!277 = !{ptr @load_module._entry, !275, !"_entry", i1 false, i1 false}
!278 = !{ptr @load_module._entry_ptr, !275, !"_entry_ptr", i1 false, i1 false}
!279 = distinct !{null, !280, !"__already_done", i1 false, i1 false}
!280 = !{!"../kernel/module.c", i32 4018, i32 3}
!281 = !{ptr @.str.79, !280, !"<string literal>", i1 false, i1 false}
!282 = !{ptr @load_module._entry.78, !280, !"_entry", i1 false, i1 false}
!283 = !{ptr @load_module._entry_ptr.80, !280, !"_entry_ptr", i1 false, i1 false}
!284 = !{ptr @.str.82, !285, !"<string literal>", i1 false, i1 false}
!285 = !{!"../kernel/module.c", i32 4100, i32 3}
!286 = !{ptr @load_module._entry.81, !285, !"_entry", i1 false, i1 false}
!287 = !{ptr @load_module._entry_ptr.83, !285, !"_entry_ptr", i1 false, i1 false}
!288 = !{ptr @.str.84, !289, !"<string literal>", i1 false, i1 false}
!289 = !{!"../kernel/module.c", i32 2894, i32 42}
!290 = !{ptr @.str.85, !291, !"<string literal>", i1 false, i1 false}
!291 = !{!"../kernel/module.c", i32 2911, i32 12}
!292 = !{ptr @.str.86, !293, !"<string literal>", i1 false, i1 false}
!293 = !{!"../kernel/module.c", i32 2914, i32 12}
!294 = !{ptr @.str.87, !295, !"<string literal>", i1 false, i1 false}
!295 = !{!"../kernel/module.c", i32 2917, i32 12}
!296 = !{ptr @.str.88, !297, !"<string literal>", i1 false, i1 false}
!297 = !{!"../kernel/module.c", i32 2930, i32 3}
!298 = !{ptr @.str.89, !297, !"<string literal>", i1 false, i1 false}
!299 = !{ptr @module_sig_check._entry, !297, !"_entry", i1 false, i1 false}
!300 = !{ptr @module_sig_check._entry_ptr, !297, !"_entry_ptr", i1 false, i1 false}
!301 = !{ptr @.str.90, !302, !"<string literal>", i1 false, i1 false}
!302 = !{!"../kernel/module.c", i32 2975, i32 3}
!303 = !{ptr @.str.91, !302, !"<string literal>", i1 false, i1 false}
!304 = !{ptr @elf_validity_check._entry, !302, !"_entry", i1 false, i1 false}
!305 = !{ptr @elf_validity_check._entry_ptr, !302, !"_entry_ptr", i1 false, i1 false}
!306 = !{ptr @.str.92, !307, !"<string literal>", i1 false, i1 false}
!307 = !{!"../kernel/module.c", i32 2979, i32 33}
!308 = !{ptr @.str.94, !309, !"<string literal>", i1 false, i1 false}
!309 = !{!"../kernel/module.c", i32 2980, i32 3}
!310 = !{ptr @elf_validity_check._entry.93, !309, !"_entry", i1 false, i1 false}
!311 = !{ptr @elf_validity_check._entry_ptr.95, !309, !"_entry_ptr", i1 false, i1 false}
!312 = !{ptr @.str.97, !313, !"<string literal>", i1 false, i1 false}
!313 = !{!"../kernel/module.c", i32 2984, i32 3}
!314 = !{ptr @elf_validity_check._entry.96, !313, !"_entry", i1 false, i1 false}
!315 = !{ptr @elf_validity_check._entry_ptr.98, !313, !"_entry_ptr", i1 false, i1 false}
!316 = !{ptr @.str.100, !317, !"<string literal>", i1 false, i1 false}
!317 = !{!"../kernel/module.c", i32 2989, i32 3}
!318 = !{ptr @elf_validity_check._entry.99, !317, !"_entry", i1 false, i1 false}
!319 = !{ptr @elf_validity_check._entry_ptr.101, !317, !"_entry_ptr", i1 false, i1 false}
!320 = !{ptr @.str.103, !321, !"<string literal>", i1 false, i1 false}
!321 = !{!"../kernel/module.c", i32 2994, i32 3}
!322 = !{ptr @elf_validity_check._entry.102, !321, !"_entry", i1 false, i1 false}
!323 = !{ptr @elf_validity_check._entry_ptr.104, !321, !"_entry_ptr", i1 false, i1 false}
!324 = !{ptr @.str.106, !325, !"<string literal>", i1 false, i1 false}
!325 = !{!"../kernel/module.c", i32 3006, i32 3}
!326 = !{ptr @elf_validity_check._entry.105, !325, !"_entry", i1 false, i1 false}
!327 = !{ptr @elf_validity_check._entry_ptr.107, !325, !"_entry_ptr", i1 false, i1 false}
!328 = !{ptr @.str.109, !329, !"<string literal>", i1 false, i1 false}
!329 = !{!"../kernel/module.c", i32 3017, i32 3}
!330 = !{ptr @elf_validity_check._entry.108, !329, !"_entry", i1 false, i1 false}
!331 = !{ptr @elf_validity_check._entry_ptr.110, !329, !"_entry_ptr", i1 false, i1 false}
!332 = !{ptr @.str.112, !333, !"<string literal>", i1 false, i1 false}
!333 = !{!"../kernel/module.c", i32 3026, i32 3}
!334 = !{ptr @elf_validity_check._entry.111, !333, !"_entry", i1 false, i1 false}
!335 = !{ptr @elf_validity_check._entry_ptr.113, !333, !"_entry_ptr", i1 false, i1 false}
!336 = !{ptr @.str.115, !337, !"<string literal>", i1 false, i1 false}
!337 = !{!"../kernel/module.c", i32 3037, i32 3}
!338 = !{ptr @elf_validity_check._entry.114, !337, !"_entry", i1 false, i1 false}
!339 = !{ptr @elf_validity_check._entry_ptr.116, !337, !"_entry_ptr", i1 false, i1 false}
!340 = !{ptr @.str.118, !341, !"<string literal>", i1 false, i1 false}
!341 = !{!"../kernel/module.c", i32 3048, i32 3}
!342 = !{ptr @elf_validity_check._entry.117, !341, !"_entry", i1 false, i1 false}
!343 = !{ptr @elf_validity_check._entry_ptr.119, !341, !"_entry_ptr", i1 false, i1 false}
!344 = !{ptr @.str.121, !345, !"<string literal>", i1 false, i1 false}
!345 = !{!"../kernel/module.c", i32 3062, i32 5}
!346 = !{ptr @elf_validity_check._entry.120, !345, !"_entry", i1 false, i1 false}
!347 = !{ptr @elf_validity_check._entry_ptr.122, !345, !"_entry_ptr", i1 false, i1 false}
!348 = !{ptr @.str.124, !349, !"<string literal>", i1 false, i1 false}
!349 = !{!"../kernel/module.c", i32 3071, i32 5}
!350 = !{ptr @elf_validity_check._entry.123, !349, !"_entry", i1 false, i1 false}
!351 = !{ptr @elf_validity_check._entry_ptr.125, !349, !"_entry_ptr", i1 false, i1 false}
!352 = !{ptr @.str.127, !353, !"<string literal>", i1 false, i1 false}
!353 = !{!"../kernel/module.c", i32 3078, i32 6}
!354 = !{ptr @elf_validity_check._entry.126, !353, !"_entry", i1 false, i1 false}
!355 = !{ptr @elf_validity_check._entry_ptr.128, !353, !"_entry_ptr", i1 false, i1 false}
!356 = !{ptr @.str.129, !357, !"<string literal>", i1 false, i1 false}
!357 = !{!"../kernel/module.c", i32 3223, i32 36}
!358 = !{ptr @.str.130, !359, !"<string literal>", i1 false, i1 false}
!359 = !{!"../kernel/module.c", i32 3239, i32 3}
!360 = !{ptr @.str.131, !359, !"<string literal>", i1 false, i1 false}
!361 = !{ptr @setup_load_info._entry, !359, !"_entry", i1 false, i1 false}
!362 = !{ptr @setup_load_info._entry_ptr, !359, !"_entry_ptr", i1 false, i1 false}
!363 = !{ptr @.str.132, !359, !"<string literal>", i1 false, i1 false}
!364 = !{ptr @.str.133, !365, !"<string literal>", i1 false, i1 false}
!365 = !{!"../kernel/module.c", i32 3244, i32 35}
!366 = !{ptr @.str.135, !367, !"<string literal>", i1 false, i1 false}
!367 = !{!"../kernel/module.c", i32 3246, i32 3}
!368 = !{ptr @setup_load_info._entry.134, !367, !"_entry", i1 false, i1 false}
!369 = !{ptr @setup_load_info._entry_ptr.136, !367, !"_entry_ptr", i1 false, i1 false}
!370 = !{ptr @.str.137, !371, !"<string literal>", i1 false, i1 false}
!371 = !{!"../kernel/module.c", i32 3263, i32 37}
!372 = !{ptr @.str.138, !373, !"<string literal>", i1 false, i1 false}
!373 = !{!"../kernel/module.c", i32 621, i32 24}
!374 = !{ptr @.str.139, !375, !"<string literal>", i1 false, i1 false}
!375 = !{!"../kernel/module.c", i32 3554, i32 20}
!376 = !{ptr @.str.140, !377, !"<string literal>", i1 false, i1 false}
!377 = !{!"../kernel/module.c", i32 1292, i32 11}
!378 = !{ptr @.str.141, !379, !"<string literal>", i1 false, i1 false}
!379 = !{!"../kernel/module.c", i32 1273, i32 3}
!380 = !{ptr @.str.142, !379, !"<string literal>", i1 false, i1 false}
!381 = !{ptr @check_version.__UNIQUE_ID_ddebug291, !379, !"__UNIQUE_ID_ddebug291", i1 false, i1 false}
!382 = distinct !{null, !383, !"__already_done", i1 false, i1 false}
!383 = !{!"../kernel/module.c", i32 1279, i32 2}
!384 = !{ptr @.str.143, !383, !"<string literal>", i1 false, i1 false}
!385 = !{ptr @check_version._entry, !383, !"_entry", i1 false, i1 false}
!386 = !{ptr @check_version._entry_ptr, !383, !"_entry_ptr", i1 false, i1 false}
!387 = !{ptr @.str.145, !388, !"<string literal>", i1 false, i1 false}
!388 = !{!"../kernel/module.c", i32 1283, i32 2}
!389 = !{ptr @check_version._entry.144, !388, !"_entry", i1 false, i1 false}
!390 = !{ptr @check_version._entry_ptr.146, !388, !"_entry_ptr", i1 false, i1 false}
!391 = !{ptr @.str.147, !392, !"<string literal>", i1 false, i1 false}
!392 = !{!"../kernel/module.c", i32 1224, i32 3}
!393 = !{ptr @.str.148, !392, !"<string literal>", i1 false, i1 false}
!394 = !{ptr @try_to_force_load._entry, !392, !"_entry", i1 false, i1 false}
!395 = !{ptr @try_to_force_load._entry_ptr, !392, !"_entry_ptr", i1 false, i1 false}
!396 = !{ptr @.str.149, !397, !"<string literal>", i1 false, i1 false}
!397 = !{!"../kernel/module.c", i32 3593, i32 23}
!398 = !{ptr @.str.150, !399, !"<string literal>", i1 false, i1 false}
!399 = !{!"../kernel/module.c", i32 3602, i32 23}
!400 = !{ptr @.str.151, !401, !"<string literal>", i1 false, i1 false}
!401 = !{!"../kernel/module.c", i32 3272, i32 43}
!402 = !{ptr @.str.152, !403, !"<string literal>", i1 false, i1 false}
!403 = !{!"../kernel/module.c", i32 3280, i32 32}
!404 = !{ptr @.str.153, !405, !"<string literal>", i1 false, i1 false}
!405 = !{!"../kernel/module.c", i32 3284, i32 3}
!406 = !{ptr @.str.154, !405, !"<string literal>", i1 false, i1 false}
!407 = !{ptr @check_modinfo._entry, !405, !"_entry", i1 false, i1 false}
!408 = !{ptr @check_modinfo._entry_ptr, !405, !"_entry_ptr", i1 false, i1 false}
!409 = !{ptr @.str.155, !410, !"<string literal>", i1 false, i1 false}
!410 = !{!"../kernel/module.c", i32 3289, i32 25}
!411 = !{ptr @.str.157, !412, !"<string literal>", i1 false, i1 false}
!412 = !{!"../kernel/module.c", i32 3291, i32 4}
!413 = !{ptr @check_modinfo._entry.156, !412, !"_entry", i1 false, i1 false}
!414 = !{ptr @check_modinfo._entry_ptr.158, !412, !"_entry_ptr", i1 false, i1 false}
!415 = !{ptr @.str.159, !416, !"<string literal>", i1 false, i1 false}
!416 = !{!"../kernel/module.c", i32 3298, i32 24}
!417 = !{ptr @.str.161, !418, !"<string literal>", i1 false, i1 false}
!418 = !{!"../kernel/module.c", i32 3300, i32 3}
!419 = !{ptr @check_modinfo._entry.160, !418, !"_entry", i1 false, i1 false}
!420 = !{ptr @check_modinfo._entry_ptr.162, !418, !"_entry_ptr", i1 false, i1 false}
!421 = !{ptr @.str.163, !422, !"<string literal>", i1 false, i1 false}
!422 = !{!"../kernel/module.c", i32 3309, i32 37}
!423 = !{ptr @.str.164, !424, !"<string literal>", i1 false, i1 false}
!424 = !{!"../kernel/module.c", i32 1314, i32 29}
!425 = !{ptr @vermagic, !426, !"vermagic", i1 false, i1 false}
!426 = !{!"../kernel/module.c", i32 1218, i32 19}
!427 = !{ptr @.str.165, !428, !"<string literal>", i1 false, i1 false}
!428 = !{!"../kernel/module.c", i32 3137, i32 44}
!429 = !{ptr @.str.166, !430, !"<string literal>", i1 false, i1 false}
!430 = !{!"../kernel/module.c", i32 3140, i32 2}
!431 = !{ptr @.str.167, !430, !"<string literal>", i1 false, i1 false}
!432 = !{ptr @check_modinfo_retpoline._entry, !430, !"_entry", i1 false, i1 false}
!433 = !{ptr @check_modinfo_retpoline._entry_ptr, !430, !"_entry_ptr", i1 false, i1 false}
!434 = !{ptr @.str.168, !435, !"<string literal>", i1 false, i1 false}
!435 = !{!"../kernel/module.c", i32 3125, i32 24}
!436 = !{ptr @.str.169, !437, !"<string literal>", i1 false, i1 false}
!437 = !{!"../kernel/module.c", i32 3126, i32 3}
!438 = !{ptr @.str.170, !437, !"<string literal>", i1 false, i1 false}
!439 = !{ptr @check_modinfo_livepatch._entry, !437, !"_entry", i1 false, i1 false}
!440 = !{ptr @check_modinfo_livepatch._entry_ptr, !437, !"_entry_ptr", i1 false, i1 false}
!441 = !{ptr @.str.171, !442, !"<string literal>", i1 false, i1 false}
!442 = !{!"../kernel/module.c", i32 2517, i32 13}
!443 = !{ptr @.str.172, !444, !"<string literal>", i1 false, i1 false}
!444 = !{!"../kernel/module.c", i32 2521, i32 4}
!445 = !{ptr @.str.173, !444, !"<string literal>", i1 false, i1 false}
!446 = !{ptr @set_license._entry, !444, !"_entry", i1 false, i1 false}
!447 = !{ptr @set_license._entry_ptr, !444, !"_entry_ptr", i1 false, i1 false}
!448 = !{ptr @.str.174, !449, !"<string literal>", i1 false, i1 false}
!449 = !{!"../include/linux/license.h", i32 7, i32 26}
!450 = !{ptr @.str.175, !451, !"<string literal>", i1 false, i1 false}
!451 = !{!"../include/linux/license.h", i32 8, i32 22}
!452 = !{ptr @.str.176, !453, !"<string literal>", i1 false, i1 false}
!453 = !{!"../include/linux/license.h", i32 9, i32 22}
!454 = !{ptr @.str.177, !455, !"<string literal>", i1 false, i1 false}
!455 = !{!"../include/linux/license.h", i32 10, i32 22}
!456 = !{ptr @.str.178, !457, !"<string literal>", i1 false, i1 false}
!457 = !{!"../include/linux/license.h", i32 11, i32 22}
!458 = !{ptr @.str.179, !459, !"<string literal>", i1 false, i1 false}
!459 = !{!"../include/linux/license.h", i32 12, i32 22}
!460 = !{ptr @.str.180, !461, !"<string literal>", i1 false, i1 false}
!461 = !{!"../kernel/module.c", i32 2042, i32 4}
!462 = !{ptr @.str.181, !461, !"<string literal>", i1 false, i1 false}
!463 = !{ptr @module_enforce_rwx_sections._entry, !461, !"_entry", i1 false, i1 false}
!464 = !{ptr @module_enforce_rwx_sections._entry_ptr, !461, !"_entry_ptr", i1 false, i1 false}
!465 = !{ptr @layout_sections.masks, !466, !"masks", i1 false, i1 false}
!466 = !{!"../kernel/module.c", i32 2426, i32 29}
!467 = !{ptr @.str.182, !468, !"<string literal>", i1 false, i1 false}
!468 = !{!"../kernel/module.c", i32 2443, i32 2}
!469 = !{ptr @.str.183, !468, !"<string literal>", i1 false, i1 false}
!470 = !{ptr @layout_sections.__UNIQUE_ID_ddebug296, !468, !"__UNIQUE_ID_ddebug296", i1 false, i1 false}
!471 = !{ptr @.str.184, !472, !"<string literal>", i1 false, i1 false}
!472 = !{!"../kernel/module.c", i32 2455, i32 4}
!473 = !{ptr @layout_sections.__UNIQUE_ID_ddebug297, !472, !"__UNIQUE_ID_ddebug297", i1 false, i1 false}
!474 = !{ptr @.str.185, !475, !"<string literal>", i1 false, i1 false}
!475 = !{!"../kernel/module.c", i32 2476, i32 2}
!476 = !{ptr @layout_sections.__UNIQUE_ID_ddebug298, !475, !"__UNIQUE_ID_ddebug298", i1 false, i1 false}
!477 = !{ptr @layout_sections.__UNIQUE_ID_ddebug299, !478, !"__UNIQUE_ID_ddebug299", i1 false, i1 false}
!478 = !{!"../kernel/module.c", i32 2489, i32 4}
!479 = !{ptr @.str.186, !480, !"<string literal>", i1 false, i1 false}
!480 = !{!"../kernel/module.c", i32 2708, i32 2}
!481 = !{ptr @layout_symtab.__UNIQUE_ID_ddebug300, !480, !"__UNIQUE_ID_ddebug300", i1 false, i1 false}
!482 = !{ptr @layout_symtab.__UNIQUE_ID_ddebug301, !483, !"__UNIQUE_ID_ddebug301", i1 false, i1 false}
!483 = !{!"../kernel/module.c", i32 2735, i32 2}
!484 = !{ptr @.str.187, !485, !"<string literal>", i1 false, i1 false}
!485 = !{!"../kernel/module.c", i32 3460, i32 2}
!486 = !{ptr @.str.188, !485, !"<string literal>", i1 false, i1 false}
!487 = !{ptr @move_module.__UNIQUE_ID_ddebug304, !485, !"__UNIQUE_ID_ddebug304", i1 false, i1 false}
!488 = !{ptr @.str.189, !489, !"<string literal>", i1 false, i1 false}
!489 = !{!"../kernel/module.c", i32 3478, i32 3}
!490 = !{ptr @move_module.__UNIQUE_ID_ddebug305, !489, !"__UNIQUE_ID_ddebug305", i1 false, i1 false}
!491 = !{ptr @.str.190, !492, !"<string literal>", i1 false, i1 false}
!492 = !{!"../kernel/module.c", i32 599, i32 3}
!493 = !{ptr @.str.191, !492, !"<string literal>", i1 false, i1 false}
!494 = !{ptr @percpu_modalloc._entry, !492, !"_entry", i1 false, i1 false}
!495 = !{ptr @percpu_modalloc._entry_ptr, !492, !"_entry_ptr", i1 false, i1 false}
!496 = !{ptr @.str.193, !497, !"<string literal>", i1 false, i1 false}
!497 = !{!"../kernel/module.c", i32 606, i32 3}
!498 = !{ptr @percpu_modalloc._entry.192, !497, !"_entry", i1 false, i1 false}
!499 = !{ptr @percpu_modalloc._entry_ptr.194, !497, !"_entry_ptr", i1 false, i1 false}
!500 = !{ptr @init_param_lock.__key, !501, !"__key", i1 false, i1 false}
!501 = !{!"../kernel/module.c", i32 1899, i32 2}
!502 = !{ptr @.str.195, !501, !"<string literal>", i1 false, i1 false}
!503 = !{ptr @.str.196, !504, !"<string literal>", i1 false, i1 false}
!504 = !{!"../kernel/module.c", i32 3316, i32 31}
!505 = !{ptr @.str.197, !506, !"<string literal>", i1 false, i1 false}
!506 = !{!"../kernel/module.c", i32 3318, i32 33}
!507 = !{ptr @.str.198, !508, !"<string literal>", i1 false, i1 false}
!508 = !{!"../kernel/module.c", i32 3320, i32 33}
!509 = !{ptr @.str.199, !510, !"<string literal>", i1 false, i1 false}
!510 = !{!"../kernel/module.c", i32 3321, i32 37}
!511 = !{ptr @.str.200, !512, !"<string literal>", i1 false, i1 false}
!512 = !{!"../kernel/module.c", i32 3324, i32 37}
!513 = !{ptr @.str.201, !514, !"<string literal>", i1 false, i1 false}
!514 = !{!"../kernel/module.c", i32 3327, i32 34}
!515 = !{ptr @.str.202, !516, !"<string literal>", i1 false, i1 false}
!516 = !{!"../kernel/module.c", i32 3330, i32 35}
!517 = !{ptr @.str.203, !518, !"<string literal>", i1 false, i1 false}
!518 = !{!"../kernel/module.c", i32 3337, i32 3}
!519 = !{ptr @.str.204, !518, !"<string literal>", i1 false, i1 false}
!520 = !{ptr @find_module_sections._entry, !518, !"_entry", i1 false, i1 false}
!521 = !{ptr @find_module_sections._entry_ptr, !518, !"_entry_ptr", i1 false, i1 false}
!522 = !{ptr @.str.205, !523, !"<string literal>", i1 false, i1 false}
!523 = !{!"../kernel/module.c", i32 3343, i32 47}
!524 = !{ptr @.str.206, !525, !"<string literal>", i1 false, i1 false}
!525 = !{!"../kernel/module.c", i32 3347, i32 45}
!526 = !{ptr @.str.207, !527, !"<string literal>", i1 false, i1 false}
!527 = !{!"../kernel/module.c", i32 3352, i32 45}
!528 = !{ptr @.str.208, !529, !"<string literal>", i1 false, i1 false}
!529 = !{!"../kernel/module.c", i32 3357, i32 43}
!530 = !{ptr @.str.209, !531, !"<string literal>", i1 false, i1 false}
!531 = !{!"../kernel/module.c", i32 3370, i32 41}
!532 = !{ptr @.str.210, !533, !"<string literal>", i1 false, i1 false}
!533 = !{!"../kernel/module.c", i32 3373, i32 40}
!534 = !{ptr @.str.211, !535, !"<string literal>", i1 false, i1 false}
!535 = !{!"../kernel/module.c", i32 3378, i32 52}
!536 = !{ptr @.str.212, !537, !"<string literal>", i1 false, i1 false}
!537 = !{!"../kernel/module.c", i32 3384, i32 45}
!538 = !{ptr @.str.213, !539, !"<string literal>", i1 false, i1 false}
!539 = !{!"../kernel/module.c", i32 3394, i32 47}
!540 = !{ptr @.str.214, !541, !"<string literal>", i1 false, i1 false}
!541 = !{!"../kernel/module.c", i32 3396, i32 45}
!542 = !{ptr @.str.215, !543, !"<string literal>", i1 false, i1 false}
!543 = !{!"../kernel/module.c", i32 3401, i32 47}
!544 = !{ptr @.str.216, !545, !"<string literal>", i1 false, i1 false}
!545 = !{!"../kernel/module.c", i32 3410, i32 36}
!546 = !{ptr @.str.217, !547, !"<string literal>", i1 false, i1 false}
!547 = !{!"../kernel/module.c", i32 3413, i32 25}
!548 = !{ptr @.str.219, !549, !"<string literal>", i1 false, i1 false}
!549 = !{!"../kernel/module.c", i32 3414, i32 3}
!550 = !{ptr @find_module_sections._entry.218, !549, !"_entry", i1 false, i1 false}
!551 = !{ptr @find_module_sections._entry_ptr.220, !549, !"_entry_ptr", i1 false, i1 false}
!552 = !{ptr @.str.221, !553, !"<string literal>", i1 false, i1 false}
!553 = !{!"../kernel/module.c", i32 3416, i32 35}
!554 = !{ptr @.str.222, !555, !"<string literal>", i1 false, i1 false}
!555 = !{!"../kernel/module.c", i32 3494, i32 24}
!556 = !{ptr @.str.223, !557, !"<string literal>", i1 false, i1 false}
!557 = !{!"../kernel/module.c", i32 3498, i32 24}
!558 = !{ptr @.str.224, !559, !"<string literal>", i1 false, i1 false}
!559 = !{!"../kernel/module.c", i32 3503, i32 24}
!560 = !{ptr @.str.225, !561, !"<string literal>", i1 false, i1 false}
!561 = !{!"../kernel/module.c", i32 3508, i32 3}
!562 = !{ptr @.str.226, !561, !"<string literal>", i1 false, i1 false}
!563 = !{ptr @check_module_license_and_versions._entry, !561, !"_entry", i1 false, i1 false}
!564 = !{ptr @check_module_license_and_versions._entry_ptr, !561, !"_entry_ptr", i1 false, i1 false}
!565 = !{ptr @.str.227, !566, !"<string literal>", i1 false, i1 false}
!566 = !{!"../kernel/module.c", i32 3514, i32 7}
!567 = !{ptr @modinfo_attrs, !568, !"modinfo_attrs", i1 false, i1 false}
!568 = !{!"../kernel/module.c", i32 1204, i32 33}
!569 = !{ptr @.str.228, !570, !"<string literal>", i1 false, i1 false}
!570 = !{!"../kernel/module.c", i32 744, i32 1}
!571 = !{ptr @modinfo_version, !570, !"modinfo_version", i1 false, i1 false}
!572 = !{ptr @.str.229, !573, !"<string literal>", i1 false, i1 false}
!573 = !{!"../kernel/module.c", i32 745, i32 1}
!574 = !{ptr @modinfo_srcversion, !573, !"modinfo_srcversion", i1 false, i1 false}
!575 = !{ptr @.str.230, !576, !"<string literal>", i1 false, i1 false}
!576 = !{!"../kernel/module.c", i32 1158, i32 2}
!577 = !{ptr @modinfo_initstate, !578, !"modinfo_initstate", i1 false, i1 false}
!578 = !{!"../kernel/module.c", i32 1157, i32 32}
!579 = distinct !{null, !580, !"<string literal>", i1 false, i1 false}
!580 = !{!"../kernel/module.c", i32 1139, i32 22}
!581 = !{ptr @.str.232, !582, !"<string literal>", i1 false, i1 false}
!582 = !{!"../kernel/module.c", i32 1143, i32 11}
!583 = !{ptr @.str.233, !584, !"<string literal>", i1 false, i1 false}
!584 = !{!"../kernel/module.c", i32 1146, i32 11}
!585 = !{ptr @.str.234, !586, !"<string literal>", i1 false, i1 false}
!586 = !{!"../kernel/module.c", i32 1149, i32 11}
!587 = !{ptr @.str.235, !588, !"<string literal>", i1 false, i1 false}
!588 = !{!"../kernel/module.c", i32 1180, i32 2}
!589 = !{ptr @modinfo_coresize, !590, !"modinfo_coresize", i1 false, i1 false}
!590 = !{!"../kernel/module.c", i32 1179, i32 32}
!591 = !{ptr @.str.236, !592, !"<string literal>", i1 false, i1 false}
!592 = !{!"../kernel/module.c", i32 1176, i32 25}
!593 = !{ptr @.str.237, !594, !"<string literal>", i1 false, i1 false}
!594 = !{!"../kernel/module.c", i32 1189, i32 2}
!595 = !{ptr @modinfo_initsize, !596, !"modinfo_initsize", i1 false, i1 false}
!596 = !{!"../kernel/module.c", i32 1188, i32 32}
!597 = !{ptr @.str.238, !598, !"<string literal>", i1 false, i1 false}
!598 = !{!"../kernel/module.c", i32 1202, i32 2}
!599 = !{ptr @modinfo_taint, !600, !"modinfo_taint", i1 false, i1 false}
!600 = !{!"../kernel/module.c", i32 1201, i32 32}
!601 = !{ptr @modinfo_refcnt, !602, !"modinfo_refcnt", i1 false, i1 false}
!602 = !{!"../kernel/module.c", i32 1054, i32 32}
!603 = !{ptr @.str.239, !604, !"<string literal>", i1 false, i1 false}
!604 = !{!"../kernel/module.c", i32 1051, i32 25}
!605 = !{ptr @.str.240, !606, !"<string literal>", i1 false, i1 false}
!606 = !{!"../kernel/module.c", i32 2298, i32 23}
!607 = !{ptr @.str.241, !608, !"<string literal>", i1 false, i1 false}
!608 = !{!"../kernel/module.c", i32 2305, i32 4}
!609 = !{ptr @.str.242, !608, !"<string literal>", i1 false, i1 false}
!610 = !{ptr @simplify_symbols.__UNIQUE_ID_ddebug294, !608, !"__UNIQUE_ID_ddebug294", i1 false, i1 false}
!611 = !{ptr @.str.243, !612, !"<string literal>", i1 false, i1 false}
!612 = !{!"../kernel/module.c", i32 2306, i32 4}
!613 = !{ptr @simplify_symbols._entry, !612, !"_entry", i1 false, i1 false}
!614 = !{ptr @simplify_symbols._entry_ptr, !612, !"_entry_ptr", i1 false, i1 false}
!615 = !{ptr @.str.244, !616, !"<string literal>", i1 false, i1 false}
!616 = !{!"../kernel/module.c", i32 2313, i32 4}
!617 = !{ptr @simplify_symbols.__UNIQUE_ID_ddebug295, !616, !"__UNIQUE_ID_ddebug295", i1 false, i1 false}
!618 = !{ptr @.str.246, !619, !"<string literal>", i1 false, i1 false}
!619 = !{!"../kernel/module.c", i32 2336, i32 4}
!620 = !{ptr @simplify_symbols._entry.245, !619, !"_entry", i1 false, i1 false}
!621 = !{ptr @simplify_symbols._entry_ptr.247, !619, !"_entry_ptr", i1 false, i1 false}
!622 = !{ptr @.str.248, !623, !"<string literal>", i1 false, i1 false}
!623 = !{!"../kernel/module.c", i32 1462, i32 3}
!624 = !{ptr @.str.249, !623, !"<string literal>", i1 false, i1 false}
!625 = !{ptr @resolve_symbol_wait._entry, !623, !"_entry", i1 false, i1 false}
!626 = !{ptr @resolve_symbol_wait._entry_ptr, !623, !"_entry_ptr", i1 false, i1 false}
!627 = !{ptr @.str.250, !628, !"<string literal>", i1 false, i1 false}
!628 = !{!"../kernel/module.c", i32 1444, i32 21}
!629 = !{ptr @.str.251, !630, !"<string literal>", i1 false, i1 false}
!630 = !{!"../kernel/module.c", i32 1381, i32 3}
!631 = !{ptr @.str.252, !630, !"<string literal>", i1 false, i1 false}
!632 = !{ptr @inherit_taint._entry, !630, !"_entry", i1 false, i1 false}
!633 = !{ptr @inherit_taint._entry_ptr, !630, !"_entry_ptr", i1 false, i1 false}
!634 = !{ptr @.str.254, !635, !"<string literal>", i1 false, i1 false}
!635 = !{!"../kernel/module.c", i32 1387, i32 3}
!636 = !{ptr @inherit_taint._entry.253, !635, !"_entry", i1 false, i1 false}
!637 = !{ptr @inherit_taint._entry_ptr.255, !635, !"_entry_ptr", i1 false, i1 false}
!638 = !{ptr @.str.256, !639, !"<string literal>", i1 false, i1 false}
!639 = !{!"../kernel/module.c", i32 1354, i32 42}
!640 = !{ptr @.str.257, !641, !"<string literal>", i1 false, i1 false}
!641 = !{!"../kernel/module.c", i32 1362, i32 3}
!642 = !{ptr @.str.258, !641, !"<string literal>", i1 false, i1 false}
!643 = !{ptr @verify_namespace_is_imported._entry, !641, !"_entry", i1 false, i1 false}
!644 = !{ptr @verify_namespace_is_imported._entry_ptr, !641, !"_entry_ptr", i1 false, i1 false}
!645 = !{ptr @.str.259, !646, !"<string literal>", i1 false, i1 false}
!646 = !{!"../kernel/module.c", i32 781, i32 4}
!647 = !{ptr @.str.260, !646, !"<string literal>", i1 false, i1 false}
!648 = !{ptr @already_uses.__UNIQUE_ID_ddebug286, !646, !"__UNIQUE_ID_ddebug286", i1 false, i1 false}
!649 = !{ptr @.str.261, !650, !"<string literal>", i1 false, i1 false}
!650 = !{!"../kernel/module.c", i32 785, i32 2}
!651 = !{ptr @already_uses.__UNIQUE_ID_ddebug287, !650, !"__UNIQUE_ID_ddebug287", i1 false, i1 false}
!652 = !{ptr @.str.262, !653, !"<string literal>", i1 false, i1 false}
!653 = !{!"../kernel/module.c", i32 800, i32 2}
!654 = !{ptr @.str.263, !653, !"<string literal>", i1 false, i1 false}
!655 = !{ptr @add_module_usage.__UNIQUE_ID_ddebug288, !653, !"__UNIQUE_ID_ddebug288", i1 false, i1 false}
!656 = !{ptr @.str.264, !657, !"<string literal>", i1 false, i1 false}
!657 = !{!"../kernel/module.c", i32 2278, i32 24}
!658 = !{ptr @.str.265, !659, !"<string literal>", i1 false, i1 false}
!659 = !{!"../include/linux/moduleloader.h", i32 82, i32 2}
!660 = !{ptr @.str.266, !659, !"<string literal>", i1 false, i1 false}
!661 = !{ptr @.str.267, !659, !"<string literal>", i1 false, i1 false}
!662 = !{ptr @apply_relocate_add._entry, !659, !"_entry", i1 false, i1 false}
!663 = !{ptr @apply_relocate_add._entry_ptr, !659, !"_entry_ptr", i1 false, i1 false}
!664 = !{ptr @.str.268, !665, !"<string literal>", i1 false, i1 false}
!665 = !{!"../kernel/module.c", i32 2658, i32 9}
!666 = !{ptr @.str.269, !667, !"<string literal>", i1 false, i1 false}
!667 = !{!"../kernel/module.c", i32 2256, i32 5}
!668 = !{ptr @.str.270, !667, !"<string literal>", i1 false, i1 false}
!669 = !{ptr @verify_exported_symbols._entry, !667, !"_entry", i1 false, i1 false}
!670 = !{ptr @verify_exported_symbols._entry_ptr, !667, !"_entry_ptr", i1 false, i1 false}
!671 = !{ptr @.str.271, !672, !"<string literal>", i1 false, i1 false}
!672 = !{!"../kernel/module.c", i32 3924, i32 20}
!673 = !{ptr @.str.272, !674, !"<string literal>", i1 false, i1 false}
!674 = !{!"../kernel/module.c", i32 3932, i32 3}
!675 = !{ptr @.str.273, !674, !"<string literal>", i1 false, i1 false}
!676 = !{ptr @unknown_module_param_cb._entry, !674, !"_entry", i1 false, i1 false}
!677 = !{ptr @unknown_module_param_cb._entry_ptr, !674, !"_entry_ptr", i1 false, i1 false}
!678 = !{ptr @.str.274, !679, !"<string literal>", i1 false, i1 false}
!679 = !{!"../kernel/module.c", i32 1855, i32 44}
!680 = !{ptr @.str.275, !681, !"<string literal>", i1 false, i1 false}
!681 = !{!"../kernel/module.c", i32 1818, i32 3}
!682 = !{ptr @.str.276, !681, !"<string literal>", i1 false, i1 false}
!683 = !{ptr @mod_sysfs_init._entry, !681, !"_entry", i1 false, i1 false}
!684 = !{ptr @mod_sysfs_init._entry_ptr, !681, !"_entry_ptr", i1 false, i1 false}
!685 = !{ptr @.str.278, !686, !"<string literal>", i1 false, i1 false}
!686 = !{!"../kernel/module.c", i32 1825, i32 3}
!687 = !{ptr @mod_sysfs_init._entry.277, !686, !"_entry", i1 false, i1 false}
!688 = !{ptr @mod_sysfs_init._entry_ptr.279, !686, !"_entry_ptr", i1 false, i1 false}
!689 = !{ptr @.str.280, !690, !"<string literal>", i1 false, i1 false}
!690 = !{!"../kernel/module.c", i32 1836, i32 8}
!691 = !{ptr @module_add_modinfo_attrs.__key, !692, !"__key", i1 false, i1 false}
!692 = !{!"../kernel/module.c", i32 1767, i32 4}
!693 = !{ptr @.str.281, !694, !"<string literal>", i1 false, i1 false}
!694 = !{!"../kernel/module.c", i32 1551, i32 25}
!695 = !{ptr @add_sect_attrs.__key, !696, !"__key", i1 false, i1 false}
!696 = !{!"../kernel/module.c", i32 1561, i32 3}
!697 = !{ptr @.str.282, !698, !"<string literal>", i1 false, i1 false}
!698 = !{!"../kernel/module.c", i32 1514, i32 44}
!699 = !{ptr @add_notes_attrs.__key, !700, !"__key", i1 false, i1 false}
!700 = !{!"../kernel/module.c", i32 1662, i32 4}
!701 = !{ptr @.str.283, !702, !"<string literal>", i1 false, i1 false}
!702 = !{!"../kernel/module.c", i32 1673, i32 44}
!703 = distinct !{null, !1, !"__already_done", i1 false, i1 false}
!704 = distinct !{null, !1, !"__warned", i1 false, i1 false}
!705 = !{ptr @.str.284, !706, !"<string literal>", i1 false, i1 false}
!706 = !{!"../kernel/module.c", i32 3736, i32 3}
!707 = !{ptr @.str.285, !706, !"<string literal>", i1 false, i1 false}
!708 = !{ptr @do_init_module._entry, !706, !"_entry", i1 false, i1 false}
!709 = !{ptr @do_init_module._entry_ptr, !706, !"_entry_ptr", i1 false, i1 false}
!710 = !{ptr @init_free_list, !711, !"init_free_list", i1 false, i1 false}
!711 = !{!"../kernel/module.c", i32 97, i32 8}
!712 = !{ptr @.str.286, !713, !"<string literal>", i1 false, i1 false}
!713 = !{!"../kernel/module.c", i32 96, i32 8}
!714 = !{ptr @init_free_wq, !713, !"init_free_wq", i1 false, i1 false}
!715 = !{ptr @types__finit_module, !110, !"types__finit_module", i1 false, i1 false}
!716 = !{ptr @.str.287, !110, !"<string literal>", i1 false, i1 false}
!717 = !{ptr @args__finit_module, !110, !"args__finit_module", i1 false, i1 false}
!718 = !{ptr @.str.288, !719, !"<string literal>", i1 false, i1 false}
!719 = !{!"../kernel/module.c", i32 4200, i32 2}
!720 = !{ptr @.str.289, !719, !"<string literal>", i1 false, i1 false}
!721 = !{ptr @__do_sys_finit_module.__UNIQUE_ID_ddebug310, !719, !"__UNIQUE_ID_ddebug310", i1 false, i1 false}
!722 = distinct !{null, !723, !"__warned", i1 false, i1 false}
!723 = !{!"../kernel/module.c", i32 4259, i32 34}
!724 = !{ptr @.str.290, !725, !"<string literal>", i1 false, i1 false}
!725 = !{!"../kernel/module.c", i32 4239, i32 33}
!726 = distinct !{null, !727, !"__warned", i1 false, i1 false}
!727 = !{!"../kernel/module.c", i32 4438, i32 34}
!728 = !{ptr @.str.291, !729, !"<string literal>", i1 false, i1 false}
!729 = !{!"../kernel/module.c", i32 4663, i32 14}
!730 = !{ptr @modules_proc_ops, !731, !"modules_proc_ops", i1 false, i1 false}
!731 = !{!"../kernel/module.c", i32 4653, i32 30}
!732 = !{ptr @modules_op, !733, !"modules_op", i1 false, i1 false}
!733 = !{!"../kernel/module.c", i32 4627, i32 36}
!734 = !{ptr @.str.292, !735, !"<string literal>", i1 false, i1 false}
!735 = !{!"../kernel/module.c", i32 4600, i32 16}
!736 = !{ptr @.str.293, !737, !"<string literal>", i1 false, i1 false}
!737 = !{!"../kernel/module.c", i32 4605, i32 16}
!738 = !{ptr @.str.294, !739, !"<string literal>", i1 false, i1 false}
!739 = !{!"../kernel/module.c", i32 4606, i32 41}
!740 = !{ptr @.str.295, !741, !"<string literal>", i1 false, i1 false}
!741 = !{!"../kernel/module.c", i32 4607, i32 42}
!742 = !{ptr @.str.296, !743, !"<string literal>", i1 false, i1 false}
!743 = !{!"../kernel/module.c", i32 4608, i32 6}
!744 = !{ptr @.str.297, !745, !"<string literal>", i1 false, i1 false}
!745 = !{!"../kernel/module.c", i32 4611, i32 16}
!746 = !{ptr @.str.298, !747, !"<string literal>", i1 false, i1 false}
!747 = !{!"../kernel/module.c", i32 4617, i32 14}
!748 = !{ptr @.str.299, !749, !"<string literal>", i1 false, i1 false}
!749 = !{!"../kernel/module.c", i32 993, i32 16}
!750 = !{ptr @.str.300, !751, !"<string literal>", i1 false, i1 false}
!751 = !{!"../kernel/module.c", i32 1001, i32 17}
!752 = !{ptr @.str.301, !753, !"<string literal>", i1 false, i1 false}
!753 = !{!"../kernel/module.c", i32 1006, i32 15}
!754 = !{ptr @.str.302, !755, !"<string literal>", i1 false, i1 false}
!755 = !{!"../kernel/module.c", i32 1010, i32 15}
!756 = !{ptr @mod_tree, !757, !"mod_tree", i1 false, i1 false}
!757 = !{!"../kernel/module.c", i32 156, i32 3}
!758 = distinct !{null, !759, !"__already_done", i1 false, i1 false}
!759 = !{!"../kernel/module.c", i32 265, i32 2}
!760 = !{!"sp"}
!761 = !{i32 1, !"wchar_size", i32 2}
!762 = !{i32 1, !"min_enum_size", i32 4}
!763 = !{i32 8, !"branch-target-enforcement", i32 0}
!764 = !{i32 8, !"sign-return-address", i32 0}
!765 = !{i32 8, !"sign-return-address-all", i32 0}
!766 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!767 = !{i32 7, !"uwtable", i32 1}
!768 = !{i32 7, !"frame-pointer", i32 2}
!769 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!770 = !{!"branch_weights", i32 2000, i32 1}
!771 = !{!"branch_weights", i32 1, i32 2000}
!772 = !{!"auto-init"}
!773 = !{i8 0, i8 2}
!774 = !{i64 2156003215}
!775 = !{i64 2148573742}
!776 = !{i64 956428, i64 956452, i64 956473, i64 956490, i64 956507}
!777 = !{i64 2148573968}
!778 = !{i64 2156003842}
!779 = !{i64 2155897480}
!780 = !{i64 2155934581}
!781 = !{i64 2155934726}
!782 = !{i64 2149079902, i64 2149079907, i64 2149079920, i64 2149079964, i64 2149079998, i64 2149080019}
!783 = !{i64 2155991969}
!784 = !{i64 2155992265, i64 2155992746, i64 2155992302, i64 2155992358, i64 2155992392, i64 2155992416, i64 2155992457, i64 2155992478, i64 2155992506, i64 2155992540}
!785 = !{i64 2155993649}
!786 = !{i64 2155995203}
!787 = !{i64 2155995479, i64 2155995960, i64 2155995516, i64 2155995572, i64 2155995606, i64 2155995630, i64 2155995671, i64 2155995692, i64 2155995720, i64 2155995754}
!788 = !{i64 2155996863}
!789 = !{i64 2155999714}
!790 = !{i64 2148471895, i64 2148471921, i64 2148471950, i64 2148471984, i64 2148472015, i64 2148472038}
!791 = !{i64 2155999854}
!792 = !{i64 2155269702}
!793 = !{i64 2155269899}
!794 = !{i64 2149491243}
!795 = !{i64 2149492279}
!796 = !{i64 2156001389}
!797 = !{i64 2148471314}
!798 = !{i64 956934, i64 956959, i64 956981, i64 956997, i64 957009, i64 957029, i64 957053, i64 957069, i64 957081}
!799 = !{i64 2148471502}
!800 = !{i64 2156001630}
!801 = !{i64 2155285570}
!802 = !{i64 2155285767}
!803 = !{i64 2156079233}
!804 = !{!"branch_weights", i32 2000, i32 2, i32 2000}
!805 = !{i64 2155815271, i64 2155815751, i64 2155815308, i64 2155815364, i64 2155815398, i64 2155815422, i64 2155815463, i64 2155815484, i64 2155815512, i64 2155815546}
!806 = !{i64 2156079330}
!807 = !{i64 2156079487}
!808 = !{i64 2153128451, i64 2153128476}
!809 = !{i64 5624006}
!810 = !{i64 5624203}
!811 = !{i64 2153109436}
!812 = !{i64 2156229016}
!813 = !{i64 2156229657}
!814 = !{i64 2150098351}
!815 = !{!"branch_weights", i32 1073205, i32 2146410443}
!816 = !{i64 2156391374, i64 2156391855, i64 2156391411, i64 2156391467, i64 2156391501, i64 2156391525, i64 2156391566, i64 2156391587, i64 2156391615, i64 2156391649}
!817 = !{i64 2156229850}
!818 = !{i64 2156265241}
!819 = !{i64 2156265386}
!820 = !{i64 2156265582}
!821 = !{i64 2156300999}
!822 = !{i64 2156301144}
!823 = !{i64 2156301340}
!824 = !{i64 2156340905}
!825 = !{i64 2156341050}
!826 = !{i64 2156345396}
!827 = !{i64 2156380833}
!828 = !{i64 2156390569}
!829 = !{i64 2156390666}
!830 = !{i64 2156390859}
!831 = !{i64 2156390968}
!832 = !{i64 2156392818}
!833 = !{i64 2156392927}
!834 = !{i64 2156394459}
!835 = !{i64 2156431256}
!836 = !{i64 2148560371}
!837 = !{i64 2148475080, i64 2148475112, i64 2148475141, i64 2148475175, i64 2148475206, i64 2148475229}
!838 = !{i64 2148560600}
!839 = !{i64 2155967120, i64 2155967600, i64 2155967157, i64 2155967213, i64 2155967247, i64 2155967271, i64 2155967312, i64 2155967333, i64 2155967361, i64 2155967395}
!840 = !{i64 2155253849}
!841 = !{i64 2155254040}
!842 = !{i64 2150109551}
!843 = !{i64 2150109707}
!844 = !{i64 2156022365}
!845 = !{i64 2156022692, i64 2156023173, i64 2156022729, i64 2156022785, i64 2156022819, i64 2156022843, i64 2156022884, i64 2156022905, i64 2156022933, i64 2156022967}
!846 = !{i64 2151870439}
!847 = !{i64 2156056620, i64 2156057101, i64 2156056657, i64 2156056713, i64 2156056747, i64 2156056771, i64 2156056812, i64 2156056833, i64 2156056861, i64 2156056895}
!848 = !{i64 2156062404, i64 2156062885, i64 2156062441, i64 2156062497, i64 2156062531, i64 2156062555, i64 2156062596, i64 2156062617, i64 2156062645, i64 2156062679}
!849 = !{i64 2156064123, i64 2156064604, i64 2156064160, i64 2156064216, i64 2156064250, i64 2156064274, i64 2156064315, i64 2156064336, i64 2156064364, i64 2156064398}
!850 = !{ptr @set_memory_nx, ptr @set_memory_ro}
!851 = !{i64 2156065839, i64 2156066320, i64 2156065876, i64 2156065932, i64 2156065966, i64 2156065990, i64 2156066031, i64 2156066052, i64 2156066080, i64 2156066114}
!852 = !{i64 2156067558, i64 2156068039, i64 2156067595, i64 2156067651, i64 2156067685, i64 2156067709, i64 2156067750, i64 2156067771, i64 2156067799, i64 2156067833}
!853 = !{i64 2156069299, i64 2156069780, i64 2156069336, i64 2156069392, i64 2156069426, i64 2156069450, i64 2156069491, i64 2156069512, i64 2156069540, i64 2156069574}
!854 = !{i64 2156071015, i64 2156071496, i64 2156071052, i64 2156071108, i64 2156071142, i64 2156071166, i64 2156071207, i64 2156071228, i64 2156071256, i64 2156071290}
!855 = !{i64 2156072756, i64 2156073237, i64 2156072793, i64 2156072849, i64 2156072883, i64 2156072907, i64 2156072948, i64 2156072969, i64 2156072997, i64 2156073031}
!856 = !{i64 2156074469, i64 2156074950, i64 2156074506, i64 2156074562, i64 2156074596, i64 2156074620, i64 2156074661, i64 2156074682, i64 2156074710, i64 2156074744}
!857 = !{i64 2156053181, i64 2156053662, i64 2156053218, i64 2156053274, i64 2156053308, i64 2156053332, i64 2156053373, i64 2156053394, i64 2156053422, i64 2156053456}
!858 = !{i64 2156054904, i64 2156055385, i64 2156054941, i64 2156054997, i64 2156055031, i64 2156055055, i64 2156055096, i64 2156055117, i64 2156055145, i64 2156055179}
!859 = !{ptr @set_memory_ro, ptr @set_memory_x}
!860 = !{i64 2155238246}
!861 = !{i64 2155238437}
!862 = !{i64 2156179365}
!863 = distinct !{!863, !864}
!864 = !{!"llvm.loop.peeled.count", i32 1}
!865 = !{i64 2149501595}
!866 = !{i64 2156005381, i64 2156005862, i64 2156005418, i64 2156005474, i64 2156005508, i64 2156005532, i64 2156005573, i64 2156005594, i64 2156005622, i64 2156005656}
!867 = !{i64 2149325925}
!868 = !{i64 978663, i64 978680, i64 978704, i64 978730, i64 978748}
!869 = !{i64 2149326278}
!870 = !{i64 2156381211, i64 2156381692, i64 2156381248, i64 2156381304, i64 2156381338, i64 2156381362, i64 2156381403, i64 2156381424, i64 2156381452, i64 2156381486}
