; ModuleID = '/llk/IR_all_yes/kernel/rcu/tree.c_pt.bc'
source_filename = "../kernel/rcu/tree.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+rcu_scheduler_active\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_scheduler_active\09\09\09\09"
module asm "\09.long\09__crc_rcu_scheduler_active\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_scheduler_active:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_scheduler_active\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_scheduler_active:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_get_gp_kthreads_prio\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_get_gp_kthreads_prio\09\09\09\09"
module asm "\09.long\09__crc_rcu_get_gp_kthreads_prio\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_get_gp_kthreads_prio:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_get_gp_kthreads_prio\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_get_gp_kthreads_prio:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_momentary_dyntick_idle\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_momentary_dyntick_idle\09\09\09\09"
module asm "\09.long\09__crc_rcu_momentary_dyntick_idle\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_momentary_dyntick_idle:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_momentary_dyntick_idle\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_momentary_dyntick_idle:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_get_gp_seq\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_get_gp_seq\09\09\09\09"
module asm "\09.long\09__crc_rcu_get_gp_seq\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_get_gp_seq:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_get_gp_seq\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_get_gp_seq:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_exp_batches_completed\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_exp_batches_completed\09\09\09\09"
module asm "\09.long\09__crc_rcu_exp_batches_completed\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_exp_batches_completed:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_exp_batches_completed\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_exp_batches_completed:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcutorture_get_gp_data\22, \22a\22\09"
module asm "\09.weak\09__crc_rcutorture_get_gp_data\09\09\09\09"
module asm "\09.long\09__crc_rcutorture_get_gp_data\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcutorture_get_gp_data:\09\09\09\09\09"
module asm "\09.asciz \09\22rcutorture_get_gp_data\22\09\09\09\09\09"
module asm "__kstrtabns_rcutorture_get_gp_data:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_idle_enter\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_idle_enter\09\09\09\09"
module asm "\09.long\09__crc_rcu_idle_enter\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_idle_enter:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_idle_enter\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_idle_enter:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_idle_exit\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_idle_exit\09\09\09\09"
module asm "\09.long\09__crc_rcu_idle_exit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_idle_exit:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_idle_exit\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_idle_exit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_is_watching\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_is_watching\09\09\09\09"
module asm "\09.long\09__crc_rcu_is_watching\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_is_watching:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_is_watching\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_is_watching:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_lockdep_current_cpu_online\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_lockdep_current_cpu_online\09\09\09\09"
module asm "\09.long\09__crc_rcu_lockdep_current_cpu_online\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_lockdep_current_cpu_online:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_lockdep_current_cpu_online\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_lockdep_current_cpu_online:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_gp_set_torture_wait\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_gp_set_torture_wait\09\09\09\09"
module asm "\09.long\09__crc_rcu_gp_set_torture_wait\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_gp_set_torture_wait:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_gp_set_torture_wait\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_gp_set_torture_wait:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_force_quiescent_state\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_force_quiescent_state\09\09\09\09"
module asm "\09.long\09__crc_rcu_force_quiescent_state\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_force_quiescent_state:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_force_quiescent_state\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_force_quiescent_state:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+call_rcu\22, \22a\22\09"
module asm "\09.weak\09__crc_call_rcu\09\09\09\09"
module asm "\09.long\09__crc_call_rcu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_call_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22call_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_call_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+kvfree_call_rcu\22, \22a\22\09"
module asm "\09.weak\09__crc_kvfree_call_rcu\09\09\09\09"
module asm "\09.long\09__crc_kvfree_call_rcu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_kvfree_call_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22kvfree_call_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_kvfree_call_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+synchronize_rcu\22, \22a\22\09"
module asm "\09.weak\09__crc_synchronize_rcu\09\09\09\09"
module asm "\09.long\09__crc_synchronize_rcu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_synchronize_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22synchronize_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_synchronize_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+get_state_synchronize_rcu\22, \22a\22\09"
module asm "\09.weak\09__crc_get_state_synchronize_rcu\09\09\09\09"
module asm "\09.long\09__crc_get_state_synchronize_rcu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_get_state_synchronize_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22get_state_synchronize_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_get_state_synchronize_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+start_poll_synchronize_rcu\22, \22a\22\09"
module asm "\09.weak\09__crc_start_poll_synchronize_rcu\09\09\09\09"
module asm "\09.long\09__crc_start_poll_synchronize_rcu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_start_poll_synchronize_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22start_poll_synchronize_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_start_poll_synchronize_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+poll_state_synchronize_rcu\22, \22a\22\09"
module asm "\09.weak\09__crc_poll_state_synchronize_rcu\09\09\09\09"
module asm "\09.long\09__crc_poll_state_synchronize_rcu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_poll_state_synchronize_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22poll_state_synchronize_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_poll_state_synchronize_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cond_synchronize_rcu\22, \22a\22\09"
module asm "\09.weak\09__crc_cond_synchronize_rcu\09\09\09\09"
module asm "\09.long\09__crc_cond_synchronize_rcu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cond_synchronize_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22cond_synchronize_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_cond_synchronize_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_barrier\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_barrier\09\09\09\09"
module asm "\09.long\09__crc_rcu_barrier\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_barrier:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_barrier\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_barrier:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_jiffies_till_stall_check\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_jiffies_till_stall_check\09\09\09\09"
module asm "\09.long\09__crc_rcu_jiffies_till_stall_check\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_jiffies_till_stall_check:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_jiffies_till_stall_check\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_jiffies_till_stall_check:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_check_boost_fail\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_check_boost_fail\09\09\09\09"
module asm "\09.long\09__crc_rcu_check_boost_fail\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_check_boost_fail:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_check_boost_fail\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_check_boost_fail:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+show_rcu_gp_kthreads\22, \22a\22\09"
module asm "\09.weak\09__crc_show_rcu_gp_kthreads\09\09\09\09"
module asm "\09.long\09__crc_show_rcu_gp_kthreads\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_show_rcu_gp_kthreads:\09\09\09\09\09"
module asm "\09.asciz \09\22show_rcu_gp_kthreads\22\09\09\09\09\09"
module asm "__kstrtabns_show_rcu_gp_kthreads:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_fwd_progress_check\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_fwd_progress_check\09\09\09\09"
module asm "\09.long\09__crc_rcu_fwd_progress_check\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_fwd_progress_check:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_fwd_progress_check\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_fwd_progress_check:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+synchronize_rcu_expedited\22, \22a\22\09"
module asm "\09.weak\09__crc_synchronize_rcu_expedited\09\09\09\09"
module asm "\09.long\09__crc_synchronize_rcu_expedited\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_synchronize_rcu_expedited:\09\09\09\09\09"
module asm "\09.asciz \09\22synchronize_rcu_expedited\22\09\09\09\09\09"
module asm "__kstrtabns_synchronize_rcu_expedited:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_nocb_flush_deferred_wakeup\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_nocb_flush_deferred_wakeup\09\09\09\09"
module asm "\09.long\09__crc_rcu_nocb_flush_deferred_wakeup\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_nocb_flush_deferred_wakeup:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_nocb_flush_deferred_wakeup\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_nocb_flush_deferred_wakeup:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_nocb_cpu_deoffload\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_nocb_cpu_deoffload\09\09\09\09"
module asm "\09.long\09__crc_rcu_nocb_cpu_deoffload\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_nocb_cpu_deoffload:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_nocb_cpu_deoffload\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_nocb_cpu_deoffload:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_nocb_cpu_offload\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_nocb_cpu_offload\09\09\09\09"
module asm "\09.long\09__crc_rcu_nocb_cpu_offload\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_nocb_cpu_offload:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_nocb_cpu_offload\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_nocb_cpu_offload:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_bind_current_to_nocb\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_bind_current_to_nocb\09\09\09\09"
module asm "\09.long\09__crc_rcu_bind_current_to_nocb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_bind_current_to_nocb:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_bind_current_to_nocb\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_bind_current_to_nocb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_read_unlock_strict\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_read_unlock_strict\09\09\09\09"
module asm "\09.long\09__crc_rcu_read_unlock_strict\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_read_unlock_strict:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_read_unlock_strict\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_read_unlock_strict:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_all_qs\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_all_qs\09\09\09\09"
module asm "\09.long\09__crc_rcu_all_qs\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_all_qs:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_all_qs\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_all_qs:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_note_context_switch\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_note_context_switch\09\09\09\09"
module asm "\09.long\09__crc_rcu_note_context_switch\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_note_context_switch:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_note_context_switch\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_note_context_switch:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.rcu_data = type { i32, i32, %union.rcu_noqs, i8, i8, i8, i8, ptr, i32, i32, %struct.irq_work, i8, %struct.work_struct, %struct.rcu_segcblist, i32, i32, i32, i32, i32, i32, i32, %struct.atomic_t, i8, i8, i8, i8, %struct.callback_head, i32, %struct.swait_queue_head, %struct.swait_queue_head, ptr, %struct.raw_spinlock, %struct.atomic_t, i32, %struct.timer_list, i32, [100 x i8], %struct.raw_spinlock, %struct.rcu_cblist, i32, i32, i32, [60 x i8], %struct.raw_spinlock, i8, i8, i8, i32, i32, %struct.swait_queue_head, i8, ptr, %struct.list_head, %struct.list_head, [124 x i8], ptr, ptr, i32, i8, i32, %struct.irq_work, i8, i32, i32, i16, i32, i16, i32, i32, [60 x i8] }
%union.rcu_noqs = type { i16 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.rcu_segcblist = type { ptr, [4 x ptr], [4 x i32], %struct.atomic_t, [4 x i32], i8 }
%struct.callback_head = type { ptr, ptr }
%struct.atomic_t = type { i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.hlist_node = type { ptr, ptr }
%struct.rcu_cblist = type { ptr, ptr, i32 }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon }
%union.anon = type { i32 }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.list_head = type { ptr, ptr }
%struct.irq_work = type { %struct.__call_single_node, ptr, %struct.rcuwait }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.1 }
%struct.llist_node = type { ptr }
%union.anon.1 = type { i32 }
%struct.rcuwait = type { ptr }
%struct.kernel_param_ops = type { i32, ptr, ptr, ptr }
%struct.kernel_param = type { ptr, ptr, ptr, i16, i8, i8, %union.anon.18 }
%union.anon.18 = type { ptr }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.rcu_state = type { [3 x %struct.rcu_node], [3 x ptr], i32, i32, [108 x i8], i8, i32, i32, ptr, %struct.swait_queue_head, i16, i16, i32, i32, %struct.mutex, %struct.atomic_t, %struct.completion, i32, %struct.mutex, %struct.mutex, i32, %struct.atomic_t, %struct.swait_queue_head, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, i8, [107 x i8], %struct.raw_spinlock, [84 x i8] }
%struct.rcu_node = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, ptr, %struct.list_head, ptr, ptr, ptr, %struct.rt_mutex, i32, ptr, i32, i32, [2 x %struct.swait_queue_head], [44 x i8], %struct.raw_spinlock, [84 x i8], %struct.spinlock, i32, [4 x %struct.wait_queue_head], %struct.rcu_exp_work, i8, [79 x i8] }
%struct.rt_mutex = type { %struct.rt_mutex_base, %struct.lockdep_map }
%struct.rt_mutex_base = type { %struct.raw_spinlock, %struct.rb_root_cached, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.spinlock = type { %union.anon.10 }
%union.anon.10 = type { %struct.raw_spinlock }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.rcu_exp_work = type { i32, %struct.work_struct }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.kfree_rcu_cpu = type { ptr, [2 x ptr], [2 x %struct.kfree_rcu_cpu_work], %struct.raw_spinlock, %struct.delayed_work, i8, i8, i32, %struct.delayed_work, %struct.atomic_t, %struct.atomic_t, %struct.hrtimer, %struct.llist_head, i32 }
%struct.kfree_rcu_cpu_work = type { %struct.rcu_work, ptr, [2 x ptr], ptr }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, ptr }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.llist_head = type { ptr }
%struct.cpumask = type { [1 x i32] }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.notifier_block = type { ptr, ptr, i32 }
%struct.lock_class_key = type { %union.anon.0 }
%union.anon.0 = type { %struct.hlist_node }
%struct.obs_kernel_param = type { ptr, ptr, i32 }
%struct.arm_delay_ops = type { ptr, ptr, ptr, i32 }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t, %union.anon.19 }
%union.anon.19 = type { i32 }
%struct.kernel_stat = type { i32, [10 x i32] }
%struct.debug_obj_descr = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.smp_hotplug_thread = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, ptr }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, i32, ptr }
%struct.atomic_notifier_head = type { %struct.spinlock, ptr }
%struct.sysrq_key_op = type { ptr, ptr, ptr, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.anon = type { i8, i8 }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.97, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.75 }
%union.anon.75 = type { %struct.anon.76 }
%struct.anon.76 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.kuid_t = type { i32 }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.tlbflush_unmap_batch = type {}
%union.anon.97 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.anon.2 = type { i8, i8, i8, i8 }
%struct.kvfree_rcu_bulk_data = type { i32, ptr, [0 x ptr] }
%struct.rcu_synchronize = type { %struct.callback_head, %struct.completion }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.sched_param = type { i32 }
%struct.swait_queue = type { ptr, %struct.list_head }
%struct.shrink_control = type { i32, i32, i32, i32, ptr }

@rcu_name = internal global { [10 x i8], [22 x i8] } { [10 x i8] c"rcu_sched\00", [22 x i8] zeroinitializer }, align 32
@tp_rcu_varname = internal global ptr @rcu_name, section "__tracepoint_str", align 4
@rcu_data = weak dso_local global %struct.rcu_data { i32 0, i32 0, %union.rcu_noqs zeroinitializer, i8 0, i8 0, i8 0, i8 0, ptr null, i32 0, i32 0, %struct.irq_work zeroinitializer, i8 0, %struct.work_struct zeroinitializer, %struct.rcu_segcblist { ptr null, [4 x ptr] zeroinitializer, [4 x i32] zeroinitializer, %struct.atomic_t zeroinitializer, [4 x i32] zeroinitializer, i8 2 }, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1073741824, %struct.atomic_t { i32 1 }, i8 0, i8 0, i8 0, i8 0, %struct.callback_head zeroinitializer, i32 0, %struct.swait_queue_head zeroinitializer, %struct.swait_queue_head zeroinitializer, ptr null, %struct.raw_spinlock zeroinitializer, %struct.atomic_t zeroinitializer, i32 0, %struct.timer_list zeroinitializer, i32 0, [100 x i8] undef, %struct.raw_spinlock zeroinitializer, %struct.rcu_cblist zeroinitializer, i32 0, i32 0, i32 0, [60 x i8] undef, %struct.raw_spinlock zeroinitializer, i8 0, i8 0, i8 0, i32 0, i32 0, %struct.swait_queue_head zeroinitializer, i8 0, ptr null, %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, [124 x i8] undef, ptr null, ptr null, i32 0, i8 0, i32 0, %struct.irq_work zeroinitializer, i8 0, i32 0, i32 0, i16 0, i32 0, i16 0, i32 0, i32 0, [60 x i8] undef }, section ".data..percpu..shared_aligned", align 128
@__param_str_dump_tree = internal constant [18 x i8] c"rcutree.dump_tree\00", align 1
@param_ops_bool = external dso_local constant %struct.kernel_param_ops, align 4
@dump_tree = internal global { i8, [31 x i8] } zeroinitializer, align 32
@__param_dump_tree = internal constant %struct.kernel_param { ptr @__param_str_dump_tree, ptr null, ptr @param_ops_bool, i16 292, i8 -1, i8 0, %union.anon.18 { ptr @dump_tree } }, section "__param", align 4
@__UNIQUE_ID_dump_treetype365 = internal constant [29 x i8] c"tree.parmtype=dump_tree:bool\00", section ".modinfo", align 1
@__param_str_use_softirq = internal constant [20 x i8] c"rcutree.use_softirq\00", align 1
@use_softirq = internal global { i8, [31 x i8] } { i8 1, [31 x i8] zeroinitializer }, align 32
@__param_use_softirq = internal constant %struct.kernel_param { ptr @__param_str_use_softirq, ptr null, ptr @param_ops_bool, i16 292, i8 -1, i8 0, %union.anon.18 { ptr @use_softirq } }, section "__param", align 4
@__UNIQUE_ID_use_softirqtype366 = internal constant [31 x i8] c"tree.parmtype=use_softirq:bool\00", section ".modinfo", align 1
@__param_str_rcu_fanout_exact = internal constant [25 x i8] c"rcutree.rcu_fanout_exact\00", align 1
@rcu_fanout_exact = internal global { i8, [31 x i8] } zeroinitializer, align 32
@__param_rcu_fanout_exact = internal constant %struct.kernel_param { ptr @__param_str_rcu_fanout_exact, ptr null, ptr @param_ops_bool, i16 292, i8 -1, i8 0, %union.anon.18 { ptr @rcu_fanout_exact } }, section "__param", align 4
@__UNIQUE_ID_rcu_fanout_exacttype367 = internal constant [36 x i8] c"tree.parmtype=rcu_fanout_exact:bool\00", section ".modinfo", align 1
@__param_str_rcu_fanout_leaf = internal constant [24 x i8] c"rcutree.rcu_fanout_leaf\00", align 1
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 4
@rcu_fanout_leaf = internal global { i32, [28 x i8] } { i32 2, [28 x i8] zeroinitializer }, align 32
@__param_rcu_fanout_leaf = internal constant %struct.kernel_param { ptr @__param_str_rcu_fanout_leaf, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.18 { ptr @rcu_fanout_leaf } }, section "__param", align 4
@__UNIQUE_ID_rcu_fanout_leaftype368 = internal constant [34 x i8] c"tree.parmtype=rcu_fanout_leaf:int\00", section ".modinfo", align 1
@rcu_num_lvls = dso_local local_unnamed_addr global i32 2, section ".data..read_mostly", align 4
@num_rcu_lvl = dso_local global { [2 x i32], [24 x i8] } { [2 x i32] [i32 1, i32 2], [24 x i8] zeroinitializer }, align 32
@rcu_num_nodes = dso_local local_unnamed_addr global i32 3, section ".data..read_mostly", align 4
@rcu_scheduler_active = dso_local global i32 0, section ".data..read_mostly", align 4
@__kstrtab_rcu_scheduler_active = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_scheduler_active = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_scheduler_active = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_scheduler_active to i32), ptr @__kstrtab_rcu_scheduler_active, ptr @__kstrtabns_rcu_scheduler_active }, section "___ksymtab_gpl+rcu_scheduler_active", align 4
@__param_str_kthread_prio = internal constant [21 x i8] c"rcutree.kthread_prio\00", align 1
@kthread_prio = internal global { i32, [28 x i8] } zeroinitializer, align 32
@__param_kthread_prio = internal constant %struct.kernel_param { ptr @__param_str_kthread_prio, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.18 { ptr @kthread_prio } }, section "__param", align 4
@__UNIQUE_ID_kthread_priotype369 = internal constant [31 x i8] c"tree.parmtype=kthread_prio:int\00", section ".modinfo", align 1
@__param_str_gp_preinit_delay = internal constant [25 x i8] c"rcutree.gp_preinit_delay\00", align 1
@gp_preinit_delay = internal global { i32, [28 x i8] } zeroinitializer, align 32
@__param_gp_preinit_delay = internal constant %struct.kernel_param { ptr @__param_str_gp_preinit_delay, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.18 { ptr @gp_preinit_delay } }, section "__param", align 4
@__UNIQUE_ID_gp_preinit_delaytype370 = internal constant [35 x i8] c"tree.parmtype=gp_preinit_delay:int\00", section ".modinfo", align 1
@__param_str_gp_init_delay = internal constant [22 x i8] c"rcutree.gp_init_delay\00", align 1
@gp_init_delay = internal global { i32, [28 x i8] } zeroinitializer, align 32
@__param_gp_init_delay = internal constant %struct.kernel_param { ptr @__param_str_gp_init_delay, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.18 { ptr @gp_init_delay } }, section "__param", align 4
@__UNIQUE_ID_gp_init_delaytype371 = internal constant [32 x i8] c"tree.parmtype=gp_init_delay:int\00", section ".modinfo", align 1
@__param_str_gp_cleanup_delay = internal constant [25 x i8] c"rcutree.gp_cleanup_delay\00", align 1
@gp_cleanup_delay = internal global { i32, [28 x i8] } zeroinitializer, align 32
@__param_gp_cleanup_delay = internal constant %struct.kernel_param { ptr @__param_str_gp_cleanup_delay, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.18 { ptr @gp_cleanup_delay } }, section "__param", align 4
@__UNIQUE_ID_gp_cleanup_delaytype372 = internal constant [35 x i8] c"tree.parmtype=gp_cleanup_delay:int\00", section ".modinfo", align 1
@__param_str_rcu_unlock_delay = internal constant [25 x i8] c"rcutree.rcu_unlock_delay\00", align 1
@rcu_unlock_delay = internal global { i32, [28 x i8] } zeroinitializer, align 32
@__param_rcu_unlock_delay = internal constant %struct.kernel_param { ptr @__param_str_rcu_unlock_delay, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.18 { ptr @rcu_unlock_delay } }, section "__param", align 4
@__UNIQUE_ID_rcu_unlock_delaytype373 = internal constant [35 x i8] c"tree.parmtype=rcu_unlock_delay:int\00", section ".modinfo", align 1
@__param_str_rcu_min_cached_objs = internal constant [28 x i8] c"rcutree.rcu_min_cached_objs\00", align 1
@rcu_min_cached_objs = internal global { i32, [28 x i8] } { i32 5, [28 x i8] zeroinitializer }, align 32
@__param_rcu_min_cached_objs = internal constant %struct.kernel_param { ptr @__param_str_rcu_min_cached_objs, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.18 { ptr @rcu_min_cached_objs } }, section "__param", align 4
@__UNIQUE_ID_rcu_min_cached_objstype374 = internal constant [38 x i8] c"tree.parmtype=rcu_min_cached_objs:int\00", section ".modinfo", align 1
@__param_str_rcu_delay_page_cache_fill_msec = internal constant [39 x i8] c"rcutree.rcu_delay_page_cache_fill_msec\00", align 1
@rcu_delay_page_cache_fill_msec = internal global { i32, [28 x i8] } { i32 5000, [28 x i8] zeroinitializer }, align 32
@__param_rcu_delay_page_cache_fill_msec = internal constant %struct.kernel_param { ptr @__param_str_rcu_delay_page_cache_fill_msec, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.18 { ptr @rcu_delay_page_cache_fill_msec } }, section "__param", align 4
@__UNIQUE_ID_rcu_delay_page_cache_fill_msectype375 = internal constant [49 x i8] c"tree.parmtype=rcu_delay_page_cache_fill_msec:int\00", section ".modinfo", align 1
@__kstrtab_rcu_get_gp_kthreads_prio = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_get_gp_kthreads_prio = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_get_gp_kthreads_prio = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_get_gp_kthreads_prio to i32), ptr @__kstrtab_rcu_get_gp_kthreads_prio, ptr @__kstrtabns_rcu_get_gp_kthreads_prio }, section "___ksymtab_gpl+rcu_get_gp_kthreads_prio", align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@rcu_momentary_dyntick_idle.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"kernel/rcu/tree.c\00", [46 x i8] zeroinitializer }, align 32
@__kstrtab_rcu_momentary_dyntick_idle = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_momentary_dyntick_idle = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_momentary_dyntick_idle = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_momentary_dyntick_idle to i32), ptr @__kstrtab_rcu_momentary_dyntick_idle, ptr @__kstrtabns_rcu_momentary_dyntick_idle }, section "___ksymtab_gpl+rcu_momentary_dyntick_idle", align 4
@__param_str_blimit = internal constant [15 x i8] c"rcutree.blimit\00", align 1
@param_ops_long = external dso_local constant %struct.kernel_param_ops, align 4
@blimit = internal global { i32, [28 x i8] } { i32 1000, [28 x i8] zeroinitializer }, align 32
@__param_blimit = internal constant %struct.kernel_param { ptr @__param_str_blimit, ptr null, ptr @param_ops_long, i16 292, i8 -1, i8 0, %union.anon.18 { ptr @blimit } }, section "__param", align 4
@__UNIQUE_ID_blimittype393 = internal constant [26 x i8] c"tree.parmtype=blimit:long\00", section ".modinfo", align 1
@__param_str_qhimark = internal constant [16 x i8] c"rcutree.qhimark\00", align 1
@qhimark = internal global { i32, [28 x i8] } { i32 10000, [28 x i8] zeroinitializer }, align 32
@__param_qhimark = internal constant %struct.kernel_param { ptr @__param_str_qhimark, ptr null, ptr @param_ops_long, i16 292, i8 -1, i8 0, %union.anon.18 { ptr @qhimark } }, section "__param", align 4
@__UNIQUE_ID_qhimarktype394 = internal constant [27 x i8] c"tree.parmtype=qhimark:long\00", section ".modinfo", align 1
@__param_str_qlowmark = internal constant [17 x i8] c"rcutree.qlowmark\00", align 1
@qlowmark = internal global { i32, [28 x i8] } { i32 100, [28 x i8] zeroinitializer }, align 32
@__param_qlowmark = internal constant %struct.kernel_param { ptr @__param_str_qlowmark, ptr null, ptr @param_ops_long, i16 292, i8 -1, i8 0, %union.anon.18 { ptr @qlowmark } }, section "__param", align 4
@__UNIQUE_ID_qlowmarktype395 = internal constant [28 x i8] c"tree.parmtype=qlowmark:long\00", section ".modinfo", align 1
@__param_str_qovld = internal constant [14 x i8] c"rcutree.qovld\00", align 1
@qovld = internal global { i32, [28 x i8] } { i32 20000, [28 x i8] zeroinitializer }, align 32
@__param_qovld = internal constant %struct.kernel_param { ptr @__param_str_qovld, ptr null, ptr @param_ops_long, i16 292, i8 -1, i8 0, %union.anon.18 { ptr @qovld } }, section "__param", align 4
@__UNIQUE_ID_qovldtype396 = internal constant [25 x i8] c"tree.parmtype=qovld:long\00", section ".modinfo", align 1
@__param_str_rcu_divisor = internal constant [20 x i8] c"rcutree.rcu_divisor\00", align 1
@rcu_divisor = internal global { i32, [28 x i8] } { i32 7, [28 x i8] zeroinitializer }, align 32
@__param_rcu_divisor = internal constant %struct.kernel_param { ptr @__param_str_rcu_divisor, ptr null, ptr @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.18 { ptr @rcu_divisor } }, section "__param", align 4
@__UNIQUE_ID_rcu_divisortype397 = internal constant [30 x i8] c"tree.parmtype=rcu_divisor:int\00", section ".modinfo", align 1
@__param_str_rcu_resched_ns = internal constant [23 x i8] c"rcutree.rcu_resched_ns\00", align 1
@rcu_resched_ns = internal global { i32, [28 x i8] } { i32 3000000, [28 x i8] zeroinitializer }, align 32
@__param_rcu_resched_ns = internal constant %struct.kernel_param { ptr @__param_str_rcu_resched_ns, ptr null, ptr @param_ops_long, i16 420, i8 -1, i8 0, %union.anon.18 { ptr @rcu_resched_ns } }, section "__param", align 4
@__UNIQUE_ID_rcu_resched_nstype398 = internal constant [34 x i8] c"tree.parmtype=rcu_resched_ns:long\00", section ".modinfo", align 1
@__param_str_jiffies_till_sched_qs = internal constant [30 x i8] c"rcutree.jiffies_till_sched_qs\00", align 1
@param_ops_ulong = external dso_local constant %struct.kernel_param_ops, align 4
@jiffies_till_sched_qs = internal global { i32, [28 x i8] } { i32 -1, [28 x i8] zeroinitializer }, align 32
@__param_jiffies_till_sched_qs = internal constant %struct.kernel_param { ptr @__param_str_jiffies_till_sched_qs, ptr null, ptr @param_ops_ulong, i16 292, i8 -1, i8 0, %union.anon.18 { ptr @jiffies_till_sched_qs } }, section "__param", align 4
@__UNIQUE_ID_jiffies_till_sched_qstype399 = internal constant [42 x i8] c"tree.parmtype=jiffies_till_sched_qs:ulong\00", section ".modinfo", align 1
@__param_str_jiffies_to_sched_qs = internal constant [28 x i8] c"rcutree.jiffies_to_sched_qs\00", align 1
@jiffies_to_sched_qs = internal global { i32, [28 x i8] } zeroinitializer, align 32
@__param_jiffies_to_sched_qs = internal constant %struct.kernel_param { ptr @__param_str_jiffies_to_sched_qs, ptr null, ptr @param_ops_ulong, i16 292, i8 -1, i8 0, %union.anon.18 { ptr @jiffies_to_sched_qs } }, section "__param", align 4
@__UNIQUE_ID_jiffies_to_sched_qstype400 = internal constant [40 x i8] c"tree.parmtype=jiffies_to_sched_qs:ulong\00", section ".modinfo", align 1
@__param_str_jiffies_till_first_fqs = internal constant [31 x i8] c"rcutree.jiffies_till_first_fqs\00", align 1
@first_fqs_jiffies_ops = internal constant { %struct.kernel_param_ops, [16 x i8] } { %struct.kernel_param_ops { i32 0, ptr @param_set_first_fqs_jiffies, ptr @param_get_ulong, ptr null }, [16 x i8] zeroinitializer }, align 32
@jiffies_till_first_fqs = internal global { i32, [28 x i8] } zeroinitializer, align 32
@__param_jiffies_till_first_fqs = internal constant %struct.kernel_param { ptr @__param_str_jiffies_till_first_fqs, ptr null, ptr @first_fqs_jiffies_ops, i16 420, i8 -1, i8 0, %union.anon.18 { ptr @jiffies_till_first_fqs } }, section "__param", align 4
@__param_str_jiffies_till_next_fqs = internal constant [30 x i8] c"rcutree.jiffies_till_next_fqs\00", align 1
@next_fqs_jiffies_ops = internal constant { %struct.kernel_param_ops, [16 x i8] } { %struct.kernel_param_ops { i32 0, ptr @param_set_next_fqs_jiffies, ptr @param_get_ulong, ptr null }, [16 x i8] zeroinitializer }, align 32
@jiffies_till_next_fqs = internal global { i32, [28 x i8] } { i32 -1, [28 x i8] zeroinitializer }, align 32
@__param_jiffies_till_next_fqs = internal constant %struct.kernel_param { ptr @__param_str_jiffies_till_next_fqs, ptr null, ptr @next_fqs_jiffies_ops, i16 420, i8 -1, i8 0, %union.anon.18 { ptr @jiffies_till_next_fqs } }, section "__param", align 4
@__param_str_rcu_kick_kthreads = internal constant [26 x i8] c"rcutree.rcu_kick_kthreads\00", align 1
@rcu_kick_kthreads = internal global { i8, [31 x i8] } zeroinitializer, align 32
@__param_rcu_kick_kthreads = internal constant %struct.kernel_param { ptr @__param_str_rcu_kick_kthreads, ptr null, ptr @param_ops_bool, i16 420, i8 -1, i8 0, %union.anon.18 { ptr @rcu_kick_kthreads } }, section "__param", align 4
@__UNIQUE_ID_rcu_kick_kthreadstype407 = internal constant [37 x i8] c"tree.parmtype=rcu_kick_kthreads:bool\00", section ".modinfo", align 1
@rcu_state = internal global %struct.rcu_state { [3 x %struct.rcu_node] zeroinitializer, [3 x ptr] [ptr @rcu_state, ptr null, ptr null], i32 0, i32 0, [108 x i8] undef, i8 0, i32 -1200, i32 0, ptr null, %struct.swait_queue_head zeroinitializer, i16 0, i16 0, i32 0, i32 0, %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.117, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @rcu_state, i64 2948), ptr getelementptr (i8, ptr @rcu_state, i64 2948) }, ptr getelementptr (i8, ptr @rcu_state, i64 2896), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.118, i8 0, i8 4, i8 0, i32 0, i32 0 } }, %struct.atomic_t zeroinitializer, %struct.completion zeroinitializer, i32 0, %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.119, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @rcu_state, i64 3104), ptr getelementptr (i8, ptr @rcu_state, i64 3104) }, ptr getelementptr (i8, ptr @rcu_state, i64 3052), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.120, i8 0, i8 4, i8 0, i32 0, i32 0 } }, %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.121, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @rcu_state, i64 3196), ptr getelementptr (i8, ptr @rcu_state, i64 3196) }, ptr getelementptr (i8, ptr @rcu_state, i64 3144), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.122, i8 0, i8 4, i8 0, i32 0, i32 0 } }, i32 0, %struct.atomic_t zeroinitializer, %struct.swait_queue_head zeroinitializer, i32 0, i8 0, i8 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, ptr @rcu_name, i8 115, [107 x i8] undef, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.123, i8 0, i8 2, i8 0, i32 0, i32 0 } }, [84 x i8] undef }, align 128
@__kstrtab_rcu_get_gp_seq = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_get_gp_seq = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_get_gp_seq = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_get_gp_seq to i32), ptr @__kstrtab_rcu_get_gp_seq, ptr @__kstrtabns_rcu_get_gp_seq }, section "___ksymtab_gpl+rcu_get_gp_seq", align 4
@__kstrtab_rcu_exp_batches_completed = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_exp_batches_completed = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_exp_batches_completed = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_exp_batches_completed to i32), ptr @__kstrtab_rcu_exp_batches_completed, ptr @__kstrtabns_rcu_exp_batches_completed }, section "___ksymtab_gpl+rcu_exp_batches_completed", align 4
@__kstrtab_rcutorture_get_gp_data = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcutorture_get_gp_data = external dso_local constant [0 x i8], align 1
@__ksymtab_rcutorture_get_gp_data = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcutorture_get_gp_data to i32), ptr @__kstrtab_rcutorture_get_gp_data, ptr @__kstrtabns_rcutorture_get_gp_data }, section "___ksymtab_gpl+rcutorture_get_gp_data", align 4
@rcu_idle_enter.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@lockdep_recursion = external dso_local global i32, section ".data..percpu", align 4
@hardirqs_enabled = external dso_local global i32, section ".data..percpu", align 4
@__kstrtab_rcu_idle_enter = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_idle_enter = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_idle_enter = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_idle_enter to i32), ptr @__kstrtab_rcu_idle_enter, ptr @__kstrtabns_rcu_idle_enter }, section "___ksymtab_gpl+rcu_idle_enter", align 4
@rcu_nmi_exit.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nmi_exit.__already_done.1 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nmi_exit.___tp_str = internal global ptr @.str.2, section "__tracepoint_str", align 4
@.str.2 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"--=\00", [28 x i8] zeroinitializer }, align 32
@rcu_nmi_exit.___tp_str.3 = internal global ptr @.str.4, section "__tracepoint_str", align 4
@.str.4 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Startirq\00", [23 x i8] zeroinitializer }, align 32
@rcu_irq_exit.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_irq_exit_check_preempt.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_irq_exit_check_preempt.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.6 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"RCU dynticks_nesting counter underflow/zero!\00", [51 x i8] zeroinitializer }, align 32
@rcu_irq_exit_check_preempt.__warned.7 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.8 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Bad RCU  dynticks_nmi_nesting counter\0A\00", [57 x i8] zeroinitializer }, align 32
@rcu_irq_exit_check_preempt.__warned.9 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.10 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"RCU in extended quiescent state!\00", [63 x i8] zeroinitializer }, align 32
@__kstrtab_rcu_idle_exit = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_idle_exit = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_idle_exit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_idle_exit to i32), ptr @__kstrtab_rcu_idle_exit, ptr @__kstrtabns_rcu_idle_exit }, section "___ksymtab_gpl+rcu_idle_exit", align 4
@rcu_nmi_enter.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nmi_enter.___tp_str = internal global ptr @.str.11, section "__tracepoint_str", align 4
@.str.11 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"Endirq\00", [25 x i8] zeroinitializer }, align 32
@rcu_nmi_enter.___tp_str.12 = internal global ptr @.str.13, section "__tracepoint_str", align 4
@.str.13 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"++=\00", [28 x i8] zeroinitializer }, align 32
@rcu_irq_enter.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_rcu_is_watching = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_is_watching = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_is_watching = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_is_watching to i32), ptr @__kstrtab_rcu_is_watching, ptr @__kstrtabns_rcu_is_watching }, section "___ksymtab_gpl+rcu_is_watching", align 4
@rcu_scheduler_fully_active = internal global i32 0, section ".data..read_mostly", align 4
@__kstrtab_rcu_lockdep_current_cpu_online = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_lockdep_current_cpu_online = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_lockdep_current_cpu_online = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_lockdep_current_cpu_online to i32), ptr @__kstrtab_rcu_lockdep_current_cpu_online, ptr @__kstrtabns_rcu_lockdep_current_cpu_online }, section "___ksymtab_gpl+rcu_lockdep_current_cpu_online", align 4
@sleep_duration = internal global { i32, [28 x i8] } zeroinitializer, align 32
@__kstrtab_rcu_gp_set_torture_wait = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_gp_set_torture_wait = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_gp_set_torture_wait = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_gp_set_torture_wait to i32), ptr @__kstrtab_rcu_gp_set_torture_wait, ptr @__kstrtabns_rcu_gp_set_torture_wait }, section "___ksymtab_gpl+rcu_gp_set_torture_wait", align 4
@rcutree_dying_cpu.___tp_str = internal global ptr @.str.14, section "__tracepoint_str", align 4
@.str.14 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"cpuofl-bgp\00", [21 x i8] zeroinitializer }, align 32
@rcutree_dying_cpu.___tp_str.15 = internal global ptr @.str.16, section "__tracepoint_str", align 4
@.str.16 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"cpuofl\00", [25 x i8] zeroinitializer }, align 32
@rcu_sched_clock_irq.___tp_str = internal global ptr @.str.17, section "__tracepoint_str", align 4
@.str.17 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Start scheduler-tick\00", [43 x i8] zeroinitializer }, align 32
@rcu_sched_clock_irq.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_sched_clock_irq.__already_done.19 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_sched_clock_irq.___tp_str.20 = internal global ptr @.str.21, section "__tracepoint_str", align 4
@.str.21 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"End scheduler-tick\00", [45 x i8] zeroinitializer }, align 32
@rcu_force_quiescent_state.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_force_quiescent_state.__already_done.22 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_rcu_force_quiescent_state = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_force_quiescent_state = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_force_quiescent_state = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_force_quiescent_state to i32), ptr @__kstrtab_rcu_force_quiescent_state, ptr @__kstrtabns_rcu_force_quiescent_state }, section "___ksymtab_gpl+rcu_force_quiescent_state", align 4
@__kstrtab_call_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_call_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_call_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @call_rcu to i32), ptr @__kstrtab_call_rcu, ptr @__kstrtabns_call_rcu }, section "___ksymtab_gpl+call_rcu", align 4
@.str.23 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"krc.lock\00", [23 x i8] zeroinitializer }, align 32
@krc = weak dso_local global %struct.kfree_rcu_cpu { ptr null, [2 x ptr] zeroinitializer, [2 x %struct.kfree_rcu_cpu_work] zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.23, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.delayed_work zeroinitializer, i8 0, i8 0, i32 0, %struct.delayed_work zeroinitializer, %struct.atomic_t zeroinitializer, %struct.atomic_t zeroinitializer, %struct.hrtimer zeroinitializer, %struct.llist_head zeroinitializer, i32 0 }, section ".data..percpu", align 8
@kvfree_call_rcu.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.24 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"%s(): Double-freed call. rcu_head %p\0A\00", [58 x i8] zeroinitializer }, align 32
@__func__.kvfree_call_rcu = private unnamed_addr constant [16 x i8] c"kvfree_call_rcu\00", align 1
@__kstrtab_kvfree_call_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_kvfree_call_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_kvfree_call_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @kvfree_call_rcu to i32), ptr @__kstrtab_kvfree_call_rcu, ptr @__kstrtabns_kvfree_call_rcu }, section "___ksymtab_gpl+kvfree_call_rcu", align 4
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@synchronize_rcu.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_bh_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_sched_lock_map = external dso_local global %struct.lockdep_map, align 4
@.str.25 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"Illegal synchronize_rcu() in RCU read-side critical section\00", [36 x i8] zeroinitializer }, align 32
@__kstrtab_synchronize_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_synchronize_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_synchronize_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @synchronize_rcu to i32), ptr @__kstrtab_synchronize_rcu, ptr @__kstrtabns_synchronize_rcu }, section "___ksymtab_gpl+synchronize_rcu", align 4
@__kstrtab_get_state_synchronize_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_get_state_synchronize_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_get_state_synchronize_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @get_state_synchronize_rcu to i32), ptr @__kstrtab_get_state_synchronize_rcu, ptr @__kstrtabns_get_state_synchronize_rcu }, section "___ksymtab_gpl+get_state_synchronize_rcu", align 4
@start_poll_synchronize_rcu.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@start_poll_synchronize_rcu.__already_done.26 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_start_poll_synchronize_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_start_poll_synchronize_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_start_poll_synchronize_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @start_poll_synchronize_rcu to i32), ptr @__kstrtab_start_poll_synchronize_rcu, ptr @__kstrtabns_start_poll_synchronize_rcu }, section "___ksymtab_gpl+start_poll_synchronize_rcu", align 4
@__kstrtab_poll_state_synchronize_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_poll_state_synchronize_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_poll_state_synchronize_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @poll_state_synchronize_rcu to i32), ptr @__kstrtab_poll_state_synchronize_rcu, ptr @__kstrtabns_poll_state_synchronize_rcu }, section "___ksymtab_gpl+poll_state_synchronize_rcu", align 4
@__kstrtab_cond_synchronize_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_cond_synchronize_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_cond_synchronize_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cond_synchronize_rcu to i32), ptr @__kstrtab_cond_synchronize_rcu, ptr @__kstrtabns_cond_synchronize_rcu }, section "___ksymtab_gpl+cond_synchronize_rcu", align 4
@rcu_barrier.___tp_str = internal global ptr @.str.27, section "__tracepoint_str", align 4
@.str.27 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"Begin\00", [26 x i8] zeroinitializer }, align 32
@rcu_barrier.___tp_str.28 = internal global ptr @.str.29, section "__tracepoint_str", align 4
@.str.29 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"EarlyExit\00", [22 x i8] zeroinitializer }, align 32
@rcu_barrier.___tp_str.30 = internal global ptr @.str.31, section "__tracepoint_str", align 4
@.str.31 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"Inc1\00", [27 x i8] zeroinitializer }, align 32
@rcu_barrier.___tp_str.32 = internal global ptr @.str.33, section "__tracepoint_str", align 4
@.str.33 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"OnlineQ\00", [24 x i8] zeroinitializer }, align 32
@rcu_barrier.___tp_str.34 = internal global ptr @.str.35, section "__tracepoint_str", align 4
@.str.35 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"OfflineNoCBQ\00", [19 x i8] zeroinitializer }, align 32
@rcu_barrier.___tp_str.36 = internal global ptr @.str.37, section "__tracepoint_str", align 4
@.str.37 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"OfflineNoCBNoQ\00", [17 x i8] zeroinitializer }, align 32
@rcu_barrier.___tp_str.38 = internal global ptr @.str.39, section "__tracepoint_str", align 4
@.str.39 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"OnlineNQ\00", [23 x i8] zeroinitializer }, align 32
@rcu_barrier.___tp_str.40 = internal global ptr @.str.41, section "__tracepoint_str", align 4
@.str.41 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"Inc2\00", [27 x i8] zeroinitializer }, align 32
@__kstrtab_rcu_barrier = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_barrier = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_barrier = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_barrier to i32), ptr @__kstrtab_rcu_barrier, ptr @__kstrtabns_rcu_barrier }, section "___ksymtab_gpl+rcu_barrier", align 4
@rcutree_prepare_cpu.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcutree_prepare_cpu.___tp_str = internal global ptr @.str.42, section "__tracepoint_str", align 4
@.str.42 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"cpuonl\00", [25 x i8] zeroinitializer }, align 32
@rcutree_prepare_cpu.__already_done.43 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcutree_online_cpu.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcutree_offline_cpu.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_cpu_starting.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_cpu_starting.__already_done.44 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_cpu_starting.__already_done.45 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_cpu_starting.__already_done.46 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_report_dead.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_report_dead.__already_done.47 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_report_dead.__already_done.48 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcutree_migrate_callbacks.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@rcutree_migrate_callbacks.__already_done.49 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcutree_migrate_callbacks.__already_done.50 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcutree_migrate_callbacks.__already_done.51 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcutree_migrate_callbacks.__already_done.52 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcutree_migrate_callbacks.__already_done.53 = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.54 = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"rcu_cleanup_dead_cpu: Callbacks on offline CPU %d: qlen=%lu, 1stCB=%p\0A\00", [57 x i8] zeroinitializer }, align 32
@__initcall__kmod_tree__1031_4484_rcu_spawn_gp_kthreadearly = internal global ptr @rcu_spawn_gp_kthread, section ".initcallearly.init", align 4
@rcu_init_geometry.old_nr_cpu_ids = internal global { i32, [28 x i8] } zeroinitializer, align 32
@rcu_init_geometry.initialized = internal global { i1, [31 x i8] } zeroinitializer, align 32
@rcu_init_geometry.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_init_geometry._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.55, ptr @.str.56, ptr @.str, i32 4631, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\016rcu: Adjusting geometry for rcu_fanout_leaf=%d, nr_cpu_ids=%u\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"rcu_init_geometry\00", [46 x i8] zeroinitializer }, align 32
@rcu_init_geometry._entry_ptr = internal global ptr @rcu_init_geometry._entry, section ".printk_index", align 4
@rcu_init.rcu_pm_notify_nb = internal global { %struct.notifier_block, [20 x i8] } { %struct.notifier_block { ptr @rcu_pm_notify, ptr null, i32 0 }, [20 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@.str.57 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"rcu_gp\00", [25 x i8] zeroinitializer }, align 32
@rcu_gp_wq = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@.str.58 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"rcu_par_gp\00", [21 x i8] zeroinitializer }, align 32
@rcu_par_gp_wq = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@qovld_calc = internal global { i32, [28 x i8] } { i32 -1, [28 x i8] zeroinitializer }, align 32
@rcu_cpu_stall_timeout = external dso_local global i32, align 4
@__kstrtab_rcu_jiffies_till_stall_check = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_jiffies_till_stall_check = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_jiffies_till_stall_check = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_jiffies_till_stall_check to i32), ptr @__kstrtab_rcu_jiffies_till_stall_check, ptr @__kstrtabns_rcu_jiffies_till_stall_check }, section "___ksymtab_gpl+rcu_jiffies_till_stall_check", align 4
@rcu_cpu_stall_suppress = external dso_local local_unnamed_addr global i32, align 4
@__initcall__kmod_tree__1041_107_check_cpu_stall_initearly = internal global ptr @check_cpu_stall_init, section ".initcallearly.init", align 4
@rcu_check_boost_fail.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.59 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"kernel/rcu/tree_stall.h\00", [40 x i8] zeroinitializer }, align 32
@rcu_check_boost_fail.__already_done.60 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_check_boost_fail.__already_done.61 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_check_boost_fail.__already_done.62 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_rcu_check_boost_fail = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_check_boost_fail = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_check_boost_fail = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_check_boost_fail to i32), ptr @__kstrtab_rcu_check_boost_fail, ptr @__kstrtabns_rcu_check_boost_fail }, section "___ksymtab_gpl+rcu_check_boost_fail", align 4
@show_rcu_gp_kthreads._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.63, ptr @.str.64, ptr @.str.59, i32 808, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [220 x i8], [36 x i8] } { [220 x i8] c"\016rcu: %s: wait state: %s(%d) ->state: %#x ->rt_priority %u delta ->gp_start %lu ->gp_activity %lu ->gp_req_activity %lu ->gp_wake_time %lu ->gp_wake_seq %ld ->gp_seq %ld ->gp_seq_needed %ld ->gp_max %lu ->gp_flags %#x\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"show_rcu_gp_kthreads\00", [43 x i8] zeroinitializer }, align 32
@show_rcu_gp_kthreads._entry_ptr = internal global ptr @show_rcu_gp_kthreads._entry, section ".printk_index", align 4
@show_rcu_gp_kthreads._entry.65 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.66, ptr @.str.64, ptr @.str.59, i32 823, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [95 x i8], [33 x i8] } { [95 x i8] c"\016rcu: \09rcu_node %d:%d ->gp_seq %ld ->gp_seq_needed %ld ->qsmask %#lx %c%c%c%c ->n_boosts %ld\0A\00", [33 x i8] zeroinitializer }, align 32
@show_rcu_gp_kthreads._entry_ptr.67 = internal global ptr @show_rcu_gp_kthreads._entry.65, section ".printk_index", align 4
@.str.68 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c".b\00", [29 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c".B\00", [29 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c".E\00", [29 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c".G\00", [29 x i8] zeroinitializer }, align 32
@show_rcu_gp_kthreads._entry.72 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.73, ptr @.str.64, ptr @.str.59, i32 833, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\016rcu: \09cpu %d ->gp_seq_needed %ld\0A\00", [60 x i8] zeroinitializer }, align 32
@show_rcu_gp_kthreads._entry_ptr.74 = internal global ptr @show_rcu_gp_kthreads._entry.72, section ".printk_index", align 4
@show_rcu_gp_kthreads._entry.75 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.76, ptr @.str.64, ptr @.str.59, i32 842, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\016rcu: RCU callbacks invoked since boot: %lu\0A\00", [50 x i8] zeroinitializer }, align 32
@show_rcu_gp_kthreads._entry_ptr.77 = internal global ptr @show_rcu_gp_kthreads._entry.75, section ".printk_index", align 4
@__kstrtab_show_rcu_gp_kthreads = external dso_local constant [0 x i8], align 1
@__kstrtabns_show_rcu_gp_kthreads = external dso_local constant [0 x i8], align 1
@__ksymtab_show_rcu_gp_kthreads = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @show_rcu_gp_kthreads to i32), ptr @__kstrtab_show_rcu_gp_kthreads, ptr @__kstrtabns_show_rcu_gp_kthreads }, section "___ksymtab_gpl+show_rcu_gp_kthreads", align 4
@rcu_fwd_progress_check._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.78, ptr @.str.79, ptr @.str.59, i32 920, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"\016rcu: %s: GP age %lu jiffies\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"rcu_fwd_progress_check\00", [41 x i8] zeroinitializer }, align 32
@rcu_fwd_progress_check._entry_ptr = internal global ptr @rcu_fwd_progress_check._entry, section ".printk_index", align 4
@rcu_fwd_progress_check._entry.80 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.81, ptr @.str.79, ptr @.str.59, i32 924, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\016rcu: %s: Last GP end %lu jiffies ago\0A\00", [56 x i8] zeroinitializer }, align 32
@rcu_fwd_progress_check._entry_ptr.82 = internal global ptr @rcu_fwd_progress_check._entry.80, section ".printk_index", align 4
@rcu_fwd_progress_check._entry.83 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.84, ptr @.str.79, ptr @.str.59, i32 935, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"\016rcu: %s: callbacks\00", [43 x i8] zeroinitializer }, align 32
@rcu_fwd_progress_check._entry_ptr.85 = internal global ptr @rcu_fwd_progress_check._entry.83, section ".printk_index", align 4
@rcu_fwd_progress_check._entry.86 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.87, ptr @.str.79, ptr @.str.59, i32 936, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"\01c %d: %lu\00", [21 x i8] zeroinitializer }, align 32
@rcu_fwd_progress_check._entry_ptr.88 = internal global ptr @rcu_fwd_progress_check._entry.86, section ".printk_index", align 4
@rcu_fwd_progress_check._entry.89 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.90, ptr @.str.79, ptr @.str.59, i32 943, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"\01c\0A\00", [28 x i8] zeroinitializer }, align 32
@rcu_fwd_progress_check._entry_ptr.91 = internal global ptr @rcu_fwd_progress_check._entry.89, section ".printk_index", align 4
@__kstrtab_rcu_fwd_progress_check = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_fwd_progress_check = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_fwd_progress_check = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_fwd_progress_check to i32), ptr @__kstrtab_rcu_fwd_progress_check, ptr @__kstrtabns_rcu_fwd_progress_check }, section "___ksymtab_gpl+rcu_fwd_progress_check", align 4
@__param_str_sysrq_rcu = internal constant [18 x i8] c"rcutree.sysrq_rcu\00", align 1
@sysrq_rcu = internal global { i8, [31 x i8] } zeroinitializer, align 32
@__param_sysrq_rcu = internal constant %struct.kernel_param { ptr @__param_str_sysrq_rcu, ptr null, ptr @param_ops_bool, i16 292, i8 -1, i8 0, %union.anon.18 { ptr @sysrq_rcu } }, section "__param", align 4
@__UNIQUE_ID_sysrq_rcutype1264 = internal constant [29 x i8] c"tree.parmtype=sysrq_rcu:bool\00", section ".modinfo", align 1
@__initcall__kmod_tree__1265_970_rcu_sysrq_initearly = internal global ptr @rcu_sysrq_init, section ".initcallearly.init", align 4
@synchronize_rcu_expedited.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.92 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"kernel/rcu/tree_exp.h\00", [42 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"Illegal synchronize_rcu_expedited() in RCU read-side critical section\00", [58 x i8] zeroinitializer }, align 32
@synchronize_rcu_expedited.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.94 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"(work_completion)(&rew.rew_work)\00", [63 x i8] zeroinitializer }, align 32
@__kstrtab_synchronize_rcu_expedited = external dso_local constant [0 x i8], align 1
@__kstrtabns_synchronize_rcu_expedited = external dso_local constant [0 x i8], align 1
@__ksymtab_synchronize_rcu_expedited = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @synchronize_rcu_expedited to i32), ptr @__kstrtab_synchronize_rcu_expedited, ptr @__kstrtabns_synchronize_rcu_expedited }, section "___ksymtab_gpl+synchronize_rcu_expedited", align 4
@__setup_str_rcu_nocb_setup = internal constant [10 x i8] c"rcu_nocbs\00", section ".init.rodata", align 1
@__setup_rcu_nocb_setup = internal global %struct.obs_kernel_param { ptr @__setup_str_rcu_nocb_setup, ptr @rcu_nocb_setup, i32 0 }, section ".init.setup", align 4
@__setup_str_parse_rcu_nocb_poll = internal constant [14 x i8] c"rcu_nocb_poll\00", section ".init.rodata", align 1
@__setup_parse_rcu_nocb_poll = internal global %struct.obs_kernel_param { ptr @__setup_str_parse_rcu_nocb_poll, ptr @parse_rcu_nocb_poll, i32 1 }, section ".init.setup", align 4
@__param_str_nocb_nobypass_lim_per_jiffy = internal constant [36 x i8] c"rcutree.nocb_nobypass_lim_per_jiffy\00", align 1
@nocb_nobypass_lim_per_jiffy = internal global { i32, [28 x i8] } { i32 160, [28 x i8] zeroinitializer }, align 32
@__param_nocb_nobypass_lim_per_jiffy = internal constant %struct.kernel_param { ptr @__param_str_nocb_nobypass_lim_per_jiffy, ptr null, ptr @param_ops_int, i16 0, i8 -1, i8 0, %union.anon.18 { ptr @nocb_nobypass_lim_per_jiffy } }, section "__param", align 4
@__UNIQUE_ID_nocb_nobypass_lim_per_jiffytype1386 = internal constant [46 x i8] c"tree.parmtype=nocb_nobypass_lim_per_jiffy:int\00", section ".modinfo", align 1
@rcu_nocb_mask = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@__kstrtab_rcu_nocb_flush_deferred_wakeup = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_nocb_flush_deferred_wakeup = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_nocb_flush_deferred_wakeup = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_nocb_flush_deferred_wakeup to i32), ptr @__kstrtab_rcu_nocb_flush_deferred_wakeup, ptr @__kstrtabns_rcu_nocb_flush_deferred_wakeup }, section "___ksymtab_gpl+rcu_nocb_flush_deferred_wakeup", align 4
@rcu_nocb_cpu_deoffload._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.95, ptr @.str.96, ptr @.str.97, i32 1065, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\016rcu: NOCB: Can't CB-deoffload an offline CPU\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"rcu_nocb_cpu_deoffload\00", [41 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"kernel/rcu/tree_nocb.h\00", [41 x i8] zeroinitializer }, align 32
@rcu_nocb_cpu_deoffload._entry_ptr = internal global ptr @rcu_nocb_cpu_deoffload._entry, section ".printk_index", align 4
@__kstrtab_rcu_nocb_cpu_deoffload = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_nocb_cpu_deoffload = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_nocb_cpu_deoffload = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_nocb_cpu_deoffload to i32), ptr @__kstrtab_rcu_nocb_cpu_deoffload, ptr @__kstrtabns_rcu_nocb_cpu_deoffload }, section "___ksymtab_gpl+rcu_nocb_cpu_deoffload", align 4
@rcu_nocb_cpu_offload._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.98, ptr @.str.99, ptr @.str.97, i32 1154, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\016rcu: NOCB: Can't CB-offload an offline CPU\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"rcu_nocb_cpu_offload\00", [43 x i8] zeroinitializer }, align 32
@rcu_nocb_cpu_offload._entry_ptr = internal global ptr @rcu_nocb_cpu_offload._entry, section ".printk_index", align 4
@__kstrtab_rcu_nocb_cpu_offload = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_nocb_cpu_offload = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_nocb_cpu_offload = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_nocb_cpu_offload to i32), ptr @__kstrtab_rcu_nocb_cpu_offload, ptr @__kstrtabns_rcu_nocb_cpu_offload }, section "___ksymtab_gpl+rcu_nocb_cpu_offload", align 4
@rcu_init_nohz._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.100, ptr @.str.101, ptr @.str.97, i32 1179, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"\016rcu: rcu_nocb_mask allocation failed, callback offloading disabled.\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"rcu_init_nohz\00", [18 x i8] zeroinitializer }, align 32
@rcu_init_nohz._entry_ptr = internal global ptr @rcu_init_nohz._entry, section ".printk_index", align 4
@rcu_nocb_is_setup = internal global { i1, [31 x i8] } zeroinitializer, align 32
@rcu_init_nohz._entry.102 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.103, ptr @.str.101, ptr @.str.97, i32 1195, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [101 x i8], [59 x i8] } { [101 x i8] c"\016rcu: \09Note: kernel parameter 'rcu_nocbs=', 'nohz_full', or 'isolcpus=' contains nonexistent CPUs.\0A\00", [59 x i8] zeroinitializer }, align 32
@rcu_init_nohz._entry_ptr.104 = internal global ptr @rcu_init_nohz._entry.102, section ".printk_index", align 4
@rcu_init_nohz._entry.105 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.106, ptr @.str.101, ptr @.str.97, i32 1200, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\016rcu: \09Offload RCU callbacks from CPUs: (none).\0A\00", [46 x i8] zeroinitializer }, align 32
@rcu_init_nohz._entry_ptr.107 = internal global ptr @rcu_init_nohz._entry.105, section ".printk_index", align 4
@rcu_init_nohz._entry.108 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.109, ptr @.str.101, ptr @.str.97, i32 1203, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\016rcu: \09Offload RCU callbacks from CPUs: %*pbl.\0A\00", [47 x i8] zeroinitializer }, align 32
@rcu_init_nohz._entry_ptr.110 = internal global ptr @rcu_init_nohz._entry.108, section ".printk_index", align 4
@rcu_nocb_poll = internal unnamed_addr global i1 false, section ".data..read_mostly", align 1
@rcu_init_nohz._entry.111 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.112, ptr @.str.101, ptr @.str.97, i32 1205, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\016rcu: \09Poll for callbacks from no-CBs CPUs.\0A\00", [50 x i8] zeroinitializer }, align 32
@rcu_init_nohz._entry_ptr.113 = internal global ptr @rcu_init_nohz._entry.111, section ".printk_index", align 4
@__param_str_rcu_nocb_gp_stride = internal constant [27 x i8] c"rcutree.rcu_nocb_gp_stride\00", align 1
@rcu_nocb_gp_stride = internal global { i32, [28 x i8] } { i32 -1, [28 x i8] zeroinitializer }, align 32
@__param_rcu_nocb_gp_stride = internal constant %struct.kernel_param { ptr @__param_str_rcu_nocb_gp_stride, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.18 { ptr @rcu_nocb_gp_stride } }, section "__param", align 4
@__UNIQUE_ID_rcu_nocb_gp_stridetype1516 = internal constant [37 x i8] c"tree.parmtype=rcu_nocb_gp_stride:int\00", section ".modinfo", align 1
@__kstrtab_rcu_bind_current_to_nocb = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_bind_current_to_nocb = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_bind_current_to_nocb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_bind_current_to_nocb to i32), ptr @__kstrtab_rcu_bind_current_to_nocb, ptr @__kstrtabns_rcu_bind_current_to_nocb }, section "___ksymtab_gpl+rcu_bind_current_to_nocb", align 4
@arm_delay_ops = external dso_local local_unnamed_addr global %struct.arm_delay_ops, align 4
@__kstrtab_rcu_read_unlock_strict = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_read_unlock_strict = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_read_unlock_strict = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_read_unlock_strict to i32), ptr @__kstrtab_rcu_read_unlock_strict, ptr @__kstrtabns_rcu_read_unlock_strict }, section "___ksymtab_gpl+rcu_read_unlock_strict", align 4
@__kstrtab_rcu_all_qs = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_all_qs = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_all_qs = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_all_qs to i32), ptr @__kstrtab_rcu_all_qs, ptr @__kstrtabns_rcu_all_qs }, section "___ksymtab_gpl+rcu_all_qs", align 4
@rcu_note_context_switch.___tp_str = internal global ptr @.str.114, section "__tracepoint_str", align 4
@.str.114 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Start context switch\00", [43 x i8] zeroinitializer }, align 32
@rcu_note_context_switch.___tp_str.115 = internal global ptr @.str.116, section "__tracepoint_str", align 4
@.str.116 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"End context switch\00", [45 x i8] zeroinitializer }, align 32
@__kstrtab_rcu_note_context_switch = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_note_context_switch = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_note_context_switch = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_note_context_switch to i32), ptr @__kstrtab_rcu_note_context_switch, ptr @__kstrtabns_rcu_note_context_switch }, section "___ksymtab_gpl+rcu_note_context_switch", align 4
@__pcpu_unique_rcu_data = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@__pcpu_unique_krc = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@sysctl_panic_on_rcu_stall = dso_local local_unnamed_addr global i32 0, section ".data..read_mostly", align 4
@sysctl_max_rcu_stall_to_panic = dso_local local_unnamed_addr global i32 0, section ".data..read_mostly", align 4
@.str.117 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"rcu_state.barrier_mutex.wait_lock\00", [62 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"rcu_state.barrier_mutex\00", [40 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"rcu_state.exp_mutex.wait_lock\00", [34 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rcu_state.exp_mutex\00", [44 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"rcu_state.exp_wake_mutex.wait_lock\00", [61 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"rcu_state.exp_wake_mutex\00", [39 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"rcu_state.ofl_lock\00", [45 x i8] zeroinitializer }, align 32
@rcu_eqs_enter.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_eqs_enter.__already_done.124 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_eqs_enter.__already_done.125 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_eqs_enter.___tp_str = internal global ptr @.str.126, section "__tracepoint_str", align 4
@.str.126 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"Start\00", [26 x i8] zeroinitializer }, align 32
@rcu_eqs_enter.__already_done.127 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__tracepoint_rcu_dyntick = external dso_local global %struct.tracepoint, align 4
@.str.128 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"include/trace/events/rcu.h\00", [37 x i8] zeroinitializer }, align 32
@trace_rcu_dyntick.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.129 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@rcu_dynticks_eqs_enter.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_eqs_exit.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_eqs_exit.__already_done.130 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_eqs_exit.___tp_str = internal global ptr @.str.131, section "__tracepoint_str", align 4
@.str.131 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"End\00", [28 x i8] zeroinitializer }, align 32
@rcu_eqs_exit.__already_done.132 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_eqs_exit.__already_done.133 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_dynticks_eqs_exit.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__tracepoint_rcu_grace_period = external dso_local global %struct.tracepoint, align 4
@trace_rcu_grace_period.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rcu_utilization = external dso_local global %struct.tracepoint, align 4
@trace_rcu_utilization.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_is_cpu_rrupt_from_idle.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_is_cpu_rrupt_from_idle.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.134 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"RCU dynticks_nesting counter underflow!\00", [56 x i8] zeroinitializer }, align 32
@rcu_is_cpu_rrupt_from_idle.__warned.135 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.136 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"RCU dynticks_nmi_nesting counter underflow/zero!\00", [47 x i8] zeroinitializer }, align 32
@rcu_is_cpu_rrupt_from_idle.__already_done.137 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__call_rcu.doublefrees = internal global %struct.atomic_t zeroinitializer, align 4
@__call_rcu.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__call_rcu._entry = internal constant %struct.pi_entry { ptr @.str.138, ptr @.str.139, ptr @.str, i32 3017, ptr null, ptr null }, align 1
@.str.138 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\013rcu: %s(): Double-freed CB %p->%pS()!!!  \00", [52 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"__call_rcu\00", [21 x i8] zeroinitializer }, align 32
@__call_rcu._entry_ptr = internal global ptr @__call_rcu._entry, section ".printk_index", align 4
@__call_rcu.__already_done.140 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__call_rcu.__already_done.141 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__call_rcu.___tp_str = internal global ptr @.str.142, section "__tracepoint_str", align 4
@.str.142 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"SegCBQueued\00", [20 x i8] zeroinitializer }, align 32
@check_cb_ovld.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nocb_try_bypass.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nocb_try_bypass.__already_done.143 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nocb_try_bypass.___tp_str = internal global ptr @.str.144, section "__tracepoint_str", align 4
@.str.144 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"FirstQ\00", [25 x i8] zeroinitializer }, align 32
@rcu_nocb_try_bypass.__already_done.145 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nocb_try_bypass.__already_done.146 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nocb_try_bypass.___tp_str.147 = internal global ptr @.str.144, section "__tracepoint_str", align 4
@rcu_nocb_try_bypass.__already_done.148 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nocb_try_bypass.___tp_str.149 = internal global ptr @.str.150, section "__tracepoint_str", align 4
@.str.150 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"FirstBQ\00", [24 x i8] zeroinitializer }, align 32
@rcu_nocb_try_bypass.___tp_str.151 = internal global ptr @.str.152, section "__tracepoint_str", align 4
@.str.152 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"FirstBQwake\00", [20 x i8] zeroinitializer }, align 32
@rcu_nocb_try_bypass.___tp_str.153 = internal global ptr @.str.154, section "__tracepoint_str", align 4
@.str.154 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"FirstBQnoWake\00", [18 x i8] zeroinitializer }, align 32
@__tracepoint_rcu_nocb_wake = external dso_local global %struct.tracepoint, align 4
@trace_rcu_nocb_wake.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_advance_cbs_nowake.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_advance_cbs_nowake.__already_done.155 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_lockdep_assert_cblist_protected.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nocb_unlock_irqrestore.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nocb_wait_contended.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nocb_wait_contended.__already_done.156 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nocb_bypass_lock.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nocb_bypass_lock.__already_done.157 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nocb_bypass_unlock.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__tracepoint_rcu_kvfree_callback = external dso_local global %struct.tracepoint, align 4
@trace_rcu_kvfree_callback.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rcu_callback = external dso_local global %struct.tracepoint, align 4
@trace_rcu_callback.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rcu_segcb_stats = external dso_local global %struct.tracepoint, align 4
@trace_rcu_segcb_stats.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@note_gp_changes.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__note_gp_changes.___tp_str = internal global ptr @.str.158, section "__tracepoint_str", align 4
@.str.158 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"cpuend\00", [25 x i8] zeroinitializer }, align 32
@__note_gp_changes.___tp_str.159 = internal global ptr @.str.160, section "__tracepoint_str", align 4
@.str.160 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"cpustart\00", [23 x i8] zeroinitializer }, align 32
@rcu_accelerate_cbs.___tp_str = internal global ptr @.str.161, section "__tracepoint_str", align 4
@.str.161 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"SegCbPreAcc\00", [20 x i8] zeroinitializer }, align 32
@rcu_accelerate_cbs.___tp_str.162 = internal global ptr @.str.163, section "__tracepoint_str", align 4
@.str.163 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"AccWaitCB\00", [22 x i8] zeroinitializer }, align 32
@rcu_accelerate_cbs.___tp_str.164 = internal global ptr @.str.165, section "__tracepoint_str", align 4
@.str.165 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"AccReadyCB\00", [21 x i8] zeroinitializer }, align 32
@rcu_accelerate_cbs.___tp_str.166 = internal global ptr @.str.167, section "__tracepoint_str", align 4
@.str.167 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"SegCbPostAcc\00", [19 x i8] zeroinitializer }, align 32
@kstat = external dso_local global %struct.kernel_stat, section ".data..percpu", align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.168 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.170 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@rcu_accelerate_cbs_unlocked.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcuhead_debug_descr = external dso_local constant %struct.debug_obj_descr, align 4
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@system_highpri_wq = external dso_local local_unnamed_addr global ptr, align 4
@rcu_start_this_gp.___tp_str = internal global ptr @.str.171, section "__tracepoint_str", align 4
@.str.171 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Startleaf\00", [22 x i8] zeroinitializer }, align 32
@rcu_start_this_gp.___tp_str.172 = internal global ptr @.str.173, section "__tracepoint_str", align 4
@.str.173 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Prestarted\00", [21 x i8] zeroinitializer }, align 32
@rcu_start_this_gp.___tp_str.174 = internal global ptr @.str.175, section "__tracepoint_str", align 4
@.str.175 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Startedleaf\00", [20 x i8] zeroinitializer }, align 32
@rcu_start_this_gp.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_start_this_gp.___tp_str.176 = internal global ptr @.str.177, section "__tracepoint_str", align 4
@.str.177 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Startedleafroot\00", [16 x i8] zeroinitializer }, align 32
@rcu_start_this_gp.___tp_str.178 = internal global ptr @.str.179, section "__tracepoint_str", align 4
@.str.179 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"Startedroot\00", [20 x i8] zeroinitializer }, align 32
@rcu_start_this_gp.___tp_str.180 = internal global ptr @.str.181, section "__tracepoint_str", align 4
@.str.181 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"NoGPkthread\00", [20 x i8] zeroinitializer }, align 32
@rcu_start_this_gp.___tp_str.182 = internal global ptr @.str.183, section "__tracepoint_str", align 4
@.str.183 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"newreq\00", [25 x i8] zeroinitializer }, align 32
@rcu_start_this_gp.__already_done.184 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__tracepoint_rcu_future_grace_period = external dso_local global %struct.tracepoint, align 4
@trace_rcu_future_grace_period.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_pending.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@check_cpu_stall.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_cpu_stall_ftrace_dump = external dso_local global i32, align 4
@check_cpu_stall.___rfd_beenhere = internal global { %struct.atomic_t, [28 x i8] } zeroinitializer, align 32
@check_cpu_stall.___rfd_beenhere.185 = internal global { %struct.atomic_t, [28 x i8] } zeroinitializer, align 32
@rcu_cpu_stall_suppress_at_boot = external dso_local local_unnamed_addr global i32, align 4
@rcu_stall_kick_kthreads.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.186 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Kicking %s grace-period kthread\0A\00", [63 x i8] zeroinitializer }, align 32
@rcu_stall_kick_kthreads.___rfd_beenhere = internal global { %struct.atomic_t, [28 x i8] } zeroinitializer, align 32
@print_cpu_stall.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@print_cpu_stall.___tp_str = internal global ptr @.str.187, section "__tracepoint_str", align 4
@.str.187 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"SelfDetected\00", [19 x i8] zeroinitializer }, align 32
@print_cpu_stall._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.188, ptr @.str.189, ptr @.str.59, i32 591, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\013rcu: INFO: %s self-detected stall on CPU\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"print_cpu_stall\00", [16 x i8] zeroinitializer }, align 32
@print_cpu_stall._entry_ptr = internal global ptr @print_cpu_stall._entry, section ".printk_index", align 4
@print_cpu_stall.__already_done.190 = internal unnamed_addr global i1 false, section ".data.once", align 1
@print_cpu_stall._entry.191 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.192, ptr @.str.189, ptr @.str.59, i32 599, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.192 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\01c\09(t=%lu jiffies g=%ld q=%lu)\0A\00", [32 x i8] zeroinitializer }, align 32
@print_cpu_stall._entry_ptr.193 = internal global ptr @print_cpu_stall._entry.191, section ".printk_index", align 4
@print_cpu_stall.__already_done.194 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__tracepoint_rcu_stall_warning = external dso_local global %struct.tracepoint, align 4
@trace_rcu_stall_warning.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.195 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"GPs behind\00", [21 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"ticks this GP\00", [18 x i8] zeroinitializer }, align 32
@print_cpu_stall_info._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.197, ptr @.str.198, ptr @.str.59, i32 430, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.197 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"\013rcu: \09%d-%c%c%c%c: (%lu %s) idle=%03x/%ld/%#lx softirq=%u/%u fqs=%ld %s\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"print_cpu_stall_info\00", [43 x i8] zeroinitializer }, align 32
@print_cpu_stall_info._entry_ptr = internal global ptr @print_cpu_stall_info._entry, section ".printk_index", align 4
@.str.199 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"O.\00", [29 x i8] zeroinitializer }, align 32
@.str.200 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"o.\00", [29 x i8] zeroinitializer }, align 32
@.str.201 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"N.\00", [29 x i8] zeroinitializer }, align 32
@.str.202 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"!.\00", [29 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c" (false positive?)\00", [45 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@rcu_check_gp_kthread_expired_fqs_timer._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.205, ptr @.str.206, ptr @.str.59, i32 491, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.205 = internal constant { [92 x i8], [36 x i8] } { [92 x i8] c"\013rcu: %s kthread timer wakeup didn't happen for %ld jiffies! g%ld f%#x %s(%d) ->state=%#x\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"rcu_check_gp_kthread_expired_fqs_timer\00", [57 x i8] zeroinitializer }, align 32
@rcu_check_gp_kthread_expired_fqs_timer._entry_ptr = internal global ptr @rcu_check_gp_kthread_expired_fqs_timer._entry, section ".printk_index", align 4
@rcu_check_gp_kthread_expired_fqs_timer._entry.207 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.208, ptr @.str.206, ptr @.str.59, i32 493, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.208 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\013rcu: \09Possible timer handling issue on cpu=%d timer-softirq=%u\0A\00", [62 x i8] zeroinitializer }, align 32
@rcu_check_gp_kthread_expired_fqs_timer._entry_ptr.209 = internal global ptr @rcu_check_gp_kthread_expired_fqs_timer._entry.207, section ".printk_index", align 4
@rcu_check_gp_kthread_starvation._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.210, ptr @.str.211, ptr @.str.59, i32 448, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [82 x i8], [46 x i8] } { [82 x i8] c"\013rcu: %s kthread starved for %ld jiffies! g%ld f%#x %s(%d) ->state=%#x ->cpu=%d\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"rcu_check_gp_kthread_starvation\00", [32 x i8] zeroinitializer }, align 32
@rcu_check_gp_kthread_starvation._entry_ptr = internal global ptr @rcu_check_gp_kthread_starvation._entry, section ".printk_index", align 4
@rcu_check_gp_kthread_starvation._entry.212 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.213, ptr @.str.211, ptr @.str.59, i32 450, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.213 = internal constant { [83 x i8], [45 x i8] } { [83 x i8] c"\013rcu: \09Unless %s kthread gets sufficient CPU time, OOM is now expected behavior.\0A\00", [45 x i8] zeroinitializer }, align 32
@rcu_check_gp_kthread_starvation._entry_ptr.214 = internal global ptr @rcu_check_gp_kthread_starvation._entry.212, section ".printk_index", align 4
@rcu_check_gp_kthread_starvation._entry.215 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.216, ptr @.str.211, ptr @.str.59, i32 451, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.216 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\013rcu: RCU grace-period kthread stack dump:\0A\00", [51 x i8] zeroinitializer }, align 32
@rcu_check_gp_kthread_starvation._entry_ptr.217 = internal global ptr @rcu_check_gp_kthread_starvation._entry.215, section ".printk_index", align 4
@rcu_check_gp_kthread_starvation._entry.218 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.219, ptr @.str.211, ptr @.str.59, i32 455, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.219 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\013rcu: RCU GP kthread last ran on offline CPU %d.\0A\00", [45 x i8] zeroinitializer }, align 32
@rcu_check_gp_kthread_starvation._entry_ptr.220 = internal global ptr @rcu_check_gp_kthread_starvation._entry.218, section ".printk_index", align 4
@rcu_check_gp_kthread_starvation._entry.221 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.222, ptr @.str.211, ptr @.str.59, i32 457, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.222 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\013rcu: Stack dump where RCU GP kthread last ran:\0A\00", [46 x i8] zeroinitializer }, align 32
@rcu_check_gp_kthread_starvation._entry_ptr.223 = internal global ptr @rcu_check_gp_kthread_starvation._entry.221, section ".printk_index", align 4
@cpu_bit_bitmap = external dso_local constant [33 x [1 x i32]], align 4
@rcu_dump_cpu_stacks.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_dump_cpu_stacks._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.224, ptr @.str.225, ptr @.str.59, i32 342, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.224 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\013rcu: Offline CPU %d blocking current GP.\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.225 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rcu_dump_cpu_stacks\00", [44 x i8] zeroinitializer }, align 32
@rcu_dump_cpu_stacks._entry_ptr = internal global ptr @rcu_dump_cpu_stacks._entry, section ".printk_index", align 4
@rcu_dump_cpu_stacks.__already_done.226 = internal unnamed_addr global i1 false, section ".data.once", align 1
@panic_on_rcu_stall.cpu_stall = internal global { i32, [28 x i8] } zeroinitializer, align 32
@.str.227 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"RCU Stall\0A\00", [21 x i8] zeroinitializer }, align 32
@print_other_cpu_stall.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@print_other_cpu_stall.___tp_str = internal global ptr @.str.228, section "__tracepoint_str", align 4
@.str.228 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"StallDetected\00", [18 x i8] zeroinitializer }, align 32
@print_other_cpu_stall._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.229, ptr @.str.230, ptr @.str.59, i32 520, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\013rcu: INFO: %s detected stalls on CPUs/tasks:\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"print_other_cpu_stall\00", [42 x i8] zeroinitializer }, align 32
@print_other_cpu_stall._entry_ptr = internal global ptr @print_other_cpu_stall._entry, section ".printk_index", align 4
@print_other_cpu_stall.__already_done.231 = internal unnamed_addr global i1 false, section ".data.once", align 1
@print_other_cpu_stall.__already_done.232 = internal unnamed_addr global i1 false, section ".data.once", align 1
@print_other_cpu_stall._entry.233 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.234, ptr @.str.230, ptr @.str.59, i32 538, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.234 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\01c\09(detected by %d, t=%ld jiffies, g=%ld, q=%lu)\0A\00", [46 x i8] zeroinitializer }, align 32
@print_other_cpu_stall._entry_ptr.235 = internal global ptr @print_other_cpu_stall._entry.233, section ".printk_index", align 4
@print_other_cpu_stall._entry.236 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.237, ptr @.str.230, ptr @.str.59, i32 547, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\013rcu: INFO: Stall ended before state dump start\0A\00", [46 x i8] zeroinitializer }, align 32
@print_other_cpu_stall._entry_ptr.238 = internal global ptr @print_other_cpu_stall._entry.236, section ".printk_index", align 4
@print_other_cpu_stall._entry.239 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.240, ptr @.str.230, ptr @.str.59, i32 554, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [109 x i8], [51 x i8] } { [109 x i8] c"\013rcu: All QSes seen, last %s kthread activity %ld (%ld-%ld), jiffies_till_next_fqs=%ld, root ->qsmask %#lx\0A\00", [51 x i8] zeroinitializer }, align 32
@print_other_cpu_stall._entry_ptr.241 = internal global ptr @print_other_cpu_stall._entry.239, section ".printk_index", align 4
@rcu_print_task_stall.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__tracepoint_rcu_barrier = external dso_local global %struct.tracepoint, align 4
@trace_rcu_barrier.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_seq_start.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.242 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"kernel/rcu/rcu.h\00", [47 x i8] zeroinitializer }, align 32
@init_completion.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.243 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"&x->wait\00", [23 x i8] zeroinitializer }, align 32
@rcu_barrier_func.___tp_str = internal global ptr @.str.244, section "__tracepoint_str", align 4
@.str.244 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"IRQ\00", [28 x i8] zeroinitializer }, align 32
@rcu_barrier_func.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_barrier_func.___tp_str.245 = internal global ptr @.str.246, section "__tracepoint_str", align 4
@.str.246 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"IRQNQ\00", [26 x i8] zeroinitializer }, align 32
@rcu_barrier_callback.___tp_str = internal global ptr @.str.247, section "__tracepoint_str", align 4
@.str.247 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"LastCB\00", [25 x i8] zeroinitializer }, align 32
@rcu_barrier_callback.___tp_str.248 = internal global ptr @.str.249, section "__tracepoint_str", align 4
@.str.249 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"CB\00", [29 x i8] zeroinitializer }, align 32
@rcu_seq_end.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_report_qs_rnp.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_report_qs_rnp.__already_done.250 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_report_qs_rnp.__already_done.252 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_report_qs_rnp.__already_done.253 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__tracepoint_rcu_quiescent_state_report = external dso_local global %struct.tracepoint, align 4
@trace_rcu_quiescent_state_report.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_report_qs_rsp.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_report_qs_rsp.__already_done.254 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_spawn_gp_kthread._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.255, ptr @.str.256, ptr @.str, i32 4461, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.255 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\011rcu: rcu_spawn_gp_kthread(): Limited prio to %d from %d\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.256 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"rcu_spawn_gp_kthread\00", [43 x i8] zeroinitializer }, align 32
@rcu_spawn_gp_kthread._entry_ptr = internal global ptr @rcu_spawn_gp_kthread._entry, section ".printk_index", align 4
@.str.257 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"%s\00", [29 x i8] zeroinitializer }, align 32
@rcu_spawn_gp_kthread.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.258 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"%s: Could not start grace-period kthread, OOM is now expected behavior\0A\00", [56 x i8] zeroinitializer }, align 32
@rcu_spawn_gp_kthread.__already_done.259 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_gp_kthread.___tp_str = internal global ptr @.str.260, section "__tracepoint_str", align 4
@.str.260 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"reqwait\00", [24 x i8] zeroinitializer }, align 32
@rcu_gp_kthread.___tp_str.261 = internal global ptr @.str.262, section "__tracepoint_str", align 4
@.str.262 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"reqwaitsig\00", [21 x i8] zeroinitializer }, align 32
@rcu_gp_torture_wait._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.263, ptr @.str.264, ptr @.str, i32 1722, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.263 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\011rcu: %s: Waiting %lu jiffies\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.264 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rcu_gp_torture_wait\00", [44 x i8] zeroinitializer }, align 32
@rcu_gp_torture_wait._entry_ptr = internal global ptr @rcu_gp_torture_wait._entry, section ".printk_index", align 4
@rcu_gp_torture_wait._entry.265 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.266, ptr @.str.264, ptr @.str, i32 1724, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.266 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"\011rcu: %s: Wait complete\0A\00", [38 x i8] zeroinitializer }, align 32
@rcu_gp_torture_wait._entry_ptr.267 = internal global ptr @rcu_gp_torture_wait._entry.265, section ".printk_index", align 4
@rcu_gp_init.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_gp_init.__already_done.268 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_gp_init.__already_done.269 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_gp_init.___tp_str = internal global ptr @.str.270, section "__tracepoint_str", align 4
@.str.270 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"start\00", [26 x i8] zeroinitializer }, align 32
@rcu_gp_init.__already_done.271 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_gp_init.__already_done.272 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_gp_init.__already_done.273 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_gp_init.__already_done.274 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_init_new_rnp.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_init_new_rnp.__already_done.275 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_cleanup_dead_rnp.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_cleanup_dead_rnp.__already_done.277 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_cleanup_dead_rnp.__already_done.278 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_cleanup_dead_rnp.__already_done.279 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_preempt_check_blocked_tasks.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.280 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"kernel/rcu/tree_plugin.h\00", [39 x i8] zeroinitializer }, align 32
@__tracepoint_rcu_grace_period_init = external dso_local global %struct.tracepoint, align 4
@trace_rcu_grace_period_init.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_gp_fqs_loop.___tp_str = internal global ptr @.str.281, section "__tracepoint_str", align 4
@.str.281 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"fqswait\00", [24 x i8] zeroinitializer }, align 32
@rcu_gp_fqs_loop.___tp_str.282 = internal global ptr @.str.283, section "__tracepoint_str", align 4
@.str.283 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"fqsstart\00", [23 x i8] zeroinitializer }, align 32
@rcu_gp_fqs_loop.___tp_str.284 = internal global ptr @.str.285, section "__tracepoint_str", align 4
@.str.285 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"fqsend\00", [25 x i8] zeroinitializer }, align 32
@rcu_gp_fqs_loop.___tp_str.286 = internal global ptr @.str.287, section "__tracepoint_str", align 4
@.str.287 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"fqswaitsig\00", [21 x i8] zeroinitializer }, align 32
@rcu_gp_fqs.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@force_qs_rnp.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@force_qs_rnp.__already_done.288 = internal unnamed_addr global i1 false, section ".data.once", align 1
@force_qs_rnp.__already_done.289 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_initiate_boost.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@dyntick_save_progress_counter.___tp_str = internal global ptr @.str.290, section "__tracepoint_str", align 4
@.str.290 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"dti\00", [28 x i8] zeroinitializer }, align 32
@__tracepoint_rcu_fqs = external dso_local global %struct.tracepoint, align 4
@trace_rcu_fqs.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_implicit_dynticks_qs.___tp_str = internal global ptr @.str.290, section "__tracepoint_str", align 4
@rcu_implicit_dynticks_qs.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_implicit_dynticks_qs._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.291, ptr @.str.292, ptr @.str, i32 1269, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.291 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\016rcu: %s: grp: %d-%d level: %d ->gp_seq %ld ->completedqs %ld\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.292 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"rcu_implicit_dynticks_qs\00", [39 x i8] zeroinitializer }, align 32
@rcu_implicit_dynticks_qs._entry_ptr = internal global ptr @rcu_implicit_dynticks_qs._entry, section ".printk_index", align 4
@rcu_implicit_dynticks_qs._entry.293 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.294, ptr @.str.292, ptr @.str, i32 1272, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.294 = internal constant { [96 x i8], [32 x i8] } { [96 x i8] c"\016rcu: %s: %d:%d ->qsmask %#lx ->qsmaskinit %#lx ->qsmaskinitnext %#lx ->rcu_gp_init_mask %#lx\0A\00", [32 x i8] zeroinitializer }, align 32
@rcu_implicit_dynticks_qs._entry_ptr.295 = internal global ptr @rcu_implicit_dynticks_qs._entry.293, section ".printk_index", align 4
@rcu_implicit_dynticks_qs._entry.296 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.297, ptr @.str.292, ptr @.str, i32 1277, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.297 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\016rcu: %s %d: %c online: %ld(%d) offline: %ld(%d)\0A\00", [45 x i8] zeroinitializer }, align 32
@rcu_implicit_dynticks_qs._entry_ptr.298 = internal global ptr @rcu_implicit_dynticks_qs._entry.296, section ".printk_index", align 4
@.str.299 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c".o\00", [29 x i8] zeroinitializer }, align 32
@rcu_gp_cleanup.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_gp_cleanup.__already_done.301 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_gp_cleanup.__already_done.303 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_gp_cleanup.___tp_str = internal global ptr @.str.304, section "__tracepoint_str", align 4
@.str.304 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"end\00", [28 x i8] zeroinitializer }, align 32
@rcu_gp_cleanup.___tp_str.305 = internal global ptr @.str.306, section "__tracepoint_str", align 4
@.str.306 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"CleanupMore\00", [20 x i8] zeroinitializer }, align 32
@rcu_gp_cleanup.___tp_str.307 = internal global ptr @.str.183, section "__tracepoint_str", align 4
@rcu_gp_cleanup.__already_done.308 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_future_gp_cleanup.___tp_str = internal global ptr @.str.306, section "__tracepoint_str", align 4
@rcu_future_gp_cleanup.___tp_str.309 = internal global ptr @.str.310, section "__tracepoint_str", align 4
@.str.310 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Cleanup\00", [24 x i8] zeroinitializer }, align 32
@rcu_spawn_core_kthreads.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_cpu_thread_spec = internal global { %struct.smp_hotplug_thread, [48 x i8] } { %struct.smp_hotplug_thread { ptr getelementptr (i8, ptr @rcu_data, i64 900), %struct.list_head zeroinitializer, ptr @rcu_cpu_kthread_should_run, ptr @rcu_cpu_kthread, ptr null, ptr @rcu_cpu_kthread_setup, ptr null, ptr @rcu_cpu_kthread_park, ptr null, i8 0, ptr @.str.312 }, [48 x i8] zeroinitializer }, align 32
@.str.311 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"%s: Could not start rcuc kthread, OOM is now expected behavior\0A\00", [32 x i8] zeroinitializer }, align 32
@__func__.rcu_spawn_core_kthreads = private unnamed_addr constant [24 x i8] c"rcu_spawn_core_kthreads\00", align 1
@.str.312 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"rcuc/%u\00", [24 x i8] zeroinitializer }, align 32
@rcu_cpu_kthread.___tp_str = internal global ptr @.str.313, section "__tracepoint_str", align 4
@.str.313 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Start CPU kthread@rcu_run\00", [38 x i8] zeroinitializer }, align 32
@rcu_cpu_kthread.___tp_str.314 = internal global ptr @.str.315, section "__tracepoint_str", align 4
@.str.315 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"End CPU kthread@rcu_wait\00", [39 x i8] zeroinitializer }, align 32
@rcu_cpu_kthread.___tp_str.316 = internal global ptr @.str.317, section "__tracepoint_str", align 4
@.str.317 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Start CPU kthread@rcu_yield\00", [36 x i8] zeroinitializer }, align 32
@rcu_cpu_kthread.___tp_str.318 = internal global ptr @.str.319, section "__tracepoint_str", align 4
@.str.319 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"End CPU kthread@rcu_yield\00", [38 x i8] zeroinitializer }, align 32
@rcu_core.___tp_str = internal global ptr @.str.320, section "__tracepoint_str", align 4
@.str.320 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Start RCU core\00", [17 x i8] zeroinitializer }, align 32
@rcu_core.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_core.___tp_str.321 = internal global ptr @.str.322, section "__tracepoint_str", align 4
@.str.322 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"End RCU core\00", [19 x i8] zeroinitializer }, align 32
@rcu_do_batch.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_do_batch.___tp_str = internal global ptr @.str.323, section "__tracepoint_str", align 4
@.str.323 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"SegCbDequeued\00", [18 x i8] zeroinitializer }, align 32
@rcu_callback_map = external dso_local global %struct.lockdep_map, align 4
@rcu_do_batch.__already_done.324 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_do_batch.__already_done.325 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_do_batch.__already_done.326 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_do_batch.__already_done.328 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_do_batch.__already_done.329 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__tracepoint_rcu_batch_start = external dso_local global %struct.tracepoint, align 4
@trace_rcu_batch_start.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rcu_batch_end = external dso_local global %struct.tracepoint, align 4
@trace_rcu_batch_end.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rcu_invoke_callback = external dso_local global %struct.tracepoint, align 4
@trace_rcu_invoke_callback.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__num_online_cpus = external dso_local global %struct.atomic_t, align 4
@adjust_jiffies_till_sched_qs._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.330, ptr @.str.331, ptr @.str, i32 510, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.330 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"\016rcu: RCU calculated value of scheduler-enlistment delay is %ld jiffies.\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.331 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"adjust_jiffies_till_sched_qs\00", [35 x i8] zeroinitializer }, align 32
@adjust_jiffies_till_sched_qs._entry_ptr = internal global ptr @adjust_jiffies_till_sched_qs._entry, section ".printk_index", align 4
@kfree_rcu_batch_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.332, ptr @.str.333, ptr @.str, i32 4720, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.332 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"\016rcu: Adjusting rcutree.rcu_delay_page_cache_fill_msec to %d ms.\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.333 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"kfree_rcu_batch_init\00", [43 x i8] zeroinitializer }, align 32
@kfree_rcu_batch_init._entry_ptr = internal global ptr @kfree_rcu_batch_init._entry, section ".printk_index", align 4
@kfree_rcu_batch_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.334 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"(work_completion)(&(&krcp->krw_arr[i].rcu_work)->work)\00", [41 x i8] zeroinitializer }, align 32
@kfree_rcu_batch_init.__key.335 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.336 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"(work_completion)(&(&krcp->monitor_work)->work)\00", [48 x i8] zeroinitializer }, align 32
@kfree_rcu_batch_init.__key.337 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.338 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"&(&krcp->monitor_work)->timer\00", [34 x i8] zeroinitializer }, align 32
@kfree_rcu_batch_init.__key.339 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.340 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"(work_completion)(&(&krcp->page_cache_work)->work)\00", [45 x i8] zeroinitializer }, align 32
@kfree_rcu_batch_init.__key.341 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.342 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"&(&krcp->page_cache_work)->timer\00", [63 x i8] zeroinitializer }, align 32
@kfree_rcu_shrinker = internal global { %struct.shrinker, [60 x i8] } { %struct.shrinker { ptr @kfree_rcu_shrink_count, ptr @kfree_rcu_shrink_scan, i32 0, i32 2, i32 0, %struct.list_head zeroinitializer, i32 0, ptr null }, [60 x i8] zeroinitializer }, align 32
@kfree_rcu_batch_init._entry.343 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.344, ptr @.str.333, ptr @.str, i32 4736, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.344 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\013rcu: Failed to register kfree_rcu() shrinker!\0A\00", [47 x i8] zeroinitializer }, align 32
@kfree_rcu_batch_init._entry_ptr.345 = internal global ptr @kfree_rcu_batch_init._entry.343, section ".printk_index", align 4
@kfree_rcu_work.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__tracepoint_rcu_invoke_kfree_bulk_callback = external dso_local global %struct.tracepoint, align 4
@trace_rcu_invoke_kfree_bulk_callback.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_rcu_invoke_kvfree_callback = external dso_local global %struct.tracepoint, align 4
@trace_rcu_invoke_kvfree_callback.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_init_one.buf = internal constant { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.346, ptr @.str.347], [24 x i8] zeroinitializer }, align 32
@.str.346 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"rcu_node_0\00", [21 x i8] zeroinitializer }, align 32
@.str.347 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"rcu_node_1\00", [21 x i8] zeroinitializer }, align 32
@rcu_init_one.fqs = internal constant { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.348, ptr @.str.349], [24 x i8] zeroinitializer }, align 32
@.str.348 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"rcu_node_fqs_0\00", [17 x i8] zeroinitializer }, align 32
@.str.349 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"rcu_node_fqs_1\00", [17 x i8] zeroinitializer }, align 32
@rcu_init_one.rcu_node_class = internal global { [2 x %struct.lock_class_key], [16 x i8] } zeroinitializer, align 32
@rcu_init_one.rcu_fqs_class = internal global { [2 x %struct.lock_class_key], [16 x i8] } zeroinitializer, align 32
@.str.350 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"rcu_init_one: rcu_num_lvls out of range\00", [56 x i8] zeroinitializer }, align 32
@rcu_init_one.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.351 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"&ACCESS_PRIVATE(rnp, lock)\00", [37 x i8] zeroinitializer }, align 32
@rcu_init_one.__key.352 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.353 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"&rnp->fqslock\00", [18 x i8] zeroinitializer }, align 32
@rcu_init_one.__key.354 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.355 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"&rnp->exp_wq[0]\00", [16 x i8] zeroinitializer }, align 32
@rcu_init_one.__key.356 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.357 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"&rnp->exp_wq[1]\00", [16 x i8] zeroinitializer }, align 32
@rcu_init_one.__key.358 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.359 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"&rnp->exp_wq[2]\00", [16 x i8] zeroinitializer }, align 32
@rcu_init_one.__key.360 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.361 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"&rnp->exp_wq[3]\00", [16 x i8] zeroinitializer }, align 32
@rcu_init_one.__key.362 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.363 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"&rnp->exp_lock\00", [17 x i8] zeroinitializer }, align 32
@rcu_init_one.__key.364 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.365 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"&rcu_state.gp_wq\00", [47 x i8] zeroinitializer }, align 32
@rcu_init_one.__key.366 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.367 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"&rcu_state.expedited_wq\00", [40 x i8] zeroinitializer }, align 32
@rcu_init_one_nocb.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.368 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"&rnp->nocb_gp_wq[0]\00", [44 x i8] zeroinitializer }, align 32
@rcu_init_one_nocb.__key.369 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.370 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"&rnp->nocb_gp_wq[1]\00", [44 x i8] zeroinitializer }, align 32
@rcu_boot_init_percpu_data.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.371 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"(work_completion)(&rdp->strict_work)\00", [59 x i8] zeroinitializer }, align 32
@rcu_boot_init_percpu_data.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_boot_init_percpu_data.__already_done.372 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_boot_init_nocb_percpu_data.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.373 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"&rdp->nocb_cb_wq\00", [47 x i8] zeroinitializer }, align 32
@rcu_boot_init_nocb_percpu_data.__key.374 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.375 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"&rdp->nocb_gp_wq\00", [47 x i8] zeroinitializer }, align 32
@rcu_boot_init_nocb_percpu_data.__key.376 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.377 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"&rdp->nocb_state_wq\00", [44 x i8] zeroinitializer }, align 32
@rcu_boot_init_nocb_percpu_data.__key.378 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.379 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"&rdp->nocb_lock\00", [16 x i8] zeroinitializer }, align 32
@rcu_boot_init_nocb_percpu_data.__key.380 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.381 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"&rdp->nocb_bypass_lock\00", [41 x i8] zeroinitializer }, align 32
@rcu_boot_init_nocb_percpu_data.__key.382 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.383 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"&rdp->nocb_gp_lock\00", [45 x i8] zeroinitializer }, align 32
@rcu_boot_init_nocb_percpu_data.__key.384 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.385 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"(&rdp->nocb_timer)\00", [45 x i8] zeroinitializer }, align 32
@do_nocb_deferred_wakeup_timer.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@do_nocb_deferred_wakeup_timer.___tp_str = internal global ptr @.str.386, section "__tracepoint_str", align 4
@.str.386 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"Timer\00", [26 x i8] zeroinitializer }, align 32
@do_nocb_deferred_wakeup_common.___tp_str = internal global ptr @.str.387, section "__tracepoint_str", align 4
@.str.387 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"DeferredWake\00", [19 x i8] zeroinitializer }, align 32
@__wake_nocb_gp.___tp_str = internal global ptr @.str.388, section "__tracepoint_str", align 4
@.str.388 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"AlreadyAwake\00", [19 x i8] zeroinitializer }, align 32
@__wake_nocb_gp.___tp_str.389 = internal global ptr @.str.390, section "__tracepoint_str", align 4
@.str.390 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"DoWake\00", [25 x i8] zeroinitializer }, align 32
@rcu_dump_rcu_node_tree._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.391, ptr @.str.392, ptr @.str, i32 4690, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.391 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\016rcu: rcu_node tree layout dump\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.392 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"rcu_dump_rcu_node_tree\00", [41 x i8] zeroinitializer }, align 32
@rcu_dump_rcu_node_tree._entry_ptr = internal global ptr @rcu_dump_rcu_node_tree._entry, section ".printk_index", align 4
@rcu_dump_rcu_node_tree._entry.393 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.394, ptr @.str.392, ptr @.str, i32 4691, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.394 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"\016rcu:  \00", [23 x i8] zeroinitializer }, align 32
@rcu_dump_rcu_node_tree._entry_ptr.395 = internal global ptr @rcu_dump_rcu_node_tree._entry.393, section ".printk_index", align 4
@rcu_dump_rcu_node_tree._entry.396 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.90, ptr @.str.392, ptr @.str, i32 4694, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@rcu_dump_rcu_node_tree._entry_ptr.397 = internal global ptr @rcu_dump_rcu_node_tree._entry.396, section ".printk_index", align 4
@rcu_dump_rcu_node_tree._entry.398 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.394, ptr @.str.392, ptr @.str, i32 4695, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@rcu_dump_rcu_node_tree._entry_ptr.399 = internal global ptr @rcu_dump_rcu_node_tree._entry.398, section ".printk_index", align 4
@rcu_dump_rcu_node_tree._entry.400 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.401, ptr @.str.392, ptr @.str, i32 4698, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.401 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"\01c%d:%d ^%d  \00", [18 x i8] zeroinitializer }, align 32
@rcu_dump_rcu_node_tree._entry_ptr.402 = internal global ptr @rcu_dump_rcu_node_tree._entry.400, section ".printk_index", align 4
@rcu_dump_rcu_node_tree._entry.403 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.90, ptr @.str.392, ptr @.str, i32 4700, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@rcu_dump_rcu_node_tree._entry_ptr.404 = internal global ptr @rcu_dump_rcu_node_tree._entry.403, section ".printk_index", align 4
@panic_notifier_list = external dso_local global %struct.atomic_notifier_head, align 4
@rcu_panic_block = internal global { %struct.notifier_block, [20 x i8] } { %struct.notifier_block { ptr @rcu_panic, ptr null, i32 0 }, [20 x i8] zeroinitializer }, align 32
@rcu_iw_handler.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_iw_handler.__already_done.405 = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.406 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"???\00", [28 x i8] zeroinitializer }, align 32
@gp_state_names = internal constant { [9 x ptr], [60 x i8] } { [9 x ptr] [ptr @.str.407, ptr @.str.408, ptr @.str.409, ptr @.str.410, ptr @.str.411, ptr @.str.412, ptr @.str.413, ptr @.str.414, ptr @.str.415], [60 x i8] zeroinitializer }, align 32
@.str.407 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"RCU_GP_IDLE\00", [20 x i8] zeroinitializer }, align 32
@.str.408 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"RCU_GP_WAIT_GPS\00", [16 x i8] zeroinitializer }, align 32
@.str.409 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"RCU_GP_DONE_GPS\00", [16 x i8] zeroinitializer }, align 32
@.str.410 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"RCU_GP_ONOFF\00", [19 x i8] zeroinitializer }, align 32
@.str.411 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"RCU_GP_INIT\00", [20 x i8] zeroinitializer }, align 32
@.str.412 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"RCU_GP_WAIT_FQS\00", [16 x i8] zeroinitializer }, align 32
@.str.413 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"RCU_GP_DOING_FQS\00", [47 x i8] zeroinitializer }, align 32
@.str.414 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"RCU_GP_CLEANUP\00", [17 x i8] zeroinitializer }, align 32
@.str.415 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"RCU_GP_CLEANED\00", [17 x i8] zeroinitializer }, align 32
@rcu_check_gp_start_stall.warned = internal global { %struct.atomic_t, [28 x i8] } zeroinitializer, align 32
@rcu_check_gp_start_stall.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_check_gp_start_stall.__already_done.416 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_check_gp_start_stall.__already_done.417 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_check_gp_start_stall.__already_done.418 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_check_gp_start_stall.__already_done.419 = internal unnamed_addr global i1 false, section ".data.once", align 1
@sysrq_rcudump_op = internal constant { %struct.sysrq_key_op, [16 x i8] } { %struct.sysrq_key_op { ptr @sysrq_show_rcu, ptr @.str.420, ptr @.str.421, i32 8 }, [16 x i8] zeroinitializer }, align 32
@.str.420 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"show-rcu(y)\00", [20 x i8] zeroinitializer }, align 32
@.str.421 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Show RCU tree\00", [18 x i8] zeroinitializer }, align 32
@rcu_report_exp_cpu_mult.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_report_exp_cpu_mult.__already_done.422 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__rcu_report_exp_rnp.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__rcu_report_exp_rnp.__already_done.423 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__rcu_report_exp_rnp.__already_done.424 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__rcu_report_exp_rnp.__already_done.425 = internal unnamed_addr global i1 false, section ".data.once", align 1
@sync_sched_exp_online_cleanup.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_exp_gp_seq_snap.___tp_str = internal global ptr @.str.426, section "__tracepoint_str", align 4
@.str.426 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"snap\00", [27 x i8] zeroinitializer }, align 32
@__tracepoint_rcu_exp_grace_period = external dso_local global %struct.tracepoint, align 4
@trace_rcu_exp_grace_period.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@exp_funnel_lock.___tp_str = internal global ptr @.str.427, section "__tracepoint_str", align 4
@.str.427 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"wait\00", [27 x i8] zeroinitializer }, align 32
@exp_funnel_lock.___tp_str.428 = internal global ptr @.str.429, section "__tracepoint_str", align 4
@.str.429 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"nxtlvl\00", [25 x i8] zeroinitializer }, align 32
@exp_funnel_lock.___tp_str.430 = internal global ptr @.str.270, section "__tracepoint_str", align 4
@__tracepoint_rcu_exp_funnel_lock = external dso_local global %struct.tracepoint, align 4
@trace_rcu_exp_funnel_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@sync_rcu_exp_select_cpus.___tp_str = internal global ptr @.str.431, section "__tracepoint_str", align 4
@.str.431 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"reset\00", [26 x i8] zeroinitializer }, align 32
@sync_rcu_exp_select_cpus.___tp_str.432 = internal global ptr @.str.433, section "__tracepoint_str", align 4
@.str.433 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"select\00", [25 x i8] zeroinitializer }, align 32
@sync_rcu_exp_select_cpus.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.434 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"(work_completion)(&rnp->rew.rew_work)\00", [58 x i8] zeroinitializer }, align 32
@sync_exp_reset_tree.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@sync_exp_reset_tree.__already_done.435 = internal unnamed_addr global i1 false, section ".data.once", align 1
@sync_exp_reset_tree_hotplug.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@sync_exp_reset_tree_hotplug.__already_done.436 = internal unnamed_addr global i1 false, section ".data.once", align 1
@sync_exp_reset_tree_hotplug.__already_done.437 = internal unnamed_addr global i1 false, section ".data.once", align 1
@sync_rcu_exp_select_node_cpus.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@sync_rcu_exp_select_node_cpus.__already_done.438 = internal unnamed_addr global i1 false, section ".data.once", align 1
@sync_rcu_exp_select_node_cpus.__already_done.439 = internal unnamed_addr global i1 false, section ".data.once", align 1
@sync_rcu_exp_select_node_cpus.__already_done.440 = internal unnamed_addr global i1 false, section ".data.once", align 1
@sync_rcu_exp_select_node_cpus.___tp_str = internal global ptr @.str.441, section "__tracepoint_str", align 4
@.str.441 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"selectofl\00", [22 x i8] zeroinitializer }, align 32
@sync_rcu_exp_select_node_cpus.__already_done.442 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_exp_wait_wake.___tp_str = internal global ptr @.str.304, section "__tracepoint_str", align 4
@rcu_exp_wait_wake.___tp_str.443 = internal global ptr @.str.444, section "__tracepoint_str", align 4
@.str.444 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"endwake\00", [24 x i8] zeroinitializer }, align 32
@synchronize_rcu_expedited_wait.___tp_str = internal global ptr @.str.445, section "__tracepoint_str", align 4
@.str.445 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"startwait\00", [22 x i8] zeroinitializer }, align 32
@synchronize_rcu_expedited_wait.___tp_str.446 = internal global ptr @.str.447, section "__tracepoint_str", align 4
@.str.447 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"ExpeditedStall\00", [17 x i8] zeroinitializer }, align 32
@synchronize_rcu_expedited_wait._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.448, ptr @.str.449, ptr @.str.92, i32 529, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.448 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013rcu: INFO: %s detected expedited stalls on CPUs/tasks: {\00", [37 x i8] zeroinitializer }, align 32
@.str.449 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"synchronize_rcu_expedited_wait\00", [33 x i8] zeroinitializer }, align 32
@synchronize_rcu_expedited_wait._entry_ptr = internal global ptr @synchronize_rcu_expedited_wait._entry, section ".printk_index", align 4
@synchronize_rcu_expedited_wait.__already_done.450 = internal unnamed_addr global i1 false, section ".data.once", align 1
@synchronize_rcu_expedited_wait._entry.451 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.452, ptr @.str.449, ptr @.str.92, i32 544, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.452 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"\01c %d-%c%c%c\00", [19 x i8] zeroinitializer }, align 32
@synchronize_rcu_expedited_wait._entry_ptr.453 = internal global ptr @synchronize_rcu_expedited_wait._entry.451, section ".printk_index", align 4
@synchronize_rcu_expedited_wait._entry.454 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.455, ptr @.str.449, ptr @.str.92, i32 550, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.455 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\01c } %lu jiffies s: %lu root: %#lx/%c\0A\00", [57 x i8] zeroinitializer }, align 32
@synchronize_rcu_expedited_wait._entry_ptr.456 = internal global ptr @synchronize_rcu_expedited_wait._entry.454, section ".printk_index", align 4
@.str.457 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c".T\00", [29 x i8] zeroinitializer }, align 32
@synchronize_rcu_expedited_wait._entry.458 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.459, ptr @.str.449, ptr @.str.92, i32 552, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.459 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\013rcu: blocking rcu_node structures (internal RCU debug):\00", [38 x i8] zeroinitializer }, align 32
@synchronize_rcu_expedited_wait._entry_ptr.460 = internal global ptr @synchronize_rcu_expedited_wait._entry.458, section ".printk_index", align 4
@synchronize_rcu_expedited_wait._entry.461 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.462, ptr @.str.449, ptr @.str.92, i32 561, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.462 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"\01c l=%u:%d-%d:%#lx/%c\00", [42 x i8] zeroinitializer }, align 32
@synchronize_rcu_expedited_wait._entry_ptr.463 = internal global ptr @synchronize_rcu_expedited_wait._entry.461, section ".printk_index", align 4
@synchronize_rcu_expedited_wait._entry.464 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.90, ptr @.str.449, ptr @.str.92, i32 563, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@synchronize_rcu_expedited_wait._entry_ptr.465 = internal global ptr @synchronize_rcu_expedited_wait._entry.464, section ".printk_index", align 4
@synchronize_rcu_expedited_wait.__already_done.466 = internal unnamed_addr global i1 false, section ".data.once", align 1
@sync_rcu_exp_done_unlocked.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@sync_exp_work_done.___tp_str = internal global ptr @.str.467, section "__tracepoint_str", align 4
@.str.467 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"done\00", [27 x i8] zeroinitializer }, align 32
@rcu_nocb_setup._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.468, ptr @.str.469, ptr @.str.97, i32 71, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.468 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"\014rcu: rcu_nocbs= bad CPU range, all CPUs set\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.469 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"rcu_nocb_setup\00", [17 x i8] zeroinitializer }, align 32
@rcu_nocb_setup._entry_ptr = internal global ptr @rcu_nocb_setup._entry, section ".printk_index", align 4
@rcu_nocb_lock.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nocb_unlock.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.470 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@rcu_nocb_do_flush_bypass.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__call_rcu_nocb_wake.___tp_str = internal global ptr @.str.471, section "__tracepoint_str", align 4
@.str.471 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"WakeNotPoll\00", [20 x i8] zeroinitializer }, align 32
@__call_rcu_nocb_wake.___tp_str.472 = internal global ptr @.str.473, section "__tracepoint_str", align 4
@.str.473 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"WakeEmpty\00", [22 x i8] zeroinitializer }, align 32
@__call_rcu_nocb_wake.___tp_str.474 = internal global ptr @.str.475, section "__tracepoint_str", align 4
@.str.475 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"WakeEmptyIsDeferred\00", [44 x i8] zeroinitializer }, align 32
@__call_rcu_nocb_wake.___tp_str.476 = internal global ptr @.str.477, section "__tracepoint_str", align 4
@.str.477 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"WakeOvfIsDeferred\00", [46 x i8] zeroinitializer }, align 32
@__call_rcu_nocb_wake.___tp_str.478 = internal global ptr @.str.479, section "__tracepoint_str", align 4
@.str.479 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"WakeNot\00", [24 x i8] zeroinitializer }, align 32
@__call_rcu_nocb_wake.___tp_str.480 = internal global ptr @.str.479, section "__tracepoint_str", align 4
@rcu_nocb_rdp_deoffload.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nocb_rdp_deoffload._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.481, ptr @.str.482, ptr @.str.97, i32 1001, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.481 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"\016rcu: De-offloading %d\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.482 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"rcu_nocb_rdp_deoffload\00", [41 x i8] zeroinitializer }, align 32
@rcu_nocb_rdp_deoffload._entry_ptr = internal global ptr @rcu_nocb_rdp_deoffload._entry, section ".printk_index", align 4
@rcu_nocb_rdp_deoffload.__already_done.483 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nocb_rdp_deoffload.__already_done.484 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nocb_rdp_offload.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nocb_rdp_offload._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.485, ptr @.str.486, ptr @.str.97, i32 1091, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.485 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"\016rcu: Offloading %d\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.486 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"rcu_nocb_rdp_offload\00", [43 x i8] zeroinitializer }, align 32
@rcu_nocb_rdp_offload._entry_ptr = internal global ptr @rcu_nocb_rdp_offload._entry, section ".printk_index", align 4
@.str.487 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"rcuog/%d\00", [23 x i8] zeroinitializer }, align 32
@rcu_spawn_cpu_nocb_kthread.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.488 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"%s: Could not start rcuo GP kthread, OOM is now expected behavior\0A\00", [61 x i8] zeroinitializer }, align 32
@__func__.rcu_spawn_cpu_nocb_kthread = private unnamed_addr constant [27 x i8] c"rcu_spawn_cpu_nocb_kthread\00", align 1
@.str.489 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"rcuo%c/%d\00", [22 x i8] zeroinitializer }, align 32
@rcu_spawn_cpu_nocb_kthread.__already_done.490 = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.491 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"%s: Could not start rcuo CB kthread, OOM is now expected behavior\0A\00", [61 x i8] zeroinitializer }, align 32
@nocb_gp_wait.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@nocb_gp_wait.___tp_str = internal global ptr @.str.492, section "__tracepoint_str", align 4
@.str.492 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"Check\00", [26 x i8] zeroinitializer }, align 32
@nocb_gp_wait.___tp_str.493 = internal global ptr @.str.494, section "__tracepoint_str", align 4
@.str.494 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"Bypass\00", [25 x i8] zeroinitializer }, align 32
@nocb_gp_wait.__already_done.495 = internal unnamed_addr global i1 false, section ".data.once", align 1
@nocb_gp_wait.__already_done.496 = internal unnamed_addr global i1 false, section ".data.once", align 1
@nocb_gp_wait.___tp_str.497 = internal global ptr @.str.498, section "__tracepoint_str", align 4
@.str.498 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"NeedWaitGP\00", [21 x i8] zeroinitializer }, align 32
@nocb_gp_wait.___tp_str.499 = internal global ptr @.str.500, section "__tracepoint_str", align 4
@.str.500 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"WakeBypassIsDeferred\00", [43 x i8] zeroinitializer }, align 32
@nocb_gp_wait.___tp_str.501 = internal global ptr @.str.502, section "__tracepoint_str", align 4
@.str.502 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"Poll\00", [27 x i8] zeroinitializer }, align 32
@nocb_gp_wait.___tp_str.503 = internal global ptr @.str.504, section "__tracepoint_str", align 4
@.str.504 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"Sleep\00", [26 x i8] zeroinitializer }, align 32
@nocb_gp_wait.___tp_str.505 = internal global ptr @.str.506, section "__tracepoint_str", align 4
@.str.506 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"EndSleep\00", [23 x i8] zeroinitializer }, align 32
@nocb_gp_wait.___tp_str.507 = internal global ptr @.str.508, section "__tracepoint_str", align 4
@.str.508 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"StartWait\00", [22 x i8] zeroinitializer }, align 32
@nocb_gp_wait.___tp_str.509 = internal global ptr @.str.510, section "__tracepoint_str", align 4
@.str.510 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"EndWait\00", [24 x i8] zeroinitializer }, align 32
@nocb_gp_update_state_deoffloading.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nocb_try_flush_bypass.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_nocb_bypass_trylock.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@nocb_cb_wait.___tp_str = internal global ptr @.str.511, section "__tracepoint_str", align 4
@.str.511 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"WokeEmpty\00", [22 x i8] zeroinitializer }, align 32
@nocb_cb_wait.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@nocb_cb_wait.__already_done.512 = internal unnamed_addr global i1 false, section ".data.once", align 1
@nocb_cb_wait.__already_done.513 = internal unnamed_addr global i1 false, section ".data.once", align 1
@nocb_cb_wait.___tp_str.514 = internal global ptr @.str.515, section "__tracepoint_str", align 4
@.str.515 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"CBSleep\00", [24 x i8] zeroinitializer }, align 32
@rcu_organize_nocb_kthreads._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.516, ptr @.str.517, ptr @.str.97, i32 1325, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.516 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"\01c%s\0A\00", [26 x i8] zeroinitializer }, align 32
@.str.517 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"rcu_organize_nocb_kthreads\00", [37 x i8] zeroinitializer }, align 32
@rcu_organize_nocb_kthreads._entry_ptr = internal global ptr @rcu_organize_nocb_kthreads._entry, section ".printk_index", align 4
@.str.518 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c" (self only)\00", [19 x i8] zeroinitializer }, align 32
@rcu_organize_nocb_kthreads._entry.519 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.520, ptr @.str.517, ptr @.str.97, i32 1329, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.520 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\011rcu: %s: No-CB GP kthread CPU %d:\00", [60 x i8] zeroinitializer }, align 32
@rcu_organize_nocb_kthreads._entry_ptr.521 = internal global ptr @rcu_organize_nocb_kthreads._entry.519, section ".printk_index", align 4
@rcu_organize_nocb_kthreads._entry.522 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.523, ptr @.str.517, ptr @.str.97, i32 1335, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.523 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"\01c %d\00", [26 x i8] zeroinitializer }, align 32
@rcu_organize_nocb_kthreads._entry_ptr.524 = internal global ptr @rcu_organize_nocb_kthreads._entry.522, section ".printk_index", align 4
@rcu_organize_nocb_kthreads._entry.525 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.516, ptr @.str.517, ptr @.str.97, i32 1342, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@rcu_organize_nocb_kthreads._entry_ptr.526 = internal global ptr @rcu_organize_nocb_kthreads._entry.525, section ".printk_index", align 4
@.str.527 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%ld\00", [28 x i8] zeroinitializer }, align 32
@show_rcu_nocb_state._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.528, ptr @.str.529, ptr @.str.97, i32 1438, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.528 = internal constant { [83 x i8], [45 x i8] } { [83 x i8] c"\016rcu:    CB %d^%d->%d %c%c%c%c%c%c F%ld L%ld C%d %c%c%s%c%s%c%c q%ld %c CPU %d%s\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.529 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"show_rcu_nocb_state\00", [44 x i8] zeroinitializer }, align 32
@show_rcu_nocb_state._entry_ptr = internal global ptr @show_rcu_nocb_state._entry, section ".printk_index", align 4
@.str.530 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"kK\00", [29 x i8] zeroinitializer }, align 32
@.str.531 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"bB\00", [29 x i8] zeroinitializer }, align 32
@.str.532 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"cC\00", [29 x i8] zeroinitializer }, align 32
@.str.533 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"lL\00", [29 x i8] zeroinitializer }, align 32
@.str.534 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"sS\00", [29 x i8] zeroinitializer }, align 32
@.str.535 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c".W\00", [29 x i8] zeroinitializer }, align 32
@.str.536 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c".D\00", [29 x i8] zeroinitializer }, align 32
@.str.537 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c".R\00", [29 x i8] zeroinitializer }, align 32
@.str.538 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c".N\00", [29 x i8] zeroinitializer }, align 32
@show_rcu_nocb_state._entry.539 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.540, ptr @.str.529, ptr @.str.97, i32 1453, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.540 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\016rcu:    nocb GP activity on CB-only CPU!!! %c%c%c %c\0A\00", [40 x i8] zeroinitializer }, align 32
@show_rcu_nocb_state._entry_ptr.541 = internal global ptr @show_rcu_nocb_state._entry.539, section ".printk_index", align 4
@.str.542 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"dD\00", [29 x i8] zeroinitializer }, align 32
@show_rcu_nocb_gp_state._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.543, ptr @.str.544, ptr @.str.97, i32 1393, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.543 = internal constant { [74 x i8], [54 x i8] } { [74 x i8] c"\016rcu: nocb GP %d %c%c%c%c%c %c[%c%c] %c%c:%ld rnp %d:%d %lu %c CPU %d%s\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.544 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"show_rcu_nocb_gp_state\00", [41 x i8] zeroinitializer }, align 32
@show_rcu_nocb_gp_state._entry_ptr = internal global ptr @show_rcu_nocb_gp_state._entry, section ".printk_index", align 4
@.str.545 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"tT\00", [29 x i8] zeroinitializer }, align 32
@task_index_to_char.state_char = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"RSDTtXZPI\00", [22 x i8] zeroinitializer }, align 32
@.str.546 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"!\00", [30 x i8] zeroinitializer }, align 32
@rcu_rdp_is_offloaded.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.547 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Unsafe read of RCU_NOCB offloaded state\00", [56 x i8] zeroinitializer }, align 32
@rcu_report_qs_rdp.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_report_qs_rdp.__already_done.548 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_report_qs_rdp.__already_done.549 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_bootup_announce._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.550, ptr @.str.551, ptr @.str.280, i32 832, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.550 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\016rcu: Hierarchical RCU implementation.\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.551 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rcu_bootup_announce\00", [44 x i8] zeroinitializer }, align 32
@rcu_bootup_announce._entry_ptr = internal global ptr @rcu_bootup_announce._entry, section ".printk_index", align 4
@rcu_bootup_announce_oddness._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.552, ptr @.str.553, ptr @.str.280, i32 47, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.552 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\016rcu: \09RCU event tracing is enabled.\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.553 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"rcu_bootup_announce_oddness\00", [36 x i8] zeroinitializer }, align 32
@rcu_bootup_announce_oddness._entry_ptr = internal global ptr @rcu_bootup_announce_oddness._entry, section ".printk_index", align 4
@rcu_bootup_announce_oddness._entry.554 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.555, ptr @.str.553, ptr @.str.280, i32 53, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.555 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\016rcu: \09Hierarchical RCU autobalancing is disabled.\0A\00", [43 x i8] zeroinitializer }, align 32
@rcu_bootup_announce_oddness._entry_ptr.556 = internal global ptr @rcu_bootup_announce_oddness._entry.554, section ".printk_index", align 4
@rcu_bootup_announce_oddness._entry.557 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.558, ptr @.str.553, ptr @.str.280, i32 55, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.558 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\016rcu: \09RCU lockdep checking is enabled.\0A\00", [54 x i8] zeroinitializer }, align 32
@rcu_bootup_announce_oddness._entry_ptr.559 = internal global ptr @rcu_bootup_announce_oddness._entry.557, section ".printk_index", align 4
@rcu_bootup_announce_oddness._entry.560 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.561, ptr @.str.553, ptr @.str.280, i32 57, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.561 = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"\016rcu: \09RCU strict (and thus non-scalable) grace periods are enabled.\0A\00", [57 x i8] zeroinitializer }, align 32
@rcu_bootup_announce_oddness._entry_ptr.562 = internal global ptr @rcu_bootup_announce_oddness._entry.560, section ".printk_index", align 4
@rcu_bootup_announce_oddness._entry.563 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.564, ptr @.str.553, ptr @.str.280, i32 62, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.564 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\016rcu: \09Build-time adjustment of leaf fanout to %d.\0A\00", [43 x i8] zeroinitializer }, align 32
@rcu_bootup_announce_oddness._entry_ptr.565 = internal global ptr @rcu_bootup_announce_oddness._entry.563, section ".printk_index", align 4
@rcu_bootup_announce_oddness._entry.566 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.567, ptr @.str.553, ptr @.str.280, i32 65, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.567 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\016rcu: \09Boot-time adjustment of leaf fanout to %d.\0A\00", [44 x i8] zeroinitializer }, align 32
@rcu_bootup_announce_oddness._entry_ptr.568 = internal global ptr @rcu_bootup_announce_oddness._entry.566, section ".printk_index", align 4
@rcu_bootup_announce_oddness._entry.569 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.570, ptr @.str.553, ptr @.str.280, i32 67, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.570 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\016rcu: \09RCU restricting CPUs from NR_CPUS=%d to nr_cpu_ids=%u.\0A\00", [32 x i8] zeroinitializer }, align 32
@rcu_bootup_announce_oddness._entry_ptr.571 = internal global ptr @rcu_bootup_announce_oddness._entry.569, section ".printk_index", align 4
@rcu_bootup_announce_oddness._entry.572 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.573, ptr @.str.553, ptr @.str.280, i32 73, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.573 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"\016rcu: \09Boot-time adjustment of callback invocation limit to %ld.\0A\00", [61 x i8] zeroinitializer }, align 32
@rcu_bootup_announce_oddness._entry_ptr.574 = internal global ptr @rcu_bootup_announce_oddness._entry.572, section ".printk_index", align 4
@rcu_bootup_announce_oddness._entry.575 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.576, ptr @.str.553, ptr @.str.280, i32 75, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.576 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\016rcu: \09Boot-time adjustment of callback high-water mark to %ld.\0A\00", [62 x i8] zeroinitializer }, align 32
@rcu_bootup_announce_oddness._entry_ptr.577 = internal global ptr @rcu_bootup_announce_oddness._entry.575, section ".printk_index", align 4
@rcu_bootup_announce_oddness._entry.578 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.579, ptr @.str.553, ptr @.str.280, i32 77, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.579 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\016rcu: \09Boot-time adjustment of callback low-water mark to %ld.\0A\00", [63 x i8] zeroinitializer }, align 32
@rcu_bootup_announce_oddness._entry_ptr.580 = internal global ptr @rcu_bootup_announce_oddness._entry.578, section ".printk_index", align 4
@rcu_bootup_announce_oddness._entry.581 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.582, ptr @.str.553, ptr @.str.280, i32 79, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.582 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\016rcu: \09Boot-time adjustment of callback overload level to %ld.\0A\00", [63 x i8] zeroinitializer }, align 32
@rcu_bootup_announce_oddness._entry_ptr.583 = internal global ptr @rcu_bootup_announce_oddness._entry.581, section ".printk_index", align 4
@rcu_bootup_announce_oddness._entry.584 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.585, ptr @.str.553, ptr @.str.280, i32 81, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.585 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\016rcu: \09Boot-time adjustment of first FQS scan delay to %ld jiffies.\0A\00", [58 x i8] zeroinitializer }, align 32
@rcu_bootup_announce_oddness._entry_ptr.586 = internal global ptr @rcu_bootup_announce_oddness._entry.584, section ".printk_index", align 4
@rcu_bootup_announce_oddness._entry.587 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.588, ptr @.str.553, ptr @.str.280, i32 83, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.588 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"\016rcu: \09Boot-time adjustment of subsequent FQS scan delay to %ld jiffies.\0A\00", [53 x i8] zeroinitializer }, align 32
@rcu_bootup_announce_oddness._entry_ptr.589 = internal global ptr @rcu_bootup_announce_oddness._entry.587, section ".printk_index", align 4
@rcu_bootup_announce_oddness._entry.590 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.591, ptr @.str.553, ptr @.str.280, i32 85, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.591 = internal constant { [76 x i8], [52 x i8] } { [76 x i8] c"\016rcu: \09Boot-time adjustment of scheduler-enlistment delay to %ld jiffies.\0A\00", [52 x i8] zeroinitializer }, align 32
@rcu_bootup_announce_oddness._entry_ptr.592 = internal global ptr @rcu_bootup_announce_oddness._entry.590, section ".printk_index", align 4
@rcu_bootup_announce_oddness._entry.593 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.594, ptr @.str.553, ptr @.str.280, i32 87, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.594 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\016rcu: \09Kick kthreads if too-long grace period.\0A\00", [47 x i8] zeroinitializer }, align 32
@rcu_bootup_announce_oddness._entry_ptr.595 = internal global ptr @rcu_bootup_announce_oddness._entry.593, section ".printk_index", align 4
@rcu_bootup_announce_oddness._entry.596 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.597, ptr @.str.553, ptr @.str.280, i32 89, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.597 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\016rcu: \09RCU callback double-/use-after-free debug is enabled.\0A\00", [33 x i8] zeroinitializer }, align 32
@rcu_bootup_announce_oddness._entry_ptr.598 = internal global ptr @rcu_bootup_announce_oddness._entry.596, section ".printk_index", align 4
@rcu_bootup_announce_oddness._entry.599 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.600, ptr @.str.553, ptr @.str.280, i32 91, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.600 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\016rcu: \09RCU debug GP pre-init slowdown %d jiffies.\0A\00", [44 x i8] zeroinitializer }, align 32
@rcu_bootup_announce_oddness._entry_ptr.601 = internal global ptr @rcu_bootup_announce_oddness._entry.599, section ".printk_index", align 4
@rcu_bootup_announce_oddness._entry.602 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.603, ptr @.str.553, ptr @.str.280, i32 93, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.603 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\016rcu: \09RCU debug GP init slowdown %d jiffies.\0A\00", [48 x i8] zeroinitializer }, align 32
@rcu_bootup_announce_oddness._entry_ptr.604 = internal global ptr @rcu_bootup_announce_oddness._entry.602, section ".printk_index", align 4
@rcu_bootup_announce_oddness._entry.605 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.606, ptr @.str.553, ptr @.str.280, i32 95, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.606 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\016rcu: \09RCU debug GP cleanup slowdown %d jiffies.\0A\00", [45 x i8] zeroinitializer }, align 32
@rcu_bootup_announce_oddness._entry_ptr.607 = internal global ptr @rcu_bootup_announce_oddness._entry.605, section ".printk_index", align 4
@rcu_bootup_announce_oddness._entry.608 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.609, ptr @.str.553, ptr @.str.280, i32 97, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.609 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\016rcu: \09RCU_SOFTIRQ processing moved to rcuc kthreads.\0A\00", [40 x i8] zeroinitializer }, align 32
@rcu_bootup_announce_oddness._entry_ptr.610 = internal global ptr @rcu_bootup_announce_oddness._entry.608, section ".printk_index", align 4
@rcu_bootup_announce_oddness._entry.611 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.612, ptr @.str.553, ptr @.str.280, i32 99, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.612 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\016rcu: \09RCU debug extended QS entry/exit.\0A\00", [53 x i8] zeroinitializer }, align 32
@rcu_bootup_announce_oddness._entry_ptr.613 = internal global ptr @rcu_bootup_announce_oddness._entry.611, section ".printk_index", align 4
@rcu_qs.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.614 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_qs() invoked with preemption enabled!!!\00", [52 x i8] zeroinitializer }, align 32
@rcu_qs.___tp_str = internal global ptr @.str.615, section "__tracepoint_str", align 4
@.str.615 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"rcu_sched\00", [22 x i8] zeroinitializer }, align 32
@rcu_qs.___tp_str.616 = internal global ptr @.str.617, section "__tracepoint_str", align 4
@.str.617 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"cpuqs\00", [26 x i8] zeroinitializer }, align 32
@___asan_gen_.618 = private unnamed_addr constant [9 x i8] c"rcu_name\00", align 1
@___asan_gen_.619 = private unnamed_addr constant [21 x i8] c"../kernel/rcu/tree.h\00", align 1
@___asan_gen_.620 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.619, i32 397, i32 13 }
@___asan_gen_.621 = private unnamed_addr constant [10 x i8] c"dump_tree\00", align 1
@___asan_gen_.623 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 98, i32 13 }
@___asan_gen_.624 = private unnamed_addr constant [12 x i8] c"use_softirq\00", align 1
@___asan_gen_.626 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 101, i32 13 }
@___asan_gen_.627 = private unnamed_addr constant [17 x i8] c"rcu_fanout_exact\00", align 1
@___asan_gen_.629 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 106, i32 13 }
@___asan_gen_.630 = private unnamed_addr constant [16 x i8] c"rcu_fanout_leaf\00", align 1
@___asan_gen_.632 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 109, i32 12 }
@___asan_gen_.633 = private unnamed_addr constant [12 x i8] c"num_rcu_lvl\00", align 1
@___asan_gen_.635 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 113, i32 5 }
@___asan_gen_.636 = private unnamed_addr constant [13 x i8] c"kthread_prio\00", align 1
@___asan_gen_.638 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 157, i32 12 }
@___asan_gen_.639 = private unnamed_addr constant [17 x i8] c"gp_preinit_delay\00", align 1
@___asan_gen_.641 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 162, i32 12 }
@___asan_gen_.642 = private unnamed_addr constant [14 x i8] c"gp_init_delay\00", align 1
@___asan_gen_.644 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 164, i32 12 }
@___asan_gen_.645 = private unnamed_addr constant [17 x i8] c"gp_cleanup_delay\00", align 1
@___asan_gen_.647 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 166, i32 12 }
@___asan_gen_.648 = private unnamed_addr constant [17 x i8] c"rcu_unlock_delay\00", align 1
@___asan_gen_.650 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 170, i32 12 }
@___asan_gen_.651 = private unnamed_addr constant [20 x i8] c"rcu_min_cached_objs\00", align 1
@___asan_gen_.653 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 181, i32 12 }
@___asan_gen_.654 = private unnamed_addr constant [31 x i8] c"rcu_delay_page_cache_fill_msec\00", align 1
@___asan_gen_.656 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 192, i32 12 }
@___asan_gen_.659 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 409, i32 2 }
@___asan_gen_.660 = private unnamed_addr constant [7 x i8] c"blimit\00", align 1
@___asan_gen_.662 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 456, i32 13 }
@___asan_gen_.663 = private unnamed_addr constant [8 x i8] c"qhimark\00", align 1
@___asan_gen_.665 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 458, i32 13 }
@___asan_gen_.666 = private unnamed_addr constant [9 x i8] c"qlowmark\00", align 1
@___asan_gen_.668 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 460, i32 13 }
@___asan_gen_.669 = private unnamed_addr constant [6 x i8] c"qovld\00", align 1
@___asan_gen_.671 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 463, i32 13 }
@___asan_gen_.672 = private unnamed_addr constant [12 x i8] c"rcu_divisor\00", align 1
@___asan_gen_.674 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 474, i32 12 }
@___asan_gen_.675 = private unnamed_addr constant [15 x i8] c"rcu_resched_ns\00", align 1
@___asan_gen_.677 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 478, i32 13 }
@___asan_gen_.678 = private unnamed_addr constant [22 x i8] c"jiffies_till_sched_qs\00", align 1
@___asan_gen_.680 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 485, i32 14 }
@___asan_gen_.681 = private unnamed_addr constant [20 x i8] c"jiffies_to_sched_qs\00", align 1
@___asan_gen_.683 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 487, i32 14 }
@___asan_gen_.684 = private unnamed_addr constant [22 x i8] c"first_fqs_jiffies_ops\00", align 1
@___asan_gen_.686 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 538, i32 38 }
@___asan_gen_.687 = private unnamed_addr constant [23 x i8] c"jiffies_till_first_fqs\00", align 1
@___asan_gen_.689 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 471, i32 14 }
@___asan_gen_.690 = private unnamed_addr constant [21 x i8] c"next_fqs_jiffies_ops\00", align 1
@___asan_gen_.692 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 543, i32 38 }
@___asan_gen_.693 = private unnamed_addr constant [22 x i8] c"jiffies_till_next_fqs\00", align 1
@___asan_gen_.695 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 472, i32 14 }
@___asan_gen_.696 = private unnamed_addr constant [18 x i8] c"rcu_kick_kthreads\00", align 1
@___asan_gen_.698 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 473, i32 13 }
@___asan_gen_.701 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 758, i32 21 }
@___asan_gen_.704 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 767, i32 20 }
@___asan_gen_.707 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 815, i32 2 }
@___asan_gen_.710 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 817, i32 2 }
@___asan_gen_.713 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 820, i32 2 }
@___asan_gen_.716 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1026, i32 33 }
@___asan_gen_.719 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1026, i32 49 }
@___asan_gen_.720 = private unnamed_addr constant [15 x i8] c"sleep_duration\00", align 1
@___asan_gen_.722 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1703, i32 22 }
@___asan_gen_.725 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 2390, i32 18 }
@___asan_gen_.728 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 2390, i32 38 }
@___asan_gen_.731 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 2604, i32 24 }
@___asan_gen_.734 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 2621, i32 24 }
@___asan_gen_.737 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 3197, i32 10 }
@___asan_gen_.740 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 3584, i32 3 }
@___asan_gen_.743 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 3778, i32 2 }
@___asan_gen_.746 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4023, i32 20 }
@___asan_gen_.749 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4030, i32 21 }
@___asan_gen_.752 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4039, i32 20 }
@___asan_gen_.755 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4063, i32 22 }
@___asan_gen_.758 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4068, i32 22 }
@___asan_gen_.761 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4074, i32 22 }
@___asan_gen_.764 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4077, i32 22 }
@___asan_gen_.767 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4094, i32 20 }
@___asan_gen_.770 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4197, i32 54 }
@___asan_gen_.773 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4407, i32 2 }
@___asan_gen_.774 = private unnamed_addr constant [15 x i8] c"old_nr_cpu_ids\00", align 1
@___asan_gen_.776 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4596, i32 23 }
@___asan_gen_.777 = private unnamed_addr constant [30 x i8] c"rcu_init_geometry.initialized\00", align 1
@___asan_gen_.786 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4630, i32 2 }
@___asan_gen_.787 = private unnamed_addr constant [17 x i8] c"rcu_pm_notify_nb\00", align 1
@___asan_gen_.789 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4759, i32 2 }
@___asan_gen_.792 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4767, i32 30 }
@___asan_gen_.793 = private unnamed_addr constant [10 x i8] c"rcu_gp_wq\00", align 1
@___asan_gen_.795 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4703, i32 26 }
@___asan_gen_.798 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4769, i32 34 }
@___asan_gen_.799 = private unnamed_addr constant [14 x i8] c"rcu_par_gp_wq\00", align 1
@___asan_gen_.801 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4704, i32 26 }
@___asan_gen_.802 = private unnamed_addr constant [11 x i8] c"qovld_calc\00", align 1
@___asan_gen_.804 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 464, i32 13 }
@___asan_gen_.807 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 761, i32 4 }
@___asan_gen_.816 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 800, i32 2 }
@___asan_gen_.834 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 814, i32 3 }
@___asan_gen_.840 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 832, i32 4 }
@___asan_gen_.846 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 842, i32 2 }
@___asan_gen_.855 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 919, i32 3 }
@___asan_gen_.861 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 923, i32 3 }
@___asan_gen_.867 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 935, i32 4 }
@___asan_gen_.873 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 936, i32 3 }
@___asan_gen_.879 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 943, i32 3 }
@___asan_gen_.880 = private unnamed_addr constant [10 x i8] c"sysrq_rcu\00", align 1
@___asan_gen_.882 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 948, i32 13 }
@___asan_gen_.888 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1731, i32 823, i32 2 }
@___asan_gen_.894 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1731, i32 850, i32 3 }
@___asan_gen_.895 = private unnamed_addr constant [28 x i8] c"nocb_nobypass_lim_per_jiffy\00", align 1
@___asan_gen_.897 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 92, i32 12 }
@___asan_gen_.898 = private unnamed_addr constant [14 x i8] c"rcu_nocb_mask\00", align 1
@___asan_gen_.900 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 17, i32 22 }
@___asan_gen_.912 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1065, i32 4 }
@___asan_gen_.921 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1154, i32 4 }
@___asan_gen_.930 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1179, i32 5 }
@___asan_gen_.931 = private unnamed_addr constant [18 x i8] c"rcu_nocb_is_setup\00", align 1
@___asan_gen_.937 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1195, i32 3 }
@___asan_gen_.943 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1200, i32 3 }
@___asan_gen_.949 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1202, i32 3 }
@___asan_gen_.955 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1205, i32 3 }
@___asan_gen_.956 = private unnamed_addr constant [19 x i8] c"rcu_nocb_gp_stride\00", align 1
@___asan_gen_.958 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1285, i32 12 }
@___asan_gen_.961 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 889, i32 24 }
@___asan_gen_.964 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 899, i32 24 }
@___asan_gen_.970 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 89, i32 19 }
@___asan_gen_.976 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 92, i32 15 }
@___asan_gen_.982 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 93, i32 20 }
@___asan_gen_.985 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 94, i32 14 }
@___asan_gen_.988 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 625, i32 20 }
@___asan_gen_.993 = private unnamed_addr constant [30 x i8] c"../include/trace/events/rcu.h\00", align 1
@___asan_gen_.994 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.993, i32 480, i32 1 }
@___asan_gen_.997 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 871, i32 20 }
@___asan_gen_.1000 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 434, i32 2 }
@___asan_gen_.1003 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 436, i32 2 }
@___asan_gen_.1009 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 3017, i32 4 }
@___asan_gen_.1012 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 3053, i32 38 }
@___asan_gen_.1015 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 436, i32 10 }
@___asan_gen_.1018 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 473, i32 49 }
@___asan_gen_.1021 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 484, i32 10 }
@___asan_gen_.1024 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 488, i32 10 }
@___asan_gen_.1027 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1644, i32 55 }
@___asan_gen_.1030 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1660, i32 55 }
@___asan_gen_.1033 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1509, i32 38 }
@___asan_gen_.1036 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1527, i32 54 }
@___asan_gen_.1039 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1529, i32 54 }
@___asan_gen_.1042 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1531, i32 38 }
@___asan_gen_.1048 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1050, i32 695, i32 2 }
@___asan_gen_.1050 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.1051 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1050, i32 723, i32 2 }
@___asan_gen_.1054 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1386, i32 48 }
@___asan_gen_.1057 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1395, i32 8 }
@___asan_gen_.1060 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1407, i32 8 }
@___asan_gen_.1063 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1418, i32 43 }
@___asan_gen_.1066 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1421, i32 42 }
@___asan_gen_.1069 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1425, i32 43 }
@___asan_gen_.1072 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1428, i32 70 }
@___asan_gen_.1075 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 690, i32 4 }
@___asan_gen_.1078 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 708, i32 4 }
@___asan_gen_.1081 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 171, i32 3 }
@___asan_gen_.1082 = private unnamed_addr constant [16 x i8] c"___rfd_beenhere\00", align 1
@___asan_gen_.1084 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 173, i32 3 }
@___asan_gen_.1087 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 590, i32 42 }
@___asan_gen_.1096 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 591, i32 2 }
@___asan_gen_.1102 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 597, i32 2 }
@___asan_gen_.1105 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 409, i32 17 }
@___asan_gen_.1108 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 411, i32 17 }
@___asan_gen_.1135 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 417, i32 2 }
@___asan_gen_.1144 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 486, i32 3 }
@___asan_gen_.1150 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 492, i32 3 }
@___asan_gen_.1159 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 442, i32 3 }
@___asan_gen_.1165 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 450, i32 4 }
@___asan_gen_.1171 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 451, i32 4 }
@___asan_gen_.1177 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 455, i32 6 }
@___asan_gen_.1183 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 457, i32 6 }
@___asan_gen_.1192 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 342, i32 6 }
@___asan_gen_.1193 = private unnamed_addr constant [10 x i8] c"cpu_stall\00", align 1
@___asan_gen_.1195 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 112, i32 13 }
@___asan_gen_.1198 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 118, i32 9 }
@___asan_gen_.1201 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 519, i32 42 }
@___asan_gen_.1210 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 520, i32 2 }
@___asan_gen_.1216 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 536, i32 2 }
@___asan_gen_.1222 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 547, i32 4 }
@___asan_gen_.1228 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 551, i32 4 }
@___asan_gen_.1230 = private unnamed_addr constant [20 x i8] c"../kernel/rcu/rcu.h\00", align 1
@___asan_gen_.1231 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1230, i32 59, i32 2 }
@___asan_gen_.1236 = private unnamed_addr constant [30 x i8] c"../include/linux/completion.h\00", align 1
@___asan_gen_.1237 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1236, i32 87, i32 2 }
@___asan_gen_.1240 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 3994, i32 20 }
@___asan_gen_.1243 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4003, i32 21 }
@___asan_gen_.1246 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 3979, i32 21 }
@___asan_gen_.1249 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 3982, i32 21 }
@___asan_gen_.1258 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4460, i32 3 }
@___asan_gen_.1261 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4464, i32 6 }
@___asan_gen_.1264 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4465, i32 6 }
@___asan_gen_.1267 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 2118, i32 13 }
@___asan_gen_.1270 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 2132, i32 13 }
@___asan_gen_.1279 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1722, i32 3 }
@___asan_gen_.1285 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1724, i32 3 }
@___asan_gen_.1288 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1772, i32 59 }
@___asan_gen_.1291 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 948, i32 2 }
@___asan_gen_.1294 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1961, i32 12 }
@___asan_gen_.1297 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1976, i32 13 }
@___asan_gen_.1300 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1984, i32 13 }
@___asan_gen_.1303 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1995, i32 13 }
@___asan_gen_.1306 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1213, i32 56 }
@___asan_gen_.1315 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1267, i32 3 }
@___asan_gen_.1321 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1271, i32 4 }
@___asan_gen_.1330 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1274, i32 3 }
@___asan_gen_.1333 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 2077, i32 59 }
@___asan_gen_.1336 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 2085, i32 7 }
@___asan_gen_.1339 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 1454, i32 38 }
@___asan_gen_.1340 = private unnamed_addr constant [20 x i8] c"rcu_cpu_thread_spec\00", align 1
@___asan_gen_.1342 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 2879, i32 34 }
@___asan_gen_.1345 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 2899, i32 2 }
@___asan_gen_.1348 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 2883, i32 18 }
@___asan_gen_.1351 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 2855, i32 24 }
@___asan_gen_.1354 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 2867, i32 26 }
@___asan_gen_.1357 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 2873, i32 24 }
@___asan_gen_.1360 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 2875, i32 24 }
@___asan_gen_.1363 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 2750, i32 24 }
@___asan_gen_.1366 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 2786, i32 24 }
@___asan_gen_.1369 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 2509, i32 38 }
@___asan_gen_.1378 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 510, i32 2 }
@___asan_gen_.1387 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4719, i32 3 }
@___asan_gen_.1393 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4727, i32 4 }
@___asan_gen_.1405 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4731, i32 3 }
@___asan_gen_.1417 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4732, i32 3 }
@___asan_gen_.1418 = private unnamed_addr constant [19 x i8] c"kfree_rcu_shrinker\00", align 1
@___asan_gen_.1420 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 3672, i32 24 }
@___asan_gen_.1426 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4736, i32 3 }
@___asan_gen_.1427 = private unnamed_addr constant [4 x i8] c"buf\00", align 1
@___asan_gen_.1429 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4510, i32 28 }
@___asan_gen_.1435 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4510, i32 36 }
@___asan_gen_.1436 = private unnamed_addr constant [4 x i8] c"fqs\00", align 1
@___asan_gen_.1438 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4511, i32 28 }
@___asan_gen_.1444 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4511, i32 36 }
@___asan_gen_.1445 = private unnamed_addr constant [15 x i8] c"rcu_node_class\00", align 1
@___asan_gen_.1447 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4512, i32 31 }
@___asan_gen_.1448 = private unnamed_addr constant [14 x i8] c"rcu_fqs_class\00", align 1
@___asan_gen_.1450 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4513, i32 31 }
@___asan_gen_.1453 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4525, i32 9 }
@___asan_gen_.1459 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4540, i32 4 }
@___asan_gen_.1465 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4543, i32 4 }
@___asan_gen_.1471 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4568, i32 4 }
@___asan_gen_.1477 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4569, i32 4 }
@___asan_gen_.1483 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4570, i32 4 }
@___asan_gen_.1489 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4571, i32 4 }
@___asan_gen_.1495 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4572, i32 4 }
@___asan_gen_.1501 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4576, i32 2 }
@___asan_gen_.1507 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4577, i32 2 }
@___asan_gen_.1513 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 214, i32 2 }
@___asan_gen_.1519 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 215, i32 2 }
@___asan_gen_.1525 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4140, i32 2 }
@___asan_gen_.1531 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1221, i32 2 }
@___asan_gen_.1537 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1222, i32 2 }
@___asan_gen_.1543 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1223, i32 2 }
@___asan_gen_.1549 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1224, i32 2 }
@___asan_gen_.1555 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1225, i32 2 }
@___asan_gen_.1561 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1226, i32 2 }
@___asan_gen_.1567 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1227, i32 2 }
@___asan_gen_.1570 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 929, i32 48 }
@___asan_gen_.1573 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 917, i32 48 }
@___asan_gen_.1576 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 236, i32 9 }
@___asan_gen_.1579 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 251, i32 49 }
@___asan_gen_.1588 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4690, i32 2 }
@___asan_gen_.1594 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4691, i32 2 }
@___asan_gen_.1597 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4694, i32 4 }
@___asan_gen_.1600 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4695, i32 4 }
@___asan_gen_.1606 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4698, i32 3 }
@___asan_gen_.1608 = private constant [21 x i8] c"../kernel/rcu/tree.c\00", align 1
@___asan_gen_.1609 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1608, i32 4700, i32 2 }
@___asan_gen_.1610 = private unnamed_addr constant [16 x i8] c"rcu_panic_block\00", align 1
@___asan_gen_.1612 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 98, i32 30 }
@___asan_gen_.1615 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 368, i32 10 }
@___asan_gen_.1616 = private unnamed_addr constant [15 x i8] c"gp_state_names\00", align 1
@___asan_gen_.1618 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 350, i32 27 }
@___asan_gen_.1621 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 351, i32 18 }
@___asan_gen_.1624 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 352, i32 22 }
@___asan_gen_.1627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 353, i32 22 }
@___asan_gen_.1630 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 354, i32 19 }
@___asan_gen_.1633 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 355, i32 18 }
@___asan_gen_.1636 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 356, i32 22 }
@___asan_gen_.1639 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 357, i32 23 }
@___asan_gen_.1642 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 358, i32 21 }
@___asan_gen_.1645 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 359, i32 21 }
@___asan_gen_.1646 = private unnamed_addr constant [7 x i8] c"warned\00", align 1
@___asan_gen_.1648 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 857, i32 18 }
@___asan_gen_.1649 = private unnamed_addr constant [17 x i8] c"sysrq_rcudump_op\00", align 1
@___asan_gen_.1651 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 957, i32 34 }
@___asan_gen_.1654 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 959, i32 14 }
@___asan_gen_.1656 = private unnamed_addr constant [27 x i8] c"../kernel/rcu/tree_stall.h\00", align 1
@___asan_gen_.1657 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1656, i32 960, i32 16 }
@___asan_gen_.1660 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1731, i32 52, i32 48 }
@___asan_gen_.1663 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1731, i32 312, i32 9 }
@___asan_gen_.1666 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1731, i32 320, i32 32 }
@___asan_gen_.1669 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1731, i32 429, i32 70 }
@___asan_gen_.1672 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1731, i32 431, i32 70 }
@___asan_gen_.1673 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.1678 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1731, i32 445, i32 3 }
@___asan_gen_.1681 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1731, i32 406, i32 72 }
@___asan_gen_.1684 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1731, i32 607, i32 48 }
@___asan_gen_.1687 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1731, i32 498, i32 70 }
@___asan_gen_.1690 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1731, i32 527, i32 43 }
@___asan_gen_.1699 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1731, i32 528, i32 3 }
@___asan_gen_.1705 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1731, i32 541, i32 5 }
@___asan_gen_.1714 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1731, i32 547, i32 3 }
@___asan_gen_.1720 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1731, i32 552, i32 4 }
@___asan_gen_.1726 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1731, i32 558, i32 5 }
@___asan_gen_.1729 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1731, i32 563, i32 4 }
@___asan_gen_.1731 = private unnamed_addr constant [25 x i8] c"../kernel/rcu/tree_exp.h\00", align 1
@___asan_gen_.1732 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1731, i32 266, i32 49 }
@___asan_gen_.1741 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 71, i32 4 }
@___asan_gen_.1743 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.1744 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1743, i32 108, i32 2 }
@___asan_gen_.1747 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 515, i32 9 }
@___asan_gen_.1750 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 527, i32 10 }
@___asan_gen_.1753 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 531, i32 9 }
@___asan_gen_.1756 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 549, i32 9 }
@___asan_gen_.1759 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 552, i32 50 }
@___asan_gen_.1768 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1001, i32 2 }
@___asan_gen_.1777 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1091, i32 2 }
@___asan_gen_.1780 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1252, i32 7 }
@___asan_gen_.1783 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1254, i32 7 }
@___asan_gen_.1786 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1260, i32 6 }
@___asan_gen_.1789 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1262, i32 6 }
@___asan_gen_.1792 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 653, i32 49 }
@___asan_gen_.1795 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 676, i32 10 }
@___asan_gen_.1798 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 703, i32 10 }
@___asan_gen_.1801 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 731, i32 8 }
@___asan_gen_.1804 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 736, i32 45 }
@___asan_gen_.1807 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 740, i32 44 }
@___asan_gen_.1810 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 743, i32 44 }
@___asan_gen_.1813 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 746, i32 47 }
@___asan_gen_.1816 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 751, i32 47 }
@___asan_gen_.1819 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 819, i32 50 }
@___asan_gen_.1822 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 868, i32 49 }
@___asan_gen_.1834 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1324, i32 6 }
@___asan_gen_.1840 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1328, i32 5 }
@___asan_gen_.1846 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1335, i32 5 }
@___asan_gen_.1849 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1342, i32 3 }
@___asan_gen_.1852 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1414, i32 16 }
@___asan_gen_.1888 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1416, i32 2 }
@___asan_gen_.1897 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1449, i32 2 }
@___asan_gen_.1909 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1377, i32 2 }
@___asan_gen_.1910 = private unnamed_addr constant [11 x i8] c"state_char\00", align 1
@___asan_gen_.1911 = private unnamed_addr constant [25 x i8] c"../include/linux/sched.h\00", align 1
@___asan_gen_.1912 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1911, i32 1638, i32 20 }
@___asan_gen_.1914 = private unnamed_addr constant [26 x i8] c"../kernel/rcu/tree_nocb.h\00", align 1
@___asan_gen_.1915 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1914, i32 1360, i32 55 }
@___asan_gen_.1918 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 27, i32 2 }
@___asan_gen_.1927 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 832, i32 2 }
@___asan_gen_.1936 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 47, i32 3 }
@___asan_gen_.1942 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 53, i32 3 }
@___asan_gen_.1948 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 55, i32 3 }
@___asan_gen_.1954 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 57, i32 3 }
@___asan_gen_.1960 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 61, i32 3 }
@___asan_gen_.1966 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 64, i32 3 }
@___asan_gen_.1972 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 67, i32 3 }
@___asan_gen_.1978 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 73, i32 3 }
@___asan_gen_.1984 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 75, i32 3 }
@___asan_gen_.1990 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 77, i32 3 }
@___asan_gen_.1996 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 79, i32 3 }
@___asan_gen_.2002 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 81, i32 3 }
@___asan_gen_.2008 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 83, i32 3 }
@___asan_gen_.2014 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 85, i32 3 }
@___asan_gen_.2020 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 87, i32 3 }
@___asan_gen_.2026 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 89, i32 3 }
@___asan_gen_.2032 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 91, i32 3 }
@___asan_gen_.2038 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 93, i32 3 }
@___asan_gen_.2044 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 95, i32 3 }
@___asan_gen_.2050 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 97, i32 3 }
@___asan_gen_.2051 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.2056 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 99, i32 3 }
@___asan_gen_.2059 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 844, i32 2 }
@___asan_gen_.2062 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 847, i32 25 }
@___asan_gen_.2063 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.2064 = private unnamed_addr constant [28 x i8] c"../kernel/rcu/tree_plugin.h\00", align 1
@___asan_gen_.2065 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2064, i32 848, i32 45 }
@llvm.compiler.used = appending global [759 x ptr] [ptr @__UNIQUE_ID_blimittype393, ptr @__UNIQUE_ID_dump_treetype365, ptr @__UNIQUE_ID_gp_cleanup_delaytype372, ptr @__UNIQUE_ID_gp_init_delaytype371, ptr @__UNIQUE_ID_gp_preinit_delaytype370, ptr @__UNIQUE_ID_jiffies_till_sched_qstype399, ptr @__UNIQUE_ID_jiffies_to_sched_qstype400, ptr @__UNIQUE_ID_kthread_priotype369, ptr @__UNIQUE_ID_nocb_nobypass_lim_per_jiffytype1386, ptr @__UNIQUE_ID_qhimarktype394, ptr @__UNIQUE_ID_qlowmarktype395, ptr @__UNIQUE_ID_qovldtype396, ptr @__UNIQUE_ID_rcu_delay_page_cache_fill_msectype375, ptr @__UNIQUE_ID_rcu_divisortype397, ptr @__UNIQUE_ID_rcu_fanout_exacttype367, ptr @__UNIQUE_ID_rcu_fanout_leaftype368, ptr @__UNIQUE_ID_rcu_kick_kthreadstype407, ptr @__UNIQUE_ID_rcu_min_cached_objstype374, ptr @__UNIQUE_ID_rcu_nocb_gp_stridetype1516, ptr @__UNIQUE_ID_rcu_resched_nstype398, ptr @__UNIQUE_ID_rcu_unlock_delaytype373, ptr @__UNIQUE_ID_sysrq_rcutype1264, ptr @__UNIQUE_ID_use_softirqtype366, ptr @__call_rcu.___tp_str, ptr @__call_rcu._entry, ptr @__call_rcu._entry_ptr, ptr @__call_rcu_nocb_wake.___tp_str, ptr @__call_rcu_nocb_wake.___tp_str.472, ptr @__call_rcu_nocb_wake.___tp_str.474, ptr @__call_rcu_nocb_wake.___tp_str.476, ptr @__call_rcu_nocb_wake.___tp_str.478, ptr @__call_rcu_nocb_wake.___tp_str.480, ptr @__initcall__kmod_tree__1031_4484_rcu_spawn_gp_kthreadearly, ptr @__initcall__kmod_tree__1041_107_check_cpu_stall_initearly, ptr @__initcall__kmod_tree__1265_970_rcu_sysrq_initearly, ptr @__ksymtab_call_rcu, ptr @__ksymtab_cond_synchronize_rcu, ptr @__ksymtab_get_state_synchronize_rcu, ptr @__ksymtab_kvfree_call_rcu, ptr @__ksymtab_poll_state_synchronize_rcu, ptr @__ksymtab_rcu_all_qs, ptr @__ksymtab_rcu_barrier, ptr @__ksymtab_rcu_bind_current_to_nocb, ptr @__ksymtab_rcu_check_boost_fail, ptr @__ksymtab_rcu_exp_batches_completed, ptr @__ksymtab_rcu_force_quiescent_state, ptr @__ksymtab_rcu_fwd_progress_check, ptr @__ksymtab_rcu_get_gp_kthreads_prio, ptr @__ksymtab_rcu_get_gp_seq, ptr @__ksymtab_rcu_gp_set_torture_wait, ptr @__ksymtab_rcu_idle_enter, ptr @__ksymtab_rcu_idle_exit, ptr @__ksymtab_rcu_is_watching, ptr @__ksymtab_rcu_jiffies_till_stall_check, ptr @__ksymtab_rcu_lockdep_current_cpu_online, ptr @__ksymtab_rcu_momentary_dyntick_idle, ptr @__ksymtab_rcu_nocb_cpu_deoffload, ptr @__ksymtab_rcu_nocb_cpu_offload, ptr @__ksymtab_rcu_nocb_flush_deferred_wakeup, ptr @__ksymtab_rcu_note_context_switch, ptr @__ksymtab_rcu_read_unlock_strict, ptr @__ksymtab_rcu_scheduler_active, ptr @__ksymtab_rcutorture_get_gp_data, ptr @__ksymtab_show_rcu_gp_kthreads, ptr @__ksymtab_start_poll_synchronize_rcu, ptr @__ksymtab_synchronize_rcu, ptr @__ksymtab_synchronize_rcu_expedited, ptr @__note_gp_changes.___tp_str, ptr @__note_gp_changes.___tp_str.159, ptr @__param_blimit, ptr @__param_dump_tree, ptr @__param_gp_cleanup_delay, ptr @__param_gp_init_delay, ptr @__param_gp_preinit_delay, ptr @__param_jiffies_till_first_fqs, ptr @__param_jiffies_till_next_fqs, ptr @__param_jiffies_till_sched_qs, ptr @__param_jiffies_to_sched_qs, ptr @__param_kthread_prio, ptr @__param_nocb_nobypass_lim_per_jiffy, ptr @__param_qhimark, ptr @__param_qlowmark, ptr @__param_qovld, ptr @__param_rcu_delay_page_cache_fill_msec, ptr @__param_rcu_divisor, ptr @__param_rcu_fanout_exact, ptr @__param_rcu_fanout_leaf, ptr @__param_rcu_kick_kthreads, ptr @__param_rcu_min_cached_objs, ptr @__param_rcu_nocb_gp_stride, ptr @__param_rcu_resched_ns, ptr @__param_rcu_unlock_delay, ptr @__param_sysrq_rcu, ptr @__param_use_softirq, ptr @__setup_parse_rcu_nocb_poll, ptr @__setup_rcu_nocb_setup, ptr @__wake_nocb_gp.___tp_str, ptr @__wake_nocb_gp.___tp_str.389, ptr @adjust_jiffies_till_sched_qs._entry, ptr @adjust_jiffies_till_sched_qs._entry_ptr, ptr @do_nocb_deferred_wakeup_common.___tp_str, ptr @do_nocb_deferred_wakeup_timer.___tp_str, ptr @dyntick_save_progress_counter.___tp_str, ptr @exp_funnel_lock.___tp_str, ptr @exp_funnel_lock.___tp_str.428, ptr @exp_funnel_lock.___tp_str.430, ptr @kfree_rcu_batch_init._entry, ptr @kfree_rcu_batch_init._entry.343, ptr @kfree_rcu_batch_init._entry_ptr, ptr @kfree_rcu_batch_init._entry_ptr.345, ptr @nocb_cb_wait.___tp_str, ptr @nocb_cb_wait.___tp_str.514, ptr @nocb_gp_wait.___tp_str, ptr @nocb_gp_wait.___tp_str.493, ptr @nocb_gp_wait.___tp_str.497, ptr @nocb_gp_wait.___tp_str.499, ptr @nocb_gp_wait.___tp_str.501, ptr @nocb_gp_wait.___tp_str.503, ptr @nocb_gp_wait.___tp_str.505, ptr @nocb_gp_wait.___tp_str.507, ptr @nocb_gp_wait.___tp_str.509, ptr @print_cpu_stall.___tp_str, ptr @print_cpu_stall._entry, ptr @print_cpu_stall._entry.191, ptr @print_cpu_stall._entry_ptr, ptr @print_cpu_stall._entry_ptr.193, ptr @print_cpu_stall_info._entry, ptr @print_cpu_stall_info._entry_ptr, ptr @print_other_cpu_stall.___tp_str, ptr @print_other_cpu_stall._entry, ptr @print_other_cpu_stall._entry.233, ptr @print_other_cpu_stall._entry.236, ptr @print_other_cpu_stall._entry.239, ptr @print_other_cpu_stall._entry_ptr, ptr @print_other_cpu_stall._entry_ptr.235, ptr @print_other_cpu_stall._entry_ptr.238, ptr @print_other_cpu_stall._entry_ptr.241, ptr @rcu_accelerate_cbs.___tp_str, ptr @rcu_accelerate_cbs.___tp_str.162, ptr @rcu_accelerate_cbs.___tp_str.164, ptr @rcu_accelerate_cbs.___tp_str.166, ptr @rcu_barrier.___tp_str, ptr @rcu_barrier.___tp_str.28, ptr @rcu_barrier.___tp_str.30, ptr @rcu_barrier.___tp_str.32, ptr @rcu_barrier.___tp_str.34, ptr @rcu_barrier.___tp_str.36, ptr @rcu_barrier.___tp_str.38, ptr @rcu_barrier.___tp_str.40, ptr @rcu_barrier_callback.___tp_str, ptr @rcu_barrier_callback.___tp_str.248, ptr @rcu_barrier_func.___tp_str, ptr @rcu_barrier_func.___tp_str.245, ptr @rcu_bootup_announce._entry, ptr @rcu_bootup_announce._entry_ptr, ptr @rcu_bootup_announce_oddness._entry, ptr @rcu_bootup_announce_oddness._entry.554, ptr @rcu_bootup_announce_oddness._entry.557, ptr @rcu_bootup_announce_oddness._entry.560, ptr @rcu_bootup_announce_oddness._entry.563, ptr @rcu_bootup_announce_oddness._entry.566, ptr @rcu_bootup_announce_oddness._entry.569, ptr @rcu_bootup_announce_oddness._entry.572, ptr @rcu_bootup_announce_oddness._entry.575, ptr @rcu_bootup_announce_oddness._entry.578, ptr @rcu_bootup_announce_oddness._entry.581, ptr @rcu_bootup_announce_oddness._entry.584, ptr @rcu_bootup_announce_oddness._entry.587, ptr @rcu_bootup_announce_oddness._entry.590, ptr @rcu_bootup_announce_oddness._entry.593, ptr @rcu_bootup_announce_oddness._entry.596, ptr @rcu_bootup_announce_oddness._entry.599, ptr @rcu_bootup_announce_oddness._entry.602, ptr @rcu_bootup_announce_oddness._entry.605, ptr @rcu_bootup_announce_oddness._entry.608, ptr @rcu_bootup_announce_oddness._entry.611, ptr @rcu_bootup_announce_oddness._entry_ptr, ptr @rcu_bootup_announce_oddness._entry_ptr.556, ptr @rcu_bootup_announce_oddness._entry_ptr.559, ptr @rcu_bootup_announce_oddness._entry_ptr.562, ptr @rcu_bootup_announce_oddness._entry_ptr.565, ptr @rcu_bootup_announce_oddness._entry_ptr.568, ptr @rcu_bootup_announce_oddness._entry_ptr.571, ptr @rcu_bootup_announce_oddness._entry_ptr.574, ptr @rcu_bootup_announce_oddness._entry_ptr.577, ptr @rcu_bootup_announce_oddness._entry_ptr.580, ptr @rcu_bootup_announce_oddness._entry_ptr.583, ptr @rcu_bootup_announce_oddness._entry_ptr.586, ptr @rcu_bootup_announce_oddness._entry_ptr.589, ptr @rcu_bootup_announce_oddness._entry_ptr.592, ptr @rcu_bootup_announce_oddness._entry_ptr.595, ptr @rcu_bootup_announce_oddness._entry_ptr.598, ptr @rcu_bootup_announce_oddness._entry_ptr.601, ptr @rcu_bootup_announce_oddness._entry_ptr.604, ptr @rcu_bootup_announce_oddness._entry_ptr.607, ptr @rcu_bootup_announce_oddness._entry_ptr.610, ptr @rcu_bootup_announce_oddness._entry_ptr.613, ptr @rcu_check_gp_kthread_expired_fqs_timer._entry, ptr @rcu_check_gp_kthread_expired_fqs_timer._entry.207, ptr @rcu_check_gp_kthread_expired_fqs_timer._entry_ptr, ptr @rcu_check_gp_kthread_expired_fqs_timer._entry_ptr.209, ptr @rcu_check_gp_kthread_starvation._entry, ptr @rcu_check_gp_kthread_starvation._entry.212, ptr @rcu_check_gp_kthread_starvation._entry.215, ptr @rcu_check_gp_kthread_starvation._entry.218, ptr @rcu_check_gp_kthread_starvation._entry.221, ptr @rcu_check_gp_kthread_starvation._entry_ptr, ptr @rcu_check_gp_kthread_starvation._entry_ptr.214, ptr @rcu_check_gp_kthread_starvation._entry_ptr.217, ptr @rcu_check_gp_kthread_starvation._entry_ptr.220, ptr @rcu_check_gp_kthread_starvation._entry_ptr.223, ptr @rcu_core.___tp_str, ptr @rcu_core.___tp_str.321, ptr @rcu_cpu_kthread.___tp_str, ptr @rcu_cpu_kthread.___tp_str.314, ptr @rcu_cpu_kthread.___tp_str.316, ptr @rcu_cpu_kthread.___tp_str.318, ptr @rcu_do_batch.___tp_str, ptr @rcu_dump_cpu_stacks._entry, ptr @rcu_dump_cpu_stacks._entry_ptr, ptr @rcu_dump_rcu_node_tree._entry, ptr @rcu_dump_rcu_node_tree._entry.393, ptr @rcu_dump_rcu_node_tree._entry.396, ptr @rcu_dump_rcu_node_tree._entry.398, ptr @rcu_dump_rcu_node_tree._entry.400, ptr @rcu_dump_rcu_node_tree._entry.403, ptr @rcu_dump_rcu_node_tree._entry_ptr, ptr @rcu_dump_rcu_node_tree._entry_ptr.395, ptr @rcu_dump_rcu_node_tree._entry_ptr.397, ptr @rcu_dump_rcu_node_tree._entry_ptr.399, ptr @rcu_dump_rcu_node_tree._entry_ptr.402, ptr @rcu_dump_rcu_node_tree._entry_ptr.404, ptr @rcu_eqs_enter.___tp_str, ptr @rcu_eqs_exit.___tp_str, ptr @rcu_exp_gp_seq_snap.___tp_str, ptr @rcu_exp_wait_wake.___tp_str, ptr @rcu_exp_wait_wake.___tp_str.443, ptr @rcu_future_gp_cleanup.___tp_str, ptr @rcu_future_gp_cleanup.___tp_str.309, ptr @rcu_fwd_progress_check._entry, ptr @rcu_fwd_progress_check._entry.80, ptr @rcu_fwd_progress_check._entry.83, ptr @rcu_fwd_progress_check._entry.86, ptr @rcu_fwd_progress_check._entry.89, ptr @rcu_fwd_progress_check._entry_ptr, ptr @rcu_fwd_progress_check._entry_ptr.82, ptr @rcu_fwd_progress_check._entry_ptr.85, ptr @rcu_fwd_progress_check._entry_ptr.88, ptr @rcu_fwd_progress_check._entry_ptr.91, ptr @rcu_gp_cleanup.___tp_str, ptr @rcu_gp_cleanup.___tp_str.305, ptr @rcu_gp_cleanup.___tp_str.307, ptr @rcu_gp_fqs_loop.___tp_str, ptr @rcu_gp_fqs_loop.___tp_str.282, ptr @rcu_gp_fqs_loop.___tp_str.284, ptr @rcu_gp_fqs_loop.___tp_str.286, ptr @rcu_gp_init.___tp_str, ptr @rcu_gp_kthread.___tp_str, ptr @rcu_gp_kthread.___tp_str.261, ptr @rcu_gp_torture_wait._entry, ptr @rcu_gp_torture_wait._entry.265, ptr @rcu_gp_torture_wait._entry_ptr, ptr @rcu_gp_torture_wait._entry_ptr.267, ptr @rcu_implicit_dynticks_qs.___tp_str, ptr @rcu_implicit_dynticks_qs._entry, ptr @rcu_implicit_dynticks_qs._entry.293, ptr @rcu_implicit_dynticks_qs._entry.296, ptr @rcu_implicit_dynticks_qs._entry_ptr, ptr @rcu_implicit_dynticks_qs._entry_ptr.295, ptr @rcu_implicit_dynticks_qs._entry_ptr.298, ptr @rcu_init_geometry._entry, ptr @rcu_init_geometry._entry_ptr, ptr @rcu_init_nohz._entry, ptr @rcu_init_nohz._entry.102, ptr @rcu_init_nohz._entry.105, ptr @rcu_init_nohz._entry.108, ptr @rcu_init_nohz._entry.111, ptr @rcu_init_nohz._entry_ptr, ptr @rcu_init_nohz._entry_ptr.104, ptr @rcu_init_nohz._entry_ptr.107, ptr @rcu_init_nohz._entry_ptr.110, ptr @rcu_init_nohz._entry_ptr.113, ptr @rcu_nmi_enter.___tp_str, ptr @rcu_nmi_enter.___tp_str.12, ptr @rcu_nmi_exit.___tp_str, ptr @rcu_nmi_exit.___tp_str.3, ptr @rcu_nocb_cpu_deoffload._entry, ptr @rcu_nocb_cpu_deoffload._entry_ptr, ptr @rcu_nocb_cpu_offload._entry, ptr @rcu_nocb_cpu_offload._entry_ptr, ptr @rcu_nocb_rdp_deoffload._entry, ptr @rcu_nocb_rdp_deoffload._entry_ptr, ptr @rcu_nocb_rdp_offload._entry, ptr @rcu_nocb_rdp_offload._entry_ptr, ptr @rcu_nocb_setup._entry, ptr @rcu_nocb_setup._entry_ptr, ptr @rcu_nocb_try_bypass.___tp_str, ptr @rcu_nocb_try_bypass.___tp_str.147, ptr @rcu_nocb_try_bypass.___tp_str.149, ptr @rcu_nocb_try_bypass.___tp_str.151, ptr @rcu_nocb_try_bypass.___tp_str.153, ptr @rcu_note_context_switch.___tp_str, ptr @rcu_note_context_switch.___tp_str.115, ptr @rcu_organize_nocb_kthreads._entry, ptr @rcu_organize_nocb_kthreads._entry.519, ptr @rcu_organize_nocb_kthreads._entry.522, ptr @rcu_organize_nocb_kthreads._entry.525, ptr @rcu_organize_nocb_kthreads._entry_ptr, ptr @rcu_organize_nocb_kthreads._entry_ptr.521, ptr @rcu_organize_nocb_kthreads._entry_ptr.524, ptr @rcu_organize_nocb_kthreads._entry_ptr.526, ptr @rcu_qs.___tp_str, ptr @rcu_qs.___tp_str.616, ptr @rcu_sched_clock_irq.___tp_str, ptr @rcu_sched_clock_irq.___tp_str.20, ptr @rcu_spawn_gp_kthread._entry, ptr @rcu_spawn_gp_kthread._entry_ptr, ptr @rcu_start_this_gp.___tp_str, ptr @rcu_start_this_gp.___tp_str.172, ptr @rcu_start_this_gp.___tp_str.174, ptr @rcu_start_this_gp.___tp_str.176, ptr @rcu_start_this_gp.___tp_str.178, ptr @rcu_start_this_gp.___tp_str.180, ptr @rcu_start_this_gp.___tp_str.182, ptr @rcutree_dying_cpu.___tp_str, ptr @rcutree_dying_cpu.___tp_str.15, ptr @rcutree_prepare_cpu.___tp_str, ptr @show_rcu_gp_kthreads._entry, ptr @show_rcu_gp_kthreads._entry.65, ptr @show_rcu_gp_kthreads._entry.72, ptr @show_rcu_gp_kthreads._entry.75, ptr @show_rcu_gp_kthreads._entry_ptr, ptr @show_rcu_gp_kthreads._entry_ptr.67, ptr @show_rcu_gp_kthreads._entry_ptr.74, ptr @show_rcu_gp_kthreads._entry_ptr.77, ptr @show_rcu_nocb_gp_state._entry, ptr @show_rcu_nocb_gp_state._entry_ptr, ptr @show_rcu_nocb_state._entry, ptr @show_rcu_nocb_state._entry.539, ptr @show_rcu_nocb_state._entry_ptr, ptr @show_rcu_nocb_state._entry_ptr.541, ptr @sync_exp_work_done.___tp_str, ptr @sync_rcu_exp_select_cpus.___tp_str, ptr @sync_rcu_exp_select_cpus.___tp_str.432, ptr @sync_rcu_exp_select_node_cpus.___tp_str, ptr @synchronize_rcu_expedited_wait.___tp_str, ptr @synchronize_rcu_expedited_wait.___tp_str.446, ptr @synchronize_rcu_expedited_wait._entry, ptr @synchronize_rcu_expedited_wait._entry.451, ptr @synchronize_rcu_expedited_wait._entry.454, ptr @synchronize_rcu_expedited_wait._entry.458, ptr @synchronize_rcu_expedited_wait._entry.461, ptr @synchronize_rcu_expedited_wait._entry.464, ptr @synchronize_rcu_expedited_wait._entry_ptr, ptr @synchronize_rcu_expedited_wait._entry_ptr.453, ptr @synchronize_rcu_expedited_wait._entry_ptr.456, ptr @synchronize_rcu_expedited_wait._entry_ptr.460, ptr @synchronize_rcu_expedited_wait._entry_ptr.463, ptr @synchronize_rcu_expedited_wait._entry_ptr.465, ptr @tp_rcu_varname, ptr @rcu_name, ptr @dump_tree, ptr @use_softirq, ptr @rcu_fanout_exact, ptr @rcu_fanout_leaf, ptr @num_rcu_lvl, ptr @kthread_prio, ptr @gp_preinit_delay, ptr @gp_init_delay, ptr @gp_cleanup_delay, ptr @rcu_unlock_delay, ptr @rcu_min_cached_objs, ptr @rcu_delay_page_cache_fill_msec, ptr @.str, ptr @blimit, ptr @qhimark, ptr @qlowmark, ptr @qovld, ptr @rcu_divisor, ptr @rcu_resched_ns, ptr @jiffies_till_sched_qs, ptr @jiffies_to_sched_qs, ptr @first_fqs_jiffies_ops, ptr @jiffies_till_first_fqs, ptr @next_fqs_jiffies_ops, ptr @jiffies_till_next_fqs, ptr @rcu_kick_kthreads, ptr @.str.2, ptr @.str.4, ptr @.str.6, ptr @.str.8, ptr @.str.10, ptr @.str.11, ptr @.str.13, ptr @sleep_duration, ptr @.str.14, ptr @.str.16, ptr @.str.17, ptr @.str.21, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.27, ptr @.str.29, ptr @.str.31, ptr @.str.33, ptr @.str.35, ptr @.str.37, ptr @.str.39, ptr @.str.41, ptr @.str.42, ptr @.str.54, ptr @rcu_init_geometry.old_nr_cpu_ids, ptr @rcu_init_geometry.initialized, ptr @.str.55, ptr @.str.56, ptr @rcu_init.rcu_pm_notify_nb, ptr @.str.57, ptr @rcu_gp_wq, ptr @.str.58, ptr @rcu_par_gp_wq, ptr @qovld_calc, ptr @.str.59, ptr @.str.63, ptr @.str.64, ptr @.str.66, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.73, ptr @.str.76, ptr @.str.78, ptr @.str.79, ptr @.str.81, ptr @.str.84, ptr @.str.87, ptr @.str.90, ptr @sysrq_rcu, ptr @.str.92, ptr @.str.93, ptr @synchronize_rcu_expedited.__key, ptr @.str.94, ptr @nocb_nobypass_lim_per_jiffy, ptr @rcu_nocb_mask, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @rcu_nocb_is_setup, ptr @.str.103, ptr @.str.106, ptr @.str.109, ptr @.str.112, ptr @rcu_nocb_gp_stride, ptr @.str.114, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.126, ptr @.str.128, ptr @.str.129, ptr @.str.131, ptr @.str.134, ptr @.str.136, ptr @.str.138, ptr @.str.139, ptr @.str.142, ptr @.str.144, ptr @.str.150, ptr @.str.152, ptr @.str.154, ptr @.str.158, ptr @.str.160, ptr @.str.161, ptr @.str.163, ptr @.str.165, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.173, ptr @.str.175, ptr @.str.177, ptr @.str.179, ptr @.str.181, ptr @.str.183, ptr @check_cpu_stall.___rfd_beenhere, ptr @check_cpu_stall.___rfd_beenhere.185, ptr @.str.186, ptr @rcu_stall_kick_kthreads.___rfd_beenhere, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.192, ptr @.str.195, ptr @.str.196, ptr @.str.197, ptr @.str.198, ptr @.str.199, ptr @.str.200, ptr @.str.201, ptr @.str.202, ptr @.str.203, ptr @.str.204, ptr @.str.205, ptr @.str.206, ptr @.str.208, ptr @.str.210, ptr @.str.211, ptr @.str.213, ptr @.str.216, ptr @.str.219, ptr @.str.222, ptr @.str.224, ptr @.str.225, ptr @panic_on_rcu_stall.cpu_stall, ptr @.str.227, ptr @.str.228, ptr @.str.229, ptr @.str.230, ptr @.str.234, ptr @.str.237, ptr @.str.240, ptr @.str.242, ptr @init_completion.__key, ptr @.str.243, ptr @.str.244, ptr @.str.246, ptr @.str.247, ptr @.str.249, ptr @.str.255, ptr @.str.256, ptr @.str.257, ptr @.str.258, ptr @.str.260, ptr @.str.262, ptr @.str.263, ptr @.str.264, ptr @.str.266, ptr @.str.270, ptr @.str.280, ptr @.str.281, ptr @.str.283, ptr @.str.285, ptr @.str.287, ptr @.str.290, ptr @.str.291, ptr @.str.292, ptr @.str.294, ptr @.str.297, ptr @.str.299, ptr @.str.304, ptr @.str.306, ptr @.str.310, ptr @rcu_cpu_thread_spec, ptr @.str.311, ptr @.str.312, ptr @.str.313, ptr @.str.315, ptr @.str.317, ptr @.str.319, ptr @.str.320, ptr @.str.322, ptr @.str.323, ptr @.str.330, ptr @.str.331, ptr @.str.332, ptr @.str.333, ptr @kfree_rcu_batch_init.__key, ptr @.str.334, ptr @kfree_rcu_batch_init.__key.335, ptr @.str.336, ptr @kfree_rcu_batch_init.__key.337, ptr @.str.338, ptr @kfree_rcu_batch_init.__key.339, ptr @.str.340, ptr @kfree_rcu_batch_init.__key.341, ptr @.str.342, ptr @kfree_rcu_shrinker, ptr @.str.344, ptr @rcu_init_one.buf, ptr @.str.346, ptr @.str.347, ptr @rcu_init_one.fqs, ptr @.str.348, ptr @.str.349, ptr @rcu_init_one.rcu_node_class, ptr @rcu_init_one.rcu_fqs_class, ptr @.str.350, ptr @rcu_init_one.__key, ptr @.str.351, ptr @rcu_init_one.__key.352, ptr @.str.353, ptr @rcu_init_one.__key.354, ptr @.str.355, ptr @rcu_init_one.__key.356, ptr @.str.357, ptr @rcu_init_one.__key.358, ptr @.str.359, ptr @rcu_init_one.__key.360, ptr @.str.361, ptr @rcu_init_one.__key.362, ptr @.str.363, ptr @rcu_init_one.__key.364, ptr @.str.365, ptr @rcu_init_one.__key.366, ptr @.str.367, ptr @rcu_init_one_nocb.__key, ptr @.str.368, ptr @rcu_init_one_nocb.__key.369, ptr @.str.370, ptr @rcu_boot_init_percpu_data.__key, ptr @.str.371, ptr @rcu_boot_init_nocb_percpu_data.__key, ptr @.str.373, ptr @rcu_boot_init_nocb_percpu_data.__key.374, ptr @.str.375, ptr @rcu_boot_init_nocb_percpu_data.__key.376, ptr @.str.377, ptr @rcu_boot_init_nocb_percpu_data.__key.378, ptr @.str.379, ptr @rcu_boot_init_nocb_percpu_data.__key.380, ptr @.str.381, ptr @rcu_boot_init_nocb_percpu_data.__key.382, ptr @.str.383, ptr @rcu_boot_init_nocb_percpu_data.__key.384, ptr @.str.385, ptr @.str.386, ptr @.str.387, ptr @.str.388, ptr @.str.390, ptr @.str.391, ptr @.str.392, ptr @.str.394, ptr @.str.401, ptr @rcu_panic_block, ptr @.str.406, ptr @gp_state_names, ptr @.str.407, ptr @.str.408, ptr @.str.409, ptr @.str.410, ptr @.str.411, ptr @.str.412, ptr @.str.413, ptr @.str.414, ptr @.str.415, ptr @rcu_check_gp_start_stall.warned, ptr @sysrq_rcudump_op, ptr @.str.420, ptr @.str.421, ptr @.str.426, ptr @.str.427, ptr @.str.429, ptr @.str.431, ptr @.str.433, ptr @sync_rcu_exp_select_cpus.__key, ptr @.str.434, ptr @.str.441, ptr @.str.444, ptr @.str.445, ptr @.str.447, ptr @.str.448, ptr @.str.449, ptr @.str.452, ptr @.str.455, ptr @.str.457, ptr @.str.459, ptr @.str.462, ptr @.str.467, ptr @.str.468, ptr @.str.469, ptr @.str.470, ptr @.str.471, ptr @.str.473, ptr @.str.475, ptr @.str.477, ptr @.str.479, ptr @.str.481, ptr @.str.482, ptr @.str.485, ptr @.str.486, ptr @.str.487, ptr @.str.488, ptr @.str.489, ptr @.str.491, ptr @.str.492, ptr @.str.494, ptr @.str.498, ptr @.str.500, ptr @.str.502, ptr @.str.504, ptr @.str.506, ptr @.str.508, ptr @.str.510, ptr @.str.511, ptr @.str.515, ptr @.str.516, ptr @.str.517, ptr @.str.518, ptr @.str.520, ptr @.str.523, ptr @.str.527, ptr @.str.528, ptr @.str.529, ptr @.str.530, ptr @.str.531, ptr @.str.532, ptr @.str.533, ptr @.str.534, ptr @.str.535, ptr @.str.536, ptr @.str.537, ptr @.str.538, ptr @.str.540, ptr @.str.542, ptr @.str.543, ptr @.str.544, ptr @.str.545, ptr @task_index_to_char.state_char, ptr @.str.546, ptr @.str.547, ptr @.str.550, ptr @.str.551, ptr @.str.552, ptr @.str.553, ptr @.str.555, ptr @.str.558, ptr @.str.561, ptr @.str.564, ptr @.str.567, ptr @.str.570, ptr @.str.573, ptr @.str.576, ptr @.str.579, ptr @.str.582, ptr @.str.585, ptr @.str.588, ptr @.str.591, ptr @.str.594, ptr @.str.597, ptr @.str.600, ptr @.str.603, ptr @.str.606, ptr @.str.609, ptr @.str.612, ptr @.str.614, ptr @.str.615, ptr @.str.617], section "llvm.metadata"
@0 = internal global [484 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_name to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.618 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.620 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dump_tree to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.623 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @use_softirq to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.624 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_fanout_exact to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.627 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.629 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_fanout_leaf to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.630 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @num_rcu_lvl to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.633 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.635 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @kthread_prio to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.636 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gp_preinit_delay to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.639 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.641 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gp_init_delay to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.642 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gp_cleanup_delay to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.645 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_unlock_delay to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.648 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_min_cached_objs to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.651 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_delay_page_cache_fill_msec to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.659 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blimit to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.660 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @qhimark to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.663 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @qlowmark to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.666 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @qovld to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_divisor to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.672 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_resched_ns to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.675 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jiffies_till_sched_qs to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.678 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.680 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jiffies_to_sched_qs to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.681 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.683 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @first_fqs_jiffies_ops to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.684 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jiffies_till_first_fqs to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.687 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @next_fqs_jiffies_ops to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.690 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @jiffies_till_next_fqs to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_kick_kthreads to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.696 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.704 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.707 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.713 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.716 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.719 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sleep_duration to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.720 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.731 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.737 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.743 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.758 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.764 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.767 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_geometry.old_nr_cpu_ids to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.774 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_geometry.initialized to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.777 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_geometry._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.786 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.786 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.786 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init.rcu_pm_notify_nb to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.787 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.789 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_gp_wq to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.793 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.795 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.798 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_par_gp_wq to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @qovld_calc to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.802 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_rcu_gp_kthreads._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.816 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 220, i32 256, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.816 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.816 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_rcu_gp_kthreads._entry.65 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.834 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 95, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.834 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.834 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.834 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.834 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.834 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_rcu_gp_kthreads._entry.72 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_rcu_gp_kthreads._entry.75 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_fwd_progress_check._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.855 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.855 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.855 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_fwd_progress_check._entry.80 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_fwd_progress_check._entry.83 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_fwd_progress_check._entry.86 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_fwd_progress_check._entry.89 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sysrq_rcu to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.880 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.882 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @synchronize_rcu_expedited.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.894 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.894 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nocb_nobypass_lim_per_jiffy to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.895 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_nocb_mask to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.898 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_nocb_cpu_deoffload._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.912 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.912 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.912 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.912 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_nocb_cpu_offload._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.921 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.921 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.921 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_nohz._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.930 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.930 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.930 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_nocb_is_setup to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.931 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_nohz._entry.102 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.937 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 101, i32 160, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.937 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_nohz._entry.105 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.943 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.943 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_nohz._entry.108 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.949 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.949 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_nohz._entry.111 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.955 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.955 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_nocb_gp_stride to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.961 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.964 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.970 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.970 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.976 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.976 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.985 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.988 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.997 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1000 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1012 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1015 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1018 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1021 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1027 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1030 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1033 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1036 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1039 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1042 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1057 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1060 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1063 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1066 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1069 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_cpu_stall.___rfd_beenhere to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1082 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1075 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_cpu_stall.___rfd_beenhere.185 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1082 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1081 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_stall_kick_kthreads.___rfd_beenhere to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1082 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1084 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1087 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_cpu_stall._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1096 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1096 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1096 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_cpu_stall._entry.191 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1102 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1102 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1105 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1108 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_cpu_stall_info._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_check_gp_kthread_expired_fqs_timer._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1144 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1144 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1144 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_check_gp_kthread_expired_fqs_timer._entry.207 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_check_gp_kthread_starvation._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1159 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 82, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1159 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1159 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_check_gp_kthread_starvation._entry.212 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1165 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.213 to i32), i32 83, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1165 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_check_gp_kthread_starvation._entry.215 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_check_gp_kthread_starvation._entry.218 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.219 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_check_gp_kthread_starvation._entry.221 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1183 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.222 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1183 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_dump_cpu_stacks._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1192 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.224 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1192 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.225 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1192 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @panic_on_rcu_stall.cpu_stall to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1193 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1195 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.228 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1201 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_other_cpu_stall._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_other_cpu_stall._entry.233 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.234 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_other_cpu_stall._entry.236 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1222 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1222 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_other_cpu_stall._entry.239 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1228 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 109, i32 160, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1228 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_completion.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1237 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.243 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1237 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.244 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1240 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.246 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1243 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.247 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.249 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_spawn_gp_kthread._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.255 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.256 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.257 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1261 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.258 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1264 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.260 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1267 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.262 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_gp_torture_wait._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1279 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.263 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1279 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.264 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1279 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_gp_torture_wait._entry.265 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.266 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.270 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.280 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1291 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.281 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.283 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.285 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1300 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.287 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1303 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.290 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1306 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_implicit_dynticks_qs._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.291 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.292 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_implicit_dynticks_qs._entry.293 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1321 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.294 to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1321 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_implicit_dynticks_qs._entry.296 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1330 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.297 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1330 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.299 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1330 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.304 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1333 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.306 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.310 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_cpu_thread_spec to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1340 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1342 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.311 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.312 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1348 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.313 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1351 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.315 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.317 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1357 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.319 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1360 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.320 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.322 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1366 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.323 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1369 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @adjust_jiffies_till_sched_qs._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.330 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.331 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @kfree_rcu_batch_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.332 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.333 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @kfree_rcu_batch_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.334 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @kfree_rcu_batch_init.__key.335 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.336 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @kfree_rcu_batch_init.__key.337 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.338 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @kfree_rcu_batch_init.__key.339 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.340 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @kfree_rcu_batch_init.__key.341 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.342 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @kfree_rcu_shrinker to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1418 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1420 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @kfree_rcu_batch_init._entry.343 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.344 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_one.buf to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1427 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.346 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.347 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_one.fqs to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1436 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.348 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.349 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_one.rcu_node_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1445 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_one.rcu_fqs_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1448 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.350 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_one.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.351 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_one.__key.352 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1465 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.353 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1465 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_one.__key.354 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.355 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_one.__key.356 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.357 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_one.__key.358 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.359 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_one.__key.360 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1489 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.361 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1489 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_one.__key.362 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1495 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.363 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1495 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_one.__key.364 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.365 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_one.__key.366 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1507 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.367 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1507 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_one_nocb.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.368 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_init_one_nocb.__key.369 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.370 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_boot_init_percpu_data.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.371 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_boot_init_nocb_percpu_data.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1531 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.373 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1531 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_boot_init_nocb_percpu_data.__key.374 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.375 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_boot_init_nocb_percpu_data.__key.376 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.377 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_boot_init_nocb_percpu_data.__key.378 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.379 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_boot_init_nocb_percpu_data.__key.380 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1555 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.381 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1555 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_boot_init_nocb_percpu_data.__key.382 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.383 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_boot_init_nocb_percpu_data.__key.384 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.385 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.386 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.387 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.388 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1576 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.390 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_dump_rcu_node_tree._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.391 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.392 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_dump_rcu_node_tree._entry.393 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.394 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_dump_rcu_node_tree._entry.396 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_dump_rcu_node_tree._entry.398 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_dump_rcu_node_tree._entry.400 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.401 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_dump_rcu_node_tree._entry.403 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1609 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_panic_block to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1610 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.406 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1615 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gp_state_names to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1616 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1618 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.407 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.408 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.409 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.410 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.411 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.412 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.413 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.414 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.415 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_check_gp_start_stall.warned to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1646 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sysrq_rcudump_op to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1649 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.420 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.421 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.426 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.427 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1663 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.429 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.431 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.433 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sync_rcu_exp_select_cpus.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1673 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1678 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.434 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1678 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.441 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.444 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.445 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.447 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @synchronize_rcu_expedited_wait._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1699 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.448 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1699 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.449 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1699 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @synchronize_rcu_expedited_wait._entry.451 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.452 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @synchronize_rcu_expedited_wait._entry.454 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.455 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.457 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @synchronize_rcu_expedited_wait._entry.458 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1720 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.459 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1720 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @synchronize_rcu_expedited_wait._entry.461 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1726 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.462 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1726 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @synchronize_rcu_expedited_wait._entry.464 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1729 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.467 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1732 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_nocb_setup._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.468 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.469 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.470 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1744 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.471 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1747 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.473 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1750 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.475 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1753 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.477 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1756 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.479 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1759 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_nocb_rdp_deoffload._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1768 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.481 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1768 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.482 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1768 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_nocb_rdp_offload._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1777 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.485 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1777 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.486 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1777 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.487 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1780 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.488 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1783 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.489 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1786 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.491 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1789 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.492 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.494 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1795 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.498 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1798 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.500 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.502 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.504 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.506 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1810 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.508 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.510 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1816 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.511 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1819 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.515 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1822 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_organize_nocb_kthreads._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1834 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.516 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1834 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.517 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1834 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.518 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1834 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_organize_nocb_kthreads._entry.519 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.520 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_organize_nocb_kthreads._entry.522 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.523 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_organize_nocb_kthreads._entry.525 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.527 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1852 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_rcu_nocb_state._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.528 to i32), i32 83, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.529 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.530 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.531 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.532 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.533 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.534 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.535 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.536 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.537 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.538 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_rcu_nocb_state._entry.539 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.540 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.542 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_rcu_nocb_gp_state._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.543 to i32), i32 74, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.544 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.545 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @task_index_to_char.state_char to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1910 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.546 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.547 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1918 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.550 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.551 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce_oddness._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1936 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.552 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1936 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.553 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1936 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce_oddness._entry.554 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1942 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.555 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1942 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce_oddness._entry.557 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1948 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.558 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1948 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce_oddness._entry.560 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.561 to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce_oddness._entry.563 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.564 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce_oddness._entry.566 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.567 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce_oddness._entry.569 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.570 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce_oddness._entry.572 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1978 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.573 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1978 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce_oddness._entry.575 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1984 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.576 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1984 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce_oddness._entry.578 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1990 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.579 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1990 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce_oddness._entry.581 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.582 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce_oddness._entry.584 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2002 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.585 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2002 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce_oddness._entry.587 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.588 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce_oddness._entry.590 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2014 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.591 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2014 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce_oddness._entry.593 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.594 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce_oddness._entry.596 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2026 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.597 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2026 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce_oddness._entry.599 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2032 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.600 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2032 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce_oddness._entry.602 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2038 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.603 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2038 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce_oddness._entry.605 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2044 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.606 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2044 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce_oddness._entry.608 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2050 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.609 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2050 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bootup_announce_oddness._entry.611 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2056 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.612 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2056 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.614 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2059 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.615 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.617 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2063 to i32), i32 ptrtoint (ptr @___asan_gen_.1608 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2065 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @rcu_get_gp_kthreads_prio() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @kthread_prio, align 4
  ret i32 %0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_softirq_qs() local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @rcu_qs()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %5, ptrtoint (ptr @rcu_data to i32)
  %6 = inttoptr i32 %add.i to ptr
  %cpu_no_qs.i = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 2
  %exp.i = getelementptr inbounds %struct.anon, ptr %cpu_no_qs.i, i32 0, i32 1
  %7 = ptrtoint ptr %exp.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %exp.i, align 1
  %tobool.not.i = icmp eq i8 %8, 0
  br i1 %tobool.not.i, label %rcu_preempt_deferred_qs.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %9 = ptrtoint ptr %exp.i to i32
  call void @__asan_store1_noabort(i32 %9)
  store volatile i8 0, ptr %exp.i, align 1
  %mynode.i.i = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 7
  %10 = ptrtoint ptr %mynode.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mynode.i.i, align 16
  %grpmask.i.i = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 8
  %12 = ptrtoint ptr %grpmask.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %grpmask.i.i, align 4
  tail call fastcc void @rcu_report_exp_cpu_mult(ptr noundef %11, i32 noundef %13, i1 noundef zeroext true) #24
  br label %rcu_preempt_deferred_qs.exit

rcu_preempt_deferred_qs.exit:                     ; preds = %if.then.i, %entry
  %14 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task, align 8
  %rcu_tasks_holdout = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 40
  %16 = ptrtoint ptr %rcu_tasks_holdout to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load volatile i8, ptr %rcu_tasks_holdout, align 4
  %tobool.not = icmp eq i8 %17, 0
  br i1 %tobool.not, label %do.end17, label %do.body8

do.body8:                                         ; preds = %rcu_preempt_deferred_qs.exit
  %18 = ptrtoint ptr %rcu_tasks_holdout to i32
  call void @__asan_store1_noabort(i32 %18)
  store volatile i8 0, ptr %rcu_tasks_holdout, align 4
  br label %do.end17

do.end17:                                         ; preds = %do.body8, %rcu_preempt_deferred_qs.exit
  %19 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %task, align 8
  %trc_reader_checked = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 47
  %21 = ptrtoint ptr %trc_reader_checked to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load volatile i8, ptr %trc_reader_checked, align 64, !range !1644
  %tobool21.not = icmp eq i8 %22, 0
  br i1 %tobool21.not, label %do.end26, label %do.end61, !prof !1645

do.end26:                                         ; preds = %do.end17
  %trc_reader_nesting = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 44
  %23 = ptrtoint ptr %trc_reader_nesting to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %trc_reader_nesting, align 4
  %tobool30.not = icmp eq i32 %24, 0
  br i1 %tobool30.not, label %do.end43, label %do.end61, !prof !1646

do.end43:                                         ; preds = %do.end26
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1647
  %25 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %task, align 8
  %trc_reader_checked50 = getelementptr inbounds %struct.task_struct, ptr %26, i32 0, i32 47
  %27 = ptrtoint ptr %trc_reader_checked50 to i32
  call void @__asan_store1_noabort(i32 %27)
  store volatile i8 1, ptr %trc_reader_checked50, align 64
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1648
  br label %do.end61

do.end61:                                         ; preds = %do.end43, %do.end26, %do.end17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_qs() unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i, align 4
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %land.lhs.true, label %do.end18

land.lhs.true:                                    ; preds = %entry
  %4 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #24, !srcloc !1649
  %and.i = and i32 %4, 128
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %land.lhs.true12, label %do.end18

land.lhs.true12:                                  ; preds = %land.lhs.true
  %call13 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %do.end18, label %land.lhs.true15

land.lhs.true15:                                  ; preds = %land.lhs.true12
  %.b110 = load i1, ptr @rcu_qs.__warned, align 1
  br i1 %.b110, label %do.end18, label %if.then

if.then:                                          ; preds = %land.lhs.true15
  store i1 true, ptr @rcu_qs.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.280, i32 noundef 844, ptr noundef nonnull @.str.614) #24
  br label %do.end18

do.end18:                                         ; preds = %if.then, %land.lhs.true15, %land.lhs.true12, %land.lhs.true, %entry
  %5 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i111 = and i32 %5, -16384
  %6 = inttoptr i32 %and.i111 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 2) to i32)
  %11 = inttoptr i32 %add to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %11, align 2
  %tobool32.not = icmp eq i16 %13, 0
  br i1 %tobool32.not, label %if.end109, label %if.end34

if.end34:                                         ; preds = %do.end18
  %14 = load ptr, ptr @rcu_qs.___tp_str, align 4
  %add53 = add i32 %10, ptrtoint (ptr @rcu_data to i32)
  %15 = inttoptr i32 %add53 to ptr
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 4
  %18 = load ptr, ptr @rcu_qs.___tp_str.616, align 4
  tail call fastcc void @trace_rcu_grace_period(ptr noundef %14, i32 noundef %17, ptr noundef %18)
  %19 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu, align 4
  %arrayidx71 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %20
  %21 = ptrtoint ptr %arrayidx71 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx71, align 4
  %add72 = add i32 %22, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 2) to i32)
  %23 = inttoptr i32 %add72 to ptr
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 0, ptr %23, align 1
  %25 = load i32, ptr %cpu, align 4
  %arrayidx93 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %25
  %26 = ptrtoint ptr %arrayidx93 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx93, align 4
  %add94 = add i32 %27, ptrtoint (ptr getelementptr inbounds (%struct.anon, ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 2), i32 0, i32 1) to i32)
  %28 = inttoptr i32 %add94 to ptr
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %28, align 1
  %tobool96.not = icmp eq i8 %30, 0
  br i1 %tobool96.not, label %if.end109, label %do.body98

do.body98:                                        ; preds = %if.end34
  %add108 = add i32 %27, ptrtoint (ptr @rcu_data to i32)
  %31 = inttoptr i32 %add108 to ptr
  %cpu_no_qs.i = getelementptr inbounds %struct.rcu_data, ptr %31, i32 0, i32 2
  %exp.i = getelementptr inbounds %struct.anon, ptr %cpu_no_qs.i, i32 0, i32 1
  %32 = ptrtoint ptr %exp.i to i32
  call void @__asan_store1_noabort(i32 %32)
  store volatile i8 0, ptr %exp.i, align 1
  %mynode.i = getelementptr inbounds %struct.rcu_data, ptr %31, i32 0, i32 7
  %33 = ptrtoint ptr %mynode.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %mynode.i, align 16
  %grpmask.i = getelementptr inbounds %struct.rcu_data, ptr %31, i32 0, i32 8
  %35 = ptrtoint ptr %grpmask.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %grpmask.i, align 4
  tail call fastcc void @rcu_report_exp_cpu_mult(ptr noundef %34, i32 noundef %36, i1 noundef zeroext true) #24
  br label %if.end109

if.end109:                                        ; preds = %do.body98, %if.end34, %do.end18
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_preempt_deferred_qs() unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr @rcu_data to i32)
  %6 = inttoptr i32 %add to ptr
  %cpu_no_qs = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 2
  %exp = getelementptr inbounds %struct.anon, ptr %cpu_no_qs, i32 0, i32 1
  %7 = ptrtoint ptr %exp to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %exp, align 1
  %tobool.not = icmp eq i8 %8, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %9 = ptrtoint ptr %exp to i32
  call void @__asan_store1_noabort(i32 %9)
  store volatile i8 0, ptr %exp, align 1
  %mynode.i = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 7
  %10 = ptrtoint ptr %mynode.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mynode.i, align 16
  %grpmask.i = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 8
  %12 = ptrtoint ptr %grpmask.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %grpmask.i, align 4
  tail call fastcc void @rcu_report_exp_cpu_mult(ptr noundef %11, i32 noundef %13, i1 noundef zeroext true) #24
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: inlinehint mustprogress nofree nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc ptr @current_thread_info() unnamed_addr #2 align 64 {
entry:
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634)
  %and = and i32 %0, -16384
  %1 = inttoptr i32 %and to ptr
  ret ptr %1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @rcu_is_idle_cpu(i32 noundef %cpu) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr @rcu_data to i32)
  %2 = inttoptr i32 %add to ptr
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1650
  %dynticks.i = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 21
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dynticks.i, i32 noundef 4) #24
  %3 = ptrtoint ptr %dynticks.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %dynticks.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1651
  %and.i = and i32 %4, 1
  %tobool.not.i = icmp eq i32 %and.i, 0
  ret i1 %tobool.not.i
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @rcu_dynticks_zero_in_eqs(i32 noundef %cpu, ptr noundef %vp) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr @rcu_data to i32)
  %2 = inttoptr i32 %add to ptr
  %dynticks = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 21
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dynticks, i32 noundef 4) #24
  %3 = ptrtoint ptr %dynticks to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %dynticks, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1652
  %5 = ptrtoint ptr %vp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %vp, align 4
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %do.end15, label %cleanup

do.end15:                                         ; preds = %entry
  %and = and i32 %4, -2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1653
  %call.i.i22 = tail call zeroext i1 @__kasan_check_read(ptr noundef %dynticks, i32 noundef 4) #24
  %7 = ptrtoint ptr %dynticks to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %dynticks, align 4
  %cmp = icmp eq i32 %and, %8
  br label %cleanup

cleanup:                                          ; preds = %do.end15, %entry
  %retval.0 = phi i1 [ %cmp, %do.end15 ], [ false, %entry ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_momentary_dyntick_idle() #1 align 64 {
entry:
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 22) to i32)
  %6 = inttoptr i32 %add to ptr
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 0, ptr %6, align 1
  %call12 = tail call fastcc i32 @rcu_dynticks_inc(i32 noundef 2)
  %and = and i32 %call12, 1
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %land.rhs, label %if.end45

land.rhs:                                         ; preds = %entry
  %.b56 = load i1, ptr @rcu_momentary_dyntick_idle.__already_done, align 1
  br i1 %.b56, label %if.end45, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @rcu_momentary_dyntick_idle.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 409, i32 noundef 9, ptr noundef null) #24
  br label %if.end45

if.end45:                                         ; preds = %if.then, %land.rhs, %entry
  %8 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %11
  %12 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %13, ptrtoint (ptr @rcu_data to i32)
  %14 = inttoptr i32 %add.i to ptr
  %cpu_no_qs.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 2
  %exp.i = getelementptr inbounds %struct.anon, ptr %cpu_no_qs.i, i32 0, i32 1
  %15 = ptrtoint ptr %exp.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %exp.i, align 1
  %tobool.not.i = icmp eq i8 %16, 0
  br i1 %tobool.not.i, label %rcu_preempt_deferred_qs.exit, label %if.then.i

if.then.i:                                        ; preds = %if.end45
  %17 = ptrtoint ptr %exp.i to i32
  call void @__asan_store1_noabort(i32 %17)
  store volatile i8 0, ptr %exp.i, align 1
  %mynode.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 7
  %18 = ptrtoint ptr %mynode.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %mynode.i.i, align 16
  %grpmask.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 8
  %20 = ptrtoint ptr %grpmask.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %grpmask.i.i, align 4
  tail call fastcc void @rcu_report_exp_cpu_mult(ptr noundef %19, i32 noundef %21, i1 noundef zeroext true) #24
  br label %rcu_preempt_deferred_qs.exit

rcu_preempt_deferred_qs.exit:                     ; preds = %if.then.i, %if.end45
  ret void
}

; Function Attrs: noinline noprofile nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @rcu_dynticks_inc(i32 noundef %incby) unnamed_addr #4 section ".noinstr.text" align 64 {
entry:
  %call = tail call fastcc ptr @current_thread_info() #26
  %cpu = getelementptr inbounds %struct.thread_info, ptr %call, i32 0, i32 3
  %0 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %0
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 21) to i32)
  %2 = inttoptr i32 %add to ptr
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1654
  tail call void @llvm.prefetch.p0(ptr %2, i32 1, i32 3, i32 1) #24
  %3 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %2, ptr %2, i32 %incby, ptr elementtype(i32) %2) #24, !srcloc !1655
  %asmresult.i.i = extractvalue { i32, i32 } %3, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1656
  ret i32 %asmresult.i.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @rcu_get_gp_seq() #6 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  ret i32 %0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @rcu_exp_batches_completed() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 20), align 4
  ret i32 %0
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @rcutorture_get_gp_data(i32 noundef %test_type, ptr nocapture noundef writeonly %flags, ptr nocapture noundef writeonly %gp_seq) #6 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %cond = icmp eq i32 %test_type, 0
  br i1 %cond, label %do.end, label %sw.epilog

do.end:                                           ; preds = %entry
  %0 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %conv = sext i16 %0 to i32
  %1 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %conv, ptr %flags, align 4
  %2 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %3 = ptrtoint ptr %gp_seq to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %2, ptr %gp_seq, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %do.end, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_idle_enter() #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end86, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %4, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1657
  %5 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1658
  %14 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i102 = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i102 to ptr
  %preempt_count.i.i103 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i103 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i103, align 4
  %sub.i = add i32 %17, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i103, align 4
  %tobool20.not = icmp eq i32 %13, 0
  br i1 %tobool20.not, label %land.rhs, label %if.end86

land.rhs:                                         ; preds = %land.lhs.true
  %18 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i104 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i104 to ptr
  %preempt_count.i.i105 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i105 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i105, align 4
  %add.i106 = add i32 %21, 1
  store volatile i32 %add.i106, ptr %preempt_count.i.i105, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1659
  %22 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cpu, align 4
  %arrayidx44 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %23
  %24 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx44, align 4
  %add45 = add i32 %25, ptrtoint (ptr @hardirqs_enabled to i32)
  %26 = inttoptr i32 %add45 to ptr
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %26, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1660
  %29 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i107 = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i107 to ptr
  %preempt_count.i.i108 = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i108 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i108, align 4
  %sub.i109 = add i32 %32, -1
  store volatile i32 %sub.i109, ptr %preempt_count.i.i108, align 4
  %tobool52.not = icmp eq i32 %28, 0
  br i1 %tobool52.not, label %if.end86, label %land.rhs55

land.rhs55:                                       ; preds = %land.rhs
  %.b98 = load i1, ptr @rcu_idle_enter.__already_done, align 1
  br i1 %.b98, label %if.end86, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs55
  store i1 true, ptr @rcu_idle_enter.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 653, i32 noundef 9, ptr noundef null) #24
  br label %if.end86

if.end86:                                         ; preds = %if.then, %land.rhs55, %land.rhs, %land.lhs.true, %entry
  tail call fastcc void @rcu_eqs_enter()
  ret void
}

; Function Attrs: noinline noprofile nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rcu_eqs_enter() unnamed_addr #4 section ".noinstr.text" align 64 {
entry:
  %call = tail call fastcc ptr @current_thread_info() #26
  %cpu = getelementptr inbounds %struct.thread_info, ptr %call, i32 0, i32 3
  %0 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %0
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr @rcu_data to i32)
  %2 = inttoptr i32 %add to ptr
  %dynticks_nmi_nesting = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 20
  %3 = load i32, ptr %dynticks_nmi_nesting, align 16
  %cmp = icmp ne i32 %3, 1073741824
  %.b1 = load i1, ptr @rcu_eqs_enter.__already_done, align 1
  %lnot5 = xor i1 %.b1, true
  %4 = select i1 %cmp, i1 %lnot5, i1 false
  br i1 %4, label %if.then, label %if.end33, !prof !1645

if.then:                                          ; preds = %entry
  store i1 true, ptr @rcu_eqs_enter.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 613, i32 noundef 9, ptr noundef null) #24
  br label %if.end33

if.end33:                                         ; preds = %if.then, %entry
  store volatile i32 0, ptr %dynticks_nmi_nesting, align 16
  %dynticks_nesting = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 19
  %5 = load i32, ptr %dynticks_nesting, align 4
  %cmp52 = icmp eq i32 %5, 0
  %.b3282 = load i1, ptr @rcu_eqs_enter.__already_done.124, align 1
  %lnot61 = xor i1 %.b3282, true
  %6 = select i1 %cmp52, i1 %lnot61, i1 false
  br i1 %6, label %if.then70, label %if.end97, !prof !1645

if.then70:                                        ; preds = %if.end33
  store i1 true, ptr @rcu_eqs_enter.__already_done.124, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 616, i32 noundef 9, ptr noundef null) #24
  %.pr = load i32, ptr %dynticks_nesting, align 4
  br label %if.end97

if.end97:                                         ; preds = %if.then70, %if.end33
  %7 = phi i32 [ %.pr, %if.then70 ], [ %5, %if.end33 ]
  %cmp106.not = icmp eq i32 %7, 1
  br i1 %cmp106.not, label %do.body110, label %if.then107

if.then107:                                       ; preds = %if.end97
  %dec = add i32 %7, -1
  store i32 %dec, ptr %dynticks_nesting, align 4
  br label %cleanup

do.body110:                                       ; preds = %if.end97
  %8 = load i32, ptr @debug_locks, align 4
  %tobool112.not = icmp eq i32 %8, 0
  br i1 %tobool112.not, label %if.end220, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body110
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %11, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1661
  %12 = load i32, ptr %cpu, align 4
  %arrayidx133 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = load i32, ptr %arrayidx133, align 4
  %add134 = add i32 %13, ptrtoint (ptr @lockdep_recursion to i32)
  %14 = inttoptr i32 %add134 to ptr
  %15 = load volatile i32, ptr %14, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1662
  %16 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i5 = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i.i5 to ptr
  %preempt_count.i.i6 = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 1
  %18 = load volatile i32, ptr %preempt_count.i.i6, align 4
  %sub.i = add i32 %18, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i6, align 4
  %tobool141.not = icmp eq i32 %15, 0
  br i1 %tobool141.not, label %land.end175, label %if.end220

land.end175:                                      ; preds = %land.lhs.true
  %19 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i7 = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i.i7 to ptr
  %preempt_count.i.i8 = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 1
  %21 = load volatile i32, ptr %preempt_count.i.i8, align 4
  %add.i9 = add i32 %21, 1
  store volatile i32 %add.i9, ptr %preempt_count.i.i8, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1663
  %22 = load i32, ptr %cpu, align 4
  %arrayidx166 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %22
  %23 = load i32, ptr %arrayidx166, align 4
  %add167 = add i32 %23, ptrtoint (ptr @hardirqs_enabled to i32)
  %24 = inttoptr i32 %add167 to ptr
  %25 = load volatile i32, ptr %24, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1664
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i10 = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i10 to ptr
  %preempt_count.i.i11 = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = load volatile i32, ptr %preempt_count.i.i11, align 4
  %sub.i12 = add i32 %28, -1
  store volatile i32 %sub.i12, ptr %preempt_count.i.i11, align 4
  %tobool174 = icmp ne i32 %25, 0
  %.b3293 = load i1, ptr @rcu_eqs_enter.__already_done.125, align 1
  %lnot184 = xor i1 %.b3293, true
  %29 = select i1 %tobool174, i1 %lnot184, i1 false
  br i1 %29, label %if.then193, label %if.end220, !prof !1645

if.then193:                                       ; preds = %land.end175
  store i1 true, ptr @rcu_eqs_enter.__already_done.125, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 623, i32 noundef 9, ptr noundef null) #24
  br label %if.end220

if.end220:                                        ; preds = %if.then193, %land.end175, %land.lhs.true, %do.body110
  %30 = load ptr, ptr @rcu_eqs_enter.___tp_str, align 4
  %31 = load i32, ptr %dynticks_nesting, align 4
  %dynticks = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 21
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dynticks, i32 noundef 4) #24
  %32 = load volatile i32, ptr %dynticks, align 4
  tail call fastcc void @trace_rcu_dyntick(ptr noundef %30, i32 noundef %31, i32 noundef 0, i32 noundef %32)
  %task = getelementptr inbounds %struct.thread_info, ptr %call, i32 0, i32 2
  %33 = load ptr, ptr %task, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %33, i32 0, i32 3
  %34 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %34, 2
  %tobool.i = icmp ne i32 %and.i, 0
  %.b3304 = load i1, ptr @rcu_eqs_enter.__already_done.127, align 1
  %35 = select i1 %tobool.i, i1 true, i1 %.b3304
  br i1 %35, label %if.end288, label %if.then261, !prof !1646

if.then261:                                       ; preds = %if.end220
  store i1 true, ptr @rcu_eqs_enter.__already_done.127, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 626, i32 noundef 9, ptr noundef null) #24
  br label %if.end288

if.end288:                                        ; preds = %if.then261, %if.end220
  tail call fastcc void @rcu_preempt_deferred_qs()
  %call.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dynticks, i32 noundef 4) #24
  store volatile i32 0, ptr %dynticks_nesting, align 4
  tail call fastcc void @rcu_dynticks_eqs_enter()
  br label %cleanup

cleanup:                                          ; preds = %if.end288, %if.then107
  ret void
}

; Function Attrs: noinline noprofile nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rcu_nmi_exit() local_unnamed_addr #4 section ".noinstr.text" align 64 {
entry:
  %call = tail call fastcc ptr @current_thread_info() #26
  %cpu = getelementptr inbounds %struct.thread_info, ptr %call, i32 0, i32 3
  %0 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %0
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr @rcu_data to i32)
  %2 = inttoptr i32 %add to ptr
  %dynticks_nmi_nesting = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 20
  %3 = load i32, ptr %dynticks_nmi_nesting, align 16
  %cmp = icmp slt i32 %3, 1
  %.b157 = load i1, ptr @rcu_nmi_exit.__already_done, align 1
  %lnot7 = xor i1 %.b157, true
  %4 = select i1 %cmp, i1 %lnot7, i1 false
  br i1 %4, label %if.then, label %if.end35, !prof !1645

if.then:                                          ; preds = %entry
  store i1 true, ptr @rcu_nmi_exit.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 750, i32 noundef 9, ptr noundef null) #24
  br label %if.end35

if.end35:                                         ; preds = %if.then, %entry
  %5 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %7
  %8 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %8, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 21) to i32)
  %9 = inttoptr i32 %add.i to ptr
  %10 = load volatile i32, ptr %9, align 4
  %and.i = and i32 %10, 1
  %tobool.not.i = icmp eq i32 %and.i, 0
  %.b156158 = load i1, ptr @rcu_nmi_exit.__already_done.1, align 1
  %lnot53 = xor i1 %.b156158, true
  %11 = select i1 %tobool.not.i, i1 %lnot53, i1 false
  br i1 %11, label %if.then62, label %if.end89, !prof !1645

if.then62:                                        ; preds = %if.end35
  store i1 true, ptr @rcu_nmi_exit.__already_done.1, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 751, i32 noundef 9, ptr noundef null) #24
  br label %if.end89

if.end89:                                         ; preds = %if.then62, %if.end35
  %12 = load i32, ptr %dynticks_nmi_nesting, align 16
  %cmp98.not = icmp eq i32 %12, 1
  br i1 %cmp98.not, label %if.end119, label %if.then99

if.then99:                                        ; preds = %if.end89
  %13 = load ptr, ptr @rcu_nmi_exit.___tp_str, align 4
  %sub = add i32 %12, -2
  %dynticks = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 21
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dynticks, i32 noundef 4) #24
  %14 = load volatile i32, ptr %dynticks, align 4
  tail call fastcc void @trace_rcu_dyntick(ptr noundef %13, i32 noundef %12, i32 noundef %sub, i32 noundef %14)
  %15 = load i32, ptr %dynticks_nmi_nesting, align 16
  %sub110 = add i32 %15, -2
  store volatile i32 %sub110, ptr %dynticks_nmi_nesting, align 16
  br label %cleanup

if.end119:                                        ; preds = %if.end89
  %16 = load ptr, ptr @rcu_nmi_exit.___tp_str.3, align 4
  %dynticks122 = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 21
  %call.i.i159 = tail call zeroext i1 @__kasan_check_read(ptr noundef %dynticks122, i32 noundef 4) #24
  %17 = load volatile i32, ptr %dynticks122, align 4
  tail call fastcc void @trace_rcu_dyntick(ptr noundef %16, i32 noundef 1, i32 noundef 0, i32 noundef %17)
  store volatile i32 0, ptr %dynticks_nmi_nesting, align 16
  %call.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dynticks122, i32 noundef 4) #24
  tail call fastcc void @rcu_dynticks_eqs_enter()
  %18 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i160 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i160 to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = load volatile i32, ptr %preempt_count.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end119, %if.then99
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rcu_dyntick(ptr noundef %polarity, i32 noundef %oldnesting, i32 noundef %newnesting, i32 noundef %dynticks) unnamed_addr #7 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_dyntick, i32 0, i32 1), ptr blockaddress(@trace_rcu_dyntick, %do.body)) #24
          to label %if.end48 [label %do.body], !srcloc !1665

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1666
  %call42 = tail call i32 @__traceiter_rcu_dyntick(ptr noundef null, ptr noundef %polarity, i32 noundef %oldnesting, i32 noundef %newnesting, i32 noundef %dynticks) #24
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1667
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !1646

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1668
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_dyntick, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_dyntick, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #24
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rcu_dyntick.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_rcu_dyntick.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.128, i32 noundef 503, ptr noundef nonnull @.str.129) #24
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1669
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: noinline noprofile nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rcu_dynticks_eqs_enter() unnamed_addr #4 section ".noinstr.text" align 64 {
entry:
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = load ptr, ptr %task.i, align 8
  %trc_reader_special.i = getelementptr inbounds %struct.task_struct, ptr %2, i32 0, i32 46
  %need_mb.i = getelementptr inbounds %struct.anon.2, ptr %trc_reader_special.i, i32 0, i32 3
  store i8 1, ptr %need_mb.i, align 1
  %call = tail call fastcc i32 @rcu_dynticks_inc(i32 noundef 1)
  %and = and i32 %call, 1
  %tobool = icmp ne i32 %and, 0
  %.b38 = load i1, ptr @rcu_dynticks_eqs_enter.__already_done, align 1
  %lnot4 = xor i1 %.b38, true
  %3 = select i1 %tobool, i1 %lnot4, i1 false
  br i1 %3, label %if.then, label %if.end28, !prof !1645

if.then:                                          ; preds = %entry
  store i1 true, ptr @rcu_dynticks_eqs_enter.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 281, i32 noundef 9, ptr noundef null) #24
  br label %if.end28

if.end28:                                         ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline noprofile nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rcu_irq_exit() local_unnamed_addr #4 section ".noinstr.text" align 64 {
entry:
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end86, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1670
  %call = tail call fastcc ptr @current_thread_info() #26
  %cpu = getelementptr inbounds %struct.thread_info, ptr %call, i32 0, i32 3
  %4 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %4
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr @lockdep_recursion to i32)
  %6 = inttoptr i32 %add to ptr
  %7 = load volatile i32, ptr %6, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1671
  %8 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i99 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i99 to ptr
  %preempt_count.i.i100 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = load volatile i32, ptr %preempt_count.i.i100, align 4
  %sub.i = add i32 %10, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i100, align 4
  %tobool20.not = icmp eq i32 %7, 0
  br i1 %tobool20.not, label %land.end, label %if.end86

land.end:                                         ; preds = %land.lhs.true
  %11 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i101 = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i101 to ptr
  %preempt_count.i.i102 = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 1
  %13 = load volatile i32, ptr %preempt_count.i.i102, align 4
  %add.i103 = add i32 %13, 1
  store volatile i32 %add.i103, ptr %preempt_count.i.i102, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1672
  %14 = load i32, ptr %cpu, align 4
  %arrayidx44 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %14
  %15 = load i32, ptr %arrayidx44, align 4
  %add45 = add i32 %15, ptrtoint (ptr @hardirqs_enabled to i32)
  %16 = inttoptr i32 %add45 to ptr
  %17 = load volatile i32, ptr %16, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1673
  %18 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i104 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i104 to ptr
  %preempt_count.i.i105 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = load volatile i32, ptr %preempt_count.i.i105, align 4
  %sub.i106 = add i32 %20, -1
  store volatile i32 %sub.i106, ptr %preempt_count.i.i105, align 4
  %tobool52 = icmp ne i32 %17, 0
  %.b98 = load i1, ptr @rcu_irq_exit.__already_done, align 1
  %lnot57 = xor i1 %.b98, true
  %21 = select i1 %tobool52, i1 %lnot57, i1 false
  br i1 %21, label %if.then, label %if.end86, !prof !1645

if.then:                                          ; preds = %land.end
  store i1 true, ptr @rcu_irq_exit.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 803, i32 noundef 9, ptr noundef null) #24
  br label %if.end86

if.end86:                                         ; preds = %if.then, %land.end, %land.lhs.true, %entry
  tail call void @rcu_nmi_exit()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_irq_exit_check_preempt() local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end86, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %4, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1674
  %5 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i187 = and i32 %5, -16384
  %6 = inttoptr i32 %and.i187 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1675
  %14 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i178 = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i178 to ptr
  %preempt_count.i.i179 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i179 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i179, align 4
  %sub.i = add i32 %17, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i179, align 4
  %tobool20.not = icmp eq i32 %13, 0
  br i1 %tobool20.not, label %land.rhs, label %if.end86

land.rhs:                                         ; preds = %land.lhs.true
  %18 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i180 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i180 to ptr
  %preempt_count.i.i181 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i181 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i181, align 4
  %add.i182 = add i32 %21, 1
  store volatile i32 %add.i182, ptr %preempt_count.i.i181, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1676
  %22 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cpu, align 4
  %arrayidx44 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %23
  %24 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx44, align 4
  %add45 = add i32 %25, ptrtoint (ptr @hardirqs_enabled to i32)
  %26 = inttoptr i32 %add45 to ptr
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %26, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1677
  %29 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i183 = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i183 to ptr
  %preempt_count.i.i184 = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i184 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i184, align 4
  %sub.i185 = add i32 %32, -1
  store volatile i32 %sub.i185, ptr %preempt_count.i.i184, align 4
  %tobool52.not = icmp eq i32 %28, 0
  br i1 %tobool52.not, label %if.end86, label %land.rhs55

land.rhs55:                                       ; preds = %land.rhs
  %.b174 = load i1, ptr @rcu_irq_exit_check_preempt.__already_done, align 1
  br i1 %.b174, label %if.end86, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs55
  store i1 true, ptr @rcu_irq_exit_check_preempt.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 813, i32 noundef 9, ptr noundef null) #24
  br label %if.end86

if.end86:                                         ; preds = %if.then, %land.rhs55, %land.rhs, %land.lhs.true, %entry
  %33 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i188 = and i32 %33, -16384
  %34 = inttoptr i32 %and.i188 to ptr
  %cpu112 = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 3
  %35 = ptrtoint ptr %cpu112 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cpu112, align 4
  %arrayidx113 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %36
  %37 = ptrtoint ptr %arrayidx113 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx113, align 4
  %add114 = add i32 %38, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 19) to i32)
  %39 = inttoptr i32 %add114 to ptr
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %39, align 4
  %cmp = icmp slt i32 %41, 1
  br i1 %cmp, label %land.lhs.true116, label %do.body125

land.lhs.true116:                                 ; preds = %if.end86
  %call117 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool118.not = icmp eq i32 %call117, 0
  br i1 %tobool118.not, label %do.body125, label %land.lhs.true119

land.lhs.true119:                                 ; preds = %land.lhs.true116
  %.b168173 = load i1, ptr @rcu_irq_exit_check_preempt.__warned, align 1
  br i1 %.b168173, label %do.body125, label %if.then121

if.then121:                                       ; preds = %land.lhs.true119
  store i1 true, ptr @rcu_irq_exit_check_preempt.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 816, ptr noundef nonnull @.str.6) #24
  br label %do.body125

do.body125:                                       ; preds = %if.then121, %land.lhs.true119, %land.lhs.true116, %if.end86
  %42 = ptrtoint ptr %cpu112 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %cpu112, align 4
  %arrayidx142 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %43
  %44 = ptrtoint ptr %arrayidx142 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %arrayidx142, align 4
  %add143 = add i32 %45, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 20) to i32)
  %46 = inttoptr i32 %add143 to ptr
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %46, align 4
  %cmp145.not = icmp eq i32 %48, 1073741824
  br i1 %cmp145.not, label %do.body155, label %land.lhs.true146

land.lhs.true146:                                 ; preds = %do.body125
  %call147 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool148.not = icmp eq i32 %call147, 0
  br i1 %tobool148.not, label %do.body155, label %land.lhs.true149

land.lhs.true149:                                 ; preds = %land.lhs.true146
  %.b169172 = load i1, ptr @rcu_irq_exit_check_preempt.__warned.7, align 1
  br i1 %.b169172, label %do.body155, label %if.then151

if.then151:                                       ; preds = %land.lhs.true149
  store i1 true, ptr @rcu_irq_exit_check_preempt.__warned.7, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 819, ptr noundef nonnull @.str.8) #24
  br label %do.body155

do.body155:                                       ; preds = %if.then151, %land.lhs.true149, %land.lhs.true146, %do.body125
  %49 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %49, -16384
  %50 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %50, i32 0, i32 3
  %51 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %52
  %53 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %arrayidx.i, align 4
  %add.i186 = add i32 %54, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 21) to i32)
  %55 = inttoptr i32 %add.i186 to ptr
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %55, align 4
  %and.i = and i32 %57, 1
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %land.lhs.true157, label %do.end165

land.lhs.true157:                                 ; preds = %do.body155
  %call158 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool159.not = icmp eq i32 %call158, 0
  br i1 %tobool159.not, label %do.end165, label %land.lhs.true160

land.lhs.true160:                                 ; preds = %land.lhs.true157
  %.b170171 = load i1, ptr @rcu_irq_exit_check_preempt.__warned.9, align 1
  br i1 %.b170171, label %do.end165, label %if.then162

if.then162:                                       ; preds = %land.lhs.true160
  store i1 true, ptr @rcu_irq_exit_check_preempt.__warned.9, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 821, ptr noundef nonnull @.str.10) #24
  br label %do.end165

do.end165:                                        ; preds = %if.then162, %land.lhs.true160, %land.lhs.true157, %do.body155
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_irq_exit_irqson() local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i = and i32 %0, 128
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.then21, label %do.end11

do.end11:                                         ; preds = %entry
  tail call void @rcu_irq_exit()
  br label %do.body23

if.then21:                                        ; preds = %entry
  tail call void @trace_hardirqs_off() #24
  tail call void @rcu_irq_exit()
  tail call void @trace_hardirqs_on() #24
  br label %do.body23

do.body23:                                        ; preds = %if.then21, %do.end11
  %1 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #24, !srcloc !1649
  %and.i.i = and i32 %1, 128
  %tobool32.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool32.not, label %if.then36, label %do.end39, !prof !1645

if.then36:                                        ; preds = %do.body23
  tail call void @warn_bogus_irq_restore() #24
  br label %do.end39

do.end39:                                         ; preds = %if.then36, %do.body23
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #24, !srcloc !1679
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_idle_exit() #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i = and i32 %0, 128
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.then21, label %do.end11

do.end11:                                         ; preds = %entry
  tail call fastcc void @rcu_eqs_exit()
  br label %do.body23

if.then21:                                        ; preds = %entry
  tail call void @trace_hardirqs_off() #24
  tail call fastcc void @rcu_eqs_exit()
  tail call void @trace_hardirqs_on() #24
  br label %do.body23

do.body23:                                        ; preds = %if.then21, %do.end11
  %1 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #24, !srcloc !1649
  %and.i.i = and i32 %1, 128
  %tobool32.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool32.not, label %if.then36, label %do.end39, !prof !1645

if.then36:                                        ; preds = %do.body23
  tail call void @warn_bogus_irq_restore() #24
  br label %do.end39

do.end39:                                         ; preds = %if.then36, %do.body23
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #24, !srcloc !1679
  ret void
}

; Function Attrs: noinline noprofile nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rcu_eqs_exit() unnamed_addr #4 section ".noinstr.text" align 64 {
entry:
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end87_crit_edge, label %land.lhs.true

entry.if.end87_crit_edge:                         ; preds = %entry
  %.pre16 = tail call fastcc ptr @current_thread_info() #26
  br label %if.end87

land.lhs.true:                                    ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1680
  %call = tail call fastcc ptr @current_thread_info() #26
  %cpu = getelementptr inbounds %struct.thread_info, ptr %call, i32 0, i32 3
  %4 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %4
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr @lockdep_recursion to i32)
  %6 = inttoptr i32 %add to ptr
  %7 = load volatile i32, ptr %6, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1681
  %8 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i5 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i5 to ptr
  %preempt_count.i.i6 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = load volatile i32, ptr %preempt_count.i.i6, align 4
  %sub.i = add i32 %10, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i6, align 4
  %tobool20.not = icmp eq i32 %7, 0
  br i1 %tobool20.not, label %land.end, label %if.end87

land.end:                                         ; preds = %land.lhs.true
  %11 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i7 = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i7 to ptr
  %preempt_count.i.i8 = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 1
  %13 = load volatile i32, ptr %preempt_count.i.i8, align 4
  %add.i9 = add i32 %13, 1
  store volatile i32 %add.i9, ptr %preempt_count.i.i8, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1682
  %14 = load i32, ptr %cpu, align 4
  %arrayidx44 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %14
  %15 = load i32, ptr %arrayidx44, align 4
  %add45 = add i32 %15, ptrtoint (ptr @hardirqs_enabled to i32)
  %16 = inttoptr i32 %add45 to ptr
  %17 = load volatile i32, ptr %16, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1683
  %18 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i10 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i10 to ptr
  %preempt_count.i.i11 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = load volatile i32, ptr %preempt_count.i.i11, align 4
  %sub.i12 = add i32 %20, -1
  store volatile i32 %sub.i12, ptr %preempt_count.i.i11, align 4
  %tobool52 = icmp ne i32 %17, 0
  %.b1 = load i1, ptr @rcu_eqs_exit.__already_done, align 1
  %lnot58 = xor i1 %.b1, true
  %21 = select i1 %tobool52, i1 %lnot58, i1 false
  br i1 %21, label %if.then, label %if.end87, !prof !1645

if.then:                                          ; preds = %land.end
  store i1 true, ptr @rcu_eqs_exit.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 853, i32 noundef 9, ptr noundef null) #24
  br label %if.end87

if.end87:                                         ; preds = %if.then, %land.end, %land.lhs.true, %entry.if.end87_crit_edge
  %call104.pre-phi = phi ptr [ %.pre16, %entry.if.end87_crit_edge ], [ %call, %land.lhs.true ], [ %call, %if.then ], [ %call, %land.end ]
  %cpu105 = getelementptr inbounds %struct.thread_info, ptr %call104.pre-phi, i32 0, i32 3
  %22 = load i32, ptr %cpu105, align 4
  %arrayidx106 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %22
  %23 = load i32, ptr %arrayidx106, align 4
  %add107 = add i32 %23, ptrtoint (ptr @rcu_data to i32)
  %24 = inttoptr i32 %add107 to ptr
  %dynticks_nesting = getelementptr inbounds %struct.rcu_data, ptr %24, i32 0, i32 19
  %25 = load i32, ptr %dynticks_nesting, align 4
  %cmp = icmp slt i32 %25, 0
  %.b3262 = load i1, ptr @rcu_eqs_exit.__already_done.130, align 1
  %lnot117 = xor i1 %.b3262, true
  %26 = select i1 %cmp, i1 %lnot117, i1 false
  br i1 %26, label %if.end153.thread, label %if.end153, !prof !1645

if.end153.thread:                                 ; preds = %if.end87
  store i1 true, ptr @rcu_eqs_exit.__already_done.130, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 856, i32 noundef 9, ptr noundef null) #24
  %.pre = load i32, ptr %dynticks_nesting, align 4
  br label %if.then162

if.end153:                                        ; preds = %if.end87
  %tobool161.not = icmp eq i32 %25, 0
  br i1 %tobool161.not, label %if.end164, label %if.then162

if.then162:                                       ; preds = %if.end153, %if.end153.thread
  %27 = phi i32 [ %.pre, %if.end153.thread ], [ %25, %if.end153 ]
  %inc = add i32 %27, 1
  store i32 %inc, ptr %dynticks_nesting, align 4
  br label %cleanup

if.end164:                                        ; preds = %if.end153
  tail call fastcc void @rcu_dynticks_eqs_exit()
  %dynticks = getelementptr inbounds %struct.rcu_data, ptr %24, i32 0, i32 21
  %call.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dynticks, i32 noundef 4) #24
  %28 = load ptr, ptr @rcu_eqs_exit.___tp_str, align 4
  %29 = load i32, ptr %dynticks_nesting, align 4
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dynticks, i32 noundef 4) #24
  %30 = load volatile i32, ptr %dynticks, align 4
  tail call fastcc void @trace_rcu_dyntick(ptr noundef %28, i32 noundef %29, i32 noundef 1, i32 noundef %30)
  %task = getelementptr inbounds %struct.thread_info, ptr %call104.pre-phi, i32 0, i32 2
  %31 = load ptr, ptr %task, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %31, i32 0, i32 3
  %32 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %32, 2
  %tobool.i = icmp ne i32 %and.i, 0
  %.b3273 = load i1, ptr @rcu_eqs_exit.__already_done.132, align 1
  %33 = select i1 %tobool.i, i1 true, i1 %.b3273
  br i1 %33, label %if.end224, label %if.then197, !prof !1646

if.then197:                                       ; preds = %if.end164
  store i1 true, ptr @rcu_eqs_exit.__already_done.132, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 872, i32 noundef 9, ptr noundef null) #24
  br label %if.end224

if.end224:                                        ; preds = %if.then197, %if.end164
  store volatile i32 1, ptr %dynticks_nesting, align 4
  %dynticks_nmi_nesting = getelementptr inbounds %struct.rcu_data, ptr %24, i32 0, i32 20
  %34 = load i32, ptr %dynticks_nmi_nesting, align 16
  %tobool243 = icmp ne i32 %34, 0
  %.b3284 = load i1, ptr @rcu_eqs_exit.__already_done.133, align 1
  %lnot252 = xor i1 %.b3284, true
  %35 = select i1 %tobool243, i1 %lnot252, i1 false
  br i1 %35, label %if.then261, label %if.end288, !prof !1645

if.then261:                                       ; preds = %if.end224
  store i1 true, ptr @rcu_eqs_exit.__already_done.133, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 874, i32 noundef 9, ptr noundef null) #24
  br label %if.end288

if.end288:                                        ; preds = %if.then261, %if.end224
  store volatile i32 1073741824, ptr %dynticks_nmi_nesting, align 16
  br label %cleanup

cleanup:                                          ; preds = %if.end288, %if.then162
  ret void
}

; Function Attrs: noinline noprofile nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rcu_nmi_enter() local_unnamed_addr #4 section ".noinstr.text" align 64 {
entry:
  %call = tail call fastcc ptr @current_thread_info() #26
  %cpu = getelementptr inbounds %struct.thread_info, ptr %call, i32 0, i32 3
  %0 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %0
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr @rcu_data to i32)
  %2 = inttoptr i32 %add to ptr
  %dynticks_nmi_nesting = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 20
  %3 = load i32, ptr %dynticks_nmi_nesting, align 16
  %cmp = icmp slt i32 %3, 0
  %.b97 = load i1, ptr @rcu_nmi_enter.__already_done, align 1
  %lnot4 = xor i1 %.b97, true
  %4 = select i1 %cmp, i1 %lnot4, i1 false
  br i1 %4, label %if.then, label %if.end32, !prof !1645

if.then:                                          ; preds = %entry
  store i1 true, ptr @rcu_nmi_enter.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 993, i32 noundef 9, ptr noundef null) #24
  br label %if.end32

if.end32:                                         ; preds = %if.then, %entry
  %5 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %7
  %8 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %8, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 21) to i32)
  %9 = inttoptr i32 %add.i to ptr
  %10 = load volatile i32, ptr %9, align 4
  %and.i = and i32 %10, 1
  %tobool.not.i = icmp eq i32 %and.i, 0
  %11 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i98 = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i98 to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 1
  %13 = load volatile i32, ptr %preempt_count.i, align 4
  br i1 %tobool.not.i, label %if.then41, label %if.end62

if.then41:                                        ; preds = %if.end32
  tail call fastcc void @rcu_dynticks_eqs_exit()
  %dynticks = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 21
  %call.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dynticks, i32 noundef 4) #24
  %call.i99 = tail call zeroext i1 @__kasan_check_write(ptr noundef %dynticks, i32 noundef 4) #24
  br label %if.end62

if.end62:                                         ; preds = %if.then41, %if.end32
  %rcu_nmi_enter.___tp_str.rcu_nmi_enter.___tp_str.12 = phi ptr [ @rcu_nmi_enter.___tp_str, %if.then41 ], [ @rcu_nmi_enter.___tp_str.12, %if.end32 ]
  %incby.0 = phi i32 [ 1, %if.then41 ], [ 2, %if.end32 ]
  %cond = load ptr, ptr %rcu_nmi_enter.___tp_str.rcu_nmi_enter.___tp_str.12, align 4
  %14 = load i32, ptr %dynticks_nmi_nesting, align 16
  %add68 = add i32 %14, %incby.0
  %dynticks69 = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 21
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dynticks69, i32 noundef 4) #24
  %15 = load volatile i32, ptr %dynticks69, align 4
  tail call fastcc void @trace_rcu_dyntick(ptr noundef %cond, i32 noundef %14, i32 noundef %add68, i32 noundef %15)
  %16 = load i32, ptr %dynticks_nmi_nesting, align 16
  %add80 = add i32 %16, %incby.0
  store volatile i32 %add80, ptr %dynticks_nmi_nesting, align 16
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1684
  ret void
}

; Function Attrs: noinline noprofile nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rcu_dynticks_eqs_exit() unnamed_addr #4 section ".noinstr.text" align 64 {
entry:
  %call = tail call fastcc i32 @rcu_dynticks_inc(i32 noundef 1)
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = load ptr, ptr %task.i, align 8
  %trc_reader_special.i = getelementptr inbounds %struct.task_struct, ptr %2, i32 0, i32 46
  %need_mb.i = getelementptr inbounds %struct.anon.2, ptr %trc_reader_special.i, i32 0, i32 3
  store i8 0, ptr %need_mb.i, align 1
  %and = and i32 %call, 1
  %tobool.not = icmp eq i32 %and, 0
  %.b39 = load i1, ptr @rcu_dynticks_eqs_exit.__already_done, align 1
  %lnot5 = xor i1 %.b39, true
  %3 = select i1 %tobool.not, i1 %lnot5, i1 false
  br i1 %3, label %if.then, label %if.end29, !prof !1645

if.then:                                          ; preds = %entry
  store i1 true, ptr @rcu_dynticks_eqs_exit.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 301, i32 noundef 9, ptr noundef null) #24
  br label %if.end29

if.end29:                                         ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline noprofile nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @rcu_irq_enter() local_unnamed_addr #4 section ".noinstr.text" align 64 {
entry:
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end86, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1685
  %call = tail call fastcc ptr @current_thread_info() #26
  %cpu = getelementptr inbounds %struct.thread_info, ptr %call, i32 0, i32 3
  %4 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %4
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr @lockdep_recursion to i32)
  %6 = inttoptr i32 %add to ptr
  %7 = load volatile i32, ptr %6, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1686
  %8 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i99 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i99 to ptr
  %preempt_count.i.i100 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = load volatile i32, ptr %preempt_count.i.i100, align 4
  %sub.i = add i32 %10, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i100, align 4
  %tobool20.not = icmp eq i32 %7, 0
  br i1 %tobool20.not, label %land.end, label %if.end86

land.end:                                         ; preds = %land.lhs.true
  %11 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i101 = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i101 to ptr
  %preempt_count.i.i102 = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 1
  %13 = load volatile i32, ptr %preempt_count.i.i102, align 4
  %add.i103 = add i32 %13, 1
  store volatile i32 %add.i103, ptr %preempt_count.i.i102, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1687
  %14 = load i32, ptr %cpu, align 4
  %arrayidx44 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %14
  %15 = load i32, ptr %arrayidx44, align 4
  %add45 = add i32 %15, ptrtoint (ptr @hardirqs_enabled to i32)
  %16 = inttoptr i32 %add45 to ptr
  %17 = load volatile i32, ptr %16, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1688
  %18 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i104 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i104 to ptr
  %preempt_count.i.i105 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = load volatile i32, ptr %preempt_count.i.i105, align 4
  %sub.i106 = add i32 %20, -1
  store volatile i32 %sub.i106, ptr %preempt_count.i.i105, align 4
  %tobool52 = icmp ne i32 %17, 0
  %.b98 = load i1, ptr @rcu_irq_enter.__already_done, align 1
  %lnot57 = xor i1 %.b98, true
  %21 = select i1 %tobool52, i1 %lnot57, i1 false
  br i1 %21, label %if.then, label %if.end86, !prof !1645

if.then:                                          ; preds = %land.end
  store i1 true, ptr @rcu_irq_enter.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1059, i32 noundef 9, ptr noundef null) #24
  br label %if.end86

if.end86:                                         ; preds = %if.then, %land.end, %land.lhs.true, %entry
  tail call void @rcu_nmi_enter()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_irq_enter_irqson() local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i = and i32 %0, 128
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.then21, label %do.end11

do.end11:                                         ; preds = %entry
  tail call void @rcu_irq_enter()
  br label %do.body23

if.then21:                                        ; preds = %entry
  tail call void @trace_hardirqs_off() #24
  tail call void @rcu_irq_enter()
  tail call void @trace_hardirqs_on() #24
  br label %do.body23

do.body23:                                        ; preds = %if.then21, %do.end11
  %1 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #24, !srcloc !1649
  %and.i.i = and i32 %1, 128
  %tobool32.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool32.not, label %if.then36, label %do.end39, !prof !1645

if.then36:                                        ; preds = %do.body23
  tail call void @warn_bogus_irq_restore() #24
  br label %do.end39

do.end39:                                         ; preds = %if.then36, %do.body23
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #24, !srcloc !1679
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rcu_needs_cpu(i64 noundef %basemono, ptr nocapture noundef writeonly %nextevt) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %nextevt to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 9223372036854775807, ptr %nextevt, align 8
  %1 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %4
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx, align 4
  %add = add i32 %6, ptrtoint (ptr @rcu_data to i32)
  %7 = inttoptr i32 %add to ptr
  %cblist = getelementptr inbounds %struct.rcu_data, ptr %7, i32 0, i32 13
  %8 = ptrtoint ptr %cblist to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile ptr, ptr %cblist, align 4
  %tobool.not.i = icmp eq ptr %9, null
  br i1 %tobool.not.i, label %land.end, label %do.body3

do.body3:                                         ; preds = %entry
  %call13 = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %7)
  %lnot = xor i1 %call13, true
  %phi.cast = zext i1 %lnot to i32
  br label %land.end

land.end:                                         ; preds = %do.body3, %entry
  %10 = phi i32 [ 0, %entry ], [ %phi.cast, %do.body3 ]
  ret i32 %10
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %rdp) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 14, i32 5), i32 noundef -1) #24
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %lor.lhs.false, label %do.end36

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @lockdep_is_cpus_held() #24
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %lor.lhs.false3, label %do.end36

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %dep_map.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 31, i32 4
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #24
  %tobool5.not = icmp eq i32 %call.i.i, 0
  br i1 %tobool5.not, label %lor.lhs.false6, label %do.end36

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr @rcu_data to i32)
  %6 = inttoptr i32 %add to ptr
  %cmp = icmp eq ptr %6, %rdp
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false27

land.lhs.true:                                    ; preds = %lor.lhs.false6
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %7 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %preempt_count.i, align 4
  %cmp11 = icmp eq i32 %8, 0
  br i1 %cmp11, label %land.lhs.true12, label %do.end36

land.lhs.true12:                                  ; preds = %land.lhs.true
  %9 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #24, !srcloc !1649
  %and.i42 = and i32 %9, 128
  %tobool26.not = icmp eq i32 %and.i42, 0
  br i1 %tobool26.not, label %lor.lhs.false27, label %do.end36

lor.lhs.false27:                                  ; preds = %land.lhs.true12, %lor.lhs.false6
  %nocb_cb_kthread.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 51
  %10 = ptrtoint ptr %nocb_cb_kthread.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %nocb_cb_kthread.i, align 16
  %tobool.not.i = icmp eq ptr %11, null
  br i1 %tobool.not.i, label %do.end36, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %lor.lhs.false27
  %nocb_gp_kthread.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 30
  %12 = ptrtoint ptr %nocb_gp_kthread.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %nocb_gp_kthread.i, align 16
  %tobool1.not.i = icmp eq ptr %13, null
  br i1 %tobool1.not.i, label %do.end36, label %if.end.i

if.end.i:                                         ; preds = %lor.lhs.false.i
  %14 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i43 = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i43 to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 2
  %16 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %task.i, align 8
  %cmp.i = icmp eq ptr %17, %11
  %cmp7.i = icmp eq ptr %17, %13
  %or.cond.i = select i1 %cmp.i, i1 true, i1 %cmp7.i
  br i1 %or.cond.i, label %if.then8.i, label %land.lhs.true30

if.then8.i:                                       ; preds = %if.end.i
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %18 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %preempt_count.i.i, align 4
  %and.i44 = and i32 %19, 15728640
  %20 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i25.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i25.i to ptr
  %preempt_count.i26.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i26.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i26.i, align 4
  %and11.i = and i32 %23, 983040
  %or.i = or i32 %and11.i, %and.i44
  %24 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i27.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i27.i to ptr
  %preempt_count.i28.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i28.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i28.i, align 4
  %and14.i = and i32 %27, 256
  %or15.i = or i32 %or.i, %and14.i
  %tobool16.not.i = icmp eq i32 %or15.i, 0
  br i1 %tobool16.not.i, label %do.end36, label %land.lhs.true30

land.lhs.true30:                                  ; preds = %if.then8.i, %if.end.i
  %call31 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %do.end36, label %land.lhs.true33

land.lhs.true33:                                  ; preds = %land.lhs.true30
  %.b41 = load i1, ptr @rcu_rdp_is_offloaded.__warned, align 1
  br i1 %.b41, label %do.end36, label %if.then

if.then:                                          ; preds = %land.lhs.true33
  store i1 true, ptr @rcu_rdp_is_offloaded.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.280, i32 noundef 35, ptr noundef nonnull @.str.547) #24
  br label %do.end36

do.end36:                                         ; preds = %if.then, %land.lhs.true33, %land.lhs.true30, %if.then8.i, %lor.lhs.false.i, %lor.lhs.false27, %land.lhs.true12, %land.lhs.true, %lor.lhs.false3, %lor.lhs.false, %entry
  %flags1.i.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 13, i32 5
  %28 = ptrtoint ptr %flags1.i.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load volatile i8, ptr %flags1.i.i, align 4
  %30 = and i8 %29, 4
  %tobool.i.i = icmp ne i8 %30, 0
  ret i1 %tobool.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @rcu_is_watching() #1 align 64 {
entry:
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1689
  %4 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %7
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx.i, align 4
  %add.i4 = add i32 %9, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 21) to i32)
  %10 = inttoptr i32 %add.i4 to ptr
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %10, align 4
  %and.i = and i32 %12, 1
  %tobool.not.i = icmp ne i32 %and.i, 0
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1690
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i5 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i5 to ptr
  %preempt_count.i.i6 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i6 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i6, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i6, align 4
  ret i1 %tobool.not.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_request_urgent_qs_task(ptr noundef %t) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1691
  %stack.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 1
  %0 = ptrtoint ptr %stack.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %stack.i, align 4
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %cpu.i, align 4
  %call1 = tail call i32 @task_curr(ptr noundef %t) #24
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %cleanup, label %do.end6

do.end6:                                          ; preds = %entry
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1692
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 23) to i32)
  %6 = inttoptr i32 %add to ptr
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store1_noabort(i32 %7)
  store volatile i8 1, ptr %6, align 1
  br label %cleanup

cleanup:                                          ; preds = %do.end6, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @task_curr(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @rcu_lockdep_current_cpu_online() #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %3, 15728640
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %lor.lhs.false, label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, ptr @rcu_scheduler_fully_active, align 4
  %tobool1.not = icmp eq i32 %4, 0
  br i1 %tobool1.not, label %cleanup, label %do.body

do.body:                                          ; preds = %lor.lhs.false
  %5 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %8, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1693
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, ptrtoint (ptr @rcu_data to i32)
  %15 = inttoptr i32 %add to ptr
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %15, i32 0, i32 7
  %16 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %mynode, align 16
  %grpmask = getelementptr inbounds %struct.rcu_data, ptr %15, i32 0, i32 8
  %18 = ptrtoint ptr %grpmask to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %grpmask, align 4
  %qsmaskinitnext.i = getelementptr inbounds %struct.rcu_node, ptr %17, i32 0, i32 7
  %20 = ptrtoint ptr %qsmaskinitnext.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %qsmaskinitnext.i, align 4
  %and8 = and i32 %21, %19
  %tobool9.not = icmp eq i32 %and8, 0
  br i1 %tobool9.not, label %do.end13, label %if.then17

do.end13:                                         ; preds = %do.body
  %ofl_seq = getelementptr inbounds %struct.rcu_node, ptr %17, i32 0, i32 8
  %22 = ptrtoint ptr %ofl_seq to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %ofl_seq, align 8
  %and15 = and i32 %23, 1
  %tobool16.not = icmp eq i32 %and15, 0
  br i1 %tobool16.not, label %do.body19, label %if.then17

if.then17:                                        ; preds = %do.end13, %do.body
  br label %do.body19

do.body19:                                        ; preds = %if.then17, %do.end13
  %ret.0.off0 = phi i1 [ true, %if.then17 ], [ false, %do.end13 ]
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1694
  %24 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i27 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i27 to ptr
  %preempt_count.i.i28 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i28 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i28, align 4
  %sub.i = add i32 %27, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i28, align 4
  br label %cleanup

cleanup:                                          ; preds = %do.body19, %lor.lhs.false, %entry
  %retval.0 = phi i1 [ %ret.0.off0, %do.body19 ], [ true, %lor.lhs.false ], [ true, %entry ]
  ret i1 %retval.0
}

; Function Attrs: nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_gp_set_torture_wait(i32 noundef %duration) #8 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp = icmp sgt i32 %duration, 0
  br i1 %cmp, label %do.body2, label %if.end

do.body2:                                         ; preds = %entry
  store volatile i32 %duration, ptr @sleep_duration, align 4
  br label %if.end

if.end:                                           ; preds = %do.body2, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rcutree_dying_cpu(i32 noundef %cpu) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr @rcu_data to i32)
  %2 = inttoptr i32 %add to ptr
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 7
  %3 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mynode, align 16
  %qsmask = getelementptr inbounds %struct.rcu_node, ptr %4, i32 0, i32 4
  %5 = ptrtoint ptr %qsmask to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %qsmask, align 8
  %grpmask = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 8
  %7 = ptrtoint ptr %grpmask to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %grpmask, align 4
  %and = and i32 %8, %6
  %tobool.not = icmp eq i32 %and, 0
  %9 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %gp_seq = getelementptr inbounds %struct.rcu_node, ptr %4, i32 0, i32 1
  %10 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %gp_seq, align 4
  %rcutree_dying_cpu.___tp_str.15.val = load ptr, ptr @rcutree_dying_cpu.___tp_str.15, align 4
  %rcutree_dying_cpu.___tp_str.val = load ptr, ptr @rcutree_dying_cpu.___tp_str, align 4
  %cond = select i1 %tobool.not, ptr %rcutree_dying_cpu.___tp_str.15.val, ptr %rcutree_dying_cpu.___tp_str.val
  tail call fastcc void @trace_rcu_grace_period(ptr noundef %9, i32 noundef %11, ptr noundef %cond)
  ret i32 0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rcu_grace_period(ptr noundef %rcuname, i32 noundef %gp_seq, ptr noundef %gpevent) unnamed_addr #7 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_grace_period, i32 0, i32 1), ptr blockaddress(@trace_rcu_grace_period, %do.body)) #24
          to label %if.end48 [label %do.body], !srcloc !1665

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1695
  %call42 = tail call i32 @__traceiter_rcu_grace_period(ptr noundef null, ptr noundef %rcuname, i32 noundef %gp_seq, ptr noundef %gpevent) #24
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1696
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !1646

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1668
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_grace_period, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_grace_period, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #24
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rcu_grace_period.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_rcu_grace_period.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.128, i32 noundef 89, ptr noundef nonnull @.str.129) #24
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1669
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rcutree_dead_cpu(i32 noundef %cpu) local_unnamed_addr #8 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 3), align 16
  %sub = add i32 %0, -1
  store volatile i32 %sub, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 3), align 16
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_sched_clock_irq(i32 noundef %user) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @rcu_sched_clock_irq.___tp_str, align 4
  tail call fastcc void @trace_rcu_utilization(ptr noundef %0)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %1 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.end87, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %5, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1697
  %6 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %9
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx, align 4
  %add = add i32 %11, ptrtoint (ptr @lockdep_recursion to i32)
  %12 = inttoptr i32 %add to ptr
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %12, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1698
  %15 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i319 = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i.i319 to ptr
  %preempt_count.i.i320 = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %preempt_count.i.i320 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %preempt_count.i.i320, align 4
  %sub.i = add i32 %18, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i320, align 4
  %tobool21.not = icmp eq i32 %14, 0
  br i1 %tobool21.not, label %land.rhs, label %if.end87

land.rhs:                                         ; preds = %land.lhs.true
  %19 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i321 = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i.i321 to ptr
  %preempt_count.i.i322 = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %preempt_count.i.i322 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %preempt_count.i.i322, align 4
  %add.i323 = add i32 %22, 1
  store volatile i32 %add.i323, ptr %preempt_count.i.i322, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1699
  %23 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %cpu, align 4
  %arrayidx45 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %24
  %25 = ptrtoint ptr %arrayidx45 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %arrayidx45, align 4
  %add46 = add i32 %26, ptrtoint (ptr @hardirqs_enabled to i32)
  %27 = inttoptr i32 %add46 to ptr
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %27, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1700
  %30 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i324 = and i32 %30, -16384
  %31 = inttoptr i32 %and.i.i.i324 to ptr
  %preempt_count.i.i325 = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %preempt_count.i.i325 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %preempt_count.i.i325, align 4
  %sub.i326 = add i32 %33, -1
  store volatile i32 %sub.i326, ptr %preempt_count.i.i325, align 4
  %tobool53.not = icmp eq i32 %29, 0
  br i1 %tobool53.not, label %if.end87, label %land.rhs56

land.rhs56:                                       ; preds = %land.rhs
  %.b312 = load i1, ptr @rcu_sched_clock_irq.__already_done, align 1
  br i1 %.b312, label %if.end87, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs56
  store i1 true, ptr @rcu_sched_clock_irq.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2605, i32 noundef 9, ptr noundef null) #24
  br label %if.end87

if.end87:                                         ; preds = %if.then, %land.rhs56, %land.rhs, %land.lhs.true, %entry
  %34 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i339 = and i32 %34, -16384
  %35 = inttoptr i32 %and.i339 to ptr
  %cpu111 = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 3
  %36 = ptrtoint ptr %cpu111 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %cpu111, align 4
  %arrayidx112 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %37
  %38 = ptrtoint ptr %arrayidx112 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %arrayidx112, align 4
  %add113 = add i32 %39, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 9) to i32)
  %40 = inttoptr i32 %add113 to ptr
  %41 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %40, align 4
  %add114 = add i32 %42, 1
  store i32 %add114, ptr %40, align 4
  %43 = load i32, ptr %cpu111, align 4
  %arrayidx132 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %43
  %44 = ptrtoint ptr %arrayidx132 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %arrayidx132, align 4
  %add133 = add i32 %45, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 23) to i32)
  %46 = inttoptr i32 %add133 to ptr
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load volatile i8, ptr %46, align 1, !range !1644
  %tobool134.not = icmp eq i8 %48, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1701
  br i1 %tobool134.not, label %if.end174, label %if.then145

if.then145:                                       ; preds = %if.end87
  %call146 = tail call fastcc i32 @rcu_is_cpu_rrupt_from_idle()
  %49 = or i32 %call146, %user
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %if.then150, label %if.end152

if.then150:                                       ; preds = %if.then145
  %task = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 2
  %51 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %task, align 8
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %52, i32 0, i32 1
  %53 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %stack.i.i, align 4
  tail call void @_set_bit(i32 noundef 1, ptr noundef %54) #24
  br label %if.end152

if.end152:                                        ; preds = %if.then150, %if.then145
  %55 = ptrtoint ptr %cpu111 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %cpu111, align 4
  %arrayidx168 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %56
  %57 = ptrtoint ptr %arrayidx168 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %arrayidx168, align 4
  %add169 = add i32 %58, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 23) to i32)
  %59 = inttoptr i32 %add169 to ptr
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_store1_noabort(i32 %60)
  store i8 0, ptr %59, align 1
  br label %if.end174

if.end174:                                        ; preds = %if.end152, %if.end87
  %tobool.not.i = icmp eq i32 %user, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end174
  %call.i = tail call fastcc i32 @rcu_is_cpu_rrupt_from_idle() #24
  %tobool1.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool1.not.i, label %rcu_flavor_sched_clock_irq.exit, label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i, %if.end174
  tail call fastcc void @rcu_qs() #24
  br label %rcu_flavor_sched_clock_irq.exit

rcu_flavor_sched_clock_irq.exit:                  ; preds = %if.then.i, %lor.lhs.false.i
  %61 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %61, -16384
  %62 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %62, i32 0, i32 3
  %63 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %64
  %65 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %arrayidx.i, align 4
  %add.i340 = add i32 %66, ptrtoint (ptr @rcu_data to i32)
  %67 = inttoptr i32 %add.i340 to ptr
  %mynode.i = getelementptr inbounds %struct.rcu_data, ptr %67, i32 0, i32 7
  %68 = ptrtoint ptr %mynode.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %mynode.i, align 16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %70 = load i32, ptr @debug_locks, align 4
  %tobool.not.i341 = icmp eq i32 %70, 0
  br i1 %tobool.not.i341, label %if.end86.i.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %rcu_flavor_sched_clock_irq.exit
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %62, i32 0, i32 1
  %71 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %72, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1702
  %73 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %cpu.i, align 4
  %arrayidx23.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %74
  %75 = ptrtoint ptr %arrayidx23.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %arrayidx23.i, align 4
  %add24.i = add i32 %76, ptrtoint (ptr @lockdep_recursion to i32)
  %77 = inttoptr i32 %add24.i to ptr
  %78 = ptrtoint ptr %77 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load volatile i32, ptr %77, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1703
  %80 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i182.i = and i32 %80, -16384
  %81 = inttoptr i32 %and.i.i.i182.i to ptr
  %preempt_count.i.i183.i = getelementptr inbounds %struct.thread_info, ptr %81, i32 0, i32 1
  %82 = ptrtoint ptr %preempt_count.i.i183.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile i32, ptr %preempt_count.i.i183.i, align 4
  %sub.i.i = add i32 %83, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i183.i, align 4
  %tobool31.not.i = icmp eq i32 %79, 0
  br i1 %tobool31.not.i, label %land.rhs.i, label %if.end97.i

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %84 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i184.i = and i32 %84, -16384
  %85 = inttoptr i32 %and.i.i.i184.i to ptr
  %preempt_count.i.i185.i = getelementptr inbounds %struct.thread_info, ptr %85, i32 0, i32 1
  %86 = ptrtoint ptr %preempt_count.i.i185.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load volatile i32, ptr %preempt_count.i.i185.i, align 4
  %add.i186.i = add i32 %87, 1
  store volatile i32 %add.i186.i, ptr %preempt_count.i.i185.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1704
  %88 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %cpu.i, align 4
  %arrayidx55.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %89
  %90 = ptrtoint ptr %arrayidx55.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %arrayidx55.i, align 4
  %add56.i = add i32 %91, ptrtoint (ptr @hardirqs_enabled to i32)
  %92 = inttoptr i32 %add56.i to ptr
  %93 = ptrtoint ptr %92 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load volatile i32, ptr %92, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1705
  %95 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i187.i = and i32 %95, -16384
  %96 = inttoptr i32 %and.i.i.i187.i to ptr
  %preempt_count.i.i188.i = getelementptr inbounds %struct.thread_info, ptr %96, i32 0, i32 1
  %97 = ptrtoint ptr %preempt_count.i.i188.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load volatile i32, ptr %preempt_count.i.i188.i, align 4
  %sub.i189.i = add i32 %98, -1
  store volatile i32 %sub.i189.i, ptr %preempt_count.i.i188.i, align 4
  %tobool63.not.i = icmp eq i32 %94, 0
  br i1 %tobool63.not.i, label %if.end97.i, label %land.rhs66.i

land.rhs66.i:                                     ; preds = %land.rhs.i
  %.b178.i = load i1, ptr @rcu_pending.__already_done, align 1
  br i1 %.b178.i, label %if.end97.i, label %if.then.i342, !prof !1646

if.then.i342:                                     ; preds = %land.rhs66.i
  store i1 true, ptr @rcu_pending.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3916, i32 noundef 9, ptr noundef null) #24
  br label %if.end97.i

if.end97.i:                                       ; preds = %if.then.i342, %land.rhs66.i, %land.rhs.i, %land.lhs.true.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %.pr.i = load i32, ptr @debug_locks, align 4
  %tobool.not.i.i = icmp eq i32 %.pr.i, 0
  br i1 %tobool.not.i.i, label %if.end86.i.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %if.end97.i
  %99 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i.i = and i32 %99, -16384
  %100 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %100, i32 0, i32 1
  %101 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %102, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1706
  %103 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i343 = and i32 %103, -16384
  %104 = inttoptr i32 %and.i.i.i343 to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %104, i32 0, i32 3
  %105 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %106
  %107 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %arrayidx.i.i, align 4
  %add.i190.i = add i32 %108, ptrtoint (ptr @lockdep_recursion to i32)
  %109 = inttoptr i32 %add.i190.i to ptr
  %110 = ptrtoint ptr %109 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load volatile i32, ptr %109, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1707
  %112 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i331.i.i = and i32 %112, -16384
  %113 = inttoptr i32 %and.i.i.i331.i.i to ptr
  %preempt_count.i.i332.i.i = getelementptr inbounds %struct.thread_info, ptr %113, i32 0, i32 1
  %114 = ptrtoint ptr %preempt_count.i.i332.i.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load volatile i32, ptr %preempt_count.i.i332.i.i, align 4
  %sub.i.i.i = add i32 %115, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i332.i.i, align 4
  %tobool20.not.i.i = icmp eq i32 %111, 0
  br i1 %tobool20.not.i.i, label %land.rhs.i.i, label %if.end86.i.i

land.rhs.i.i:                                     ; preds = %land.lhs.true.i.i
  %116 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i333.i.i = and i32 %116, -16384
  %117 = inttoptr i32 %and.i.i.i333.i.i to ptr
  %preempt_count.i.i334.i.i = getelementptr inbounds %struct.thread_info, ptr %117, i32 0, i32 1
  %118 = ptrtoint ptr %preempt_count.i.i334.i.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load volatile i32, ptr %preempt_count.i.i334.i.i, align 4
  %add.i335.i.i = add i32 %119, 1
  store volatile i32 %add.i335.i.i, ptr %preempt_count.i.i334.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1708
  %120 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %cpu.i.i, align 4
  %arrayidx44.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %121
  %122 = ptrtoint ptr %arrayidx44.i.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %arrayidx44.i.i, align 4
  %add45.i.i = add i32 %123, ptrtoint (ptr @hardirqs_enabled to i32)
  %124 = inttoptr i32 %add45.i.i to ptr
  %125 = ptrtoint ptr %124 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load volatile i32, ptr %124, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1709
  %127 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i336.i.i = and i32 %127, -16384
  %128 = inttoptr i32 %and.i.i.i336.i.i to ptr
  %preempt_count.i.i337.i.i = getelementptr inbounds %struct.thread_info, ptr %128, i32 0, i32 1
  %129 = ptrtoint ptr %preempt_count.i.i337.i.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load volatile i32, ptr %preempt_count.i.i337.i.i, align 4
  %sub.i338.i.i = add i32 %130, -1
  store volatile i32 %sub.i338.i.i, ptr %preempt_count.i.i337.i.i, align 4
  %tobool52.not.i.i = icmp eq i32 %126, 0
  br i1 %tobool52.not.i.i, label %if.end86.i.i, label %land.rhs55.i.i

land.rhs55.i.i:                                   ; preds = %land.rhs.i.i
  %.b324.i.i = load i1, ptr @check_cpu_stall.__already_done, align 1
  br i1 %.b324.i.i, label %if.end86.i.i, label %if.then.i.i, !prof !1646

if.then.i.i:                                      ; preds = %land.rhs55.i.i
  store i1 true, ptr @check_cpu_stall.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 637, i32 noundef 9, ptr noundef null) #24
  br label %if.end86.i.i

if.end86.i.i:                                     ; preds = %if.then.i.i, %land.rhs55.i.i, %land.rhs.i.i, %land.lhs.true.i.i, %if.end97.i, %rcu_flavor_sched_clock_irq.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress_at_boot to i32))
  %131 = load i32, ptr @rcu_cpu_stall_suppress_at_boot, align 4
  %tobool.not.i.i.i.i = icmp eq i32 %131, 0
  br i1 %tobool.not.i.i.i.i, label %rcu_stall_is_suppressed.exit.i.i, label %rcu_stall_is_suppressed_at_boot.exit.i.i.i

rcu_stall_is_suppressed_at_boot.exit.i.i.i:       ; preds = %if.end86.i.i
  %call.i.i344.i.i = tail call zeroext i1 @rcu_inkernel_boot_has_ended() #24
  br i1 %call.i.i344.i.i, label %rcu_stall_is_suppressed.exit.i.i, label %do.end100.i.i

rcu_stall_is_suppressed.exit.i.i:                 ; preds = %rcu_stall_is_suppressed_at_boot.exit.i.i.i, %if.end86.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress to i32))
  %132 = load i32, ptr @rcu_cpu_stall_suppress, align 4
  %tobool.i.not.i.i = icmp eq i32 %132, 0
  br i1 %tobool.i.not.i.i, label %lor.lhs.false.i.i, label %do.end100.i.i

do.end100.i.i:                                    ; preds = %rcu_stall_is_suppressed.exit.i.i, %rcu_stall_is_suppressed_at_boot.exit.i.i.i
  %133 = load volatile i8, ptr @rcu_kick_kthreads, align 1, !range !1644
  %tobool102.not.i.i = icmp eq i8 %133, 0
  br i1 %tobool102.not.i.i, label %check_cpu_stall.exit.i, label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %do.end100.i.i, %rcu_stall_is_suppressed.exit.i.i
  %134 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %and.i.i.i191.i = and i32 %134, 3
  %tobool106.not.i.i = icmp eq i32 %and.i.i.i191.i, 0
  br i1 %tobool106.not.i.i, label %check_cpu_stall.exit.i, label %if.end108.i.i

if.end108.i.i:                                    ; preds = %lor.lhs.false.i.i
  tail call fastcc void @rcu_stall_kick_kthreads() #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %135 = load volatile i32, ptr @jiffies, align 128
  %136 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1710
  %137 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 33), align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1711
  %138 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 29), align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1712
  %139 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %cmp.not.i.i = icmp ne i32 %136, %139
  %sub.i192.i = sub i32 %135, %137
  %cmp144.i.i = icmp slt i32 %sub.i192.i, 0
  %or.cond.i.i = select i1 %cmp.not.i.i, i1 true, i1 %cmp144.i.i
  %sub146.i.i = sub i32 %138, %137
  %cmp147.i.i = icmp sgt i32 %sub146.i.i, -1
  %or.cond328.i.i = select i1 %or.cond.i.i, i1 true, i1 %cmp147.i.i
  br i1 %or.cond328.i.i, label %check_cpu_stall.exit.i, label %if.end149.i.i

if.end149.i.i:                                    ; preds = %if.end108.i.i
  %140 = ptrtoint ptr %mynode.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %mynode.i, align 16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %142 = load volatile i32, ptr @jiffies, align 128
  %add150.i.i = add i32 %142, 2147483647
  %143 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %and.i.i345.i.i = and i32 %143, 3
  %tobool152.not.i.i = icmp eq i32 %and.i.i345.i.i, 0
  br i1 %tobool152.not.i.i, label %if.else.i.i, label %do.end156.i.i

do.end156.i.i:                                    ; preds = %if.end149.i.i
  %qsmask.i.i = getelementptr inbounds %struct.rcu_node, ptr %141, i32 0, i32 4
  %144 = ptrtoint ptr %qsmask.i.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load volatile i32, ptr %qsmask.i.i, align 8
  %grpmask.i.i = getelementptr inbounds %struct.rcu_data, ptr %67, i32 0, i32 8
  %146 = ptrtoint ptr %grpmask.i.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %grpmask.i.i, align 4
  %and.i193.i = and i32 %147, %145
  %tobool158.not.i.i = icmp eq i32 %and.i193.i, 0
  br i1 %tobool158.not.i.i, label %if.else.i.i, label %land.lhs.true159.i.i

land.lhs.true159.i.i:                             ; preds = %do.end156.i.i
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 33), i32 noundef 4) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1713
  tail call void @llvm.prefetch.p0(ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 33), i32 1, i32 3, i32 1) #24
  br label %do.body.i.i.i

do.body.i.i.i:                                    ; preds = %do.body.i.i.i, %land.lhs.true159.i.i
  %148 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 33), i32 %137, i32 %add150.i.i) #24, !srcloc !1714
  %asmresult.i.i.i = extractvalue { i32, i32 } %148, 0
  %tobool.not.i.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %__cmpxchg.exit.i.i, label %do.body.i.i.i

__cmpxchg.exit.i.i:                               ; preds = %do.body.i.i.i
  %asmresult1.i.i.i = extractvalue { i32, i32 } %148, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1715
  %cmp180.i.i = icmp eq i32 %asmresult1.i.i.i, %137
  br i1 %cmp180.i.i, label %if.then181.i.i, label %if.else.i.i

if.then181.i.i:                                   ; preds = %__cmpxchg.exit.i.i
  %149 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i346.i.i = and i32 %149, -16384
  %150 = inttoptr i32 %and.i.i346.i.i to ptr
  %cpu2.i.i.i = getelementptr inbounds %struct.thread_info, ptr %150, i32 0, i32 3
  %151 = ptrtoint ptr %cpu2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %cpu2.i.i.i, align 4
  %arrayidx.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %152
  %153 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %arrayidx.i.i.i, align 4
  %add.i347.i.i = add i32 %154, ptrtoint (ptr @rcu_data to i32)
  %155 = inttoptr i32 %add.i347.i.i to ptr
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %156 = load i32, ptr @debug_locks, align 4
  %tobool.not.i348.i.i = icmp eq i32 %156, 0
  br i1 %tobool.not.i348.i.i, label %if.end99.i.i.i, label %land.lhs.true.i.i.i

land.lhs.true.i.i.i:                              ; preds = %if.then181.i.i
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %150, i32 0, i32 1
  %157 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %158, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1716
  %159 = ptrtoint ptr %cpu2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load i32, ptr %cpu2.i.i.i, align 4
  %arrayidx25.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %160
  %161 = ptrtoint ptr %arrayidx25.i.i.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %arrayidx25.i.i.i, align 4
  %add26.i.i.i = add i32 %162, ptrtoint (ptr @lockdep_recursion to i32)
  %163 = inttoptr i32 %add26.i.i.i to ptr
  %164 = ptrtoint ptr %163 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load volatile i32, ptr %163, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1717
  %166 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i485.i.i.i = and i32 %166, -16384
  %167 = inttoptr i32 %and.i.i.i485.i.i.i to ptr
  %preempt_count.i.i486.i.i.i = getelementptr inbounds %struct.thread_info, ptr %167, i32 0, i32 1
  %168 = ptrtoint ptr %preempt_count.i.i486.i.i.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load volatile i32, ptr %preempt_count.i.i486.i.i.i, align 4
  %sub.i.i.i.i = add i32 %169, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i486.i.i.i, align 4
  %tobool33.not.i.i.i = icmp eq i32 %165, 0
  br i1 %tobool33.not.i.i.i, label %land.rhs.i.i.i, label %if.end99.i.i.i

land.rhs.i.i.i:                                   ; preds = %land.lhs.true.i.i.i
  %170 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i487.i.i.i = and i32 %170, -16384
  %171 = inttoptr i32 %and.i.i.i487.i.i.i to ptr
  %preempt_count.i.i488.i.i.i = getelementptr inbounds %struct.thread_info, ptr %171, i32 0, i32 1
  %172 = ptrtoint ptr %preempt_count.i.i488.i.i.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load volatile i32, ptr %preempt_count.i.i488.i.i.i, align 4
  %add.i489.i.i.i = add i32 %173, 1
  store volatile i32 %add.i489.i.i.i, ptr %preempt_count.i.i488.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1718
  %174 = ptrtoint ptr %cpu2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %cpu2.i.i.i, align 4
  %arrayidx57.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %175
  %176 = ptrtoint ptr %arrayidx57.i.i.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load i32, ptr %arrayidx57.i.i.i, align 4
  %add58.i.i.i = add i32 %177, ptrtoint (ptr @hardirqs_enabled to i32)
  %178 = inttoptr i32 %add58.i.i.i to ptr
  %179 = ptrtoint ptr %178 to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load volatile i32, ptr %178, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1719
  %181 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i490.i.i.i = and i32 %181, -16384
  %182 = inttoptr i32 %and.i.i.i490.i.i.i to ptr
  %preempt_count.i.i491.i.i.i = getelementptr inbounds %struct.thread_info, ptr %182, i32 0, i32 1
  %183 = ptrtoint ptr %preempt_count.i.i491.i.i.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load volatile i32, ptr %preempt_count.i.i491.i.i.i, align 4
  %sub.i492.i.i.i = add i32 %184, -1
  store volatile i32 %sub.i492.i.i.i, ptr %preempt_count.i.i491.i.i.i, align 4
  %tobool65.not.i.i.i = icmp eq i32 %180, 0
  br i1 %tobool65.not.i.i.i, label %if.end99.i.i.i, label %land.rhs68.i.i.i

land.rhs68.i.i.i:                                 ; preds = %land.rhs.i.i.i
  %.b475.i.i.i = load i1, ptr @print_cpu_stall.__already_done, align 1
  br i1 %.b475.i.i.i, label %if.end99.i.i.i, label %if.then.i.i.i, !prof !1646

if.then.i.i.i:                                    ; preds = %land.rhs68.i.i.i
  store i1 true, ptr @print_cpu_stall.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 578, i32 noundef 9, ptr noundef null) #24
  br label %if.end99.i.i.i

if.end99.i.i.i:                                   ; preds = %if.then.i.i.i, %land.rhs68.i.i.i, %land.rhs.i.i.i, %land.lhs.true.i.i.i, %if.then181.i.i
  tail call fastcc void @rcu_stall_kick_kthreads() #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress_at_boot to i32))
  %185 = load i32, ptr @rcu_cpu_stall_suppress_at_boot, align 4
  %tobool.not.i.i.i.i.i = icmp eq i32 %185, 0
  br i1 %tobool.not.i.i.i.i.i, label %rcu_stall_is_suppressed.exit.i.i.i, label %rcu_stall_is_suppressed_at_boot.exit.i.i.i.i

rcu_stall_is_suppressed_at_boot.exit.i.i.i.i:     ; preds = %if.end99.i.i.i
  %call.i.i.i.i.i = tail call zeroext i1 @rcu_inkernel_boot_has_ended() #24
  br i1 %call.i.i.i.i.i, label %rcu_stall_is_suppressed.exit.i.i.i, label %print_cpu_stall.exit.i.i

rcu_stall_is_suppressed.exit.i.i.i:               ; preds = %rcu_stall_is_suppressed_at_boot.exit.i.i.i.i, %if.end99.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress to i32))
  %186 = load i32, ptr @rcu_cpu_stall_suppress, align 4
  %tobool.i.not.i.i.i = icmp eq i32 %186, 0
  br i1 %tobool.i.not.i.i.i, label %if.end111.i.i.i, label %print_cpu_stall.exit.i.i

if.end111.i.i.i:                                  ; preds = %rcu_stall_is_suppressed.exit.i.i.i
  %187 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %188 = load ptr, ptr @print_cpu_stall.___tp_str, align 4
  tail call fastcc void @trace_rcu_stall_warning(ptr noundef %187, ptr noundef %188) #24
  %189 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %call117.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.188, ptr noundef %189) #27
  %mynode.i.i.i = getelementptr inbounds %struct.rcu_data, ptr %155, i32 0, i32 7
  %190 = ptrtoint ptr %mynode.i.i.i to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %mynode.i.i.i, align 16
  %call121.i.i.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %191) #24
  %192 = ptrtoint ptr %cpu2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %cpu2.i.i.i, align 4
  tail call fastcc void @print_cpu_stall_info(i32 noundef %193) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %194 = load i32, ptr @debug_locks, align 4
  %tobool134.not.i.i.i = icmp eq i32 %194, 0
  br i1 %tobool134.not.i.i.i, label %if.end247.i.i.i, label %land.lhs.true135.i.i.i

land.lhs.true135.i.i.i:                           ; preds = %if.end111.i.i.i
  %195 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i493.i.i.i = and i32 %195, -16384
  %196 = inttoptr i32 %and.i.i.i493.i.i.i to ptr
  %preempt_count.i.i494.i.i.i = getelementptr inbounds %struct.thread_info, ptr %196, i32 0, i32 1
  %197 = ptrtoint ptr %preempt_count.i.i494.i.i.i to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load volatile i32, ptr %preempt_count.i.i494.i.i.i, align 4
  %add.i495.i.i.i = add i32 %198, 1
  store volatile i32 %add.i495.i.i.i, ptr %preempt_count.i.i494.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1720
  %199 = ptrtoint ptr %cpu2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load i32, ptr %cpu2.i.i.i, align 4
  %arrayidx159.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %200
  %201 = ptrtoint ptr %arrayidx159.i.i.i to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load i32, ptr %arrayidx159.i.i.i, align 4
  %add160.i.i.i = add i32 %202, ptrtoint (ptr @lockdep_recursion to i32)
  %203 = inttoptr i32 %add160.i.i.i to ptr
  %204 = ptrtoint ptr %203 to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load volatile i32, ptr %203, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1721
  %206 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i496.i.i.i = and i32 %206, -16384
  %207 = inttoptr i32 %and.i.i.i496.i.i.i to ptr
  %preempt_count.i.i497.i.i.i = getelementptr inbounds %struct.thread_info, ptr %207, i32 0, i32 1
  %208 = ptrtoint ptr %preempt_count.i.i497.i.i.i to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load volatile i32, ptr %preempt_count.i.i497.i.i.i, align 4
  %sub.i498.i.i.i = add i32 %209, -1
  store volatile i32 %sub.i498.i.i.i, ptr %preempt_count.i.i497.i.i.i, align 4
  %tobool167.not.i.i.i = icmp eq i32 %205, 0
  br i1 %tobool167.not.i.i.i, label %land.rhs168.i.i.i, label %if.end247.i.i.i

land.rhs168.i.i.i:                                ; preds = %land.lhs.true135.i.i.i
  %210 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i499.i.i.i = and i32 %210, -16384
  %211 = inttoptr i32 %and.i.i.i499.i.i.i to ptr
  %preempt_count.i.i500.i.i.i = getelementptr inbounds %struct.thread_info, ptr %211, i32 0, i32 1
  %212 = ptrtoint ptr %preempt_count.i.i500.i.i.i to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load volatile i32, ptr %preempt_count.i.i500.i.i.i, align 4
  %add.i501.i.i.i = add i32 %213, 1
  store volatile i32 %add.i501.i.i.i, ptr %preempt_count.i.i500.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1722
  %214 = ptrtoint ptr %cpu2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load i32, ptr %cpu2.i.i.i, align 4
  %arrayidx192.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %215
  %216 = ptrtoint ptr %arrayidx192.i.i.i to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load i32, ptr %arrayidx192.i.i.i, align 4
  %add193.i.i.i = add i32 %217, ptrtoint (ptr @hardirqs_enabled to i32)
  %218 = inttoptr i32 %add193.i.i.i to ptr
  %219 = ptrtoint ptr %218 to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load volatile i32, ptr %218, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1723
  %221 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i502.i.i.i = and i32 %221, -16384
  %222 = inttoptr i32 %and.i.i.i502.i.i.i to ptr
  %preempt_count.i.i503.i.i.i = getelementptr inbounds %struct.thread_info, ptr %222, i32 0, i32 1
  %223 = ptrtoint ptr %preempt_count.i.i503.i.i.i to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load volatile i32, ptr %preempt_count.i.i503.i.i.i, align 4
  %sub.i504.i.i.i = add i32 %224, -1
  store volatile i32 %sub.i504.i.i.i, ptr %preempt_count.i.i503.i.i.i, align 4
  %tobool200.not.i.i.i = icmp eq i32 %220, 0
  br i1 %tobool200.not.i.i.i, label %if.end247.i.i.i, label %land.rhs209.i.i.i

land.rhs209.i.i.i:                                ; preds = %land.rhs168.i.i.i
  %.b471474.i.i.i = load i1, ptr @print_cpu_stall.__already_done.190, align 1
  br i1 %.b471474.i.i.i, label %if.end247.i.i.i, label %if.then220.i.i.i, !prof !1646

if.then220.i.i.i:                                 ; preds = %land.rhs209.i.i.i
  store i1 true, ptr @print_cpu_stall.__already_done.190, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 594, i32 noundef 9, ptr noundef null) #24
  br label %if.end247.i.i.i

if.end247.i.i.i:                                  ; preds = %if.then220.i.i.i, %land.rhs209.i.i.i, %land.rhs168.i.i.i, %land.lhs.true135.i.i.i, %if.end111.i.i.i
  %225 = ptrtoint ptr %mynode.i.i.i to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load ptr, ptr %mynode.i.i.i, align 16
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %226, i32 noundef %call121.i.i.i) #24
  %call269520.i.i.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %227 = load i32, ptr @nr_cpu_ids, align 4
  %cmp270521.i.i.i = icmp ult i32 %call269520.i.i.i, %227
  br i1 %cmp270521.i.i.i, label %for.body.i.i.i, label %do.end276.i.i.i

for.body.i.i.i:                                   ; preds = %rcu_get_n_cbs_cpu.exit.i.i.i, %if.end247.i.i.i
  %call269523.i.i.i = phi i32 [ %call269.i.i.i, %rcu_get_n_cbs_cpu.exit.i.i.i ], [ %call269520.i.i.i, %if.end247.i.i.i ]
  %totqlen.0522.i.i.i = phi i32 [ %add273.i.i.i, %rcu_get_n_cbs_cpu.exit.i.i.i ], [ 0, %if.end247.i.i.i ]
  %arrayidx.i.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call269523.i.i.i
  %228 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load i32, ptr %arrayidx.i.i.i.i, align 4
  %add.i517.i.i.i = add i32 %229, ptrtoint (ptr @rcu_data to i32)
  %230 = inttoptr i32 %add.i517.i.i.i to ptr
  %flags1.i.i.i.i.i.i = getelementptr inbounds %struct.rcu_data, ptr %230, i32 0, i32 13, i32 5
  %231 = ptrtoint ptr %flags1.i.i.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %231)
  %232 = load volatile i8, ptr %flags1.i.i.i.i.i.i, align 4
  %233 = and i8 %232, 1
  %tobool.i.i.not.i.i.i.i = icmp eq i8 %233, 0
  br i1 %tobool.i.i.not.i.i.i.i, label %rcu_get_n_cbs_cpu.exit.i.i.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %for.body.i.i.i
  %len.i.i.i.i.i = getelementptr inbounds %struct.rcu_data, ptr %230, i32 0, i32 13, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %len.i.i.i.i.i, i32 noundef 4) #24
  %234 = ptrtoint ptr %len.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load volatile i32, ptr %len.i.i.i.i.i, align 4
  br label %rcu_get_n_cbs_cpu.exit.i.i.i

rcu_get_n_cbs_cpu.exit.i.i.i:                     ; preds = %if.then.i.i.i.i, %for.body.i.i.i
  %retval.0.i.i.i.i = phi i32 [ %235, %if.then.i.i.i.i ], [ 0, %for.body.i.i.i ]
  %add273.i.i.i = add i32 %retval.0.i.i.i.i, %totqlen.0522.i.i.i
  %call269.i.i.i = tail call i32 @cpumask_next(i32 noundef %call269523.i.i.i, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %236 = load i32, ptr @nr_cpu_ids, align 4
  %cmp270.i.i.i = icmp ult i32 %call269.i.i.i, %236
  br i1 %cmp270.i.i.i, label %for.body.i.i.i, label %do.end276.i.i.i

do.end276.i.i.i:                                  ; preds = %rcu_get_n_cbs_cpu.exit.i.i.i, %if.end247.i.i.i
  %totqlen.0.lcssa.i.i.i = phi i32 [ 0, %if.end247.i.i.i ], [ %add273.i.i.i, %rcu_get_n_cbs_cpu.exit.i.i.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %237 = load volatile i32, ptr @jiffies, align 128
  %sub.i349.i.i = sub i32 %237, %138
  %238 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %call279.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.192, i32 noundef %sub.i349.i.i, i32 noundef %238, i32 noundef %totqlen.0.lcssa.i.i.i) #27
  tail call fastcc void @rcu_check_gp_kthread_expired_fqs_timer() #24
  tail call fastcc void @rcu_check_gp_kthread_starvation() #24
  tail call fastcc void @rcu_dump_cpu_stacks() #24
  %call288.i.i.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @rcu_state) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %239 = load volatile i32, ptr @jiffies, align 128
  %240 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 33), align 4
  %sub300.i.i.i = sub i32 %239, %240
  %cmp301.i.i.i = icmp sgt i32 %sub300.i.i.i, -1
  br i1 %cmp301.i.i.i, label %do.body308.i.i.i, label %do.body318.i.i.i

do.body308.i.i.i:                                 ; preds = %do.end276.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %241 = load volatile i32, ptr @jiffies, align 128
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_timeout to i32))
  %242 = load volatile i32, ptr @rcu_cpu_stall_timeout, align 4
  %cmp.i.i.i.i = icmp slt i32 %242, 3
  br i1 %cmp.i.i.i.i, label %if.end21.sink.split.i.i.i.i, label %if.else.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %do.body308.i.i.i
  %cmp10.i.i.i.i = icmp ugt i32 %242, 300
  br i1 %cmp10.i.i.i.i, label %if.end21.sink.split.i.i.i.i, label %rcu_jiffies_till_stall_check.exit.i.i.i

if.end21.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i, %do.body308.i.i.i
  %.sink.i.i.i.i = phi i32 [ 3, %do.body308.i.i.i ], [ 300, %if.else.i.i.i.i ]
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_timeout to i32))
  store volatile i32 %.sink.i.i.i.i, ptr @rcu_cpu_stall_timeout, align 4
  br label %rcu_jiffies_till_stall_check.exit.i.i.i

rcu_jiffies_till_stall_check.exit.i.i.i:          ; preds = %if.end21.sink.split.i.i.i.i, %if.else.i.i.i.i
  %till_stall_check.0.i.i.i.i = phi i32 [ %242, %if.else.i.i.i.i ], [ %.sink.i.i.i.i, %if.end21.sink.split.i.i.i.i ]
  %243 = mul nuw nsw i32 %till_stall_check.0.i.i.i.i, 300
  %add310.i.i.i = add i32 %241, 1503
  %add311.i.i.i = add i32 %add310.i.i.i, %243
  store volatile i32 %add311.i.i.i, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 33), align 4
  br label %do.body318.i.i.i

do.body318.i.i.i:                                 ; preds = %rcu_jiffies_till_stall_check.exit.i.i.i, %do.end276.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %244 = load i32, ptr @debug_locks, align 4
  %tobool320.not.i.i.i = icmp eq i32 %244, 0
  br i1 %tobool320.not.i.i.i, label %if.end433.i.i.i, label %land.lhs.true321.i.i.i

land.lhs.true321.i.i.i:                           ; preds = %do.body318.i.i.i
  %245 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i505.i.i.i = and i32 %245, -16384
  %246 = inttoptr i32 %and.i.i.i505.i.i.i to ptr
  %preempt_count.i.i506.i.i.i = getelementptr inbounds %struct.thread_info, ptr %246, i32 0, i32 1
  %247 = ptrtoint ptr %preempt_count.i.i506.i.i.i to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load volatile i32, ptr %preempt_count.i.i506.i.i.i, align 4
  %add.i507.i.i.i = add i32 %248, 1
  store volatile i32 %add.i507.i.i.i, ptr %preempt_count.i.i506.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1724
  %249 = ptrtoint ptr %cpu2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %249)
  %250 = load i32, ptr %cpu2.i.i.i, align 4
  %arrayidx345.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %250
  %251 = ptrtoint ptr %arrayidx345.i.i.i to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load i32, ptr %arrayidx345.i.i.i, align 4
  %add346.i.i.i = add i32 %252, ptrtoint (ptr @lockdep_recursion to i32)
  %253 = inttoptr i32 %add346.i.i.i to ptr
  %254 = ptrtoint ptr %253 to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load volatile i32, ptr %253, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1725
  %256 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i508.i.i.i = and i32 %256, -16384
  %257 = inttoptr i32 %and.i.i.i508.i.i.i to ptr
  %preempt_count.i.i509.i.i.i = getelementptr inbounds %struct.thread_info, ptr %257, i32 0, i32 1
  %258 = ptrtoint ptr %preempt_count.i.i509.i.i.i to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load volatile i32, ptr %preempt_count.i.i509.i.i.i, align 4
  %sub.i510.i.i.i = add i32 %259, -1
  store volatile i32 %sub.i510.i.i.i, ptr %preempt_count.i.i509.i.i.i, align 4
  %tobool353.not.i.i.i = icmp eq i32 %255, 0
  br i1 %tobool353.not.i.i.i, label %land.rhs354.i.i.i, label %if.end433.i.i.i

land.rhs354.i.i.i:                                ; preds = %land.lhs.true321.i.i.i
  %260 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i511.i.i.i = and i32 %260, -16384
  %261 = inttoptr i32 %and.i.i.i511.i.i.i to ptr
  %preempt_count.i.i512.i.i.i = getelementptr inbounds %struct.thread_info, ptr %261, i32 0, i32 1
  %262 = ptrtoint ptr %preempt_count.i.i512.i.i.i to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load volatile i32, ptr %preempt_count.i.i512.i.i.i, align 4
  %add.i513.i.i.i = add i32 %263, 1
  store volatile i32 %add.i513.i.i.i, ptr %preempt_count.i.i512.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1726
  %264 = ptrtoint ptr %cpu2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load i32, ptr %cpu2.i.i.i, align 4
  %arrayidx378.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %265
  %266 = ptrtoint ptr %arrayidx378.i.i.i to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load i32, ptr %arrayidx378.i.i.i, align 4
  %add379.i.i.i = add i32 %267, ptrtoint (ptr @hardirqs_enabled to i32)
  %268 = inttoptr i32 %add379.i.i.i to ptr
  %269 = ptrtoint ptr %268 to i32
  call void @__asan_load4_noabort(i32 %269)
  %270 = load volatile i32, ptr %268, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1727
  %271 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i514.i.i.i = and i32 %271, -16384
  %272 = inttoptr i32 %and.i.i.i514.i.i.i to ptr
  %preempt_count.i.i515.i.i.i = getelementptr inbounds %struct.thread_info, ptr %272, i32 0, i32 1
  %273 = ptrtoint ptr %preempt_count.i.i515.i.i.i to i32
  call void @__asan_load4_noabort(i32 %273)
  %274 = load volatile i32, ptr %preempt_count.i.i515.i.i.i, align 4
  %sub.i516.i.i.i = add i32 %274, -1
  store volatile i32 %sub.i516.i.i.i, ptr %preempt_count.i.i515.i.i.i, align 4
  %tobool386.not.i.i.i = icmp eq i32 %270, 0
  br i1 %tobool386.not.i.i.i, label %if.end433.i.i.i, label %land.rhs395.i.i.i

land.rhs395.i.i.i:                                ; preds = %land.rhs354.i.i.i
  %.b472473.i.i.i = load i1, ptr @print_cpu_stall.__already_done.194, align 1
  br i1 %.b472473.i.i.i, label %if.end433.i.i.i, label %if.then406.i.i.i, !prof !1646

if.then406.i.i.i:                                 ; preds = %land.rhs395.i.i.i
  store i1 true, ptr @print_cpu_stall.__already_done.194, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 611, i32 noundef 9, ptr noundef null) #24
  br label %if.end433.i.i.i

if.end433.i.i.i:                                  ; preds = %if.then406.i.i.i, %land.rhs395.i.i.i, %land.rhs354.i.i.i, %land.lhs.true321.i.i.i, %do.body318.i.i.i
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @rcu_state, i32 noundef %call288.i.i.i) #24
  %275 = load i32, ptr @panic_on_rcu_stall.cpu_stall, align 4
  %inc.i.i.i.i = add i32 %275, 1
  store i32 %inc.i.i.i.i, ptr @panic_on_rcu_stall.cpu_stall, align 4
  %276 = load i32, ptr @sysctl_max_rcu_stall_to_panic, align 4
  %cmp.i519.i.i.i = icmp slt i32 %inc.i.i.i.i, %276
  br i1 %cmp.i519.i.i.i, label %panic_on_rcu_stall.exit.i.i.i, label %if.end.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %if.end433.i.i.i
  %277 = load i32, ptr @sysctl_panic_on_rcu_stall, align 4
  %tobool.not.i.i350.i.i = icmp eq i32 %277, 0
  br i1 %tobool.not.i.i350.i.i, label %panic_on_rcu_stall.exit.i.i.i, label %if.then1.i.i.i.i

if.then1.i.i.i.i:                                 ; preds = %if.end.i.i.i.i
  call void @__asan_handle_no_return()
  tail call void (ptr, ...) @panic(ptr noundef nonnull @.str.227) #29
  unreachable

panic_on_rcu_stall.exit.i.i.i:                    ; preds = %if.end.i.i.i.i, %if.end433.i.i.i
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %150, i32 0, i32 2
  %278 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load ptr, ptr %task.i.i.i, align 8
  %stack.i.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %279, i32 0, i32 1
  %280 = ptrtoint ptr %stack.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load ptr, ptr %stack.i.i.i.i.i, align 4
  tail call void @_set_bit(i32 noundef 1, ptr noundef %281) #24
  br label %print_cpu_stall.exit.i.i

print_cpu_stall.exit.i.i:                         ; preds = %panic_on_rcu_stall.exit.i.i.i, %rcu_stall_is_suppressed.exit.i.i.i, %rcu_stall_is_suppressed_at_boot.exit.i.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_ftrace_dump to i32))
  %282 = load volatile i32, ptr @rcu_cpu_stall_ftrace_dump, align 4
  %tobool189.not.i.i = icmp eq i32 %282, 0
  br i1 %tobool189.not.i.i, label %do.end282.i.i, label %do.body191.i.i

do.body191.i.i:                                   ; preds = %print_cpu_stall.exit.i.i
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @check_cpu_stall.___rfd_beenhere, i32 noundef 4) #24
  %283 = load volatile i32, ptr @check_cpu_stall.___rfd_beenhere, align 4
  %tobool193.not.i.i = icmp eq i32 %283, 0
  br i1 %tobool193.not.i.i, label %land.lhs.true194.i.i, label %do.end282.i.i

land.lhs.true194.i.i:                             ; preds = %do.body191.i.i
  %call.i.i339.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @check_cpu_stall.___rfd_beenhere, i32 noundef 4) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1728
  tail call void @llvm.prefetch.p0(ptr nonnull @check_cpu_stall.___rfd_beenhere, i32 1, i32 3, i32 1) #24
  %284 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 1, ptr nonnull @check_cpu_stall.___rfd_beenhere) #24, !srcloc !1729
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %284, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1730
  %tobool196.not.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %tobool196.not.i.i, label %if.then197.i.i, label %do.end282.i.i

if.then197.i.i:                                   ; preds = %land.lhs.true194.i.i
  tail call void @tracing_off() #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress to i32))
  %285 = load i32, ptr @rcu_cpu_stall_suppress, align 4
  %tobool199.not.i.i = icmp eq i32 %285, 0
  br i1 %tobool199.not.i.i, label %if.then200.i.i, label %do.end203.i.i

if.then200.i.i:                                   ; preds = %if.then197.i.i
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress to i32))
  store i32 3, ptr @rcu_cpu_stall_suppress, align 4
  br label %do.end203.i.i

do.end203.i.i:                                    ; preds = %if.then200.i.i, %if.then197.i.i
  tail call void @ftrace_dump(i32 noundef 1) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress to i32))
  %286 = load i32, ptr @rcu_cpu_stall_suppress, align 4
  %cmp205.i.i = icmp eq i32 %286, 3
  br i1 %cmp205.i.i, label %do.end282.sink.split.i.i, label %do.end282.i.i

if.else.i.i:                                      ; preds = %__cmpxchg.exit.i.i, %do.end156.i.i, %if.end149.i.i
  %287 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %and.i.i351.i.i = and i32 %287, 3
  %tobool215.not.i.i = icmp eq i32 %and.i.i351.i.i, 0
  br i1 %tobool215.not.i.i, label %check_cpu_stall.exit.i, label %land.lhs.true216.i.i

land.lhs.true216.i.i:                             ; preds = %if.else.i.i
  %add217.neg.i.i = add i32 %135, -2
  %sub218.i.i = sub i32 %add217.neg.i.i, %137
  %cmp219.i.i = icmp sgt i32 %sub218.i.i, -1
  br i1 %cmp219.i.i, label %land.lhs.true220.i.i, label %check_cpu_stall.exit.i

land.lhs.true220.i.i:                             ; preds = %land.lhs.true216.i.i
  %call.i340.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 33), i32 noundef 4) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1731
  tail call void @llvm.prefetch.p0(ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 33), i32 1, i32 3, i32 1) #24
  br label %do.body.i354.i.i

do.body.i354.i.i:                                 ; preds = %do.body.i354.i.i, %land.lhs.true220.i.i
  %288 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 33), i32 %137, i32 %add150.i.i) #24, !srcloc !1714
  %asmresult.i352.i.i = extractvalue { i32, i32 } %288, 0
  %tobool.not.i353.i.i = icmp eq i32 %asmresult.i352.i.i, 0
  br i1 %tobool.not.i353.i.i, label %__cmpxchg.exit356.i.i, label %do.body.i354.i.i

__cmpxchg.exit356.i.i:                            ; preds = %do.body.i354.i.i
  %asmresult1.i355.i.i = extractvalue { i32, i32 } %288, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1732
  %cmp242.i.i = icmp eq i32 %asmresult1.i355.i.i, %137
  br i1 %cmp242.i.i, label %if.then243.i.i, label %check_cpu_stall.exit.i

if.then243.i.i:                                   ; preds = %__cmpxchg.exit356.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %289 = load i32, ptr @debug_locks, align 4
  %tobool.not.i357.i.i = icmp eq i32 %289, 0
  br i1 %tobool.not.i357.i.i, label %if.end87.i.i.i, label %land.lhs.true.i364.i.i

land.lhs.true.i364.i.i:                           ; preds = %if.then243.i.i
  %290 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i.i.i = and i32 %290, -16384
  %291 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i358.i.i = getelementptr inbounds %struct.thread_info, ptr %291, i32 0, i32 1
  %292 = ptrtoint ptr %preempt_count.i.i.i358.i.i to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load volatile i32, ptr %preempt_count.i.i.i358.i.i, align 4
  %add.i.i359.i.i = add i32 %293, 1
  store volatile i32 %add.i.i359.i.i, ptr %preempt_count.i.i.i358.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1733
  %294 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i360.i.i = and i32 %294, -16384
  %295 = inttoptr i32 %and.i.i360.i.i to ptr
  %cpu14.i.i.i = getelementptr inbounds %struct.thread_info, ptr %295, i32 0, i32 3
  %296 = ptrtoint ptr %cpu14.i.i.i to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load i32, ptr %cpu14.i.i.i, align 4
  %arrayidx.i361.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %297
  %298 = ptrtoint ptr %arrayidx.i361.i.i to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load i32, ptr %arrayidx.i361.i.i, align 4
  %add.i362.i.i = add i32 %299, ptrtoint (ptr @lockdep_recursion to i32)
  %300 = inttoptr i32 %add.i362.i.i to ptr
  %301 = ptrtoint ptr %300 to i32
  call void @__asan_load4_noabort(i32 %301)
  %302 = load volatile i32, ptr %300, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1734
  %303 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i462.i.i.i = and i32 %303, -16384
  %304 = inttoptr i32 %and.i.i.i462.i.i.i to ptr
  %preempt_count.i.i463.i.i.i = getelementptr inbounds %struct.thread_info, ptr %304, i32 0, i32 1
  %305 = ptrtoint ptr %preempt_count.i.i463.i.i.i to i32
  call void @__asan_load4_noabort(i32 %305)
  %306 = load volatile i32, ptr %preempt_count.i.i463.i.i.i, align 4
  %sub.i.i363.i.i = add i32 %306, -1
  store volatile i32 %sub.i.i363.i.i, ptr %preempt_count.i.i463.i.i.i, align 4
  %tobool21.not.i.i.i = icmp eq i32 %302, 0
  br i1 %tobool21.not.i.i.i, label %land.rhs.i365.i.i, label %if.end87.i.i.i

land.rhs.i365.i.i:                                ; preds = %land.lhs.true.i364.i.i
  %307 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i464.i.i.i = and i32 %307, -16384
  %308 = inttoptr i32 %and.i.i.i464.i.i.i to ptr
  %preempt_count.i.i465.i.i.i = getelementptr inbounds %struct.thread_info, ptr %308, i32 0, i32 1
  %309 = ptrtoint ptr %preempt_count.i.i465.i.i.i to i32
  call void @__asan_load4_noabort(i32 %309)
  %310 = load volatile i32, ptr %preempt_count.i.i465.i.i.i, align 4
  %add.i466.i.i.i = add i32 %310, 1
  store volatile i32 %add.i466.i.i.i, ptr %preempt_count.i.i465.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1735
  %311 = ptrtoint ptr %cpu14.i.i.i to i32
  call void @__asan_load4_noabort(i32 %311)
  %312 = load i32, ptr %cpu14.i.i.i, align 4
  %arrayidx45.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %312
  %313 = ptrtoint ptr %arrayidx45.i.i.i to i32
  call void @__asan_load4_noabort(i32 %313)
  %314 = load i32, ptr %arrayidx45.i.i.i, align 4
  %add46.i.i.i = add i32 %314, ptrtoint (ptr @hardirqs_enabled to i32)
  %315 = inttoptr i32 %add46.i.i.i to ptr
  %316 = ptrtoint ptr %315 to i32
  call void @__asan_load4_noabort(i32 %316)
  %317 = load volatile i32, ptr %315, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1736
  %318 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i467.i.i.i = and i32 %318, -16384
  %319 = inttoptr i32 %and.i.i.i467.i.i.i to ptr
  %preempt_count.i.i468.i.i.i = getelementptr inbounds %struct.thread_info, ptr %319, i32 0, i32 1
  %320 = ptrtoint ptr %preempt_count.i.i468.i.i.i to i32
  call void @__asan_load4_noabort(i32 %320)
  %321 = load volatile i32, ptr %preempt_count.i.i468.i.i.i, align 4
  %sub.i469.i.i.i = add i32 %321, -1
  store volatile i32 %sub.i469.i.i.i, ptr %preempt_count.i.i468.i.i.i, align 4
  %tobool53.not.i.i.i = icmp eq i32 %317, 0
  br i1 %tobool53.not.i.i.i, label %if.end87.i.i.i, label %land.rhs56.i.i.i

land.rhs56.i.i.i:                                 ; preds = %land.rhs.i365.i.i
  %.b455.i.i.i = load i1, ptr @print_other_cpu_stall.__already_done, align 1
  br i1 %.b455.i.i.i, label %if.end87.i.i.i, label %if.then.i366.i.i, !prof !1646

if.then.i366.i.i:                                 ; preds = %land.rhs56.i.i.i
  store i1 true, ptr @print_other_cpu_stall.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 507, i32 noundef 9, ptr noundef null) #24
  br label %if.end87.i.i.i

if.end87.i.i.i:                                   ; preds = %if.then.i366.i.i, %land.rhs56.i.i.i, %land.rhs.i365.i.i, %land.lhs.true.i364.i.i, %if.then243.i.i
  tail call fastcc void @rcu_stall_kick_kthreads() #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress_at_boot to i32))
  %322 = load i32, ptr @rcu_cpu_stall_suppress_at_boot, align 4
  %tobool.not.i.i.i367.i.i = icmp eq i32 %322, 0
  br i1 %tobool.not.i.i.i367.i.i, label %rcu_stall_is_suppressed.exit.i371.i.i, label %rcu_stall_is_suppressed_at_boot.exit.i.i369.i.i

rcu_stall_is_suppressed_at_boot.exit.i.i369.i.i:  ; preds = %if.end87.i.i.i
  %call.i.i.i368.i.i = tail call zeroext i1 @rcu_inkernel_boot_has_ended() #24
  br i1 %call.i.i.i368.i.i, label %rcu_stall_is_suppressed.exit.i371.i.i, label %print_other_cpu_stall.exit.i.i

rcu_stall_is_suppressed.exit.i371.i.i:            ; preds = %rcu_stall_is_suppressed_at_boot.exit.i.i369.i.i, %if.end87.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress to i32))
  %323 = load i32, ptr @rcu_cpu_stall_suppress, align 4
  %tobool.i.not.i370.i.i = icmp eq i32 %323, 0
  br i1 %tobool.i.not.i370.i.i, label %if.end99.i373.i.i, label %print_other_cpu_stall.exit.i.i

if.end99.i373.i.i:                                ; preds = %rcu_stall_is_suppressed.exit.i371.i.i
  %324 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %325 = load ptr, ptr @print_other_cpu_stall.___tp_str, align 4
  tail call fastcc void @trace_rcu_stall_warning(ptr noundef %324, ptr noundef %325) #24
  %326 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %call105.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.229, ptr noundef %326) #27
  %327 = load i32, ptr @rcu_num_lvls, align 4
  %sub.i372.i.i = add i32 %327, -1
  %arrayidx106.i.i.i = getelementptr %struct.rcu_state, ptr @rcu_state, i32 0, i32 1, i32 %sub.i372.i.i
  %328 = ptrtoint ptr %arrayidx106.i.i.i to i32
  call void @__asan_load4_noabort(i32 %328)
  %329 = load ptr, ptr %arrayidx106.i.i.i, align 4
  %330 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx107495.i.i.i = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %330
  %cmp496.i.i.i = icmp ult ptr %329, %arrayidx107495.i.i.i
  br i1 %cmp496.i.i.i, label %do.body109.i.i.i, label %for.cond326.preheader.i.i.i

for.cond326.preheader.i.i.i:                      ; preds = %if.end314.i.i.i, %if.end99.i373.i.i
  %ndetected.0.lcssa.i.i.i = phi i32 [ 0, %if.end99.i373.i.i ], [ %ndetected.3.i.i.i, %if.end314.i.i.i ]
  %call327500.i.i.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %331 = load i32, ptr @nr_cpu_ids, align 4
  %cmp328501.i.i.i = icmp ult i32 %call327500.i.i.i, %331
  br i1 %cmp328501.i.i.i, label %for.body330.i.i.i, label %do.end336.i.i.i

do.body109.i.i.i:                                 ; preds = %if.end314.i.i.i, %if.end99.i373.i.i
  %ndetected.0498.i.i.i = phi i32 [ %ndetected.3.i.i.i, %if.end314.i.i.i ], [ 0, %if.end99.i373.i.i ]
  %rnp.0497.i.i.i = phi ptr [ %incdec.ptr.i.i.i, %if.end314.i.i.i ], [ %329, %if.end99.i373.i.i ]
  %call112.i.i.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %rnp.0497.i.i.i) #24
  %qsmask.i.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0497.i.i.i, i32 0, i32 4
  %332 = ptrtoint ptr %qsmask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %332)
  %333 = load i32, ptr %qsmask.i.i.i, align 8
  %cmp120.not.i.i.i = icmp eq i32 %333, 0
  br i1 %cmp120.not.i.i.i, label %if.end196.i.i.i, label %if.then122.i.i.i

if.then122.i.i.i:                                 ; preds = %do.body109.i.i.i
  %level.i.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0497.i.i.i, i32 0, i32 18
  %334 = ptrtoint ptr %level.i.i.i to i32
  call void @__asan_load1_noabort(i32 %334)
  %335 = load i8, ptr %level.i.i.i, align 1
  %conv124.i.i.i = zext i8 %335 to i32
  %336 = load i32, ptr @rcu_num_lvls, align 4
  %sub125.i.i.i = add i32 %336, -1
  %cmp126.not.i.i.i = icmp eq i32 %sub125.i.i.i, %conv124.i.i.i
  br i1 %cmp126.not.i.i.i, label %if.end175.i.i.i, label %land.rhs137.i.i.i

land.rhs137.i.i.i:                                ; preds = %if.then122.i.i.i
  %.b451454.i.i.i = load i1, ptr @print_other_cpu_stall.__already_done.231, align 1
  br i1 %.b451454.i.i.i, label %if.end175.i.i.i, label %if.then148.i.i.i, !prof !1646

if.then148.i.i.i:                                 ; preds = %land.rhs137.i.i.i
  store i1 true, ptr @print_other_cpu_stall.__already_done.231, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 524, i32 noundef 9, ptr noundef null) #24
  br label %if.end175.i.i.i

if.end175.i.i.i:                                  ; preds = %if.then148.i.i.i, %land.rhs137.i.i.i, %if.then122.i.i.i
  %grplo.i.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0497.i.i.i, i32 0, i32 15
  %337 = ptrtoint ptr %grplo.i.i.i to i32
  call void @__asan_load4_noabort(i32 %337)
  %338 = load i32, ptr %grplo.i.i.i, align 4
  %sub183.i.i.i = add i32 %338, -1
  %call184.i.i.i = tail call i32 @cpumask_next(i32 noundef %sub183.i.i.i, ptr noundef nonnull @__cpu_possible_mask) #28
  %grphi.i.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0497.i.i.i, i32 0, i32 16
  %339 = ptrtoint ptr %grphi.i.i.i to i32
  call void @__asan_load4_noabort(i32 %339)
  %340 = load i32, ptr %grphi.i.i.i, align 8
  %cmp186.not491.i.i.i = icmp sgt i32 %call184.i.i.i, %340
  br i1 %cmp186.not491.i.i.i, label %if.end196.i.i.i, label %for.body188.i.i.i

for.body188.i.i.i:                                ; preds = %for.inc.i.i.i, %if.end175.i.i.i
  %cpu.0493.i.i.i = phi i32 [ %call195.i.i.i, %for.inc.i.i.i ], [ %call184.i.i.i, %if.end175.i.i.i ]
  %ndetected.1492.i.i.i = phi i32 [ %ndetected.2.i.i.i, %for.inc.i.i.i ], [ %ndetected.0498.i.i.i, %if.end175.i.i.i ]
  %341 = ptrtoint ptr %qsmask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %341)
  %342 = load i32, ptr %qsmask.i.i.i, align 8
  %343 = ptrtoint ptr %grplo.i.i.i to i32
  call void @__asan_load4_noabort(i32 %343)
  %344 = load i32, ptr %grplo.i.i.i, align 4
  %sub191.i.i.i = sub i32 %cpu.0493.i.i.i, %344
  %shl.i.i.i = shl nuw i32 1, %sub191.i.i.i
  %and.i374.i.i = and i32 %shl.i.i.i, %342
  %tobool192.not.i.i.i = icmp eq i32 %and.i374.i.i, 0
  br i1 %tobool192.not.i.i.i, label %for.inc.i.i.i, label %if.then193.i.i.i

if.then193.i.i.i:                                 ; preds = %for.body188.i.i.i
  tail call fastcc void @print_cpu_stall_info(i32 noundef %cpu.0493.i.i.i) #24
  %inc.i.i.i = add i32 %ndetected.1492.i.i.i, 1
  br label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %if.then193.i.i.i, %for.body188.i.i.i
  %ndetected.2.i.i.i = phi i32 [ %inc.i.i.i, %if.then193.i.i.i ], [ %ndetected.1492.i.i.i, %for.body188.i.i.i ]
  %call195.i.i.i = tail call i32 @cpumask_next(i32 noundef %cpu.0493.i.i.i, ptr noundef nonnull @__cpu_possible_mask) #28
  %345 = ptrtoint ptr %grphi.i.i.i to i32
  call void @__asan_load4_noabort(i32 %345)
  %346 = load i32, ptr %grphi.i.i.i, align 8
  %cmp186.not.i.i.i = icmp sgt i32 %call195.i.i.i, %346
  br i1 %cmp186.not.i.i.i, label %if.end196.i.i.i, label %for.body188.i.i.i

if.end196.i.i.i:                                  ; preds = %for.inc.i.i.i, %if.end175.i.i.i, %do.body109.i.i.i
  %ndetected.3.i.i.i = phi i32 [ %ndetected.0498.i.i.i, %do.body109.i.i.i ], [ %ndetected.0498.i.i.i, %if.end175.i.i.i ], [ %ndetected.2.i.i.i, %for.inc.i.i.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %347 = load i32, ptr @debug_locks, align 4
  %tobool.not.i.i375.i.i = icmp eq i32 %347, 0
  br i1 %tobool.not.i.i375.i.i, label %rcu_print_task_stall.exit.i.i.i, label %land.lhs.true.i.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %if.end196.i.i.i
  %348 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i.i.i.i = and i32 %348, -16384
  %349 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %349, i32 0, i32 1
  %350 = ptrtoint ptr %preempt_count.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %350)
  %351 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i = add i32 %351, 1
  store volatile i32 %add.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1737
  %352 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i376.i.i = and i32 %352, -16384
  %353 = inttoptr i32 %and.i.i.i376.i.i to ptr
  %cpu.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %353, i32 0, i32 3
  %354 = ptrtoint ptr %cpu.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %354)
  %355 = load i32, ptr %cpu.i.i.i.i, align 4
  %arrayidx.i.i377.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %355
  %356 = ptrtoint ptr %arrayidx.i.i377.i.i to i32
  call void @__asan_load4_noabort(i32 %356)
  %357 = load i32, ptr %arrayidx.i.i377.i.i, align 4
  %add.i482.i.i.i = add i32 %357, ptrtoint (ptr @lockdep_recursion to i32)
  %358 = inttoptr i32 %add.i482.i.i.i to ptr
  %359 = ptrtoint ptr %358 to i32
  call void @__asan_load4_noabort(i32 %359)
  %360 = load volatile i32, ptr %358, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1738
  %361 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i5.i.i.i.i = and i32 %361, -16384
  %362 = inttoptr i32 %and.i.i.i5.i.i.i.i to ptr
  %preempt_count.i.i6.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %362, i32 0, i32 1
  %363 = ptrtoint ptr %preempt_count.i.i6.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %363)
  %364 = load volatile i32, ptr %preempt_count.i.i6.i.i.i.i, align 4
  %sub.i.i.i.i.i = add i32 %364, -1
  store volatile i32 %sub.i.i.i.i.i, ptr %preempt_count.i.i6.i.i.i.i, align 4
  %tobool21.not.i.i.i.i = icmp eq i32 %360, 0
  br i1 %tobool21.not.i.i.i.i, label %land.rhs.i.i.i.i, label %rcu_print_task_stall.exit.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %land.lhs.true.i.i.i.i
  %365 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i7.i.i.i.i = and i32 %365, -16384
  %366 = inttoptr i32 %and.i.i.i7.i.i.i.i to ptr
  %preempt_count.i.i8.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %366, i32 0, i32 1
  %367 = ptrtoint ptr %preempt_count.i.i8.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %367)
  %368 = load volatile i32, ptr %preempt_count.i.i8.i.i.i.i, align 4
  %add.i9.i.i.i.i = add i32 %368, 1
  store volatile i32 %add.i9.i.i.i.i, ptr %preempt_count.i.i8.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1739
  %369 = ptrtoint ptr %cpu.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %369)
  %370 = load i32, ptr %cpu.i.i.i.i, align 4
  %arrayidx45.i.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %370
  %371 = ptrtoint ptr %arrayidx45.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %371)
  %372 = load i32, ptr %arrayidx45.i.i.i.i, align 4
  %add46.i.i.i.i = add i32 %372, ptrtoint (ptr @hardirqs_enabled to i32)
  %373 = inttoptr i32 %add46.i.i.i.i to ptr
  %374 = ptrtoint ptr %373 to i32
  call void @__asan_load4_noabort(i32 %374)
  %375 = load volatile i32, ptr %373, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1740
  %376 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i10.i.i.i.i = and i32 %376, -16384
  %377 = inttoptr i32 %and.i.i.i10.i.i.i.i to ptr
  %preempt_count.i.i11.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %377, i32 0, i32 1
  %378 = ptrtoint ptr %preempt_count.i.i11.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %378)
  %379 = load volatile i32, ptr %preempt_count.i.i11.i.i.i.i, align 4
  %sub.i12.i.i.i.i = add i32 %379, -1
  store volatile i32 %sub.i12.i.i.i.i, ptr %preempt_count.i.i11.i.i.i.i, align 4
  %tobool53.not.i.i.i.i = icmp eq i32 %375, 0
  br i1 %tobool53.not.i.i.i.i, label %rcu_print_task_stall.exit.i.i.i, label %land.rhs56.i.i.i.i

land.rhs56.i.i.i.i:                               ; preds = %land.rhs.i.i.i.i
  %.b1.i.i.i.i = load i1, ptr @rcu_print_task_stall.__already_done, align 1
  br i1 %.b1.i.i.i.i, label %rcu_print_task_stall.exit.i.i.i, label %if.then.i.i378.i.i, !prof !1646

if.then.i.i378.i.i:                               ; preds = %land.rhs56.i.i.i.i
  store i1 true, ptr @rcu_print_task_stall.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 320, i32 noundef 9, ptr noundef null) #24
  br label %rcu_print_task_stall.exit.i.i.i

rcu_print_task_stall.exit.i.i.i:                  ; preds = %if.then.i.i378.i.i, %land.rhs56.i.i.i.i, %land.rhs.i.i.i.i, %land.lhs.true.i.i.i.i, %if.end196.i.i.i
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp.0497.i.i.i, i32 noundef %call112.i.i.i) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %380 = load i32, ptr @debug_locks, align 4
  %tobool201.not.i.i.i = icmp eq i32 %380, 0
  br i1 %tobool201.not.i.i.i, label %if.end314.i.i.i, label %land.lhs.true202.i.i.i

land.lhs.true202.i.i.i:                           ; preds = %rcu_print_task_stall.exit.i.i.i
  %381 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i470.i.i.i = and i32 %381, -16384
  %382 = inttoptr i32 %and.i.i.i470.i.i.i to ptr
  %preempt_count.i.i471.i.i.i = getelementptr inbounds %struct.thread_info, ptr %382, i32 0, i32 1
  %383 = ptrtoint ptr %preempt_count.i.i471.i.i.i to i32
  call void @__asan_load4_noabort(i32 %383)
  %384 = load volatile i32, ptr %preempt_count.i.i471.i.i.i, align 4
  %add.i472.i.i.i = add i32 %384, 1
  store volatile i32 %add.i472.i.i.i, ptr %preempt_count.i.i471.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1741
  %385 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i483.i.i.i = and i32 %385, -16384
  %386 = inttoptr i32 %and.i483.i.i.i to ptr
  %cpu225.i.i.i = getelementptr inbounds %struct.thread_info, ptr %386, i32 0, i32 3
  %387 = ptrtoint ptr %cpu225.i.i.i to i32
  call void @__asan_load4_noabort(i32 %387)
  %388 = load i32, ptr %cpu225.i.i.i, align 4
  %arrayidx226.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %388
  %389 = ptrtoint ptr %arrayidx226.i.i.i to i32
  call void @__asan_load4_noabort(i32 %389)
  %390 = load i32, ptr %arrayidx226.i.i.i, align 4
  %add227.i.i.i = add i32 %390, ptrtoint (ptr @lockdep_recursion to i32)
  %391 = inttoptr i32 %add227.i.i.i to ptr
  %392 = ptrtoint ptr %391 to i32
  call void @__asan_load4_noabort(i32 %392)
  %393 = load volatile i32, ptr %391, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1742
  %394 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i473.i.i.i = and i32 %394, -16384
  %395 = inttoptr i32 %and.i.i.i473.i.i.i to ptr
  %preempt_count.i.i474.i.i.i = getelementptr inbounds %struct.thread_info, ptr %395, i32 0, i32 1
  %396 = ptrtoint ptr %preempt_count.i.i474.i.i.i to i32
  call void @__asan_load4_noabort(i32 %396)
  %397 = load volatile i32, ptr %preempt_count.i.i474.i.i.i, align 4
  %sub.i475.i.i.i = add i32 %397, -1
  store volatile i32 %sub.i475.i.i.i, ptr %preempt_count.i.i474.i.i.i, align 4
  %tobool234.not.i.i.i = icmp eq i32 %393, 0
  br i1 %tobool234.not.i.i.i, label %land.rhs235.i.i.i, label %if.end314.i.i.i

land.rhs235.i.i.i:                                ; preds = %land.lhs.true202.i.i.i
  %398 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i476.i.i.i = and i32 %398, -16384
  %399 = inttoptr i32 %and.i.i.i476.i.i.i to ptr
  %preempt_count.i.i477.i.i.i = getelementptr inbounds %struct.thread_info, ptr %399, i32 0, i32 1
  %400 = ptrtoint ptr %preempt_count.i.i477.i.i.i to i32
  call void @__asan_load4_noabort(i32 %400)
  %401 = load volatile i32, ptr %preempt_count.i.i477.i.i.i, align 4
  %add.i478.i.i.i = add i32 %401, 1
  store volatile i32 %add.i478.i.i.i, ptr %preempt_count.i.i477.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1743
  %402 = ptrtoint ptr %cpu225.i.i.i to i32
  call void @__asan_load4_noabort(i32 %402)
  %403 = load i32, ptr %cpu225.i.i.i, align 4
  %arrayidx259.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %403
  %404 = ptrtoint ptr %arrayidx259.i.i.i to i32
  call void @__asan_load4_noabort(i32 %404)
  %405 = load i32, ptr %arrayidx259.i.i.i, align 4
  %add260.i.i.i = add i32 %405, ptrtoint (ptr @hardirqs_enabled to i32)
  %406 = inttoptr i32 %add260.i.i.i to ptr
  %407 = ptrtoint ptr %406 to i32
  call void @__asan_load4_noabort(i32 %407)
  %408 = load volatile i32, ptr %406, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1744
  %409 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i479.i.i.i = and i32 %409, -16384
  %410 = inttoptr i32 %and.i.i.i479.i.i.i to ptr
  %preempt_count.i.i480.i.i.i = getelementptr inbounds %struct.thread_info, ptr %410, i32 0, i32 1
  %411 = ptrtoint ptr %preempt_count.i.i480.i.i.i to i32
  call void @__asan_load4_noabort(i32 %411)
  %412 = load volatile i32, ptr %preempt_count.i.i480.i.i.i, align 4
  %sub.i481.i.i.i = add i32 %412, -1
  store volatile i32 %sub.i481.i.i.i, ptr %preempt_count.i.i480.i.i.i, align 4
  %tobool267.not.i.i.i = icmp eq i32 %408, 0
  br i1 %tobool267.not.i.i.i, label %if.end314.i.i.i, label %land.rhs276.i.i.i

land.rhs276.i.i.i:                                ; preds = %land.rhs235.i.i.i
  %.b452453.i.i.i = load i1, ptr @print_other_cpu_stall.__already_done.232, align 1
  br i1 %.b452453.i.i.i, label %if.end314.i.i.i, label %if.then287.i.i.i, !prof !1646

if.then287.i.i.i:                                 ; preds = %land.rhs276.i.i.i
  store i1 true, ptr @print_other_cpu_stall.__already_done.232, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 531, i32 noundef 9, ptr noundef null) #24
  br label %if.end314.i.i.i

if.end314.i.i.i:                                  ; preds = %if.then287.i.i.i, %land.rhs276.i.i.i, %land.rhs235.i.i.i, %land.lhs.true202.i.i.i, %rcu_print_task_stall.exit.i.i.i
  %incdec.ptr.i.i.i = getelementptr %struct.rcu_node, ptr %rnp.0497.i.i.i, i32 1
  %413 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx107.i.i.i = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %413
  %cmp.i.i.i = icmp ult ptr %incdec.ptr.i.i.i, %arrayidx107.i.i.i
  br i1 %cmp.i.i.i, label %do.body109.i.i.i, label %for.cond326.preheader.i.i.i

for.body330.i.i.i:                                ; preds = %rcu_get_n_cbs_cpu.exit.i384.i.i, %for.cond326.preheader.i.i.i
  %call327503.i.i.i = phi i32 [ %call327.i.i.i, %rcu_get_n_cbs_cpu.exit.i384.i.i ], [ %call327500.i.i.i, %for.cond326.preheader.i.i.i ]
  %totqlen.0502.i.i.i = phi i32 [ %add332.i.i.i, %rcu_get_n_cbs_cpu.exit.i384.i.i ], [ 0, %for.cond326.preheader.i.i.i ]
  %arrayidx.i484.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call327503.i.i.i
  %414 = ptrtoint ptr %arrayidx.i484.i.i.i to i32
  call void @__asan_load4_noabort(i32 %414)
  %415 = load i32, ptr %arrayidx.i484.i.i.i, align 4
  %add.i485.i.i.i = add i32 %415, ptrtoint (ptr @rcu_data to i32)
  %416 = inttoptr i32 %add.i485.i.i.i to ptr
  %flags1.i.i.i.i379.i.i = getelementptr inbounds %struct.rcu_data, ptr %416, i32 0, i32 13, i32 5
  %417 = ptrtoint ptr %flags1.i.i.i.i379.i.i to i32
  call void @__asan_load1_noabort(i32 %417)
  %418 = load volatile i8, ptr %flags1.i.i.i.i379.i.i, align 4
  %419 = and i8 %418, 1
  %tobool.i.i.not.i.i380.i.i = icmp eq i8 %419, 0
  br i1 %tobool.i.i.not.i.i380.i.i, label %rcu_get_n_cbs_cpu.exit.i384.i.i, label %if.then.i486.i.i.i

if.then.i486.i.i.i:                               ; preds = %for.body330.i.i.i
  %len.i.i.i381.i.i = getelementptr inbounds %struct.rcu_data, ptr %416, i32 0, i32 13, i32 3
  %call.i.i.i.i.i382.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %len.i.i.i381.i.i, i32 noundef 4) #24
  %420 = ptrtoint ptr %len.i.i.i381.i.i to i32
  call void @__asan_load4_noabort(i32 %420)
  %421 = load volatile i32, ptr %len.i.i.i381.i.i, align 4
  br label %rcu_get_n_cbs_cpu.exit.i384.i.i

rcu_get_n_cbs_cpu.exit.i384.i.i:                  ; preds = %if.then.i486.i.i.i, %for.body330.i.i.i
  %retval.0.i.i383.i.i = phi i32 [ %421, %if.then.i486.i.i.i ], [ 0, %for.body330.i.i.i ]
  %add332.i.i.i = add i32 %retval.0.i.i383.i.i, %totqlen.0502.i.i.i
  %call327.i.i.i = tail call i32 @cpumask_next(i32 noundef %call327503.i.i.i, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %422 = load i32, ptr @nr_cpu_ids, align 4
  %cmp328.i.i.i = icmp ult i32 %call327.i.i.i, %422
  br i1 %cmp328.i.i.i, label %for.body330.i.i.i, label %do.end336.i.i.i

do.end336.i.i.i:                                  ; preds = %rcu_get_n_cbs_cpu.exit.i384.i.i, %for.cond326.preheader.i.i.i
  %totqlen.0.lcssa.i385.i.i = phi i32 [ 0, %for.cond326.preheader.i.i.i ], [ %add332.i.i.i, %rcu_get_n_cbs_cpu.exit.i384.i.i ]
  %423 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i487.i.i.i = and i32 %423, -16384
  %424 = inttoptr i32 %and.i487.i.i.i to ptr
  %cpu339.i.i.i = getelementptr inbounds %struct.thread_info, ptr %424, i32 0, i32 3
  %425 = ptrtoint ptr %cpu339.i.i.i to i32
  call void @__asan_load4_noabort(i32 %425)
  %426 = load i32, ptr %cpu339.i.i.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %427 = load volatile i32, ptr @jiffies, align 128
  %sub340.i.i.i = sub i32 %427, %138
  %428 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %call342.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.234, i32 noundef %426, i32 noundef %sub340.i.i.i, i32 noundef %428, i32 noundef %totqlen.0.lcssa.i385.i.i) #27
  %tobool343.not.i.i.i = icmp eq i32 %ndetected.0.lcssa.i.i.i, 0
  br i1 %tobool343.not.i.i.i, label %if.else.i.i.i, label %if.then344.i.i.i

if.then344.i.i.i:                                 ; preds = %do.end336.i.i.i
  tail call fastcc void @rcu_dump_cpu_stacks() #24
  %429 = load i32, ptr @rcu_num_lvls, align 4
  %sub345.i.i.i = add i32 %429, -1
  %arrayidx346.i.i.i = getelementptr %struct.rcu_state, ptr @rcu_state, i32 0, i32 1, i32 %sub345.i.i.i
  %430 = ptrtoint ptr %arrayidx346.i.i.i to i32
  call void @__asan_load4_noabort(i32 %430)
  %431 = load ptr, ptr %arrayidx346.i.i.i, align 4
  %432 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx348.i.i.i = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %432
  br label %for.cond347.i.i.i

for.cond347.i.i.i:                                ; preds = %for.cond347.i.i.i, %if.then344.i.i.i
  %rnp.1.i.i.i = phi ptr [ %431, %if.then344.i.i.i ], [ %incdec.ptr353.i.i.i, %for.cond347.i.i.i ]
  %cmp349.i.i.i = icmp ult ptr %rnp.1.i.i.i, %arrayidx348.i.i.i
  %incdec.ptr353.i.i.i = getelementptr %struct.rcu_node, ptr %rnp.1.i.i.i, i32 1
  br i1 %cmp349.i.i.i, label %for.cond347.i.i.i, label %if.end394.i.i.i

if.else.i.i.i:                                    ; preds = %do.end336.i.i.i
  %433 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %cmp356.not.i.i.i = icmp eq i32 %433, %136
  br i1 %cmp356.not.i.i.i, label %if.else364.i.i.i, label %do.end361.i.i.i

do.end361.i.i.i:                                  ; preds = %if.else.i.i.i
  %call363.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.237) #27
  br label %if.end394.i.i.i

if.else364.i.i.i:                                 ; preds = %if.else.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %434 = load volatile i32, ptr @jiffies, align 128
  %435 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 31), align 4
  %436 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %sub375.i.i.i = sub i32 %434, %435
  %437 = load volatile i32, ptr @jiffies_till_next_fqs, align 4
  %438 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 4), align 8
  %call392.i.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.240, ptr noundef %436, i32 noundef %sub375.i.i.i, i32 noundef %434, i32 noundef %435, i32 noundef %437, i32 noundef %438) #27
  br label %if.end394.i.i.i

if.end394.i.i.i:                                  ; preds = %if.else364.i.i.i, %do.end361.i.i.i, %for.cond347.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %439 = load volatile i32, ptr @jiffies, align 128
  %440 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 33), align 4
  %sub399.i.i.i = sub i32 %439, %440
  %cmp400.i.i.i = icmp sgt i32 %sub399.i.i.i, -1
  br i1 %cmp400.i.i.i, label %do.body407.i.i.i, label %if.end415.i.i.i

do.body407.i.i.i:                                 ; preds = %if.end394.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %441 = load volatile i32, ptr @jiffies, align 128
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_timeout to i32))
  %442 = load volatile i32, ptr @rcu_cpu_stall_timeout, align 4
  %cmp.i.i386.i.i = icmp slt i32 %442, 3
  br i1 %cmp.i.i386.i.i, label %if.end21.sink.split.i.i390.i.i, label %if.else.i.i388.i.i

if.else.i.i388.i.i:                               ; preds = %do.body407.i.i.i
  %cmp10.i.i387.i.i = icmp ugt i32 %442, 300
  br i1 %cmp10.i.i387.i.i, label %if.end21.sink.split.i.i390.i.i, label %rcu_jiffies_till_stall_check.exit.i392.i.i

if.end21.sink.split.i.i390.i.i:                   ; preds = %if.else.i.i388.i.i, %do.body407.i.i.i
  %.sink.i.i389.i.i = phi i32 [ 3, %do.body407.i.i.i ], [ 300, %if.else.i.i388.i.i ]
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_timeout to i32))
  store volatile i32 %.sink.i.i389.i.i, ptr @rcu_cpu_stall_timeout, align 4
  br label %rcu_jiffies_till_stall_check.exit.i392.i.i

rcu_jiffies_till_stall_check.exit.i392.i.i:       ; preds = %if.end21.sink.split.i.i390.i.i, %if.else.i.i388.i.i
  %till_stall_check.0.i.i391.i.i = phi i32 [ %442, %if.else.i.i388.i.i ], [ %.sink.i.i389.i.i, %if.end21.sink.split.i.i390.i.i ]
  %443 = mul nuw nsw i32 %till_stall_check.0.i.i391.i.i, 300
  %add409.i.i.i = add i32 %441, 1503
  %add410.i.i.i = add i32 %add409.i.i.i, %443
  store volatile i32 %add410.i.i.i, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 33), align 4
  br label %if.end415.i.i.i

if.end415.i.i.i:                                  ; preds = %rcu_jiffies_till_stall_check.exit.i392.i.i, %if.end394.i.i.i
  tail call fastcc void @rcu_check_gp_kthread_expired_fqs_timer() #24
  tail call fastcc void @rcu_check_gp_kthread_starvation() #24
  %444 = load i32, ptr @panic_on_rcu_stall.cpu_stall, align 4
  %inc.i.i393.i.i = add i32 %444, 1
  store i32 %inc.i.i393.i.i, ptr @panic_on_rcu_stall.cpu_stall, align 4
  %445 = load i32, ptr @sysctl_max_rcu_stall_to_panic, align 4
  %cmp.i489.i.i.i = icmp slt i32 %inc.i.i393.i.i, %445
  br i1 %cmp.i489.i.i.i, label %panic_on_rcu_stall.exit.i396.i.i, label %if.end.i.i394.i.i

if.end.i.i394.i.i:                                ; preds = %if.end415.i.i.i
  %446 = load i32, ptr @sysctl_panic_on_rcu_stall, align 4
  %tobool.not.i490.i.i.i = icmp eq i32 %446, 0
  br i1 %tobool.not.i490.i.i.i, label %panic_on_rcu_stall.exit.i396.i.i, label %if.then1.i.i395.i.i

if.then1.i.i395.i.i:                              ; preds = %if.end.i.i394.i.i
  call void @__asan_handle_no_return()
  tail call void (ptr, ...) @panic(ptr noundef nonnull @.str.227) #29
  unreachable

panic_on_rcu_stall.exit.i396.i.i:                 ; preds = %if.end.i.i394.i.i, %if.end415.i.i.i
  tail call void @rcu_force_quiescent_state() #24
  br label %print_other_cpu_stall.exit.i.i

print_other_cpu_stall.exit.i.i:                   ; preds = %panic_on_rcu_stall.exit.i396.i.i, %rcu_stall_is_suppressed.exit.i371.i.i, %rcu_stall_is_suppressed_at_boot.exit.i.i369.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_ftrace_dump to i32))
  %447 = load volatile i32, ptr @rcu_cpu_stall_ftrace_dump, align 4
  %tobool251.not.i.i = icmp eq i32 %447, 0
  br i1 %tobool251.not.i.i, label %do.end282.i.i, label %do.body253.i.i

do.body253.i.i:                                   ; preds = %print_other_cpu_stall.exit.i.i
  %call.i.i341.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @check_cpu_stall.___rfd_beenhere.185, i32 noundef 4) #24
  %448 = load volatile i32, ptr @check_cpu_stall.___rfd_beenhere.185, align 4
  %tobool255.not.i.i = icmp eq i32 %448, 0
  br i1 %tobool255.not.i.i, label %land.lhs.true256.i.i, label %do.end282.i.i

land.lhs.true256.i.i:                             ; preds = %do.body253.i.i
  %call.i.i342.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @check_cpu_stall.___rfd_beenhere.185, i32 noundef 4) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1728
  tail call void @llvm.prefetch.p0(ptr nonnull @check_cpu_stall.___rfd_beenhere.185, i32 1, i32 3, i32 1) #24
  %449 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 1, ptr nonnull @check_cpu_stall.___rfd_beenhere.185) #24, !srcloc !1729
  %asmresult.i.i343.i.i = extractvalue { i32, i32 } %449, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1730
  %tobool258.not.i.i = icmp eq i32 %asmresult.i.i343.i.i, 0
  br i1 %tobool258.not.i.i, label %if.then259.i.i, label %do.end282.i.i

if.then259.i.i:                                   ; preds = %land.lhs.true256.i.i
  tail call void @tracing_off() #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress to i32))
  %450 = load i32, ptr @rcu_cpu_stall_suppress, align 4
  %tobool261.not.i.i = icmp eq i32 %450, 0
  br i1 %tobool261.not.i.i, label %if.then262.i.i, label %do.end265.i.i

if.then262.i.i:                                   ; preds = %if.then259.i.i
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress to i32))
  store i32 3, ptr @rcu_cpu_stall_suppress, align 4
  br label %do.end265.i.i

do.end265.i.i:                                    ; preds = %if.then262.i.i, %if.then259.i.i
  tail call void @ftrace_dump(i32 noundef 1) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress to i32))
  %451 = load i32, ptr @rcu_cpu_stall_suppress, align 4
  %cmp267.i.i = icmp eq i32 %451, 3
  br i1 %cmp267.i.i, label %do.end282.sink.split.i.i, label %do.end282.i.i

do.end282.sink.split.i.i:                         ; preds = %do.end265.i.i, %do.end203.i.i
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress to i32))
  store i32 0, ptr @rcu_cpu_stall_suppress, align 4
  br label %do.end282.i.i

do.end282.i.i:                                    ; preds = %do.end282.sink.split.i.i, %do.end265.i.i, %land.lhs.true256.i.i, %do.body253.i.i, %print_other_cpu_stall.exit.i.i, %do.end203.i.i, %land.lhs.true194.i.i, %do.body191.i.i, %print_cpu_stall.exit.i.i
  %452 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 33), align 4
  %cmp284.i.i = icmp eq i32 %452, %add150.i.i
  br i1 %cmp284.i.i, label %if.then285.i.i, label %check_cpu_stall.exit.i

if.then285.i.i:                                   ; preds = %do.end282.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %453 = load volatile i32, ptr @jiffies, align 128
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_timeout to i32))
  %454 = load volatile i32, ptr @rcu_cpu_stall_timeout, align 4
  %cmp.i397.i.i = icmp slt i32 %454, 3
  br i1 %cmp.i397.i.i, label %if.end21.sink.split.i.i.i, label %if.else.i398.i.i

if.else.i398.i.i:                                 ; preds = %if.then285.i.i
  %cmp10.i.i.i = icmp ugt i32 %454, 300
  br i1 %cmp10.i.i.i, label %if.end21.sink.split.i.i.i, label %rcu_jiffies_till_stall_check.exit.i.i

if.end21.sink.split.i.i.i:                        ; preds = %if.else.i398.i.i, %if.then285.i.i
  %.sink.i.i.i = phi i32 [ 3, %if.then285.i.i ], [ 300, %if.else.i398.i.i ]
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_timeout to i32))
  store volatile i32 %.sink.i.i.i, ptr @rcu_cpu_stall_timeout, align 4
  br label %rcu_jiffies_till_stall_check.exit.i.i

rcu_jiffies_till_stall_check.exit.i.i:            ; preds = %if.end21.sink.split.i.i.i, %if.else.i398.i.i
  %till_stall_check.0.i.i.i = phi i32 [ %454, %if.else.i398.i.i ], [ %.sink.i.i.i, %if.end21.sink.split.i.i.i ]
  %455 = mul nuw nsw i32 %till_stall_check.0.i.i.i, 300
  %add287.i.i = add i32 %453, 1503
  %add288.i.i = add i32 %add287.i.i, %455
  store volatile i32 %add288.i.i, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 33), align 4
  br label %check_cpu_stall.exit.i

check_cpu_stall.exit.i:                           ; preds = %rcu_jiffies_till_stall_check.exit.i.i, %do.end282.i.i, %__cmpxchg.exit356.i.i, %land.lhs.true216.i.i, %if.else.i.i, %if.end108.i.i, %lor.lhs.false.i.i, %do.end100.i.i
  %nocb_defer_wakeup.i.i = getelementptr inbounds %struct.rcu_data, ptr %67, i32 0, i32 33
  %456 = ptrtoint ptr %nocb_defer_wakeup.i.i to i32
  call void @__asan_load4_noabort(i32 %456)
  %457 = load volatile i32, ptr %nocb_defer_wakeup.i.i, align 4
  %cmp.i.i = icmp slt i32 %457, 2
  br i1 %cmp.i.i, label %if.end110.i, label %if.then177

if.end110.i:                                      ; preds = %check_cpu_stall.exit.i
  br i1 %tobool.not.i, label %lor.lhs.false.i344, label %if.end117.i

lor.lhs.false.i344:                               ; preds = %if.end110.i
  %call112.i = tail call fastcc i32 @rcu_is_cpu_rrupt_from_idle() #24
  br label %if.end117.i

if.end117.i:                                      ; preds = %lor.lhs.false.i344, %if.end110.i
  %458 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %and.i.i194.i = and i32 %458, 3
  %tobool119.not.i = icmp eq i32 %and.i.i194.i, 0
  %core_needs_qs.i = getelementptr inbounds %struct.rcu_data, ptr %67, i32 0, i32 3
  %459 = ptrtoint ptr %core_needs_qs.i to i32
  call void @__asan_load1_noabort(i32 %459)
  %460 = load i8, ptr %core_needs_qs.i, align 2, !range !1644
  %tobool121.not.i = icmp eq i8 %460, 0
  br i1 %tobool121.not.i, label %if.end127.i, label %land.lhs.true122.i

land.lhs.true122.i:                               ; preds = %if.end117.i
  %cpu_no_qs.i = getelementptr inbounds %struct.rcu_data, ptr %67, i32 0, i32 2
  %461 = ptrtoint ptr %cpu_no_qs.i to i32
  call void @__asan_load1_noabort(i32 %461)
  %462 = load i8, ptr %cpu_no_qs.i, align 8
  %tobool123.not.i = icmp ne i8 %462, 0
  %brmerge.i = select i1 %tobool123.not.i, i1 true, i1 %tobool119.not.i
  br i1 %brmerge.i, label %if.end127.i, label %if.then177

if.end127.i:                                      ; preds = %land.lhs.true122.i, %if.end117.i
  %call128.i = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %67) #24
  br i1 %call128.i, label %if.end132.i, label %land.lhs.true129.i

land.lhs.true129.i:                               ; preds = %if.end127.i
  %cblist.i = getelementptr inbounds %struct.rcu_data, ptr %67, i32 0, i32 13
  %call130.i = tail call zeroext i1 @rcu_segcblist_ready_cbs(ptr noundef %cblist.i) #24
  br i1 %call130.i, label %if.then177, label %if.end132.i

if.end132.i:                                      ; preds = %land.lhs.true129.i, %if.end127.i
  br i1 %tobool119.not.i, label %land.lhs.true134.i, label %if.end143.i

land.lhs.true134.i:                               ; preds = %if.end132.i
  %flags1.i.i.i = getelementptr inbounds %struct.rcu_data, ptr %67, i32 0, i32 13, i32 5
  %463 = ptrtoint ptr %flags1.i.i.i to i32
  call void @__asan_load1_noabort(i32 %463)
  %464 = load volatile i8, ptr %flags1.i.i.i, align 4
  %465 = and i8 %464, 1
  %tobool.i.i.not.i = icmp eq i8 %465, 0
  br i1 %tobool.i.i.not.i, label %if.end143.i, label %land.lhs.true137.i

land.lhs.true137.i:                               ; preds = %land.lhs.true134.i
  %call138.i = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %67) #24
  br i1 %call138.i, label %if.end143.i, label %land.lhs.true139.i

land.lhs.true139.i:                               ; preds = %land.lhs.true137.i
  %arrayidx.i195.i = getelementptr %struct.rcu_data, ptr %67, i32 0, i32 13, i32 1, i32 2
  %466 = ptrtoint ptr %arrayidx.i195.i to i32
  call void @__asan_load4_noabort(i32 %466)
  %467 = load volatile ptr, ptr %arrayidx.i195.i, align 4
  %468 = ptrtoint ptr %467 to i32
  call void @__asan_load4_noabort(i32 %468)
  %469 = load volatile ptr, ptr %467, align 4
  %tobool.not.i196.i = icmp eq ptr %469, null
  br i1 %tobool.not.i196.i, label %if.end143.i, label %if.then177

if.end143.i:                                      ; preds = %land.lhs.true139.i, %land.lhs.true137.i, %land.lhs.true134.i, %if.end132.i
  %gp_seq.i = getelementptr inbounds %struct.rcu_node, ptr %69, i32 0, i32 1
  %470 = ptrtoint ptr %gp_seq.i to i32
  call void @__asan_load4_noabort(i32 %470)
  %471 = load volatile i32, ptr %gp_seq.i, align 4
  %472 = ptrtoint ptr %67 to i32
  call void @__asan_load4_noabort(i32 %472)
  %473 = load i32, ptr %67, align 128
  %cmp.not.i = icmp eq i32 %471, %473
  br i1 %cmp.not.i, label %rcu_pending.exit, label %if.then177

rcu_pending.exit:                                 ; preds = %if.end143.i
  %gpwrap.i = getelementptr inbounds %struct.rcu_data, ptr %67, i32 0, i32 5
  %474 = ptrtoint ptr %gpwrap.i to i32
  call void @__asan_load1_noabort(i32 %474)
  %475 = load volatile i8, ptr %gpwrap.i, align 4, !range !1644
  %tobool176.not = icmp eq i8 %475, 0
  br i1 %tobool176.not, label %do.body179, label %if.then177

if.then177:                                       ; preds = %rcu_pending.exit, %if.end143.i, %land.lhs.true139.i, %land.lhs.true129.i, %land.lhs.true122.i, %check_cpu_stall.exit.i
  tail call fastcc void @invoke_rcu_core()
  br label %do.body179

do.body179:                                       ; preds = %if.then177, %rcu_pending.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %476 = load i32, ptr @debug_locks, align 4
  %tobool181.not = icmp eq i32 %476, 0
  br i1 %tobool181.not, label %if.end293, label %land.lhs.true182

land.lhs.true182:                                 ; preds = %do.body179
  %477 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i327 = and i32 %477, -16384
  %478 = inttoptr i32 %and.i.i.i327 to ptr
  %preempt_count.i.i328 = getelementptr inbounds %struct.thread_info, ptr %478, i32 0, i32 1
  %479 = ptrtoint ptr %preempt_count.i.i328 to i32
  call void @__asan_load4_noabort(i32 %479)
  %480 = load volatile i32, ptr %preempt_count.i.i328, align 4
  %add.i329 = add i32 %480, 1
  store volatile i32 %add.i329, ptr %preempt_count.i.i328, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1745
  %481 = ptrtoint ptr %cpu111 to i32
  call void @__asan_load4_noabort(i32 %481)
  %482 = load i32, ptr %cpu111, align 4
  %arrayidx206 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %482
  %483 = ptrtoint ptr %arrayidx206 to i32
  call void @__asan_load4_noabort(i32 %483)
  %484 = load i32, ptr %arrayidx206, align 4
  %add207 = add i32 %484, ptrtoint (ptr @lockdep_recursion to i32)
  %485 = inttoptr i32 %add207 to ptr
  %486 = ptrtoint ptr %485 to i32
  call void @__asan_load4_noabort(i32 %486)
  %487 = load volatile i32, ptr %485, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1746
  %488 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i330 = and i32 %488, -16384
  %489 = inttoptr i32 %and.i.i.i330 to ptr
  %preempt_count.i.i331 = getelementptr inbounds %struct.thread_info, ptr %489, i32 0, i32 1
  %490 = ptrtoint ptr %preempt_count.i.i331 to i32
  call void @__asan_load4_noabort(i32 %490)
  %491 = load volatile i32, ptr %preempt_count.i.i331, align 4
  %sub.i332 = add i32 %491, -1
  store volatile i32 %sub.i332, ptr %preempt_count.i.i331, align 4
  %tobool214.not = icmp eq i32 %487, 0
  br i1 %tobool214.not, label %land.rhs215, label %if.end293

land.rhs215:                                      ; preds = %land.lhs.true182
  %492 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i333 = and i32 %492, -16384
  %493 = inttoptr i32 %and.i.i.i333 to ptr
  %preempt_count.i.i334 = getelementptr inbounds %struct.thread_info, ptr %493, i32 0, i32 1
  %494 = ptrtoint ptr %preempt_count.i.i334 to i32
  call void @__asan_load4_noabort(i32 %494)
  %495 = load volatile i32, ptr %preempt_count.i.i334, align 4
  %add.i335 = add i32 %495, 1
  store volatile i32 %add.i335, ptr %preempt_count.i.i334, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1747
  %496 = ptrtoint ptr %cpu111 to i32
  call void @__asan_load4_noabort(i32 %496)
  %497 = load i32, ptr %cpu111, align 4
  %arrayidx239 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %497
  %498 = ptrtoint ptr %arrayidx239 to i32
  call void @__asan_load4_noabort(i32 %498)
  %499 = load i32, ptr %arrayidx239, align 4
  %add240 = add i32 %499, ptrtoint (ptr @hardirqs_enabled to i32)
  %500 = inttoptr i32 %add240 to ptr
  %501 = ptrtoint ptr %500 to i32
  call void @__asan_load4_noabort(i32 %501)
  %502 = load volatile i32, ptr %500, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1748
  %503 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i336 = and i32 %503, -16384
  %504 = inttoptr i32 %and.i.i.i336 to ptr
  %preempt_count.i.i337 = getelementptr inbounds %struct.thread_info, ptr %504, i32 0, i32 1
  %505 = ptrtoint ptr %preempt_count.i.i337 to i32
  call void @__asan_load4_noabort(i32 %505)
  %506 = load volatile i32, ptr %preempt_count.i.i337, align 4
  %sub.i338 = add i32 %506, -1
  store volatile i32 %sub.i338, ptr %preempt_count.i.i337, align 4
  %tobool247.not = icmp eq i32 %502, 0
  br i1 %tobool247.not, label %if.end293, label %land.rhs255

land.rhs255:                                      ; preds = %land.rhs215
  %.b310311 = load i1, ptr @rcu_sched_clock_irq.__already_done.19, align 1
  br i1 %.b310311, label %if.end293, label %if.then266, !prof !1646

if.then266:                                       ; preds = %land.rhs255
  store i1 true, ptr @rcu_sched_clock_irq.__already_done.19, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2619, i32 noundef 9, ptr noundef null) #24
  br label %if.end293

if.end293:                                        ; preds = %if.then266, %land.rhs255, %land.rhs215, %land.lhs.true182, %do.body179
  %507 = load ptr, ptr @rcu_sched_clock_irq.___tp_str.20, align 4
  tail call fastcc void @trace_rcu_utilization(ptr noundef %507)
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rcu_utilization(ptr noundef %s) unnamed_addr #7 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_utilization, i32 0, i32 1), ptr blockaddress(@trace_rcu_utilization, %do.body)) #24
          to label %if.end48 [label %do.body], !srcloc !1665

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1749
  %call42 = tail call i32 @__traceiter_rcu_utilization(ptr noundef null, ptr noundef %s) #24
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1750
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !1646

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1668
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_utilization, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_utilization, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #24
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rcu_utilization.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_rcu_utilization.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.128, i32 noundef 42, ptr noundef nonnull @.str.129) #24
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1669
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @rcu_is_cpu_rrupt_from_idle() unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end86, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %4, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1751
  %5 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i281 = and i32 %5, -16384
  %6 = inttoptr i32 %and.i281 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1752
  %14 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i273 = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i273 to ptr
  %preempt_count.i.i274 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i274 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i274, align 4
  %sub.i = add i32 %17, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i274, align 4
  %tobool20.not = icmp eq i32 %13, 0
  br i1 %tobool20.not, label %land.rhs, label %if.end86

land.rhs:                                         ; preds = %land.lhs.true
  %18 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i275 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i275 to ptr
  %preempt_count.i.i276 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i276 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i276, align 4
  %add.i277 = add i32 %21, 1
  store volatile i32 %add.i277, ptr %preempt_count.i.i276, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1753
  %22 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cpu, align 4
  %arrayidx44 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %23
  %24 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx44, align 4
  %add45 = add i32 %25, ptrtoint (ptr @hardirqs_enabled to i32)
  %26 = inttoptr i32 %add45 to ptr
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %26, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1754
  %29 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i278 = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i278 to ptr
  %preempt_count.i.i279 = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i279 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i279, align 4
  %sub.i280 = add i32 %32, -1
  store volatile i32 %sub.i280, ptr %preempt_count.i.i279, align 4
  %tobool52.not = icmp eq i32 %28, 0
  br i1 %tobool52.not, label %if.end86, label %land.rhs55

land.rhs55:                                       ; preds = %land.rhs
  %.b268 = load i1, ptr @rcu_is_cpu_rrupt_from_idle.__already_done, align 1
  br i1 %.b268, label %if.end86, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs55
  store i1 true, ptr @rcu_is_cpu_rrupt_from_idle.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 431, i32 noundef 9, ptr noundef null) #24
  br label %if.end86

if.end86:                                         ; preds = %if.then, %land.rhs55, %land.rhs, %land.lhs.true, %entry
  %33 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i282 = and i32 %33, -16384
  %34 = inttoptr i32 %and.i282 to ptr
  %cpu112 = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 3
  %35 = ptrtoint ptr %cpu112 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cpu112, align 4
  %arrayidx113 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %36
  %37 = ptrtoint ptr %arrayidx113 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx113, align 4
  %add114 = add i32 %38, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 19) to i32)
  %39 = inttoptr i32 %add114 to ptr
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %39, align 4
  %cmp = icmp slt i32 %41, 0
  br i1 %cmp, label %land.lhs.true116, label %do.body125

land.lhs.true116:                                 ; preds = %if.end86
  %call117 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool118.not = icmp eq i32 %call117, 0
  br i1 %tobool118.not, label %do.body125, label %land.lhs.true119

land.lhs.true119:                                 ; preds = %land.lhs.true116
  %.b262267 = load i1, ptr @rcu_is_cpu_rrupt_from_idle.__warned, align 1
  br i1 %.b262267, label %do.body125, label %if.then121

if.then121:                                       ; preds = %land.lhs.true119
  store i1 true, ptr @rcu_is_cpu_rrupt_from_idle.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 435, ptr noundef nonnull @.str.134) #24
  br label %do.body125

do.body125:                                       ; preds = %if.then121, %land.lhs.true119, %land.lhs.true116, %if.end86
  %42 = ptrtoint ptr %cpu112 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %cpu112, align 4
  %arrayidx142 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %43
  %44 = ptrtoint ptr %arrayidx142 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %arrayidx142, align 4
  %add143 = add i32 %45, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 20) to i32)
  %46 = inttoptr i32 %add143 to ptr
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %46, align 4
  %cmp145 = icmp slt i32 %48, 1
  br i1 %cmp145, label %land.lhs.true146, label %do.end154

land.lhs.true146:                                 ; preds = %do.body125
  %call147 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool148.not = icmp eq i32 %call147, 0
  br i1 %tobool148.not, label %do.end154, label %land.lhs.true149

land.lhs.true149:                                 ; preds = %land.lhs.true146
  %.b263266 = load i1, ptr @rcu_is_cpu_rrupt_from_idle.__warned.135, align 1
  br i1 %.b263266, label %do.end154, label %if.then151

if.then151:                                       ; preds = %land.lhs.true149
  store i1 true, ptr @rcu_is_cpu_rrupt_from_idle.__warned.135, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 437, ptr noundef nonnull @.str.136) #24
  br label %do.end154

do.end154:                                        ; preds = %if.then151, %land.lhs.true149, %land.lhs.true146, %do.body125
  %49 = ptrtoint ptr %cpu112 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %cpu112, align 4
  %arrayidx171 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %50
  %51 = ptrtoint ptr %arrayidx171 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %arrayidx171, align 4
  %add172 = add i32 %52, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 20) to i32)
  %53 = inttoptr i32 %add172 to ptr
  %54 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %53, align 4
  %cmp174 = icmp sgt i32 %55, 1
  br i1 %cmp174, label %cleanup, label %if.end176

if.end176:                                        ; preds = %do.end154
  %tobool178.not = icmp eq i32 %55, 0
  br i1 %tobool178.not, label %land.rhs179, label %if.end229

land.rhs179:                                      ; preds = %if.end176
  %task = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 2
  %56 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %task, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %57, i32 0, i32 3
  %58 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %59, 2
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %land.rhs191, label %if.end229

land.rhs191:                                      ; preds = %land.rhs179
  %.b264265 = load i1, ptr @rcu_is_cpu_rrupt_from_idle.__already_done.137, align 1
  br i1 %.b264265, label %if.end229, label %if.then202, !prof !1646

if.then202:                                       ; preds = %land.rhs191
  store i1 true, ptr @rcu_is_cpu_rrupt_from_idle.__already_done.137, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 447, i32 noundef 9, ptr noundef null) #24
  br label %if.end229

if.end229:                                        ; preds = %if.then202, %land.rhs191, %land.rhs179, %if.end176
  %60 = ptrtoint ptr %cpu112 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %cpu112, align 4
  %arrayidx253 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %61
  %62 = ptrtoint ptr %arrayidx253 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %arrayidx253, align 4
  %add254 = add i32 %63, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 19) to i32)
  %64 = inttoptr i32 %add254 to ptr
  %65 = ptrtoint ptr %64 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %64, align 4
  %cmp256 = icmp eq i32 %66, 0
  %conv = zext i1 %cmp256 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end229, %do.end154
  %retval.0 = phi i32 [ %conv, %if.end229 ], [ 0, %do.end154 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @invoke_rcu_core() unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %entry
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %entry
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end3, label %if.end

if.end:                                           ; preds = %cpu_online.exit
  %9 = load i8, ptr @use_softirq, align 1, !range !1644
  %tobool.not = icmp eq i8 %9, 0
  br i1 %tobool.not, label %if.else, label %if.then2

if.then2:                                         ; preds = %if.end
  tail call void @raise_softirq(i32 noundef 9) #24
  br label %if.end3

if.else:                                          ; preds = %if.end
  %10 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i.i = and i32 %10, 128
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %do.end11.i

if.then.i:                                        ; preds = %if.else
  tail call void @trace_hardirqs_off() #24
  br label %do.end11.i

do.end11.i:                                       ; preds = %if.then.i, %if.else
  %11 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i107.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i107.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %14
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %16, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 58) to i32)
  %17 = inttoptr i32 %add.i to ptr
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 1, ptr %17, align 1
  %19 = load i32, ptr %cpu.i, align 4
  %arrayidx43.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %19
  %20 = ptrtoint ptr %arrayidx43.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %arrayidx43.i, align 4
  %add44.i = add i32 %21, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 56) to i32)
  %22 = inttoptr i32 %add44.i to ptr
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %22, align 4
  %cmp46.not.i = icmp eq ptr %24, null
  br i1 %cmp46.not.i, label %do.body72.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.end11.i
  %task.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %25 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %task.i, align 8
  %cmp49.not.i = icmp eq ptr %24, %26
  br i1 %cmp49.not.i, label %do.body72.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %land.lhs.true.i
  %add69.i = add i32 %21, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 57) to i32)
  %27 = inttoptr i32 %add69.i to ptr
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %27, align 4
  %cmp.not.i.i = icmp eq i32 %29, 4
  br i1 %cmp.not.i.i, label %lor.lhs.false.i.i, label %if.then.i.i

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i
  %30 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i4.i.i = and i32 %30, -16384
  %31 = inttoptr i32 %and.i4.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 2
  %32 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %task.i.i, align 8
  %flags.i.i.i = getelementptr inbounds %struct.task_struct, ptr %33, i32 0, i32 3
  %34 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %flags.i.i.i, align 4
  %and.i.i.i4 = and i32 %35, 2
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i4, 0
  br i1 %tobool.i.not.i.i, label %do.body72.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %lor.lhs.false.i.i, %land.lhs.true.i.i
  %call2.i.i = tail call i32 @wake_up_process(ptr noundef nonnull %24) #24
  br label %do.body72.i

do.body72.i:                                      ; preds = %if.then.i.i, %lor.lhs.false.i.i, %land.lhs.true.i, %do.end11.i
  br i1 %tobool.not.i, label %if.then81.i, label %do.body83.i

if.then81.i:                                      ; preds = %do.body72.i
  tail call void @trace_hardirqs_on() #24
  br label %do.body83.i

do.body83.i:                                      ; preds = %if.then81.i, %do.body72.i
  %36 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #24, !srcloc !1649
  %and.i.i109.i = and i32 %36, 128
  %tobool91.not.i = icmp eq i32 %and.i.i109.i, 0
  br i1 %tobool91.not.i, label %if.then95.i, label %invoke_rcu_core_kthread.exit, !prof !1645

if.then95.i:                                      ; preds = %do.body83.i
  tail call void @warn_bogus_irq_restore() #24
  br label %invoke_rcu_core_kthread.exit

invoke_rcu_core_kthread.exit:                     ; preds = %if.then95.i, %do.body83.i
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %10) #24, !srcloc !1679
  br label %if.end3

if.end3:                                          ; preds = %invoke_rcu_core_kthread.exit, %if.then2, %cpu_online.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_force_quiescent_state() #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 7) to i32)
  %6 = inttoptr i32 %add to ptr
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %rnp.0370 = load ptr, ptr %6, align 4
  %cmp.not371 = icmp eq ptr %rnp.0370, null
  br i1 %cmp.not371, label %do.body22, label %do.end11

for.cond:                                         ; preds = %if.end
  %parent = getelementptr inbounds %struct.rcu_node, ptr %rnp.0373, i32 0, i32 20
  %8 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %8)
  %rnp.0 = load ptr, ptr %parent, align 4
  %cmp.not = icmp eq ptr %rnp.0, null
  br i1 %cmp.not, label %do.body22, label %do.end11

do.end11:                                         ; preds = %for.cond, %entry
  %rnp.0373 = phi ptr [ %rnp.0, %for.cond ], [ %rnp.0370, %entry ]
  %rnp_old.0372 = phi ptr [ %rnp.0373, %for.cond ], [ null, %entry ]
  %9 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %10 = and i16 %9, 2
  %tobool.not = icmp eq i16 %10, 0
  br i1 %tobool.not, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %do.end11
  %fqslock = getelementptr inbounds %struct.rcu_node, ptr %rnp.0373, i32 0, i32 32
  %call13 = tail call i32 @_raw_spin_trylock(ptr noundef %fqslock) #24
  %tobool14.not = icmp eq i32 %call13, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %do.end11
  %11 = phi i1 [ true, %do.end11 ], [ %tobool14.not, %lor.rhs ]
  %cmp15.not = icmp eq ptr %rnp_old.0372, null
  br i1 %cmp15.not, label %if.end, label %if.then

if.then:                                          ; preds = %lor.end
  %fqslock17 = getelementptr inbounds %struct.rcu_node, ptr %rnp_old.0372, i32 0, i32 32
  tail call void @_raw_spin_unlock(ptr noundef %fqslock17) #24
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.end
  br i1 %11, label %cleanup, label %for.cond

do.body22:                                        ; preds = %for.cond, %entry
  %rnp_old.0.lcssa = phi ptr [ null, %entry ], [ %rnp.0373, %for.cond ]
  %call26 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %rnp_old.0.lcssa) #24
  %fqslock34 = getelementptr inbounds %struct.rcu_node, ptr %rnp_old.0.lcssa, i32 0, i32 32
  tail call void @_raw_spin_unlock(ptr noundef %fqslock34) #24
  %12 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %13 = and i16 %12, 2
  %tobool41.not = icmp eq i16 %13, 0
  br i1 %tobool41.not, label %do.end175, label %do.body44

do.body44:                                        ; preds = %do.body22
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %14 = load i32, ptr @debug_locks, align 4
  %tobool45.not = icmp eq i32 %14, 0
  br i1 %tobool45.not, label %if.end146, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body44
  %15 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %18, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1755
  %19 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu, align 4
  %arrayidx67 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %20
  %21 = ptrtoint ptr %arrayidx67 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx67, align 4
  %add68 = add i32 %22, ptrtoint (ptr @lockdep_recursion to i32)
  %23 = inttoptr i32 %add68 to ptr
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %23, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1756
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i347 = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i347 to ptr
  %preempt_count.i.i348 = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i348 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i348, align 4
  %sub.i = add i32 %29, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i348, align 4
  %tobool75.not = icmp eq i32 %25, 0
  br i1 %tobool75.not, label %land.rhs, label %if.end146

land.rhs:                                         ; preds = %land.lhs.true
  %30 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i349 = and i32 %30, -16384
  %31 = inttoptr i32 %and.i.i.i349 to ptr
  %preempt_count.i.i350 = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %preempt_count.i.i350 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %preempt_count.i.i350, align 4
  %add.i351 = add i32 %33, 1
  store volatile i32 %add.i351, ptr %preempt_count.i.i350, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1757
  %34 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %cpu, align 4
  %arrayidx99 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %35
  %36 = ptrtoint ptr %arrayidx99 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %arrayidx99, align 4
  %add100 = add i32 %37, ptrtoint (ptr @hardirqs_enabled to i32)
  %38 = inttoptr i32 %add100 to ptr
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %38, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1758
  %41 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i352 = and i32 %41, -16384
  %42 = inttoptr i32 %and.i.i.i352 to ptr
  %preempt_count.i.i353 = getelementptr inbounds %struct.thread_info, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %preempt_count.i.i353 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %preempt_count.i.i353, align 4
  %sub.i354 = add i32 %44, -1
  store volatile i32 %sub.i354, ptr %preempt_count.i.i353, align 4
  %tobool107.not = icmp eq i32 %40, 0
  br i1 %tobool107.not, label %if.end146, label %land.rhs113

land.rhs113:                                      ; preds = %land.rhs
  %.b339 = load i1, ptr @rcu_force_quiescent_state.__already_done, align 1
  br i1 %.b339, label %if.end146, label %if.then120, !prof !1646

if.then120:                                       ; preds = %land.rhs113
  store i1 true, ptr @rcu_force_quiescent_state.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2705, i32 noundef 9, ptr noundef null) #24
  br label %if.end146

if.end146:                                        ; preds = %if.then120, %land.rhs113, %land.rhs, %land.lhs.true, %do.body44
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp_old.0.lcssa, i32 noundef %call26) #24
  br label %cleanup

do.end175:                                        ; preds = %do.body22
  %45 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %46 = or i16 %45, 2
  store volatile i16 %46, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %47 = load i32, ptr @debug_locks, align 4
  %tobool186.not = icmp eq i32 %47, 0
  br i1 %tobool186.not, label %if.end299, label %land.lhs.true187

land.lhs.true187:                                 ; preds = %do.end175
  %48 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i355 = and i32 %48, -16384
  %49 = inttoptr i32 %and.i.i.i355 to ptr
  %preempt_count.i.i356 = getelementptr inbounds %struct.thread_info, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %preempt_count.i.i356 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %preempt_count.i.i356, align 4
  %add.i357 = add i32 %51, 1
  store volatile i32 %add.i357, ptr %preempt_count.i.i356, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1759
  %52 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %cpu, align 4
  %arrayidx211 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %53
  %54 = ptrtoint ptr %arrayidx211 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %arrayidx211, align 4
  %add212 = add i32 %55, ptrtoint (ptr @lockdep_recursion to i32)
  %56 = inttoptr i32 %add212 to ptr
  %57 = ptrtoint ptr %56 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load volatile i32, ptr %56, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1760
  %59 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i358 = and i32 %59, -16384
  %60 = inttoptr i32 %and.i.i.i358 to ptr
  %preempt_count.i.i359 = getelementptr inbounds %struct.thread_info, ptr %60, i32 0, i32 1
  %61 = ptrtoint ptr %preempt_count.i.i359 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile i32, ptr %preempt_count.i.i359, align 4
  %sub.i360 = add i32 %62, -1
  store volatile i32 %sub.i360, ptr %preempt_count.i.i359, align 4
  %tobool219.not = icmp eq i32 %58, 0
  br i1 %tobool219.not, label %land.rhs220, label %if.end299

land.rhs220:                                      ; preds = %land.lhs.true187
  %63 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i361 = and i32 %63, -16384
  %64 = inttoptr i32 %and.i.i.i361 to ptr
  %preempt_count.i.i362 = getelementptr inbounds %struct.thread_info, ptr %64, i32 0, i32 1
  %65 = ptrtoint ptr %preempt_count.i.i362 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %preempt_count.i.i362, align 4
  %add.i363 = add i32 %66, 1
  store volatile i32 %add.i363, ptr %preempt_count.i.i362, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1761
  %67 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %cpu, align 4
  %arrayidx244 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %68
  %69 = ptrtoint ptr %arrayidx244 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %arrayidx244, align 4
  %add245 = add i32 %70, ptrtoint (ptr @hardirqs_enabled to i32)
  %71 = inttoptr i32 %add245 to ptr
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %71, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1762
  %74 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i364 = and i32 %74, -16384
  %75 = inttoptr i32 %and.i.i.i364 to ptr
  %preempt_count.i.i365 = getelementptr inbounds %struct.thread_info, ptr %75, i32 0, i32 1
  %76 = ptrtoint ptr %preempt_count.i.i365 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %preempt_count.i.i365, align 4
  %sub.i366 = add i32 %77, -1
  store volatile i32 %sub.i366, ptr %preempt_count.i.i365, align 4
  %tobool252.not = icmp eq i32 %73, 0
  br i1 %tobool252.not, label %if.end299, label %land.rhs261

land.rhs261:                                      ; preds = %land.rhs220
  %.b336338 = load i1, ptr @rcu_force_quiescent_state.__already_done.22, align 1
  br i1 %.b336338, label %if.end299, label %if.then272, !prof !1646

if.then272:                                       ; preds = %land.rhs261
  store i1 true, ptr @rcu_force_quiescent_state.__already_done.22, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2710, i32 noundef 9, ptr noundef null) #24
  br label %if.end299

if.end299:                                        ; preds = %if.then272, %land.rhs261, %land.rhs220, %land.lhs.true187, %do.end175
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp_old.0.lcssa, i32 noundef %call26) #24
  %78 = load volatile ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 8), align 4
  %79 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %79, -16384
  %80 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %80, i32 0, i32 2
  %81 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %task.i, align 8
  %cmp.i = icmp eq ptr %82, %78
  br i1 %cmp.i, label %land.lhs.true.i, label %do.end9.i

land.lhs.true.i:                                  ; preds = %if.end299
  %preempt_count.i.i367 = getelementptr inbounds %struct.thread_info, ptr %80, i32 0, i32 1
  %83 = ptrtoint ptr %preempt_count.i.i367 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load volatile i32, ptr %preempt_count.i.i367, align 4
  %and.i368 = and i32 %84, 983040
  %tobool.not.i = icmp eq i32 %and.i368, 0
  br i1 %tobool.not.i, label %land.lhs.true2.i, label %do.end9.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %85 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i37.i = and i32 %85, -16384
  %86 = inttoptr i32 %and.i.i37.i to ptr
  %preempt_count.i38.i = getelementptr inbounds %struct.thread_info, ptr %86, i32 0, i32 1
  %87 = ptrtoint ptr %preempt_count.i38.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load volatile i32, ptr %preempt_count.i38.i, align 4
  %and5.i = and i32 %88, 256
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  br i1 %tobool6.not.i, label %cleanup, label %do.end9.i

do.end9.i:                                        ; preds = %land.lhs.true2.i, %land.lhs.true.i, %if.end299
  %89 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %tobool11.not.i = icmp eq i16 %89, 0
  %tobool13.not.i = icmp eq ptr %78, null
  %or.cond.i = select i1 %tobool11.not.i, i1 true, i1 %tobool13.not.i
  br i1 %or.cond.i, label %cleanup, label %do.body18.i

do.body18.i:                                      ; preds = %do.end9.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %90 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %90, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 12), align 8
  %91 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  store volatile i32 %91, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 13), align 4
  tail call void @swake_up_one(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 9)) #24
  br label %cleanup

cleanup:                                          ; preds = %do.body18.i, %do.end9.i, %land.lhs.true2.i, %if.end146, %if.end
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_trylock(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @call_rcu(ptr noundef %head, ptr noundef %func) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %cur_gp_seq.i.i = alloca i32, align 4
  %0 = ptrtoint ptr %head to i32
  %and.i = and i32 %0, 3
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end28.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %entry
  %.b317.i = load i1, ptr @__call_rcu.__already_done, align 1
  br i1 %.b317.i, label %if.end28.i, label %if.then.i, !prof !1646

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @__call_rcu.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3008, i32 noundef 9, ptr noundef null) #24
  br label %if.end28.i

if.end28.i:                                       ; preds = %if.then.i, %land.rhs.i, %entry
  %call.i.i = tail call i32 @debug_object_activate(ptr noundef %head, ptr noundef nonnull @rcuhead_debug_descr) #24
  tail call void @debug_object_active_state(ptr noundef %head, ptr noundef nonnull @rcuhead_debug_descr, i32 noundef 0, i32 noundef 1) #24
  %tobool36.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool36.not.i, label %if.end57.i, label %if.then37.i

if.then37.i:                                      ; preds = %if.end28.i
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @__call_rcu.doublefrees, i32 noundef 4) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1654
  tail call void @llvm.prefetch.p0(ptr nonnull @__call_rcu.doublefrees, i32 1, i32 3, i32 1) #24
  %1 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @__call_rcu.doublefrees, ptr nonnull @__call_rcu.doublefrees, i32 1, ptr nonnull elementtype(i32) @__call_rcu.doublefrees) #24, !srcloc !1655
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %1, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1656
  %cmp.i = icmp slt i32 %asmresult.i.i.i.i.i, 4
  br i1 %cmp.i, label %do.end42.i, label %do.body51.i

do.end42.i:                                       ; preds = %if.then37.i
  %func44.i = getelementptr inbounds %struct.callback_head, ptr %head, i32 0, i32 1
  %2 = ptrtoint ptr %func44.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %func44.i, align 4
  %call45.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.138, ptr noundef nonnull @.str.139, ptr noundef %head, ptr noundef %3) #27
  tail call void @mem_dump_obj(ptr noundef %head) #24
  br label %do.body51.i

do.body51.i:                                      ; preds = %do.end42.i, %if.then37.i
  %func52.i = getelementptr inbounds %struct.callback_head, ptr %head, i32 0, i32 1
  %4 = ptrtoint ptr %func52.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr @rcu_leak_callback, ptr %func52.i, align 4
  br label %__call_rcu.exit

if.end57.i:                                       ; preds = %if.end28.i
  %func58.i = getelementptr inbounds %struct.callback_head, ptr %head, i32 0, i32 1
  %5 = ptrtoint ptr %func58.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %func, ptr %func58.i, align 4
  %6 = ptrtoint ptr %head to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %head, align 4
  %7 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i.i = and i32 %7, 128
  %tobool73.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool73.not.i, label %if.then74.i, label %do.end77.i

if.then74.i:                                      ; preds = %if.end57.i
  tail call void @trace_hardirqs_off() #24
  br label %do.end77.i

do.end77.i:                                       ; preds = %if.then74.i, %if.end57.i
  tail call void @kasan_record_aux_stack_noalloc(ptr noundef %head) #24
  %8 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i318.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i318.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %11
  %12 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %13, ptrtoint (ptr @rcu_data to i32)
  %14 = inttoptr i32 %add.i to ptr
  %cblist.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 13
  %flags1.i.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 13, i32 5
  %15 = ptrtoint ptr %flags1.i.i.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load volatile i8, ptr %flags1.i.i.i, align 4
  %17 = and i8 %16, 1
  %tobool.i.i.not.i = icmp eq i8 %17, 0
  br i1 %tobool.i.i.not.i, label %if.then93.i, label %if.end212.i, !prof !1645

if.then93.i:                                      ; preds = %do.end77.i
  %18 = load i32, ptr @rcu_scheduler_active, align 4
  %cmp95.not.i = icmp eq i32 %18, 0
  br i1 %cmp95.not.i, label %if.end142.i, label %land.rhs104.i

land.rhs104.i:                                    ; preds = %if.then93.i
  %.b313316.i = load i1, ptr @__call_rcu.__already_done.140, align 1
  br i1 %.b313316.i, label %if.end142.i, label %if.then115.i, !prof !1646

if.then115.i:                                     ; preds = %land.rhs104.i
  store i1 true, ptr @__call_rcu.__already_done.140, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3032, i32 noundef 9, ptr noundef null) #24
  br label %if.end142.i

if.end142.i:                                      ; preds = %if.then115.i, %land.rhs104.i, %if.then93.i
  %19 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i1 = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i.i.i1 to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i2 = add i32 %22, 1
  store volatile i32 %add.i.i2, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1689
  %23 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i3 = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i3 to ptr
  %cpu.i.i4 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 3
  %25 = ptrtoint ptr %cpu.i.i4 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cpu.i.i4, align 4
  %arrayidx.i.i5 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %26
  %27 = ptrtoint ptr %arrayidx.i.i5 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx.i.i5, align 4
  %add.i4.i = add i32 %28, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 21) to i32)
  %29 = inttoptr i32 %add.i4.i to ptr
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %29, align 4
  %and.i.i6 = and i32 %31, 1
  %tobool.not.i.i7.not = icmp eq i32 %and.i.i6, 0
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1690
  %32 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i5.i = and i32 %32, -16384
  %33 = inttoptr i32 %and.i.i.i5.i to ptr
  %preempt_count.i.i6.i = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %preempt_count.i.i6.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %preempt_count.i.i6.i, align 4
  %sub.i.i8 = add i32 %35, -1
  store volatile i32 %sub.i.i8, ptr %preempt_count.i.i6.i, align 4
  br i1 %tobool.not.i.i7.not, label %land.rhs161.i, label %if.end199.i

land.rhs161.i:                                    ; preds = %if.end142.i
  %.b314315.i = load i1, ptr @__call_rcu.__already_done.141, align 1
  br i1 %.b314315.i, label %if.end199.i, label %if.then172.i, !prof !1646

if.then172.i:                                     ; preds = %land.rhs161.i
  store i1 true, ptr @__call_rcu.__already_done.141, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3033, i32 noundef 9, ptr noundef null) #24
  br label %if.end199.i

if.end199.i:                                      ; preds = %if.then172.i, %land.rhs161.i, %if.end142.i
  %36 = ptrtoint ptr %cblist.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile ptr, ptr %cblist.i, align 4
  %tobool.not.i.i = icmp eq ptr %37, null
  br i1 %tobool.not.i.i, label %if.then209.i, label %if.end212.i

if.then209.i:                                     ; preds = %if.end199.i
  tail call void @rcu_segcblist_init(ptr noundef %cblist.i) #24
  br label %if.end212.i

if.end212.i:                                      ; preds = %if.then209.i, %if.end199.i, %do.end77.i
  %mynode.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 7
  %38 = ptrtoint ptr %mynode.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %mynode.i.i, align 16
  %40 = load i32, ptr @qovld_calc, align 4
  %cmp.i.i = icmp slt i32 %40, 1
  br i1 %cmp.i.i, label %check_cb_ovld.exit.i, label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %if.end212.i
  %len.i.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 13, i32 3
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %len.i.i.i, i32 noundef 4) #24
  %41 = ptrtoint ptr %len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %len.i.i.i, align 4
  %43 = load i32, ptr @qovld_calc, align 4
  %cmp1.i.i = icmp slt i32 %42, %43
  %cbovldmask.i.i = getelementptr inbounds %struct.rcu_node, ptr %39, i32 0, i32 12
  %44 = ptrtoint ptr %cbovldmask.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %cbovldmask.i.i, align 8
  %grpmask.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 8
  %46 = ptrtoint ptr %grpmask.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %grpmask.i.i, align 4
  %and.i319.i = and i32 %47, %45
  %tobool.i.i = icmp ne i32 %and.i319.i, 0
  %cmp3.i.i = xor i1 %cmp1.i.i, %tobool.i.i
  br i1 %cmp3.i.i, label %check_cb_ovld.exit.i, label %do.body5.i.i

do.body5.i.i:                                     ; preds = %lor.lhs.false.i.i
  tail call void @_raw_spin_lock(ptr noundef %39) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %48 = load i32, ptr @debug_locks, align 4
  %tobool.not.i.i.i = icmp eq i32 %48, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %land.rhs.i.i.i

land.rhs.i.i.i:                                   ; preds = %do.body5.i.i
  %dep_map.i.i.i = getelementptr inbounds %struct.raw_spinlock, ptr %39, i32 0, i32 4
  %call.i.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i.i.i, i32 noundef -1) #24
  %cmp.not.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %cmp.not.i.i.i, label %do.end.i.i.i, label %if.end.i.i.i, !prof !1645

do.end.i.i.i:                                     ; preds = %land.rhs.i.i.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2964, i32 noundef 9, ptr noundef null) #24
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %do.end.i.i.i, %land.rhs.i.i.i, %do.body5.i.i
  %49 = load i32, ptr @qovld_calc, align 4
  %cmp24.i.i.i = icmp slt i32 %49, 1
  br i1 %cmp24.i.i.i, label %check_cb_ovld_locked.exit.i.i, label %if.end26.i.i.i

if.end26.i.i.i:                                   ; preds = %if.end.i.i.i
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %len.i.i.i, i32 noundef 4) #24
  %50 = ptrtoint ptr %len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %len.i.i.i, align 4
  %52 = load i32, ptr @qovld_calc, align 4
  %cmp28.not.i.i.i = icmp slt i32 %51, %52
  %53 = ptrtoint ptr %cbovldmask.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %cbovldmask.i.i, align 8
  %55 = ptrtoint ptr %grpmask.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %grpmask.i.i, align 4
  %neg.i.i.i = xor i32 %56, -1
  %and.i.i.i = and i32 %54, %neg.i.i.i
  %or.i.i.i = or i32 %56, %54
  %and.sink.i.i.i = select i1 %cmp28.not.i.i.i, i32 %and.i.i.i, i32 %or.i.i.i
  store volatile i32 %and.sink.i.i.i, ptr %cbovldmask.i.i, align 8
  br label %check_cb_ovld_locked.exit.i.i

check_cb_ovld_locked.exit.i.i:                    ; preds = %if.end26.i.i.i, %if.end.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %57 = load i32, ptr @debug_locks, align 4
  %tobool13.not.i.i = icmp eq i32 %57, 0
  br i1 %tobool13.not.i.i, label %if.end112.i.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %check_cb_ovld_locked.exit.i.i
  %58 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i.i = and i32 %58, -16384
  %59 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %59, i32 0, i32 1
  %60 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %61, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1763
  %62 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i145.i.i = and i32 %62, -16384
  %63 = inttoptr i32 %and.i145.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %63, i32 0, i32 3
  %64 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %65
  %66 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %67, ptrtoint (ptr @lockdep_recursion to i32)
  %68 = inttoptr i32 %add.i.i to ptr
  %69 = ptrtoint ptr %68 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %68, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1764
  %71 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i137.i.i = and i32 %71, -16384
  %72 = inttoptr i32 %and.i.i.i137.i.i to ptr
  %preempt_count.i.i138.i.i = getelementptr inbounds %struct.thread_info, ptr %72, i32 0, i32 1
  %73 = ptrtoint ptr %preempt_count.i.i138.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load volatile i32, ptr %preempt_count.i.i138.i.i, align 4
  %sub.i.i.i = add i32 %74, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i138.i.i, align 4
  %tobool37.not.i.i = icmp eq i32 %70, 0
  br i1 %tobool37.not.i.i, label %land.rhs.i.i, label %if.end112.i.i

land.rhs.i.i:                                     ; preds = %land.lhs.true.i.i
  %75 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i139.i.i = and i32 %75, -16384
  %76 = inttoptr i32 %and.i.i.i139.i.i to ptr
  %preempt_count.i.i140.i.i = getelementptr inbounds %struct.thread_info, ptr %76, i32 0, i32 1
  %77 = ptrtoint ptr %preempt_count.i.i140.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile i32, ptr %preempt_count.i.i140.i.i, align 4
  %add.i141.i.i = add i32 %78, 1
  store volatile i32 %add.i141.i.i, ptr %preempt_count.i.i140.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1765
  %79 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %cpu.i.i, align 4
  %arrayidx61.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %80
  %81 = ptrtoint ptr %arrayidx61.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %arrayidx61.i.i, align 4
  %add62.i.i = add i32 %82, ptrtoint (ptr @hardirqs_enabled to i32)
  %83 = inttoptr i32 %add62.i.i to ptr
  %84 = ptrtoint ptr %83 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile i32, ptr %83, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1766
  %86 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i142.i.i = and i32 %86, -16384
  %87 = inttoptr i32 %and.i.i.i142.i.i to ptr
  %preempt_count.i.i143.i.i = getelementptr inbounds %struct.thread_info, ptr %87, i32 0, i32 1
  %88 = ptrtoint ptr %preempt_count.i.i143.i.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile i32, ptr %preempt_count.i.i143.i.i, align 4
  %sub.i144.i.i = add i32 %89, -1
  store volatile i32 %sub.i144.i.i, ptr %preempt_count.i.i143.i.i, align 4
  %tobool69.not.i.i = icmp eq i32 %85, 0
  br i1 %tobool69.not.i.i, label %if.end112.i.i, label %land.rhs76.i.i

land.rhs76.i.i:                                   ; preds = %land.rhs.i.i
  %.b133.i.i = load i1, ptr @check_cb_ovld.__already_done, align 1
  br i1 %.b133.i.i, label %if.end112.i.i, label %if.then86.i.i, !prof !1646

if.then86.i.i:                                    ; preds = %land.rhs76.i.i
  store i1 true, ptr @check_cb_ovld.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2995, i32 noundef 9, ptr noundef null) #24
  br label %if.end112.i.i

if.end112.i.i:                                    ; preds = %if.then86.i.i, %land.rhs76.i.i, %land.rhs.i.i, %land.lhs.true.i.i, %check_cb_ovld_locked.exit.i.i
  tail call void @_raw_spin_unlock(ptr noundef %39) #24
  br label %check_cb_ovld.exit.i

check_cb_ovld.exit.i:                             ; preds = %if.end112.i.i, %lor.lhs.false.i.i, %if.end212.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cur_gp_seq.i.i) #24
  %90 = ptrtoint ptr %cur_gp_seq.i.i to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 -1, ptr %cur_gp_seq.i.i, align 4, !annotation !1767
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %91 = load volatile i32, ptr @jiffies, align 128
  %nocb_bypass.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 38
  %len.i.i320.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 38, i32 2
  %92 = ptrtoint ptr %len.i.i320.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile i32, ptr %len.i.i320.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %94 = load i32, ptr @debug_locks, align 4
  %tobool.not.i321.i = icmp eq i32 %94, 0
  br i1 %tobool.not.i321.i, label %if.end87.i.i, label %land.lhs.true.i330.i

land.lhs.true.i330.i:                             ; preds = %check_cb_ovld.exit.i
  %95 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i322.i = and i32 %95, -16384
  %96 = inttoptr i32 %and.i.i.i.i322.i to ptr
  %preempt_count.i.i.i323.i = getelementptr inbounds %struct.thread_info, ptr %96, i32 0, i32 1
  %97 = ptrtoint ptr %preempt_count.i.i.i323.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load volatile i32, ptr %preempt_count.i.i.i323.i, align 4
  %add.i.i324.i = add i32 %98, 1
  store volatile i32 %add.i.i324.i, ptr %preempt_count.i.i.i323.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1768
  %99 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i325.i = and i32 %99, -16384
  %100 = inttoptr i32 %and.i.i325.i to ptr
  %cpu.i326.i = getelementptr inbounds %struct.thread_info, ptr %100, i32 0, i32 3
  %101 = ptrtoint ptr %cpu.i326.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %cpu.i326.i, align 4
  %arrayidx.i327.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %102
  %103 = ptrtoint ptr %arrayidx.i327.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %arrayidx.i327.i, align 4
  %add.i328.i = add i32 %104, ptrtoint (ptr @lockdep_recursion to i32)
  %105 = inttoptr i32 %add.i328.i to ptr
  %106 = ptrtoint ptr %105 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load volatile i32, ptr %105, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1769
  %108 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i591.i.i = and i32 %108, -16384
  %109 = inttoptr i32 %and.i.i.i591.i.i to ptr
  %preempt_count.i.i592.i.i = getelementptr inbounds %struct.thread_info, ptr %109, i32 0, i32 1
  %110 = ptrtoint ptr %preempt_count.i.i592.i.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load volatile i32, ptr %preempt_count.i.i592.i.i, align 4
  %sub.i.i329.i = add i32 %111, -1
  store volatile i32 %sub.i.i329.i, ptr %preempt_count.i.i592.i.i, align 4
  %tobool21.not.i.i = icmp eq i32 %107, 0
  br i1 %tobool21.not.i.i, label %land.rhs.i331.i, label %if.end87.i.i

land.rhs.i331.i:                                  ; preds = %land.lhs.true.i330.i
  %112 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i593.i.i = and i32 %112, -16384
  %113 = inttoptr i32 %and.i.i.i593.i.i to ptr
  %preempt_count.i.i594.i.i = getelementptr inbounds %struct.thread_info, ptr %113, i32 0, i32 1
  %114 = ptrtoint ptr %preempt_count.i.i594.i.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load volatile i32, ptr %preempt_count.i.i594.i.i, align 4
  %add.i595.i.i = add i32 %115, 1
  store volatile i32 %add.i595.i.i, ptr %preempt_count.i.i594.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1770
  %116 = ptrtoint ptr %cpu.i326.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %cpu.i326.i, align 4
  %arrayidx45.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %117
  %118 = ptrtoint ptr %arrayidx45.i.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %arrayidx45.i.i, align 4
  %add46.i.i = add i32 %119, ptrtoint (ptr @hardirqs_enabled to i32)
  %120 = inttoptr i32 %add46.i.i to ptr
  %121 = ptrtoint ptr %120 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load volatile i32, ptr %120, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1771
  %123 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i596.i.i = and i32 %123, -16384
  %124 = inttoptr i32 %and.i.i.i596.i.i to ptr
  %preempt_count.i.i597.i.i = getelementptr inbounds %struct.thread_info, ptr %124, i32 0, i32 1
  %125 = ptrtoint ptr %preempt_count.i.i597.i.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load volatile i32, ptr %preempt_count.i.i597.i.i, align 4
  %sub.i598.i.i = add i32 %126, -1
  store volatile i32 %sub.i598.i.i, ptr %preempt_count.i.i597.i.i, align 4
  %tobool53.not.i.i = icmp eq i32 %122, 0
  br i1 %tobool53.not.i.i, label %if.end87.i.i, label %land.rhs56.i.i

land.rhs56.i.i:                                   ; preds = %land.rhs.i331.i
  %.b587.i.i = load i1, ptr @rcu_nocb_try_bypass.__already_done, align 1
  br i1 %.b587.i.i, label %if.end87.i.i, label %if.then.i.i, !prof !1646

if.then.i.i:                                      ; preds = %land.rhs56.i.i
  store i1 true, ptr @rcu_nocb_try_bypass.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 388, i32 noundef 9, ptr noundef null) #24
  br label %if.end87.i.i

if.end87.i.i:                                     ; preds = %if.then.i.i, %land.rhs56.i.i, %land.rhs.i331.i, %land.lhs.true.i330.i, %check_cb_ovld.exit.i
  %call97.i.i = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %14) #24
  br i1 %call97.i.i, label %if.end103.i.i, label %if.then98.i.i

if.then98.i.i:                                    ; preds = %if.end87.i.i
  %call99.i.i = tail call zeroext i1 @rcu_segcblist_pend_cbs(ptr noundef %cblist.i) #24
  br label %if.end215.i

if.end103.i.i:                                    ; preds = %if.end87.i.i
  %127 = ptrtoint ptr %flags1.i.i.i to i32
  call void @__asan_load1_noabort(i32 %127)
  %128 = load volatile i8, ptr %flags1.i.i.i, align 4
  %129 = and i8 %128, 2
  %tobool.i.not.i.i.i = icmp eq i8 %129, 0
  br i1 %tobool.i.not.i.i.i, label %if.end112.i332.i, label %if.then106.i.i

if.then106.i.i:                                   ; preds = %if.end103.i.i
  tail call fastcc void @rcu_nocb_lock(ptr noundef %14) #24
  %call108.i.i = tail call zeroext i1 @rcu_segcblist_pend_cbs(ptr noundef %cblist.i) #24
  br label %if.end215.i

if.end112.i332.i:                                 ; preds = %if.end103.i.i
  %130 = load i32, ptr @rcu_scheduler_active, align 4
  %cmp.not.i.i = icmp eq i32 %130, 2
  br i1 %cmp.not.i.i, label %if.end175.i.i, label %if.then113.i.i

if.then113.i.i:                                   ; preds = %if.end112.i332.i
  tail call fastcc void @rcu_nocb_lock(ptr noundef %14) #24
  %131 = ptrtoint ptr %len.i.i320.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load volatile i32, ptr %len.i.i320.i, align 4
  %tobool117.not.i.i = icmp eq i32 %132, 0
  br i1 %tobool117.not.i.i, label %if.end162.i.i, label %land.rhs124.i.i

land.rhs124.i.i:                                  ; preds = %if.then113.i.i
  %.b579586.i.i = load i1, ptr @rcu_nocb_try_bypass.__already_done.143, align 1
  br i1 %.b579586.i.i, label %if.end162.i.i, label %if.then135.i.i, !prof !1646

if.then135.i.i:                                   ; preds = %land.rhs124.i.i
  store i1 true, ptr @rcu_nocb_try_bypass.__already_done.143, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 408, i32 noundef 9, ptr noundef null) #24
  br label %if.end162.i.i

if.end162.i.i:                                    ; preds = %if.then135.i.i, %land.rhs124.i.i, %if.then113.i.i
  %call171.i.i = tail call zeroext i1 @rcu_segcblist_pend_cbs(ptr noundef %cblist.i) #24
  br label %if.end215.i

if.end175.i.i:                                    ; preds = %if.end112.i332.i
  %nocb_nobypass_last.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 40
  %133 = ptrtoint ptr %nocb_nobypass_last.i.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %nocb_nobypass_last.i.i, align 4
  %cmp176.i.i = icmp eq i32 %91, %134
  br i1 %cmp176.i.i, label %if.then177.i.i, label %do.body183.i.i

if.then177.i.i:                                   ; preds = %if.end175.i.i
  %nocb_nobypass_count.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 41
  %135 = ptrtoint ptr %nocb_nobypass_count.i.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %nocb_nobypass_count.i.i, align 64
  %add178.i.i = add i32 %136, 1
  br label %do.body204.i.i

do.body183.i.i:                                   ; preds = %if.end175.i.i
  %137 = ptrtoint ptr %nocb_nobypass_last.i.i to i32
  call void @__asan_store4_noabort(i32 %137)
  store volatile i32 %91, ptr %nocb_nobypass_last.i.i, align 4
  %nocb_nobypass_count189.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 41
  %138 = ptrtoint ptr %nocb_nobypass_count189.i.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %nocb_nobypass_count189.i.i, align 64
  %140 = load i32, ptr @nocb_nobypass_lim_per_jiffy, align 4
  %sub.i.i = sub i32 %139, %140
  %cmp192.i.i = icmp slt i32 %sub.i.i, 0
  %141 = tail call i32 @llvm.umin.i32(i32 %sub.i.i, i32 %140) #24
  %spec.select.i.i = select i1 %cmp192.i.i, i32 0, i32 %141
  br label %do.body204.i.i

do.body204.i.i:                                   ; preds = %do.body183.i.i, %if.then177.i.i
  %c.0.i.i = phi i32 [ %add178.i.i, %if.then177.i.i ], [ %spec.select.i.i, %do.body183.i.i ]
  %nocb_nobypass_count205.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 41
  %142 = ptrtoint ptr %nocb_nobypass_count205.i.i to i32
  call void @__asan_store4_noabort(i32 %142)
  store volatile i32 %c.0.i.i, ptr %nocb_nobypass_count205.i.i, align 64
  %143 = load i32, ptr @nocb_nobypass_lim_per_jiffy, align 4
  %cmp211.i.i = icmp slt i32 %c.0.i.i, %143
  br i1 %cmp211.i.i, label %if.then212.i.i, label %if.end335.i.i

if.then212.i.i:                                   ; preds = %do.body204.i.i
  tail call fastcc void @rcu_nocb_lock(ptr noundef %14) #24
  %call214.i.i = tail call zeroext i1 @rcu_segcblist_pend_cbs(ptr noundef %cblist.i) #24
  br i1 %call214.i.i, label %if.end222.i.i, label %if.then219.i.i

if.then219.i.i:                                   ; preds = %if.then212.i.i
  %144 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %cpu220.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 68
  %145 = ptrtoint ptr %cpu220.i.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %cpu220.i.i, align 64
  %147 = load ptr, ptr @rcu_nocb_try_bypass.___tp_str, align 4
  tail call fastcc void @trace_rcu_nocb_wake(ptr noundef %144, i32 noundef %146, ptr noundef %147) #24
  br label %if.end222.i.i

if.end222.i.i:                                    ; preds = %if.then219.i.i, %if.then212.i.i
  %call.i.i333.i = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %14) #24
  br i1 %call.i.i333.i, label %rcu_nocb_flush_bypass.exit.i.i, label %if.end271.i.i

rcu_nocb_flush_bypass.exit.i.i:                   ; preds = %if.end222.i.i
  tail call fastcc void @rcu_lockdep_assert_cblist_protected(ptr noundef %14) #24
  tail call fastcc void @rcu_nocb_bypass_lock(ptr noundef %14) #24
  %call1.i.i.i = tail call fastcc zeroext i1 @rcu_nocb_do_flush_bypass(ptr noundef %14, ptr noundef null, i32 noundef %91) #24
  br i1 %call1.i.i.i, label %if.end271.i.i, label %land.rhs233.i.i

land.rhs233.i.i:                                  ; preds = %rcu_nocb_flush_bypass.exit.i.i
  %.b580585.i.i = load i1, ptr @rcu_nocb_try_bypass.__already_done.145, align 1
  br i1 %.b580585.i.i, label %if.end271.i.i, label %if.then244.i.i, !prof !1646

if.then244.i.i:                                   ; preds = %land.rhs233.i.i
  store i1 true, ptr @rcu_nocb_try_bypass.__already_done.145, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 437, i32 noundef 9, ptr noundef null) #24
  br label %if.end271.i.i

if.end271.i.i:                                    ; preds = %if.then244.i.i, %land.rhs233.i.i, %rcu_nocb_flush_bypass.exit.i.i, %if.end222.i.i
  %148 = ptrtoint ptr %len.i.i320.i to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load volatile i32, ptr %len.i.i320.i, align 4
  %tobool282.not.i.i = icmp eq i32 %149, 0
  br i1 %tobool282.not.i.i, label %if.end215.i, label %land.rhs289.i.i

land.rhs289.i.i:                                  ; preds = %if.end271.i.i
  %.b581584.i.i = load i1, ptr @rcu_nocb_try_bypass.__already_done.146, align 1
  br i1 %.b581584.i.i, label %if.end215.i, label %if.then300.i.i, !prof !1646

if.then300.i.i:                                   ; preds = %land.rhs289.i.i
  store i1 true, ptr @rcu_nocb_try_bypass.__already_done.146, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 438, i32 noundef 9, ptr noundef null) #24
  br label %if.end215.i

if.end335.i.i:                                    ; preds = %do.body204.i.i
  %tobool336.not.i.i = icmp eq i32 %93, 0
  br i1 %tobool336.not.i.i, label %lor.lhs.false.i334.i, label %land.lhs.true337.i.i

land.lhs.true337.i.i:                             ; preds = %if.end335.i.i
  %nocb_bypass_first.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 39
  %150 = ptrtoint ptr %nocb_bypass_first.i.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load volatile i32, ptr %nocb_bypass_first.i.i, align 8
  %cmp342.not.i.i = icmp eq i32 %91, %151
  br i1 %cmp342.not.i.i, label %lor.lhs.false.i334.i, label %if.then344.i.i

lor.lhs.false.i334.i:                             ; preds = %land.lhs.true337.i.i, %if.end335.i.i
  %152 = load i32, ptr @qhimark, align 4
  %cmp343.not.i.i = icmp slt i32 %93, %152
  br i1 %cmp343.not.i.i, label %if.end424.i.i, label %if.then344.i.i

if.then344.i.i:                                   ; preds = %lor.lhs.false.i334.i, %land.lhs.true337.i.i
  tail call fastcc void @rcu_nocb_lock(ptr noundef %14) #24
  %call.i601.i.i = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %14) #24
  br i1 %call.i601.i.i, label %rcu_nocb_flush_bypass.exit605.i.i, label %if.end413.i.i

rcu_nocb_flush_bypass.exit605.i.i:                ; preds = %if.then344.i.i
  tail call fastcc void @rcu_lockdep_assert_cblist_protected(ptr noundef %14) #24
  tail call fastcc void @rcu_nocb_bypass_lock(ptr noundef %14) #24
  %call1.i602.i.i = tail call fastcc zeroext i1 @rcu_nocb_do_flush_bypass(ptr noundef %14, ptr noundef %head, i32 noundef %91) #24
  br i1 %call1.i602.i.i, label %if.end413.i.i, label %if.then346.i.i

if.then346.i.i:                                   ; preds = %rcu_nocb_flush_bypass.exit605.i.i
  %call348.i.i = tail call zeroext i1 @rcu_segcblist_pend_cbs(ptr noundef %cblist.i) #24
  br i1 %call348.i.i, label %if.end356.i.i, label %if.then353.i.i

if.then353.i.i:                                   ; preds = %if.then346.i.i
  %153 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %cpu354.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 68
  %154 = ptrtoint ptr %cpu354.i.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %cpu354.i.i, align 64
  %156 = load ptr, ptr @rcu_nocb_try_bypass.___tp_str.147, align 4
  tail call fastcc void @trace_rcu_nocb_wake(ptr noundef %153, i32 noundef %155, ptr noundef %156) #24
  br label %if.end356.i.i

if.end356.i.i:                                    ; preds = %if.then353.i.i, %if.then346.i.i
  %157 = ptrtoint ptr %len.i.i320.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load volatile i32, ptr %len.i.i320.i, align 4
  %tobool360.not.i.i = icmp eq i32 %158, 0
  br i1 %tobool360.not.i.i, label %if.end215.i, label %land.rhs367.i.i

land.rhs367.i.i:                                  ; preds = %if.end356.i.i
  %.b582583.i.i = load i1, ptr @rcu_nocb_try_bypass.__already_done.148, align 1
  br i1 %.b582583.i.i, label %if.end215.i, label %if.then378.i.i, !prof !1646

if.then378.i.i:                                   ; preds = %land.rhs367.i.i
  store i1 true, ptr @rcu_nocb_try_bypass.__already_done.148, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 452, i32 noundef 9, ptr noundef null) #24
  br label %if.end215.i

if.end413.i.i:                                    ; preds = %rcu_nocb_flush_bypass.exit605.i.i, %if.then344.i.i
  %nocb_gp_adv_time.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 35
  %159 = ptrtoint ptr %nocb_gp_adv_time.i.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load i32, ptr %nocb_gp_adv_time.i.i, align 8
  %cmp414.not.i.i = icmp eq i32 %91, %160
  br i1 %cmp414.not.i.i, label %if.end423.i.i, label %land.lhs.true415.i.i

land.lhs.true415.i.i:                             ; preds = %if.end413.i.i
  %call417.i.i = call zeroext i1 @rcu_segcblist_nextgp(ptr noundef %cblist.i, ptr noundef nonnull %cur_gp_seq.i.i) #24
  br i1 %call417.i.i, label %land.lhs.true418.i.i, label %if.end423.i.i

land.lhs.true418.i.i:                             ; preds = %land.lhs.true415.i.i
  %161 = ptrtoint ptr %mynode.i.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load ptr, ptr %mynode.i.i, align 16
  %gp_seq.i.i = getelementptr inbounds %struct.rcu_node, ptr %162, i32 0, i32 1
  %163 = ptrtoint ptr %cur_gp_seq.i.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load i32, ptr %cur_gp_seq.i.i, align 4
  %165 = ptrtoint ptr %gp_seq.i.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load volatile i32, ptr %gp_seq.i.i, align 4
  %sub.i607.i.i = sub i32 %166, %164
  %cmp.i.i.i = icmp sgt i32 %sub.i607.i.i, -1
  br i1 %cmp.i.i.i, label %if.then420.i.i, label %if.end423.i.i

if.then420.i.i:                                   ; preds = %land.lhs.true418.i.i
  call fastcc void @rcu_advance_cbs_nowake(ptr noundef %162, ptr noundef %14) #24
  %167 = ptrtoint ptr %nocb_gp_adv_time.i.i to i32
  call void @__asan_store4_noabort(i32 %167)
  store i32 %91, ptr %nocb_gp_adv_time.i.i, align 8
  br label %if.end423.i.i

if.end423.i.i:                                    ; preds = %if.then420.i.i, %land.lhs.true418.i.i, %land.lhs.true415.i.i, %if.end413.i.i
  call fastcc void @rcu_nocb_unlock_irqrestore(ptr noundef %14, i32 noundef %7) #24
  br label %rcu_nocb_try_bypass.exit.i

if.end424.i.i:                                    ; preds = %lor.lhs.false.i334.i
  %168 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %168, -16384
  %169 = inttoptr i32 %and.i.i.i.i to ptr
  %cpu.i.i.i = getelementptr inbounds %struct.thread_info, ptr %169, i32 0, i32 3
  %170 = ptrtoint ptr %cpu.i.i.i to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %cpu.i.i.i, align 4
  %cpu1.i.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 68
  %172 = ptrtoint ptr %cpu1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %cpu1.i.i.i, align 64
  %cmp.not.i.i336.i = icmp eq i32 %171, %173
  br i1 %cmp.not.i.i336.i, label %if.end28.i.i.i, label %land.rhs.i.i337.i

land.rhs.i.i337.i:                                ; preds = %if.end424.i.i
  %.b108.i.i.i = load i1, ptr @rcu_nocb_wait_contended.__already_done, align 1
  br i1 %.b108.i.i.i, label %if.end28.i.i.i, label %if.then.i.i.i, !prof !1646

if.then.i.i.i:                                    ; preds = %land.rhs.i.i337.i
  store i1 true, ptr @rcu_nocb_wait_contended.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 126, i32 noundef 9, ptr noundef null) #24
  br label %if.end28.i.i.i

if.end28.i.i.i:                                   ; preds = %if.then.i.i.i, %land.rhs.i.i337.i, %if.end424.i.i
  %nocb_lock_contended.i.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 32
  %call.i.i110.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %nocb_lock_contended.i.i.i, i32 noundef 4) #24
  %174 = ptrtoint ptr %nocb_lock_contended.i.i.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load volatile i32, ptr %nocb_lock_contended.i.i.i, align 4
  %tobool38.not111.i.i.i = icmp eq i32 %175, 0
  br i1 %tobool38.not111.i.i.i, label %rcu_nocb_wait_contended.exit.i.i, label %land.rhs45.i.i.i

land.rhs45.i.i.i:                                 ; preds = %do.end96.i.i.i, %if.end28.i.i.i
  %.b106107.i.i.i = load i1, ptr @rcu_nocb_wait_contended.__already_done.156, align 1
  br i1 %.b106107.i.i.i, label %do.end96.i.i.i, label %if.then56.i.i.i, !prof !1646

if.then56.i.i.i:                                  ; preds = %land.rhs45.i.i.i
  store i1 true, ptr @rcu_nocb_wait_contended.__already_done.156, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 127, i32 noundef 9, ptr noundef null) #24
  br label %do.end96.i.i.i

do.end96.i.i.i:                                   ; preds = %if.then56.i.i.i, %land.rhs45.i.i.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1772
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #24, !srcloc !1773
  %call.i.i.i.i338.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %nocb_lock_contended.i.i.i, i32 noundef 4) #24
  %176 = ptrtoint ptr %nocb_lock_contended.i.i.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load volatile i32, ptr %nocb_lock_contended.i.i.i, align 4
  %tobool38.not.i.i.i = icmp eq i32 %177, 0
  br i1 %tobool38.not.i.i.i, label %rcu_nocb_wait_contended.exit.i.i, label %land.rhs45.i.i.i

rcu_nocb_wait_contended.exit.i.i:                 ; preds = %do.end96.i.i.i, %if.end28.i.i.i
  tail call fastcc void @rcu_nocb_bypass_lock(ptr noundef %14) #24
  %178 = ptrtoint ptr %len.i.i320.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load volatile i32, ptr %len.i.i320.i, align 4
  tail call void @rcu_segcblist_inc_len(ptr noundef %cblist.i) #24
  tail call void @rcu_cblist_enqueue(ptr noundef %nocb_bypass.i.i, ptr noundef %head) #24
  %tobool429.not.i.i = icmp eq i32 %179, 0
  br i1 %tobool429.not.i.i, label %do.body435.i.i, label %do.body452.critedge.i.i

do.body435.i.i:                                   ; preds = %rcu_nocb_wait_contended.exit.i.i
  %nocb_bypass_first436.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 39
  %180 = ptrtoint ptr %nocb_bypass_first436.i.i to i32
  call void @__asan_store4_noabort(i32 %180)
  store volatile i32 %91, ptr %nocb_bypass_first436.i.i, align 8
  %181 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %182 = ptrtoint ptr %cpu1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %cpu1.i.i.i, align 64
  %184 = load ptr, ptr @rcu_nocb_try_bypass.___tp_str.149, align 4
  tail call fastcc void @trace_rcu_nocb_wake(ptr noundef %181, i32 noundef %183, ptr noundef %184) #24
  tail call fastcc void @rcu_nocb_bypass_unlock(ptr noundef %14) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1774
  tail call fastcc void @rcu_nocb_lock(ptr noundef %14) #24
  %call487.i.i = tail call zeroext i1 @rcu_segcblist_pend_cbs(ptr noundef %cblist.i) #24
  %185 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %186 = ptrtoint ptr %cpu1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %cpu1.i.i.i, align 64
  br i1 %call487.i.i, label %if.else491.i.i, label %if.then488.i.i

do.body452.critedge.i.i:                          ; preds = %rcu_nocb_wait_contended.exit.i.i
  tail call fastcc void @rcu_nocb_bypass_unlock(ptr noundef %14) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1774
  br i1 %tobool73.not.i, label %if.then458.i.i, label %do.body460.i.i

if.then458.i.i:                                   ; preds = %do.body452.critedge.i.i
  tail call void @trace_hardirqs_on() #24
  br label %do.body460.i.i

do.body460.i.i:                                   ; preds = %if.then458.i.i, %do.body452.critedge.i.i
  %188 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #24, !srcloc !1649
  %and.i.i610.i.i = and i32 %188, 128
  %tobool468.not.i.i = icmp eq i32 %and.i.i610.i.i, 0
  br i1 %tobool468.not.i.i, label %if.then477.i.i, label %do.end480.i.i, !prof !1645

if.then477.i.i:                                   ; preds = %do.body460.i.i
  tail call void @warn_bogus_irq_restore() #24
  br label %do.end480.i.i

do.end480.i.i:                                    ; preds = %if.then477.i.i, %do.body460.i.i
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %7) #24, !srcloc !1679
  br label %rcu_nocb_try_bypass.exit.i

if.then488.i.i:                                   ; preds = %do.body435.i.i
  %189 = load ptr, ptr @rcu_nocb_try_bypass.___tp_str.151, align 4
  tail call fastcc void @trace_rcu_nocb_wake(ptr noundef %185, i32 noundef %187, ptr noundef %189) #24
  tail call fastcc void @__call_rcu_nocb_wake(ptr noundef %14, i1 noundef zeroext true, i32 noundef %7) #24
  br label %rcu_nocb_try_bypass.exit.i

if.else491.i.i:                                   ; preds = %do.body435.i.i
  %190 = load ptr, ptr @rcu_nocb_try_bypass.___tp_str.153, align 4
  tail call fastcc void @trace_rcu_nocb_wake(ptr noundef %185, i32 noundef %187, ptr noundef %190) #24
  tail call fastcc void @rcu_nocb_unlock_irqrestore(ptr noundef %14, i32 noundef %7) #24
  br label %rcu_nocb_try_bypass.exit.i

rcu_nocb_try_bypass.exit.i:                       ; preds = %if.else491.i.i, %if.then488.i.i, %do.end480.i.i, %if.end423.i.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cur_gp_seq.i.i) #24
  br label %__call_rcu.exit

if.end215.i:                                      ; preds = %if.then378.i.i, %land.rhs367.i.i, %if.end356.i.i, %if.then300.i.i, %land.rhs289.i.i, %if.end271.i.i, %if.end162.i.i, %if.then106.i.i, %if.then98.i.i
  %was_alldone.0.ph.in.in.i = phi i1 [ %call99.i.i, %if.then98.i.i ], [ %call108.i.i, %if.then106.i.i ], [ %call171.i.i, %if.end162.i.i ], [ %call348.i.i, %if.then378.i.i ], [ %call348.i.i, %land.rhs367.i.i ], [ %call348.i.i, %if.end356.i.i ], [ %call214.i.i, %if.then300.i.i ], [ %call214.i.i, %land.rhs289.i.i ], [ %call214.i.i, %if.end271.i.i ]
  %was_alldone.0.ph.in.i = xor i1 %was_alldone.0.ph.in.in.i, true
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cur_gp_seq.i.i) #24
  tail call void @rcu_segcblist_enqueue(ptr noundef %cblist.i, ptr noundef %head) #24
  %cmp217.i = icmp ult ptr %func, inttoptr (i32 4096 to ptr)
  br i1 %cmp217.i, label %if.then219.i, label %if.else.i

if.then219.i:                                     ; preds = %if.end215.i
  %191 = ptrtoint ptr %func to i32
  %192 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %len.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 13, i32 3
  %call.i.i.i339.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %len.i.i, i32 noundef 4) #24
  %193 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load volatile i32, ptr %len.i.i, align 4
  tail call fastcc void @trace_rcu_kvfree_callback(ptr noundef %192, ptr noundef %head, i32 noundef %191, i32 noundef %194) #24
  br label %if.end224.i

if.else.i:                                        ; preds = %if.end215.i
  %195 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %len.i340.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 13, i32 3
  %call.i.i.i341.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %len.i340.i, i32 noundef 4) #24
  %196 = ptrtoint ptr %len.i340.i to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load volatile i32, ptr %len.i340.i, align 4
  tail call fastcc void @trace_rcu_callback(ptr noundef %195, ptr noundef %head, i32 noundef %197) #24
  br label %if.end224.i

if.end224.i:                                      ; preds = %if.else.i, %if.then219.i
  %198 = load ptr, ptr @__call_rcu.___tp_str, align 4
  tail call fastcc void @trace_rcu_segcb_stats(ptr noundef %cblist.i, ptr noundef %198) #24
  %call227.i = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %14) #24
  br i1 %call227.i, label %if.then234.i, label %if.else236.i, !prof !1645

if.then234.i:                                     ; preds = %if.end224.i
  tail call fastcc void @__call_rcu_nocb_wake(ptr noundef %14, i1 noundef zeroext %was_alldone.0.ph.in.i, i32 noundef %7) #24
  br label %__call_rcu.exit

if.else236.i:                                     ; preds = %if.end224.i
  %199 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i.i.i = and i32 %199, -16384
  %200 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %200, i32 0, i32 1
  %201 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %202, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1689
  %203 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i342.i = and i32 %203, -16384
  %204 = inttoptr i32 %and.i.i.i.i342.i to ptr
  %cpu.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %204, i32 0, i32 3
  %205 = ptrtoint ptr %cpu.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load i32, ptr %cpu.i.i.i.i, align 4
  %arrayidx.i.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %206
  %207 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load i32, ptr %arrayidx.i.i.i.i, align 4
  %add.i4.i.i.i = add i32 %208, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 21) to i32)
  %209 = inttoptr i32 %add.i4.i.i.i to ptr
  %210 = ptrtoint ptr %209 to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load volatile i32, ptr %209, align 4
  %and.i.i.i343.i = and i32 %211, 1
  %tobool.not.i.i.not.i.i = icmp eq i32 %and.i.i.i343.i, 0
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1690
  %212 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i5.i.i.i = and i32 %212, -16384
  %213 = inttoptr i32 %and.i.i.i5.i.i.i to ptr
  %preempt_count.i.i6.i.i.i = getelementptr inbounds %struct.thread_info, ptr %213, i32 0, i32 1
  %214 = ptrtoint ptr %preempt_count.i.i6.i.i.i to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load volatile i32, ptr %preempt_count.i.i6.i.i.i, align 4
  %sub.i.i.i.i = add i32 %215, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i6.i.i.i, align 4
  br i1 %tobool.not.i.i.not.i.i, label %if.then.i344.i, label %if.end.i.i

if.then.i344.i:                                   ; preds = %if.else236.i
  tail call fastcc void @invoke_rcu_core() #24
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i344.i, %if.else236.i
  br i1 %tobool73.not.i, label %lor.lhs.false.i348.i, label %do.body248.i

lor.lhs.false.i348.i:                             ; preds = %if.end.i.i
  %216 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i51.i.i = and i32 %216, -16384
  %217 = inttoptr i32 %and.i51.i.i to ptr
  %cpu.i347.i = getelementptr inbounds %struct.thread_info, ptr %217, i32 0, i32 3
  %218 = ptrtoint ptr %cpu.i347.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load i32, ptr %cpu.i347.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %220 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i.i.i = icmp ugt i32 %220, %219
  br i1 %cmp.not.i.i.i.i.i.i, label %cpu_online.exit.i.i, label %land.rhs.i.i.i.i.i.i

land.rhs.i.i.i.i.i.i:                             ; preds = %lor.lhs.false.i348.i
  %.b37.i.i.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i.i.i, label %cpu_online.exit.i.i, label %if.then.i.i.i.i.i.i, !prof !1646

if.then.i.i.i.i.i.i:                              ; preds = %land.rhs.i.i.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit.i.i

cpu_online.exit.i.i:                              ; preds = %if.then.i.i.i.i.i.i, %land.rhs.i.i.i.i.i.i, %lor.lhs.false.i348.i
  %div3.i.i.i.i.i = lshr i32 %219, 5
  %arrayidx.i.i.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i.i.i
  %221 = ptrtoint ptr %arrayidx.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load volatile i32, ptr %arrayidx.i.i.i.i.i, align 4
  %and.i.i.i52.i.i = and i32 %219, 31
  %223 = shl nuw i32 1, %and.i.i.i52.i.i
  %224 = and i32 %222, %223
  %tobool.i.not.i.i = icmp eq i32 %224, 0
  br i1 %tobool.i.not.i.i, label %if.then246.i, label %if.end9.i.i, !prof !1645

if.end9.i.i:                                      ; preds = %cpu_online.exit.i.i
  %len.i.i349.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 13, i32 3
  %call.i.i.i.i350.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %len.i.i349.i, i32 noundef 4) #24
  %225 = ptrtoint ptr %len.i.i349.i to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load volatile i32, ptr %len.i.i349.i, align 4
  %qlen_last_fqs_check.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 14
  %227 = ptrtoint ptr %qlen_last_fqs_check.i.i to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load i32, ptr %qlen_last_fqs_check.i.i, align 8
  %229 = load i32, ptr @qhimark, align 4
  %add.i351.i = add i32 %229, %228
  %cmp11.i.i = icmp sgt i32 %226, %add.i351.i
  br i1 %cmp11.i.i, label %if.then19.i.i, label %if.then246.i, !prof !1645

if.then19.i.i:                                    ; preds = %if.end9.i.i
  tail call fastcc void @note_gp_changes(ptr noundef %14) #24
  %230 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %and.i.i53.i.i = and i32 %230, 3
  %tobool21.not.i352.i = icmp eq i32 %and.i.i53.i.i, 0
  br i1 %tobool21.not.i352.i, label %if.then22.i.i, label %if.else.i.i

if.then22.i.i:                                    ; preds = %if.then19.i.i
  %231 = ptrtoint ptr %mynode.i.i to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load ptr, ptr %mynode.i.i, align 16
  tail call fastcc void @rcu_accelerate_cbs_unlocked(ptr noundef %232, ptr noundef %14) #24
  br label %if.then246.i

if.else.i.i:                                      ; preds = %if.then19.i.i
  %blimit.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 17
  %233 = ptrtoint ptr %blimit.i.i to i32
  call void @__asan_store4_noabort(i32 %233)
  store i32 10000, ptr %blimit.i.i, align 4
  %234 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 28), align 16
  %n_force_qs_snap.i.i = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 16
  %235 = ptrtoint ptr %n_force_qs_snap.i.i to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load i32, ptr %n_force_qs_snap.i.i, align 32
  %cmp24.i.i = icmp eq i32 %234, %236
  br i1 %cmp24.i.i, label %land.lhs.true.i354.i, label %do.end33.i.i

land.lhs.true.i354.i:                             ; preds = %if.else.i.i
  %call27.i.i = tail call ptr @rcu_segcblist_first_pend_cb(ptr noundef %cblist.i) #24
  %cmp28.not.i.i = icmp eq ptr %call27.i.i, %head
  br i1 %cmp28.not.i.i, label %do.end33.i.i, label %if.then30.i.i

if.then30.i.i:                                    ; preds = %land.lhs.true.i354.i
  tail call void @rcu_force_quiescent_state() #24
  br label %do.end33.i.i

do.end33.i.i:                                     ; preds = %if.then30.i.i, %land.lhs.true.i354.i, %if.else.i.i
  %237 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 28), align 16
  %238 = ptrtoint ptr %n_force_qs_snap.i.i to i32
  call void @__asan_store4_noabort(i32 %238)
  store i32 %237, ptr %n_force_qs_snap.i.i, align 32
  %call.i.i.i55.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %len.i.i349.i, i32 noundef 4) #24
  %239 = ptrtoint ptr %len.i.i349.i to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load volatile i32, ptr %len.i.i349.i, align 4
  %241 = ptrtoint ptr %qlen_last_fqs_check.i.i to i32
  call void @__asan_store4_noabort(i32 %241)
  store i32 %240, ptr %qlen_last_fqs_check.i.i, align 8
  br label %if.then246.i

if.then246.i:                                     ; preds = %do.end33.i.i, %if.then22.i.i, %if.end9.i.i, %cpu_online.exit.i.i
  tail call void @trace_hardirqs_on() #24
  br label %do.body248.i

do.body248.i:                                     ; preds = %if.then246.i, %if.end.i.i
  %242 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #24, !srcloc !1649
  %and.i.i356.i = and i32 %242, 128
  %tobool256.not.i = icmp eq i32 %and.i.i356.i, 0
  br i1 %tobool256.not.i, label %if.then265.i, label %do.end268.i, !prof !1645

if.then265.i:                                     ; preds = %do.body248.i
  tail call void @warn_bogus_irq_restore() #24
  br label %do.end268.i

do.end268.i:                                      ; preds = %if.then265.i, %do.body248.i
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %7) #24, !srcloc !1679
  br label %__call_rcu.exit

__call_rcu.exit:                                  ; preds = %do.end268.i, %if.then234.i, %rcu_nocb_try_bypass.exit.i, %do.body51.i
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @kvfree_call_rcu(ptr noundef %head, ptr noundef %func) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %head, null
  br i1 %tobool.not, label %do.body, label %if.then

if.then:                                          ; preds = %entry
  %0 = ptrtoint ptr %func to i32
  %idx.neg = sub i32 0, %0
  %add.ptr = getelementptr i8, ptr %head, i32 %idx.neg
  br label %if.end

do.body:                                          ; preds = %entry
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 3577) #24
  br label %if.end

if.end:                                           ; preds = %do.body, %if.then
  %ptr.0 = phi ptr [ %add.ptr, %if.then ], [ %func, %do.body ]
  %call.i = tail call i32 @debug_object_activate(ptr noundef %ptr.0, ptr noundef nonnull @rcuhead_debug_descr) #24
  tail call void @debug_object_active_state(ptr noundef %ptr.0, ptr noundef nonnull @rcuhead_debug_descr, i32 noundef 0, i32 noundef 1) #24
  %tobool4.not = icmp eq i32 %call.i, 0
  br i1 %tobool4.not, label %if.end44, label %land.end

land.end:                                         ; preds = %if.end
  %.b99 = load i1, ptr @kvfree_call_rcu.__already_done, align 1
  br i1 %.b99, label %cleanup, label %if.then11, !prof !1646

if.then11:                                        ; preds = %land.end
  store i1 true, ptr @kvfree_call_rcu.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3585, i32 noundef 9, ptr noundef nonnull @.str.24, ptr noundef nonnull @__func__.kvfree_call_rcu, ptr noundef %head) #24
  br label %cleanup

if.end44:                                         ; preds = %if.end
  tail call void @kasan_record_aux_stack_noalloc(ptr noundef %ptr.0) #24
  %1 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i.i.i = and i32 %1, 128
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %krc_this_cpu_lock.exit.i

if.then.i.i:                                      ; preds = %if.end44
  tail call void @trace_hardirqs_off() #24
  br label %krc_this_cpu_lock.exit.i

krc_this_cpu_lock.exit.i:                         ; preds = %if.then.i.i, %if.end44
  %2 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i20.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i20.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %5
  %6 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %7, ptrtoint (ptr @krc to i32)
  %8 = inttoptr i32 %add.i.i to ptr
  %lock.i.i = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %8, i32 0, i32 3
  tail call void @_raw_spin_lock(ptr noundef %lock.i.i) #24
  %initialized.i = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %8, i32 0, i32 6
  %9 = ptrtoint ptr %initialized.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %initialized.i, align 1, !range !1644
  %tobool.not.i = icmp eq i8 %10, 0
  br i1 %tobool.not.i, label %if.then50, label %if.end.i, !prof !1645

if.end.i:                                         ; preds = %krc_this_cpu_lock.exit.i
  %call4.i = tail call zeroext i1 @is_vmalloc_addr(ptr noundef %ptr.0) #24
  %lnot.ext8.i = zext i1 %call4.i to i32
  %arrayidx.i = getelementptr %struct.kfree_rcu_cpu, ptr %8, i32 0, i32 1, i32 %lnot.ext8.i
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx.i, align 4
  %tobool9.not.i = icmp eq ptr %12, null
  br i1 %tobool9.not.i, label %if.then12.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end.i
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %12, align 4
  %cmp.i = icmp eq i32 %14, 1022
  br i1 %cmp.i, label %if.then12.i, label %add_ptr_to_bulk_krc_lock.exit

if.then12.i:                                      ; preds = %lor.lhs.false.i, %if.end.i
  %nr_bkv_objs.i.i = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %8, i32 0, i32 13
  %15 = ptrtoint ptr %nr_bkv_objs.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %nr_bkv_objs.i.i, align 4
  %tobool.not.i58.i = icmp eq i32 %16, 0
  br i1 %tobool.not.i58.i, label %get_cached_bnode.exit.i, label %do.body2.i.i

do.body2.i.i:                                     ; preds = %if.then12.i
  %sub.i.i = add i32 %16, -1
  %17 = ptrtoint ptr %nr_bkv_objs.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile i32 %sub.i.i, ptr %nr_bkv_objs.i.i, align 4
  %bkvcache.i.i = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %8, i32 0, i32 12
  %call.i.i = tail call ptr @llist_del_first(ptr noundef %bkvcache.i.i) #24
  br label %get_cached_bnode.exit.i

get_cached_bnode.exit.i:                          ; preds = %do.body2.i.i, %if.then12.i
  %retval.0.i.i = phi ptr [ %call.i.i, %do.body2.i.i ], [ null, %if.then12.i ]
  %tobool14.not.i = icmp eq ptr %retval.0.i.i, null
  %18 = and i1 %tobool.not, %tobool14.not.i
  br i1 %18, label %if.then16.i, label %if.end19.i

if.then16.i:                                      ; preds = %get_cached_bnode.exit.i
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i.i, i32 noundef %1) #24
  %call17.i = tail call i32 @__get_free_pages(i32 noundef 601280, i32 noundef 0) #24
  %19 = inttoptr i32 %call17.i to ptr
  %20 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i.i60.i = and i32 %20, 128
  %tobool.not.i61.i = icmp eq i32 %and.i.i60.i, 0
  br i1 %tobool.not.i61.i, label %if.then.i62.i, label %krc_this_cpu_lock.exit68.i

if.then.i62.i:                                    ; preds = %if.then16.i
  tail call void @trace_hardirqs_off() #24
  br label %krc_this_cpu_lock.exit68.i

krc_this_cpu_lock.exit68.i:                       ; preds = %if.then.i62.i, %if.then16.i
  %21 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i20.i63.i = and i32 %21, -16384
  %22 = inttoptr i32 %and.i20.i63.i to ptr
  %cpu.i64.i = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 3
  %23 = ptrtoint ptr %cpu.i64.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %cpu.i64.i, align 4
  %arrayidx.i65.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %24
  %25 = ptrtoint ptr %arrayidx.i65.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %arrayidx.i65.i, align 4
  %add.i66.i = add i32 %26, ptrtoint (ptr @krc to i32)
  %27 = inttoptr i32 %add.i66.i to ptr
  %lock.i67.i = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %27, i32 0, i32 3
  tail call void @_raw_spin_lock(ptr noundef %lock.i67.i) #24
  br label %if.end19.i

if.end19.i:                                       ; preds = %krc_this_cpu_lock.exit68.i, %get_cached_bnode.exit.i
  %flags.0 = phi i32 [ %20, %krc_this_cpu_lock.exit68.i ], [ %1, %get_cached_bnode.exit.i ]
  %krcp.0 = phi ptr [ %27, %krc_this_cpu_lock.exit68.i ], [ %8, %get_cached_bnode.exit.i ]
  %bnode.0.i = phi ptr [ %19, %krc_this_cpu_lock.exit68.i ], [ %retval.0.i.i, %get_cached_bnode.exit.i ]
  %tobool20.not.i = icmp eq ptr %bnode.0.i, null
  br i1 %tobool20.not.i, label %if.then50, label %if.end22.i

if.end22.i:                                       ; preds = %if.end19.i
  %28 = ptrtoint ptr %bnode.0.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %bnode.0.i, align 4
  %arrayidx25.i = getelementptr %struct.kfree_rcu_cpu, ptr %krcp.0, i32 0, i32 1, i32 %lnot.ext8.i
  %29 = ptrtoint ptr %arrayidx25.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx25.i, align 4
  %next.i = getelementptr inbounds %struct.kvfree_rcu_bulk_data, ptr %bnode.0.i, i32 0, i32 1
  %31 = ptrtoint ptr %next.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %30, ptr %next.i, align 4
  store ptr %bnode.0.i, ptr %arrayidx25.i, align 4
  br label %add_ptr_to_bulk_krc_lock.exit

add_ptr_to_bulk_krc_lock.exit:                    ; preds = %if.end22.i, %lor.lhs.false.i
  %flags.1 = phi i32 [ %flags.0, %if.end22.i ], [ %1, %lor.lhs.false.i ]
  %krcp.1 = phi ptr [ %krcp.0, %if.end22.i ], [ %8, %lor.lhs.false.i ]
  %arrayidx30.i = getelementptr %struct.kfree_rcu_cpu, ptr %krcp.1, i32 0, i32 1, i32 %lnot.ext8.i
  %32 = ptrtoint ptr %arrayidx30.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %arrayidx30.i, align 4
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %33, align 4
  %inc.i = add i32 %35, 1
  store i32 %inc.i, ptr %33, align 4
  %arrayidx34.i = getelementptr %struct.kvfree_rcu_bulk_data, ptr %33, i32 0, i32 2, i32 %35
  %36 = ptrtoint ptr %arrayidx34.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %ptr.0, ptr %arrayidx34.i, align 4
  br label %do.body61

if.then50:                                        ; preds = %if.end19.i, %krc_this_cpu_lock.exit.i
  %flags.2.ph = phi i32 [ %flags.0, %if.end19.i ], [ %1, %krc_this_cpu_lock.exit.i ]
  %krcp.2.ph = phi ptr [ %krcp.0, %if.end19.i ], [ %8, %krc_this_cpu_lock.exit.i ]
  %37 = load i32, ptr @rcu_scheduler_active, align 4
  %cmp.i100 = icmp eq i32 %37, 2
  br i1 %cmp.i100, label %land.lhs.true.i, label %run_page_cache_worker.exit

land.lhs.true.i:                                  ; preds = %if.then50
  %work_in_progress.i = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %krcp.2.ph, i32 0, i32 10
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %work_in_progress.i, i32 noundef 4) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1728
  tail call void @llvm.prefetch.p0(ptr %work_in_progress.i, i32 1, i32 3, i32 1) #24
  %38 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 1, ptr %work_in_progress.i) #24, !srcloc !1729
  %asmresult.i.i.i = extractvalue { i32, i32 } %38, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1730
  %tobool.not.i101 = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %tobool.not.i101, label %if.then.i, label %run_page_cache_worker.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  %backoff_page_cache_fill.i = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %krcp.2.ph, i32 0, i32 9
  %call.i.i14.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %backoff_page_cache_fill.i, i32 noundef 4) #24
  %39 = ptrtoint ptr %backoff_page_cache_fill.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %backoff_page_cache_fill.i, align 4
  %tobool2.not.i = icmp eq i32 %40, 0
  br i1 %tobool2.not.i, label %if.else.i, label %if.then3.i

if.then3.i:                                       ; preds = %if.then.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %41 = load ptr, ptr @system_wq, align 4
  %page_cache_work.i = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %krcp.2.ph, i32 0, i32 8
  %42 = load i32, ptr @rcu_delay_page_cache_fill_msec, align 4
  %call2.i.i = tail call i32 @__msecs_to_jiffies(i32 noundef %42) #24
  %call.i.i104 = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %41, ptr noundef %page_cache_work.i, i32 noundef %call2.i.i) #24
  br label %run_page_cache_worker.exit

if.else.i:                                        ; preds = %if.then.i
  %hrtimer.i = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %krcp.2.ph, i32 0, i32 11
  tail call void @hrtimer_init(ptr noundef %hrtimer.i, i32 noundef 1, i32 noundef 1) #24
  %function.i = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %krcp.2.ph, i32 0, i32 11, i32 2
  %43 = ptrtoint ptr %function.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr @schedule_page_work_fn, ptr %function.i, align 8
  tail call void @hrtimer_start_range_ns(ptr noundef %hrtimer.i, i64 noundef 0, i64 noundef 0, i32 noundef 1) #24
  br label %run_page_cache_worker.exit

run_page_cache_worker.exit:                       ; preds = %if.else.i, %if.then3.i, %land.lhs.true.i, %if.then50
  br i1 %tobool.not, label %if.then74, label %if.end52

if.end52:                                         ; preds = %run_page_cache_worker.exit
  %func53 = getelementptr inbounds %struct.callback_head, ptr %head, i32 0, i32 1
  %44 = ptrtoint ptr %func53 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %func, ptr %func53, align 4
  %45 = ptrtoint ptr %krcp.2.ph to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %krcp.2.ph, align 8
  %47 = ptrtoint ptr %head to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %46, ptr %head, align 4
  store ptr %head, ptr %krcp.2.ph, align 8
  br label %do.body61

do.body61:                                        ; preds = %if.end52, %add_ptr_to_bulk_krc_lock.exit
  %krcp.2124 = phi ptr [ %krcp.1, %add_ptr_to_bulk_krc_lock.exit ], [ %krcp.2.ph, %if.end52 ]
  %flags.2120 = phi i32 [ %flags.1, %add_ptr_to_bulk_krc_lock.exit ], [ %flags.2.ph, %if.end52 ]
  %count = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %krcp.2124, i32 0, i32 7
  %48 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %count, align 8
  %add = add i32 %49, 1
  store volatile i32 %add, ptr %count, align 8
  %50 = load i32, ptr @rcu_scheduler_active, align 4
  %cmp67 = icmp eq i32 %50, 2
  br i1 %cmp67, label %land.lhs.true, label %unlock_return.thread

land.lhs.true:                                    ; preds = %do.body61
  %monitor_todo = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %krcp.2124, i32 0, i32 5
  %51 = ptrtoint ptr %monitor_todo to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %monitor_todo, align 4, !range !1644
  %tobool68.not = icmp eq i8 %52, 0
  br i1 %tobool68.not, label %if.then69, label %unlock_return.thread

if.then69:                                        ; preds = %land.lhs.true
  %53 = ptrtoint ptr %monitor_todo to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 1, ptr %monitor_todo, align 4
  %monitor_work = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %krcp.2124, i32 0, i32 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %54 = load ptr, ptr @system_wq, align 4
  %call.i.i105 = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %54, ptr noundef %monitor_work, i32 noundef 2) #24
  br label %unlock_return.thread

unlock_return.thread:                             ; preds = %if.then69, %land.lhs.true, %do.body61
  %lock.i130 = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %krcp.2124, i32 0, i32 3
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i130, i32 noundef %flags.2120) #24
  br label %cleanup

if.then74:                                        ; preds = %run_page_cache_worker.exit
  %lock.i = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %krcp.2.ph, i32 0, i32 3
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i, i32 noundef %flags.2.ph) #24
  tail call void @debug_object_active_state(ptr noundef %ptr.0, ptr noundef nonnull @rcuhead_debug_descr, i32 noundef 1, i32 noundef 0) #24
  tail call void @debug_object_deactivate(ptr noundef %ptr.0, ptr noundef nonnull @rcuhead_debug_descr) #24
  tail call void @synchronize_rcu()
  tail call void @kvfree(ptr noundef %ptr.0) #24
  br label %cleanup

cleanup:                                          ; preds = %if.then74, %unlock_return.thread, %if.then11, %land.end
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @kasan_record_aux_stack_noalloc(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @synchronize_rcu() #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %__crcu_array = alloca [1 x ptr], align 4
  %__rs_array = alloca [1 x %struct.rcu_synchronize], align 4
  %call.i = tail call i32 @lock_is_held_type(ptr noundef nonnull @rcu_bh_lock_map, i32 noundef -1) #24
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %lor.lhs.false, label %land.lhs.true

lor.lhs.false:                                    ; preds = %entry
  %call.i21 = tail call i32 @lock_is_held_type(ptr noundef nonnull @rcu_lock_map, i32 noundef -1) #24
  %tobool2.not = icmp eq i32 %call.i21, 0
  br i1 %tobool2.not, label %lor.lhs.false3, label %land.lhs.true

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %call.i22 = tail call i32 @lock_is_held_type(ptr noundef nonnull @rcu_sched_lock_map, i32 noundef -1) #24
  %tobool5.not = icmp eq i32 %call.i22, 0
  br i1 %tobool5.not, label %do.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  %call6 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %do.end, label %land.lhs.true8

land.lhs.true8:                                   ; preds = %land.lhs.true
  %.b20 = load i1, ptr @synchronize_rcu.__warned, align 1
  br i1 %.b20, label %do.end, label %if.then

if.then:                                          ; preds = %land.lhs.true8
  store i1 true, ptr @synchronize_rcu.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 3781, ptr noundef nonnull @.str.25) #24
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true8, %land.lhs.true, %lor.lhs.false3
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 3718) #24
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %3, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1775
  %4 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 3), align 16
  %cmp.i = icmp sgt i32 %4, 1
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1776
  %5 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i13.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i13.i to ptr
  %preempt_count.i.i14.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %preempt_count.i.i14.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %preempt_count.i.i14.i, align 4
  %sub.i.i = add i32 %8, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i14.i, align 4
  br i1 %cmp.i, label %if.end13, label %if.end19

if.end13:                                         ; preds = %do.end
  %call14 = tail call zeroext i1 @rcu_gp_is_expedited() #24
  br i1 %call14, label %if.then15, label %do.body16

if.then15:                                        ; preds = %if.end13
  tail call void @synchronize_rcu_expedited()
  br label %if.end19

do.body16:                                        ; preds = %if.end13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__crcu_array) #24
  %9 = ptrtoint ptr %__crcu_array to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 ptrtoint (ptr @call_rcu to i32), ptr %__crcu_array, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__rs_array) #24
  %10 = call ptr @memset(ptr %__rs_array, i32 255, i32 64)
  call void @__wait_rcu_gp(i1 noundef zeroext false, i32 noundef 1, ptr noundef nonnull %__crcu_array, ptr noundef nonnull %__rs_array) #24
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__rs_array) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__crcu_array) #24
  br label %if.end19

if.end19:                                         ; preds = %do.body16, %if.then15, %do.end
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree(ptr noundef) local_unnamed_addr #5

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @kfree_rcu_scheduler_running() local_unnamed_addr #9 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call48 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %cmp49 = icmp ult i32 %call48, %0
  br i1 %cmp49, label %for.body, label %for.end

for.body:                                         ; preds = %cleanup, %entry
  %call50 = phi i32 [ %call, %cleanup ], [ %call48, %entry ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call50
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %arrayidx, align 4
  %add = add i32 %2, ptrtoint (ptr @krc to i32)
  %3 = inttoptr i32 %add to ptr
  %lock = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %3, i32 0, i32 3
  %call5 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #24
  %bkvhead = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %bkvhead to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %bkvhead, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %for.body
  %arrayidx10 = getelementptr %struct.kfree_rcu_cpu, ptr %3, i32 0, i32 1, i32 1
  %6 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx10, align 4
  %tobool11.not = icmp eq ptr %7, null
  br i1 %tobool11.not, label %land.lhs.true12, label %lor.lhs.false

land.lhs.true12:                                  ; preds = %land.lhs.true
  %8 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %3, align 8
  %tobool13.not = icmp eq ptr %9, null
  br i1 %tobool13.not, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true12, %land.lhs.true, %for.body
  %monitor_todo = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %3, i32 0, i32 5
  %10 = ptrtoint ptr %monitor_todo to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %monitor_todo, align 4, !range !1644
  %tobool14.not = icmp eq i8 %11, 0
  br i1 %tobool14.not, label %if.end, label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %12 = ptrtoint ptr %monitor_todo to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 1, ptr %monitor_todo, align 4
  %monitor_work = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %3, i32 0, i32 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %13 = load ptr, ptr @system_wq, align 4
  %call.i = tail call zeroext i1 @queue_delayed_work_on(i32 noundef %call50, ptr noundef %13, ptr noundef %monitor_work, i32 noundef 2) #24
  br label %cleanup

cleanup:                                          ; preds = %if.end, %lor.lhs.false, %land.lhs.true12
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call5) #24
  %call = tail call i32 @cpumask_next(i32 noundef %call50, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %14 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call, %14
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %cleanup, %entry
  ret void
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_gp_is_expedited() local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @synchronize_rcu_expedited() #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %__wq_entry.i = alloca %struct.wait_queue_entry, align 4
  %rew = alloca %struct.rcu_exp_work, align 4
  %__crcu_array = alloca [1 x ptr], align 4
  %__rs_array = alloca [1 x %struct.rcu_synchronize], align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 4
  %0 = load i32, ptr @rcu_scheduler_active, align 4
  %cmp = icmp eq i32 %0, 1
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %rew) #24
  %1 = call ptr @memset(ptr %rew, i32 255, i32 48)
  %call.i = tail call i32 @lock_is_held_type(ptr noundef nonnull @rcu_bh_lock_map, i32 noundef -1) #24
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %lor.lhs.false, label %land.lhs.true

lor.lhs.false:                                    ; preds = %entry
  %call.i95 = tail call i32 @lock_is_held_type(ptr noundef nonnull @rcu_lock_map, i32 noundef -1) #24
  %tobool2.not = icmp eq i32 %call.i95, 0
  br i1 %tobool2.not, label %lor.lhs.false3, label %land.lhs.true

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %call.i96 = tail call i32 @lock_is_held_type(ptr noundef nonnull @rcu_sched_lock_map, i32 noundef -1) #24
  %tobool5.not = icmp eq i32 %call.i96, 0
  br i1 %tobool5.not, label %do.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  %call6 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %do.end, label %land.lhs.true8

land.lhs.true8:                                   ; preds = %land.lhs.true
  %.b94 = load i1, ptr @synchronize_rcu_expedited.__warned, align 1
  br i1 %.b94, label %do.end, label %if.then

if.then:                                          ; preds = %land.lhs.true8
  store i1 true, ptr @synchronize_rcu_expedited.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.92, i32 noundef 826, ptr noundef nonnull @.str.93) #24
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true8, %land.lhs.true, %lor.lhs.false3
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 3718) #24
  %2 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %5, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1775
  %6 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 3), align 16
  %cmp.i = icmp sgt i32 %6, 1
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1776
  %7 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i13.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i13.i to ptr
  %preempt_count.i.i14.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i.i14.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i.i14.i, align 4
  %sub.i.i = add i32 %10, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i14.i, align 4
  br i1 %cmp.i, label %if.end13, label %cleanup80

if.end13:                                         ; preds = %do.end
  %call14 = tail call zeroext i1 @rcu_gp_is_normal() #24
  br i1 %call14, label %do.body16, label %if.end20

do.body16:                                        ; preds = %if.end13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__crcu_array) #24
  %11 = ptrtoint ptr %__crcu_array to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 ptrtoint (ptr @call_rcu to i32), ptr %__crcu_array, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__rs_array) #24
  %12 = call ptr @memset(ptr %__rs_array, i32 255, i32 64)
  call void @__wait_rcu_gp(i1 noundef zeroext false, i32 noundef 1, ptr noundef nonnull %__crcu_array, ptr noundef nonnull %__rs_array) #24
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__rs_array) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__crcu_array) #24
  br label %cleanup80

if.end20:                                         ; preds = %if.end13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1777
  %13 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 20), align 4
  %add1.i.i = add i32 %13, 7
  %and.i.i = and i32 %add1.i.i, -4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1778
  %14 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %15 = load ptr, ptr @rcu_exp_gp_seq_snap.___tp_str, align 4
  tail call fastcc void @trace_rcu_exp_grace_period(ptr noundef %14, i32 noundef %and.i.i, ptr noundef %15) #24
  %16 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i97 = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i97 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 3
  %18 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %19
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %21, ptrtoint (ptr @rcu_data to i32)
  %22 = inttoptr i32 %add.i to ptr
  %mynode.i = getelementptr inbounds %struct.rcu_data, ptr %22, i32 0, i32 7
  %23 = ptrtoint ptr %mynode.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %mynode.i, align 16
  %exp_seq_rq.i = getelementptr inbounds %struct.rcu_node, ptr %24, i32 0, i32 35
  %25 = ptrtoint ptr %exp_seq_rq.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %exp_seq_rq.i, align 4
  %sub.i = sub i32 %26, %and.i.i
  %cmp.i98 = icmp slt i32 %sub.i, 0
  br i1 %cmp.i98, label %land.lhs.true.i, label %if.end.i

land.lhs.true.i:                                  ; preds = %if.end20
  %cmp7.i = icmp eq ptr %24, @rcu_state
  br i1 %cmp7.i, label %land.lhs.true15.i, label %do.end10.i

do.end10.i:                                       ; preds = %land.lhs.true.i
  %27 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 35), align 4
  %sub13.i = sub i32 %27, %and.i.i
  %cmp14.i = icmp slt i32 %sub13.i, 0
  br i1 %cmp14.i, label %land.lhs.true15.i, label %if.end.i

land.lhs.true15.i:                                ; preds = %do.end10.i, %land.lhs.true.i
  %call16.i = tail call i32 @mutex_trylock(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 18)) #24
  %tobool.not.i = icmp eq i32 %call16.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %fastpath.i

if.end.i:                                         ; preds = %land.lhs.true15.i, %do.end10.i, %if.end20
  %cmp17.not119.i = icmp eq ptr %24, null
  br i1 %cmp17.not119.i, label %for.end67.i, label %for.body.i

for.body.i:                                       ; preds = %do.body56.i, %if.end.i
  %rnp.0120.i = phi ptr [ %59, %do.body56.i ], [ %24, %if.end.i ]
  %28 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 20), align 4
  %sub.i.i.i.i = sub i32 %28, %and.i.i
  %cmp.i.i.i.i = icmp sgt i32 %sub.i.i.i.i, -1
  br i1 %cmp.i.i.i.i, label %sync_exp_work_done.exit.thread.i, label %if.end20.i

sync_exp_work_done.exit.thread.i:                 ; preds = %for.body.i
  %29 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %30 = load ptr, ptr @sync_exp_work_done.___tp_str, align 4
  tail call fastcc void @trace_rcu_exp_grace_period(ptr noundef %29, i32 noundef %and.i.i, ptr noundef %30) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1779
  br label %cleanup80

if.end20.i:                                       ; preds = %for.body.i
  %exp_lock.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0120.i, i32 0, i32 34
  tail call void @_raw_spin_lock(ptr noundef %exp_lock.i) #24
  %exp_seq_rq21.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0120.i, i32 0, i32 35
  %31 = ptrtoint ptr %exp_seq_rq21.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %exp_seq_rq21.i, align 4
  %sub22.i = sub i32 %32, %and.i.i
  %cmp23.i = icmp sgt i32 %sub22.i, -1
  br i1 %cmp23.i, label %if.then24.i, label %do.body56.i

if.then24.i:                                      ; preds = %if.end20.i
  tail call void @_raw_spin_unlock(ptr noundef %exp_lock.i) #24
  %33 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %level.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0120.i, i32 0, i32 18
  %34 = ptrtoint ptr %level.i to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %level.i, align 1
  %grplo.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0120.i, i32 0, i32 15
  %36 = ptrtoint ptr %grplo.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %grplo.i, align 4
  %grphi.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0120.i, i32 0, i32 16
  %38 = ptrtoint ptr %grphi.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %grphi.i, align 8
  %40 = load ptr, ptr @exp_funnel_lock.___tp_str, align 4
  tail call fastcc void @trace_rcu_exp_funnel_lock(ptr noundef %33, i8 noundef zeroext %35, i32 noundef %37, i32 noundef %39, ptr noundef %40) #24
  tail call void @__might_sleep(ptr noundef nonnull @.str.92, i32 noundef 314) #24
  %41 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 20), align 4
  %sub.i.i.i102.i = sub i32 %41, %and.i.i
  %cmp.i.i.i103.i = icmp sgt i32 %sub.i.i.i102.i, -1
  br i1 %cmp.i.i.i103.i, label %sync_exp_work_done.exit105.thread.i, label %if.end36.i

sync_exp_work_done.exit105.thread.i:              ; preds = %if.then24.i
  %42 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %43 = load ptr, ptr @sync_exp_work_done.___tp_str, align 4
  tail call fastcc void @trace_rcu_exp_grace_period(ptr noundef %42, i32 noundef %and.i.i, ptr noundef %43) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1779
  br label %cleanup80

if.end36.i:                                       ; preds = %if.then24.i
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry.i) #24
  %44 = call ptr @memset(ptr %__wq_entry.i, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry.i, i32 noundef 0) #24
  %shr.i.i = lshr i32 %add1.i.i, 2
  %and.i = and i32 %shr.i.i, 3
  %arrayidx39.i = getelementptr %struct.rcu_node, ptr %rnp.0120.i, i32 0, i32 36, i32 %and.i
  %call40121.i = call i32 @prepare_to_wait_event(ptr noundef %arrayidx39.i, ptr noundef nonnull %__wq_entry.i, i32 noundef 2) #24
  %45 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 20), align 4
  %sub.i.i.i106122.i = sub i32 %45, %and.i.i
  %cmp.i.i.i107123.i = icmp sgt i32 %sub.i.i.i106122.i, -1
  br i1 %cmp.i.i.i107123.i, label %for.end.i, label %cleanup.i

cleanup.i:                                        ; preds = %cleanup.i, %if.end36.i
  call void @schedule() #24
  %call40.i = call i32 @prepare_to_wait_event(ptr noundef %arrayidx39.i, ptr noundef nonnull %__wq_entry.i, i32 noundef 2) #24
  %46 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 20), align 4
  %sub.i.i.i106.i = sub i32 %46, %and.i.i
  %cmp.i.i.i107.i = icmp sgt i32 %sub.i.i.i106.i, -1
  br i1 %cmp.i.i.i107.i, label %for.end.i, label %cleanup.i

for.end.i:                                        ; preds = %cleanup.i, %if.end36.i
  %47 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %48 = load ptr, ptr @sync_exp_work_done.___tp_str, align 4
  call fastcc void @trace_rcu_exp_grace_period(ptr noundef %47, i32 noundef %and.i.i, ptr noundef %48) #24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1779
  call void @finish_wait(ptr noundef %arrayidx39.i, ptr noundef nonnull %__wq_entry.i) #24
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry.i) #24
  br label %cleanup80

do.body56.i:                                      ; preds = %if.end20.i
  %49 = ptrtoint ptr %exp_seq_rq21.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store volatile i32 %and.i.i, ptr %exp_seq_rq21.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %exp_lock.i) #24
  %50 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %level63.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0120.i, i32 0, i32 18
  %51 = ptrtoint ptr %level63.i to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %level63.i, align 1
  %grplo64.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0120.i, i32 0, i32 15
  %53 = ptrtoint ptr %grplo64.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %grplo64.i, align 4
  %grphi65.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0120.i, i32 0, i32 16
  %55 = ptrtoint ptr %grphi65.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %grphi65.i, align 8
  %57 = load ptr, ptr @exp_funnel_lock.___tp_str.428, align 4
  tail call fastcc void @trace_rcu_exp_funnel_lock(ptr noundef %50, i8 noundef zeroext %52, i32 noundef %54, i32 noundef %56, ptr noundef %57) #24
  %parent.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0120.i, i32 0, i32 20
  %58 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %parent.i, align 16
  %cmp17.not.i = icmp eq ptr %59, null
  br i1 %cmp17.not.i, label %for.end67.i, label %for.body.i

for.end67.i:                                      ; preds = %do.body56.i, %if.end.i
  tail call void @mutex_lock_nested(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 18), i32 noundef 0) #24
  br label %fastpath.i

fastpath.i:                                       ; preds = %for.end67.i, %land.lhs.true15.i
  %60 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 20), align 4
  %sub.i.i.i111.i = sub i32 %60, %and.i.i
  %cmp.i.i.i112.i = icmp sgt i32 %sub.i.i.i111.i, -1
  br i1 %cmp.i.i.i112.i, label %if.then69.i, label %if.end70.i

if.then69.i:                                      ; preds = %fastpath.i
  %61 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %62 = load ptr, ptr @sync_exp_work_done.___tp_str, align 4
  tail call fastcc void @trace_rcu_exp_grace_period(ptr noundef %61, i32 noundef %and.i.i, ptr noundef %62) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1779
  tail call void @mutex_unlock(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 18)) #24
  br label %cleanup80

if.end70.i:                                       ; preds = %fastpath.i
  %add.i.i.i = add i32 %60, 1
  store volatile i32 %add.i.i.i, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 20), align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1780
  %63 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 20), align 4
  %and.i.i.i.i99 = and i32 %63, 3
  %cmp.not.i.i.i = icmp eq i32 %and.i.i.i.i99, 1
  br i1 %cmp.not.i.i.i, label %if.end24, label %land.rhs.i.i.i

land.rhs.i.i.i:                                   ; preds = %if.end70.i
  %.b49.i.i.i = load i1, ptr @rcu_seq_start.__already_done, align 1
  br i1 %.b49.i.i.i, label %if.end24, label %if.then.i.i.i, !prof !1646

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  store i1 true, ptr @rcu_seq_start.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.242, i32 noundef 59, i32 noundef 9, ptr noundef null) #24
  br label %if.end24

if.end24:                                         ; preds = %if.then.i.i.i, %land.rhs.i.i.i, %if.end70.i
  %64 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %65 = load ptr, ptr @exp_funnel_lock.___tp_str.430, align 4
  tail call fastcc void @trace_rcu_exp_grace_period(ptr noundef %64, i32 noundef %and.i.i, ptr noundef %65) #24
  br i1 %cmp, label %if.then28, label %if.else, !prof !1645

if.then28:                                        ; preds = %if.end24
  tail call fastcc void @rcu_exp_sel_wait_wake(i32 noundef %and.i.i)
  br label %if.end39

if.else:                                          ; preds = %if.end24
  %66 = ptrtoint ptr %rew to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %and.i.i, ptr %rew, align 4
  %rew_work = getelementptr inbounds %struct.rcu_exp_work, ptr %rew, i32 0, i32 1
  call void @__init_work(ptr noundef %rew_work, i32 noundef 1) #24
  %67 = ptrtoint ptr %rew_work to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 -64, ptr %rew_work, align 4
  %lockdep_map = getelementptr inbounds %struct.rcu_exp_work, ptr %rew, i32 0, i32 1, i32 3
  call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.94, ptr noundef nonnull @synchronize_rcu_expedited.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #24
  %entry33 = getelementptr inbounds %struct.rcu_exp_work, ptr %rew, i32 0, i32 1, i32 1
  %68 = ptrtoint ptr %entry33 to i32
  call void @__asan_store4_noabort(i32 %68)
  store volatile ptr %entry33, ptr %entry33, align 4
  %prev.i = getelementptr inbounds %struct.rcu_exp_work, ptr %rew, i32 0, i32 1, i32 1, i32 1
  %69 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %entry33, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.rcu_exp_work, ptr %rew, i32 0, i32 1, i32 2
  %70 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr @wait_rcu_exp_gp, ptr %func, align 4
  %71 = load ptr, ptr @rcu_gp_wq, align 4
  %call.i100 = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %71, ptr noundef %rew_work) #24
  br label %if.end39

if.end39:                                         ; preds = %if.else, %if.then28
  call void @__might_sleep(ptr noundef nonnull @.str.92, i32 noundef 857) #24
  %72 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 20), align 4
  %sub.i.i.i = sub i32 %72, %and.i.i
  %cmp.i.i.i = icmp sgt i32 %sub.i.i.i, -1
  br i1 %cmp.i.i.i, label %sync_exp_work_done.exit.thread, label %if.end50

sync_exp_work_done.exit.thread:                   ; preds = %if.end39
  %73 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %74 = load ptr, ptr @sync_exp_work_done.___tp_str, align 4
  call fastcc void @trace_rcu_exp_grace_period(ptr noundef %73, i32 noundef %and.i.i, ptr noundef %74) #24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1779
  br label %do.end65

if.end50:                                         ; preds = %if.end39
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry) #24
  %75 = call ptr @memset(ptr %__wq_entry, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry, i32 noundef 0) #24
  %shr.i = lshr i32 %add1.i.i, 2
  %and = and i32 %shr.i, 3
  %arrayidx = getelementptr %struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 36, i32 %and
  %call52112 = call i32 @prepare_to_wait_event(ptr noundef %arrayidx, ptr noundef nonnull %__wq_entry, i32 noundef 2) #24
  %76 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 20), align 4
  %sub.i.i.i101113 = sub i32 %76, %and.i.i
  %cmp.i.i.i102114 = icmp sgt i32 %sub.i.i.i101113, -1
  br i1 %cmp.i.i.i102114, label %for.end, label %cleanup

cleanup:                                          ; preds = %cleanup, %if.end50
  call void @schedule() #24
  %call52 = call i32 @prepare_to_wait_event(ptr noundef %arrayidx, ptr noundef nonnull %__wq_entry, i32 noundef 2) #24
  %77 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 20), align 4
  %sub.i.i.i101 = sub i32 %77, %and.i.i
  %cmp.i.i.i102 = icmp sgt i32 %sub.i.i.i101, -1
  br i1 %cmp.i.i.i102, label %for.end, label %cleanup

for.end:                                          ; preds = %cleanup, %if.end50
  %78 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %79 = load ptr, ptr @sync_exp_work_done.___tp_str, align 4
  call fastcc void @trace_rcu_exp_grace_period(ptr noundef %78, i32 noundef %and.i.i, ptr noundef %79) #24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1779
  call void @finish_wait(ptr noundef %arrayidx, ptr noundef nonnull %__wq_entry) #24
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry) #24
  br label %do.end65

do.end65:                                         ; preds = %for.end, %sync_exp_work_done.exit.thread
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1781
  call void @mutex_unlock(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 18)) #24
  br i1 %cmp, label %cleanup80, label %if.then77, !prof !1645

if.then77:                                        ; preds = %do.end65
  %rew_work78 = getelementptr inbounds %struct.rcu_exp_work, ptr %rew, i32 0, i32 1
  call void @destroy_work_on_stack(ptr noundef %rew_work78) #24
  br label %cleanup80

cleanup80:                                        ; preds = %if.then77, %do.end65, %if.then69.i, %for.end.i, %sync_exp_work_done.exit105.thread.i, %sync_exp_work_done.exit.thread.i, %do.body16, %do.end
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %rew) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wait_rcu_gp(i1 noundef zeroext, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @get_state_synchronize_rcu() #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1782
  %0 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %add1.i = add i32 %0, 7
  %and.i = and i32 %add1.i, -4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1778
  ret i32 %and.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @start_poll_synchronize_rcu() #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1782
  %0 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %add1.i.i = add i32 %0, 7
  %and.i.i = and i32 %add1.i.i, -4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1778
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %1 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.end88, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %5, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1783
  %6 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %9
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx, align 4
  %add = add i32 %11, ptrtoint (ptr @lockdep_recursion to i32)
  %12 = inttoptr i32 %add to ptr
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %12, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1784
  %15 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i293 = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i.i293 to ptr
  %preempt_count.i.i294 = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %preempt_count.i.i294 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %preempt_count.i.i294, align 4
  %sub.i = add i32 %18, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i294, align 4
  %tobool21.not = icmp eq i32 %14, 0
  br i1 %tobool21.not, label %land.rhs, label %if.end88

land.rhs:                                         ; preds = %land.lhs.true
  %19 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i295 = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i.i295 to ptr
  %preempt_count.i.i296 = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %preempt_count.i.i296 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %preempt_count.i.i296, align 4
  %add.i297 = add i32 %22, 1
  store volatile i32 %add.i297, ptr %preempt_count.i.i296, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1785
  %23 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %cpu, align 4
  %arrayidx45 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %24
  %25 = ptrtoint ptr %arrayidx45 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %arrayidx45, align 4
  %add46 = add i32 %26, ptrtoint (ptr @hardirqs_enabled to i32)
  %27 = inttoptr i32 %add46 to ptr
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %27, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1786
  %30 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i298 = and i32 %30, -16384
  %31 = inttoptr i32 %and.i.i.i298 to ptr
  %preempt_count.i.i299 = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %preempt_count.i.i299 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %preempt_count.i.i299, align 4
  %sub.i300 = add i32 %33, -1
  store volatile i32 %sub.i300, ptr %preempt_count.i.i299, align 4
  %tobool53.not = icmp eq i32 %29, 0
  br i1 %tobool53.not, label %land.rhs57, label %if.end88

land.rhs57:                                       ; preds = %land.rhs
  %.b286 = load i1, ptr @start_poll_synchronize_rcu.__already_done, align 1
  br i1 %.b286, label %if.end88, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs57
  store i1 true, ptr @start_poll_synchronize_rcu.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3829, i32 noundef 9, ptr noundef null) #24
  br label %if.end88

if.end88:                                         ; preds = %if.then, %land.rhs57, %land.rhs, %land.lhs.true, %entry
  %34 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i313 = and i32 %34, 128
  %tobool111.not = icmp eq i32 %and.i313, 0
  br i1 %tobool111.not, label %if.then112, label %do.body116

if.then112:                                       ; preds = %if.end88
  tail call void @trace_hardirqs_off() #24
  br label %do.body116

do.body116:                                       ; preds = %if.then112, %if.end88
  %35 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i314 = and i32 %35, -16384
  %36 = inttoptr i32 %and.i314 to ptr
  %cpu124 = getelementptr inbounds %struct.thread_info, ptr %36, i32 0, i32 3
  %37 = ptrtoint ptr %cpu124 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %cpu124, align 4
  %arrayidx125 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %38
  %39 = ptrtoint ptr %arrayidx125 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx125, align 4
  %add126 = add i32 %40, ptrtoint (ptr @rcu_data to i32)
  %41 = inttoptr i32 %add126 to ptr
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %41, i32 0, i32 7
  %42 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %mynode, align 16
  tail call void @_raw_spin_lock(ptr noundef %43) #24
  %call133 = tail call fastcc zeroext i1 @rcu_start_this_gp(ptr noundef %43, ptr noundef %41, i32 noundef %and.i.i)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %44 = load i32, ptr @debug_locks, align 4
  %tobool138.not = icmp eq i32 %44, 0
  br i1 %tobool138.not, label %if.end251, label %land.lhs.true139

land.lhs.true139:                                 ; preds = %do.body116
  %45 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i301 = and i32 %45, -16384
  %46 = inttoptr i32 %and.i.i.i301 to ptr
  %preempt_count.i.i302 = getelementptr inbounds %struct.thread_info, ptr %46, i32 0, i32 1
  %47 = ptrtoint ptr %preempt_count.i.i302 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %preempt_count.i.i302, align 4
  %add.i303 = add i32 %48, 1
  store volatile i32 %add.i303, ptr %preempt_count.i.i302, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1787
  %49 = ptrtoint ptr %cpu124 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %cpu124, align 4
  %arrayidx163 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %50
  %51 = ptrtoint ptr %arrayidx163 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %arrayidx163, align 4
  %add164 = add i32 %52, ptrtoint (ptr @lockdep_recursion to i32)
  %53 = inttoptr i32 %add164 to ptr
  %54 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %53, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1788
  %56 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i304 = and i32 %56, -16384
  %57 = inttoptr i32 %and.i.i.i304 to ptr
  %preempt_count.i.i305 = getelementptr inbounds %struct.thread_info, ptr %57, i32 0, i32 1
  %58 = ptrtoint ptr %preempt_count.i.i305 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %preempt_count.i.i305, align 4
  %sub.i306 = add i32 %59, -1
  store volatile i32 %sub.i306, ptr %preempt_count.i.i305, align 4
  %tobool171.not = icmp eq i32 %55, 0
  br i1 %tobool171.not, label %land.rhs172, label %if.end251

land.rhs172:                                      ; preds = %land.lhs.true139
  %60 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i307 = and i32 %60, -16384
  %61 = inttoptr i32 %and.i.i.i307 to ptr
  %preempt_count.i.i308 = getelementptr inbounds %struct.thread_info, ptr %61, i32 0, i32 1
  %62 = ptrtoint ptr %preempt_count.i.i308 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %preempt_count.i.i308, align 4
  %add.i309 = add i32 %63, 1
  store volatile i32 %add.i309, ptr %preempt_count.i.i308, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1789
  %64 = ptrtoint ptr %cpu124 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %cpu124, align 4
  %arrayidx196 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %65
  %66 = ptrtoint ptr %arrayidx196 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %arrayidx196, align 4
  %add197 = add i32 %67, ptrtoint (ptr @hardirqs_enabled to i32)
  %68 = inttoptr i32 %add197 to ptr
  %69 = ptrtoint ptr %68 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %68, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1790
  %71 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i310 = and i32 %71, -16384
  %72 = inttoptr i32 %and.i.i.i310 to ptr
  %preempt_count.i.i311 = getelementptr inbounds %struct.thread_info, ptr %72, i32 0, i32 1
  %73 = ptrtoint ptr %preempt_count.i.i311 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load volatile i32, ptr %preempt_count.i.i311, align 4
  %sub.i312 = add i32 %74, -1
  store volatile i32 %sub.i312, ptr %preempt_count.i.i311, align 4
  %tobool204.not = icmp eq i32 %70, 0
  br i1 %tobool204.not, label %if.end251, label %land.rhs213

land.rhs213:                                      ; preds = %land.rhs172
  %.b284285 = load i1, ptr @start_poll_synchronize_rcu.__already_done.26, align 1
  br i1 %.b284285, label %if.end251, label %if.then224, !prof !1646

if.then224:                                       ; preds = %land.rhs213
  store i1 true, ptr @start_poll_synchronize_rcu.__already_done.26, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3835, i32 noundef 9, ptr noundef null) #24
  br label %if.end251

if.end251:                                        ; preds = %if.then224, %land.rhs213, %land.rhs172, %land.lhs.true139, %do.body116
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %43, i32 noundef %34) #24
  br i1 %call133, label %if.then273, label %if.end274

if.then273:                                       ; preds = %if.end251
  %75 = load volatile ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 8), align 4
  %76 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i315 = and i32 %76, -16384
  %77 = inttoptr i32 %and.i.i315 to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %77, i32 0, i32 2
  %78 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %task.i, align 8
  %cmp.i = icmp eq ptr %79, %75
  br i1 %cmp.i, label %land.lhs.true.i, label %do.end9.i

land.lhs.true.i:                                  ; preds = %if.then273
  %preempt_count.i.i316 = getelementptr inbounds %struct.thread_info, ptr %77, i32 0, i32 1
  %80 = ptrtoint ptr %preempt_count.i.i316 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load volatile i32, ptr %preempt_count.i.i316, align 4
  %and.i317 = and i32 %81, 983040
  %tobool.not.i = icmp eq i32 %and.i317, 0
  br i1 %tobool.not.i, label %land.lhs.true2.i, label %do.end9.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %82 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i37.i = and i32 %82, -16384
  %83 = inttoptr i32 %and.i.i37.i to ptr
  %preempt_count.i38.i = getelementptr inbounds %struct.thread_info, ptr %83, i32 0, i32 1
  %84 = ptrtoint ptr %preempt_count.i38.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile i32, ptr %preempt_count.i38.i, align 4
  %and5.i = and i32 %85, 256
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  br i1 %tobool6.not.i, label %if.end274, label %do.end9.i

do.end9.i:                                        ; preds = %land.lhs.true2.i, %land.lhs.true.i, %if.then273
  %86 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %tobool11.not.i = icmp eq i16 %86, 0
  %tobool13.not.i = icmp eq ptr %75, null
  %or.cond.i = select i1 %tobool11.not.i, i1 true, i1 %tobool13.not.i
  br i1 %or.cond.i, label %if.end274, label %do.body18.i

do.body18.i:                                      ; preds = %do.end9.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %87 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %87, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 12), align 8
  %88 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  store volatile i32 %88, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 13), align 4
  tail call void @swake_up_one(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 9)) #24
  br label %if.end274

if.end274:                                        ; preds = %do.body18.i, %do.end9.i, %land.lhs.true2.i, %if.end251
  ret i32 %and.i.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @rcu_start_this_gp(ptr noundef %rnp_start, ptr noundef %rdp, i32 noundef %gp_seq_req) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end, label %land.rhs

land.rhs:                                         ; preds = %entry
  %dep_map = getelementptr inbounds %struct.raw_spinlock, ptr %rnp_start, i32 0, i32 4
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #24
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %if.end, !prof !1645

do.end:                                           ; preds = %land.rhs
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1385, i32 noundef 9, ptr noundef null) #24
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs, %entry
  %1 = load ptr, ptr @rcu_start_this_gp.___tp_str, align 4
  %2 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %gp_seq.i = getelementptr inbounds %struct.rcu_node, ptr %rnp_start, i32 0, i32 1
  %3 = ptrtoint ptr %gp_seq.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %gp_seq.i, align 4
  %level.i = getelementptr inbounds %struct.rcu_node, ptr %rnp_start, i32 0, i32 18
  %5 = ptrtoint ptr %level.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %level.i, align 1
  %grplo.i = getelementptr inbounds %struct.rcu_node, ptr %rnp_start, i32 0, i32 15
  %7 = ptrtoint ptr %grplo.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %grplo.i, align 4
  %grphi.i = getelementptr inbounds %struct.rcu_node, ptr %rnp_start, i32 0, i32 16
  %9 = ptrtoint ptr %grphi.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %grphi.i, align 8
  tail call fastcc void @trace_rcu_future_grace_period(ptr noundef %2, i32 noundef %4, i32 noundef %gp_seq_req, i8 noundef zeroext %6, i32 noundef %8, i32 noundef %10, ptr noundef %1) #24
  %sub.i467 = add i32 %gp_seq_req, -1
  %and.i = and i32 %sub.i467, -4
  br label %for.cond

for.cond:                                         ; preds = %if.end185, %if.end
  %rnp.0 = phi ptr [ %rnp_start, %if.end ], [ %79, %if.end185 ]
  %cmp25.not = icmp eq ptr %rnp.0, %rnp_start
  br i1 %cmp25.not, label %if.end34, label %do.body27

do.body27:                                        ; preds = %for.cond
  tail call void @_raw_spin_lock(ptr noundef %rnp.0) #24
  br label %if.end34

if.end34:                                         ; preds = %do.body27, %for.cond
  %gp_seq_needed = getelementptr inbounds %struct.rcu_node, ptr %rnp.0, i32 0, i32 2
  %11 = ptrtoint ptr %gp_seq_needed to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %gp_seq_needed, align 16
  %sub = sub i32 %12, %gp_seq_req
  %cmp35 = icmp sgt i32 %sub, -1
  br i1 %cmp35, label %if.then43, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end34
  %gp_seq = getelementptr inbounds %struct.rcu_node, ptr %rnp.0, i32 0, i32 1
  %13 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %gp_seq, align 4
  %sub1.i = sub i32 %and.i, %14
  %cmp.i = icmp slt i32 %sub1.i, 0
  br i1 %cmp.i, label %if.then43, label %lor.lhs.false37

lor.lhs.false37:                                  ; preds = %lor.lhs.false
  br i1 %cmp25.not, label %do.body50, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false37
  %15 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %gp_seq, align 4
  %and.i468 = and i32 %16, 3
  %tobool42.not = icmp eq i32 %and.i468, 0
  br i1 %tobool42.not, label %do.body50.thread, label %if.then43

if.then43:                                        ; preds = %land.lhs.true, %lor.lhs.false, %if.end34
  %17 = load ptr, ptr @rcu_start_this_gp.___tp_str.172, align 4
  %18 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %gp_seq.i469 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0, i32 0, i32 1
  %19 = ptrtoint ptr %gp_seq.i469 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %gp_seq.i469, align 4
  %level.i470 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0, i32 0, i32 18
  %21 = ptrtoint ptr %level.i470 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %level.i470, align 1
  %grplo.i471 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0, i32 0, i32 15
  %23 = ptrtoint ptr %grplo.i471 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %grplo.i471, align 4
  %grphi.i472 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0, i32 0, i32 16
  %25 = ptrtoint ptr %grphi.i472 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %grphi.i472, align 8
  tail call fastcc void @trace_rcu_future_grace_period(ptr noundef %18, i32 noundef %20, i32 noundef %gp_seq_req, i8 noundef zeroext %22, i32 noundef %24, i32 noundef %26, ptr noundef %17) #24
  br label %unlock_out

do.body50:                                        ; preds = %lor.lhs.false37
  %27 = ptrtoint ptr %gp_seq_needed to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile i32 %gp_seq_req, ptr %gp_seq_needed, align 16
  %28 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %gp_seq, align 4
  %and.i473 = and i32 %29, 3
  %tobool59.not = icmp eq i32 %and.i473, 0
  br i1 %tobool59.not, label %if.end185, label %if.then60

do.body50.thread:                                 ; preds = %land.lhs.true
  %30 = ptrtoint ptr %gp_seq_needed to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile i32 %gp_seq_req, ptr %gp_seq_needed, align 16
  %31 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %gp_seq, align 4
  %and.i473492 = and i32 %32, 3
  %tobool59.not493 = icmp eq i32 %and.i473492, 0
  br i1 %tobool59.not493, label %land.lhs.true64, label %if.then60

if.then60:                                        ; preds = %do.body50.thread, %do.body50
  %rnp.0.lcssa507 = phi ptr [ %rnp.0, %do.body50.thread ], [ %rnp_start, %do.body50 ]
  %33 = load ptr, ptr @rcu_start_this_gp.___tp_str.174, align 4
  %34 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %35 = ptrtoint ptr %gp_seq.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %gp_seq.i, align 4
  %37 = ptrtoint ptr %level.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %level.i, align 1
  %39 = ptrtoint ptr %grplo.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %grplo.i, align 4
  %41 = ptrtoint ptr %grphi.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %grphi.i, align 8
  tail call fastcc void @trace_rcu_future_grace_period(ptr noundef %34, i32 noundef %36, i32 noundef %gp_seq_req, i8 noundef zeroext %38, i32 noundef %40, i32 noundef %42, ptr noundef %33) #24
  br label %unlock_out

land.lhs.true64:                                  ; preds = %do.body50.thread
  %parent = getelementptr inbounds %struct.rcu_node, ptr %rnp.0, i32 0, i32 20
  %43 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %parent, align 16
  %cmp65.not = icmp eq ptr %44, null
  br i1 %cmp65.not, label %if.end185, label %do.body68

do.body68:                                        ; preds = %land.lhs.true64
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %45 = load i32, ptr @debug_locks, align 4
  %tobool69.not = icmp eq i32 %45, 0
  br i1 %tobool69.not, label %if.end172, label %land.lhs.true70

land.lhs.true70:                                  ; preds = %do.body68
  %46 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %46, -16384
  %47 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 1
  %48 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %49, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1791
  %50 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i478 = and i32 %50, -16384
  %51 = inttoptr i32 %and.i478 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %51, i32 0, i32 3
  %52 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %53
  %54 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %arrayidx, align 4
  %add = add i32 %55, ptrtoint (ptr @lockdep_recursion to i32)
  %56 = inttoptr i32 %add to ptr
  %57 = ptrtoint ptr %56 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load volatile i32, ptr %56, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1792
  %59 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i447 = and i32 %59, -16384
  %60 = inttoptr i32 %and.i.i.i447 to ptr
  %preempt_count.i.i448 = getelementptr inbounds %struct.thread_info, ptr %60, i32 0, i32 1
  %61 = ptrtoint ptr %preempt_count.i.i448 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile i32, ptr %preempt_count.i.i448, align 4
  %sub.i = add i32 %62, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i448, align 4
  %tobool94.not = icmp eq i32 %58, 0
  br i1 %tobool94.not, label %land.rhs95, label %if.end172

land.rhs95:                                       ; preds = %land.lhs.true70
  %63 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i449 = and i32 %63, -16384
  %64 = inttoptr i32 %and.i.i.i449 to ptr
  %preempt_count.i.i450 = getelementptr inbounds %struct.thread_info, ptr %64, i32 0, i32 1
  %65 = ptrtoint ptr %preempt_count.i.i450 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %preempt_count.i.i450, align 4
  %add.i451 = add i32 %66, 1
  store volatile i32 %add.i451, ptr %preempt_count.i.i450, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1793
  %67 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %cpu, align 4
  %arrayidx119 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %68
  %69 = ptrtoint ptr %arrayidx119 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %arrayidx119, align 4
  %add120 = add i32 %70, ptrtoint (ptr @hardirqs_enabled to i32)
  %71 = inttoptr i32 %add120 to ptr
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %71, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1794
  %74 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i452 = and i32 %74, -16384
  %75 = inttoptr i32 %and.i.i.i452 to ptr
  %preempt_count.i.i453 = getelementptr inbounds %struct.thread_info, ptr %75, i32 0, i32 1
  %76 = ptrtoint ptr %preempt_count.i.i453 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %preempt_count.i.i453, align 4
  %sub.i454 = add i32 %77, -1
  store volatile i32 %sub.i454, ptr %preempt_count.i.i453, align 4
  %tobool127.not = icmp eq i32 %73, 0
  br i1 %tobool127.not, label %if.end172, label %land.rhs134

land.rhs134:                                      ; preds = %land.rhs95
  %.b440 = load i1, ptr @rcu_start_this_gp.__already_done, align 1
  br i1 %.b440, label %if.end172, label %if.then145, !prof !1646

if.then145:                                       ; preds = %land.rhs134
  store i1 true, ptr @rcu_start_this_gp.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1411, i32 noundef 9, ptr noundef null) #24
  br label %if.end172

if.end172:                                        ; preds = %if.then145, %land.rhs134, %land.rhs95, %land.lhs.true70, %do.body68
  tail call void @_raw_spin_unlock(ptr noundef %rnp.0) #24
  br label %if.end185

if.end185:                                        ; preds = %if.end172, %land.lhs.true64, %do.body50
  %parent186 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0, i32 0, i32 20
  %78 = ptrtoint ptr %parent186 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %parent186, align 16
  %tobool187.not = icmp eq ptr %79, null
  br i1 %tobool187.not, label %for.end, label %for.cond

for.end:                                          ; preds = %if.end185
  %80 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %and.i.i = and i32 %80, 3
  %tobool192.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool192.not, label %if.end195, label %if.then193

if.then193:                                       ; preds = %for.end
  %81 = load ptr, ptr @rcu_start_this_gp.___tp_str.176, align 4
  %82 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %83 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load volatile i32, ptr %gp_seq, align 4
  %level.i480 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0, i32 0, i32 18
  %85 = ptrtoint ptr %level.i480 to i32
  call void @__asan_load1_noabort(i32 %85)
  %86 = load i8, ptr %level.i480, align 1
  %grplo.i481 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0, i32 0, i32 15
  %87 = ptrtoint ptr %grplo.i481 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %grplo.i481, align 4
  %grphi.i482 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0, i32 0, i32 16
  %89 = ptrtoint ptr %grphi.i482 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %grphi.i482, align 8
  tail call fastcc void @trace_rcu_future_grace_period(ptr noundef %82, i32 noundef %84, i32 noundef %gp_seq_req, i8 noundef zeroext %86, i32 noundef %88, i32 noundef %90, ptr noundef %81) #24
  br label %unlock_out

if.end195:                                        ; preds = %for.end
  %91 = load ptr, ptr @rcu_start_this_gp.___tp_str.178, align 4
  %92 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %93 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load volatile i32, ptr %gp_seq, align 4
  %level.i484 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0, i32 0, i32 18
  %95 = ptrtoint ptr %level.i484 to i32
  call void @__asan_load1_noabort(i32 %95)
  %96 = load i8, ptr %level.i484, align 1
  %grplo.i485 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0, i32 0, i32 15
  %97 = ptrtoint ptr %grplo.i485 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %grplo.i485, align 4
  %grphi.i486 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0, i32 0, i32 16
  %99 = ptrtoint ptr %grphi.i486 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %grphi.i486, align 8
  tail call fastcc void @trace_rcu_future_grace_period(ptr noundef %92, i32 noundef %94, i32 noundef %gp_seq_req, i8 noundef zeroext %96, i32 noundef %98, i32 noundef %100, ptr noundef %91) #24
  %101 = load i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %102 = or i16 %101, 1
  store volatile i16 %102, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %103 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %103, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 32), align 128
  %104 = load volatile ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 8), align 4
  %tobool220.not = icmp eq ptr %104, null
  br i1 %tobool220.not, label %if.then221, label %if.end223

if.then221:                                       ; preds = %if.end195
  %105 = load ptr, ptr @rcu_start_this_gp.___tp_str.180, align 4
  %106 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %107 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load volatile i32, ptr %gp_seq, align 4
  %109 = ptrtoint ptr %level.i484 to i32
  call void @__asan_load1_noabort(i32 %109)
  %110 = load i8, ptr %level.i484, align 1
  %111 = ptrtoint ptr %grplo.i485 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %grplo.i485, align 4
  %113 = ptrtoint ptr %grphi.i486 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %grphi.i486, align 8
  tail call fastcc void @trace_rcu_future_grace_period(ptr noundef %106, i32 noundef %108, i32 noundef %gp_seq_req, i8 noundef zeroext %110, i32 noundef %112, i32 noundef %114, ptr noundef %105) #24
  br label %unlock_out

if.end223:                                        ; preds = %if.end195
  %115 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %116 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %117 = load ptr, ptr @rcu_start_this_gp.___tp_str.182, align 4
  tail call fastcc void @trace_rcu_grace_period(ptr noundef %115, i32 noundef %116, ptr noundef %117)
  br label %unlock_out

unlock_out:                                       ; preds = %if.end223, %if.then221, %if.then193, %if.then60, %if.then43
  %rnp.0509 = phi ptr [ %rnp.0, %if.then43 ], [ %rnp.0.lcssa507, %if.then60 ], [ %rnp.0, %if.then193 ], [ %rnp.0, %if.end223 ], [ %rnp.0, %if.then221 ]
  %ret.0.off0 = phi i1 [ false, %if.then43 ], [ false, %if.then60 ], [ false, %if.then193 ], [ true, %if.end223 ], [ false, %if.then221 ]
  %118 = ptrtoint ptr %gp_seq_needed to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %gp_seq_needed, align 16
  %sub228 = sub i32 %gp_seq_req, %119
  %cmp229 = icmp slt i32 %sub228, 0
  br i1 %cmp229, label %do.body236, label %if.end254

do.body236:                                       ; preds = %unlock_out
  %gp_seq_needed238 = getelementptr inbounds %struct.rcu_node, ptr %rnp_start, i32 0, i32 2
  %120 = ptrtoint ptr %gp_seq_needed238 to i32
  call void @__asan_store4_noabort(i32 %120)
  store volatile i32 %119, ptr %gp_seq_needed238, align 16
  %121 = ptrtoint ptr %gp_seq_needed to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %gp_seq_needed, align 16
  %gp_seq_needed249 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 1
  %123 = ptrtoint ptr %gp_seq_needed249 to i32
  call void @__asan_store4_noabort(i32 %123)
  store volatile i32 %122, ptr %gp_seq_needed249, align 4
  br label %if.end254

if.end254:                                        ; preds = %do.body236, %unlock_out
  br i1 %cmp25.not, label %if.end387, label %do.body259

do.body259:                                       ; preds = %if.end254
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %124 = load i32, ptr @debug_locks, align 4
  %tobool261.not = icmp eq i32 %124, 0
  br i1 %tobool261.not, label %if.end374, label %land.lhs.true262

land.lhs.true262:                                 ; preds = %do.body259
  %125 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i455 = and i32 %125, -16384
  %126 = inttoptr i32 %and.i.i.i455 to ptr
  %preempt_count.i.i456 = getelementptr inbounds %struct.thread_info, ptr %126, i32 0, i32 1
  %127 = ptrtoint ptr %preempt_count.i.i456 to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load volatile i32, ptr %preempt_count.i.i456, align 4
  %add.i457 = add i32 %128, 1
  store volatile i32 %add.i457, ptr %preempt_count.i.i456, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1795
  %129 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i491 = and i32 %129, -16384
  %130 = inttoptr i32 %and.i491 to ptr
  %cpu285 = getelementptr inbounds %struct.thread_info, ptr %130, i32 0, i32 3
  %131 = ptrtoint ptr %cpu285 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %cpu285, align 4
  %arrayidx286 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %132
  %133 = ptrtoint ptr %arrayidx286 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %arrayidx286, align 4
  %add287 = add i32 %134, ptrtoint (ptr @lockdep_recursion to i32)
  %135 = inttoptr i32 %add287 to ptr
  %136 = ptrtoint ptr %135 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load volatile i32, ptr %135, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1796
  %138 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i458 = and i32 %138, -16384
  %139 = inttoptr i32 %and.i.i.i458 to ptr
  %preempt_count.i.i459 = getelementptr inbounds %struct.thread_info, ptr %139, i32 0, i32 1
  %140 = ptrtoint ptr %preempt_count.i.i459 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load volatile i32, ptr %preempt_count.i.i459, align 4
  %sub.i460 = add i32 %141, -1
  store volatile i32 %sub.i460, ptr %preempt_count.i.i459, align 4
  %tobool294.not = icmp eq i32 %137, 0
  br i1 %tobool294.not, label %land.rhs295, label %if.end374

land.rhs295:                                      ; preds = %land.lhs.true262
  %142 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i461 = and i32 %142, -16384
  %143 = inttoptr i32 %and.i.i.i461 to ptr
  %preempt_count.i.i462 = getelementptr inbounds %struct.thread_info, ptr %143, i32 0, i32 1
  %144 = ptrtoint ptr %preempt_count.i.i462 to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load volatile i32, ptr %preempt_count.i.i462, align 4
  %add.i463 = add i32 %145, 1
  store volatile i32 %add.i463, ptr %preempt_count.i.i462, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1797
  %146 = ptrtoint ptr %cpu285 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %cpu285, align 4
  %arrayidx319 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %147
  %148 = ptrtoint ptr %arrayidx319 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load i32, ptr %arrayidx319, align 4
  %add320 = add i32 %149, ptrtoint (ptr @hardirqs_enabled to i32)
  %150 = inttoptr i32 %add320 to ptr
  %151 = ptrtoint ptr %150 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load volatile i32, ptr %150, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1798
  %153 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i464 = and i32 %153, -16384
  %154 = inttoptr i32 %and.i.i.i464 to ptr
  %preempt_count.i.i465 = getelementptr inbounds %struct.thread_info, ptr %154, i32 0, i32 1
  %155 = ptrtoint ptr %preempt_count.i.i465 to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load volatile i32, ptr %preempt_count.i.i465, align 4
  %sub.i466 = add i32 %156, -1
  store volatile i32 %sub.i466, ptr %preempt_count.i.i465, align 4
  %tobool327.not = icmp eq i32 %152, 0
  br i1 %tobool327.not, label %if.end374, label %land.rhs336

land.rhs336:                                      ; preds = %land.rhs295
  %.b438439 = load i1, ptr @rcu_start_this_gp.__already_done.184, align 1
  br i1 %.b438439, label %if.end374, label %if.then347, !prof !1646

if.then347:                                       ; preds = %land.rhs336
  store i1 true, ptr @rcu_start_this_gp.__already_done.184, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1437, i32 noundef 9, ptr noundef null) #24
  br label %if.end374

if.end374:                                        ; preds = %if.then347, %land.rhs336, %land.rhs295, %land.lhs.true262, %do.body259
  tail call void @_raw_spin_unlock(ptr noundef %rnp.0509) #24
  br label %if.end387

if.end387:                                        ; preds = %if.end374, %if.end254
  ret i1 %ret.0.off0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @poll_state_synchronize_rcu(i32 noundef %oldstate) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %sub.i = sub i32 %0, %oldstate
  %cmp.i = icmp sgt i32 %sub.i, -1
  br i1 %cmp.i, label %do.end, label %return

do.end:                                           ; preds = %entry
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1799
  br label %return

return:                                           ; preds = %do.end, %entry
  ret i1 %cmp.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cond_synchronize_rcu(i32 noundef %oldstate) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %sub.i.i = sub i32 %0, %oldstate
  %cmp.i.i = icmp sgt i32 %sub.i.i, -1
  br i1 %cmp.i.i, label %poll_state_synchronize_rcu.exit.thread, label %if.then

poll_state_synchronize_rcu.exit.thread:           ; preds = %entry
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1799
  br label %if.end

if.then:                                          ; preds = %entry
  tail call void @synchronize_rcu()
  br label %if.end

if.end:                                           ; preds = %if.then, %poll_state_synchronize_rcu.exit.thread
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_barrier() #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 17), align 8
  %add1.i = add i32 %0, 7
  %and.i = and i32 %add1.i, -4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1778
  %1 = load ptr, ptr @rcu_barrier.___tp_str, align 4
  %2 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), i32 noundef 4) #24
  %3 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), align 4
  tail call fastcc void @trace_rcu_barrier(ptr noundef %2, ptr noundef %1, i32 noundef -1, i32 noundef %3, i32 noundef %and.i) #24
  tail call void @mutex_lock_nested(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 14), i32 noundef 0) #24
  %4 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 17), align 8
  %sub.i = sub i32 %4, %and.i
  %cmp.i = icmp sgt i32 %sub.i, -1
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load ptr, ptr @rcu_barrier.___tp_str.28, align 4
  %6 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %call.i.i.i92 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), i32 noundef 4) #24
  %7 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), align 4
  tail call fastcc void @trace_rcu_barrier(ptr noundef %6, ptr noundef %5, i32 noundef -1, i32 noundef %7, i32 noundef %4) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1800
  br label %cleanup

if.end:                                           ; preds = %entry
  %add.i = add i32 %4, 1
  store volatile i32 %add.i, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 17), align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1780
  %8 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 17), align 8
  %and.i.i = and i32 %8, 3
  %cmp.not.i = icmp eq i32 %and.i.i, 1
  br i1 %cmp.not.i, label %rcu_seq_start.exit, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.end
  %.b49.i = load i1, ptr @rcu_seq_start.__already_done, align 1
  br i1 %.b49.i, label %rcu_seq_start.exit, label %if.then.i, !prof !1646

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @rcu_seq_start.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.242, i32 noundef 59, i32 noundef 9, ptr noundef null) #24
  br label %rcu_seq_start.exit

rcu_seq_start.exit:                               ; preds = %if.then.i, %land.rhs.i, %if.end
  %9 = load ptr, ptr @rcu_barrier.___tp_str.30, align 4
  %10 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 17), align 8
  %11 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %call.i.i.i93 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), i32 noundef 4) #24
  %12 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), align 4
  tail call fastcc void @trace_rcu_barrier(ptr noundef %11, ptr noundef %9, i32 noundef -1, i32 noundef %12, i32 noundef %10) #24
  store i32 0, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 16), align 16
  tail call void @__init_swait_queue_head(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 16, i32 1), ptr noundef nonnull @.str.243, ptr noundef nonnull @init_completion.__key) #24
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), i32 noundef 4) #24
  store volatile i32 2, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), align 4
  tail call void @cpus_read_lock() #24
  %call7131 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %13 = load i32, ptr @nr_cpu_ids, align 4
  %cmp132 = icmp ult i32 %call7131, %13
  br i1 %cmp132, label %cpu_online.exit, label %for.end

cpu_online.exit:                                  ; preds = %for.cond.backedge, %rcu_seq_start.exit
  %call7133 = phi i32 [ %call7, %for.cond.backedge ], [ %call7131, %rcu_seq_start.exit ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call7133
  %14 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx, align 4
  %add = add i32 %15, ptrtoint (ptr @rcu_data to i32)
  %16 = inttoptr i32 %add to ptr
  %div3.i.i.i = lshr i32 %call7133, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %17 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i = and i32 %call7133, 31
  %19 = shl nuw i32 1, %and.i.i.i
  %20 = and i32 %18, %19
  %tobool.i.not = icmp eq i32 %20, 0
  br i1 %tobool.i.not, label %land.lhs.true, label %if.end18, !prof !1645

land.lhs.true:                                    ; preds = %cpu_online.exit
  %call16 = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %16)
  br i1 %call16, label %if.end18, label %for.cond.backedge

if.end18:                                         ; preds = %land.lhs.true, %cpu_online.exit
  %len.i = getelementptr inbounds %struct.rcu_data, ptr %16, i32 0, i32 13, i32 3
  %call.i.i.i94 = tail call zeroext i1 @__kasan_check_read(ptr noundef %len.i, i32 noundef 4) #24
  %21 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %len.i, align 4
  %tobool20.not = icmp eq i32 %22, 0
  br i1 %tobool20.not, label %if.else, label %land.lhs.true21

land.lhs.true21:                                  ; preds = %if.end18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %23 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i95 = icmp ugt i32 %23, %call7133
  br i1 %cmp.not.i.i.i.i95, label %cpu_online.exit103, label %land.rhs.i.i.i.i97

land.rhs.i.i.i.i97:                               ; preds = %land.lhs.true21
  %.b37.i.i.i.i96 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i96, label %cpu_online.exit103, label %if.then.i.i.i.i98, !prof !1646

if.then.i.i.i.i98:                                ; preds = %land.rhs.i.i.i.i97
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit103

cpu_online.exit103:                               ; preds = %if.then.i.i.i.i98, %land.rhs.i.i.i.i97, %land.lhs.true21
  %24 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %26 = and i32 %25, %19
  %tobool.i102.not = icmp eq i32 %26, 0
  br i1 %tobool.i102.not, label %if.else, label %if.then23

if.then23:                                        ; preds = %cpu_online.exit103
  %27 = load ptr, ptr @rcu_barrier.___tp_str.32, align 4
  %28 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 17), align 8
  %29 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %call.i.i.i104 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), i32 noundef 4) #24
  %30 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), align 4
  tail call fastcc void @trace_rcu_barrier(ptr noundef %29, ptr noundef %27, i32 noundef %call7133, i32 noundef %30, i32 noundef %28) #24
  %31 = inttoptr i32 %call7133 to ptr
  %call25 = tail call i32 @smp_call_function_single(i32 noundef %call7133, ptr noundef nonnull @rcu_barrier_func, ptr noundef %31, i32 noundef 1) #24
  br label %for.cond.backedge

if.else:                                          ; preds = %cpu_online.exit103, %if.end18
  %call.i.i.i106 = tail call zeroext i1 @__kasan_check_read(ptr noundef %len.i, i32 noundef 4) #24
  %32 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %len.i, align 4
  %tobool28.not = icmp eq i32 %33, 0
  br i1 %tobool28.not, label %if.else52, label %land.lhs.true29

land.lhs.true29:                                  ; preds = %if.else
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %34 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i107 = icmp ugt i32 %34, %call7133
  br i1 %cmp.not.i.i.i.i107, label %cpu_online.exit115, label %land.rhs.i.i.i.i109

land.rhs.i.i.i.i109:                              ; preds = %land.lhs.true29
  %.b37.i.i.i.i108 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i108, label %cpu_online.exit115, label %if.then.i.i.i.i110, !prof !1646

if.then.i.i.i.i110:                               ; preds = %land.rhs.i.i.i.i109
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit115

cpu_online.exit115:                               ; preds = %if.then.i.i.i.i110, %land.rhs.i.i.i.i109, %land.lhs.true29
  %35 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %37 = and i32 %36, %19
  %tobool.i114.not = icmp eq i32 %37, 0
  br i1 %tobool.i114.not, label %if.then39, label %if.else52, !prof !1645

if.then39:                                        ; preds = %cpu_online.exit115
  %38 = load ptr, ptr @rcu_barrier.___tp_str.34, align 4
  %39 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 17), align 8
  tail call fastcc void @rcu_barrier_trace(ptr noundef %38, i32 noundef %call7133, i32 noundef %39)
  %40 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #24, !srcloc !1649
  %and.i.i116 = and i32 %40, 128
  %tobool43.not = icmp eq i32 %and.i.i116, 0
  tail call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #24, !srcloc !1801
  br i1 %tobool43.not, label %if.then45, label %if.end46

if.then45:                                        ; preds = %if.then39
  tail call void @trace_hardirqs_off() #24
  br label %if.end46

if.end46:                                         ; preds = %if.then45, %if.then39
  %41 = inttoptr i32 %call7133 to ptr
  tail call void @rcu_barrier_func(ptr noundef %41)
  tail call void @trace_hardirqs_on() #24
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #24, !srcloc !1802
  br label %for.cond.backedge

if.else52:                                        ; preds = %cpu_online.exit115, %if.else
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %42 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i117 = icmp ugt i32 %42, %call7133
  br i1 %cmp.not.i.i.i.i117, label %cpu_online.exit125, label %land.rhs.i.i.i.i119

land.rhs.i.i.i.i119:                              ; preds = %if.else52
  %.b37.i.i.i.i118 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i118, label %cpu_online.exit125, label %if.then.i.i.i.i120, !prof !1646

if.then.i.i.i.i120:                               ; preds = %land.rhs.i.i.i.i119
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit125

cpu_online.exit125:                               ; preds = %if.then.i.i.i.i120, %land.rhs.i.i.i.i119, %if.else52
  %43 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %45 = and i32 %44, %19
  %tobool.i124.not = icmp eq i32 %45, 0
  br i1 %tobool.i124.not, label %if.then62, label %if.else64, !prof !1645

if.then62:                                        ; preds = %cpu_online.exit125
  %46 = load ptr, ptr @rcu_barrier.___tp_str.36, align 4
  %47 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 17), align 8
  tail call fastcc void @rcu_barrier_trace(ptr noundef %46, i32 noundef %call7133, i32 noundef %47)
  br label %for.cond.backedge

if.else64:                                        ; preds = %cpu_online.exit125
  %48 = load ptr, ptr @rcu_barrier.___tp_str.38, align 4
  %49 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 17), align 8
  %50 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %call.i.i.i126 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), i32 noundef 4) #24
  %51 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), align 4
  tail call fastcc void @trace_rcu_barrier(ptr noundef %50, ptr noundef %48, i32 noundef %call7133, i32 noundef %51, i32 noundef %49) #24
  br label %for.cond.backedge

for.cond.backedge:                                ; preds = %if.else64, %if.then62, %if.end46, %if.then23, %land.lhs.true
  %call7 = tail call i32 @cpumask_next(i32 noundef %call7133, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %52 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call7, %52
  br i1 %cmp, label %cpu_online.exit, label %for.end

for.end:                                          ; preds = %for.cond.backedge, %rcu_seq_start.exit
  tail call void @cpus_read_unlock() #24
  %call.i.i91 = tail call zeroext i1 @__kasan_check_write(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), i32 noundef 4) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1803
  tail call void @llvm.prefetch.p0(ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), i32 1, i32 3, i32 1) #24
  %53 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), i32 2, ptr elementtype(i32) getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15)) #24, !srcloc !1804
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %53, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1805
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %cmp.i.i, label %if.then70, label %if.end71

if.then70:                                        ; preds = %for.end
  tail call void @complete(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 16)) #24
  br label %if.end71

if.end71:                                         ; preds = %if.then70, %for.end
  tail call void @wait_for_completion(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 16)) #24
  %54 = load ptr, ptr @rcu_barrier.___tp_str.40, align 4
  %55 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 17), align 8
  %56 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %call.i.i.i127 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), i32 noundef 4) #24
  %57 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), align 4
  tail call fastcc void @trace_rcu_barrier(ptr noundef %56, ptr noundef %54, i32 noundef -1, i32 noundef %57, i32 noundef %55) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1806
  %58 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 17), align 8
  %and.i.i128 = and i32 %58, 3
  %tobool.not.i = icmp eq i32 %and.i.i128, 0
  br i1 %tobool.not.i, label %land.rhs.i129, label %rcu_seq_end.exit

land.rhs.i129:                                    ; preds = %if.end71
  %.b55.i = load i1, ptr @rcu_seq_end.__already_done, align 1
  br i1 %.b55.i, label %rcu_seq_end.exit, label %if.then.i130, !prof !1646

if.then.i130:                                     ; preds = %land.rhs.i129
  store i1 true, ptr @rcu_seq_end.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.242, i32 noundef 72, i32 noundef 9, ptr noundef null) #24
  br label %rcu_seq_end.exit

rcu_seq_end.exit:                                 ; preds = %if.then.i130, %land.rhs.i129, %if.end71
  %59 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 17), align 8
  %or.i.i = or i32 %59, 3
  %add.i.i = add i32 %or.i.i, 1
  store volatile i32 %add.i.i, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 17), align 8
  br label %cleanup

cleanup:                                          ; preds = %rcu_seq_end.exit, %if.then
  tail call void @mutex_unlock(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 14)) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_barrier_trace(ptr noundef %s, i32 noundef %cpu, i32 noundef %done) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), i32 noundef 4) #24
  %1 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), align 4
  tail call fastcc void @trace_rcu_barrier(ptr noundef %0, ptr noundef %s, i32 noundef %cpu, i32 noundef %1, i32 noundef %done)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @cpus_read_lock() local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @cpu_online(i32 noundef %cpu) unnamed_addr #7 align 64 {
entry:
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i = icmp ugt i32 %0, %cpu
  br i1 %cmp.not.i.i.i, label %cpumask_test_cpu.exit, label %land.rhs.i.i.i

land.rhs.i.i.i:                                   ; preds = %entry
  %.b37.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i, label %cpumask_test_cpu.exit, label %if.then.i.i.i, !prof !1646

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpumask_test_cpu.exit

cpumask_test_cpu.exit:                            ; preds = %if.then.i.i.i, %land.rhs.i.i.i, %entry
  %div3.i.i = lshr i32 %cpu, 5
  %arrayidx.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i
  %1 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %cpu, 31
  %3 = shl nuw i32 1, %and.i.i
  %4 = and i32 %2, %3
  %tobool = icmp ne i32 %4, 0
  ret i1 %tobool
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @smp_call_function_single(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_barrier_func(ptr noundef %cpu_in) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %cpu_in to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %0
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %arrayidx, align 4
  %add = add i32 %2, ptrtoint (ptr @rcu_data to i32)
  %3 = inttoptr i32 %add to ptr
  %4 = load ptr, ptr @rcu_barrier_func.___tp_str, align 4
  %5 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 17), align 8
  %6 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), i32 noundef 4) #24
  %7 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), align 4
  tail call fastcc void @trace_rcu_barrier(ptr noundef %6, ptr noundef %4, i32 noundef -1, i32 noundef %7, i32 noundef %5) #24
  %barrier_head = getelementptr inbounds %struct.rcu_data, ptr %3, i32 0, i32 26
  %func = getelementptr inbounds %struct.rcu_data, ptr %3, i32 0, i32 26, i32 1
  %8 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr @rcu_barrier_callback, ptr %func, align 4
  %call.i = tail call i32 @debug_object_activate(ptr noundef %barrier_head, ptr noundef nonnull @rcuhead_debug_descr) #24
  tail call void @debug_object_active_state(ptr noundef %barrier_head, ptr noundef nonnull @rcuhead_debug_descr, i32 noundef 0, i32 noundef 1) #24
  tail call fastcc void @rcu_nocb_lock(ptr noundef %3)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %9 = load volatile i32, ptr @jiffies, align 128
  %call.i60 = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %3) #24
  br i1 %call.i60, label %rcu_nocb_flush_bypass.exit, label %if.end36

rcu_nocb_flush_bypass.exit:                       ; preds = %entry
  tail call fastcc void @rcu_lockdep_assert_cblist_protected(ptr noundef %3) #24
  tail call fastcc void @rcu_nocb_bypass_lock(ptr noundef %3) #24
  %call1.i = tail call fastcc zeroext i1 @rcu_nocb_do_flush_bypass(ptr noundef %3, ptr noundef null, i32 noundef %9) #24
  br i1 %call1.i, label %if.end36, label %land.rhs

land.rhs:                                         ; preds = %rcu_nocb_flush_bypass.exit
  %.b59 = load i1, ptr @rcu_barrier_func.__already_done, align 1
  br i1 %.b59, label %if.end36, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @rcu_barrier_func.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3998, i32 noundef 9, ptr noundef null) #24
  br label %if.end36

if.end36:                                         ; preds = %if.then, %land.rhs, %rcu_nocb_flush_bypass.exit, %entry
  %cblist = getelementptr inbounds %struct.rcu_data, ptr %3, i32 0, i32 13
  %call45 = tail call zeroext i1 @rcu_segcblist_entrain(ptr noundef %cblist, ptr noundef %barrier_head) #24
  br i1 %call45, label %if.then46, label %if.else

if.then46:                                        ; preds = %if.end36
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), i32 noundef 4) #24
  tail call void @llvm.prefetch.p0(ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), i32 1, i32 3, i32 1) #24
  %10 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), i32 1, ptr elementtype(i32) getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15)) #24, !srcloc !1807
  br label %if.end49

if.else:                                          ; preds = %if.end36
  tail call void @debug_object_active_state(ptr noundef %barrier_head, ptr noundef nonnull @rcuhead_debug_descr, i32 noundef 1, i32 noundef 0) #24
  tail call void @debug_object_deactivate(ptr noundef %barrier_head, ptr noundef nonnull @rcuhead_debug_descr) #24
  %11 = load ptr, ptr @rcu_barrier_func.___tp_str.245, align 4
  %12 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 17), align 8
  %13 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %call.i.i.i61 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), i32 noundef 4) #24
  %14 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), align 4
  tail call fastcc void @trace_rcu_barrier(ptr noundef %13, ptr noundef %11, i32 noundef -1, i32 noundef %14, i32 noundef %12) #24
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.then46
  tail call fastcc void @rcu_nocb_unlock(ptr noundef %3)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @cpus_read_unlock() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @complete(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @wait_for_completion(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rcutree_prepare_cpu(i32 noundef %cpu) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr @rcu_data to i32)
  %2 = inttoptr i32 %add to ptr
  %call5 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @rcu_state) #24
  %qlen_last_fqs_check = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 14
  %3 = ptrtoint ptr %qlen_last_fqs_check to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %qlen_last_fqs_check, align 8
  %4 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 28), align 16
  %n_force_qs_snap = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 16
  %5 = ptrtoint ptr %n_force_qs_snap to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %n_force_qs_snap, align 32
  %6 = load i32, ptr @blimit, align 4
  %blimit = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 17
  %7 = ptrtoint ptr %blimit to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %blimit, align 4
  %dynticks_nesting = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 19
  %8 = ptrtoint ptr %dynticks_nesting to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 1, ptr %dynticks_nesting, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %9 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %9, 0
  br i1 %tobool.not, label %if.end114, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %10 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %13, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1808
  %14 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i to ptr
  %cpu38 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 3
  %16 = ptrtoint ptr %cpu38 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %cpu38, align 4
  %arrayidx39 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %17
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx39, align 4
  %add40 = add i32 %19, ptrtoint (ptr @lockdep_recursion to i32)
  %20 = inttoptr i32 %add40 to ptr
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %20, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1809
  %23 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i330 = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i330 to ptr
  %preempt_count.i.i331 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %preempt_count.i.i331 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %preempt_count.i.i331, align 4
  %sub.i = add i32 %26, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i331, align 4
  %tobool47.not = icmp eq i32 %22, 0
  br i1 %tobool47.not, label %land.rhs, label %if.end114

land.rhs:                                         ; preds = %land.lhs.true
  %27 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i332 = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i.i332 to ptr
  %preempt_count.i.i333 = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %preempt_count.i.i333 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %preempt_count.i.i333, align 4
  %add.i334 = add i32 %30, 1
  store volatile i32 %add.i334, ptr %preempt_count.i.i333, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1810
  %31 = ptrtoint ptr %cpu38 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %cpu38, align 4
  %arrayidx71 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %32
  %33 = ptrtoint ptr %arrayidx71 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx71, align 4
  %add72 = add i32 %34, ptrtoint (ptr @hardirqs_enabled to i32)
  %35 = inttoptr i32 %add72 to ptr
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %35, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1811
  %38 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i335 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i335 to ptr
  %preempt_count.i.i336 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i336 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i336, align 4
  %sub.i337 = add i32 %41, -1
  store volatile i32 %sub.i337, ptr %preempt_count.i.i336, align 4
  %tobool79.not = icmp eq i32 %37, 0
  br i1 %tobool79.not, label %if.end114, label %land.rhs83

land.rhs83:                                       ; preds = %land.rhs
  %.b323 = load i1, ptr @rcutree_prepare_cpu.__already_done, align 1
  br i1 %.b323, label %if.end114, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs83
  store i1 true, ptr @rcutree_prepare_cpu.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4173, i32 noundef 9, ptr noundef null) #24
  br label %if.end114

if.end114:                                        ; preds = %if.then, %land.rhs83, %land.rhs, %land.lhs.true, %entry
  tail call void @_raw_spin_unlock(ptr noundef nonnull @rcu_state) #24
  %flags1.i.i = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 13, i32 5
  %42 = ptrtoint ptr %flags1.i.i to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load volatile i8, ptr %flags1.i.i, align 4
  %44 = and i8 %43, 1
  %tobool.i.i.not = icmp eq i8 %44, 0
  br i1 %tobool.i.i.not, label %if.then128, label %if.end130

if.then128:                                       ; preds = %if.end114
  %cblist = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 13
  tail call void @rcu_segcblist_init(ptr noundef %cblist) #24
  br label %if.end130

if.end130:                                        ; preds = %if.then128, %if.end114
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 7
  %45 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %mynode, align 16
  tail call void @_raw_spin_lock(ptr noundef %46) #24
  %beenonline = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 4
  %47 = ptrtoint ptr %beenonline to i32
  call void @__asan_store1_noabort(i32 %47)
  store i8 1, ptr %beenonline, align 1
  %gp_seq = getelementptr inbounds %struct.rcu_node, ptr %46, i32 0, i32 1
  %48 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %gp_seq, align 4
  %50 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %49, ptr %2, align 128
  %gp_seq_needed = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 1
  %51 = ptrtoint ptr %gp_seq_needed to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %49, ptr %gp_seq_needed, align 4
  %cpu_no_qs = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 2
  %52 = ptrtoint ptr %cpu_no_qs to i32
  call void @__asan_store1_noabort(i32 %52)
  store i8 1, ptr %cpu_no_qs, align 8
  %core_needs_qs = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 3
  %53 = ptrtoint ptr %core_needs_qs to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 0, ptr %core_needs_qs, align 2
  %rcu_iw_pending = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 61
  %54 = ptrtoint ptr %rcu_iw_pending to i32
  call void @__asan_store1_noabort(i32 %54)
  store i8 0, ptr %rcu_iw_pending, align 4
  %rcu_iw = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 60
  %55 = ptrtoint ptr %rcu_iw to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr null, ptr %rcu_iw, align 4
  %.compoundliteral.sroa.2.0.rcu_iw.sroa_idx = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 60, i32 0, i32 1
  %56 = ptrtoint ptr %.compoundliteral.sroa.2.0.rcu_iw.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 8, ptr %.compoundliteral.sroa.2.0.rcu_iw.sroa_idx, align 4
  %.compoundliteral.sroa.3.0.rcu_iw.sroa_idx = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 60, i32 1
  %57 = ptrtoint ptr %.compoundliteral.sroa.3.0.rcu_iw.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr @rcu_iw_handler, ptr %.compoundliteral.sroa.3.0.rcu_iw.sroa_idx, align 4
  %.compoundliteral.sroa.4.0.rcu_iw.sroa_idx = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 60, i32 2
  %58 = ptrtoint ptr %.compoundliteral.sroa.4.0.rcu_iw.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr null, ptr %.compoundliteral.sroa.4.0.rcu_iw.sroa_idx, align 4
  %sub = add i32 %49, -1
  %rcu_iw_gp_seq = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 62
  %59 = ptrtoint ptr %rcu_iw_gp_seq to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %sub, ptr %rcu_iw_gp_seq, align 8
  %60 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %61 = load ptr, ptr @rcutree_prepare_cpu.___tp_str, align 4
  tail call fastcc void @trace_rcu_grace_period(ptr noundef %60, i32 noundef %49, ptr noundef %61)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %62 = load i32, ptr @debug_locks, align 4
  %tobool150.not = icmp eq i32 %62, 0
  br i1 %tobool150.not, label %if.end263, label %land.lhs.true151

land.lhs.true151:                                 ; preds = %if.end130
  %63 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i338 = and i32 %63, -16384
  %64 = inttoptr i32 %and.i.i.i338 to ptr
  %preempt_count.i.i339 = getelementptr inbounds %struct.thread_info, ptr %64, i32 0, i32 1
  %65 = ptrtoint ptr %preempt_count.i.i339 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %preempt_count.i.i339, align 4
  %add.i340 = add i32 %66, 1
  store volatile i32 %add.i340, ptr %preempt_count.i.i339, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1812
  %67 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i350 = and i32 %67, -16384
  %68 = inttoptr i32 %and.i350 to ptr
  %cpu174 = getelementptr inbounds %struct.thread_info, ptr %68, i32 0, i32 3
  %69 = ptrtoint ptr %cpu174 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %cpu174, align 4
  %arrayidx175 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %70
  %71 = ptrtoint ptr %arrayidx175 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %arrayidx175, align 4
  %add176 = add i32 %72, ptrtoint (ptr @lockdep_recursion to i32)
  %73 = inttoptr i32 %add176 to ptr
  %74 = ptrtoint ptr %73 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load volatile i32, ptr %73, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1813
  %76 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i341 = and i32 %76, -16384
  %77 = inttoptr i32 %and.i.i.i341 to ptr
  %preempt_count.i.i342 = getelementptr inbounds %struct.thread_info, ptr %77, i32 0, i32 1
  %78 = ptrtoint ptr %preempt_count.i.i342 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load volatile i32, ptr %preempt_count.i.i342, align 4
  %sub.i343 = add i32 %79, -1
  store volatile i32 %sub.i343, ptr %preempt_count.i.i342, align 4
  %tobool183.not = icmp eq i32 %75, 0
  br i1 %tobool183.not, label %land.rhs184, label %if.end263

land.rhs184:                                      ; preds = %land.lhs.true151
  %80 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i344 = and i32 %80, -16384
  %81 = inttoptr i32 %and.i.i.i344 to ptr
  %preempt_count.i.i345 = getelementptr inbounds %struct.thread_info, ptr %81, i32 0, i32 1
  %82 = ptrtoint ptr %preempt_count.i.i345 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile i32, ptr %preempt_count.i.i345, align 4
  %add.i346 = add i32 %83, 1
  store volatile i32 %add.i346, ptr %preempt_count.i.i345, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1814
  %84 = ptrtoint ptr %cpu174 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %cpu174, align 4
  %arrayidx208 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %85
  %86 = ptrtoint ptr %arrayidx208 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %arrayidx208, align 4
  %add209 = add i32 %87, ptrtoint (ptr @hardirqs_enabled to i32)
  %88 = inttoptr i32 %add209 to ptr
  %89 = ptrtoint ptr %88 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load volatile i32, ptr %88, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1815
  %91 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i347 = and i32 %91, -16384
  %92 = inttoptr i32 %and.i.i.i347 to ptr
  %preempt_count.i.i348 = getelementptr inbounds %struct.thread_info, ptr %92, i32 0, i32 1
  %93 = ptrtoint ptr %preempt_count.i.i348 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load volatile i32, ptr %preempt_count.i.i348, align 4
  %sub.i349 = add i32 %94, -1
  store volatile i32 %sub.i349, ptr %preempt_count.i.i348, align 4
  %tobool216.not = icmp eq i32 %90, 0
  br i1 %tobool216.not, label %if.end263, label %land.rhs225

land.rhs225:                                      ; preds = %land.rhs184
  %.b321322 = load i1, ptr @rcutree_prepare_cpu.__already_done.43, align 1
  br i1 %.b321322, label %if.end263, label %if.then236, !prof !1646

if.then236:                                       ; preds = %land.rhs225
  store i1 true, ptr @rcutree_prepare_cpu.__already_done.43, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4198, i32 noundef 9, ptr noundef null) #24
  br label %if.end263

if.end263:                                        ; preds = %if.then236, %land.rhs225, %land.rhs184, %land.lhs.true151, %if.end130
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %46, i32 noundef %call5) #24
  tail call fastcc void @rcu_spawn_cpu_nocb_kthread(i32 noundef %cpu)
  %95 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 3), align 16
  %add289 = add i32 %95, 1
  store volatile i32 %add289, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 3), align 16
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_segcblist_init(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_iw_handler(ptr nocapture noundef %iwp) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %mynode = getelementptr i8, ptr %iwp, i32 -900
  %0 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mynode, align 16
  tail call void @_raw_spin_lock(ptr noundef %1) #24
  %rcu_iw_pending = getelementptr i8, ptr %iwp, i32 16
  %2 = ptrtoint ptr %rcu_iw_pending to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %rcu_iw_pending, align 4, !range !1644
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %land.rhs, label %if.then45.critedge

land.rhs:                                         ; preds = %entry
  %.b177 = load i1, ptr @rcu_iw_handler.__already_done, align 1
  br i1 %.b177, label %do.body49, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @rcu_iw_handler.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 192, i32 noundef 9, ptr noundef null) #24
  br label %do.body49

if.then45.critedge:                               ; preds = %entry
  %gp_seq = getelementptr inbounds %struct.rcu_node, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gp_seq, align 4
  %rcu_iw_gp_seq = getelementptr i8, ptr %iwp, i32 20
  %6 = ptrtoint ptr %rcu_iw_gp_seq to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %rcu_iw_gp_seq, align 8
  %7 = ptrtoint ptr %rcu_iw_pending to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 0, ptr %rcu_iw_pending, align 4
  br label %do.body49

do.body49:                                        ; preds = %if.then45.critedge, %if.then, %land.rhs
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %8 = load i32, ptr @debug_locks, align 4
  %tobool51.not = icmp eq i32 %8, 0
  br i1 %tobool51.not, label %if.end153, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body49
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1816
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 3
  %15 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %16
  %17 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx, align 4
  %add = add i32 %18, ptrtoint (ptr @lockdep_recursion to i32)
  %19 = inttoptr i32 %add to ptr
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %19, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1817
  %22 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i182 = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i182 to ptr
  %preempt_count.i.i183 = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i183 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i183, align 4
  %sub.i = add i32 %25, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i183, align 4
  %tobool74.not = icmp eq i32 %21, 0
  br i1 %tobool74.not, label %land.rhs75, label %if.end153

land.rhs75:                                       ; preds = %land.lhs.true
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i184 = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i184 to ptr
  %preempt_count.i.i185 = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i185 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i185, align 4
  %add.i186 = add i32 %29, 1
  store volatile i32 %add.i186, ptr %preempt_count.i.i185, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1818
  %30 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %cpu, align 4
  %arrayidx99 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %31
  %32 = ptrtoint ptr %arrayidx99 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %arrayidx99, align 4
  %add100 = add i32 %33, ptrtoint (ptr @hardirqs_enabled to i32)
  %34 = inttoptr i32 %add100 to ptr
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %34, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1819
  %37 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i187 = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i.i187 to ptr
  %preempt_count.i.i188 = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %preempt_count.i.i188 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %preempt_count.i.i188, align 4
  %sub.i189 = add i32 %40, -1
  store volatile i32 %sub.i189, ptr %preempt_count.i.i188, align 4
  %tobool107.not = icmp eq i32 %36, 0
  br i1 %tobool107.not, label %if.end153, label %land.rhs115

land.rhs115:                                      ; preds = %land.rhs75
  %.b175176 = load i1, ptr @rcu_iw_handler.__already_done.405, align 1
  br i1 %.b175176, label %if.end153, label %if.then126, !prof !1646

if.then126:                                       ; preds = %land.rhs115
  store i1 true, ptr @rcu_iw_handler.__already_done.405, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 196, i32 noundef 9, ptr noundef null) #24
  br label %if.end153

if.end153:                                        ; preds = %if.then126, %land.rhs115, %land.rhs75, %land.lhs.true, %do.body49
  tail call void @_raw_spin_unlock(ptr noundef %1) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_spawn_cpu_nocb_kthread(i32 noundef %cpu) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr @rcu_data to i32)
  %2 = inttoptr i32 %add to ptr
  %3 = load i32, ptr @rcu_scheduler_fully_active, align 4
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %.b180 = load i1, ptr @rcu_nocb_is_setup, align 1
  br i1 %.b180, label %if.end, label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %nocb_cb_kthread = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 51
  %4 = ptrtoint ptr %nocb_cb_kthread to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %nocb_cb_kthread, align 16
  %tobool3.not = icmp eq ptr %5, null
  br i1 %tobool3.not, label %if.end5, label %cleanup

if.end5:                                          ; preds = %if.end
  %nocb_gp_rdp = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 55
  %6 = ptrtoint ptr %nocb_gp_rdp to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %nocb_gp_rdp, align 128
  %nocb_gp_kthread = getelementptr inbounds %struct.rcu_data, ptr %7, i32 0, i32 30
  %8 = ptrtoint ptr %nocb_gp_kthread to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %nocb_gp_kthread, align 16
  %tobool6.not = icmp eq ptr %9, null
  br i1 %tobool6.not, label %if.then7, label %if.end69

if.then7:                                         ; preds = %if.end5
  %cpu8 = getelementptr inbounds %struct.rcu_data, ptr %7, i32 0, i32 68
  %10 = ptrtoint ptr %cpu8 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu8, align 64
  %call = tail call ptr (ptr, ptr, i32, ptr, ...) @kthread_create_on_node(ptr noundef nonnull @rcu_nocb_gp_kthread, ptr noundef %7, i32 noundef -1, ptr noundef nonnull @.str.487, i32 noundef %11) #24
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %land.rhs, label %do.body63

land.rhs:                                         ; preds = %if.then7
  %.b178182 = load i1, ptr @rcu_spawn_cpu_nocb_kthread.__already_done, align 1
  br i1 %.b178182, label %cleanup, label %if.then22, !prof !1646

if.then22:                                        ; preds = %land.rhs
  store i1 true, ptr @rcu_spawn_cpu_nocb_kthread.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 1254, i32 noundef 9, ptr noundef nonnull @.str.488, ptr noundef nonnull @__func__.rcu_spawn_cpu_nocb_kthread) #24
  br label %cleanup

do.body63:                                        ; preds = %if.then7
  %call11 = tail call i32 @wake_up_process(ptr noundef %call) #24
  %12 = ptrtoint ptr %nocb_gp_kthread to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %call, ptr %nocb_gp_kthread, align 16
  br label %if.end69

if.end69:                                         ; preds = %do.body63, %if.end5
  %13 = load i8, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 37), align 4
  %conv = zext i8 %13 to i32
  %call71 = tail call ptr (ptr, ptr, i32, ptr, ...) @kthread_create_on_node(ptr noundef nonnull @rcu_nocb_cb_kthread, ptr noundef %2, i32 noundef -1, ptr noundef nonnull @.str.489, i32 noundef %conv, i32 noundef %cpu) #24
  %cmp.i186 = icmp ugt ptr %call71, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i186, label %land.rhs86, label %do.body139

land.rhs86:                                       ; preds = %if.end69
  %.b179181 = load i1, ptr @rcu_spawn_cpu_nocb_kthread.__already_done.490, align 1
  br i1 %.b179181, label %cleanup, label %if.then97, !prof !1646

if.then97:                                        ; preds = %land.rhs86
  store i1 true, ptr @rcu_spawn_cpu_nocb_kthread.__already_done.490, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 1262, i32 noundef 9, ptr noundef nonnull @.str.491, ptr noundef nonnull @__func__.rcu_spawn_cpu_nocb_kthread) #24
  br label %cleanup

do.body139:                                       ; preds = %if.end69
  %call74 = tail call i32 @wake_up_process(ptr noundef %call71) #24
  %14 = ptrtoint ptr %nocb_cb_kthread to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %call71, ptr %nocb_cb_kthread, align 16
  %15 = ptrtoint ptr %nocb_gp_kthread to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %nocb_gp_kthread, align 16
  %nocb_gp_kthread151 = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 30
  %17 = ptrtoint ptr %nocb_gp_kthread151 to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %16, ptr %nocb_gp_kthread151, align 16
  br label %cleanup

cleanup:                                          ; preds = %do.body139, %if.then97, %land.rhs86, %if.then22, %land.rhs, %if.end, %lor.lhs.false, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rcutree_online_cpu(i32 noundef %cpu) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr @rcu_data to i32)
  %2 = inttoptr i32 %add to ptr
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 7
  %3 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mynode, align 16
  %call = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %4) #24
  %grpmask = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 8
  %5 = ptrtoint ptr %grpmask to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %grpmask, align 4
  %ffmask = getelementptr inbounds %struct.rcu_node, ptr %4, i32 0, i32 13
  %7 = ptrtoint ptr %ffmask to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %ffmask, align 4
  %or = or i32 %8, %6
  store i32 %or, ptr %ffmask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %9 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %9, 0
  br i1 %tobool.not, label %if.end109, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %10 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %13, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1820
  %14 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i to ptr
  %cpu33 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 3
  %16 = ptrtoint ptr %cpu33 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %cpu33, align 4
  %arrayidx34 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %17
  %18 = ptrtoint ptr %arrayidx34 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx34, align 4
  %add35 = add i32 %19, ptrtoint (ptr @lockdep_recursion to i32)
  %20 = inttoptr i32 %add35 to ptr
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %20, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1821
  %23 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i147 = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i147 to ptr
  %preempt_count.i.i148 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %preempt_count.i.i148 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %preempt_count.i.i148, align 4
  %sub.i = add i32 %26, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i148, align 4
  %tobool42.not = icmp eq i32 %22, 0
  br i1 %tobool42.not, label %land.rhs, label %if.end109

land.rhs:                                         ; preds = %land.lhs.true
  %27 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i149 = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i.i149 to ptr
  %preempt_count.i.i150 = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %preempt_count.i.i150 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %preempt_count.i.i150, align 4
  %add.i151 = add i32 %30, 1
  store volatile i32 %add.i151, ptr %preempt_count.i.i150, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1822
  %31 = ptrtoint ptr %cpu33 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %cpu33, align 4
  %arrayidx66 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %32
  %33 = ptrtoint ptr %arrayidx66 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx66, align 4
  %add67 = add i32 %34, ptrtoint (ptr @hardirqs_enabled to i32)
  %35 = inttoptr i32 %add67 to ptr
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %35, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1823
  %38 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i152 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i152 to ptr
  %preempt_count.i.i153 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i153 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i153, align 4
  %sub.i154 = add i32 %41, -1
  store volatile i32 %sub.i154, ptr %preempt_count.i.i153, align 4
  %tobool74.not = icmp eq i32 %37, 0
  br i1 %tobool74.not, label %if.end109, label %land.rhs78

land.rhs78:                                       ; preds = %land.rhs
  %.b143 = load i1, ptr @rcutree_online_cpu.__already_done, align 1
  br i1 %.b143, label %if.end109, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs78
  store i1 true, ptr @rcutree_online_cpu.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4230, i32 noundef 9, ptr noundef null) #24
  br label %if.end109

if.end109:                                        ; preds = %if.then, %land.rhs78, %land.rhs, %land.lhs.true, %entry
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %4, i32 noundef %call) #24
  %42 = load i32, ptr @rcu_scheduler_active, align 4
  %cmp130 = icmp eq i32 %42, 0
  br i1 %cmp130, label %cleanup, label %if.end133

if.end133:                                        ; preds = %if.end109
  %43 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx, align 4
  %add.i155 = add i32 %44, ptrtoint (ptr @rcu_data to i32)
  %45 = inttoptr i32 %add.i155 to ptr
  %mynode.i = getelementptr inbounds %struct.rcu_data, ptr %45, i32 0, i32 7
  %46 = ptrtoint ptr %mynode.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %mynode.i, align 16
  %48 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %48, -16384
  %49 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %51, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1824
  %52 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %52, -16384
  %53 = inttoptr i32 %and.i.i to ptr
  %cpu6.i = getelementptr inbounds %struct.thread_info, ptr %53, i32 0, i32 3
  %54 = ptrtoint ptr %cpu6.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %cpu6.i, align 4
  %expmask.i = getelementptr inbounds %struct.rcu_node, ptr %47, i32 0, i32 9
  %56 = ptrtoint ptr %expmask.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %expmask.i, align 4
  %grpmask.i = getelementptr inbounds %struct.rcu_data, ptr %45, i32 0, i32 8
  %58 = ptrtoint ptr %grpmask.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %grpmask.i, align 4
  %and.i156 = and i32 %59, %57
  %tobool.not.i = icmp eq i32 %and.i156, 0
  br i1 %tobool.not.i, label %do.body16.i, label %do.end13.i

do.end13.i:                                       ; preds = %if.end133
  %cpu_no_qs.i = getelementptr inbounds %struct.rcu_data, ptr %45, i32 0, i32 2
  %exp.i = getelementptr inbounds %struct.anon, ptr %cpu_no_qs.i, i32 0, i32 1
  %60 = ptrtoint ptr %exp.i to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load volatile i8, ptr %exp.i, align 1
  %tobool15.not.i = icmp eq i8 %61, 0
  br i1 %tobool15.not.i, label %if.end.i, label %do.body16.i

do.body16.i:                                      ; preds = %do.end13.i, %if.end133
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1825
  %62 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i143.i = and i32 %62, -16384
  %63 = inttoptr i32 %and.i.i.i143.i to ptr
  %preempt_count.i.i144.i = getelementptr inbounds %struct.thread_info, ptr %63, i32 0, i32 1
  %64 = ptrtoint ptr %preempt_count.i.i144.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %preempt_count.i.i144.i, align 4
  %sub.i.i = add i32 %65, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i144.i, align 4
  br label %cleanup

if.end.i:                                         ; preds = %do.end13.i
  %cmp.i = icmp eq i32 %55, %cpu
  br i1 %cmp.i, label %do.body22.i, label %if.end75.i

do.body22.i:                                      ; preds = %if.end.i
  %66 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i151.i = and i32 %66, 128
  %tobool36.not.i = icmp eq i32 %and.i151.i, 0
  br i1 %tobool36.not.i, label %if.then37.i, label %do.end40.i

if.then37.i:                                      ; preds = %do.body22.i
  tail call void @trace_hardirqs_off() #24
  br label %do.end40.i

do.end40.i:                                       ; preds = %if.then37.i, %do.body22.i
  %67 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i157 = and i32 %67, -16384
  %68 = inttoptr i32 %and.i.i.i157 to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %68, i32 0, i32 3
  %69 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %70
  %71 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %arrayidx.i.i, align 4
  %add.i152.i = add i32 %72, ptrtoint (ptr getelementptr inbounds (%struct.anon, ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 2), i32 0, i32 1) to i32)
  %73 = inttoptr i32 %add.i152.i to ptr
  %74 = ptrtoint ptr %73 to i32
  call void @__asan_store1_noabort(i32 %74)
  store i8 1, ptr %73, align 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1826
  %75 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %cpu.i.i, align 4
  %arrayidx27.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %76
  %77 = ptrtoint ptr %arrayidx27.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %arrayidx27.i.i, align 4
  %add28.i.i = add i32 %78, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 23) to i32)
  %79 = inttoptr i32 %add28.i.i to ptr
  %80 = ptrtoint ptr %79 to i32
  call void @__asan_store1_noabort(i32 %80)
  store volatile i8 1, ptr %79, align 1
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %68, i32 0, i32 2
  %81 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %task.i.i, align 8
  %stack.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %82, i32 0, i32 1
  %83 = ptrtoint ptr %stack.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %stack.i.i.i.i, align 4
  tail call void @_set_bit(i32 noundef 1, ptr noundef %84) #24
  br i1 %tobool36.not.i, label %if.then50.i, label %do.body52.i

if.then50.i:                                      ; preds = %do.end40.i
  tail call void @trace_hardirqs_on() #24
  br label %do.body52.i

do.body52.i:                                      ; preds = %if.then50.i, %do.end40.i
  %85 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #24, !srcloc !1649
  %and.i.i154.i = and i32 %85, 128
  %tobool60.not.i = icmp eq i32 %and.i.i154.i, 0
  br i1 %tobool60.not.i, label %if.then64.i, label %do.end67.i, !prof !1645

if.then64.i:                                      ; preds = %do.body52.i
  tail call void @warn_bogus_irq_restore() #24
  br label %do.end67.i

do.end67.i:                                       ; preds = %if.then64.i, %do.body52.i
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %66) #24, !srcloc !1679
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1827
  %86 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i145.i = and i32 %86, -16384
  %87 = inttoptr i32 %and.i.i.i145.i to ptr
  %preempt_count.i.i146.i = getelementptr inbounds %struct.thread_info, ptr %87, i32 0, i32 1
  %88 = ptrtoint ptr %preempt_count.i.i146.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile i32, ptr %preempt_count.i.i146.i, align 4
  %sub.i147.i = add i32 %89, -1
  store volatile i32 %sub.i147.i, ptr %preempt_count.i.i146.i, align 4
  br label %cleanup

if.end75.i:                                       ; preds = %if.end.i
  %call76.i = tail call i32 @smp_call_function_single(i32 noundef %cpu, ptr noundef nonnull @rcu_exp_handler, ptr noundef null, i32 noundef 0) #24
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1828
  %90 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i148.i = and i32 %90, -16384
  %91 = inttoptr i32 %and.i.i.i148.i to ptr
  %preempt_count.i.i149.i = getelementptr inbounds %struct.thread_info, ptr %91, i32 0, i32 1
  %92 = ptrtoint ptr %preempt_count.i.i149.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile i32, ptr %preempt_count.i.i149.i, align 4
  %sub.i150.i = add i32 %93, -1
  store volatile i32 %sub.i150.i, ptr %preempt_count.i.i149.i, align 4
  %tobool80.not.i = icmp eq i32 %call76.i, 0
  br i1 %tobool80.not.i, label %cleanup, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.end75.i
  %.b142.i = load i1, ptr @sync_sched_exp_online_cleanup.__already_done, align 1
  br i1 %.b142.i, label %cleanup, label %if.then96.i, !prof !1646

if.then96.i:                                      ; preds = %land.rhs.i
  store i1 true, ptr @sync_sched_exp_online_cleanup.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 781, i32 noundef 9, ptr noundef null) #24
  br label %cleanup

cleanup:                                          ; preds = %if.then96.i, %land.rhs.i, %if.end75.i, %do.end67.i, %do.body16.i, %if.end109
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rcutree_offline_cpu(i32 noundef %cpu) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr @rcu_data to i32)
  %2 = inttoptr i32 %add to ptr
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 7
  %3 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mynode, align 16
  %call = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %4) #24
  %grpmask = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 8
  %5 = ptrtoint ptr %grpmask to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %grpmask, align 4
  %neg = xor i32 %6, -1
  %ffmask = getelementptr inbounds %struct.rcu_node, ptr %4, i32 0, i32 13
  %7 = ptrtoint ptr %ffmask to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %ffmask, align 4
  %and = and i32 %8, %neg
  store i32 %and, ptr %ffmask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %9 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %9, 0
  br i1 %tobool.not, label %if.end109, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %10 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %13, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1829
  %14 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i to ptr
  %cpu33 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 3
  %16 = ptrtoint ptr %cpu33 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %cpu33, align 4
  %arrayidx34 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %17
  %18 = ptrtoint ptr %arrayidx34 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx34, align 4
  %add35 = add i32 %19, ptrtoint (ptr @lockdep_recursion to i32)
  %20 = inttoptr i32 %add35 to ptr
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %20, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1830
  %23 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i141 = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i141 to ptr
  %preempt_count.i.i142 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %preempt_count.i.i142 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %preempt_count.i.i142, align 4
  %sub.i = add i32 %26, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i142, align 4
  %tobool42.not = icmp eq i32 %22, 0
  br i1 %tobool42.not, label %land.rhs, label %if.end109

land.rhs:                                         ; preds = %land.lhs.true
  %27 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i143 = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i.i143 to ptr
  %preempt_count.i.i144 = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %preempt_count.i.i144 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %preempt_count.i.i144, align 4
  %add.i145 = add i32 %30, 1
  store volatile i32 %add.i145, ptr %preempt_count.i.i144, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1831
  %31 = ptrtoint ptr %cpu33 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %cpu33, align 4
  %arrayidx66 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %32
  %33 = ptrtoint ptr %arrayidx66 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx66, align 4
  %add67 = add i32 %34, ptrtoint (ptr @hardirqs_enabled to i32)
  %35 = inttoptr i32 %add67 to ptr
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %35, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1832
  %38 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i146 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i146 to ptr
  %preempt_count.i.i147 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i147 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i147, align 4
  %sub.i148 = add i32 %41, -1
  store volatile i32 %sub.i148, ptr %preempt_count.i.i147, align 4
  %tobool74.not = icmp eq i32 %37, 0
  br i1 %tobool74.not, label %if.end109, label %land.rhs78

land.rhs78:                                       ; preds = %land.rhs
  %.b137 = load i1, ptr @rcutree_offline_cpu.__already_done, align 1
  br i1 %.b137, label %if.end109, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs78
  store i1 true, ptr @rcutree_offline_cpu.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4255, i32 noundef 9, ptr noundef null) #24
  br label %if.end109

if.end109:                                        ; preds = %if.then, %land.rhs78, %land.rhs, %land.lhs.true, %entry
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %4, i32 noundef %call) #24
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_cpu_starting(i32 noundef %cpu) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr @rcu_data to i32)
  %2 = inttoptr i32 %add to ptr
  %cpu_started = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 6
  %3 = ptrtoint ptr %cpu_started to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %cpu_started, align 1, !range !1644
  %tobool.not = icmp eq i8 %4, 0
  br i1 %tobool.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %5 = ptrtoint ptr %cpu_started to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 1, ptr %cpu_started, align 1
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 7
  %6 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mynode, align 16
  %grpmask = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 8
  %8 = ptrtoint ptr %grpmask to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %grpmask, align 4
  %ofl_seq = getelementptr inbounds %struct.rcu_node, ptr %7, i32 0, i32 8
  %10 = ptrtoint ptr %ofl_seq to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %ofl_seq, align 8
  %add8 = add i32 %11, 1
  store volatile i32 %add8, ptr %ofl_seq, align 8
  %and = and i32 %add8, 1
  %tobool15.not = icmp eq i32 %and, 0
  br i1 %tobool15.not, label %land.rhs, label %if.end50

land.rhs:                                         ; preds = %if.end
  %.b441 = load i1, ptr @rcu_cpu_starting.__already_done, align 1
  br i1 %.b441, label %if.end50, label %if.then24, !prof !1646

if.then24:                                        ; preds = %land.rhs
  store i1 true, ptr @rcu_cpu_starting.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4291, i32 noundef 9, ptr noundef null) #24
  br label %if.end50

if.end50:                                         ; preds = %if.then24, %land.rhs, %if.end
  %12 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %15
  %16 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx.i, align 4
  %add.i454 = add i32 %17, ptrtoint (ptr @rcu_data to i32)
  %18 = inttoptr i32 %add.i454 to ptr
  %dynticks.i = getelementptr inbounds %struct.rcu_data, ptr %18, i32 0, i32 21
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dynticks.i, i32 noundef 4) #24
  %19 = ptrtoint ptr %dynticks.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %dynticks.i, align 4
  %and.i = and i32 %20, 1
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %rcu_dynticks_eqs_online.exit

if.end.i:                                         ; preds = %if.end50
  %call3.i = tail call fastcc i32 @rcu_dynticks_inc(i32 noundef 1) #24
  br label %rcu_dynticks_eqs_online.exit

rcu_dynticks_eqs_online.exit:                     ; preds = %if.end.i, %if.end50
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1833
  %call = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %7) #24
  %qsmaskinitnext = getelementptr inbounds %struct.rcu_node, ptr %7, i32 0, i32 7
  %21 = ptrtoint ptr %qsmaskinitnext to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %qsmaskinitnext, align 4
  %or = or i32 %22, %9
  store volatile i32 %or, ptr %qsmaskinitnext, align 4
  %expmaskinitnext = getelementptr inbounds %struct.rcu_node, ptr %7, i32 0, i32 11
  %23 = ptrtoint ptr %expmaskinitnext to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %expmaskinitnext, align 4
  %and84 = and i32 %24, %9
  %tobool85.not = icmp eq i32 %and84, 0
  %or90 = or i32 %24, %9
  store i32 %or90, ptr %expmaskinitnext, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1834
  %25 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 2), align 4
  %conv105 = zext i1 %tobool85.not to i32
  %add106 = add i32 %25, %conv105
  store volatile i32 %add106, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 2), align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %26 = load i32, ptr @debug_locks, align 4
  %tobool.not.i455 = icmp eq i32 %26, 0
  br i1 %tobool.not.i455, label %if.end.i458, label %land.rhs.i

land.rhs.i:                                       ; preds = %rcu_dynticks_eqs_online.exit
  %dep_map.i = getelementptr inbounds %struct.raw_spinlock, ptr %7, i32 0, i32 4
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #24
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %if.end.i458, !prof !1645

do.end.i:                                         ; preds = %land.rhs.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1196, i32 noundef 9, ptr noundef null) #24
  br label %if.end.i458

if.end.i458:                                      ; preds = %do.end.i, %land.rhs.i, %rcu_dynticks_eqs_online.exit
  %27 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %2, align 4
  %add.i456 = add i32 %28, 1073741823
  %gp_seq25.i = getelementptr inbounds %struct.rcu_node, ptr %7, i32 0, i32 1
  %29 = ptrtoint ptr %gp_seq25.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %gp_seq25.i, align 4
  %sub.i457 = sub i32 %add.i456, %30
  %cmp26.i = icmp slt i32 %sub.i457, 0
  br i1 %cmp26.i, label %do.body32.i, label %if.end37.i

do.body32.i:                                      ; preds = %if.end.i458
  %gpwrap.i = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 5
  %31 = ptrtoint ptr %gpwrap.i to i32
  call void @__asan_store1_noabort(i32 %31)
  store volatile i8 1, ptr %gpwrap.i, align 4
  br label %if.end37.i

if.end37.i:                                       ; preds = %do.body32.i, %if.end.i458
  %rcu_iw_gp_seq.i = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 62
  %32 = ptrtoint ptr %rcu_iw_gp_seq.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rcu_iw_gp_seq.i, align 8
  %add38.i = add i32 %33, 1073741823
  %34 = ptrtoint ptr %gp_seq25.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %gp_seq25.i, align 4
  %sub40.i = sub i32 %add38.i, %35
  %cmp41.i = icmp slt i32 %sub40.i, 0
  br i1 %cmp41.i, label %if.then42.i, label %rcu_gpnum_ovf.exit

if.then42.i:                                      ; preds = %if.end37.i
  %add44.i = add i32 %35, 1073741823
  %36 = ptrtoint ptr %rcu_iw_gp_seq.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %add44.i, ptr %rcu_iw_gp_seq.i, align 8
  br label %rcu_gpnum_ovf.exit

rcu_gpnum_ovf.exit:                               ; preds = %if.then42.i, %if.end37.i
  %37 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %rcu_onl_gp_seq = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 65
  %38 = ptrtoint ptr %rcu_onl_gp_seq to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %rcu_onl_gp_seq, align 4
  %39 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %rcu_onl_gp_flags = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 66
  %40 = ptrtoint ptr %rcu_onl_gp_flags to i32
  call void @__asan_store2_noabort(i32 %40)
  store i16 %39, ptr %rcu_onl_gp_flags, align 8
  %qsmask = getelementptr inbounds %struct.rcu_node, ptr %7, i32 0, i32 4
  %41 = ptrtoint ptr %qsmask to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %qsmask, align 8
  %and124 = and i32 %42, %9
  %tobool125.not = icmp eq i32 %and124, 0
  br i1 %tobool125.not, label %do.body182, label %land.rhs133

land.rhs133:                                      ; preds = %rcu_gpnum_ovf.exit
  %.b435440 = load i1, ptr @rcu_cpu_starting.__already_done.44, align 1
  br i1 %.b435440, label %if.then180, label %if.then144, !prof !1646

if.then144:                                       ; preds = %land.rhs133
  store i1 true, ptr @rcu_cpu_starting.__already_done.44, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4306, i32 noundef 9, ptr noundef null) #24
  br label %if.then180

if.then180:                                       ; preds = %if.then144, %land.rhs133
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %43 = load i32, ptr @debug_locks, align 4
  %tobool.not.i459 = icmp eq i32 %43, 0
  br i1 %tobool.not.i459, label %rcu_disable_urgency_upon_qs.exit, label %land.rhs.i463

land.rhs.i463:                                    ; preds = %if.then180
  %44 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %mynode, align 16
  %dep_map.i460 = getelementptr inbounds %struct.raw_spinlock, ptr %45, i32 0, i32 4
  %call.i.i461 = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i460, i32 noundef -1) #24
  %cmp.not.i462 = icmp eq i32 %call.i.i461, 0
  br i1 %cmp.not.i462, label %do.end.i464, label %rcu_disable_urgency_upon_qs.exit, !prof !1645

do.end.i464:                                      ; preds = %land.rhs.i463
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1103, i32 noundef 9, ptr noundef null) #24
  br label %rcu_disable_urgency_upon_qs.exit

rcu_disable_urgency_upon_qs.exit:                 ; preds = %do.end.i464, %land.rhs.i463, %if.then180
  %rcu_urgent_qs.i = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 23
  %46 = ptrtoint ptr %rcu_urgent_qs.i to i32
  call void @__asan_store1_noabort(i32 %46)
  store volatile i8 0, ptr %rcu_urgent_qs.i, align 1
  %rcu_need_heavy_qs.i = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 22
  %47 = ptrtoint ptr %rcu_need_heavy_qs.i to i32
  call void @__asan_store1_noabort(i32 %47)
  store volatile i8 0, ptr %rcu_need_heavy_qs.i, align 8
  %48 = ptrtoint ptr %gp_seq25.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %gp_seq25.i, align 4
  tail call fastcc void @rcu_report_qs_rnp(i32 noundef %9, ptr noundef %7, i32 noundef %49, i32 noundef %call)
  br label %do.end318

do.body182:                                       ; preds = %rcu_gpnum_ovf.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %50 = load i32, ptr @debug_locks, align 4
  %tobool184.not = icmp eq i32 %50, 0
  br i1 %tobool184.not, label %if.end293, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body182
  %51 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %51, -16384
  %52 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %52, i32 0, i32 1
  %53 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %54, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1835
  %55 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i466 = and i32 %55, -16384
  %56 = inttoptr i32 %and.i466 to ptr
  %cpu204 = getelementptr inbounds %struct.thread_info, ptr %56, i32 0, i32 3
  %57 = ptrtoint ptr %cpu204 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %cpu204, align 4
  %arrayidx205 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %58
  %59 = ptrtoint ptr %arrayidx205 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %arrayidx205, align 4
  %add206 = add i32 %60, ptrtoint (ptr @lockdep_recursion to i32)
  %61 = inttoptr i32 %add206 to ptr
  %62 = ptrtoint ptr %61 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %61, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1836
  %64 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i446 = and i32 %64, -16384
  %65 = inttoptr i32 %and.i.i.i446 to ptr
  %preempt_count.i.i447 = getelementptr inbounds %struct.thread_info, ptr %65, i32 0, i32 1
  %66 = ptrtoint ptr %preempt_count.i.i447 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile i32, ptr %preempt_count.i.i447, align 4
  %sub.i = add i32 %67, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i447, align 4
  %tobool213.not = icmp eq i32 %63, 0
  br i1 %tobool213.not, label %land.rhs214, label %if.end293

land.rhs214:                                      ; preds = %land.lhs.true
  %68 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i448 = and i32 %68, -16384
  %69 = inttoptr i32 %and.i.i.i448 to ptr
  %preempt_count.i.i449 = getelementptr inbounds %struct.thread_info, ptr %69, i32 0, i32 1
  %70 = ptrtoint ptr %preempt_count.i.i449 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load volatile i32, ptr %preempt_count.i.i449, align 4
  %add.i450 = add i32 %71, 1
  store volatile i32 %add.i450, ptr %preempt_count.i.i449, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1837
  %72 = ptrtoint ptr %cpu204 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %cpu204, align 4
  %arrayidx238 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %73
  %74 = ptrtoint ptr %arrayidx238 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %arrayidx238, align 4
  %add239 = add i32 %75, ptrtoint (ptr @hardirqs_enabled to i32)
  %76 = inttoptr i32 %add239 to ptr
  %77 = ptrtoint ptr %76 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile i32, ptr %76, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1838
  %79 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i451 = and i32 %79, -16384
  %80 = inttoptr i32 %and.i.i.i451 to ptr
  %preempt_count.i.i452 = getelementptr inbounds %struct.thread_info, ptr %80, i32 0, i32 1
  %81 = ptrtoint ptr %preempt_count.i.i452 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load volatile i32, ptr %preempt_count.i.i452, align 4
  %sub.i453 = add i32 %82, -1
  store volatile i32 %sub.i453, ptr %preempt_count.i.i452, align 4
  %tobool246.not = icmp eq i32 %78, 0
  br i1 %tobool246.not, label %if.end293, label %land.rhs255

land.rhs255:                                      ; preds = %land.rhs214
  %.b436439 = load i1, ptr @rcu_cpu_starting.__already_done.45, align 1
  br i1 %.b436439, label %if.end293, label %if.then266, !prof !1646

if.then266:                                       ; preds = %land.rhs255
  store i1 true, ptr @rcu_cpu_starting.__already_done.45, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4311, i32 noundef 9, ptr noundef null) #24
  br label %if.end293

if.end293:                                        ; preds = %if.then266, %land.rhs255, %land.rhs214, %land.lhs.true, %do.body182
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %7, i32 noundef %call) #24
  br label %do.end318

do.end318:                                        ; preds = %if.end293, %rcu_disable_urgency_upon_qs.exit
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1839
  %83 = ptrtoint ptr %ofl_seq to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %ofl_seq, align 8
  %add327 = add i32 %84, 1
  store volatile i32 %add327, ptr %ofl_seq, align 8
  %and335 = and i32 %add327, 1
  %tobool336.not = icmp eq i32 %and335, 0
  br i1 %tobool336.not, label %if.end382, label %land.rhs344

land.rhs344:                                      ; preds = %do.end318
  %.b437438 = load i1, ptr @rcu_cpu_starting.__already_done.46, align 1
  br i1 %.b437438, label %if.end382, label %if.then355, !prof !1646

if.then355:                                       ; preds = %land.rhs344
  store i1 true, ptr @rcu_cpu_starting.__already_done.46, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4315, i32 noundef 9, ptr noundef null) #24
  br label %if.end382

if.end382:                                        ; preds = %if.then355, %land.rhs344, %do.end318
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1840
  br label %cleanup

cleanup:                                          ; preds = %if.end382, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_report_qs_rnp(i32 noundef %mask, ptr noundef %rnp, i32 noundef %gps, i32 noundef %flags) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end, label %land.rhs

land.rhs:                                         ; preds = %entry
  %dep_map = getelementptr inbounds %struct.raw_spinlock, ptr %rnp, i32 0, i32 4
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #24
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %if.end, !prof !1645

do.end:                                           ; preds = %land.rhs
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2186, i32 noundef 9, ptr noundef null) #24
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs, %entry
  %qsmask695 = getelementptr inbounds %struct.rcu_node, ptr %rnp, i32 0, i32 4
  %1 = ptrtoint ptr %qsmask695 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %qsmask695, align 8
  %and696 = and i32 %2, %mask
  %tobool24.not697 = icmp ne i32 %and696, 0
  %tobool25.not698 = icmp eq i32 %mask, 0
  %or.cond699 = or i1 %tobool25.not698, %tobool24.not697
  br i1 %or.cond699, label %lor.lhs.false, label %do.body29

lor.lhs.false:                                    ; preds = %if.end554, %if.end
  %qsmask704 = phi ptr [ %qsmask, %if.end554 ], [ %qsmask695, %if.end ]
  %mask.addr.0703 = phi i32 [ %57, %if.end554 ], [ %mask, %if.end ]
  %rnp.addr.0702 = phi ptr [ %127, %if.end554 ], [ %rnp, %if.end ]
  %flags.addr.0701 = phi i32 [ %call584, %if.end554 ], [ %flags, %if.end ]
  %oldmask.0700 = phi i32 [ %129, %if.end554 ], [ 0, %if.end ]
  %gp_seq = getelementptr inbounds %struct.rcu_node, ptr %rnp.addr.0702, i32 0, i32 1
  %3 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %gp_seq, align 4
  %cmp26.not = icmp eq i32 %4, %gps
  br i1 %cmp26.not, label %if.end151, label %do.body29

do.body29:                                        ; preds = %if.end554, %lor.lhs.false, %if.end
  %flags.addr.0.lcssa = phi i32 [ %flags, %if.end ], [ %call584, %if.end554 ], [ %flags.addr.0701, %lor.lhs.false ]
  %rnp.addr.0.lcssa = phi ptr [ %rnp, %if.end ], [ %127, %if.end554 ], [ %rnp.addr.0702, %lor.lhs.false ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %5 = load i32, ptr @debug_locks, align 4
  %tobool30.not = icmp eq i32 %5, 0
  br i1 %tobool30.not, label %if.end133, label %land.lhs.true31

land.lhs.true31:                                  ; preds = %do.body29
  %6 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %9, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1841
  %10 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %13
  %14 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx, align 4
  %add = add i32 %15, ptrtoint (ptr @lockdep_recursion to i32)
  %16 = inttoptr i32 %add to ptr
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %16, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1842
  %19 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i655 = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i.i655 to ptr
  %preempt_count.i.i656 = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %preempt_count.i.i656 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %preempt_count.i.i656, align 4
  %sub.i = add i32 %22, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i656, align 4
  %tobool55.not = icmp eq i32 %18, 0
  br i1 %tobool55.not, label %land.rhs56, label %if.end133

land.rhs56:                                       ; preds = %land.lhs.true31
  %23 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i657 = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i657 to ptr
  %preempt_count.i.i658 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %preempt_count.i.i658 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %preempt_count.i.i658, align 4
  %add.i659 = add i32 %26, 1
  store volatile i32 %add.i659, ptr %preempt_count.i.i658, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1843
  %27 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cpu, align 4
  %arrayidx80 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %28
  %29 = ptrtoint ptr %arrayidx80 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %arrayidx80, align 4
  %add81 = add i32 %30, ptrtoint (ptr @hardirqs_enabled to i32)
  %31 = inttoptr i32 %add81 to ptr
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %31, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1844
  %34 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i660 = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i.i660 to ptr
  %preempt_count.i.i661 = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %preempt_count.i.i661 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %preempt_count.i.i661, align 4
  %sub.i662 = add i32 %37, -1
  store volatile i32 %sub.i662, ptr %preempt_count.i.i661, align 4
  %tobool88.not = icmp eq i32 %33, 0
  br i1 %tobool88.not, label %if.end133, label %land.rhs95

land.rhs95:                                       ; preds = %land.rhs56
  %.b645 = load i1, ptr @rcu_report_qs_rnp.__already_done, align 1
  br i1 %.b645, label %if.end133, label %if.then106, !prof !1646

if.then106:                                       ; preds = %land.rhs95
  store i1 true, ptr @rcu_report_qs_rnp.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2196, i32 noundef 9, ptr noundef null) #24
  br label %if.end133

if.end133:                                        ; preds = %if.then106, %land.rhs95, %land.rhs56, %land.lhs.true31, %do.body29
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp.addr.0.lcssa, i32 noundef %flags.addr.0.lcssa) #24
  br label %cleanup

if.end151:                                        ; preds = %lor.lhs.false
  %tobool153.not = icmp eq i32 %oldmask.0700, 0
  br i1 %tobool153.not, label %if.end199, label %land.rhs161

land.rhs161:                                      ; preds = %if.end151
  %.b639644 = load i1, ptr @rcu_report_qs_rnp.__already_done.250, align 1
  br i1 %.b639644, label %if.end199, label %if.then172, !prof !1646

if.then172:                                       ; preds = %land.rhs161
  store i1 true, ptr @rcu_report_qs_rnp.__already_done.250, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2199, i32 noundef 9, ptr noundef null) #24
  br label %if.end199

if.end199:                                        ; preds = %if.then172, %land.rhs161, %if.end151
  %level = getelementptr inbounds %struct.rcu_node, ptr %rnp.addr.0702, i32 0, i32 18
  %38 = ptrtoint ptr %level to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %level, align 1
  %40 = ptrtoint ptr %qsmask704 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %qsmask704, align 8
  %neg = xor i32 %mask.addr.0703, -1
  %and274 = and i32 %41, %neg
  store volatile i32 %and274, ptr %qsmask704, align 8
  %42 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %43 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %gp_seq, align 4
  %grplo = getelementptr inbounds %struct.rcu_node, ptr %rnp.addr.0702, i32 0, i32 15
  %45 = ptrtoint ptr %grplo to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %grplo, align 4
  %grphi = getelementptr inbounds %struct.rcu_node, ptr %rnp.addr.0702, i32 0, i32 16
  %47 = ptrtoint ptr %grphi to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %grphi, align 8
  %gp_tasks = getelementptr inbounds %struct.rcu_node, ptr %rnp.addr.0702, i32 0, i32 22
  %49 = ptrtoint ptr %gp_tasks to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %gp_tasks, align 4
  %tobool283 = icmp ne ptr %50, null
  %lnot.ext287 = zext i1 %tobool283 to i32
  tail call fastcc void @trace_rcu_quiescent_state_report(ptr noundef %42, i32 noundef %44, i32 noundef %mask.addr.0703, i32 noundef %and274, i8 noundef zeroext %39, i32 noundef %46, i32 noundef %48, i32 noundef %lnot.ext287)
  %51 = ptrtoint ptr %qsmask704 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %qsmask704, align 8
  %cmp289.not = icmp eq i32 %52, 0
  br i1 %cmp289.not, label %lor.lhs.false291, label %do.body296

lor.lhs.false291:                                 ; preds = %if.end199
  %53 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %gp_seq, align 4
  %completedqs = getelementptr inbounds %struct.rcu_node, ptr %rnp.addr.0702, i32 0, i32 3
  %55 = ptrtoint ptr %completedqs to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %54, ptr %completedqs, align 4
  %grpmask = getelementptr inbounds %struct.rcu_node, ptr %rnp.addr.0702, i32 0, i32 14
  %56 = ptrtoint ptr %grpmask to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %grpmask, align 32
  %parent = getelementptr inbounds %struct.rcu_node, ptr %rnp.addr.0702, i32 0, i32 20
  %58 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %parent, align 16
  %cmp434 = icmp eq ptr %59, null
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %60 = load i32, ptr @debug_locks, align 4
  %tobool.not.i = icmp eq i32 %60, 0
  br i1 %cmp434, label %for.end, label %do.body439

do.body296:                                       ; preds = %if.end199
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %61 = load i32, ptr @debug_locks, align 4
  %tobool298.not = icmp eq i32 %61, 0
  br i1 %tobool298.not, label %if.end411, label %land.lhs.true299

land.lhs.true299:                                 ; preds = %do.body296
  %62 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i663 = and i32 %62, -16384
  %63 = inttoptr i32 %and.i.i.i663 to ptr
  %preempt_count.i.i664 = getelementptr inbounds %struct.thread_info, ptr %63, i32 0, i32 1
  %64 = ptrtoint ptr %preempt_count.i.i664 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %preempt_count.i.i664, align 4
  %add.i665 = add i32 %65, 1
  store volatile i32 %add.i665, ptr %preempt_count.i.i664, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1845
  %66 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i687 = and i32 %66, -16384
  %67 = inttoptr i32 %and.i687 to ptr
  %cpu322 = getelementptr inbounds %struct.thread_info, ptr %67, i32 0, i32 3
  %68 = ptrtoint ptr %cpu322 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %cpu322, align 4
  %arrayidx323 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %69
  %70 = ptrtoint ptr %arrayidx323 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %arrayidx323, align 4
  %add324 = add i32 %71, ptrtoint (ptr @lockdep_recursion to i32)
  %72 = inttoptr i32 %add324 to ptr
  %73 = ptrtoint ptr %72 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load volatile i32, ptr %72, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1846
  %75 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i666 = and i32 %75, -16384
  %76 = inttoptr i32 %and.i.i.i666 to ptr
  %preempt_count.i.i667 = getelementptr inbounds %struct.thread_info, ptr %76, i32 0, i32 1
  %77 = ptrtoint ptr %preempt_count.i.i667 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile i32, ptr %preempt_count.i.i667, align 4
  %sub.i668 = add i32 %78, -1
  store volatile i32 %sub.i668, ptr %preempt_count.i.i667, align 4
  %tobool331.not = icmp eq i32 %74, 0
  br i1 %tobool331.not, label %land.rhs332, label %if.end411

land.rhs332:                                      ; preds = %land.lhs.true299
  %79 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i669 = and i32 %79, -16384
  %80 = inttoptr i32 %and.i.i.i669 to ptr
  %preempt_count.i.i670 = getelementptr inbounds %struct.thread_info, ptr %80, i32 0, i32 1
  %81 = ptrtoint ptr %preempt_count.i.i670 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load volatile i32, ptr %preempt_count.i.i670, align 4
  %add.i671 = add i32 %82, 1
  store volatile i32 %add.i671, ptr %preempt_count.i.i670, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1847
  %83 = ptrtoint ptr %cpu322 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %cpu322, align 4
  %arrayidx356 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %84
  %85 = ptrtoint ptr %arrayidx356 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %arrayidx356, align 4
  %add357 = add i32 %86, ptrtoint (ptr @hardirqs_enabled to i32)
  %87 = inttoptr i32 %add357 to ptr
  %88 = ptrtoint ptr %87 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile i32, ptr %87, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1848
  %90 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i672 = and i32 %90, -16384
  %91 = inttoptr i32 %and.i.i.i672 to ptr
  %preempt_count.i.i673 = getelementptr inbounds %struct.thread_info, ptr %91, i32 0, i32 1
  %92 = ptrtoint ptr %preempt_count.i.i673 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile i32, ptr %preempt_count.i.i673, align 4
  %sub.i674 = add i32 %93, -1
  store volatile i32 %sub.i674, ptr %preempt_count.i.i673, align 4
  %tobool364.not = icmp eq i32 %89, 0
  br i1 %tobool364.not, label %if.end411, label %land.rhs373

land.rhs373:                                      ; preds = %land.rhs332
  %.b640643 = load i1, ptr @rcu_report_qs_rnp.__already_done.252, align 1
  br i1 %.b640643, label %if.end411, label %if.then384, !prof !1646

if.then384:                                       ; preds = %land.rhs373
  store i1 true, ptr @rcu_report_qs_rnp.__already_done.252, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2210, i32 noundef 9, ptr noundef null) #24
  br label %if.end411

if.end411:                                        ; preds = %if.then384, %land.rhs373, %land.rhs332, %land.lhs.true299, %do.body296
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp.addr.0702, i32 noundef %flags.addr.0701) #24
  br label %cleanup

do.body439:                                       ; preds = %lor.lhs.false291
  br i1 %tobool.not.i, label %if.end554, label %land.lhs.true442

land.lhs.true442:                                 ; preds = %do.body439
  %94 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i675 = and i32 %94, -16384
  %95 = inttoptr i32 %and.i.i.i675 to ptr
  %preempt_count.i.i676 = getelementptr inbounds %struct.thread_info, ptr %95, i32 0, i32 1
  %96 = ptrtoint ptr %preempt_count.i.i676 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load volatile i32, ptr %preempt_count.i.i676, align 4
  %add.i677 = add i32 %97, 1
  store volatile i32 %add.i677, ptr %preempt_count.i.i676, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1849
  %98 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i688 = and i32 %98, -16384
  %99 = inttoptr i32 %and.i688 to ptr
  %cpu465 = getelementptr inbounds %struct.thread_info, ptr %99, i32 0, i32 3
  %100 = ptrtoint ptr %cpu465 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %cpu465, align 4
  %arrayidx466 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %101
  %102 = ptrtoint ptr %arrayidx466 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %arrayidx466, align 4
  %add467 = add i32 %103, ptrtoint (ptr @lockdep_recursion to i32)
  %104 = inttoptr i32 %add467 to ptr
  %105 = ptrtoint ptr %104 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load volatile i32, ptr %104, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1850
  %107 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i678 = and i32 %107, -16384
  %108 = inttoptr i32 %and.i.i.i678 to ptr
  %preempt_count.i.i679 = getelementptr inbounds %struct.thread_info, ptr %108, i32 0, i32 1
  %109 = ptrtoint ptr %preempt_count.i.i679 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load volatile i32, ptr %preempt_count.i.i679, align 4
  %sub.i680 = add i32 %110, -1
  store volatile i32 %sub.i680, ptr %preempt_count.i.i679, align 4
  %tobool474.not = icmp eq i32 %106, 0
  br i1 %tobool474.not, label %land.rhs475, label %if.end554

land.rhs475:                                      ; preds = %land.lhs.true442
  %111 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i681 = and i32 %111, -16384
  %112 = inttoptr i32 %and.i.i.i681 to ptr
  %preempt_count.i.i682 = getelementptr inbounds %struct.thread_info, ptr %112, i32 0, i32 1
  %113 = ptrtoint ptr %preempt_count.i.i682 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load volatile i32, ptr %preempt_count.i.i682, align 4
  %add.i683 = add i32 %114, 1
  store volatile i32 %add.i683, ptr %preempt_count.i.i682, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1851
  %115 = ptrtoint ptr %cpu465 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %cpu465, align 4
  %arrayidx499 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %116
  %117 = ptrtoint ptr %arrayidx499 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %arrayidx499, align 4
  %add500 = add i32 %118, ptrtoint (ptr @hardirqs_enabled to i32)
  %119 = inttoptr i32 %add500 to ptr
  %120 = ptrtoint ptr %119 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load volatile i32, ptr %119, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1852
  %122 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i684 = and i32 %122, -16384
  %123 = inttoptr i32 %and.i.i.i684 to ptr
  %preempt_count.i.i685 = getelementptr inbounds %struct.thread_info, ptr %123, i32 0, i32 1
  %124 = ptrtoint ptr %preempt_count.i.i685 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load volatile i32, ptr %preempt_count.i.i685, align 4
  %sub.i686 = add i32 %125, -1
  store volatile i32 %sub.i686, ptr %preempt_count.i.i685, align 4
  %tobool507.not = icmp eq i32 %121, 0
  br i1 %tobool507.not, label %if.end554, label %land.rhs516

land.rhs516:                                      ; preds = %land.rhs475
  %.b641642 = load i1, ptr @rcu_report_qs_rnp.__already_done.253, align 1
  br i1 %.b641642, label %if.end554, label %if.then527, !prof !1646

if.then527:                                       ; preds = %land.rhs516
  store i1 true, ptr @rcu_report_qs_rnp.__already_done.253, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2221, i32 noundef 9, ptr noundef null) #24
  br label %if.end554

if.end554:                                        ; preds = %if.then527, %land.rhs516, %land.rhs475, %land.lhs.true442, %do.body439
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp.addr.0702, i32 noundef %flags.addr.0701) #24
  %126 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %parent, align 16
  %call584 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %127) #24
  %128 = ptrtoint ptr %qsmask704 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load volatile i32, ptr %qsmask704, align 8
  %qsmask = getelementptr inbounds %struct.rcu_node, ptr %127, i32 0, i32 4
  %130 = ptrtoint ptr %qsmask to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %qsmask, align 8
  %and = and i32 %131, %57
  %tobool24.not = icmp ne i32 %and, 0
  %tobool25.not = icmp eq i32 %57, 0
  %or.cond = or i1 %tobool25.not, %tobool24.not
  br i1 %or.cond, label %lor.lhs.false, label %do.body29

for.end:                                          ; preds = %lor.lhs.false291
  br i1 %tobool.not.i, label %if.end.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %for.end
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #24
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %if.end.i, !prof !1645

do.end.i:                                         ; preds = %land.rhs.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2157, i32 noundef 9, ptr noundef null) #24
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i, %for.end
  %132 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %and.i.i.i689 = and i32 %132, 3
  %tobool26.not.i = icmp eq i32 %and.i.i.i689, 0
  br i1 %tobool26.not.i, label %land.rhs34.i, label %if.end72.i

land.rhs34.i:                                     ; preds = %if.end.i
  %.b228.i = load i1, ptr @rcu_report_qs_rsp.__already_done, align 1
  br i1 %.b228.i, label %if.end72.i, label %if.then45.i, !prof !1646

if.then45.i:                                      ; preds = %land.rhs34.i
  store i1 true, ptr @rcu_report_qs_rsp.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2158, i32 noundef 9, ptr noundef null) #24
  br label %if.end72.i

if.end72.i:                                       ; preds = %if.then45.i, %land.rhs34.i, %if.end.i
  %133 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %134 = or i16 %133, 2
  store volatile i16 %134, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %135 = load i32, ptr @debug_locks, align 4
  %tobool97.not.i = icmp eq i32 %135, 0
  br i1 %tobool97.not.i, label %if.end201.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end72.i
  %136 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %136, -16384
  %137 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %137, i32 0, i32 1
  %138 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %139, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1853
  %140 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %140, -16384
  %141 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %141, i32 0, i32 3
  %142 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %143
  %144 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %arrayidx.i, align 4
  %add.i690 = add i32 %145, ptrtoint (ptr @lockdep_recursion to i32)
  %146 = inttoptr i32 %add.i690 to ptr
  %147 = ptrtoint ptr %146 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load volatile i32, ptr %146, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1854
  %149 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i232.i = and i32 %149, -16384
  %150 = inttoptr i32 %and.i.i.i232.i to ptr
  %preempt_count.i.i233.i = getelementptr inbounds %struct.thread_info, ptr %150, i32 0, i32 1
  %151 = ptrtoint ptr %preempt_count.i.i233.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load volatile i32, ptr %preempt_count.i.i233.i, align 4
  %sub.i.i = add i32 %152, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i233.i, align 4
  %tobool121.not.i = icmp eq i32 %148, 0
  br i1 %tobool121.not.i, label %land.rhs122.i, label %if.end201.i

land.rhs122.i:                                    ; preds = %land.lhs.true.i
  %153 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i234.i = and i32 %153, -16384
  %154 = inttoptr i32 %and.i.i.i234.i to ptr
  %preempt_count.i.i235.i = getelementptr inbounds %struct.thread_info, ptr %154, i32 0, i32 1
  %155 = ptrtoint ptr %preempt_count.i.i235.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load volatile i32, ptr %preempt_count.i.i235.i, align 4
  %add.i236.i = add i32 %156, 1
  store volatile i32 %add.i236.i, ptr %preempt_count.i.i235.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1855
  %157 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load i32, ptr %cpu.i, align 4
  %arrayidx146.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %158
  %159 = ptrtoint ptr %arrayidx146.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load i32, ptr %arrayidx146.i, align 4
  %add147.i = add i32 %160, ptrtoint (ptr @hardirqs_enabled to i32)
  %161 = inttoptr i32 %add147.i to ptr
  %162 = ptrtoint ptr %161 to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load volatile i32, ptr %161, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1856
  %164 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i237.i = and i32 %164, -16384
  %165 = inttoptr i32 %and.i.i.i237.i to ptr
  %preempt_count.i.i238.i = getelementptr inbounds %struct.thread_info, ptr %165, i32 0, i32 1
  %166 = ptrtoint ptr %preempt_count.i.i238.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load volatile i32, ptr %preempt_count.i.i238.i, align 4
  %sub.i239.i = add i32 %167, -1
  store volatile i32 %sub.i239.i, ptr %preempt_count.i.i238.i, align 4
  %tobool154.not.i = icmp eq i32 %163, 0
  br i1 %tobool154.not.i, label %if.end201.i, label %land.rhs163.i

land.rhs163.i:                                    ; preds = %land.rhs122.i
  %.b226227.i = load i1, ptr @rcu_report_qs_rsp.__already_done.254, align 1
  br i1 %.b226227.i, label %if.end201.i, label %if.then174.i, !prof !1646

if.then174.i:                                     ; preds = %land.rhs163.i
  store i1 true, ptr @rcu_report_qs_rsp.__already_done.254, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2161, i32 noundef 9, ptr noundef null) #24
  br label %if.end201.i

if.end201.i:                                      ; preds = %if.then174.i, %land.rhs163.i, %land.rhs122.i, %land.lhs.true.i, %if.end72.i
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @rcu_state, i32 noundef %flags.addr.0701) #24
  %168 = load volatile ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 8), align 4
  %169 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i240.i = and i32 %169, -16384
  %170 = inttoptr i32 %and.i.i240.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %170, i32 0, i32 2
  %171 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load ptr, ptr %task.i.i, align 8
  %cmp.i.i = icmp eq ptr %172, %168
  br i1 %cmp.i.i, label %land.lhs.true.i.i, label %do.end9.i.i

land.lhs.true.i.i:                                ; preds = %if.end201.i
  %preempt_count.i.i241.i = getelementptr inbounds %struct.thread_info, ptr %170, i32 0, i32 1
  %173 = ptrtoint ptr %preempt_count.i.i241.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load volatile i32, ptr %preempt_count.i.i241.i, align 4
  %and.i242.i = and i32 %174, 983040
  %tobool.not.i.i = icmp eq i32 %and.i242.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true2.i.i, label %do.end9.i.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %175 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i37.i.i = and i32 %175, -16384
  %176 = inttoptr i32 %and.i.i37.i.i to ptr
  %preempt_count.i38.i.i = getelementptr inbounds %struct.thread_info, ptr %176, i32 0, i32 1
  %177 = ptrtoint ptr %preempt_count.i38.i.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load volatile i32, ptr %preempt_count.i38.i.i, align 4
  %and5.i.i = and i32 %178, 256
  %tobool6.not.i.i = icmp eq i32 %and5.i.i, 0
  br i1 %tobool6.not.i.i, label %cleanup, label %do.end9.i.i

do.end9.i.i:                                      ; preds = %land.lhs.true2.i.i, %land.lhs.true.i.i, %if.end201.i
  %179 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %tobool11.not.i.i = icmp eq i16 %179, 0
  %tobool13.not.i.i = icmp eq ptr %168, null
  %or.cond.i.i = select i1 %tobool11.not.i.i, i1 true, i1 %tobool13.not.i.i
  br i1 %or.cond.i.i, label %cleanup, label %do.body18.i.i

do.body18.i.i:                                    ; preds = %do.end9.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %180 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %180, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 12), align 8
  %181 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  store volatile i32 %181, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 13), align 4
  tail call void @swake_up_one(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 9)) #24
  br label %cleanup

cleanup:                                          ; preds = %do.body18.i.i, %do.end9.i.i, %land.lhs.true2.i.i, %if.end411, %if.end133
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_report_dead(i32 noundef %cpu) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr @rcu_data to i32)
  %2 = inttoptr i32 %add to ptr
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 7
  %3 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mynode, align 16
  %nocb_gp_rdp.i = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 55
  %5 = ptrtoint ptr %nocb_gp_rdp.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %nocb_gp_rdp.i, align 128
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %do_nocb_deferred_wakeup.exit, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %entry
  %nocb_defer_wakeup.i.i = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 33
  %7 = ptrtoint ptr %nocb_defer_wakeup.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %nocb_defer_wakeup.i.i, align 4
  %cmp.i.i = icmp slt i32 %8, 2
  br i1 %cmp.i.i, label %do_nocb_deferred_wakeup.exit, label %do.body.i

do.body.i:                                        ; preds = %lor.lhs.false.i
  %nocb_gp_lock.i = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 43
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %nocb_gp_lock.i) #24
  %9 = ptrtoint ptr %nocb_defer_wakeup.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %nocb_defer_wakeup.i.i, align 4
  %cmp.i.not.i.i = icmp slt i32 %10, 2
  br i1 %cmp.i.not.i.i, label %do.body.i.i, label %if.end.i.i

do.body.i.i:                                      ; preds = %do.body.i
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %nocb_gp_lock.i, i32 noundef %call2.i) #24
  br label %do_nocb_deferred_wakeup.exit

if.end.i.i:                                       ; preds = %do.body.i
  %cmp1.i.i = icmp eq i32 %10, 3
  %call3.i.i = tail call fastcc zeroext i1 @__wake_nocb_gp(ptr noundef nonnull %6, ptr noundef %2, i1 noundef zeroext %cmp1.i.i, i32 noundef %call2.i) #24
  %11 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %cpu.i.i = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 68
  %12 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %cpu.i.i, align 64
  %14 = load ptr, ptr @do_nocb_deferred_wakeup_common.___tp_str, align 4
  tail call fastcc void @trace_rcu_nocb_wake(ptr noundef %11, i32 noundef %13, ptr noundef %14) #24
  br label %do_nocb_deferred_wakeup.exit

do_nocb_deferred_wakeup.exit:                     ; preds = %if.end.i.i, %do.body.i.i, %lor.lhs.false.i, %entry
  %cpu_no_qs.i = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 2
  %exp.i = getelementptr inbounds %struct.anon, ptr %cpu_no_qs.i, i32 0, i32 1
  %15 = ptrtoint ptr %exp.i to i32
  call void @__asan_store1_noabort(i32 %15)
  store volatile i8 0, ptr %exp.i, align 1
  %16 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %mynode, align 16
  %grpmask.i = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 8
  %18 = ptrtoint ptr %grpmask.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %grpmask.i, align 4
  tail call fastcc void @rcu_report_exp_cpu_mult(ptr noundef %17, i32 noundef %19, i1 noundef zeroext true) #24
  %20 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 3
  %22 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %23
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx.i, align 4
  %add.i363 = add i32 %25, ptrtoint (ptr @rcu_data to i32)
  %26 = inttoptr i32 %add.i363 to ptr
  %cpu_no_qs.i364 = getelementptr inbounds %struct.rcu_data, ptr %26, i32 0, i32 2
  %exp.i365 = getelementptr inbounds %struct.anon, ptr %cpu_no_qs.i364, i32 0, i32 1
  %27 = ptrtoint ptr %exp.i365 to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %exp.i365, align 1
  %tobool.not.i366 = icmp eq i8 %28, 0
  br i1 %tobool.not.i366, label %rcu_preempt_deferred_qs.exit, label %if.then.i

if.then.i:                                        ; preds = %do_nocb_deferred_wakeup.exit
  %29 = ptrtoint ptr %exp.i365 to i32
  call void @__asan_store1_noabort(i32 %29)
  store volatile i8 0, ptr %exp.i365, align 1
  %mynode.i.i = getelementptr inbounds %struct.rcu_data, ptr %26, i32 0, i32 7
  %30 = ptrtoint ptr %mynode.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %mynode.i.i, align 16
  %grpmask.i.i = getelementptr inbounds %struct.rcu_data, ptr %26, i32 0, i32 8
  %32 = ptrtoint ptr %grpmask.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %grpmask.i.i, align 4
  tail call fastcc void @rcu_report_exp_cpu_mult(ptr noundef %31, i32 noundef %33, i1 noundef zeroext true) #24
  br label %rcu_preempt_deferred_qs.exit

rcu_preempt_deferred_qs.exit:                     ; preds = %if.then.i, %do_nocb_deferred_wakeup.exit
  %34 = ptrtoint ptr %grpmask.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %grpmask.i, align 4
  %ofl_seq = getelementptr inbounds %struct.rcu_node, ptr %4, i32 0, i32 8
  %36 = ptrtoint ptr %ofl_seq to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %ofl_seq, align 8
  %add8 = add i32 %37, 1
  store volatile i32 %add8, ptr %ofl_seq, align 8
  %and = and i32 %add8, 1
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %land.rhs, label %if.end47

land.rhs:                                         ; preds = %rcu_preempt_deferred_qs.exit
  %.b351 = load i1, ptr @rcu_report_dead.__already_done, align 1
  br i1 %.b351, label %if.end47, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @rcu_report_dead.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4344, i32 noundef 9, ptr noundef null) #24
  br label %if.end47

if.end47:                                         ; preds = %if.then, %land.rhs, %rcu_preempt_deferred_qs.exit
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1857
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 39)) #24
  %call64 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %4) #24
  %38 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %rcu_ofl_gp_seq = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 63
  %39 = ptrtoint ptr %rcu_ofl_gp_seq to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %rcu_ofl_gp_seq, align 4
  %40 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %rcu_ofl_gp_flags = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 64
  %41 = ptrtoint ptr %rcu_ofl_gp_flags to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 %40, ptr %rcu_ofl_gp_flags, align 16
  %qsmask = getelementptr inbounds %struct.rcu_node, ptr %4, i32 0, i32 4
  %42 = ptrtoint ptr %qsmask to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %qsmask, align 8
  %and80 = and i32 %43, %35
  %tobool81.not = icmp eq i32 %and80, 0
  br i1 %tobool81.not, label %do.body104, label %if.then82

if.then82:                                        ; preds = %if.end47
  %gp_seq = getelementptr inbounds %struct.rcu_node, ptr %4, i32 0, i32 1
  %44 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %gp_seq, align 4
  tail call fastcc void @rcu_report_qs_rnp(i32 noundef %35, ptr noundef %4, i32 noundef %45, i32 noundef %call64)
  %call91 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %4) #24
  br label %do.body104

do.body104:                                       ; preds = %if.then82, %if.end47
  %flags.0 = phi i32 [ %call91, %if.then82 ], [ %call64, %if.end47 ]
  %qsmaskinitnext = getelementptr inbounds %struct.rcu_node, ptr %4, i32 0, i32 7
  %46 = ptrtoint ptr %qsmaskinitnext to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %qsmaskinitnext, align 4
  %neg = xor i32 %35, -1
  %and105 = and i32 %47, %neg
  store volatile i32 %and105, ptr %qsmaskinitnext, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %48 = load i32, ptr @debug_locks, align 4
  %tobool114.not = icmp eq i32 %48, 0
  br i1 %tobool114.not, label %if.end223, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body104
  %49 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %49, -16384
  %50 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %50, i32 0, i32 1
  %51 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %52, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1858
  %53 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %cpu.i, align 4
  %arrayidx135 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %54
  %55 = ptrtoint ptr %arrayidx135 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %arrayidx135, align 4
  %add136 = add i32 %56, ptrtoint (ptr @lockdep_recursion to i32)
  %57 = inttoptr i32 %add136 to ptr
  %58 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %57, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1859
  %60 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i355 = and i32 %60, -16384
  %61 = inttoptr i32 %and.i.i.i355 to ptr
  %preempt_count.i.i356 = getelementptr inbounds %struct.thread_info, ptr %61, i32 0, i32 1
  %62 = ptrtoint ptr %preempt_count.i.i356 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %preempt_count.i.i356, align 4
  %sub.i = add i32 %63, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i356, align 4
  %tobool143.not = icmp eq i32 %59, 0
  br i1 %tobool143.not, label %land.rhs144, label %if.end223

land.rhs144:                                      ; preds = %land.lhs.true
  %64 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i357 = and i32 %64, -16384
  %65 = inttoptr i32 %and.i.i.i357 to ptr
  %preempt_count.i.i358 = getelementptr inbounds %struct.thread_info, ptr %65, i32 0, i32 1
  %66 = ptrtoint ptr %preempt_count.i.i358 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile i32, ptr %preempt_count.i.i358, align 4
  %add.i359 = add i32 %67, 1
  store volatile i32 %add.i359, ptr %preempt_count.i.i358, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1860
  %68 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %cpu.i, align 4
  %arrayidx168 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %69
  %70 = ptrtoint ptr %arrayidx168 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %arrayidx168, align 4
  %add169 = add i32 %71, ptrtoint (ptr @hardirqs_enabled to i32)
  %72 = inttoptr i32 %add169 to ptr
  %73 = ptrtoint ptr %72 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load volatile i32, ptr %72, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1861
  %75 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i360 = and i32 %75, -16384
  %76 = inttoptr i32 %and.i.i.i360 to ptr
  %preempt_count.i.i361 = getelementptr inbounds %struct.thread_info, ptr %76, i32 0, i32 1
  %77 = ptrtoint ptr %preempt_count.i.i361 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile i32, ptr %preempt_count.i.i361, align 4
  %sub.i362 = add i32 %78, -1
  store volatile i32 %sub.i362, ptr %preempt_count.i.i361, align 4
  %tobool176.not = icmp eq i32 %74, 0
  br i1 %tobool176.not, label %if.end223, label %land.rhs185

land.rhs185:                                      ; preds = %land.rhs144
  %.b347350 = load i1, ptr @rcu_report_dead.__already_done.47, align 1
  br i1 %.b347350, label %if.end223, label %if.then196, !prof !1646

if.then196:                                       ; preds = %land.rhs185
  store i1 true, ptr @rcu_report_dead.__already_done.47, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4356, i32 noundef 9, ptr noundef null) #24
  br label %if.end223

if.end223:                                        ; preds = %if.then196, %land.rhs185, %land.rhs144, %land.lhs.true, %do.body104
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %4, i32 noundef %flags.0) #24
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 39)) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1862
  %79 = ptrtoint ptr %ofl_seq to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %ofl_seq, align 8
  %add256 = add i32 %80, 1
  store volatile i32 %add256, ptr %ofl_seq, align 8
  %and264 = and i32 %add256, 1
  %tobool265.not = icmp eq i32 %and264, 0
  br i1 %tobool265.not, label %if.end311, label %land.rhs273

land.rhs273:                                      ; preds = %if.end223
  %.b348349 = load i1, ptr @rcu_report_dead.__already_done.48, align 1
  br i1 %.b348349, label %if.end311, label %if.then284, !prof !1646

if.then284:                                       ; preds = %land.rhs273
  store i1 true, ptr @rcu_report_dead.__already_done.48, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4360, i32 noundef 9, ptr noundef null) #24
  br label %if.end311

if.end311:                                        ; preds = %if.then284, %land.rhs273, %if.end223
  %cpu_started = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 6
  %81 = ptrtoint ptr %cpu_started to i32
  call void @__asan_store1_noabort(i32 %81)
  store i8 0, ptr %cpu_started, align 1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcutree_migrate_callbacks(i32 noundef %cpu) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr @rcu_data to i32)
  %2 = inttoptr i32 %add to ptr
  %call = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %2)
  br i1 %call, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %cblist = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 13
  %3 = ptrtoint ptr %cblist to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %cblist, align 4
  %tobool.not.i = icmp eq ptr %4, null
  br i1 %tobool.not.i, label %cleanup, label %do.body4

do.body4:                                         ; preds = %lor.lhs.false
  %5 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i = and i32 %5, 128
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.then16, label %do.body20

if.then16:                                        ; preds = %do.body4
  tail call void @trace_hardirqs_off() #24
  br label %do.body20

do.body20:                                        ; preds = %if.then16, %do.body4
  %6 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i718 = and i32 %6, -16384
  %7 = inttoptr i32 %and.i718 to ptr
  %cpu28 = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %cpu28 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cpu28, align 4
  %arrayidx29 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %9
  %10 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx29, align 4
  %add30 = add i32 %11, ptrtoint (ptr @rcu_data to i32)
  %12 = inttoptr i32 %add30 to ptr
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %12, i32 0, i32 7
  %13 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %mynode, align 16
  tail call fastcc void @rcu_nocb_lock(ptr noundef %12)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %15 = load volatile i32, ptr @jiffies, align 128
  %call.i = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %12) #24
  br i1 %call.i, label %rcu_nocb_flush_bypass.exit, label %if.end67

rcu_nocb_flush_bypass.exit:                       ; preds = %do.body20
  tail call fastcc void @rcu_lockdep_assert_cblist_protected(ptr noundef %12) #24
  tail call fastcc void @rcu_nocb_bypass_lock(ptr noundef %12) #24
  %call1.i = tail call fastcc zeroext i1 @rcu_nocb_do_flush_bypass(ptr noundef %12, ptr noundef null, i32 noundef %15) #24
  br i1 %call1.i, label %if.end67, label %land.rhs

land.rhs:                                         ; preds = %rcu_nocb_flush_bypass.exit
  %.b676 = load i1, ptr @rcutree_migrate_callbacks.__already_done, align 1
  br i1 %.b676, label %if.end67, label %if.then41, !prof !1646

if.then41:                                        ; preds = %land.rhs
  store i1 true, ptr @rcutree_migrate_callbacks.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4387, i32 noundef 9, ptr noundef null) #24
  br label %if.end67

if.end67:                                         ; preds = %if.then41, %land.rhs, %rcu_nocb_flush_bypass.exit, %do.body20
  tail call void @_raw_spin_lock(ptr noundef %14) #24
  %call81 = tail call fastcc zeroext i1 @rcu_advance_cbs(ptr noundef %14, ptr noundef %2)
  br i1 %call81, label %lor.end.thread, label %lor.end

lor.end.thread:                                   ; preds = %if.end67
  %cblist86729 = getelementptr inbounds %struct.rcu_data, ptr %12, i32 0, i32 13
  tail call void @rcu_segcblist_merge(ptr noundef %cblist86729, ptr noundef %cblist) #24
  br label %lor.end93

lor.end:                                          ; preds = %if.end67
  %call83 = tail call fastcc zeroext i1 @rcu_advance_cbs(ptr noundef %14, ptr noundef %12)
  %cblist86 = getelementptr inbounds %struct.rcu_data, ptr %12, i32 0, i32 13
  tail call void @rcu_segcblist_merge(ptr noundef %cblist86, ptr noundef %cblist) #24
  br i1 %call83, label %lor.end93, label %lor.rhs90

lor.rhs90:                                        ; preds = %lor.end
  %call91 = tail call fastcc zeroext i1 @rcu_advance_cbs(ptr noundef %14, ptr noundef %12)
  br label %lor.end93

lor.end93:                                        ; preds = %lor.rhs90, %lor.end, %lor.end.thread
  %cblist86730 = phi ptr [ %cblist86, %lor.end ], [ %cblist86, %lor.rhs90 ], [ %cblist86729, %lor.end.thread ]
  %16 = phi i1 [ true, %lor.end ], [ %call91, %lor.rhs90 ], [ true, %lor.end.thread ]
  tail call void @rcu_segcblist_disable(ptr noundef %cblist) #24
  %17 = ptrtoint ptr %cblist86730 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile ptr, ptr %cblist86730, align 4
  %tobool.not.i719 = icmp eq ptr %18, null
  %len.i = getelementptr inbounds %struct.rcu_data, ptr %12, i32 0, i32 13, i32 3
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %len.i, i32 noundef 4) #24
  %19 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %len.i, align 4
  %tobool102.not = icmp ne i32 %20, 0
  %cmp105.not = xor i1 %tobool.not.i719, %tobool102.not
  br i1 %cmp105.not, label %if.end152, label %land.rhs114

land.rhs114:                                      ; preds = %lor.end93
  %.b666675 = load i1, ptr @rcutree_migrate_callbacks.__already_done.49, align 1
  br i1 %.b666675, label %if.end152, label %if.then125, !prof !1646

if.then125:                                       ; preds = %land.rhs114
  store i1 true, ptr @rcutree_migrate_callbacks.__already_done.49, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4396, i32 noundef 9, ptr noundef null) #24
  br label %if.end152

if.end152:                                        ; preds = %if.then125, %land.rhs114, %lor.end93
  %call160 = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %12)
  br i1 %call160, label %do.body163, label %if.else

do.body163:                                       ; preds = %if.end152
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %21 = load i32, ptr @debug_locks, align 4
  %tobool165.not = icmp eq i32 %21, 0
  br i1 %tobool165.not, label %if.end274, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body163
  %22 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %25, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1863
  %26 = ptrtoint ptr %cpu28 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu28, align 4
  %arrayidx186 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %27
  %28 = ptrtoint ptr %arrayidx186 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx186, align 4
  %add187 = add i32 %29, ptrtoint (ptr @lockdep_recursion to i32)
  %30 = inttoptr i32 %add187 to ptr
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %30, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1864
  %33 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i686 = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i686 to ptr
  %preempt_count.i.i687 = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i687 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i687, align 4
  %sub.i = add i32 %36, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i687, align 4
  %tobool194.not = icmp eq i32 %32, 0
  br i1 %tobool194.not, label %land.rhs195, label %if.end274

land.rhs195:                                      ; preds = %land.lhs.true
  %37 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i688 = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i.i688 to ptr
  %preempt_count.i.i689 = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %preempt_count.i.i689 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %preempt_count.i.i689, align 4
  %add.i690 = add i32 %40, 1
  store volatile i32 %add.i690, ptr %preempt_count.i.i689, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1865
  %41 = ptrtoint ptr %cpu28 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %cpu28, align 4
  %arrayidx219 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %42
  %43 = ptrtoint ptr %arrayidx219 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx219, align 4
  %add220 = add i32 %44, ptrtoint (ptr @hardirqs_enabled to i32)
  %45 = inttoptr i32 %add220 to ptr
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %45, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1866
  %48 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i691 = and i32 %48, -16384
  %49 = inttoptr i32 %and.i.i.i691 to ptr
  %preempt_count.i.i692 = getelementptr inbounds %struct.thread_info, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %preempt_count.i.i692 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %preempt_count.i.i692, align 4
  %sub.i693 = add i32 %51, -1
  store volatile i32 %sub.i693, ptr %preempt_count.i.i692, align 4
  %tobool227.not = icmp eq i32 %47, 0
  br i1 %tobool227.not, label %if.end274, label %land.rhs236

land.rhs236:                                      ; preds = %land.rhs195
  %.b667674 = load i1, ptr @rcutree_migrate_callbacks.__already_done.50, align 1
  br i1 %.b667674, label %if.end274, label %if.then247, !prof !1646

if.then247:                                       ; preds = %land.rhs236
  store i1 true, ptr @rcutree_migrate_callbacks.__already_done.50, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4398, i32 noundef 9, ptr noundef null) #24
  br label %if.end274

if.end274:                                        ; preds = %if.then247, %land.rhs236, %land.rhs195, %land.lhs.true, %do.body163
  tail call void @_raw_spin_unlock(ptr noundef %14) #24
  tail call fastcc void @__call_rcu_nocb_wake(ptr noundef %12, i1 noundef zeroext true, i32 noundef %5)
  br label %if.end424

if.else:                                          ; preds = %if.end152
  tail call fastcc void @rcu_nocb_unlock(ptr noundef %12)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %52 = load i32, ptr @debug_locks, align 4
  %tobool290.not = icmp eq i32 %52, 0
  br i1 %tobool290.not, label %if.end403, label %land.lhs.true291

land.lhs.true291:                                 ; preds = %if.else
  %53 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i694 = and i32 %53, -16384
  %54 = inttoptr i32 %and.i.i.i694 to ptr
  %preempt_count.i.i695 = getelementptr inbounds %struct.thread_info, ptr %54, i32 0, i32 1
  %55 = ptrtoint ptr %preempt_count.i.i695 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %preempt_count.i.i695, align 4
  %add.i696 = add i32 %56, 1
  store volatile i32 %add.i696, ptr %preempt_count.i.i695, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1867
  %57 = ptrtoint ptr %cpu28 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %cpu28, align 4
  %arrayidx315 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %58
  %59 = ptrtoint ptr %arrayidx315 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %arrayidx315, align 4
  %add316 = add i32 %60, ptrtoint (ptr @lockdep_recursion to i32)
  %61 = inttoptr i32 %add316 to ptr
  %62 = ptrtoint ptr %61 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %61, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1868
  %64 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i697 = and i32 %64, -16384
  %65 = inttoptr i32 %and.i.i.i697 to ptr
  %preempt_count.i.i698 = getelementptr inbounds %struct.thread_info, ptr %65, i32 0, i32 1
  %66 = ptrtoint ptr %preempt_count.i.i698 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile i32, ptr %preempt_count.i.i698, align 4
  %sub.i699 = add i32 %67, -1
  store volatile i32 %sub.i699, ptr %preempt_count.i.i698, align 4
  %tobool323.not = icmp eq i32 %63, 0
  br i1 %tobool323.not, label %land.rhs324, label %if.end403

land.rhs324:                                      ; preds = %land.lhs.true291
  %68 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i700 = and i32 %68, -16384
  %69 = inttoptr i32 %and.i.i.i700 to ptr
  %preempt_count.i.i701 = getelementptr inbounds %struct.thread_info, ptr %69, i32 0, i32 1
  %70 = ptrtoint ptr %preempt_count.i.i701 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load volatile i32, ptr %preempt_count.i.i701, align 4
  %add.i702 = add i32 %71, 1
  store volatile i32 %add.i702, ptr %preempt_count.i.i701, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1869
  %72 = ptrtoint ptr %cpu28 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %cpu28, align 4
  %arrayidx348 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %73
  %74 = ptrtoint ptr %arrayidx348 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %arrayidx348, align 4
  %add349 = add i32 %75, ptrtoint (ptr @hardirqs_enabled to i32)
  %76 = inttoptr i32 %add349 to ptr
  %77 = ptrtoint ptr %76 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile i32, ptr %76, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1870
  %79 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i703 = and i32 %79, -16384
  %80 = inttoptr i32 %and.i.i.i703 to ptr
  %preempt_count.i.i704 = getelementptr inbounds %struct.thread_info, ptr %80, i32 0, i32 1
  %81 = ptrtoint ptr %preempt_count.i.i704 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load volatile i32, ptr %preempt_count.i.i704, align 4
  %sub.i705 = add i32 %82, -1
  store volatile i32 %sub.i705, ptr %preempt_count.i.i704, align 4
  %tobool356.not = icmp eq i32 %78, 0
  br i1 %tobool356.not, label %if.end403, label %land.rhs365

land.rhs365:                                      ; preds = %land.rhs324
  %.b668673 = load i1, ptr @rcutree_migrate_callbacks.__already_done.51, align 1
  br i1 %.b668673, label %if.end403, label %if.then376, !prof !1646

if.then376:                                       ; preds = %land.rhs365
  store i1 true, ptr @rcutree_migrate_callbacks.__already_done.51, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4402, i32 noundef 9, ptr noundef null) #24
  br label %if.end403

if.end403:                                        ; preds = %if.then376, %land.rhs365, %land.rhs324, %land.lhs.true291, %if.else
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %14, i32 noundef %5) #24
  br label %if.end424

if.end424:                                        ; preds = %if.end403, %if.end274
  br i1 %16, label %if.then426, label %do.body428

if.then426:                                       ; preds = %if.end424
  %83 = load volatile ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 8), align 4
  %84 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %84, -16384
  %85 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %85, i32 0, i32 2
  %86 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %task.i, align 8
  %cmp.i = icmp eq ptr %87, %83
  br i1 %cmp.i, label %land.lhs.true.i, label %do.end9.i

land.lhs.true.i:                                  ; preds = %if.then426
  %preempt_count.i.i720 = getelementptr inbounds %struct.thread_info, ptr %85, i32 0, i32 1
  %88 = ptrtoint ptr %preempt_count.i.i720 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile i32, ptr %preempt_count.i.i720, align 4
  %and.i721 = and i32 %89, 983040
  %tobool.not.i722 = icmp eq i32 %and.i721, 0
  br i1 %tobool.not.i722, label %land.lhs.true2.i, label %do.end9.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %90 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i37.i = and i32 %90, -16384
  %91 = inttoptr i32 %and.i.i37.i to ptr
  %preempt_count.i38.i = getelementptr inbounds %struct.thread_info, ptr %91, i32 0, i32 1
  %92 = ptrtoint ptr %preempt_count.i38.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile i32, ptr %preempt_count.i38.i, align 4
  %and5.i = and i32 %93, 256
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  br i1 %tobool6.not.i, label %do.body428, label %do.end9.i

do.end9.i:                                        ; preds = %land.lhs.true2.i, %land.lhs.true.i, %if.then426
  %94 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %tobool11.not.i = icmp eq i16 %94, 0
  %tobool13.not.i = icmp eq ptr %83, null
  %or.cond.i = select i1 %tobool11.not.i, i1 true, i1 %tobool13.not.i
  br i1 %or.cond.i, label %do.body428, label %do.body18.i

do.body18.i:                                      ; preds = %do.end9.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %95 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %95, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 12), align 8
  %96 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  store volatile i32 %96, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 13), align 4
  tail call void @swake_up_one(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 9)) #24
  br label %do.body428

do.body428:                                       ; preds = %do.body18.i, %do.end9.i, %land.lhs.true2.i, %if.end424
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %97 = load i32, ptr @debug_locks, align 4
  %tobool430.not = icmp eq i32 %97, 0
  br i1 %tobool430.not, label %if.end545, label %land.lhs.true431

land.lhs.true431:                                 ; preds = %do.body428
  %98 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i706 = and i32 %98, -16384
  %99 = inttoptr i32 %and.i.i.i706 to ptr
  %preempt_count.i.i707 = getelementptr inbounds %struct.thread_info, ptr %99, i32 0, i32 1
  %100 = ptrtoint ptr %preempt_count.i.i707 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load volatile i32, ptr %preempt_count.i.i707, align 4
  %add.i708 = add i32 %101, 1
  store volatile i32 %add.i708, ptr %preempt_count.i.i707, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1871
  %102 = ptrtoint ptr %cpu28 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %cpu28, align 4
  %arrayidx455 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %103
  %104 = ptrtoint ptr %arrayidx455 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %arrayidx455, align 4
  %add456 = add i32 %105, ptrtoint (ptr @lockdep_recursion to i32)
  %106 = inttoptr i32 %add456 to ptr
  %107 = ptrtoint ptr %106 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load volatile i32, ptr %106, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1872
  %109 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i709 = and i32 %109, -16384
  %110 = inttoptr i32 %and.i.i.i709 to ptr
  %preempt_count.i.i710 = getelementptr inbounds %struct.thread_info, ptr %110, i32 0, i32 1
  %111 = ptrtoint ptr %preempt_count.i.i710 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load volatile i32, ptr %preempt_count.i.i710, align 4
  %sub.i711 = add i32 %112, -1
  store volatile i32 %sub.i711, ptr %preempt_count.i.i710, align 4
  %tobool463.not = icmp eq i32 %108, 0
  br i1 %tobool463.not, label %land.rhs464, label %if.end545

land.rhs464:                                      ; preds = %land.lhs.true431
  %113 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i712 = and i32 %113, -16384
  %114 = inttoptr i32 %and.i.i.i712 to ptr
  %preempt_count.i.i713 = getelementptr inbounds %struct.thread_info, ptr %114, i32 0, i32 1
  %115 = ptrtoint ptr %preempt_count.i.i713 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load volatile i32, ptr %preempt_count.i.i713, align 4
  %add.i714 = add i32 %116, 1
  store volatile i32 %add.i714, ptr %preempt_count.i.i713, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1873
  %117 = ptrtoint ptr %cpu28 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %cpu28, align 4
  %arrayidx488 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %118
  %119 = ptrtoint ptr %arrayidx488 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %arrayidx488, align 4
  %add489 = add i32 %120, ptrtoint (ptr @hardirqs_enabled to i32)
  %121 = inttoptr i32 %add489 to ptr
  %122 = ptrtoint ptr %121 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load volatile i32, ptr %121, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1874
  %124 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i715 = and i32 %124, -16384
  %125 = inttoptr i32 %and.i.i.i715 to ptr
  %preempt_count.i.i716 = getelementptr inbounds %struct.thread_info, ptr %125, i32 0, i32 1
  %126 = ptrtoint ptr %preempt_count.i.i716 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load volatile i32, ptr %preempt_count.i.i716, align 4
  %sub.i717 = add i32 %127, -1
  store volatile i32 %sub.i717, ptr %preempt_count.i.i716, align 4
  %tobool496.not = icmp eq i32 %123, 0
  br i1 %tobool496.not, label %land.rhs507, label %if.end545

land.rhs507:                                      ; preds = %land.rhs464
  %.b669672 = load i1, ptr @rcutree_migrate_callbacks.__already_done.52, align 1
  br i1 %.b669672, label %if.end545, label %if.then518, !prof !1646

if.then518:                                       ; preds = %land.rhs507
  store i1 true, ptr @rcutree_migrate_callbacks.__already_done.52, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4406, i32 noundef 9, ptr noundef null) #24
  br label %if.end545

if.end545:                                        ; preds = %if.then518, %land.rhs507, %land.rhs464, %land.lhs.true431, %do.body428
  %len.i723 = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 13, i32 3
  %call.i.i.i724 = tail call zeroext i1 @__kasan_check_read(ptr noundef %len.i723, i32 noundef 4) #24
  %128 = ptrtoint ptr %len.i723 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load volatile i32, ptr %len.i723, align 4
  %cmp558.not = icmp eq i32 %129, 0
  br i1 %cmp558.not, label %lor.rhs560, label %land.rhs573

lor.rhs560:                                       ; preds = %if.end545
  %130 = ptrtoint ptr %cblist to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load volatile ptr, ptr %cblist, align 4
  %tobool.not.i725.not = icmp eq ptr %131, null
  br i1 %tobool.not.i725.not, label %cleanup, label %land.rhs573

land.rhs573:                                      ; preds = %lor.rhs560, %if.end545
  %.b670671 = load i1, ptr @rcutree_migrate_callbacks.__already_done.53, align 1
  br i1 %.b670671, label %cleanup, label %if.then584, !prof !1646

if.then584:                                       ; preds = %land.rhs573
  store i1 true, ptr @rcutree_migrate_callbacks.__already_done.53, align 1
  %call.i.i.i727 = tail call zeroext i1 @__kasan_check_read(ptr noundef %len.i723, i32 noundef 4) #24
  %132 = ptrtoint ptr %len.i723 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load volatile i32, ptr %len.i723, align 4
  %call601 = tail call ptr @rcu_segcblist_first_cb(ptr noundef %cblist) #24
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4411, i32 noundef 9, ptr noundef nonnull @.str.54, i32 noundef %cpu, i32 noundef %133, ptr noundef %call601) #24
  br label %cleanup

cleanup:                                          ; preds = %if.then584, %land.rhs573, %lor.rhs560, %lor.lhs.false, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_nocb_lock(ptr noundef %rdp) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end86, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %4, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1875
  %5 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1876
  %14 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i106 = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i106 to ptr
  %preempt_count.i.i107 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i107 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i107, align 4
  %sub.i = add i32 %17, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i107, align 4
  %tobool20.not = icmp eq i32 %13, 0
  br i1 %tobool20.not, label %land.rhs, label %if.end86

land.rhs:                                         ; preds = %land.lhs.true
  %18 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i108 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i108 to ptr
  %preempt_count.i.i109 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i109 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i109, align 4
  %add.i110 = add i32 %21, 1
  store volatile i32 %add.i110, ptr %preempt_count.i.i109, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1877
  %22 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cpu, align 4
  %arrayidx44 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %23
  %24 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx44, align 4
  %add45 = add i32 %25, ptrtoint (ptr @hardirqs_enabled to i32)
  %26 = inttoptr i32 %add45 to ptr
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %26, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1878
  %29 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i111 = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i111 to ptr
  %preempt_count.i.i112 = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i112 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i112, align 4
  %sub.i113 = add i32 %32, -1
  store volatile i32 %sub.i113, ptr %preempt_count.i.i112, align 4
  %tobool52.not = icmp eq i32 %28, 0
  br i1 %tobool52.not, label %if.end86, label %land.rhs55

land.rhs55:                                       ; preds = %land.rhs
  %.b102 = load i1, ptr @rcu_nocb_lock.__already_done, align 1
  br i1 %.b102, label %if.end86, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs55
  store i1 true, ptr @rcu_nocb_lock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 157, i32 noundef 9, ptr noundef null) #24
  br label %if.end86

if.end86:                                         ; preds = %if.then, %land.rhs55, %land.rhs, %land.lhs.true, %entry
  %call96 = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %rdp)
  br i1 %call96, label %if.end98, label %return

if.end98:                                         ; preds = %if.end86
  %nocb_lock = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 31
  tail call void @_raw_spin_lock(ptr noundef %nocb_lock) #24
  br label %return

return:                                           ; preds = %if.end98, %if.end86
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @rcu_advance_cbs(ptr noundef %rnp, ptr noundef %rdp) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @rcu_lockdep_assert_cblist_protected(ptr noundef %rdp)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end, label %land.rhs

land.rhs:                                         ; preds = %entry
  %dep_map = getelementptr inbounds %struct.raw_spinlock, ptr %rnp, i32 0, i32 4
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #24
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %if.end, !prof !1645

do.end:                                           ; preds = %land.rhs
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1576, i32 noundef 9, ptr noundef null) #24
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs, %entry
  %cblist = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 13
  %call24 = tail call zeroext i1 @rcu_segcblist_pend_cbs(ptr noundef %cblist) #24
  br i1 %call24, label %if.end26, label %return

if.end26:                                         ; preds = %if.end
  %gp_seq = getelementptr inbounds %struct.rcu_node, ptr %rnp, i32 0, i32 1
  %1 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %gp_seq, align 4
  tail call void @rcu_segcblist_advance(ptr noundef %cblist, i32 noundef %2) #24
  %call28 = tail call fastcc zeroext i1 @rcu_accelerate_cbs(ptr noundef %rnp, ptr noundef %rdp)
  br label %return

return:                                           ; preds = %if.end26, %if.end
  %retval.0 = phi i1 [ %call28, %if.end26 ], [ false, %if.end ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_segcblist_merge(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_segcblist_disable(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__call_rcu_nocb_wake(ptr noundef %rdp, i1 noundef zeroext %was_alldone, i32 noundef %flags) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %cur_gp_seq = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cur_gp_seq) #24
  %0 = ptrtoint ptr %cur_gp_seq to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %cur_gp_seq, align 4, !annotation !1767
  %nocb_gp_kthread = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 30
  %1 = ptrtoint ptr %nocb_gp_kthread to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %nocb_gp_kthread, align 16
  %.b96 = load i1, ptr @rcu_nocb_poll, align 1
  %tobool1.not = icmp eq ptr %2, null
  %or.cond = select i1 %.b96, i1 true, i1 %tobool1.not
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call fastcc void @rcu_nocb_unlock_irqrestore(ptr noundef %rdp, i32 noundef %flags)
  %3 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %cpu = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 68
  %4 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cpu, align 64
  %6 = load ptr, ptr @__call_rcu_nocb_wake.___tp_str, align 4
  tail call fastcc void @trace_rcu_nocb_wake(ptr noundef %3, i32 noundef %5, ptr noundef %6)
  br label %cleanup

if.end:                                           ; preds = %entry
  %cblist = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 13
  %len.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 13, i32 3
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %len.i, i32 noundef 4) #24
  %7 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %len.i, align 4
  %qlen_last_fqs_check = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 14
  br i1 %was_alldone, label %if.then4, label %if.else15

if.then4:                                         ; preds = %if.end
  %9 = ptrtoint ptr %qlen_last_fqs_check to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %qlen_last_fqs_check, align 8
  %and.i = and i32 %flags, 128
  %tobool8.not = icmp eq i32 %and.i, 0
  tail call fastcc void @rcu_nocb_unlock_irqrestore(ptr noundef %rdp, i32 noundef %flags)
  br i1 %tobool8.not, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.then4
  %nocb_gp_rdp.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 55
  %10 = ptrtoint ptr %nocb_gp_rdp.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %nocb_gp_rdp.i, align 128
  %nocb_gp_lock.i = getelementptr inbounds %struct.rcu_data, ptr %11, i32 0, i32 43
  %call.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %nocb_gp_lock.i) #24
  %call1.i = tail call fastcc zeroext i1 @__wake_nocb_gp(ptr noundef %11, ptr noundef %rdp, i1 noundef zeroext false, i32 noundef %call.i) #24
  %12 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %cpu11 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 68
  %13 = ptrtoint ptr %cpu11 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cpu11, align 64
  %15 = load ptr, ptr @__call_rcu_nocb_wake.___tp_str.472, align 4
  tail call fastcc void @trace_rcu_nocb_wake(ptr noundef %12, i32 noundef %14, ptr noundef %15)
  br label %cleanup

if.else:                                          ; preds = %if.then4
  %16 = load ptr, ptr @__call_rcu_nocb_wake.___tp_str.474, align 4
  %nocb_gp_rdp.i97 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 55
  %17 = ptrtoint ptr %nocb_gp_rdp.i97 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %nocb_gp_rdp.i97, align 128
  %nocb_gp_lock.i98 = getelementptr inbounds %struct.rcu_data, ptr %18, i32 0, i32 43
  %call.i99 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %nocb_gp_lock.i98) #24
  %nocb_defer_wakeup13.i = getelementptr inbounds %struct.rcu_data, ptr %18, i32 0, i32 33
  %19 = ptrtoint ptr %nocb_defer_wakeup13.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %nocb_defer_wakeup13.i, align 4
  %cmp14.i = icmp slt i32 %20, 2
  br i1 %cmp14.i, label %if.end.i, label %wake_nocb_gp_defer.exit

if.end.i:                                         ; preds = %if.else
  %nocb_timer17.i = getelementptr inbounds %struct.rcu_data, ptr %18, i32 0, i32 34
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %21 = load volatile i32, ptr @jiffies, align 128
  %add18.i = add i32 %21, 1
  %call19.i = tail call i32 @mod_timer(ptr noundef %nocb_timer17.i, i32 noundef %add18.i) #24
  %22 = ptrtoint ptr %nocb_defer_wakeup13.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %.pr = load i32, ptr %nocb_defer_wakeup13.i, align 4
  %cmp21.i = icmp slt i32 %.pr, 2
  br i1 %cmp21.i, label %do.body28.i, label %wake_nocb_gp_defer.exit

do.body28.i:                                      ; preds = %if.end.i
  %23 = ptrtoint ptr %nocb_defer_wakeup13.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile i32 2, ptr %nocb_defer_wakeup13.i, align 4
  br label %wake_nocb_gp_defer.exit

wake_nocb_gp_defer.exit:                          ; preds = %do.body28.i, %if.end.i, %if.else
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %nocb_gp_lock.i98, i32 noundef %call.i99) #24
  %24 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %cpu.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 68
  %25 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cpu.i, align 64
  tail call fastcc void @trace_rcu_nocb_wake(ptr noundef %24, i32 noundef %26, ptr noundef %16) #24
  br label %cleanup

if.else15:                                        ; preds = %if.end
  %27 = ptrtoint ptr %qlen_last_fqs_check to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %qlen_last_fqs_check, align 8
  %29 = load i32, ptr @qhimark, align 4
  %add = add i32 %29, %28
  %cmp17 = icmp sgt i32 %8, %add
  br i1 %cmp17, label %if.then19, label %if.else53

if.then19:                                        ; preds = %if.else15
  %30 = ptrtoint ptr %qlen_last_fqs_check to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %8, ptr %qlen_last_fqs_check, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %31 = load volatile i32, ptr @jiffies, align 128
  %nocb_gp_adv_time = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 35
  %32 = ptrtoint ptr %nocb_gp_adv_time to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %nocb_gp_adv_time, align 8
  %cmp21.not = icmp eq i32 %31, %33
  br i1 %cmp21.not, label %do.end36, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then19
  %call24 = call zeroext i1 @rcu_segcblist_nextgp(ptr noundef %cblist, ptr noundef nonnull %cur_gp_seq) #24
  br i1 %call24, label %land.lhs.true26, label %do.end36

land.lhs.true26:                                  ; preds = %land.lhs.true
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 7
  %34 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %mynode, align 16
  %gp_seq = getelementptr inbounds %struct.rcu_node, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %cur_gp_seq to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %cur_gp_seq, align 4
  %38 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %gp_seq, align 4
  %sub.i = sub i32 %39, %37
  %cmp.i = icmp sgt i32 %sub.i, -1
  br i1 %cmp.i, label %if.then29, label %do.end36

if.then29:                                        ; preds = %land.lhs.true26
  call fastcc void @rcu_advance_cbs_nowake(ptr noundef %35, ptr noundef %rdp)
  %40 = ptrtoint ptr %nocb_gp_adv_time to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %31, ptr %nocb_gp_adv_time, align 8
  br label %do.end36

do.end36:                                         ; preds = %if.then29, %land.lhs.true26, %land.lhs.true, %if.then19
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1879
  %nocb_cb_sleep = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 50
  %41 = ptrtoint ptr %nocb_cb_sleep to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %nocb_cb_sleep, align 4, !range !1644
  %tobool39.not = icmp eq i8 %42, 0
  br i1 %tobool39.not, label %lor.lhs.false41, label %land.lhs.true44

lor.lhs.false41:                                  ; preds = %do.end36
  %call43 = call zeroext i1 @rcu_segcblist_ready_cbs(ptr noundef %cblist) #24
  br i1 %call43, label %if.else49, label %land.lhs.true44

land.lhs.true44:                                  ; preds = %lor.lhs.false41, %do.end36
  %pprev.i.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 34, i32 0, i32 1
  %43 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile ptr, ptr %pprev.i.i, align 4
  %tobool.not.i.i.not = icmp eq ptr %44, null
  br i1 %tobool.not.i.i.not, label %if.then47, label %if.else49

if.then47:                                        ; preds = %land.lhs.true44
  call fastcc void @rcu_nocb_unlock_irqrestore(ptr noundef %rdp, i32 noundef %flags)
  %45 = load ptr, ptr @__call_rcu_nocb_wake.___tp_str.476, align 4
  %nocb_gp_rdp.i100 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 55
  %46 = ptrtoint ptr %nocb_gp_rdp.i100 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %nocb_gp_rdp.i100, align 128
  %nocb_gp_lock.i101 = getelementptr inbounds %struct.rcu_data, ptr %47, i32 0, i32 43
  %call.i102 = call i32 @_raw_spin_lock_irqsave(ptr noundef %nocb_gp_lock.i101) #24
  %nocb_defer_wakeup13.i103 = getelementptr inbounds %struct.rcu_data, ptr %47, i32 0, i32 33
  %48 = ptrtoint ptr %nocb_defer_wakeup13.i103 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %nocb_defer_wakeup13.i103, align 4
  %cmp14.i104 = icmp slt i32 %49, 2
  br i1 %cmp14.i104, label %if.then16.i108, label %if.end.i110

if.then16.i108:                                   ; preds = %if.then47
  %nocb_timer17.i105 = getelementptr inbounds %struct.rcu_data, ptr %47, i32 0, i32 34
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %50 = load volatile i32, ptr @jiffies, align 128
  %add18.i106 = add i32 %50, 1
  %call19.i107 = call i32 @mod_timer(ptr noundef %nocb_timer17.i105, i32 noundef %add18.i106) #24
  %51 = ptrtoint ptr %nocb_defer_wakeup13.i103 to i32
  call void @__asan_load4_noabort(i32 %51)
  %.pr115 = load i32, ptr %nocb_defer_wakeup13.i103, align 4
  br label %if.end.i110

if.end.i110:                                      ; preds = %if.then16.i108, %if.then47
  %52 = phi i32 [ %.pr115, %if.then16.i108 ], [ %49, %if.then47 ]
  %cmp21.i109 = icmp slt i32 %52, 3
  br i1 %cmp21.i109, label %do.body28.i111, label %wake_nocb_gp_defer.exit113

do.body28.i111:                                   ; preds = %if.end.i110
  %53 = ptrtoint ptr %nocb_defer_wakeup13.i103 to i32
  call void @__asan_store4_noabort(i32 %53)
  store volatile i32 3, ptr %nocb_defer_wakeup13.i103, align 4
  br label %wake_nocb_gp_defer.exit113

wake_nocb_gp_defer.exit113:                       ; preds = %do.body28.i111, %if.end.i110
  call void @_raw_spin_unlock_irqrestore(ptr noundef %nocb_gp_lock.i101, i32 noundef %call.i102) #24
  %54 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %cpu.i112 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 68
  %55 = ptrtoint ptr %cpu.i112 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %cpu.i112, align 64
  call fastcc void @trace_rcu_nocb_wake(ptr noundef %54, i32 noundef %56, ptr noundef %45) #24
  br label %cleanup

if.else49:                                        ; preds = %land.lhs.true44, %lor.lhs.false41
  call fastcc void @rcu_nocb_unlock_irqrestore(ptr noundef %rdp, i32 noundef %flags)
  %57 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %cpu50 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 68
  %58 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %cpu50, align 64
  %60 = load ptr, ptr @__call_rcu_nocb_wake.___tp_str.478, align 4
  call fastcc void @trace_rcu_nocb_wake(ptr noundef %57, i32 noundef %59, ptr noundef %60)
  br label %cleanup

if.else53:                                        ; preds = %if.else15
  tail call fastcc void @rcu_nocb_unlock_irqrestore(ptr noundef %rdp, i32 noundef %flags)
  %61 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %cpu54 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 68
  %62 = ptrtoint ptr %cpu54 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %cpu54, align 64
  %64 = load ptr, ptr @__call_rcu_nocb_wake.___tp_str.480, align 4
  tail call fastcc void @trace_rcu_nocb_wake(ptr noundef %61, i32 noundef %63, ptr noundef %64)
  br label %cleanup

cleanup:                                          ; preds = %if.else53, %if.else49, %wake_nocb_gp_defer.exit113, %wake_nocb_gp_defer.exit, %if.then9, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cur_gp_seq) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_nocb_unlock(ptr noundef %rdp) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %rdp)
  br i1 %call, label %do.body, label %if.end98

do.body:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end88, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body
  %1 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %4, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1880
  %5 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1881
  %14 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i106 = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i106 to ptr
  %preempt_count.i.i107 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i107 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i107, align 4
  %sub.i = add i32 %17, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i107, align 4
  %tobool21.not = icmp eq i32 %13, 0
  br i1 %tobool21.not, label %land.rhs, label %if.end88

land.rhs:                                         ; preds = %land.lhs.true
  %18 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i108 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i108 to ptr
  %preempt_count.i.i109 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i109 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i109, align 4
  %add.i110 = add i32 %21, 1
  store volatile i32 %add.i110, ptr %preempt_count.i.i109, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1882
  %22 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cpu, align 4
  %arrayidx45 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %23
  %24 = ptrtoint ptr %arrayidx45 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx45, align 4
  %add46 = add i32 %25, ptrtoint (ptr @hardirqs_enabled to i32)
  %26 = inttoptr i32 %add46 to ptr
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %26, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1883
  %29 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i111 = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i111 to ptr
  %preempt_count.i.i112 = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i112 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i112, align 4
  %sub.i113 = add i32 %32, -1
  store volatile i32 %sub.i113, ptr %preempt_count.i.i112, align 4
  %tobool53.not = icmp eq i32 %28, 0
  br i1 %tobool53.not, label %if.end88, label %land.rhs56

land.rhs56:                                       ; preds = %land.rhs
  %.b102 = load i1, ptr @rcu_nocb_unlock.__already_done, align 1
  br i1 %.b102, label %if.end88, label %if.then63, !prof !1646

if.then63:                                        ; preds = %land.rhs56
  store i1 true, ptr @rcu_nocb_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 170, i32 noundef 9, ptr noundef null) #24
  br label %if.end88

if.end88:                                         ; preds = %if.then63, %land.rhs56, %land.rhs, %land.lhs.true, %do.body
  %nocb_lock = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 31
  tail call void @_raw_spin_unlock(ptr noundef %nocb_lock) #24
  br label %if.end98

if.end98:                                         ; preds = %if.end88, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rcu_segcblist_first_cb(ptr noundef) local_unnamed_addr #5

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @rcu_spawn_gp_kthread() #9 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %sp = alloca %struct.sched_param, align 4
  %0 = load i32, ptr @kthread_prio, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %sp) #24
  %1 = ptrtoint ptr %sp to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %sp, align 4, !annotation !1767
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %if.end3.sink.split, label %if.else

if.else:                                          ; preds = %entry
  %cmp1 = icmp ugt i32 %0, 99
  br i1 %cmp1, label %if.end3.sink.split, label %if.end3

if.end3.sink.split:                               ; preds = %if.else, %entry
  %.sink = phi i32 [ 0, %entry ], [ 99, %if.else ]
  store i32 %.sink, ptr @kthread_prio, align 4
  br label %if.end3

if.end3:                                          ; preds = %if.end3.sink.split, %if.else
  %2 = load i32, ptr @kthread_prio, align 4
  %cmp4.not = icmp eq i32 %2, %0
  br i1 %cmp4.not, label %if.end6, label %do.end

do.end:                                           ; preds = %if.end3
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.255, i32 noundef %2, i32 noundef %0) #27
  br label %if.end6

if.end6:                                          ; preds = %do.end, %if.end3
  store i32 1, ptr @rcu_scheduler_fully_active, align 4
  %3 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %call7 = tail call ptr (ptr, ptr, i32, ptr, ...) @kthread_create_on_node(ptr noundef nonnull @rcu_gp_kthread, ptr noundef null, i32 noundef -1, ptr noundef nonnull @.str.257, ptr noundef %3) #24
  %cmp.i = icmp ugt ptr %call7, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %land.rhs, label %if.end51

land.rhs:                                         ; preds = %if.end6
  %.b256 = load i1, ptr @rcu_spawn_gp_kthread.__already_done, align 1
  br i1 %.b256, label %cleanup, label %if.then15, !prof !1646

if.then15:                                        ; preds = %land.rhs
  store i1 true, ptr @rcu_spawn_gp_kthread.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4465, i32 noundef 9, ptr noundef nonnull @.str.258, ptr noundef nonnull @.str.256) #24
  br label %cleanup

if.end51:                                         ; preds = %if.end6
  %4 = load i32, ptr @kthread_prio, align 4
  %tobool52.not = icmp eq i32 %4, 0
  br i1 %tobool52.not, label %if.end55, label %if.then53

if.then53:                                        ; preds = %if.end51
  %5 = ptrtoint ptr %sp to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %sp, align 4
  %call54 = call i32 @sched_setscheduler_nocheck(ptr noundef %call7, i32 noundef 1, ptr noundef nonnull %sp) #24
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end51
  %call61 = call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @rcu_state) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %6 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %6, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 31), align 4
  %7 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %7, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 32), align 128
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1884
  store volatile ptr %call7, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 8), align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %8 = load i32, ptr @debug_locks, align 4
  %tobool111.not = icmp eq i32 %8, 0
  br i1 %tobool111.not, label %if.end215, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end55
  %9 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !1885
  %13 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 3
  %15 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %16
  %17 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx, align 4
  %add = add i32 %18, ptrtoint (ptr @lockdep_recursion to i32)
  %19 = inttoptr i32 %add to ptr
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %19, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !1886
  %22 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i261 = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i261 to ptr
  %preempt_count.i.i262 = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i262 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i262, align 4
  %sub.i = add i32 %25, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i262, align 4
  %tobool135.not = icmp eq i32 %21, 0
  br i1 %tobool135.not, label %land.rhs136, label %if.end215

land.rhs136:                                      ; preds = %land.lhs.true
  %26 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i263 = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i263 to ptr
  %preempt_count.i.i264 = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i264 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i264, align 4
  %add.i265 = add i32 %29, 1
  store volatile i32 %add.i265, ptr %preempt_count.i.i264, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !1887
  %30 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %cpu, align 4
  %arrayidx160 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %31
  %32 = ptrtoint ptr %arrayidx160 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %arrayidx160, align 4
  %add161 = add i32 %33, ptrtoint (ptr @hardirqs_enabled to i32)
  %34 = inttoptr i32 %add161 to ptr
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %34, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !1888
  %37 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i266 = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i.i266 to ptr
  %preempt_count.i.i267 = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %preempt_count.i.i267 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %preempt_count.i.i267, align 4
  %sub.i268 = add i32 %40, -1
  store volatile i32 %sub.i268, ptr %preempt_count.i.i267, align 4
  %tobool168.not = icmp eq i32 %36, 0
  br i1 %tobool168.not, label %if.end215, label %land.rhs177

land.rhs177:                                      ; preds = %land.rhs136
  %.b254255 = load i1, ptr @rcu_spawn_gp_kthread.__already_done.259, align 1
  br i1 %.b254255, label %if.end215, label %if.then188, !prof !1646

if.then188:                                       ; preds = %land.rhs177
  store i1 true, ptr @rcu_spawn_gp_kthread.__already_done.259, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4477, i32 noundef 9, ptr noundef null) #24
  br label %if.end215

if.end215:                                        ; preds = %if.then188, %land.rhs177, %land.rhs136, %land.lhs.true, %if.end55
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @rcu_state, i32 noundef %call61) #24
  %call236 = call i32 @wake_up_process(ptr noundef %call7) #24
  call fastcc void @rcu_spawn_nocb_kthreads() #30
  call fastcc void @rcu_spawn_core_kthreads() #30
  br label %cleanup

cleanup:                                          ; preds = %if.end215, %if.then15, %land.rhs
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %sp) #24
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_scheduler_starting() local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @__num_online_cpus, i32 noundef 4) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__num_online_cpus to i32))
  %0 = load volatile i32, ptr @__num_online_cpus, align 4
  %cmp.not = icmp eq i32 %0, 1
  br i1 %cmp.not, label %if.end, label %do.end, !prof !1646

do.end:                                           ; preds = %entry
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4498, i32 noundef 9, ptr noundef null) #24
  br label %if.end

if.end:                                           ; preds = %do.end, %entry
  %call20 = tail call i64 @nr_context_switches() #24
  %cmp21.not = icmp eq i64 %call20, 0
  br i1 %cmp21.not, label %if.end43, label %do.end37, !prof !1646

do.end37:                                         ; preds = %if.end
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4499, i32 noundef 9, ptr noundef null) #24
  br label %if.end43

if.end43:                                         ; preds = %do.end37, %if.end
  tail call void @rcu_test_sync_prims() #24
  store i32 1, ptr @rcu_scheduler_active, align 4
  tail call void @rcu_test_sync_prims() #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @nr_context_switches() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_test_sync_prims() local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_init_geometry() local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %rcu_capacity = alloca [2 x i32], align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %rcu_capacity) #24
  %0 = getelementptr inbounds [2 x i32], ptr %rcu_capacity, i32 0, i32 1
  %.b167 = load i1, ptr @rcu_init_geometry.initialized, align 1
  br i1 %.b167, label %if.then, label %if.end37

if.then:                                          ; preds = %entry
  %1 = load i32, ptr @rcu_init_geometry.old_nr_cpu_ids, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not = icmp eq i32 %1, %2
  br i1 %cmp.not, label %cleanup, label %land.rhs

land.rhs:                                         ; preds = %if.then
  %.b166169 = load i1, ptr @rcu_init_geometry.__already_done, align 1
  br i1 %.b166169, label %cleanup, label %if.then8, !prof !1646

if.then8:                                         ; preds = %land.rhs
  store i1 true, ptr @rcu_init_geometry.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4605, i32 noundef 9, ptr noundef null) #24
  br label %cleanup

if.end37:                                         ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %3 = load i32, ptr @nr_cpu_ids, align 4
  store i32 %3, ptr @rcu_init_geometry.old_nr_cpu_ids, align 4
  store i1 true, ptr @rcu_init_geometry.initialized, align 1
  %div168 = lshr i32 %3, 8
  %add = add nuw nsw i32 %div168, 1
  %4 = load i32, ptr @jiffies_till_first_fqs, align 4
  %cmp38 = icmp eq i32 %4, -1
  br i1 %cmp38, label %if.then39, label %if.end40

if.then39:                                        ; preds = %if.end37
  store i32 %add, ptr @jiffies_till_first_fqs, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then39, %if.end37
  %5 = load i32, ptr @jiffies_till_next_fqs, align 4
  %cmp41 = icmp eq i32 %5, -1
  br i1 %cmp41, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end40
  store i32 %add, ptr @jiffies_till_next_fqs, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %if.end40
  %6 = load i32, ptr @jiffies_till_sched_qs, align 4
  %cmp.not.i = icmp eq i32 %6, -1
  br i1 %cmp.not.i, label %do.end9.i, label %adjust_jiffies_till_sched_qs.exit

do.end9.i:                                        ; preds = %if.end43
  %7 = load volatile i32, ptr @jiffies_till_first_fqs, align 4
  %8 = load volatile i32, ptr @jiffies_till_next_fqs, align 4
  %mul.i = shl i32 %8, 1
  %add.i = add i32 %mul.i, %7
  %add14.i = add nuw nsw i32 %div168, 10
  %9 = tail call i32 @llvm.umax.i32(i32 %add.i, i32 %add14.i) #24
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.330, i32 noundef %9) #27
  br label %adjust_jiffies_till_sched_qs.exit

adjust_jiffies_till_sched_qs.exit:                ; preds = %do.end9.i, %if.end43
  %.sink.i = phi i32 [ %9, %do.end9.i ], [ %6, %if.end43 ]
  store volatile i32 %.sink.i, ptr @jiffies_to_sched_qs, align 4
  %10 = load i32, ptr @rcu_fanout_leaf, align 4
  %cmp44 = icmp eq i32 %10, 2
  br i1 %cmp44, label %land.lhs.true, label %do.end50

land.lhs.true:                                    ; preds = %adjust_jiffies_till_sched_qs.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %11 = load i32, ptr @nr_cpu_ids, align 4
  %cmp45 = icmp eq i32 %11, 4
  br i1 %cmp45, label %cleanup, label %do.end50

do.end50:                                         ; preds = %land.lhs.true, %adjust_jiffies_till_sched_qs.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %12 = load i32, ptr @nr_cpu_ids, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.55, i32 noundef %10, i32 noundef %12) #27
  %13 = load i32, ptr @rcu_fanout_leaf, align 4
  %14 = add i32 %13, -33
  %15 = icmp ult i32 %14, -31
  br i1 %15, label %if.then54, label %if.end81

if.then54:                                        ; preds = %do.end50
  store i32 2, ptr @rcu_fanout_leaf, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4642, i32 noundef 9, ptr noundef null) #24
  br label %cleanup

if.end81:                                         ; preds = %do.end50
  %16 = ptrtoint ptr %rcu_capacity to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %13, ptr %rcu_capacity, align 4
  %mul = shl nuw nsw i32 %13, 5
  %17 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %mul, ptr %0, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %18 = load i32, ptr @nr_cpu_ids, align 4
  %cmp86 = icmp ugt i32 %18, %mul
  br i1 %cmp86, label %if.then87, label %for.cond115

if.then87:                                        ; preds = %if.end81
  store i32 2, ptr @rcu_fanout_leaf, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4660, i32 noundef 9, ptr noundef null) #24
  br label %cleanup

for.cond115:                                      ; preds = %for.cond115, %if.end81
  %i.1 = phi i32 [ %inc120, %for.cond115 ], [ 0, %if.end81 ]
  %arrayidx116 = getelementptr [2 x i32], ptr %rcu_capacity, i32 0, i32 %i.1
  %19 = ptrtoint ptr %arrayidx116 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx116, align 4
  %cmp117 = icmp ugt i32 %18, %20
  %inc120 = add i32 %i.1, 1
  br i1 %cmp117, label %for.cond115, label %for.end121

for.end121:                                       ; preds = %for.cond115
  store i32 %inc120, ptr @rcu_num_lvls, align 4
  %cmp124170 = icmp ult i32 %i.1, 2147483647
  br i1 %cmp124170, label %for.body125.lr.ph, label %for.end135.thread

for.end135.thread:                                ; preds = %for.end121
  store i32 0, ptr @rcu_num_nodes, align 4
  br label %cleanup

for.body125.lr.ph:                                ; preds = %for.end121
  %add129 = add i32 %18, -1
  br label %for.body125

for.body125:                                      ; preds = %for.body125, %for.body125.lr.ph
  %i.2171 = phi i32 [ 0, %for.body125.lr.ph ], [ %inc134, %for.body125 ]
  %sub127 = sub i32 %i.1, %i.2171
  %arrayidx128 = getelementptr [2 x i32], ptr %rcu_capacity, i32 0, i32 %sub127
  %21 = ptrtoint ptr %arrayidx128 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx128, align 4
  %sub130 = add i32 %add129, %22
  %div131 = udiv i32 %sub130, %22
  %arrayidx132 = getelementptr [2 x i32], ptr @num_rcu_lvl, i32 0, i32 %i.2171
  %23 = ptrtoint ptr %arrayidx132 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %div131, ptr %arrayidx132, align 4
  %inc134 = add nuw nsw i32 %i.2171, 1
  %exitcond.not = icmp eq i32 %i.1, %i.2171
  br i1 %exitcond.not, label %for.end135, label %for.body125

for.end135:                                       ; preds = %for.body125
  store i32 0, ptr @rcu_num_nodes, align 4
  br i1 %cmp124170, label %for.body138, label %cleanup

for.body138:                                      ; preds = %for.body138, %for.end135
  %i.3175 = phi i32 [ %inc142, %for.body138 ], [ 0, %for.end135 ]
  %add140172174 = phi i32 [ %add140, %for.body138 ], [ 0, %for.end135 ]
  %arrayidx139 = getelementptr [2 x i32], ptr @num_rcu_lvl, i32 0, i32 %i.3175
  %24 = ptrtoint ptr %arrayidx139 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx139, align 4
  %add140 = add i32 %add140172174, %25
  %inc142 = add nuw nsw i32 %i.3175, 1
  %exitcond178.not = icmp eq i32 %i.3175, %i.1
  br i1 %exitcond178.not, label %for.cond136.cleanup.loopexit_crit_edge, label %for.body138

for.cond136.cleanup.loopexit_crit_edge:           ; preds = %for.body138
  store i32 %add140, ptr @rcu_num_nodes, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.cond136.cleanup.loopexit_crit_edge, %for.end135, %for.end135.thread, %if.then87, %if.then54, %land.lhs.true, %if.then8, %land.rhs, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %rcu_capacity) #24
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #11

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_init() local_unnamed_addr #9 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @rcu_early_boot_tests() #24
  tail call fastcc void @kfree_rcu_batch_init() #30
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.550) #27
  tail call fastcc void @rcu_bootup_announce_oddness() #27
  tail call void @rcu_init_geometry()
  tail call fastcc void @rcu_init_one() #30
  %0 = load i8, ptr @dump_tree, align 1, !range !1644
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call fastcc void @rcu_dump_rcu_node_tree() #30
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8, ptr @use_softirq, align 1, !range !1644
  %tobool1.not = icmp eq i8 %1, 0
  br i1 %tobool1.not, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.end
  tail call void @open_softirq(i32 noundef 9, ptr noundef nonnull @rcu_core_si) #24
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %call = tail call i32 @register_pm_notifier(ptr noundef nonnull @rcu_init.rcu_pm_notify_nb) #24
  %call474 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  %cmp75 = icmp ult i32 %call474, %2
  br i1 %cmp75, label %for.body, label %for.end

for.body:                                         ; preds = %for.body, %if.end3
  %call476 = phi i32 [ %call4, %for.body ], [ %call474, %if.end3 ]
  %call5 = tail call i32 @rcutree_prepare_cpu(i32 noundef %call476)
  tail call void @rcu_cpu_starting(i32 noundef %call476)
  %call6 = tail call i32 @rcutree_online_cpu(i32 noundef %call476)
  %call4 = tail call i32 @cpumask_next(i32 noundef %call476, ptr noundef nonnull @__cpu_online_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %3 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call4, %3
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %if.end3
  %call7 = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.57, i32 noundef 8, i32 noundef 0) #24
  store ptr %call7, ptr @rcu_gp_wq, align 4
  %tobool8.not = icmp eq ptr %call7, null
  br i1 %tobool8.not, label %do.end, label %if.end24, !prof !1645

do.end:                                           ; preds = %for.end
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4768, i32 noundef 9, ptr noundef null) #24
  br label %if.end24

if.end24:                                         ; preds = %do.end, %for.end
  %call31 = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.58, i32 noundef 8, i32 noundef 0) #24
  store ptr %call31, ptr @rcu_par_gp_wq, align 4
  %tobool33.not = icmp eq ptr %call31, null
  br i1 %tobool33.not, label %do.end51, label %if.end57, !prof !1645

do.end51:                                         ; preds = %if.end24
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4770, i32 noundef 9, ptr noundef null) #24
  br label %if.end57

if.end57:                                         ; preds = %do.end51, %if.end24
  %4 = load i32, ptr @qovld, align 4
  %cmp65 = icmp slt i32 %4, 0
  br i1 %cmp65, label %if.then66, label %if.end67

if.then66:                                        ; preds = %if.end57
  %5 = load i32, ptr @qhimark, align 4
  %mul = shl i32 %5, 1
  br label %if.end67

if.end67:                                         ; preds = %if.then66, %if.end57
  %storemerge = phi i32 [ %mul, %if.then66 ], [ %4, %if.end57 ]
  store i32 %storemerge, ptr @qovld_calc, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_early_boot_tests() local_unnamed_addr #5

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @kfree_rcu_batch_init() unnamed_addr #9 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @rcu_delay_page_cache_fill_msec, align 4
  %1 = icmp ugt i32 %0, 100000
  br i1 %1, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = tail call i32 @llvm.smax.i32(i32 %0, i32 0)
  %3 = tail call i32 @llvm.umin.i32(i32 %2, i32 100000)
  store i32 %3, ptr @rcu_delay_page_cache_fill_msec, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.332, i32 noundef %3) #27
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call10140 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp11141 = icmp ult i32 %call10140, %4
  br i1 %cmp11141, label %for.body, label %for.end95

for.body:                                         ; preds = %do.body45, %if.end
  %call10142 = phi i32 [ %call10, %do.body45 ], [ %call10140, %if.end ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call10142
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx, align 4
  %add = add i32 %6, ptrtoint (ptr @krc to i32)
  %7 = inttoptr i32 %add to ptr
  br label %do.body20

do.body20:                                        ; preds = %do.body20, %for.body
  %cmp18 = phi i1 [ true, %for.body ], [ false, %do.body20 ]
  %i.0139 = phi i32 [ 0, %for.body ], [ 1, %do.body20 ]
  %arrayidx21 = getelementptr %struct.kfree_rcu_cpu, ptr %7, i32 0, i32 2, i32 %i.0139
  tail call void @__init_work(ptr noundef %arrayidx21, i32 noundef 0) #24
  %8 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -64, ptr %arrayidx21, align 4
  %lockdep_map = getelementptr inbounds %struct.work_struct, ptr %arrayidx21, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.334, ptr noundef nonnull @kfree_rcu_batch_init.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #24
  %entry34 = getelementptr inbounds %struct.work_struct, ptr %arrayidx21, i32 0, i32 1
  %9 = ptrtoint ptr %entry34 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %entry34, ptr %entry34, align 4
  %prev.i = getelementptr inbounds %struct.work_struct, ptr %arrayidx21, i32 0, i32 1, i32 1
  %10 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %entry34, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.work_struct, ptr %arrayidx21, i32 0, i32 2
  %11 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr @kfree_rcu_work, ptr %func, align 4
  %krcp43 = getelementptr %struct.kfree_rcu_cpu, ptr %7, i32 0, i32 2, i32 %i.0139, i32 3
  %12 = ptrtoint ptr %krcp43 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %7, ptr %krcp43, align 4
  br i1 %cmp18, label %do.body20, label %do.body45

do.body45:                                        ; preds = %do.body20
  %monitor_work = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %7, i32 0, i32 4
  tail call void @__init_work(ptr noundef %monitor_work, i32 noundef 0) #24
  %13 = ptrtoint ptr %monitor_work to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 -64, ptr %monitor_work, align 8
  %lockdep_map54 = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %7, i32 0, i32 4, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map54, ptr noundef nonnull @.str.336, ptr noundef nonnull @kfree_rcu_batch_init.__key.335, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #24
  %entry57 = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %7, i32 0, i32 4, i32 0, i32 1
  %14 = ptrtoint ptr %entry57 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %entry57, ptr %entry57, align 4
  %prev.i137 = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %7, i32 0, i32 4, i32 0, i32 1, i32 1
  %15 = ptrtoint ptr %prev.i137 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %entry57, ptr %prev.i137, align 4
  %func60 = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %7, i32 0, i32 4, i32 0, i32 2
  %16 = ptrtoint ptr %func60 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr @kfree_rcu_monitor, ptr %func60, align 4
  %timer = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %7, i32 0, i32 4, i32 1
  tail call void @init_timer_key(ptr noundef %timer, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef nonnull @.str.338, ptr noundef nonnull @kfree_rcu_batch_init.__key.337) #24
  %page_cache_work = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %7, i32 0, i32 8
  tail call void @__init_work(ptr noundef %page_cache_work, i32 noundef 0) #24
  %17 = ptrtoint ptr %page_cache_work to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 -64, ptr %page_cache_work, align 4
  %lockdep_map79 = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %7, i32 0, i32 8, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map79, ptr noundef nonnull @.str.340, ptr noundef nonnull @kfree_rcu_batch_init.__key.339, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #24
  %entry82 = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %7, i32 0, i32 8, i32 0, i32 1
  %18 = ptrtoint ptr %entry82 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %entry82, ptr %entry82, align 4
  %prev.i138 = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %7, i32 0, i32 8, i32 0, i32 1, i32 1
  %19 = ptrtoint ptr %prev.i138 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %entry82, ptr %prev.i138, align 4
  %func85 = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %7, i32 0, i32 8, i32 0, i32 2
  %20 = ptrtoint ptr %func85 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr @fill_page_cache_func, ptr %func85, align 4
  %timer90 = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %7, i32 0, i32 8, i32 1
  tail call void @init_timer_key(ptr noundef %timer90, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef nonnull @.str.342, ptr noundef nonnull @kfree_rcu_batch_init.__key.341) #24
  %initialized = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %7, i32 0, i32 6
  %21 = ptrtoint ptr %initialized to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 1, ptr %initialized, align 1
  %call10 = tail call i32 @cpumask_next(i32 noundef %call10142, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %22 = load i32, ptr @nr_cpu_ids, align 4
  %cmp11 = icmp ult i32 %call10, %22
  br i1 %cmp11, label %for.body, label %for.end95

for.end95:                                        ; preds = %do.body45, %if.end
  %call96 = tail call i32 @register_shrinker(ptr noundef nonnull @kfree_rcu_shrinker) #24
  %tobool.not = icmp eq i32 %call96, 0
  br i1 %tobool.not, label %if.end103, label %do.end100

do.end100:                                        ; preds = %for.end95
  %call102 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.344) #27
  br label %if.end103

if.end103:                                        ; preds = %do.end100, %for.end95
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_init_one() unnamed_addr #9 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %levelspread = alloca [2 x i32], align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %levelspread) #24
  %0 = getelementptr inbounds [2 x i32], ptr %levelspread, i32 0, i32 1
  %1 = load i32, ptr @rcu_num_lvls, align 4
  %2 = add i32 %1, -3
  %3 = icmp ult i32 %2, -2
  br i1 %3, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %cmp2182 = icmp ugt i32 %1, 1
  br i1 %cmp2182, label %for.body, label %for.end.thread

if.then:                                          ; preds = %entry
  call void @__asan_handle_no_return()
  tail call void (ptr, ...) @panic(ptr noundef nonnull @.str.350) #29
  unreachable

for.body:                                         ; preds = %for.cond.preheader
  %4 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 1, i32 0), align 128
  %5 = load i32, ptr @num_rcu_lvl, align 4
  %add.ptr = getelementptr %struct.rcu_node, ptr %4, i32 %5
  store ptr %add.ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 1, i32 1), align 4
  %6 = ptrtoint ptr %levelspread to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -2147483648, ptr %levelspread, align 4
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 -2147483648, ptr %0, align 4
  %8 = load i8, ptr @rcu_fanout_exact, align 1, !range !1644
  %tobool.not.i = icmp eq i8 %8, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

for.end.thread:                                   ; preds = %for.cond.preheader
  %9 = ptrtoint ptr %levelspread to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -2147483648, ptr %levelspread, align 4
  %10 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 -2147483648, ptr %0, align 4
  %11 = load i8, ptr @rcu_fanout_exact, align 1, !range !1644
  %tobool.not.i197 = icmp eq i8 %11, 0
  br i1 %tobool.not.i197, label %for.body12.preheader.i, label %rcu_init_levelspread.exit.thread

rcu_init_levelspread.exit.thread:                 ; preds = %for.end.thread
  %12 = load i32, ptr @rcu_fanout_leaf, align 4
  %sub.i199 = add nsw i32 %1, -1
  %arrayidx1.i200 = getelementptr i32, ptr %levelspread, i32 %sub.i199
  %13 = ptrtoint ptr %arrayidx1.i200 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %arrayidx1.i200, align 4
  br label %for.body9.preheader

if.then.i:                                        ; preds = %for.body
  %14 = load i32, ptr @rcu_fanout_leaf, align 4
  %sub.i = add nsw i32 %1, -1
  %arrayidx1.i = getelementptr i32, ptr %levelspread, i32 %sub.i
  %15 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %arrayidx1.i, align 4
  %sub2.i = add i32 %1, -2
  %cmp43.i = icmp sgt i32 %sub2.i, -1
  br i1 %cmp43.i, label %for.body5.i, label %rcu_init_levelspread.exit

for.body5.i:                                      ; preds = %if.then.i
  %arrayidx6.i = getelementptr i32, ptr %levelspread, i32 %sub2.i
  %16 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 32, ptr %arrayidx6.i, align 4
  br label %rcu_init_levelspread.exit

if.else.i:                                        ; preds = %for.body
  %cmp116.i = icmp sgt i32 %1, 0
  br i1 %cmp116.i, label %for.body12.preheader.i, label %rcu_init_levelspread.exit

for.body12.preheader.i:                           ; preds = %if.else.i, %for.end.thread
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %17 = load i32, ptr @nr_cpu_ids, align 4
  br label %for.body12.i

for.body12.i:                                     ; preds = %for.body12.i, %for.body12.preheader.i
  %i.28.i.in = phi i32 [ %i.28.i, %for.body12.i ], [ %1, %for.body12.preheader.i ]
  %cprv.07.i = phi i32 [ %19, %for.body12.i ], [ %17, %for.body12.preheader.i ]
  %i.28.i = add nsw i32 %i.28.i.in, -1
  %arrayidx13.i = getelementptr i32, ptr @num_rcu_lvl, i32 %i.28.i
  %18 = ptrtoint ptr %arrayidx13.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx13.i, align 4
  %add.i = add i32 %cprv.07.i, -1
  %sub14.i = add i32 %add.i, %19
  %div.i = sdiv i32 %sub14.i, %19
  %arrayidx15.i = getelementptr i32, ptr %levelspread, i32 %i.28.i
  %20 = ptrtoint ptr %arrayidx15.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %div.i, ptr %arrayidx15.i, align 4
  %cmp11.i.not = icmp eq i32 %i.28.i, 0
  br i1 %cmp11.i.not, label %rcu_init_levelspread.exit, label %for.body12.i

rcu_init_levelspread.exit:                        ; preds = %for.body12.i, %if.else.i, %for.body5.i, %if.then.i
  %i.1187 = add i32 %1, -1
  %cmp8188 = icmp sgt i32 %i.1187, -1
  br i1 %cmp8188, label %for.body9.preheader, label %do.body91

for.body9.preheader:                              ; preds = %rcu_init_levelspread.exit, %rcu_init_levelspread.exit.thread
  %i.1191.ph = phi i32 [ %i.1187, %rcu_init_levelspread.exit ], [ 0, %rcu_init_levelspread.exit.thread ]
  br label %for.body9

for.cond7.loopexit:                               ; preds = %if.end62, %for.body9
  %i.1 = add i32 %i.1191, -1
  %cmp8 = icmp sgt i32 %i.1, -1
  br i1 %cmp8, label %for.body9, label %do.body91

for.body9:                                        ; preds = %for.cond7.loopexit, %for.body9.preheader
  %i.1191 = phi i32 [ %i.1, %for.cond7.loopexit ], [ %i.1191.ph, %for.body9.preheader ]
  %cpustride.0190 = phi i32 [ %mul, %for.cond7.loopexit ], [ 1, %for.body9.preheader ]
  %i.1.in189 = phi i32 [ %i.1191, %for.cond7.loopexit ], [ %1, %for.body9.preheader ]
  %arrayidx10 = getelementptr [2 x i32], ptr %levelspread, i32 0, i32 %i.1191
  %21 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx10, align 4
  %mul = mul i32 %22, %cpustride.0190
  %arrayidx13 = getelementptr [2 x i32], ptr @num_rcu_lvl, i32 0, i32 %i.1191
  %23 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx13, align 4
  %cmp14184 = icmp sgt i32 %24, 0
  br i1 %cmp14184, label %do.body16.lr.ph, label %for.cond7.loopexit

do.body16.lr.ph:                                  ; preds = %for.body9
  %arrayidx11 = getelementptr %struct.rcu_state, ptr @rcu_state, i32 0, i32 1, i32 %i.1191
  %25 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx11, align 4
  %arrayidx20 = getelementptr [2 x ptr], ptr @rcu_init_one.buf, i32 0, i32 %i.1191
  %arrayidx21 = getelementptr [2 x %struct.lock_class_key], ptr @rcu_init_one.rcu_node_class, i32 0, i32 %i.1191
  %arrayidx31 = getelementptr [2 x ptr], ptr @rcu_init_one.fqs, i32 0, i32 %i.1191
  %arrayidx32 = getelementptr [2 x %struct.lock_class_key], ptr @rcu_init_one.rcu_fqs_class, i32 0, i32 %i.1191
  %cmp48 = icmp eq i32 %i.1191, 0
  %sub50 = add i32 %i.1.in189, -2
  %arrayidx51 = getelementptr [2 x i32], ptr %levelspread, i32 0, i32 %sub50
  %arrayidx57 = getelementptr %struct.rcu_state, ptr @rcu_state, i32 0, i32 1, i32 %sub50
  %conv63 = trunc i32 %i.1191 to i8
  br label %do.body16

do.body16:                                        ; preds = %if.end62, %do.body16.lr.ph
  %j.0186 = phi i32 [ 0, %do.body16.lr.ph ], [ %add, %if.end62 ]
  %rnp.0185 = phi ptr [ %26, %do.body16.lr.ph ], [ %incdec.ptr, %if.end62 ]
  tail call void @__raw_spin_lock_init(ptr noundef %rnp.0185, ptr noundef nonnull @.str.351, ptr noundef nonnull @rcu_init_one.__key, i16 noundef signext 2) #24
  %dep_map = getelementptr inbounds %struct.raw_spinlock, ptr %rnp.0185, i32 0, i32 4
  %27 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx20, align 4
  %wait_type_inner = getelementptr inbounds %struct.raw_spinlock, ptr %rnp.0185, i32 0, i32 4, i32 4
  %29 = ptrtoint ptr %wait_type_inner to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %wait_type_inner, align 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map, ptr noundef %28, ptr noundef %arrayidx21, i32 noundef 0, i8 noundef zeroext %30, i8 noundef zeroext 0, i8 noundef zeroext 0) #24
  %fqslock = getelementptr inbounds %struct.rcu_node, ptr %rnp.0185, i32 0, i32 32
  tail call void @__raw_spin_lock_init(ptr noundef %fqslock, ptr noundef nonnull @.str.353, ptr noundef nonnull @rcu_init_one.__key.352, i16 noundef signext 2) #24
  %dep_map30 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0185, i32 0, i32 32, i32 4
  %31 = ptrtoint ptr %arrayidx31 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %arrayidx31, align 4
  %wait_type_inner35 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0185, i32 0, i32 32, i32 4, i32 4
  %33 = ptrtoint ptr %wait_type_inner35 to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %wait_type_inner35, align 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map30, ptr noundef %32, ptr noundef %arrayidx32, i32 noundef 0, i8 noundef zeroext %34, i8 noundef zeroext 0, i8 noundef zeroext 0) #24
  %35 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %gp_seq = getelementptr inbounds %struct.rcu_node, ptr %rnp.0185, i32 0, i32 1
  %36 = ptrtoint ptr %gp_seq to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %gp_seq, align 4
  %37 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %gp_seq_needed = getelementptr inbounds %struct.rcu_node, ptr %rnp.0185, i32 0, i32 2
  %38 = ptrtoint ptr %gp_seq_needed to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %gp_seq_needed, align 16
  %39 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %completedqs = getelementptr inbounds %struct.rcu_node, ptr %rnp.0185, i32 0, i32 3
  %40 = ptrtoint ptr %completedqs to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %completedqs, align 4
  %qsmask = getelementptr inbounds %struct.rcu_node, ptr %rnp.0185, i32 0, i32 4
  %41 = ptrtoint ptr %qsmask to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 0, ptr %qsmask, align 8
  %qsmaskinit = getelementptr inbounds %struct.rcu_node, ptr %rnp.0185, i32 0, i32 6
  %42 = ptrtoint ptr %qsmaskinit to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 0, ptr %qsmaskinit, align 64
  %mul39 = mul i32 %j.0186, %mul
  %grplo = getelementptr inbounds %struct.rcu_node, ptr %rnp.0185, i32 0, i32 15
  %43 = ptrtoint ptr %grplo to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %mul39, ptr %grplo, align 4
  %add = add nuw nsw i32 %j.0186, 1
  %mul40 = mul i32 %add, %mul
  %sub41 = add i32 %mul40, -1
  %grphi = getelementptr inbounds %struct.rcu_node, ptr %rnp.0185, i32 0, i32 16
  %44 = ptrtoint ptr %grphi to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %sub41, ptr %grphi, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %45 = load i32, ptr @nr_cpu_ids, align 4
  %cmp43.not = icmp ult i32 %sub41, %45
  br i1 %cmp43.not, label %if.end47, label %if.then44

if.then44:                                        ; preds = %do.body16
  %sub45 = add i32 %45, -1
  %46 = ptrtoint ptr %grphi to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %sub45, ptr %grphi, align 8
  br label %if.end47

if.end47:                                         ; preds = %if.then44, %do.body16
  br i1 %cmp48, label %if.then49, label %if.else

if.then49:                                        ; preds = %if.end47
  %grpnum = getelementptr inbounds %struct.rcu_node, ptr %rnp.0185, i32 0, i32 17
  %47 = ptrtoint ptr %grpnum to i32
  call void @__asan_store1_noabort(i32 %47)
  store i8 0, ptr %grpnum, align 4
  %grpmask = getelementptr inbounds %struct.rcu_node, ptr %rnp.0185, i32 0, i32 14
  %48 = ptrtoint ptr %grpmask to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 0, ptr %grpmask, align 32
  br label %if.end62

if.else:                                          ; preds = %if.end47
  %49 = ptrtoint ptr %arrayidx51 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %arrayidx51, align 4
  %j.0186.frozen = freeze i32 %j.0186
  %.frozen = freeze i32 %50
  %div = sdiv i32 %j.0186.frozen, %.frozen
  %51 = mul i32 %div, %.frozen
  %rem.decomposed = sub i32 %j.0186.frozen, %51
  %conv = trunc i32 %rem.decomposed to i8
  %grpnum52 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0185, i32 0, i32 17
  %52 = ptrtoint ptr %grpnum52 to i32
  call void @__asan_store1_noabort(i32 %52)
  store i8 %conv, ptr %grpnum52, align 4
  %conv54 = and i32 %rem.decomposed, 255
  %shl = shl nuw i32 1, %conv54
  %grpmask55 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0185, i32 0, i32 14
  %53 = ptrtoint ptr %grpmask55 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %shl, ptr %grpmask55, align 32
  %54 = ptrtoint ptr %arrayidx57 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %arrayidx57, align 4
  %add.ptr60 = getelementptr %struct.rcu_node, ptr %55, i32 %div
  br label %if.end62

if.end62:                                         ; preds = %if.else, %if.then49
  %add.ptr60.sink = phi ptr [ null, %if.then49 ], [ %add.ptr60, %if.else ]
  %56 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0185, i32 0, i32 20
  %57 = ptrtoint ptr %56 to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr %add.ptr60.sink, ptr %56, align 16
  %level = getelementptr inbounds %struct.rcu_node, ptr %rnp.0185, i32 0, i32 18
  %58 = ptrtoint ptr %level to i32
  call void @__asan_store1_noabort(i32 %58)
  store i8 %conv63, ptr %level, align 1
  %blkd_tasks = getelementptr inbounds %struct.rcu_node, ptr %rnp.0185, i32 0, i32 21
  %59 = ptrtoint ptr %blkd_tasks to i32
  call void @__asan_store4_noabort(i32 %59)
  store volatile ptr %blkd_tasks, ptr %blkd_tasks, align 4
  %prev.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0185, i32 0, i32 21, i32 1
  %60 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %blkd_tasks, ptr %prev.i, align 4
  %nocb_gp_wq.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0185, i32 0, i32 30
  tail call void @__init_swait_queue_head(ptr noundef %nocb_gp_wq.i, ptr noundef nonnull @.str.368, ptr noundef nonnull @rcu_init_one_nocb.__key) #24
  %arrayidx3.i = getelementptr %struct.rcu_node, ptr %rnp.0185, i32 0, i32 30, i32 1
  tail call void @__init_swait_queue_head(ptr noundef %arrayidx3.i, ptr noundef nonnull @.str.370, ptr noundef nonnull @rcu_init_one_nocb.__key.369) #24
  %exp_wq = getelementptr inbounds %struct.rcu_node, ptr %rnp.0185, i32 0, i32 36
  tail call void @__init_waitqueue_head(ptr noundef %exp_wq, ptr noundef nonnull @.str.355, ptr noundef nonnull @rcu_init_one.__key.354) #24
  %arrayidx70 = getelementptr %struct.rcu_node, ptr %rnp.0185, i32 0, i32 36, i32 1
  tail call void @__init_waitqueue_head(ptr noundef %arrayidx70, ptr noundef nonnull @.str.357, ptr noundef nonnull @rcu_init_one.__key.356) #24
  %arrayidx75 = getelementptr %struct.rcu_node, ptr %rnp.0185, i32 0, i32 36, i32 2
  tail call void @__init_waitqueue_head(ptr noundef %arrayidx75, ptr noundef nonnull @.str.359, ptr noundef nonnull @rcu_init_one.__key.358) #24
  %arrayidx80 = getelementptr %struct.rcu_node, ptr %rnp.0185, i32 0, i32 36, i32 3
  tail call void @__init_waitqueue_head(ptr noundef %arrayidx80, ptr noundef nonnull @.str.361, ptr noundef nonnull @rcu_init_one.__key.360) #24
  %exp_lock = getelementptr inbounds %struct.rcu_node, ptr %rnp.0185, i32 0, i32 34
  tail call void @__raw_spin_lock_init(ptr noundef %exp_lock, ptr noundef nonnull @.str.363, ptr noundef nonnull @rcu_init_one.__key.362, i16 noundef signext 3) #24
  %incdec.ptr = getelementptr %struct.rcu_node, ptr %rnp.0185, i32 1
  %61 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %arrayidx13, align 4
  %cmp14 = icmp slt i32 %add, %62
  br i1 %cmp14, label %do.body16, label %for.cond7.loopexit

do.body91:                                        ; preds = %for.cond7.loopexit, %rcu_init_levelspread.exit
  tail call void @__init_swait_queue_head(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 9), ptr noundef nonnull @.str.365, ptr noundef nonnull @rcu_init_one.__key.364) #24
  tail call void @__init_swait_queue_head(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 22), ptr noundef nonnull @.str.367, ptr noundef nonnull @rcu_init_one.__key.366) #24
  %call100192 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %63 = load i32, ptr @nr_cpu_ids, align 4
  %cmp101193 = icmp ult i32 %call100192, %63
  br i1 %cmp101193, label %while.cond.preheader.preheader, label %for.end114

while.cond.preheader.preheader:                   ; preds = %do.body91
  %64 = load i32, ptr @rcu_num_lvls, align 4
  %sub97 = add i32 %64, -1
  %arrayidx98 = getelementptr %struct.rcu_state, ptr @rcu_state, i32 0, i32 1, i32 %sub97
  %65 = ptrtoint ptr %arrayidx98 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %arrayidx98, align 4
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %while.end, %while.cond.preheader.preheader
  %call100195 = phi i32 [ %call100, %while.end ], [ %call100192, %while.cond.preheader.preheader ]
  %rnp.1194 = phi ptr [ %rnp.2, %while.end ], [ %66, %while.cond.preheader.preheader ]
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %while.cond.preheader
  %rnp.2 = phi ptr [ %incdec.ptr107, %while.cond ], [ %rnp.1194, %while.cond.preheader ]
  %grphi104 = getelementptr inbounds %struct.rcu_node, ptr %rnp.2, i32 0, i32 16
  %67 = ptrtoint ptr %grphi104 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %grphi104, align 8
  %cmp105 = icmp sgt i32 %call100195, %68
  %incdec.ptr107 = getelementptr %struct.rcu_node, ptr %rnp.2, i32 1
  br i1 %cmp105, label %while.cond, label %while.end

while.end:                                        ; preds = %while.cond
  %arrayidx112 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call100195
  %69 = ptrtoint ptr %arrayidx112 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %arrayidx112, align 4
  %add113 = add i32 %70, ptrtoint (ptr @rcu_data to i32)
  %71 = inttoptr i32 %add113 to ptr
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %71, i32 0, i32 7
  %72 = ptrtoint ptr %mynode to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %rnp.2, ptr %mynode, align 16
  tail call fastcc void @rcu_boot_init_percpu_data(i32 noundef %call100195) #30
  %call100 = tail call i32 @cpumask_next(i32 noundef %call100195, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %73 = load i32, ptr @nr_cpu_ids, align 4
  %cmp101 = icmp ult i32 %call100, %73
  br i1 %cmp101, label %while.cond.preheader, label %for.end114

for.end114:                                       ; preds = %while.end, %do.body91
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %levelspread) #24
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_dump_rcu_node_tree() unnamed_addr #9 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.391) #27
  %call5 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.394) #27
  %0 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx38 = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %0
  %cmp39 = icmp ugt ptr %arrayidx38, @rcu_state
  br i1 %cmp39, label %for.body, label %do.end29

for.body:                                         ; preds = %do.end23, %entry
  %level.041 = phi i32 [ %level.1, %do.end23 ], [ 0, %entry ]
  %rnp.040 = phi ptr [ %incdec.ptr, %do.end23 ], [ @rcu_state, %entry ]
  %level6 = getelementptr inbounds %struct.rcu_node, ptr %rnp.040, i32 0, i32 18
  %1 = ptrtoint ptr %level6 to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %level6, align 1
  %conv = zext i8 %2 to i32
  %cmp7.not = icmp eq i32 %level.041, %conv
  br i1 %cmp7.not, label %do.end23, label %do.end11

do.end11:                                         ; preds = %for.body
  %call13 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.90) #27
  %call18 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.394) #27
  %3 = ptrtoint ptr %level6 to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %level6, align 1
  %conv20 = zext i8 %4 to i32
  br label %do.end23

do.end23:                                         ; preds = %do.end11, %for.body
  %level.1 = phi i32 [ %conv20, %do.end11 ], [ %level.041, %for.body ]
  %grplo = getelementptr inbounds %struct.rcu_node, ptr %rnp.040, i32 0, i32 15
  %5 = ptrtoint ptr %grplo to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %grplo, align 4
  %grphi = getelementptr inbounds %struct.rcu_node, ptr %rnp.040, i32 0, i32 16
  %7 = ptrtoint ptr %grphi to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %grphi, align 8
  %grpnum = getelementptr inbounds %struct.rcu_node, ptr %rnp.040, i32 0, i32 17
  %9 = ptrtoint ptr %grpnum to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %grpnum, align 4
  %conv25 = zext i8 %10 to i32
  %call26 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.401, i32 noundef %6, i32 noundef %8, i32 noundef %conv25) #27
  %incdec.ptr = getelementptr %struct.rcu_node, ptr %rnp.040, i32 1
  %11 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %11
  %cmp = icmp ult ptr %incdec.ptr, %arrayidx
  br i1 %cmp, label %for.body, label %do.end29

do.end29:                                         ; preds = %do.end23, %entry
  %call31 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.90) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @open_softirq(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_core_si(ptr nocapture noundef readnone %h) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @rcu_core()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rcu_pm_notify(ptr nocapture noundef readnone %self, i32 noundef %action, ptr nocapture noundef readnone %hcpu) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  switch i32 %action, label %sw.epilog [
    i32 1, label %sw.bb
    i32 3, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb1
  ]

sw.bb:                                            ; preds = %entry, %entry
  tail call void @rcu_expedite_gp() #24
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry, %entry
  tail call void @rcu_unexpedite_gp() #24
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb1, %sw.bb, %entry
  ret i32 1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_pm_notifier(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_workqueue(ptr noundef, i32 noundef, i32 noundef, ...) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rcu_jiffies_till_stall_check() #8 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_timeout to i32))
  %0 = load volatile i32, ptr @rcu_cpu_stall_timeout, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %if.end21.sink.split, label %if.else

if.else:                                          ; preds = %entry
  %cmp10 = icmp ugt i32 %0, 300
  br i1 %cmp10, label %if.end21.sink.split, label %if.end21

if.end21.sink.split:                              ; preds = %if.else, %entry
  %.sink = phi i32 [ 3, %entry ], [ 300, %if.else ]
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_timeout to i32))
  store volatile i32 %.sink, ptr @rcu_cpu_stall_timeout, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.end21.sink.split, %if.else
  %till_stall_check.0 = phi i32 [ %0, %if.else ], [ %.sink, %if.end21.sink.split ]
  %mul = mul nuw nsw i32 %till_stall_check.0, 100
  %add = add nuw nsw i32 %mul, 500
  ret i32 %add
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @rcu_gp_might_be_stalled() local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_timeout to i32))
  %0 = load volatile i32, ptr @rcu_cpu_stall_timeout, align 4
  %cmp.i = icmp slt i32 %0, 3
  br i1 %cmp.i, label %if.end21.sink.split.i, label %if.else.i

if.else.i:                                        ; preds = %entry
  %cmp10.i = icmp ugt i32 %0, 300
  br i1 %cmp10.i, label %if.end21.sink.split.i, label %rcu_jiffies_till_stall_check.exit

if.end21.sink.split.i:                            ; preds = %if.else.i, %entry
  %.sink.i = phi i32 [ 3, %entry ], [ 300, %if.else.i ]
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_timeout to i32))
  store volatile i32 %.sink.i, ptr @rcu_cpu_stall_timeout, align 4
  br label %rcu_jiffies_till_stall_check.exit

rcu_jiffies_till_stall_check.exit:                ; preds = %if.end21.sink.split.i, %if.else.i
  %till_stall_check.0.i = phi i32 [ %0, %if.else.i ], [ %.sink.i, %if.end21.sink.split.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %1 = load volatile i32, ptr @jiffies, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1889
  %2 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %and.i.i = and i32 %2, 3
  %tobool.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not, label %cleanup, label %do.end10

do.end10:                                         ; preds = %rcu_jiffies_till_stall_check.exit
  %3 = mul nuw nsw i32 %till_stall_check.0.i, 100
  %div19.lhs.trunc = add nuw nsw i32 %3, 500
  %div192021 = lshr i32 %div19.lhs.trunc, 3
  %4 = tail call i32 @llvm.umax.i32(i32 %div192021, i32 200)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1890
  %5 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 29), align 4
  %6 = add i32 %4, %5
  %sub = sub i32 %1, %6
  %cmp16 = icmp sgt i32 %sub, -1
  br label %cleanup

cleanup:                                          ; preds = %do.end10, %rcu_jiffies_till_stall_check.exit
  %retval.0 = phi i1 [ %cmp16, %do.end10 ], [ false, %rcu_jiffies_till_stall_check.exit ]
  ret i1 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @rcu_sysrq_start() local_unnamed_addr #12 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress to i32))
  %0 = load i32, ptr @rcu_cpu_stall_suppress, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress to i32))
  store i32 2, ptr @rcu_cpu_stall_suppress, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @rcu_sysrq_end() local_unnamed_addr #12 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress to i32))
  %0 = load i32, ptr @rcu_cpu_stall_suppress, align 4
  %cmp = icmp eq i32 %0, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress to i32))
  store i32 0, ptr @rcu_cpu_stall_suppress, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @check_cpu_stall_init() #9 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @atomic_notifier_chain_register(ptr noundef nonnull @panic_notifier_list, ptr noundef nonnull @rcu_panic_block) #24
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_cpu_stall_reset() local_unnamed_addr #8 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %0 = load volatile i32, ptr @jiffies, align 128
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_timeout to i32))
  %1 = load volatile i32, ptr @rcu_cpu_stall_timeout, align 4
  %cmp.i = icmp slt i32 %1, 3
  br i1 %cmp.i, label %if.end21.sink.split.i, label %if.else.i

if.else.i:                                        ; preds = %entry
  %cmp10.i = icmp ugt i32 %1, 300
  br i1 %cmp10.i, label %if.end21.sink.split.i, label %rcu_jiffies_till_stall_check.exit

if.end21.sink.split.i:                            ; preds = %if.else.i, %entry
  %.sink.i = phi i32 [ 3, %entry ], [ 300, %if.else.i ]
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_timeout to i32))
  store volatile i32 %.sink.i, ptr @rcu_cpu_stall_timeout, align 4
  br label %rcu_jiffies_till_stall_check.exit

rcu_jiffies_till_stall_check.exit:                ; preds = %if.end21.sink.split.i, %if.else.i
  %till_stall_check.0.i = phi i32 [ %1, %if.else.i ], [ %.sink.i, %if.end21.sink.split.i ]
  %mul.i = mul nuw nsw i32 %till_stall_check.0.i, 100
  %add.i = add i32 %0, 500
  %add = add i32 %add.i, %mul.i
  store volatile i32 %add, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 33), align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @rcu_check_boost_fail(i32 %gp_state, ptr noundef writeonly %cpup) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @rcu_num_lvls, align 4
  %sub = add i32 %0, -1
  %arrayidx = getelementptr %struct.rcu_state, ptr @rcu_state, i32 0, i32 1, i32 %sub
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %arrayidx, align 4
  %3 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx1591 = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %3
  %cmp592 = icmp ult ptr %2, %arrayidx1591
  br i1 %cmp592, label %for.body.lr.ph, label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %tobool.not = icmp eq ptr %cpup, null
  br label %for.body

for.body:                                         ; preds = %for.inc497, %for.body.lr.ph
  %atb.0.off0596 = phi i1 [ false, %for.body.lr.ph ], [ %atb.2.off0, %for.inc497 ]
  %rnp.0593 = phi ptr [ %2, %for.body.lr.ph ], [ %incdec.ptr, %for.inc497 ]
  br i1 %tobool.not, label %if.then, label %if.end12

if.then:                                          ; preds = %for.body
  %qsmask = getelementptr inbounds %struct.rcu_node, ptr %rnp.0593, i32 0, i32 4
  %4 = ptrtoint ptr %qsmask to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %qsmask, align 8
  %tobool4.not = icmp eq i32 %5, 0
  br i1 %tobool4.not, label %do.end8, label %cleanup

do.end8:                                          ; preds = %if.then
  %gp_tasks = getelementptr inbounds %struct.rcu_node, ptr %rnp.0593, i32 0, i32 22
  %6 = ptrtoint ptr %gp_tasks to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %gp_tasks, align 4
  %tobool10.not = icmp ne ptr %7, null
  %spec.select = select i1 %tobool10.not, i1 true, i1 %atb.0.off0596
  br label %for.inc497

if.end12:                                         ; preds = %for.body
  %8 = ptrtoint ptr %cpup to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -1, ptr %cpup, align 4
  %call = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %rnp.0593) #24
  %gp_tasks24 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0593, i32 0, i32 22
  %9 = ptrtoint ptr %gp_tasks24 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %gp_tasks24, align 4
  %tobool25.not = icmp ne ptr %10, null
  %spec.select543 = select i1 %tobool25.not, i1 true, i1 %atb.0.off0596
  %qsmask28 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0593, i32 0, i32 4
  %11 = ptrtoint ptr %qsmask28 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %qsmask28, align 8
  %tobool29.not = icmp eq i32 %12, 0
  br i1 %tobool29.not, label %do.body32, label %if.end149

do.body32:                                        ; preds = %if.end12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %13 = load i32, ptr @debug_locks, align 4
  %tobool33.not = icmp eq i32 %13, 0
  br i1 %tobool33.not, label %if.end128, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body32
  %14 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %17, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1891
  %18 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i to ptr
  %cpu51 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 3
  %20 = ptrtoint ptr %cpu51 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %cpu51, align 4
  %arrayidx52 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %21
  %22 = ptrtoint ptr %arrayidx52 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx52, align 4
  %add = add i32 %23, ptrtoint (ptr @lockdep_recursion to i32)
  %24 = inttoptr i32 %add to ptr
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %24, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1892
  %27 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i553 = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i.i553 to ptr
  %preempt_count.i.i554 = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %preempt_count.i.i554 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %preempt_count.i.i554, align 4
  %sub.i = add i32 %30, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i554, align 4
  %tobool59.not = icmp eq i32 %26, 0
  br i1 %tobool59.not, label %land.rhs, label %if.end128

land.rhs:                                         ; preds = %land.lhs.true
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i555 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i555 to ptr
  %preempt_count.i.i556 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i556 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i556, align 4
  %add.i557 = add i32 %34, 1
  store volatile i32 %add.i557, ptr %preempt_count.i.i556, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1893
  %35 = ptrtoint ptr %cpu51 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cpu51, align 4
  %arrayidx83 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %36
  %37 = ptrtoint ptr %arrayidx83 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx83, align 4
  %add84 = add i32 %38, ptrtoint (ptr @hardirqs_enabled to i32)
  %39 = inttoptr i32 %add84 to ptr
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %39, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1894
  %42 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i558 = and i32 %42, -16384
  %43 = inttoptr i32 %and.i.i.i558 to ptr
  %preempt_count.i.i559 = getelementptr inbounds %struct.thread_info, ptr %43, i32 0, i32 1
  %44 = ptrtoint ptr %preempt_count.i.i559 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %preempt_count.i.i559, align 4
  %sub.i560 = add i32 %45, -1
  store volatile i32 %sub.i560, ptr %preempt_count.i.i559, align 4
  %tobool91.not = icmp eq i32 %41, 0
  br i1 %tobool91.not, label %if.end128, label %land.rhs95

land.rhs95:                                       ; preds = %land.rhs
  %.b539 = load i1, ptr @rcu_check_boost_fail.__already_done, align 1
  br i1 %.b539, label %if.end128, label %if.then102, !prof !1646

if.then102:                                       ; preds = %land.rhs95
  store i1 true, ptr @rcu_check_boost_fail.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 761, i32 noundef 9, ptr noundef null) #24
  br label %if.end128

if.end128:                                        ; preds = %if.then102, %land.rhs95, %land.rhs, %land.lhs.true, %do.body32
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp.0593, i32 noundef %call) #24
  br label %for.inc497

if.end149:                                        ; preds = %if.end12
  %level = getelementptr inbounds %struct.rcu_node, ptr %rnp.0593, i32 0, i32 18
  %46 = ptrtoint ptr %level to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %level, align 1
  %conv151 = zext i8 %47 to i32
  %48 = load i32, ptr @rcu_num_lvls, align 4
  %sub152 = add i32 %48, -1
  %cmp153.not = icmp eq i32 %sub152, %conv151
  br i1 %cmp153.not, label %if.end202, label %land.rhs164

land.rhs164:                                      ; preds = %if.end149
  %.b532542 = load i1, ptr @rcu_check_boost_fail.__already_done.60, align 1
  br i1 %.b532542, label %if.end202, label %if.then175, !prof !1646

if.then175:                                       ; preds = %land.rhs164
  store i1 true, ptr @rcu_check_boost_fail.__already_done.60, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 765, i32 noundef 9, ptr noundef null) #24
  br label %if.end202

if.end202:                                        ; preds = %if.then175, %land.rhs164, %if.end149
  %grplo = getelementptr inbounds %struct.rcu_node, ptr %rnp.0593, i32 0, i32 15
  %49 = ptrtoint ptr %grplo to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %grplo, align 4
  %sub210 = add i32 %50, -1
  %call211 = tail call i32 @cpumask_next(i32 noundef %sub210, ptr noundef nonnull @__cpu_possible_mask) #28
  %grphi = getelementptr inbounds %struct.rcu_node, ptr %rnp.0593, i32 0, i32 16
  %51 = ptrtoint ptr %grphi to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %grphi, align 8
  %cmp213.not589 = icmp sgt i32 %call211, %52
  br i1 %cmp213.not589, label %do.body361, label %for.body215.lr.ph

for.body215.lr.ph:                                ; preds = %if.end202
  %53 = ptrtoint ptr %qsmask28 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %qsmask28, align 8
  br label %for.body215

for.body215:                                      ; preds = %for.inc, %for.body215.lr.ph
  %cpu.0590 = phi i32 [ %call211, %for.body215.lr.ph ], [ %call359, %for.inc ]
  %sub218 = sub i32 %cpu.0590, %50
  %shl = shl nuw i32 1, %sub218
  %and = and i32 %54, %shl
  %tobool219.not = icmp eq i32 %and, 0
  br i1 %tobool219.not, label %for.inc, label %do.body222

do.body222:                                       ; preds = %for.body215
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %55 = load i32, ptr @debug_locks, align 4
  %tobool224.not = icmp eq i32 %55, 0
  br i1 %tobool224.not, label %if.end337, label %land.lhs.true225

land.lhs.true225:                                 ; preds = %do.body222
  %56 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i561 = and i32 %56, -16384
  %57 = inttoptr i32 %and.i.i.i561 to ptr
  %preempt_count.i.i562 = getelementptr inbounds %struct.thread_info, ptr %57, i32 0, i32 1
  %58 = ptrtoint ptr %preempt_count.i.i562 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %preempt_count.i.i562, align 4
  %add.i563 = add i32 %59, 1
  store volatile i32 %add.i563, ptr %preempt_count.i.i562, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1895
  %60 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i585 = and i32 %60, -16384
  %61 = inttoptr i32 %and.i585 to ptr
  %cpu248 = getelementptr inbounds %struct.thread_info, ptr %61, i32 0, i32 3
  %62 = ptrtoint ptr %cpu248 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %cpu248, align 4
  %arrayidx249 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %63
  %64 = ptrtoint ptr %arrayidx249 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %arrayidx249, align 4
  %add250 = add i32 %65, ptrtoint (ptr @lockdep_recursion to i32)
  %66 = inttoptr i32 %add250 to ptr
  %67 = ptrtoint ptr %66 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %66, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1896
  %69 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i564 = and i32 %69, -16384
  %70 = inttoptr i32 %and.i.i.i564 to ptr
  %preempt_count.i.i565 = getelementptr inbounds %struct.thread_info, ptr %70, i32 0, i32 1
  %71 = ptrtoint ptr %preempt_count.i.i565 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load volatile i32, ptr %preempt_count.i.i565, align 4
  %sub.i566 = add i32 %72, -1
  store volatile i32 %sub.i566, ptr %preempt_count.i.i565, align 4
  %tobool257.not = icmp eq i32 %68, 0
  br i1 %tobool257.not, label %land.rhs258, label %if.end337

land.rhs258:                                      ; preds = %land.lhs.true225
  %73 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i567 = and i32 %73, -16384
  %74 = inttoptr i32 %and.i.i.i567 to ptr
  %preempt_count.i.i568 = getelementptr inbounds %struct.thread_info, ptr %74, i32 0, i32 1
  %75 = ptrtoint ptr %preempt_count.i.i568 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load volatile i32, ptr %preempt_count.i.i568, align 4
  %add.i569 = add i32 %76, 1
  store volatile i32 %add.i569, ptr %preempt_count.i.i568, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1897
  %77 = ptrtoint ptr %cpu248 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %cpu248, align 4
  %arrayidx282 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %78
  %79 = ptrtoint ptr %arrayidx282 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %arrayidx282, align 4
  %add283 = add i32 %80, ptrtoint (ptr @hardirqs_enabled to i32)
  %81 = inttoptr i32 %add283 to ptr
  %82 = ptrtoint ptr %81 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile i32, ptr %81, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1898
  %84 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i570 = and i32 %84, -16384
  %85 = inttoptr i32 %and.i.i.i570 to ptr
  %preempt_count.i.i571 = getelementptr inbounds %struct.thread_info, ptr %85, i32 0, i32 1
  %86 = ptrtoint ptr %preempt_count.i.i571 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load volatile i32, ptr %preempt_count.i.i571, align 4
  %sub.i572 = add i32 %87, -1
  store volatile i32 %sub.i572, ptr %preempt_count.i.i571, align 4
  %tobool290.not = icmp eq i32 %83, 0
  br i1 %tobool290.not, label %if.end337, label %land.rhs299

land.rhs299:                                      ; preds = %land.rhs258
  %.b533541 = load i1, ptr @rcu_check_boost_fail.__already_done.61, align 1
  br i1 %.b533541, label %if.end337, label %if.then310, !prof !1646

if.then310:                                       ; preds = %land.rhs299
  store i1 true, ptr @rcu_check_boost_fail.__already_done.61, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 767, i32 noundef 9, ptr noundef null) #24
  br label %if.end337

if.end337:                                        ; preds = %if.then310, %land.rhs299, %land.rhs258, %land.lhs.true225, %do.body222
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp.0593, i32 noundef %call) #24
  %88 = ptrtoint ptr %cpup to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 %cpu.0590, ptr %cpup, align 4
  br label %cleanup

for.inc:                                          ; preds = %for.body215
  %call359 = tail call i32 @cpumask_next(i32 noundef %cpu.0590, ptr noundef nonnull @__cpu_possible_mask) #28
  %cmp213.not = icmp sgt i32 %call359, %52
  br i1 %cmp213.not, label %do.body361, label %for.body215

do.body361:                                       ; preds = %for.inc, %if.end202
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %89 = load i32, ptr @debug_locks, align 4
  %tobool363.not = icmp eq i32 %89, 0
  br i1 %tobool363.not, label %if.end476, label %land.lhs.true364

land.lhs.true364:                                 ; preds = %do.body361
  %90 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i573 = and i32 %90, -16384
  %91 = inttoptr i32 %and.i.i.i573 to ptr
  %preempt_count.i.i574 = getelementptr inbounds %struct.thread_info, ptr %91, i32 0, i32 1
  %92 = ptrtoint ptr %preempt_count.i.i574 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile i32, ptr %preempt_count.i.i574, align 4
  %add.i575 = add i32 %93, 1
  store volatile i32 %add.i575, ptr %preempt_count.i.i574, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1899
  %94 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i586 = and i32 %94, -16384
  %95 = inttoptr i32 %and.i586 to ptr
  %cpu387 = getelementptr inbounds %struct.thread_info, ptr %95, i32 0, i32 3
  %96 = ptrtoint ptr %cpu387 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %cpu387, align 4
  %arrayidx388 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %97
  %98 = ptrtoint ptr %arrayidx388 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %arrayidx388, align 4
  %add389 = add i32 %99, ptrtoint (ptr @lockdep_recursion to i32)
  %100 = inttoptr i32 %add389 to ptr
  %101 = ptrtoint ptr %100 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load volatile i32, ptr %100, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1900
  %103 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i576 = and i32 %103, -16384
  %104 = inttoptr i32 %and.i.i.i576 to ptr
  %preempt_count.i.i577 = getelementptr inbounds %struct.thread_info, ptr %104, i32 0, i32 1
  %105 = ptrtoint ptr %preempt_count.i.i577 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load volatile i32, ptr %preempt_count.i.i577, align 4
  %sub.i578 = add i32 %106, -1
  store volatile i32 %sub.i578, ptr %preempt_count.i.i577, align 4
  %tobool396.not = icmp eq i32 %102, 0
  br i1 %tobool396.not, label %land.rhs397, label %if.end476

land.rhs397:                                      ; preds = %land.lhs.true364
  %107 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i579 = and i32 %107, -16384
  %108 = inttoptr i32 %and.i.i.i579 to ptr
  %preempt_count.i.i580 = getelementptr inbounds %struct.thread_info, ptr %108, i32 0, i32 1
  %109 = ptrtoint ptr %preempt_count.i.i580 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load volatile i32, ptr %preempt_count.i.i580, align 4
  %add.i581 = add i32 %110, 1
  store volatile i32 %add.i581, ptr %preempt_count.i.i580, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1901
  %111 = ptrtoint ptr %cpu387 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %cpu387, align 4
  %arrayidx421 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %112
  %113 = ptrtoint ptr %arrayidx421 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %arrayidx421, align 4
  %add422 = add i32 %114, ptrtoint (ptr @hardirqs_enabled to i32)
  %115 = inttoptr i32 %add422 to ptr
  %116 = ptrtoint ptr %115 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load volatile i32, ptr %115, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1902
  %118 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i582 = and i32 %118, -16384
  %119 = inttoptr i32 %and.i.i.i582 to ptr
  %preempt_count.i.i583 = getelementptr inbounds %struct.thread_info, ptr %119, i32 0, i32 1
  %120 = ptrtoint ptr %preempt_count.i.i583 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load volatile i32, ptr %preempt_count.i.i583, align 4
  %sub.i584 = add i32 %121, -1
  store volatile i32 %sub.i584, ptr %preempt_count.i.i583, align 4
  %tobool429.not = icmp eq i32 %117, 0
  br i1 %tobool429.not, label %if.end476, label %land.rhs438

land.rhs438:                                      ; preds = %land.rhs397
  %.b534540 = load i1, ptr @rcu_check_boost_fail.__already_done.62, align 1
  br i1 %.b534540, label %if.end476, label %if.then449, !prof !1646

if.then449:                                       ; preds = %land.rhs438
  store i1 true, ptr @rcu_check_boost_fail.__already_done.62, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 772, i32 noundef 9, ptr noundef null) #24
  br label %if.end476

if.end476:                                        ; preds = %if.then449, %land.rhs438, %land.rhs397, %land.lhs.true364, %do.body361
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp.0593, i32 noundef %call) #24
  br label %for.inc497

for.inc497:                                       ; preds = %if.end476, %if.end128, %do.end8
  %atb.2.off0 = phi i1 [ %spec.select543, %if.end476 ], [ %spec.select543, %if.end128 ], [ %spec.select, %do.end8 ]
  %incdec.ptr = getelementptr %struct.rcu_node, ptr %rnp.0593, i32 1
  %122 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx1 = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %122
  %cmp = icmp ult ptr %incdec.ptr, %arrayidx1
  br i1 %cmp, label %for.body, label %cleanup

cleanup:                                          ; preds = %for.inc497, %if.end337, %if.then, %entry
  %retval.0 = phi i1 [ false, %if.end337 ], [ false, %entry ], [ false, %if.then ], [ %atb.2.off0, %for.inc497 ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @show_rcu_gp_kthreads() #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %agg.tmp.sroa.0.i237.i = alloca i32, align 4
  %agg.tmp.sroa.0.i213.i = alloca i32, align 4
  %agg.tmp.sroa.0.i.i = alloca i32, align 4
  %agg.tmp.sroa.0.i.i.i = alloca i32, align 4
  %bufw.i = alloca [20 x i8], align 1
  %bufr.i = alloca [20 x i8], align 1
  %__next.i = alloca ptr, align 4
  %0 = load volatile ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 8), align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %1 = load volatile i32, ptr @jiffies, align 128
  %2 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 31), align 4
  %sub = sub i32 %1, %2
  %3 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 32), align 128
  %sub14 = sub i32 %1, %3
  %4 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 29), align 4
  %sub22 = sub i32 %1, %4
  %5 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 12), align 8
  %sub30 = sub i32 %1, %5
  %6 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %7 = load i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 11), align 2
  %cmp3.i = icmp ugt i16 %7, 8
  br i1 %cmp3.i, label %gp_state_getname.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  %conv7.i = zext i16 %7 to i32
  %arrayidx.i = getelementptr [9 x ptr], ptr @gp_state_names, i32 0, i32 %conv7.i
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx.i, align 4
  br label %gp_state_getname.exit

gp_state_getname.exit:                            ; preds = %if.end.i, %entry
  %retval.0.i = phi ptr [ %9, %if.end.i ], [ @.str.406, %entry ]
  %10 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 11), align 2
  %conv = sext i16 %10 to i32
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %cond.end52, label %cond.true50

cond.true50:                                      ; preds = %gp_state_getname.exit
  %11 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %0, align 128
  %rt_priority = getelementptr inbounds %struct.task_struct, ptr %0, i32 0, i32 16
  %13 = ptrtoint ptr %rt_priority to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %rt_priority, align 4
  br label %cond.end52

cond.end52:                                       ; preds = %cond.true50, %gp_state_getname.exit
  %cond419 = phi i32 [ %12, %cond.true50 ], [ 131071, %gp_state_getname.exit ]
  %cond53 = phi i32 [ %14, %cond.true50 ], [ 255, %gp_state_getname.exit ]
  %15 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 13), align 4
  %16 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %17 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 2), align 16
  %18 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 7), align 8
  %19 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %conv90 = sext i16 %19 to i32
  %call91 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.63, ptr noundef %6, ptr noundef %retval.0.i, i32 noundef %conv, i32 noundef %cond419, i32 noundef %cond53, i32 noundef %sub22, i32 noundef %sub, i32 noundef %sub14, i32 noundef %sub30, i32 noundef %15, i32 noundef %16, i32 noundef %17, i32 noundef %18, i32 noundef %conv90) #27
  %20 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx422 = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %20
  %cmp423 = icmp ugt ptr %arrayidx422, @rcu_state
  br i1 %cmp423, label %do.end95, label %for.cond344.preheader

for.cond344.preheader:                            ; preds = %for.inc342, %cond.end52
  %call345427 = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp346428 = icmp ult i32 %call345427, %21
  br i1 %cmp346428, label %do.body349, label %do.end372

do.end95:                                         ; preds = %for.inc342, %cond.end52
  %rnp.0424 = phi ptr [ %incdec.ptr, %for.inc342 ], [ @rcu_state, %cond.end52 ]
  %22 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %gp_seq_needed101 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0424, i32 0, i32 2
  %23 = ptrtoint ptr %gp_seq_needed101 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %gp_seq_needed101, align 16
  %sub102 = sub i32 %22, %24
  %cmp103 = icmp sgt i32 %sub102, -1
  br i1 %cmp103, label %land.lhs.true, label %do.end142

land.lhs.true:                                    ; preds = %do.end95
  %qsmask = getelementptr inbounds %struct.rcu_node, ptr %rnp.0424, i32 0, i32 4
  %25 = ptrtoint ptr %qsmask to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %qsmask, align 8
  %tobool112.not = icmp eq i32 %26, 0
  br i1 %tobool112.not, label %land.lhs.true113, label %do.end142

land.lhs.true113:                                 ; preds = %land.lhs.true
  %boost_tasks = getelementptr inbounds %struct.rcu_node, ptr %rnp.0424, i32 0, i32 24
  %27 = ptrtoint ptr %boost_tasks to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile ptr, ptr %boost_tasks, align 4
  %tobool121.not = icmp eq ptr %28, null
  br i1 %tobool121.not, label %land.lhs.true122, label %do.end142

land.lhs.true122:                                 ; preds = %land.lhs.true113
  %exp_tasks = getelementptr inbounds %struct.rcu_node, ptr %rnp.0424, i32 0, i32 23
  %29 = ptrtoint ptr %exp_tasks to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile ptr, ptr %exp_tasks, align 128
  %tobool130.not = icmp eq ptr %30, null
  br i1 %tobool130.not, label %land.lhs.true131, label %do.end142

land.lhs.true131:                                 ; preds = %land.lhs.true122
  %gp_tasks = getelementptr inbounds %struct.rcu_node, ptr %rnp.0424, i32 0, i32 22
  %31 = ptrtoint ptr %gp_tasks to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile ptr, ptr %gp_tasks, align 4
  %tobool139.not = icmp eq ptr %32, null
  br i1 %tobool139.not, label %for.inc342, label %do.end142

do.end142:                                        ; preds = %land.lhs.true131, %land.lhs.true122, %land.lhs.true113, %land.lhs.true, %do.end95
  %grplo = getelementptr inbounds %struct.rcu_node, ptr %rnp.0424, i32 0, i32 15
  %33 = ptrtoint ptr %grplo to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %grplo, align 4
  %grphi = getelementptr inbounds %struct.rcu_node, ptr %rnp.0424, i32 0, i32 16
  %35 = ptrtoint ptr %grphi to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %grphi, align 8
  %gp_seq = getelementptr inbounds %struct.rcu_node, ptr %rnp.0424, i32 0, i32 1
  %37 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %gp_seq, align 4
  %39 = ptrtoint ptr %gp_seq_needed101 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %gp_seq_needed101, align 16
  %qsmask165 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0424, i32 0, i32 4
  %41 = ptrtoint ptr %qsmask165 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %qsmask165, align 8
  %boost_kthread_task = getelementptr inbounds %struct.rcu_node, ptr %rnp.0424, i32 0, i32 27
  %43 = ptrtoint ptr %boost_kthread_task to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile ptr, ptr %boost_kthread_task, align 32
  %tobool174 = icmp ne ptr %44, null
  %lnot.ext = zext i1 %tobool174 to i32
  %arrayidx176 = getelementptr [3 x i8], ptr @.str.68, i32 0, i32 %lnot.ext
  %45 = ptrtoint ptr %arrayidx176 to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %arrayidx176, align 1
  %conv177 = zext i8 %46 to i32
  %boost_tasks184 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0424, i32 0, i32 24
  %47 = ptrtoint ptr %boost_tasks184 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile ptr, ptr %boost_tasks184, align 4
  %tobool186 = icmp ne ptr %48, null
  %lnot.ext190 = zext i1 %tobool186 to i32
  %arrayidx191 = getelementptr [3 x i8], ptr @.str.69, i32 0, i32 %lnot.ext190
  %49 = ptrtoint ptr %arrayidx191 to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %arrayidx191, align 1
  %conv192 = zext i8 %50 to i32
  %exp_tasks199 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0424, i32 0, i32 23
  %51 = ptrtoint ptr %exp_tasks199 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile ptr, ptr %exp_tasks199, align 128
  %tobool201 = icmp ne ptr %52, null
  %lnot.ext205 = zext i1 %tobool201 to i32
  %arrayidx206 = getelementptr [3 x i8], ptr @.str.70, i32 0, i32 %lnot.ext205
  %53 = ptrtoint ptr %arrayidx206 to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %arrayidx206, align 1
  %conv207 = zext i8 %54 to i32
  %gp_tasks214 = getelementptr inbounds %struct.rcu_node, ptr %rnp.0424, i32 0, i32 22
  %55 = ptrtoint ptr %gp_tasks214 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile ptr, ptr %gp_tasks214, align 4
  %tobool216 = icmp ne ptr %56, null
  %lnot.ext220 = zext i1 %tobool216 to i32
  %arrayidx221 = getelementptr [3 x i8], ptr @.str.71, i32 0, i32 %lnot.ext220
  %57 = ptrtoint ptr %arrayidx221 to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %arrayidx221, align 1
  %conv222 = zext i8 %58 to i32
  %n_boosts = getelementptr inbounds %struct.rcu_node, ptr %rnp.0424, i32 0, i32 29
  %59 = ptrtoint ptr %n_boosts to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %n_boosts, align 8
  %call230 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.66, i32 noundef %34, i32 noundef %36, i32 noundef %38, i32 noundef %40, i32 noundef %42, i32 noundef %conv177, i32 noundef %conv192, i32 noundef %conv207, i32 noundef %conv222, i32 noundef %60) #27
  %level = getelementptr inbounds %struct.rcu_node, ptr %rnp.0424, i32 0, i32 18
  %61 = ptrtoint ptr %level to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %level, align 1
  %conv231 = zext i8 %62 to i32
  %63 = load i32, ptr @rcu_num_lvls, align 4
  %sub232 = add i32 %63, -1
  %cmp233 = icmp eq i32 %sub232, %conv231
  br i1 %cmp233, label %if.end284, label %for.inc342

if.end284:                                        ; preds = %do.end142
  %64 = ptrtoint ptr %grplo to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %grplo, align 4
  %sub293 = add i32 %65, -1
  %call294 = tail call i32 @cpumask_next(i32 noundef %sub293, ptr noundef nonnull @__cpu_possible_mask) #28
  %66 = ptrtoint ptr %grphi to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %grphi, align 8
  %cmp297.not420 = icmp sgt i32 %call294, %67
  br i1 %cmp297.not420, label %for.inc342, label %do.body300

do.body300:                                       ; preds = %for.inc, %if.end284
  %cpu.0421 = phi i32 [ %call341, %for.inc ], [ %call294, %if.end284 ]
  %arrayidx305 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu.0421
  %68 = ptrtoint ptr %arrayidx305 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %arrayidx305, align 4
  %add = add i32 %69, ptrtoint (ptr @rcu_data to i32)
  %70 = inttoptr i32 %add to ptr
  %gpwrap = getelementptr inbounds %struct.rcu_data, ptr %70, i32 0, i32 5
  %71 = ptrtoint ptr %gpwrap to i32
  call void @__asan_load1_noabort(i32 %71)
  %72 = load volatile i8, ptr %gpwrap, align 4, !range !1644
  %tobool310.not = icmp eq i8 %72, 0
  br i1 %tobool310.not, label %do.end316, label %for.inc

do.end316:                                        ; preds = %do.body300
  %73 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %gp_seq_needed322 = getelementptr inbounds %struct.rcu_data, ptr %70, i32 0, i32 1
  %74 = ptrtoint ptr %gp_seq_needed322 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load volatile i32, ptr %gp_seq_needed322, align 4
  %sub323 = sub i32 %73, %75
  %cmp324 = icmp sgt i32 %sub323, -1
  br i1 %cmp324, label %for.inc, label %do.end330

do.end330:                                        ; preds = %do.end316
  %76 = ptrtoint ptr %gp_seq_needed322 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %gp_seq_needed322, align 4
  %call340 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.73, i32 noundef %cpu.0421, i32 noundef %77) #27
  br label %for.inc

for.inc:                                          ; preds = %do.end330, %do.end316, %do.body300
  %call341 = tail call i32 @cpumask_next(i32 noundef %cpu.0421, ptr noundef nonnull @__cpu_possible_mask) #28
  %78 = ptrtoint ptr %grphi to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %grphi, align 8
  %cmp297.not = icmp sgt i32 %call341, %79
  br i1 %cmp297.not, label %for.inc342, label %do.body300

for.inc342:                                       ; preds = %for.inc, %if.end284, %do.end142, %land.lhs.true131
  %incdec.ptr = getelementptr %struct.rcu_node, ptr %rnp.0424, i32 1
  %80 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %80
  %cmp = icmp ult ptr %incdec.ptr, %arrayidx
  br i1 %cmp, label %do.end95, label %for.cond344.preheader

do.body349:                                       ; preds = %if.end368, %for.cond344.preheader
  %call345430 = phi i32 [ %call345, %if.end368 ], [ %call345427, %for.cond344.preheader ]
  %cbs.0429 = phi i32 [ %add365, %if.end368 ], [ 0, %for.cond344.preheader ]
  %arrayidx356 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call345430
  %81 = ptrtoint ptr %arrayidx356 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %arrayidx356, align 4
  %add357 = add i32 %82, ptrtoint (ptr @rcu_data to i32)
  %83 = inttoptr i32 %add357 to ptr
  %n_cbs_invoked = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 15
  %84 = ptrtoint ptr %n_cbs_invoked to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile i32, ptr %n_cbs_invoked, align 4
  %add365 = add i32 %85, %cbs.0429
  %cblist = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 13
  %flags1.i.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 13, i32 5
  %86 = ptrtoint ptr %flags1.i.i to i32
  call void @__asan_load1_noabort(i32 %86)
  %87 = load volatile i8, ptr %flags1.i.i, align 4
  %88 = and i8 %87, 4
  %tobool.i.i.not = icmp eq i8 %88, 0
  br i1 %tobool.i.i.not, label %if.end368, label %if.then367

if.then367:                                       ; preds = %do.body349
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %bufw.i) #24
  %89 = call ptr @memset(ptr %bufw.i, i32 255, i32 20)
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %bufr.i) #24
  %nocb_gp_rdp.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 55
  %90 = call ptr @memset(ptr %bufr.i, i32 255, i32 20)
  %91 = ptrtoint ptr %nocb_gp_rdp.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %nocb_gp_rdp.i, align 128
  %cmp.i = icmp eq ptr %92, %83
  br i1 %cmp.i, label %if.then.i, label %if.end.i416

if.then.i:                                        ; preds = %if.then367
  %mynode.i.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 7
  %93 = ptrtoint ptr %mynode.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %mynode.i.i, align 16
  %cpu.i.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 68
  %95 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %cpu.i.i, align 64
  %nocb_gp_kthread.i.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 30
  %97 = ptrtoint ptr %nocb_gp_kthread.i.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %nocb_gp_kthread.i.i, align 16
  %tobool.i.i415 = icmp ne ptr %98, null
  %lnot.ext.i.i = zext i1 %tobool.i.i415 to i32
  %arrayidx.i.i = getelementptr [3 x i8], ptr @.str.530, i32 0, i32 %lnot.ext.i.i
  %99 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %99)
  %100 = load i8, ptr %arrayidx.i.i, align 1
  %nocb_gp_lock.i.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 43
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i.i.i)
  %101 = ptrtoint ptr %nocb_gp_lock.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %agg.tmp.sroa.0.0.copyload.i.i.i = load volatile i32, ptr %nocb_gp_lock.i.i, align 4
  %102 = ptrtoint ptr %agg.tmp.sroa.0.i.i.i to i32
  call void @__asan_store4_noabort(i32 %102)
  store volatile i32 %agg.tmp.sroa.0.0.copyload.i.i.i, ptr %agg.tmp.sroa.0.i.i.i, align 4
  %lock.sroa.0.0.extract.shift.i.i.i.i = lshr i32 %agg.tmp.sroa.0.0.copyload.i.i.i, 16
  %conv.i.i.i.i = and i32 %agg.tmp.sroa.0.0.copyload.i.i.i, 65535
  %cmp.i.i.i.i = icmp ne i32 %conv.i.i.i.i, %lock.sroa.0.0.extract.shift.i.i.i.i
  %lnot.ext.i.i.i = zext i1 %cmp.i.i.i.i to i32
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i.i.i)
  %arrayidx2.i.i = getelementptr [3 x i8], ptr @.str.533, i32 0, i32 %lnot.ext.i.i.i
  %103 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_load1_noabort(i32 %103)
  %104 = load i8, ptr %arrayidx2.i.i, align 1
  %nocb_defer_wakeup.i.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 33
  %105 = ptrtoint ptr %nocb_defer_wakeup.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %nocb_defer_wakeup.i.i, align 4
  %tobool4.i.i = icmp ne i32 %106, 0
  %lnot.ext8.i.i = zext i1 %tobool4.i.i to i32
  %arrayidx9.i.i = getelementptr [3 x i8], ptr @.str.542, i32 0, i32 %lnot.ext8.i.i
  %107 = ptrtoint ptr %arrayidx9.i.i to i32
  call void @__asan_load1_noabort(i32 %107)
  %108 = load i8, ptr %arrayidx9.i.i, align 1
  %pprev.i.i.i.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 34, i32 0, i32 1
  %109 = ptrtoint ptr %pprev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load volatile ptr, ptr %pprev.i.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp ne ptr %110, null
  %lnot.ext.i86.i.i = zext i1 %tobool.not.i.i.i.i to i32
  %arrayidx12.i.i = getelementptr [3 x i8], ptr @.str.545, i32 0, i32 %lnot.ext.i86.i.i
  %111 = ptrtoint ptr %arrayidx12.i.i to i32
  call void @__asan_load1_noabort(i32 %111)
  %112 = load i8, ptr %arrayidx12.i.i, align 1
  %nocb_gp_sleep.i.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 44
  %113 = ptrtoint ptr %nocb_gp_sleep.i.i to i32
  call void @__asan_load1_noabort(i32 %113)
  %114 = load i8, ptr %nocb_gp_sleep.i.i, align 4
  %tobool14.i.i = icmp ne i8 %114, 0
  %lnot.ext18.i.i = zext i1 %tobool14.i.i to i32
  %arrayidx19.i.i = getelementptr [3 x i8], ptr @.str.534, i32 0, i32 %lnot.ext18.i.i
  %115 = ptrtoint ptr %arrayidx19.i.i to i32
  call void @__asan_load1_noabort(i32 %115)
  %116 = load i8, ptr %arrayidx19.i.i, align 1
  %task_list.i.i.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 49, i32 1
  %117 = ptrtoint ptr %task_list.i.i.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load volatile ptr, ptr %task_list.i.i.i, align 4
  %cmp.i.i87.i.i = icmp ne ptr %118, %task_list.i.i.i
  %lnot.ext.i88.i.i = zext i1 %cmp.i.i87.i.i to i32
  %arrayidx22.i.i = getelementptr [3 x i8], ptr @.str.535, i32 0, i32 %lnot.ext.i88.i.i
  %119 = ptrtoint ptr %arrayidx22.i.i to i32
  call void @__asan_load1_noabort(i32 %119)
  %120 = load i8, ptr %arrayidx22.i.i, align 1
  %task_list.i89.i.i = getelementptr inbounds %struct.rcu_node, ptr %94, i32 0, i32 30, i32 0, i32 1
  %121 = ptrtoint ptr %task_list.i89.i.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load volatile ptr, ptr %task_list.i89.i.i, align 4
  %cmp.i.i90.i.i = icmp ne ptr %122, %task_list.i89.i.i
  %lnot.ext.i91.i.i = zext i1 %cmp.i.i90.i.i to i32
  %arrayidx27.i.i = getelementptr [3 x i8], ptr @.str.535, i32 0, i32 %lnot.ext.i91.i.i
  %123 = ptrtoint ptr %arrayidx27.i.i to i32
  call void @__asan_load1_noabort(i32 %123)
  %124 = load i8, ptr %arrayidx27.i.i, align 1
  %task_list.i92.i.i = getelementptr %struct.rcu_node, ptr %94, i32 0, i32 30, i32 1, i32 1
  %125 = ptrtoint ptr %task_list.i92.i.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load volatile ptr, ptr %task_list.i92.i.i, align 4
  %cmp.i.i93.i.i = icmp ne ptr %126, %task_list.i92.i.i
  %lnot.ext.i94.i.i = zext i1 %cmp.i.i93.i.i to i32
  %arrayidx32.i.i = getelementptr [3 x i8], ptr @.str.535, i32 0, i32 %lnot.ext.i94.i.i
  %127 = ptrtoint ptr %arrayidx32.i.i to i32
  call void @__asan_load1_noabort(i32 %127)
  %128 = load i8, ptr %arrayidx32.i.i, align 1
  %nocb_gp_bypass.i.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 45
  %129 = ptrtoint ptr %nocb_gp_bypass.i.i to i32
  call void @__asan_load1_noabort(i32 %129)
  %130 = load i8, ptr %nocb_gp_bypass.i.i, align 1
  %tobool34.i.i = icmp ne i8 %130, 0
  %lnot.ext38.i.i = zext i1 %tobool34.i.i to i32
  %arrayidx39.i.i = getelementptr [3 x i8], ptr @.str.69, i32 0, i32 %lnot.ext38.i.i
  %131 = ptrtoint ptr %arrayidx39.i.i to i32
  call void @__asan_load1_noabort(i32 %131)
  %132 = load i8, ptr %arrayidx39.i.i, align 1
  %nocb_gp_gp.i.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 46
  %133 = ptrtoint ptr %nocb_gp_gp.i.i to i32
  call void @__asan_load1_noabort(i32 %133)
  %134 = load i8, ptr %nocb_gp_gp.i.i, align 2
  %tobool41.i.i = icmp ne i8 %134, 0
  %lnot.ext45.i.i = zext i1 %tobool41.i.i to i32
  %arrayidx46.i.i = getelementptr [3 x i8], ptr @.str.71, i32 0, i32 %lnot.ext45.i.i
  %135 = ptrtoint ptr %arrayidx46.i.i to i32
  call void @__asan_load1_noabort(i32 %135)
  %136 = load i8, ptr %arrayidx46.i.i, align 1
  %nocb_gp_seq.i.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 47
  %137 = ptrtoint ptr %nocb_gp_seq.i.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %nocb_gp_seq.i.i, align 16
  %grplo.i.i = getelementptr inbounds %struct.rcu_node, ptr %94, i32 0, i32 15
  %139 = ptrtoint ptr %grplo.i.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %grplo.i.i, align 4
  %grphi.i.i = getelementptr inbounds %struct.rcu_node, ptr %94, i32 0, i32 16
  %141 = ptrtoint ptr %grphi.i.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %grphi.i.i, align 8
  %nocb_gp_loops.i.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 48
  %143 = ptrtoint ptr %nocb_gp_loops.i.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load volatile i32, ptr %nocb_gp_loops.i.i, align 4
  %tobool53.not.i.i = icmp eq ptr %98, null
  br i1 %tobool53.not.i.i, label %cond.end.i.i, label %cond.true.i.i

cond.true.i.i:                                    ; preds = %if.then.i
  %145 = ptrtoint ptr %98 to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load volatile i32, ptr %98, align 128
  %exit_state.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %98, i32 0, i32 57
  %147 = ptrtoint ptr %exit_state.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %exit_state.i.i.i.i, align 4
  %or.i.i.i.i = or i32 %148, %146
  %and.i.i.i.i = and i32 %or.i.i.i.i, 127
  %cmp.i.i95.i.i = icmp eq i32 %146, 1026
  %spec.store.select.i.i.i.i = select i1 %cmp.i.i95.i.i, i32 128, i32 %and.i.i.i.i
  %tobool.not.i.i.i.i.i = icmp eq i32 %spec.store.select.i.i.i.i, 0
  %149 = call i32 @llvm.ctlz.i32(i32 %spec.store.select.i.i.i.i, i1 true) #24, !range !1903
  %sub.i.i.i.i.i = sub nuw nsw i32 32, %149
  %cond.i.i.i.i.i = select i1 %tobool.not.i.i.i.i.i, i32 0, i32 %sub.i.i.i.i.i
  %arrayidx.i.i.i.i = getelementptr [10 x i8], ptr @task_index_to_char.state_char, i32 0, i32 %cond.i.i.i.i.i
  %150 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %150)
  %151 = load i8, ptr %arrayidx.i.i.i.i, align 1
  %conv56.i.i = zext i8 %151 to i32
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.true.i.i, %if.then.i
  %cond.i.i = phi i32 [ %conv56.i.i, %cond.true.i.i ], [ 46, %if.then.i ]
  %nocb_cb_kthread.i.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 51
  %152 = ptrtoint ptr %nocb_cb_kthread.i.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %nocb_cb_kthread.i.i, align 16
  %tobool57.not.i.i = icmp eq ptr %153, null
  br i1 %tobool57.not.i.i, label %show_rcu_nocb_gp_state.exit.i, label %do.end.i.i.i

do.end.i.i.i:                                     ; preds = %cond.end.i.i
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %98, i32 0, i32 1
  %154 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %stack.i.i.i, align 4
  %cpu.i.i.i = getelementptr inbounds %struct.thread_info, ptr %155, i32 0, i32 3
  %156 = ptrtoint ptr %cpu.i.i.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load volatile i32, ptr %cpu.i.i.i, align 4
  %158 = ptrtoint ptr %153 to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load volatile i32, ptr %153, align 128
  %cmp.i.i.i = icmp eq i32 %159, 0
  br i1 %cmp.i.i.i, label %land.rhs.i.i.i, label %show_rcu_nocb_gp_state.exit.i

land.rhs.i.i.i:                                   ; preds = %do.end.i.i.i
  %on_cpu.i.i.i = getelementptr inbounds %struct.task_struct, ptr %153, i32 0, i32 5
  %160 = ptrtoint ptr %on_cpu.i.i.i to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %on_cpu.i.i.i, align 4
  %tobool1.not.i.i.i = icmp eq i32 %161, 0
  %phi.sel.i.i.i = select i1 %tobool1.not.i.i.i, ptr @.str.546, ptr @.str.204
  br label %show_rcu_nocb_gp_state.exit.i

show_rcu_nocb_gp_state.exit.i:                    ; preds = %land.rhs.i.i.i, %do.end.i.i.i, %cond.end.i.i
  %cond63107.i.i = phi i32 [ %157, %do.end.i.i.i ], [ %157, %land.rhs.i.i.i ], [ -1, %cond.end.i.i ]
  %162 = phi ptr [ @.str.204, %do.end.i.i.i ], [ %phi.sel.i.i.i, %land.rhs.i.i.i ], [ @.str.204, %cond.end.i.i ]
  %conv47108.i.i = zext i8 %136 to i32
  %conv40109.i.i = zext i8 %132 to i32
  %conv33110.i.i = zext i8 %128 to i32
  %conv28111.i.i = zext i8 %124 to i32
  %conv23112.i.i = zext i8 %120 to i32
  %conv20113.i.i = zext i8 %116 to i32
  %conv13114.i.i = zext i8 %112 to i32
  %conv10115.i.i = zext i8 %108 to i32
  %conv3116.i.i = zext i8 %104 to i32
  %conv117.i.i = zext i8 %100 to i32
  %call66.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.543, i32 noundef %96, i32 noundef %conv117.i.i, i32 noundef %conv3116.i.i, i32 noundef %conv10115.i.i, i32 noundef %conv13114.i.i, i32 noundef %conv20113.i.i, i32 noundef %conv23112.i.i, i32 noundef %conv28111.i.i, i32 noundef %conv33110.i.i, i32 noundef %conv40109.i.i, i32 noundef %conv47108.i.i, i32 noundef %138, i32 noundef %140, i32 noundef %142, i32 noundef %144, i32 noundef %cond.i.i, i32 noundef %cond63107.i.i, ptr noundef nonnull %162) #27
  br label %if.end.i416

if.end.i416:                                      ; preds = %show_rcu_nocb_gp_state.exit.i, %if.then367
  %163 = ptrtoint ptr %nocb_gp_rdp.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %nocb_gp_rdp.i, align 128
  %nocb_head_rdp.i = getelementptr inbounds %struct.rcu_data, ptr %164, i32 0, i32 52
  %nocb_entry_rdp.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 53
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__next.i)
  %165 = ptrtoint ptr %nocb_entry_rdp.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load volatile ptr, ptr %nocb_entry_rdp.i, align 4
  %167 = ptrtoint ptr %__next.i to i32
  call void @__asan_store4_noabort(i32 %167)
  store ptr %166, ptr %__next.i, align 4
  %cmp3.not.i = icmp eq ptr %166, %nocb_head_rdp.i
  br i1 %cmp3.not.i, label %cond.end.i, label %cond.true.i, !prof !1645

cond.true.i:                                      ; preds = %if.end.i416
  %168 = ptrtoint ptr %__next.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %__next.i.0.__next.i.0.__next.0.__next.0.__next.0.169.i = load volatile ptr, ptr %__next.i, align 4
  %add.ptr.i = getelementptr i8, ptr %__next.i.0.__next.i.0.__next.0.__next.0.__next.0.169.i, i32 -764
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.true.i, %if.end.i416
  %cond.i = phi ptr [ %add.ptr.i, %cond.true.i ], [ null, %if.end.i416 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__next.i)
  %arrayidx.i417 = getelementptr %struct.rcu_data, ptr %83, i32 0, i32 13, i32 2, i32 1
  %169 = ptrtoint ptr %arrayidx.i417 to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %arrayidx.i417, align 4
  %call.i = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %bufw.i, ptr noundef nonnull @.str.527, i32 noundef %170) #24
  %arrayidx12.i = getelementptr %struct.rcu_data, ptr %83, i32 0, i32 13, i32 2, i32 2
  %171 = ptrtoint ptr %arrayidx12.i to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load i32, ptr %arrayidx12.i, align 4
  %call13.i = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %bufr.i, ptr noundef nonnull @.str.527, i32 noundef %172) #24
  %cpu.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 68
  %173 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %cpu.i, align 64
  %175 = ptrtoint ptr %nocb_gp_rdp.i to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load ptr, ptr %nocb_gp_rdp.i, align 128
  %cpu19.i = getelementptr inbounds %struct.rcu_data, ptr %176, i32 0, i32 68
  %177 = ptrtoint ptr %cpu19.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %cpu19.i, align 64
  %tobool20.not.i = icmp eq ptr %cond.i, null
  br i1 %tobool20.not.i, label %cond.end24.i, label %cond.true21.i

cond.true21.i:                                    ; preds = %cond.end.i
  %cpu22.i = getelementptr inbounds %struct.rcu_data, ptr %cond.i, i32 0, i32 68
  %179 = ptrtoint ptr %cpu22.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %cpu22.i, align 64
  br label %cond.end24.i

cond.end24.i:                                     ; preds = %cond.true21.i, %cond.end.i
  %cond25.i = phi i32 [ %180, %cond.true21.i ], [ -1, %cond.end.i ]
  %nocb_cb_kthread.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 51
  %181 = ptrtoint ptr %nocb_cb_kthread.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load ptr, ptr %nocb_cb_kthread.i, align 16
  %tobool26.i = icmp ne ptr %182, null
  %lnot.ext30.i = zext i1 %tobool26.i to i32
  %arrayidx31.i = getelementptr [3 x i8], ptr @.str.530, i32 0, i32 %lnot.ext30.i
  %183 = ptrtoint ptr %arrayidx31.i to i32
  call void @__asan_load1_noabort(i32 %183)
  %184 = load i8, ptr %arrayidx31.i, align 1
  %conv.i = zext i8 %184 to i32
  %nocb_bypass_lock.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 37
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i.i)
  %185 = ptrtoint ptr %nocb_bypass_lock.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %agg.tmp.sroa.0.0.copyload.i.i = load volatile i32, ptr %nocb_bypass_lock.i, align 4
  %186 = ptrtoint ptr %agg.tmp.sroa.0.i.i to i32
  call void @__asan_store4_noabort(i32 %186)
  store volatile i32 %agg.tmp.sroa.0.0.copyload.i.i, ptr %agg.tmp.sroa.0.i.i, align 4
  %lock.sroa.0.0.extract.shift.i.i.i = lshr i32 %agg.tmp.sroa.0.0.copyload.i.i, 16
  %conv.i.i.i = and i32 %agg.tmp.sroa.0.0.copyload.i.i, 65535
  %cmp.i.i211.i = icmp ne i32 %conv.i.i.i, %lock.sroa.0.0.extract.shift.i.i.i
  %lnot.ext.i212.i = zext i1 %cmp.i.i211.i to i32
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i.i)
  %arrayidx33.i = getelementptr [3 x i8], ptr @.str.531, i32 0, i32 %lnot.ext.i212.i
  %187 = ptrtoint ptr %arrayidx33.i to i32
  call void @__asan_load1_noabort(i32 %187)
  %188 = load i8, ptr %arrayidx33.i, align 1
  %conv34.i = zext i8 %188 to i32
  %nocb_lock_contended.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 32
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %nocb_lock_contended.i, i32 noundef 4) #24
  %189 = ptrtoint ptr %nocb_lock_contended.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load volatile i32, ptr %nocb_lock_contended.i, align 4
  %tobool36.i = icmp ne i32 %190, 0
  %lnot.ext40.i = zext i1 %tobool36.i to i32
  %arrayidx41.i = getelementptr [3 x i8], ptr @.str.532, i32 0, i32 %lnot.ext40.i
  %191 = ptrtoint ptr %arrayidx41.i to i32
  call void @__asan_load1_noabort(i32 %191)
  %192 = load i8, ptr %arrayidx41.i, align 1
  %conv42.i = zext i8 %192 to i32
  %nocb_lock.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 31
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i213.i)
  %193 = ptrtoint ptr %nocb_lock.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %agg.tmp.sroa.0.0.copyload.i214.i = load volatile i32, ptr %nocb_lock.i, align 4
  %194 = ptrtoint ptr %agg.tmp.sroa.0.i213.i to i32
  call void @__asan_store4_noabort(i32 %194)
  store volatile i32 %agg.tmp.sroa.0.0.copyload.i214.i, ptr %agg.tmp.sroa.0.i213.i, align 4
  %lock.sroa.0.0.extract.shift.i.i215.i = lshr i32 %agg.tmp.sroa.0.0.copyload.i214.i, 16
  %conv.i.i216.i = and i32 %agg.tmp.sroa.0.0.copyload.i214.i, 65535
  %cmp.i.i217.i = icmp ne i32 %conv.i.i216.i, %lock.sroa.0.0.extract.shift.i.i215.i
  %lnot.ext.i218.i = zext i1 %cmp.i.i217.i to i32
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i213.i)
  %arrayidx45.i = getelementptr [3 x i8], ptr @.str.533, i32 0, i32 %lnot.ext.i218.i
  %195 = ptrtoint ptr %arrayidx45.i to i32
  call void @__asan_load1_noabort(i32 %195)
  %196 = load i8, ptr %arrayidx45.i, align 1
  %conv46.i = zext i8 %196 to i32
  %nocb_cb_sleep.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 50
  %197 = ptrtoint ptr %nocb_cb_sleep.i to i32
  call void @__asan_load1_noabort(i32 %197)
  %198 = load i8, ptr %nocb_cb_sleep.i, align 4, !range !1644
  %199 = zext i8 %198 to i32
  %arrayidx52.i = getelementptr [3 x i8], ptr @.str.534, i32 0, i32 %199
  %200 = ptrtoint ptr %arrayidx52.i to i32
  call void @__asan_load1_noabort(i32 %200)
  %201 = load i8, ptr %arrayidx52.i, align 1
  %conv53.i = zext i8 %201 to i32
  %task_list.i.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 28, i32 1
  %202 = ptrtoint ptr %task_list.i.i to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load volatile ptr, ptr %task_list.i.i, align 4
  %cmp.i.i219.i = icmp ne ptr %203, %task_list.i.i
  %lnot.ext.i220.i = zext i1 %cmp.i.i219.i to i32
  %arrayidx55.i = getelementptr [3 x i8], ptr @.str.535, i32 0, i32 %lnot.ext.i220.i
  %204 = ptrtoint ptr %arrayidx55.i to i32
  call void @__asan_load1_noabort(i32 %204)
  %205 = load i8, ptr %arrayidx55.i, align 1
  %conv56.i = zext i8 %205 to i32
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %206 = load volatile i32, ptr @jiffies, align 128
  %nocb_bypass_first.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 39
  %207 = ptrtoint ptr %nocb_bypass_first.i to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load i32, ptr %nocb_bypass_first.i, align 8
  %sub.i = sub i32 %206, %208
  %209 = load volatile i32, ptr @jiffies, align 128
  %nocb_nobypass_last.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 40
  %210 = ptrtoint ptr %nocb_nobypass_last.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load i32, ptr %nocb_nobypass_last.i, align 4
  %sub57.i = sub i32 %209, %211
  %nocb_nobypass_count.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 41
  %212 = ptrtoint ptr %nocb_nobypass_count.i to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load i32, ptr %nocb_nobypass_count.i, align 64
  %call58.i = call zeroext i1 @rcu_segcblist_ready_cbs(ptr noundef %cblist) #24
  %idxprom.i = zext i1 %call58.i to i32
  %arrayidx59.i = getelementptr [3 x i8], ptr @.str.536, i32 0, i32 %idxprom.i
  %214 = ptrtoint ptr %arrayidx59.i to i32
  call void @__asan_load1_noabort(i32 %214)
  %215 = load i8, ptr %arrayidx59.i, align 1
  %conv60.i = zext i8 %215 to i32
  %arrayidx3.i.i = getelementptr %struct.rcu_data, ptr %83, i32 0, i32 13, i32 1
  %216 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load ptr, ptr %arrayidx3.i.i, align 4
  %arrayidx5.i.i = getelementptr %struct.rcu_data, ptr %83, i32 0, i32 13, i32 1, i32 1
  %218 = ptrtoint ptr %arrayidx5.i.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load ptr, ptr %arrayidx5.i.i, align 4
  %cmp6.i.i = icmp eq ptr %217, %219
  %lnot62.i = xor i1 %cmp6.i.i, true
  %lnot.ext63.i = zext i1 %lnot62.i to i32
  %arrayidx64.i = getelementptr [3 x i8], ptr @.str.535, i32 0, i32 %lnot.ext63.i
  %220 = ptrtoint ptr %arrayidx64.i to i32
  call void @__asan_load1_noabort(i32 %220)
  %221 = load i8, ptr %arrayidx64.i, align 1
  %conv65.i = zext i8 %221 to i32
  %cond72.i = select i1 %cmp6.i.i, ptr @.str.204, ptr %bufw.i
  %arrayidx5.i225.i = getelementptr %struct.rcu_data, ptr %83, i32 0, i32 13, i32 1, i32 2
  %222 = ptrtoint ptr %arrayidx5.i225.i to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load ptr, ptr %arrayidx5.i225.i, align 4
  %cmp6.i226.i = icmp eq ptr %219, %223
  %lnot74.i = xor i1 %cmp6.i226.i, true
  %lnot.ext75.i = zext i1 %lnot74.i to i32
  %arrayidx76.i = getelementptr [3 x i8], ptr @.str.537, i32 0, i32 %lnot.ext75.i
  %224 = ptrtoint ptr %arrayidx76.i to i32
  call void @__asan_load1_noabort(i32 %224)
  %225 = load i8, ptr %arrayidx76.i, align 1
  %conv77.i = zext i8 %225 to i32
  %cond84.i = select i1 %cmp6.i226.i, ptr @.str.204, ptr %bufr.i
  %arrayidx5.i231.i = getelementptr %struct.rcu_data, ptr %83, i32 0, i32 13, i32 1, i32 3
  %226 = ptrtoint ptr %arrayidx5.i231.i to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load ptr, ptr %arrayidx5.i231.i, align 4
  %cmp6.i232.i = icmp ne ptr %223, %227
  %lnot.ext87.i = zext i1 %cmp6.i232.i to i32
  %arrayidx88.i = getelementptr [3 x i8], ptr @.str.538, i32 0, i32 %lnot.ext87.i
  %228 = ptrtoint ptr %arrayidx88.i to i32
  call void @__asan_load1_noabort(i32 %228)
  %229 = load i8, ptr %arrayidx88.i, align 1
  %conv89.i = zext i8 %229 to i32
  %len.i.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 38, i32 2
  %230 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load volatile i32, ptr %len.i.i, align 4
  %tobool91.i = icmp ne i32 %231, 0
  %lnot.ext95.i = zext i1 %tobool91.i to i32
  %arrayidx96.i = getelementptr [3 x i8], ptr @.str.69, i32 0, i32 %lnot.ext95.i
  %232 = ptrtoint ptr %arrayidx96.i to i32
  call void @__asan_load1_noabort(i32 %232)
  %233 = load i8, ptr %arrayidx96.i, align 1
  %conv97.i = zext i8 %233 to i32
  %len.i233.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 13, i32 3
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %len.i233.i, i32 noundef 4) #24
  %234 = ptrtoint ptr %len.i233.i to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load volatile i32, ptr %len.i233.i, align 4
  %236 = ptrtoint ptr %nocb_cb_kthread.i to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load ptr, ptr %nocb_cb_kthread.i, align 16
  %tobool101.not.i = icmp eq ptr %237, null
  br i1 %tobool101.not.i, label %show_rcu_should_be_on_cpu.exit.i, label %do.end.i.i

do.end.i.i:                                       ; preds = %cond.end24.i
  %238 = ptrtoint ptr %237 to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load volatile i32, ptr %237, align 128
  %exit_state.i.i.i = getelementptr inbounds %struct.task_struct, ptr %237, i32 0, i32 57
  %240 = ptrtoint ptr %exit_state.i.i.i to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load i32, ptr %exit_state.i.i.i, align 4
  %or.i.i.i = or i32 %241, %239
  %and.i.i.i = and i32 %or.i.i.i, 127
  %cmp.i.i234.i = icmp eq i32 %239, 1026
  %spec.store.select.i.i.i = select i1 %cmp.i.i234.i, i32 128, i32 %and.i.i.i
  %tobool.not.i.i.i235.i = icmp eq i32 %spec.store.select.i.i.i, 0
  %242 = call i32 @llvm.ctlz.i32(i32 %spec.store.select.i.i.i, i1 true) #24, !range !1903
  %sub.i.i.i.i = sub nuw nsw i32 32, %242
  %cond.i.i.i.i = select i1 %tobool.not.i.i.i235.i, i32 0, i32 %sub.i.i.i.i
  %arrayidx.i.i.i = getelementptr [10 x i8], ptr @task_index_to_char.state_char, i32 0, i32 %cond.i.i.i.i
  %243 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load1_noabort(i32 %243)
  %244 = load i8, ptr %arrayidx.i.i.i, align 1
  %nocb_gp_kthread.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 30
  %245 = ptrtoint ptr %nocb_gp_kthread.i to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load ptr, ptr %nocb_gp_kthread.i, align 16
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %246, i32 0, i32 1
  %247 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load ptr, ptr %stack.i.i, align 4
  %cpu.i236.i = getelementptr inbounds %struct.thread_info, ptr %248, i32 0, i32 3
  %249 = ptrtoint ptr %cpu.i236.i to i32
  call void @__asan_load4_noabort(i32 %249)
  %250 = load volatile i32, ptr %cpu.i236.i, align 4
  %251 = ptrtoint ptr %237 to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load volatile i32, ptr %237, align 128
  %cmp.i.i = icmp eq i32 %252, 0
  br i1 %cmp.i.i, label %land.rhs.i.i, label %show_rcu_should_be_on_cpu.exit.i

land.rhs.i.i:                                     ; preds = %do.end.i.i
  %on_cpu.i.i = getelementptr inbounds %struct.task_struct, ptr %237, i32 0, i32 5
  %253 = ptrtoint ptr %on_cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %253)
  %254 = load i32, ptr %on_cpu.i.i, align 4
  %tobool1.not.i.i = icmp eq i32 %254, 0
  %phi.sel.i.i = select i1 %tobool1.not.i.i, ptr @.str.546, ptr @.str.204
  br label %show_rcu_should_be_on_cpu.exit.i

show_rcu_should_be_on_cpu.exit.i:                 ; preds = %land.rhs.i.i, %do.end.i.i, %cond.end24.i
  %cond115251.i = phi i32 [ %250, %do.end.i.i ], [ %250, %land.rhs.i.i ], [ -1, %cond.end24.i ]
  %cond108247250.shrunk.i = phi i8 [ %244, %do.end.i.i ], [ %244, %land.rhs.i.i ], [ 46, %cond.end24.i ]
  %255 = phi ptr [ @.str.204, %do.end.i.i ], [ %phi.sel.i.i, %land.rhs.i.i ], [ @.str.204, %cond.end24.i ]
  %cond108247250.i = zext i8 %cond108247250.shrunk.i to i32
  %call118.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.528, i32 noundef %174, i32 noundef %178, i32 noundef %cond25.i, i32 noundef %conv.i, i32 noundef %conv34.i, i32 noundef %conv42.i, i32 noundef %conv46.i, i32 noundef %conv53.i, i32 noundef %conv56.i, i32 noundef %sub.i, i32 noundef %sub57.i, i32 noundef %213, i32 noundef %conv60.i, i32 noundef %conv65.i, ptr noundef nonnull %cond72.i, i32 noundef %conv77.i, ptr noundef nonnull %cond84.i, i32 noundef %conv89.i, i32 noundef %conv97.i, i32 noundef %235, i32 noundef %cond108247250.i, i32 noundef %cond115251.i, ptr noundef nonnull %255) #27
  %256 = ptrtoint ptr %nocb_gp_rdp.i to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load ptr, ptr %nocb_gp_rdp.i, align 128
  %cmp120.i = icmp eq ptr %257, %83
  br i1 %cmp120.i, label %show_rcu_nocb_state.exit, label %if.end123.i

if.end123.i:                                      ; preds = %show_rcu_should_be_on_cpu.exit.i
  %nocb_gp_lock.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 43
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i237.i)
  %258 = ptrtoint ptr %nocb_gp_lock.i to i32
  call void @__asan_load4_noabort(i32 %258)
  %agg.tmp.sroa.0.0.copyload.i238.i = load volatile i32, ptr %nocb_gp_lock.i, align 4
  %259 = ptrtoint ptr %agg.tmp.sroa.0.i237.i to i32
  call void @__asan_store4_noabort(i32 %259)
  store volatile i32 %agg.tmp.sroa.0.0.copyload.i238.i, ptr %agg.tmp.sroa.0.i237.i, align 4
  %lock.sroa.0.0.extract.shift.i.i239.i = lshr i32 %agg.tmp.sroa.0.0.copyload.i238.i, 16
  %conv.i.i240.i = and i32 %agg.tmp.sroa.0.0.copyload.i238.i, 65535
  %cmp.i.i241.i = icmp ne i32 %conv.i.i240.i, %lock.sroa.0.0.extract.shift.i.i239.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i237.i)
  %task_list.i243.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 49, i32 1
  %260 = ptrtoint ptr %task_list.i243.i to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load volatile ptr, ptr %task_list.i243.i, align 4
  %cmp.i.i244.i = icmp ne ptr %261, %task_list.i243.i
  %nocb_gp_sleep.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 44
  %262 = ptrtoint ptr %nocb_gp_sleep.i to i32
  call void @__asan_load1_noabort(i32 %262)
  %263 = load i8, ptr %nocb_gp_sleep.i, align 4
  %tobool130.not.i = icmp ne i8 %263, 0
  %brmerge.i = select i1 %tobool130.not.i, i1 true, i1 %cmp.i.i241.i
  %brmerge210.i = select i1 %brmerge.i, i1 true, i1 %cmp.i.i244.i
  br i1 %brmerge210.i, label %do.end138.i, label %show_rcu_nocb_state.exit

do.end138.i:                                      ; preds = %if.end123.i
  %lnot.ext.i245.i = zext i1 %cmp.i.i244.i to i32
  %lnot.ext.i242.i = zext i1 %cmp.i.i241.i to i32
  %arrayidx142.i = getelementptr [3 x i8], ptr @.str.533, i32 0, i32 %lnot.ext.i242.i
  %264 = ptrtoint ptr %arrayidx142.i to i32
  call void @__asan_load1_noabort(i32 %264)
  %265 = load i8, ptr %arrayidx142.i, align 1
  %conv143.i = zext i8 %265 to i32
  %nocb_defer_wakeup.i = getelementptr inbounds %struct.rcu_data, ptr %83, i32 0, i32 33
  %266 = ptrtoint ptr %nocb_defer_wakeup.i to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load i32, ptr %nocb_defer_wakeup.i, align 4
  %tobool144.i = icmp ne i32 %267, 0
  %lnot.ext148.i = zext i1 %tobool144.i to i32
  %arrayidx149.i = getelementptr [3 x i8], ptr @.str.542, i32 0, i32 %lnot.ext148.i
  %268 = ptrtoint ptr %arrayidx149.i to i32
  call void @__asan_load1_noabort(i32 %268)
  %269 = load i8, ptr %arrayidx149.i, align 1
  %conv150.i = zext i8 %269 to i32
  %lnot.ext156.i = zext i1 %tobool130.not.i to i32
  %arrayidx157.i = getelementptr [3 x i8], ptr @.str.534, i32 0, i32 %lnot.ext156.i
  %270 = ptrtoint ptr %arrayidx157.i to i32
  call void @__asan_load1_noabort(i32 %270)
  %271 = load i8, ptr %arrayidx157.i, align 1
  %conv158.i = zext i8 %271 to i32
  %arrayidx161.i = getelementptr [3 x i8], ptr @.str.535, i32 0, i32 %lnot.ext.i245.i
  %272 = ptrtoint ptr %arrayidx161.i to i32
  call void @__asan_load1_noabort(i32 %272)
  %273 = load i8, ptr %arrayidx161.i, align 1
  %conv162.i = zext i8 %273 to i32
  %call163.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.540, i32 noundef %conv143.i, i32 noundef %conv150.i, i32 noundef %conv158.i, i32 noundef %conv162.i) #27
  br label %show_rcu_nocb_state.exit

show_rcu_nocb_state.exit:                         ; preds = %do.end138.i, %if.end123.i, %show_rcu_should_be_on_cpu.exit.i
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %bufr.i) #24
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %bufw.i) #24
  br label %if.end368

if.end368:                                        ; preds = %show_rcu_nocb_state.exit, %do.body349
  %call345 = call i32 @cpumask_next(i32 noundef %call345430, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %274 = load i32, ptr @nr_cpu_ids, align 4
  %cmp346 = icmp ult i32 %call345, %274
  br i1 %cmp346, label %do.body349, label %do.end372

do.end372:                                        ; preds = %if.end368, %for.cond344.preheader
  %cbs.0.lcssa = phi i32 [ 0, %for.cond344.preheader ], [ %add365, %if.end368 ]
  %call374 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.76, i32 noundef %cbs.0.lcssa) #27
  call void @show_rcu_tasks_gp_kthreads() #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @show_rcu_tasks_gp_kthreads() local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_fwd_progress_check(i32 noundef %j) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %and.i.i = and i32 %0, 3
  %tobool.not = icmp eq i32 %and.i.i, 0
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %1 = load volatile i32, ptr @jiffies, align 128
  br i1 %tobool.not, label %do.end10, label %do.end

do.end:                                           ; preds = %entry
  %2 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 29), align 4
  %sub = sub i32 %1, %2
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.78, ptr noundef nonnull @.str.79, i32 noundef %sub) #27
  tail call void @show_rcu_gp_kthreads()
  br label %for.cond.outer.preheader

do.end10:                                         ; preds = %entry
  %3 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 30), align 8
  %sub19 = sub i32 %1, %3
  %call20 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.79, i32 noundef %sub19) #27
  %4 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %7, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1904
  %8 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i to ptr
  %cpu30 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu30 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu30, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %11
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx, align 4
  %add = add i32 %13, ptrtoint (ptr @rcu_data to i32)
  %14 = inttoptr i32 %add to ptr
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %14, i32 0, i32 7
  %15 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %mynode, align 16
  tail call fastcc void @rcu_check_gp_start_stall(ptr noundef %16, i32 noundef %j)
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1905
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i73 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %20, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %for.cond.outer.preheader

for.cond.outer.preheader:                         ; preds = %do.end10, %do.end
  br label %for.cond.outer

for.cond.outer:                                   ; preds = %do.end49, %for.cond.outer.preheader
  %max_cpu.0.ph = phi i32 [ %spec.select, %do.end49 ], [ -1, %for.cond.outer.preheader ]
  %max_cbs.0.ph = phi i32 [ %30, %do.end49 ], [ 0, %for.cond.outer.preheader ]
  %cpu.0.ph = phi i32 [ %call34, %do.end49 ], [ -1, %for.cond.outer.preheader ]
  br label %for.cond

for.cond:                                         ; preds = %rcu_get_n_cbs_cpu.exit, %for.cond.outer
  %cpu.0 = phi i32 [ %call34, %rcu_get_n_cbs_cpu.exit ], [ %cpu.0.ph, %for.cond.outer ]
  %call34 = tail call i32 @cpumask_next(i32 noundef %cpu.0, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call34, %21
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call34
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx.i, align 4
  %add.i75 = add i32 %23, ptrtoint (ptr @rcu_data to i32)
  %24 = inttoptr i32 %add.i75 to ptr
  %flags1.i.i.i = getelementptr inbounds %struct.rcu_data, ptr %24, i32 0, i32 13, i32 5
  %25 = ptrtoint ptr %flags1.i.i.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load volatile i8, ptr %flags1.i.i.i, align 4
  %27 = and i8 %26, 1
  %tobool.i.i.not.i = icmp eq i8 %27, 0
  br i1 %tobool.i.i.not.i, label %rcu_get_n_cbs_cpu.exit, label %if.then.i

if.then.i:                                        ; preds = %for.body
  %len.i.i = getelementptr inbounds %struct.rcu_data, ptr %24, i32 0, i32 13, i32 3
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %len.i.i, i32 noundef 4) #24
  %28 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %len.i.i, align 4
  br label %rcu_get_n_cbs_cpu.exit

rcu_get_n_cbs_cpu.exit:                           ; preds = %if.then.i, %for.body
  %retval.0.i = phi i32 [ %29, %if.then.i ], [ 0, %for.body ]
  %tobool36.not = icmp eq i32 %retval.0.i, 0
  br i1 %tobool36.not, label %for.cond, label %if.end38

if.end38:                                         ; preds = %rcu_get_n_cbs_cpu.exit
  %cmp39 = icmp slt i32 %max_cpu.0.ph, 0
  br i1 %cmp39, label %do.end43, label %do.end49

do.end43:                                         ; preds = %if.end38
  %call45 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.84, ptr noundef nonnull @.str.79) #27
  br label %do.end49

do.end49:                                         ; preds = %do.end43, %if.end38
  %call51 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.87, i32 noundef %call34, i32 noundef %retval.0.i) #27
  %cmp52.not = icmp ugt i32 %retval.0.i, %max_cbs.0.ph
  %spec.select = select i1 %cmp52.not, i32 %call34, i32 %max_cpu.0.ph
  %30 = tail call i32 @llvm.umax.i32(i32 %retval.0.i, i32 %max_cbs.0.ph)
  br label %for.cond.outer

for.end:                                          ; preds = %for.cond
  %cmp55 = icmp sgt i32 %max_cpu.0.ph, -1
  br i1 %cmp55, label %do.end59, label %if.end62

do.end59:                                         ; preds = %for.end
  %call61 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.90) #27
  br label %if.end62

if.end62:                                         ; preds = %do.end59, %for.end
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_check_gp_start_stall(ptr noundef %rnp, i32 noundef %gpssdelay) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %and.i.i = and i32 %0, 3
  %tobool.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not, label %do.end, label %cleanup

do.end:                                           ; preds = %entry
  %1 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 1), align 4
  %2 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 2), align 16
  %sub = sub i32 %1, %2
  %cmp = icmp sgt i32 %sub, -1
  br i1 %cmp, label %cleanup, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %do.end
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 8), align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1906
  %tobool15.not = icmp eq ptr %3, null
  br i1 %tobool15.not, label %cleanup, label %if.end

if.end:                                           ; preds = %lor.lhs.false6
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %4 = load volatile i32, ptr @jiffies, align 128
  %5 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 32), align 128
  %6 = add i32 %5, %gpssdelay
  %sub20 = sub i32 %4, %6
  %cmp21 = icmp slt i32 %sub20, 0
  br i1 %cmp21, label %cleanup, label %lor.lhs.false22

lor.lhs.false22:                                  ; preds = %if.end
  %7 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 31), align 4
  %8 = add i32 %7, %gpssdelay
  %sub28 = sub i32 %4, %8
  %cmp29 = icmp slt i32 %sub28, 0
  br i1 %cmp29, label %cleanup, label %lor.lhs.false30

lor.lhs.false30:                                  ; preds = %lor.lhs.false22
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @rcu_check_gp_start_stall.warned, i32 noundef 4) #24
  %9 = load volatile i32, ptr @rcu_check_gp_start_stall.warned, align 4
  %tobool32.not = icmp eq i32 %9, 0
  br i1 %tobool32.not, label %do.body36, label %cleanup

do.body36:                                        ; preds = %lor.lhs.false30
  %call39 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %rnp) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %10 = load volatile i32, ptr @jiffies, align 128
  %11 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %and.i.i79 = and i32 %11, 3
  %tobool48.not = icmp eq i32 %and.i.i79, 0
  br i1 %tobool48.not, label %do.end52, label %do.body86

do.end52:                                         ; preds = %do.body36
  %12 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 1), align 4
  %13 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 2), align 16
  %sub60 = sub i32 %12, %13
  %cmp61 = icmp sgt i32 %sub60, -1
  br i1 %cmp61, label %do.body86, label %lor.lhs.false63

lor.lhs.false63:                                  ; preds = %do.end52
  %14 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 32), align 128
  %15 = add i32 %14, %gpssdelay
  %sub69 = sub i32 %10, %15
  %cmp70 = icmp slt i32 %sub69, 0
  br i1 %cmp70, label %do.body86, label %lor.lhs.false72

lor.lhs.false72:                                  ; preds = %lor.lhs.false63
  %16 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 31), align 4
  %17 = add i32 %16, %gpssdelay
  %sub78 = sub i32 %10, %17
  %cmp79 = icmp slt i32 %sub78, 0
  br i1 %cmp79, label %do.body86, label %lor.lhs.false81

lor.lhs.false81:                                  ; preds = %lor.lhs.false72
  %call.i.i21 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @rcu_check_gp_start_stall.warned, i32 noundef 4) #24
  %18 = load volatile i32, ptr @rcu_check_gp_start_stall.warned, align 4
  %tobool83.not = icmp eq i32 %18, 0
  br i1 %tobool83.not, label %if.end202, label %do.body86

do.body86:                                        ; preds = %lor.lhs.false81, %lor.lhs.false72, %lor.lhs.false63, %do.end52, %do.body36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %19 = load i32, ptr @debug_locks, align 4
  %tobool87.not = icmp eq i32 %19, 0
  br i1 %tobool87.not, label %if.end181, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body86
  %20 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %23, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1907
  %24 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %27
  %28 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx, align 4
  %add105 = add i32 %29, ptrtoint (ptr @lockdep_recursion to i32)
  %30 = inttoptr i32 %add105 to ptr
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %30, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1908
  %33 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i22 = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i22 to ptr
  %preempt_count.i.i23 = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i23 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i23, align 4
  %sub.i = add i32 %36, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i23, align 4
  %tobool112.not = icmp eq i32 %32, 0
  br i1 %tobool112.not, label %land.rhs, label %if.end181

land.rhs:                                         ; preds = %land.lhs.true
  %37 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i24 = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i.i24 to ptr
  %preempt_count.i.i25 = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %preempt_count.i.i25 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %preempt_count.i.i25, align 4
  %add.i26 = add i32 %40, 1
  store volatile i32 %add.i26, ptr %preempt_count.i.i25, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1909
  %41 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %cpu, align 4
  %arrayidx136 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %42
  %43 = ptrtoint ptr %arrayidx136 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx136, align 4
  %add137 = add i32 %44, ptrtoint (ptr @hardirqs_enabled to i32)
  %45 = inttoptr i32 %add137 to ptr
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %45, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1910
  %48 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i27 = and i32 %48, -16384
  %49 = inttoptr i32 %and.i.i.i27 to ptr
  %preempt_count.i.i28 = getelementptr inbounds %struct.thread_info, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %preempt_count.i.i28 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %preempt_count.i.i28, align 4
  %sub.i29 = add i32 %51, -1
  store volatile i32 %sub.i29, ptr %preempt_count.i.i28, align 4
  %tobool144.not = icmp eq i32 %47, 0
  br i1 %tobool144.not, label %if.end181, label %land.rhs148

land.rhs148:                                      ; preds = %land.rhs
  %.b5 = load i1, ptr @rcu_check_gp_start_stall.__already_done, align 1
  br i1 %.b5, label %if.end181, label %if.then155, !prof !1646

if.then155:                                       ; preds = %land.rhs148
  store i1 true, ptr @rcu_check_gp_start_stall.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 878, i32 noundef 9, ptr noundef null) #24
  br label %if.end181

if.end181:                                        ; preds = %if.then155, %land.rhs148, %land.rhs, %land.lhs.true, %do.body86
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp, i32 noundef %call39) #24
  br label %cleanup

if.end202:                                        ; preds = %lor.lhs.false81
  %cmp203.not = icmp eq ptr %rnp, @rcu_state
  br i1 %cmp203.not, label %if.end213, label %do.body206

do.body206:                                       ; preds = %if.end202
  tail call void @_raw_spin_lock(ptr noundef nonnull @rcu_state) #24
  br label %if.end213

if.end213:                                        ; preds = %do.body206, %if.end202
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %52 = load volatile i32, ptr @jiffies, align 128
  %53 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %and.i.i80 = and i32 %53, 3
  %tobool215.not = icmp eq i32 %and.i.i80, 0
  br i1 %tobool215.not, label %do.end219, label %if.then251

do.end219:                                        ; preds = %if.end213
  %54 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 1), align 4
  %55 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 2), align 16
  %sub227 = sub i32 %54, %55
  %cmp228 = icmp sgt i32 %sub227, -1
  br i1 %cmp228, label %if.then251, label %lor.lhs.false230

lor.lhs.false230:                                 ; preds = %do.end219
  %56 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 32), align 128
  %57 = add i32 %56, %gpssdelay
  %sub236 = sub i32 %52, %57
  %cmp237 = icmp slt i32 %sub236, 0
  br i1 %cmp237, label %if.then251, label %lor.lhs.false239

lor.lhs.false239:                                 ; preds = %lor.lhs.false230
  %58 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 31), align 4
  %59 = add i32 %58, %gpssdelay
  %sub245 = sub i32 %52, %59
  %cmp246 = icmp slt i32 %sub245, 0
  br i1 %cmp246, label %if.then251, label %lor.lhs.false248

lor.lhs.false248:                                 ; preds = %lor.lhs.false239
  %call.i.i30 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @rcu_check_gp_start_stall.warned, i32 noundef 4) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1728
  tail call void @llvm.prefetch.p0(ptr nonnull @rcu_check_gp_start_stall.warned, i32 1, i32 3, i32 1) #24
  %60 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 1, ptr nonnull @rcu_check_gp_start_stall.warned) #24, !srcloc !1729
  %asmresult.i.i = extractvalue { i32, i32 } %60, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1730
  %tobool250.not = icmp eq i32 %asmresult.i.i, 0
  br i1 %tobool250.not, label %do.end535, label %if.then251

if.then251:                                       ; preds = %lor.lhs.false248, %lor.lhs.false239, %lor.lhs.false230, %do.end219, %if.end213
  br i1 %cmp203.not, label %do.body386, label %do.body256

do.body256:                                       ; preds = %if.then251
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %61 = load i32, ptr @debug_locks, align 4
  %tobool258.not = icmp eq i32 %61, 0
  br i1 %tobool258.not, label %if.end371, label %land.lhs.true259

land.lhs.true259:                                 ; preds = %do.body256
  %62 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i31 = and i32 %62, -16384
  %63 = inttoptr i32 %and.i.i.i31 to ptr
  %preempt_count.i.i32 = getelementptr inbounds %struct.thread_info, ptr %63, i32 0, i32 1
  %64 = ptrtoint ptr %preempt_count.i.i32 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %preempt_count.i.i32, align 4
  %add.i33 = add i32 %65, 1
  store volatile i32 %add.i33, ptr %preempt_count.i.i32, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1911
  %66 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i81 = and i32 %66, -16384
  %67 = inttoptr i32 %and.i81 to ptr
  %cpu282 = getelementptr inbounds %struct.thread_info, ptr %67, i32 0, i32 3
  %68 = ptrtoint ptr %cpu282 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %cpu282, align 4
  %arrayidx283 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %69
  %70 = ptrtoint ptr %arrayidx283 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %arrayidx283, align 4
  %add284 = add i32 %71, ptrtoint (ptr @lockdep_recursion to i32)
  %72 = inttoptr i32 %add284 to ptr
  %73 = ptrtoint ptr %72 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load volatile i32, ptr %72, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1912
  %75 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i34 = and i32 %75, -16384
  %76 = inttoptr i32 %and.i.i.i34 to ptr
  %preempt_count.i.i35 = getelementptr inbounds %struct.thread_info, ptr %76, i32 0, i32 1
  %77 = ptrtoint ptr %preempt_count.i.i35 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile i32, ptr %preempt_count.i.i35, align 4
  %sub.i36 = add i32 %78, -1
  store volatile i32 %sub.i36, ptr %preempt_count.i.i35, align 4
  %tobool291.not = icmp eq i32 %74, 0
  br i1 %tobool291.not, label %land.rhs292, label %if.end371

land.rhs292:                                      ; preds = %land.lhs.true259
  %79 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i37 = and i32 %79, -16384
  %80 = inttoptr i32 %and.i.i.i37 to ptr
  %preempt_count.i.i38 = getelementptr inbounds %struct.thread_info, ptr %80, i32 0, i32 1
  %81 = ptrtoint ptr %preempt_count.i.i38 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load volatile i32, ptr %preempt_count.i.i38, align 4
  %add.i39 = add i32 %82, 1
  store volatile i32 %add.i39, ptr %preempt_count.i.i38, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1913
  %83 = ptrtoint ptr %cpu282 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %cpu282, align 4
  %arrayidx316 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %84
  %85 = ptrtoint ptr %arrayidx316 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %arrayidx316, align 4
  %add317 = add i32 %86, ptrtoint (ptr @hardirqs_enabled to i32)
  %87 = inttoptr i32 %add317 to ptr
  %88 = ptrtoint ptr %87 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile i32, ptr %87, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1914
  %90 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i40 = and i32 %90, -16384
  %91 = inttoptr i32 %and.i.i.i40 to ptr
  %preempt_count.i.i41 = getelementptr inbounds %struct.thread_info, ptr %91, i32 0, i32 1
  %92 = ptrtoint ptr %preempt_count.i.i41 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile i32, ptr %preempt_count.i.i41, align 4
  %sub.i42 = add i32 %93, -1
  store volatile i32 %sub.i42, ptr %preempt_count.i.i41, align 4
  %tobool324.not = icmp eq i32 %89, 0
  br i1 %tobool324.not, label %if.end371, label %land.rhs333

land.rhs333:                                      ; preds = %land.rhs292
  %.b8614 = load i1, ptr @rcu_check_gp_start_stall.__already_done.416, align 1
  br i1 %.b8614, label %if.end371, label %if.then344, !prof !1646

if.then344:                                       ; preds = %land.rhs333
  store i1 true, ptr @rcu_check_gp_start_stall.__already_done.416, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 894, i32 noundef 9, ptr noundef null) #24
  br label %if.end371

if.end371:                                        ; preds = %if.then344, %land.rhs333, %land.rhs292, %land.lhs.true259, %do.body256
  tail call void @_raw_spin_unlock(ptr noundef nonnull @rcu_state) #24
  br label %do.body386

do.body386:                                       ; preds = %if.end371, %if.then251
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %94 = load i32, ptr @debug_locks, align 4
  %tobool388.not = icmp eq i32 %94, 0
  br i1 %tobool388.not, label %if.end501, label %land.lhs.true389

land.lhs.true389:                                 ; preds = %do.body386
  %95 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i43 = and i32 %95, -16384
  %96 = inttoptr i32 %and.i.i.i43 to ptr
  %preempt_count.i.i44 = getelementptr inbounds %struct.thread_info, ptr %96, i32 0, i32 1
  %97 = ptrtoint ptr %preempt_count.i.i44 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load volatile i32, ptr %preempt_count.i.i44, align 4
  %add.i45 = add i32 %98, 1
  store volatile i32 %add.i45, ptr %preempt_count.i.i44, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1915
  %99 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i82 = and i32 %99, -16384
  %100 = inttoptr i32 %and.i82 to ptr
  %cpu412 = getelementptr inbounds %struct.thread_info, ptr %100, i32 0, i32 3
  %101 = ptrtoint ptr %cpu412 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %cpu412, align 4
  %arrayidx413 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %102
  %103 = ptrtoint ptr %arrayidx413 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %arrayidx413, align 4
  %add414 = add i32 %104, ptrtoint (ptr @lockdep_recursion to i32)
  %105 = inttoptr i32 %add414 to ptr
  %106 = ptrtoint ptr %105 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load volatile i32, ptr %105, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1916
  %108 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i46 = and i32 %108, -16384
  %109 = inttoptr i32 %and.i.i.i46 to ptr
  %preempt_count.i.i47 = getelementptr inbounds %struct.thread_info, ptr %109, i32 0, i32 1
  %110 = ptrtoint ptr %preempt_count.i.i47 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load volatile i32, ptr %preempt_count.i.i47, align 4
  %sub.i48 = add i32 %111, -1
  store volatile i32 %sub.i48, ptr %preempt_count.i.i47, align 4
  %tobool421.not = icmp eq i32 %107, 0
  br i1 %tobool421.not, label %land.rhs422, label %if.end501

land.rhs422:                                      ; preds = %land.lhs.true389
  %112 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i49 = and i32 %112, -16384
  %113 = inttoptr i32 %and.i.i.i49 to ptr
  %preempt_count.i.i50 = getelementptr inbounds %struct.thread_info, ptr %113, i32 0, i32 1
  %114 = ptrtoint ptr %preempt_count.i.i50 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load volatile i32, ptr %preempt_count.i.i50, align 4
  %add.i51 = add i32 %115, 1
  store volatile i32 %add.i51, ptr %preempt_count.i.i50, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1917
  %116 = ptrtoint ptr %cpu412 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %cpu412, align 4
  %arrayidx446 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %117
  %118 = ptrtoint ptr %arrayidx446 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %arrayidx446, align 4
  %add447 = add i32 %119, ptrtoint (ptr @hardirqs_enabled to i32)
  %120 = inttoptr i32 %add447 to ptr
  %121 = ptrtoint ptr %120 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load volatile i32, ptr %120, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1918
  %123 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i52 = and i32 %123, -16384
  %124 = inttoptr i32 %and.i.i.i52 to ptr
  %preempt_count.i.i53 = getelementptr inbounds %struct.thread_info, ptr %124, i32 0, i32 1
  %125 = ptrtoint ptr %preempt_count.i.i53 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load volatile i32, ptr %preempt_count.i.i53, align 4
  %sub.i54 = add i32 %126, -1
  store volatile i32 %sub.i54, ptr %preempt_count.i.i53, align 4
  %tobool454.not = icmp eq i32 %122, 0
  br i1 %tobool454.not, label %if.end501, label %land.rhs463

land.rhs463:                                      ; preds = %land.rhs422
  %.b8623 = load i1, ptr @rcu_check_gp_start_stall.__already_done.417, align 1
  br i1 %.b8623, label %if.end501, label %if.then474, !prof !1646

if.then474:                                       ; preds = %land.rhs463
  store i1 true, ptr @rcu_check_gp_start_stall.__already_done.417, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 895, i32 noundef 9, ptr noundef null) #24
  br label %if.end501

if.end501:                                        ; preds = %if.then474, %land.rhs463, %land.rhs422, %land.lhs.true389, %do.body386
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp, i32 noundef %call39) #24
  br label %cleanup

do.end535:                                        ; preds = %lor.lhs.false248
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 898, i32 noundef 9, ptr noundef null) #24
  br i1 %cmp203.not, label %do.body683, label %do.body553

do.body553:                                       ; preds = %do.end535
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %127 = load i32, ptr @debug_locks, align 4
  %tobool555.not = icmp eq i32 %127, 0
  br i1 %tobool555.not, label %if.end668, label %land.lhs.true556

land.lhs.true556:                                 ; preds = %do.body553
  %128 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i55 = and i32 %128, -16384
  %129 = inttoptr i32 %and.i.i.i55 to ptr
  %preempt_count.i.i56 = getelementptr inbounds %struct.thread_info, ptr %129, i32 0, i32 1
  %130 = ptrtoint ptr %preempt_count.i.i56 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load volatile i32, ptr %preempt_count.i.i56, align 4
  %add.i57 = add i32 %131, 1
  store volatile i32 %add.i57, ptr %preempt_count.i.i56, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1919
  %132 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i83 = and i32 %132, -16384
  %133 = inttoptr i32 %and.i83 to ptr
  %cpu579 = getelementptr inbounds %struct.thread_info, ptr %133, i32 0, i32 3
  %134 = ptrtoint ptr %cpu579 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %cpu579, align 4
  %arrayidx580 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %135
  %136 = ptrtoint ptr %arrayidx580 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %arrayidx580, align 4
  %add581 = add i32 %137, ptrtoint (ptr @lockdep_recursion to i32)
  %138 = inttoptr i32 %add581 to ptr
  %139 = ptrtoint ptr %138 to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load volatile i32, ptr %138, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1920
  %141 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i58 = and i32 %141, -16384
  %142 = inttoptr i32 %and.i.i.i58 to ptr
  %preempt_count.i.i59 = getelementptr inbounds %struct.thread_info, ptr %142, i32 0, i32 1
  %143 = ptrtoint ptr %preempt_count.i.i59 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load volatile i32, ptr %preempt_count.i.i59, align 4
  %sub.i60 = add i32 %144, -1
  store volatile i32 %sub.i60, ptr %preempt_count.i.i59, align 4
  %tobool588.not = icmp eq i32 %140, 0
  br i1 %tobool588.not, label %land.rhs589, label %if.end668

land.rhs589:                                      ; preds = %land.lhs.true556
  %145 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i61 = and i32 %145, -16384
  %146 = inttoptr i32 %and.i.i.i61 to ptr
  %preempt_count.i.i62 = getelementptr inbounds %struct.thread_info, ptr %146, i32 0, i32 1
  %147 = ptrtoint ptr %preempt_count.i.i62 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load volatile i32, ptr %preempt_count.i.i62, align 4
  %add.i63 = add i32 %148, 1
  store volatile i32 %add.i63, ptr %preempt_count.i.i62, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1921
  %149 = ptrtoint ptr %cpu579 to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %cpu579, align 4
  %arrayidx613 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %150
  %151 = ptrtoint ptr %arrayidx613 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %arrayidx613, align 4
  %add614 = add i32 %152, ptrtoint (ptr @hardirqs_enabled to i32)
  %153 = inttoptr i32 %add614 to ptr
  %154 = ptrtoint ptr %153 to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load volatile i32, ptr %153, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1922
  %156 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i64 = and i32 %156, -16384
  %157 = inttoptr i32 %and.i.i.i64 to ptr
  %preempt_count.i.i65 = getelementptr inbounds %struct.thread_info, ptr %157, i32 0, i32 1
  %158 = ptrtoint ptr %preempt_count.i.i65 to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load volatile i32, ptr %preempt_count.i.i65, align 4
  %sub.i66 = add i32 %159, -1
  store volatile i32 %sub.i66, ptr %preempt_count.i.i65, align 4
  %tobool621.not = icmp eq i32 %155, 0
  br i1 %tobool621.not, label %if.end668, label %land.rhs630

land.rhs630:                                      ; preds = %land.rhs589
  %.b8632 = load i1, ptr @rcu_check_gp_start_stall.__already_done.418, align 1
  br i1 %.b8632, label %if.end668, label %if.then641, !prof !1646

if.then641:                                       ; preds = %land.rhs630
  store i1 true, ptr @rcu_check_gp_start_stall.__already_done.418, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 900, i32 noundef 9, ptr noundef null) #24
  br label %if.end668

if.end668:                                        ; preds = %if.then641, %land.rhs630, %land.rhs589, %land.lhs.true556, %do.body553
  tail call void @_raw_spin_unlock(ptr noundef nonnull @rcu_state) #24
  br label %do.body683

do.body683:                                       ; preds = %if.end668, %do.end535
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %160 = load i32, ptr @debug_locks, align 4
  %tobool685.not = icmp eq i32 %160, 0
  br i1 %tobool685.not, label %if.end798, label %land.lhs.true686

land.lhs.true686:                                 ; preds = %do.body683
  %161 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i67 = and i32 %161, -16384
  %162 = inttoptr i32 %and.i.i.i67 to ptr
  %preempt_count.i.i68 = getelementptr inbounds %struct.thread_info, ptr %162, i32 0, i32 1
  %163 = ptrtoint ptr %preempt_count.i.i68 to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load volatile i32, ptr %preempt_count.i.i68, align 4
  %add.i69 = add i32 %164, 1
  store volatile i32 %add.i69, ptr %preempt_count.i.i68, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1923
  %165 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i84 = and i32 %165, -16384
  %166 = inttoptr i32 %and.i84 to ptr
  %cpu709 = getelementptr inbounds %struct.thread_info, ptr %166, i32 0, i32 3
  %167 = ptrtoint ptr %cpu709 to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load i32, ptr %cpu709, align 4
  %arrayidx710 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %168
  %169 = ptrtoint ptr %arrayidx710 to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %arrayidx710, align 4
  %add711 = add i32 %170, ptrtoint (ptr @lockdep_recursion to i32)
  %171 = inttoptr i32 %add711 to ptr
  %172 = ptrtoint ptr %171 to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load volatile i32, ptr %171, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1924
  %174 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i70 = and i32 %174, -16384
  %175 = inttoptr i32 %and.i.i.i70 to ptr
  %preempt_count.i.i71 = getelementptr inbounds %struct.thread_info, ptr %175, i32 0, i32 1
  %176 = ptrtoint ptr %preempt_count.i.i71 to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load volatile i32, ptr %preempt_count.i.i71, align 4
  %sub.i72 = add i32 %177, -1
  store volatile i32 %sub.i72, ptr %preempt_count.i.i71, align 4
  %tobool718.not = icmp eq i32 %173, 0
  br i1 %tobool718.not, label %land.rhs719, label %if.end798

land.rhs719:                                      ; preds = %land.lhs.true686
  %178 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i73 = and i32 %178, -16384
  %179 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %179, i32 0, i32 1
  %180 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %add.i75 = add i32 %181, 1
  store volatile i32 %add.i75, ptr %preempt_count.i.i74, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1925
  %182 = ptrtoint ptr %cpu709 to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %cpu709, align 4
  %arrayidx743 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %183
  %184 = ptrtoint ptr %arrayidx743 to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load i32, ptr %arrayidx743, align 4
  %add744 = add i32 %185, ptrtoint (ptr @hardirqs_enabled to i32)
  %186 = inttoptr i32 %add744 to ptr
  %187 = ptrtoint ptr %186 to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load volatile i32, ptr %186, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1926
  %189 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i76 = and i32 %189, -16384
  %190 = inttoptr i32 %and.i.i.i76 to ptr
  %preempt_count.i.i77 = getelementptr inbounds %struct.thread_info, ptr %190, i32 0, i32 1
  %191 = ptrtoint ptr %preempt_count.i.i77 to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load volatile i32, ptr %preempt_count.i.i77, align 4
  %sub.i78 = add i32 %192, -1
  store volatile i32 %sub.i78, ptr %preempt_count.i.i77, align 4
  %tobool751.not = icmp eq i32 %188, 0
  br i1 %tobool751.not, label %if.end798, label %land.rhs760

land.rhs760:                                      ; preds = %land.rhs719
  %.b8641 = load i1, ptr @rcu_check_gp_start_stall.__already_done.419, align 1
  br i1 %.b8641, label %if.end798, label %if.then771, !prof !1646

if.then771:                                       ; preds = %land.rhs760
  store i1 true, ptr @rcu_check_gp_start_stall.__already_done.419, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 901, i32 noundef 9, ptr noundef null) #24
  br label %if.end798

if.end798:                                        ; preds = %if.then771, %land.rhs760, %land.rhs719, %land.lhs.true686, %do.body683
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp, i32 noundef %call39) #24
  tail call void @show_rcu_gp_kthreads()
  br label %cleanup

cleanup:                                          ; preds = %if.end798, %if.end501, %if.end181, %lor.lhs.false30, %lor.lhs.false22, %if.end, %lor.lhs.false6, %do.end, %entry
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @rcu_sysrq_init() #9 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i8, ptr @sysrq_rcu, align 1, !range !1644
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %return, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i32 @register_sysrq_key(i32 noundef 121, ptr noundef nonnull @sysrq_rcudump_op) #24
  br label %return

return:                                           ; preds = %if.then, %entry
  %retval.0 = phi i32 [ %call, %if.then ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_gp_is_normal() local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_exp_sel_wait_wake(i32 noundef %s) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %__wait.i.i.i = alloca %struct.swait_queue, align 4
  %0 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %1 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 20), align 4
  %or.i.i.i = or i32 %1, 3
  %add.i.i.i = add i32 %or.i.i.i, 1
  %2 = load ptr, ptr @sync_rcu_exp_select_cpus.___tp_str, align 4
  tail call fastcc void @trace_rcu_exp_grace_period(ptr noundef %0, i32 noundef %add.i.i.i, ptr noundef %2) #24
  %3 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 2), align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1927
  %4 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 23), align 32
  %cmp.i.i.i = icmp eq i32 %3, %4
  br i1 %cmp.i.i.i, label %sync_exp_reset_tree_hotplug.exit.i.i, label %if.end.i.i.i, !prof !1646

if.end.i.i.i:                                     ; preds = %entry
  store i32 %3, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 23), align 32
  %5 = load i32, ptr @rcu_num_lvls, align 4
  %sub.i211.i.i = add i32 %5, -1
  %arrayidx.i.i.i = getelementptr %struct.rcu_state, ptr @rcu_state, i32 0, i32 1, i32 %sub.i211.i.i
  %6 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx.i.i.i, align 4
  %8 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx6538.i.i.i = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %8
  %cmp7539.i.i.i = icmp ult ptr %7, %arrayidx6538.i.i.i
  br i1 %cmp7539.i.i.i, label %do.body9.i.i.i, label %sync_exp_reset_tree_hotplug.exit.i.i

do.body9.i.i.i:                                   ; preds = %for.inc.i.i.i, %if.end.i.i.i
  %rnp.0540.i.i.i = phi ptr [ %incdec.ptr.i.i.i, %for.inc.i.i.i ], [ %7, %if.end.i.i.i ]
  %call.i.i.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %rnp.0540.i.i.i) #24
  %expmaskinit.i.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0540.i.i.i, i32 0, i32 10
  %9 = ptrtoint ptr %expmaskinit.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %expmaskinit.i.i.i, align 16
  %expmaskinitnext.i.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0540.i.i.i, i32 0, i32 11
  %11 = ptrtoint ptr %expmaskinitnext.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %expmaskinitnext.i.i.i, align 4
  %cmp19.i.i.i = icmp eq i32 %10, %12
  br i1 %cmp19.i.i.i, label %do.body23.i.i.i, label %if.end146.i.i.i

do.body23.i.i.i:                                  ; preds = %do.body9.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %13 = load i32, ptr @debug_locks, align 4
  %tobool24.not.i.i.i = icmp eq i32 %13, 0
  br i1 %tobool24.not.i.i.i, label %if.end125.i.i.i, label %land.lhs.true.i.i.i

land.lhs.true.i.i.i:                              ; preds = %do.body23.i.i.i
  %14 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i.i.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %17, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1928
  %18 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i.i to ptr
  %cpu.i.i.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 3
  %20 = ptrtoint ptr %cpu.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %cpu.i.i.i, align 4
  %arrayidx42.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %21
  %22 = ptrtoint ptr %arrayidx42.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx42.i.i.i, align 4
  %add.i212.i.i = add i32 %23, ptrtoint (ptr @lockdep_recursion to i32)
  %24 = inttoptr i32 %add.i212.i.i to ptr
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %24, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1929
  %27 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i504.i.i.i = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i.i504.i.i.i to ptr
  %preempt_count.i.i505.i.i.i = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %preempt_count.i.i505.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %preempt_count.i.i505.i.i.i, align 4
  %sub.i.i.i.i = add i32 %30, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i505.i.i.i, align 4
  %tobool49.not.i.i.i = icmp eq i32 %26, 0
  br i1 %tobool49.not.i.i.i, label %land.rhs.i.i.i, label %if.end125.i.i.i

land.rhs.i.i.i:                                   ; preds = %land.lhs.true.i.i.i
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i506.i.i.i = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i506.i.i.i to ptr
  %preempt_count.i.i507.i.i.i = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i507.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i507.i.i.i, align 4
  %add.i508.i.i.i = add i32 %34, 1
  store volatile i32 %add.i508.i.i.i, ptr %preempt_count.i.i507.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1930
  %35 = ptrtoint ptr %cpu.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cpu.i.i.i, align 4
  %arrayidx73.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %36
  %37 = ptrtoint ptr %arrayidx73.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx73.i.i.i, align 4
  %add74.i.i.i = add i32 %38, ptrtoint (ptr @hardirqs_enabled to i32)
  %39 = inttoptr i32 %add74.i.i.i to ptr
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %39, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1931
  %42 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i509.i.i.i = and i32 %42, -16384
  %43 = inttoptr i32 %and.i.i.i509.i.i.i to ptr
  %preempt_count.i.i510.i.i.i = getelementptr inbounds %struct.thread_info, ptr %43, i32 0, i32 1
  %44 = ptrtoint ptr %preempt_count.i.i510.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %preempt_count.i.i510.i.i.i, align 4
  %sub.i511.i.i.i = add i32 %45, -1
  store volatile i32 %sub.i511.i.i.i, ptr %preempt_count.i.i510.i.i.i, align 4
  %tobool81.not.i.i.i = icmp eq i32 %41, 0
  br i1 %tobool81.not.i.i.i, label %if.end125.i.i.i, label %land.rhs88.i.i.i

land.rhs88.i.i.i:                                 ; preds = %land.rhs.i.i.i
  %.b494.i.i.i = load i1, ptr @sync_exp_reset_tree_hotplug.__already_done, align 1
  br i1 %.b494.i.i.i, label %if.end125.i.i.i, label %if.then99.i.i.i, !prof !1646

if.then99.i.i.i:                                  ; preds = %land.rhs88.i.i.i
  store i1 true, ptr @sync_exp_reset_tree_hotplug.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 95, i32 noundef 9, ptr noundef null) #24
  br label %if.end125.i.i.i

if.end125.i.i.i:                                  ; preds = %if.then99.i.i.i, %land.rhs88.i.i.i, %land.rhs.i.i.i, %land.lhs.true.i.i.i, %do.body23.i.i.i
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp.0540.i.i.i, i32 noundef %call.i.i.i) #24
  br label %for.inc.i.i.i

if.end146.i.i.i:                                  ; preds = %do.body9.i.i.i
  %46 = ptrtoint ptr %expmaskinit.i.i.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %12, ptr %expmaskinit.i.i.i, align 16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %47 = load i32, ptr @debug_locks, align 4
  %tobool153.not.i.i.i = icmp eq i32 %47, 0
  br i1 %tobool153.not.i.i.i, label %if.end266.i.i.i, label %land.lhs.true154.i.i.i

land.lhs.true154.i.i.i:                           ; preds = %if.end146.i.i.i
  %48 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i512.i.i.i = and i32 %48, -16384
  %49 = inttoptr i32 %and.i.i.i512.i.i.i to ptr
  %preempt_count.i.i513.i.i.i = getelementptr inbounds %struct.thread_info, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %preempt_count.i.i513.i.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %preempt_count.i.i513.i.i.i, align 4
  %add.i514.i.i.i = add i32 %51, 1
  store volatile i32 %add.i514.i.i.i, ptr %preempt_count.i.i513.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1932
  %52 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i536.i.i.i = and i32 %52, -16384
  %53 = inttoptr i32 %and.i536.i.i.i to ptr
  %cpu177.i.i.i = getelementptr inbounds %struct.thread_info, ptr %53, i32 0, i32 3
  %54 = ptrtoint ptr %cpu177.i.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %cpu177.i.i.i, align 4
  %arrayidx178.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %55
  %56 = ptrtoint ptr %arrayidx178.i.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %arrayidx178.i.i.i, align 4
  %add179.i.i.i = add i32 %57, ptrtoint (ptr @lockdep_recursion to i32)
  %58 = inttoptr i32 %add179.i.i.i to ptr
  %59 = ptrtoint ptr %58 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %58, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1933
  %61 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i515.i.i.i = and i32 %61, -16384
  %62 = inttoptr i32 %and.i.i.i515.i.i.i to ptr
  %preempt_count.i.i516.i.i.i = getelementptr inbounds %struct.thread_info, ptr %62, i32 0, i32 1
  %63 = ptrtoint ptr %preempt_count.i.i516.i.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %preempt_count.i.i516.i.i.i, align 4
  %sub.i517.i.i.i = add i32 %64, -1
  store volatile i32 %sub.i517.i.i.i, ptr %preempt_count.i.i516.i.i.i, align 4
  %tobool186.not.i.i.i = icmp eq i32 %60, 0
  br i1 %tobool186.not.i.i.i, label %land.rhs187.i.i.i, label %if.end266.i.i.i

land.rhs187.i.i.i:                                ; preds = %land.lhs.true154.i.i.i
  %65 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i518.i.i.i = and i32 %65, -16384
  %66 = inttoptr i32 %and.i.i.i518.i.i.i to ptr
  %preempt_count.i.i519.i.i.i = getelementptr inbounds %struct.thread_info, ptr %66, i32 0, i32 1
  %67 = ptrtoint ptr %preempt_count.i.i519.i.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %preempt_count.i.i519.i.i.i, align 4
  %add.i520.i.i.i = add i32 %68, 1
  store volatile i32 %add.i520.i.i.i, ptr %preempt_count.i.i519.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1934
  %69 = ptrtoint ptr %cpu177.i.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %cpu177.i.i.i, align 4
  %arrayidx211.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %70
  %71 = ptrtoint ptr %arrayidx211.i.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %arrayidx211.i.i.i, align 4
  %add212.i.i.i = add i32 %72, ptrtoint (ptr @hardirqs_enabled to i32)
  %73 = inttoptr i32 %add212.i.i.i to ptr
  %74 = ptrtoint ptr %73 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load volatile i32, ptr %73, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1935
  %76 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i521.i.i.i = and i32 %76, -16384
  %77 = inttoptr i32 %and.i.i.i521.i.i.i to ptr
  %preempt_count.i.i522.i.i.i = getelementptr inbounds %struct.thread_info, ptr %77, i32 0, i32 1
  %78 = ptrtoint ptr %preempt_count.i.i522.i.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load volatile i32, ptr %preempt_count.i.i522.i.i.i, align 4
  %sub.i523.i.i.i = add i32 %79, -1
  store volatile i32 %sub.i523.i.i.i, ptr %preempt_count.i.i522.i.i.i, align 4
  %tobool219.not.i.i.i = icmp eq i32 %75, 0
  br i1 %tobool219.not.i.i.i, label %if.end266.i.i.i, label %land.rhs228.i.i.i

land.rhs228.i.i.i:                                ; preds = %land.rhs187.i.i.i
  %.b488493.i.i.i = load i1, ptr @sync_exp_reset_tree_hotplug.__already_done.436, align 1
  br i1 %.b488493.i.i.i, label %if.end266.i.i.i, label %if.then239.i.i.i, !prof !1646

if.then239.i.i.i:                                 ; preds = %land.rhs228.i.i.i
  store i1 true, ptr @sync_exp_reset_tree_hotplug.__already_done.436, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 102, i32 noundef 9, ptr noundef null) #24
  br label %if.end266.i.i.i

if.end266.i.i.i:                                  ; preds = %if.then239.i.i.i, %land.rhs228.i.i.i, %land.rhs187.i.i.i, %land.lhs.true154.i.i.i, %if.end146.i.i.i
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp.0540.i.i.i, i32 noundef %call.i.i.i) #24
  %tobool287.not.i.i.i = icmp eq i32 %10, 0
  br i1 %tobool287.not.i.i.i, label %while.cond.i.i.i, label %for.inc.i.i.i

while.cond.i.i.i:                                 ; preds = %if.end428.i.i.i, %if.end266.i.i.i
  %rnp.0.pn.i.i.i = phi ptr [ %rnp_up.0.i.i.i, %if.end428.i.i.i ], [ %rnp.0540.i.i.i, %if.end266.i.i.i ]
  %rnp_up.0.in.i.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0.pn.i.i.i, i32 0, i32 20
  %80 = ptrtoint ptr %rnp_up.0.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %rnp_up.0.i.i.i = load ptr, ptr %rnp_up.0.in.i.i.i, align 16
  %tobool290.not.i.i.i = icmp eq ptr %rnp_up.0.i.i.i, null
  br i1 %tobool290.not.i.i.i, label %for.inc.i.i.i, label %do.body292.i.i.i

do.body292.i.i.i:                                 ; preds = %while.cond.i.i.i
  %mask.0.in.i.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0.pn.i.i.i, i32 0, i32 14
  %81 = ptrtoint ptr %mask.0.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %mask.0.i.i.i = load i32, ptr %mask.0.in.i.i.i, align 32
  %call299.i.i.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull %rnp_up.0.i.i.i) #24
  %expmaskinit307.i.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp_up.0.i.i.i, i32 0, i32 10
  %82 = ptrtoint ptr %expmaskinit307.i.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %expmaskinit307.i.i.i, align 16
  %tobool308.not.not.i.i.i = icmp eq i32 %83, 0
  %or.i.i81.i = or i32 %83, %mask.0.i.i.i
  store i32 %or.i.i81.i, ptr %expmaskinit307.i.i.i, align 16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %84 = load i32, ptr @debug_locks, align 4
  %tobool315.not.i.i.i = icmp eq i32 %84, 0
  br i1 %tobool315.not.i.i.i, label %if.end428.i.i.i, label %land.lhs.true316.i.i.i

land.lhs.true316.i.i.i:                           ; preds = %do.body292.i.i.i
  %85 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i524.i.i.i = and i32 %85, -16384
  %86 = inttoptr i32 %and.i.i.i524.i.i.i to ptr
  %preempt_count.i.i525.i.i.i = getelementptr inbounds %struct.thread_info, ptr %86, i32 0, i32 1
  %87 = ptrtoint ptr %preempt_count.i.i525.i.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load volatile i32, ptr %preempt_count.i.i525.i.i.i, align 4
  %add.i526.i.i.i = add i32 %88, 1
  store volatile i32 %add.i526.i.i.i, ptr %preempt_count.i.i525.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1936
  %89 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i537.i.i.i = and i32 %89, -16384
  %90 = inttoptr i32 %and.i537.i.i.i to ptr
  %cpu339.i.i.i = getelementptr inbounds %struct.thread_info, ptr %90, i32 0, i32 3
  %91 = ptrtoint ptr %cpu339.i.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %cpu339.i.i.i, align 4
  %arrayidx340.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %92
  %93 = ptrtoint ptr %arrayidx340.i.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %arrayidx340.i.i.i, align 4
  %add341.i.i.i = add i32 %94, ptrtoint (ptr @lockdep_recursion to i32)
  %95 = inttoptr i32 %add341.i.i.i to ptr
  %96 = ptrtoint ptr %95 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load volatile i32, ptr %95, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1937
  %98 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i527.i.i.i = and i32 %98, -16384
  %99 = inttoptr i32 %and.i.i.i527.i.i.i to ptr
  %preempt_count.i.i528.i.i.i = getelementptr inbounds %struct.thread_info, ptr %99, i32 0, i32 1
  %100 = ptrtoint ptr %preempt_count.i.i528.i.i.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load volatile i32, ptr %preempt_count.i.i528.i.i.i, align 4
  %sub.i529.i.i.i = add i32 %101, -1
  store volatile i32 %sub.i529.i.i.i, ptr %preempt_count.i.i528.i.i.i, align 4
  %tobool348.not.i.i.i = icmp eq i32 %97, 0
  br i1 %tobool348.not.i.i.i, label %land.rhs349.i.i.i, label %if.end428.i.i.i

land.rhs349.i.i.i:                                ; preds = %land.lhs.true316.i.i.i
  %102 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i530.i.i.i = and i32 %102, -16384
  %103 = inttoptr i32 %and.i.i.i530.i.i.i to ptr
  %preempt_count.i.i531.i.i.i = getelementptr inbounds %struct.thread_info, ptr %103, i32 0, i32 1
  %104 = ptrtoint ptr %preempt_count.i.i531.i.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load volatile i32, ptr %preempt_count.i.i531.i.i.i, align 4
  %add.i532.i.i.i = add i32 %105, 1
  store volatile i32 %add.i532.i.i.i, ptr %preempt_count.i.i531.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1938
  %106 = ptrtoint ptr %cpu339.i.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %cpu339.i.i.i, align 4
  %arrayidx373.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %107
  %108 = ptrtoint ptr %arrayidx373.i.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %arrayidx373.i.i.i, align 4
  %add374.i.i.i = add i32 %109, ptrtoint (ptr @hardirqs_enabled to i32)
  %110 = inttoptr i32 %add374.i.i.i to ptr
  %111 = ptrtoint ptr %110 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load volatile i32, ptr %110, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1939
  %113 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i533.i.i.i = and i32 %113, -16384
  %114 = inttoptr i32 %and.i.i.i533.i.i.i to ptr
  %preempt_count.i.i534.i.i.i = getelementptr inbounds %struct.thread_info, ptr %114, i32 0, i32 1
  %115 = ptrtoint ptr %preempt_count.i.i534.i.i.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load volatile i32, ptr %preempt_count.i.i534.i.i.i, align 4
  %sub.i535.i.i.i = add i32 %116, -1
  store volatile i32 %sub.i535.i.i.i, ptr %preempt_count.i.i534.i.i.i, align 4
  %tobool381.not.i.i.i = icmp eq i32 %112, 0
  br i1 %tobool381.not.i.i.i, label %if.end428.i.i.i, label %land.rhs390.i.i.i

land.rhs390.i.i.i:                                ; preds = %land.rhs349.i.i.i
  %.b489492.i.i.i = load i1, ptr @sync_exp_reset_tree_hotplug.__already_done.437, align 1
  br i1 %.b489492.i.i.i, label %if.end428.i.i.i, label %if.then401.i.i.i, !prof !1646

if.then401.i.i.i:                                 ; preds = %land.rhs390.i.i.i
  store i1 true, ptr @sync_exp_reset_tree_hotplug.__already_done.437, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 117, i32 noundef 9, ptr noundef null) #24
  br label %if.end428.i.i.i

if.end428.i.i.i:                                  ; preds = %if.then401.i.i.i, %land.rhs390.i.i.i, %land.rhs349.i.i.i, %land.lhs.true316.i.i.i, %do.body292.i.i.i
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull %rnp_up.0.i.i.i, i32 noundef %call299.i.i.i) #24
  br i1 %tobool308.not.not.i.i.i, label %while.cond.i.i.i, label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %if.end428.i.i.i, %while.cond.i.i.i, %if.end266.i.i.i, %if.end125.i.i.i
  %incdec.ptr.i.i.i = getelementptr %struct.rcu_node, ptr %rnp.0540.i.i.i, i32 1
  %117 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx6.i.i.i = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %117
  %cmp7.i.i.i = icmp ult ptr %incdec.ptr.i.i.i, %arrayidx6.i.i.i
  br i1 %cmp7.i.i.i, label %do.body9.i.i.i, label %sync_exp_reset_tree_hotplug.exit.i.i

sync_exp_reset_tree_hotplug.exit.i.i:             ; preds = %for.inc.i.i.i, %if.end.i.i.i, %entry
  %118 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx213.i.i = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %118
  %cmp214.i.i = icmp ugt ptr %arrayidx213.i.i, @rcu_state
  br i1 %cmp214.i.i, label %do.body1.i.i, label %sync_exp_reset_tree.exit.i

do.body1.i.i:                                     ; preds = %if.end166.i.i, %sync_exp_reset_tree_hotplug.exit.i.i
  %rnp.0215.i.i = phi ptr [ %incdec.ptr.i.i, %if.end166.i.i ], [ @rcu_state, %sync_exp_reset_tree_hotplug.exit.i.i ]
  %call.i.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %rnp.0215.i.i) #24
  %expmask.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0215.i.i, i32 0, i32 9
  %119 = ptrtoint ptr %expmask.i.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %expmask.i.i, align 4
  %tobool.not.i.i = icmp eq i32 %120, 0
  br i1 %tobool.not.i.i, label %if.end40.i.i, label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %do.body1.i.i
  %.b199.i.i = load i1, ptr @sync_exp_reset_tree.__already_done, align 1
  br i1 %.b199.i.i, label %if.end40.i.i, label %if.then.i.i, !prof !1646

if.then.i.i:                                      ; preds = %land.rhs.i.i
  store i1 true, ptr @sync_exp_reset_tree.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 138, i32 noundef 9, ptr noundef null) #24
  br label %if.end40.i.i

if.end40.i.i:                                     ; preds = %if.then.i.i, %land.rhs.i.i, %do.body1.i.i
  %expmaskinit.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0215.i.i, i32 0, i32 10
  %121 = ptrtoint ptr %expmaskinit.i.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %expmaskinit.i.i, align 16
  %123 = ptrtoint ptr %expmask.i.i to i32
  call void @__asan_store4_noabort(i32 %123)
  store volatile i32 %122, ptr %expmask.i.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %124 = load i32, ptr @debug_locks, align 4
  %tobool61.not.i.i = icmp eq i32 %124, 0
  br i1 %tobool61.not.i.i, label %if.end166.i.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %if.end40.i.i
  %125 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i.i = and i32 %125, -16384
  %126 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %126, i32 0, i32 1
  %127 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i82.i = add i32 %128, 1
  store volatile i32 %add.i.i82.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1940
  %129 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %129, -16384
  %130 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %130, i32 0, i32 3
  %131 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %cpu.i.i, align 4
  %arrayidx79.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %132
  %133 = ptrtoint ptr %arrayidx79.i.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %arrayidx79.i.i, align 4
  %add.i.i = add i32 %134, ptrtoint (ptr @lockdep_recursion to i32)
  %135 = inttoptr i32 %add.i.i to ptr
  %136 = ptrtoint ptr %135 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load volatile i32, ptr %135, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1941
  %138 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i203.i.i = and i32 %138, -16384
  %139 = inttoptr i32 %and.i.i.i203.i.i to ptr
  %preempt_count.i.i204.i.i = getelementptr inbounds %struct.thread_info, ptr %139, i32 0, i32 1
  %140 = ptrtoint ptr %preempt_count.i.i204.i.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load volatile i32, ptr %preempt_count.i.i204.i.i, align 4
  %sub.i.i.i = add i32 %141, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i204.i.i, align 4
  %tobool86.not.i.i = icmp eq i32 %137, 0
  br i1 %tobool86.not.i.i, label %land.rhs87.i.i, label %if.end166.i.i

land.rhs87.i.i:                                   ; preds = %land.lhs.true.i.i
  %142 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i205.i.i = and i32 %142, -16384
  %143 = inttoptr i32 %and.i.i.i205.i.i to ptr
  %preempt_count.i.i206.i.i = getelementptr inbounds %struct.thread_info, ptr %143, i32 0, i32 1
  %144 = ptrtoint ptr %preempt_count.i.i206.i.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load volatile i32, ptr %preempt_count.i.i206.i.i, align 4
  %add.i207.i.i = add i32 %145, 1
  store volatile i32 %add.i207.i.i, ptr %preempt_count.i.i206.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1942
  %146 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %cpu.i.i, align 4
  %arrayidx111.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %147
  %148 = ptrtoint ptr %arrayidx111.i.i to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load i32, ptr %arrayidx111.i.i, align 4
  %add112.i.i = add i32 %149, ptrtoint (ptr @hardirqs_enabled to i32)
  %150 = inttoptr i32 %add112.i.i to ptr
  %151 = ptrtoint ptr %150 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load volatile i32, ptr %150, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1943
  %153 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i208.i.i = and i32 %153, -16384
  %154 = inttoptr i32 %and.i.i.i208.i.i to ptr
  %preempt_count.i.i209.i.i = getelementptr inbounds %struct.thread_info, ptr %154, i32 0, i32 1
  %155 = ptrtoint ptr %preempt_count.i.i209.i.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load volatile i32, ptr %preempt_count.i.i209.i.i, align 4
  %sub.i210.i.i = add i32 %156, -1
  store volatile i32 %sub.i210.i.i, ptr %preempt_count.i.i209.i.i, align 4
  %tobool119.not.i.i = icmp eq i32 %152, 0
  br i1 %tobool119.not.i.i, label %if.end166.i.i, label %land.rhs128.i.i

land.rhs128.i.i:                                  ; preds = %land.rhs87.i.i
  %.b197198.i.i = load i1, ptr @sync_exp_reset_tree.__already_done.435, align 1
  br i1 %.b197198.i.i, label %if.end166.i.i, label %if.then139.i.i, !prof !1646

if.then139.i.i:                                   ; preds = %land.rhs128.i.i
  store i1 true, ptr @sync_exp_reset_tree.__already_done.435, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 140, i32 noundef 9, ptr noundef null) #24
  br label %if.end166.i.i

if.end166.i.i:                                    ; preds = %if.then139.i.i, %land.rhs128.i.i, %land.rhs87.i.i, %land.lhs.true.i.i, %if.end40.i.i
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp.0215.i.i, i32 noundef %call.i.i) #24
  %incdec.ptr.i.i = getelementptr %struct.rcu_node, ptr %rnp.0215.i.i, i32 1
  %157 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx.i.i = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %157
  %cmp.i.i = icmp ult ptr %incdec.ptr.i.i, %arrayidx.i.i
  br i1 %cmp.i.i, label %do.body1.i.i, label %sync_exp_reset_tree.exit.i

sync_exp_reset_tree.exit.i:                       ; preds = %if.end166.i.i, %sync_exp_reset_tree_hotplug.exit.i.i
  %158 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %159 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 20), align 4
  %or.i.i83.i = or i32 %159, 3
  %add.i.i84.i = add i32 %or.i.i83.i, 1
  %160 = load ptr, ptr @sync_rcu_exp_select_cpus.___tp_str.432, align 4
  tail call fastcc void @trace_rcu_exp_grace_period(ptr noundef %158, i32 noundef %add.i.i84.i, ptr noundef %160) #24
  %161 = load i32, ptr @rcu_num_lvls, align 4
  %sub.i = add i32 %161, -1
  %arrayidx.i = getelementptr %struct.rcu_state, ptr @rcu_state, i32 0, i32 1, i32 %sub.i
  %162 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %arrayidx.i, align 4
  %164 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx385.i = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %164
  %cmp86.i = icmp ult ptr %163, %arrayidx385.i
  br i1 %cmp86.i, label %for.body.i, label %for.end.i

for.body.i:                                       ; preds = %for.inc.i, %sync_exp_reset_tree.exit.i
  %165 = phi i32 [ %181, %for.inc.i ], [ %164, %sync_exp_reset_tree.exit.i ]
  %rnp.087.i = phi ptr [ %incdec.ptr.i, %for.inc.i ], [ %163, %sync_exp_reset_tree.exit.i ]
  %exp_need_flush.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.087.i, i32 0, i32 38
  %166 = ptrtoint ptr %exp_need_flush.i to i32
  call void @__asan_store1_noabort(i32 %166)
  store i8 0, ptr %exp_need_flush.i, align 16
  %expmask.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.087.i, i32 0, i32 9
  %167 = ptrtoint ptr %expmask.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load volatile i32, ptr %expmask.i, align 4
  %tobool.not.i = icmp eq i32 %168, 0
  br i1 %tobool.not.i, label %for.inc.i, label %do.end7.i

do.end7.i:                                        ; preds = %for.body.i
  %169 = load volatile ptr, ptr @rcu_par_gp_wq, align 4
  %tobool9.not.i = icmp eq ptr %169, null
  br i1 %tobool9.not.i, label %if.then15.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %do.end7.i
  %170 = load i32, ptr @rcu_scheduler_active, align 4
  %cmp10.not.i = icmp eq i32 %170, 2
  br i1 %cmp10.not.i, label %lor.lhs.false11.i, label %if.then15.i

lor.lhs.false11.i:                                ; preds = %lor.lhs.false.i
  %sub12.i = add i32 %165, -1
  %arrayidx13.i = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %sub12.i
  %cmp14.i = icmp eq ptr %rnp.087.i, %arrayidx13.i
  br i1 %cmp14.i, label %if.then15.i, label %do.body17.i

if.then15.i:                                      ; preds = %lor.lhs.false11.i, %lor.lhs.false.i, %do.end7.i
  %rew_work.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.087.i, i32 0, i32 37, i32 1
  tail call void @sync_rcu_exp_select_node_cpus(ptr noundef %rew_work.i) #24
  br label %for.inc.i

do.body17.i:                                      ; preds = %lor.lhs.false11.i
  %rew_work19.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.087.i, i32 0, i32 37, i32 1
  tail call void @__init_work(ptr noundef %rew_work19.i, i32 noundef 0) #24
  %171 = ptrtoint ptr %rew_work19.i to i32
  call void @__asan_store4_noabort(i32 %171)
  store i32 -64, ptr %rew_work19.i, align 4
  %lockdep_map.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.087.i, i32 0, i32 37, i32 1, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map.i, ptr noundef nonnull @.str.434, ptr noundef nonnull @sync_rcu_exp_select_cpus.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #24
  %entry26.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.087.i, i32 0, i32 37, i32 1, i32 1
  %172 = ptrtoint ptr %entry26.i to i32
  call void @__asan_store4_noabort(i32 %172)
  store volatile ptr %entry26.i, ptr %entry26.i, align 4
  %prev.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.087.i, i32 0, i32 37, i32 1, i32 1, i32 1
  %173 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %173)
  store ptr %entry26.i, ptr %prev.i.i, align 4
  %func.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.087.i, i32 0, i32 37, i32 1, i32 2
  %174 = ptrtoint ptr %func.i to i32
  call void @__asan_store4_noabort(i32 %174)
  store ptr @sync_rcu_exp_select_node_cpus, ptr %func.i, align 4
  %ffmask.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.087.i, i32 0, i32 13
  %call31.i = tail call i32 @_find_next_bit_be(ptr noundef %ffmask.i, i32 noundef 32, i32 noundef -1) #24
  %grphi.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.087.i, i32 0, i32 16
  %175 = ptrtoint ptr %grphi.i to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %grphi.i, align 8
  %grplo.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.087.i, i32 0, i32 15
  %177 = ptrtoint ptr %grplo.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %grplo.i, align 4
  %sub32.i = sub i32 %176, %178
  %cmp33.i = icmp sgt i32 %call31.i, %sub32.i
  %add.i = add i32 %178, %call31.i
  %cpu.0.i = select i1 %cmp33.i, i32 4, i32 %add.i, !prof !1645
  %179 = load ptr, ptr @rcu_par_gp_wq, align 4
  %call41.i = tail call zeroext i1 @queue_work_on(i32 noundef %cpu.0.i, ptr noundef %179, ptr noundef %rew_work19.i) #24
  %180 = ptrtoint ptr %exp_need_flush.i to i32
  call void @__asan_store1_noabort(i32 %180)
  store i8 1, ptr %exp_need_flush.i, align 16
  br label %for.inc.i

for.inc.i:                                        ; preds = %do.body17.i, %if.then15.i, %for.body.i
  %incdec.ptr.i = getelementptr %struct.rcu_node, ptr %rnp.087.i, i32 1
  %181 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx3.i = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %181
  %cmp.i = icmp ult ptr %incdec.ptr.i, %arrayidx3.i
  br i1 %cmp.i, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.inc.i, %sync_exp_reset_tree.exit.i
  %182 = load i32, ptr @rcu_num_lvls, align 4
  %sub43.i = add i32 %182, -1
  %arrayidx44.i = getelementptr %struct.rcu_state, ptr @rcu_state, i32 0, i32 1, i32 %sub43.i
  %183 = ptrtoint ptr %arrayidx44.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load ptr, ptr %arrayidx44.i, align 4
  %185 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx4690.i = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %185
  %cmp4791.i = icmp ult ptr %184, %arrayidx4690.i
  br i1 %cmp4791.i, label %for.body48.i, label %sync_rcu_exp_select_cpus.exit

for.body48.i:                                     ; preds = %for.inc56.i, %for.end.i
  %rnp.192.i = phi ptr [ %incdec.ptr57.i, %for.inc56.i ], [ %184, %for.end.i ]
  %exp_need_flush49.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.192.i, i32 0, i32 38
  %186 = ptrtoint ptr %exp_need_flush49.i to i32
  call void @__asan_load1_noabort(i32 %186)
  %187 = load i8, ptr %exp_need_flush49.i, align 16, !range !1644
  %tobool50.not.i = icmp eq i8 %187, 0
  br i1 %tobool50.not.i, label %for.inc56.i, label %if.then51.i

if.then51.i:                                      ; preds = %for.body48.i
  %rew_work53.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.192.i, i32 0, i32 37, i32 1
  %call54.i = tail call zeroext i1 @flush_work(ptr noundef %rew_work53.i) #24
  br label %for.inc56.i

for.inc56.i:                                      ; preds = %if.then51.i, %for.body48.i
  %incdec.ptr57.i = getelementptr %struct.rcu_node, ptr %rnp.192.i, i32 1
  %188 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx46.i = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %188
  %cmp47.i = icmp ult ptr %incdec.ptr57.i, %arrayidx46.i
  br i1 %cmp47.i, label %for.body48.i, label %sync_rcu_exp_select_cpus.exit

sync_rcu_exp_select_cpus.exit:                    ; preds = %for.inc56.i, %for.end.i
  %189 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %190 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 20), align 4
  %or.i.i.i.i = or i32 %190, 3
  %add.i.i.i.i1 = add i32 %or.i.i.i.i, 1
  %191 = load ptr, ptr @synchronize_rcu_expedited_wait.___tp_str, align 4
  tail call fastcc void @trace_rcu_exp_grace_period(ptr noundef %189, i32 noundef %add.i.i.i.i1, ptr noundef %191) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_timeout to i32))
  %192 = load volatile i32, ptr @rcu_cpu_stall_timeout, align 4
  %cmp.i.i.i2 = icmp slt i32 %192, 3
  br i1 %cmp.i.i.i2, label %if.end21.sink.split.i.i.i, label %if.else.i.i.i

if.else.i.i.i:                                    ; preds = %sync_rcu_exp_select_cpus.exit
  %cmp10.i.i.i = icmp ugt i32 %192, 300
  br i1 %cmp10.i.i.i, label %if.end21.sink.split.i.i.i, label %rcu_jiffies_till_stall_check.exit.i.i

if.end21.sink.split.i.i.i:                        ; preds = %if.else.i.i.i, %sync_rcu_exp_select_cpus.exit
  %.sink.i.i.i = phi i32 [ 3, %sync_rcu_exp_select_cpus.exit ], [ 300, %if.else.i.i.i ]
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_timeout to i32))
  store volatile i32 %.sink.i.i.i, ptr @rcu_cpu_stall_timeout, align 4
  br label %rcu_jiffies_till_stall_check.exit.i.i

rcu_jiffies_till_stall_check.exit.i.i:            ; preds = %if.end21.sink.split.i.i.i, %if.else.i.i.i
  %till_stall_check.0.i.i.i = phi i32 [ %192, %if.else.i.i.i ], [ %.sink.i.i.i, %if.end21.sink.split.i.i.i ]
  %mul.i.i.i = mul nuw nsw i32 %till_stall_check.0.i.i.i, 100
  %add.i.i.i3 = add nuw nsw i32 %mul.i.i.i, 500
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %193 = load volatile i32, ptr @jiffies, align 128
  %194 = getelementptr inbounds %struct.swait_queue, ptr %__wait.i.i.i, i32 0, i32 1
  %195 = getelementptr inbounds %struct.swait_queue, ptr %__wait.i.i.i, i32 0, i32 1, i32 1
  br label %for.cond93.outer.i.i

for.cond93.outer.i.i:                             ; preds = %rcu_jiffies_till_stall_check.exit490.i.i, %rcu_jiffies_till_stall_check.exit.i.i
  %jiffies_stall.0.ph.i.i = phi i32 [ %add405.i.i, %rcu_jiffies_till_stall_check.exit490.i.i ], [ %add.i.i.i3, %rcu_jiffies_till_stall_check.exit.i.i ]
  br label %for.cond93.i.i

for.cond93.i.i:                                   ; preds = %for.cond93.i.i.backedge, %for.cond93.outer.i.i
  %call1.i.i.i = call fastcc zeroext i1 @sync_rcu_exp_done_unlocked(ptr noundef nonnull @rcu_state) #24
  br i1 %call1.i.i.i, label %if.end29.i.i.i, label %if.then6.i.i.i

if.then6.i.i.i:                                   ; preds = %for.cond93.i.i
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %__wait.i.i.i) #24
  %196 = ptrtoint ptr %__wait.i.i.i to i32
  call void @__asan_store4_noabort(i32 %196)
  store ptr inttoptr (i32 -1 to ptr), ptr %__wait.i.i.i, align 4, !annotation !1767
  %197 = ptrtoint ptr %194 to i32
  call void @__asan_store4_noabort(i32 %197)
  store volatile ptr %194, ptr %194, align 4
  %198 = ptrtoint ptr %195 to i32
  call void @__asan_store4_noabort(i32 %198)
  store ptr %194, ptr %195, align 4
  %call877.i.i.i = call i32 @prepare_to_swait_event(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 22), ptr noundef nonnull %__wait.i.i.i, i32 noundef 2) #24
  %call1078.i.i.i = call fastcc zeroext i1 @sync_rcu_exp_done_unlocked(ptr noundef nonnull @rcu_state) #24
  br i1 %call1078.i.i.i, label %for.end.i.i.i, label %cleanup.i.i.i

cleanup.i.i.i:                                    ; preds = %cleanup.i.i.i, %if.then6.i.i.i
  %__ret7.182.i.i.i = phi i32 [ %__ret7.1.i.i.i, %cleanup.i.i.i ], [ %jiffies_stall.0.ph.i.i, %if.then6.i.i.i ]
  %call27.i.i.i = call i32 @schedule_timeout(i32 noundef %__ret7.182.i.i.i) #24
  %call8.i.i.i = call i32 @prepare_to_swait_event(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 22), ptr noundef nonnull %__wait.i.i.i, i32 noundef 2) #24
  %call10.i.i.i = call fastcc zeroext i1 @sync_rcu_exp_done_unlocked(ptr noundef nonnull @rcu_state) #24
  %tobool14.not.i.i.i = icmp eq i32 %call27.i.i.i, 0
  %199 = select i1 %call10.i.i.i, i1 %tobool14.not.i.i.i, i1 false
  %__ret7.1.i.i.i = select i1 %199, i32 1, i32 %call27.i.i.i
  %tobool20.not.i.i.i = icmp eq i32 %__ret7.1.i.i.i, 0
  %200 = select i1 %call10.i.i.i, i1 true, i1 %tobool20.not.i.i.i
  br i1 %200, label %for.end.i.i.i, label %cleanup.i.i.i

for.end.i.i.i:                                    ; preds = %cleanup.i.i.i, %if.then6.i.i.i
  %__ret7.1.lcssa.i.i.i = phi i32 [ %jiffies_stall.0.ph.i.i, %if.then6.i.i.i ], [ %__ret7.1.i.i.i, %cleanup.i.i.i ]
  call void @finish_swait(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 22), ptr noundef nonnull %__wait.i.i.i) #24
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %__wait.i.i.i) #24
  br label %if.end29.i.i.i

if.end29.i.i.i:                                   ; preds = %for.end.i.i.i, %for.cond93.i.i
  %__ret.1.i.i.i = phi i32 [ %jiffies_stall.0.ph.i.i, %for.cond93.i.i ], [ %__ret7.1.lcssa.i.i.i, %for.end.i.i.i ]
  %cmp.i479.i.i = icmp sgt i32 %__ret.1.i.i.i, 0
  br i1 %cmp.i479.i.i, label %synchronize_rcu_expedited_wait.exit.i, label %lor.lhs.false.i.i.i

lor.lhs.false.i.i.i:                              ; preds = %if.end29.i.i.i
  %call31.i.i.i = call fastcc zeroext i1 @sync_rcu_exp_done_unlocked(ptr noundef nonnull @rcu_state) #24
  br i1 %call31.i.i.i, label %synchronize_rcu_expedited_wait.exit.i, label %if.end33.i.i.i

if.end33.i.i.i:                                   ; preds = %lor.lhs.false.i.i.i
  %cmp34.i.i.i = icmp slt i32 %__ret.1.i.i.i, 0
  br i1 %cmp34.i.i.i, label %do.end.i.i.i, label %if.end96.i.i, !prof !1645

do.end.i.i.i:                                     ; preds = %if.end33.i.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 478, i32 noundef 9, ptr noundef null) #24
  br label %if.end96.i.i

if.end96.i.i:                                     ; preds = %do.end.i.i.i, %if.end33.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress_at_boot to i32))
  %201 = load i32, ptr @rcu_cpu_stall_suppress_at_boot, align 4
  %tobool.not.i.i.i.i = icmp eq i32 %201, 0
  br i1 %tobool.not.i.i.i.i, label %lor.rhs.i.i.i, label %rcu_stall_is_suppressed_at_boot.exit.i.i.i

rcu_stall_is_suppressed_at_boot.exit.i.i.i:       ; preds = %if.end96.i.i
  %call.i.i.i.i = call zeroext i1 @rcu_inkernel_boot_has_ended() #24
  br i1 %call.i.i.i.i, label %lor.rhs.i.i.i, label %for.cond93.i.i.backedge

lor.rhs.i.i.i:                                    ; preds = %rcu_stall_is_suppressed_at_boot.exit.i.i.i, %if.end96.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress to i32))
  %202 = load i32, ptr @rcu_cpu_stall_suppress, align 4
  %tobool.i.not.i.i = icmp eq i32 %202, 0
  br i1 %tobool.i.not.i.i, label %if.end99.i.i, label %for.cond93.i.i.backedge

for.cond93.i.i.backedge:                          ; preds = %lor.rhs.i.i.i, %rcu_stall_is_suppressed_at_boot.exit.i.i.i
  br label %for.cond93.i.i

if.end99.i.i:                                     ; preds = %lor.rhs.i.i.i
  %203 = load i32, ptr @panic_on_rcu_stall.cpu_stall, align 4
  %inc.i.i.i = add i32 %203, 1
  store i32 %inc.i.i.i, ptr @panic_on_rcu_stall.cpu_stall, align 4
  %204 = load i32, ptr @sysctl_max_rcu_stall_to_panic, align 4
  %cmp.i480.i.i = icmp slt i32 %inc.i.i.i, %204
  br i1 %cmp.i480.i.i, label %panic_on_rcu_stall.exit.i.i, label %if.end.i.i.i4

if.end.i.i.i4:                                    ; preds = %if.end99.i.i
  %205 = load i32, ptr @sysctl_panic_on_rcu_stall, align 4
  %tobool.not.i.i.i = icmp eq i32 %205, 0
  br i1 %tobool.not.i.i.i, label %panic_on_rcu_stall.exit.i.i, label %if.then1.i.i.i

if.then1.i.i.i:                                   ; preds = %if.end.i.i.i4
  call void @__asan_handle_no_return()
  call void (ptr, ...) @panic(ptr noundef nonnull @.str.227) #29
  unreachable

panic_on_rcu_stall.exit.i.i:                      ; preds = %if.end.i.i.i4, %if.end99.i.i
  %206 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %207 = load ptr, ptr @synchronize_rcu_expedited_wait.___tp_str.446, align 4
  call fastcc void @trace_rcu_stall_warning(ptr noundef %206, ptr noundef %207) #24
  %208 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %call105.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.448, ptr noundef %208) #27
  %209 = load i32, ptr @rcu_num_lvls, align 4
  %sub106.i.i = add i32 %209, -1
  %arrayidx107.i.i = getelementptr %struct.rcu_state, ptr @rcu_state, i32 0, i32 1, i32 %sub106.i.i
  %210 = ptrtoint ptr %arrayidx107.i.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load ptr, ptr %arrayidx107.i.i, align 4
  %212 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx109496.i.i = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %212
  %cmp110497.i.i = icmp ult ptr %211, %arrayidx109496.i.i
  br i1 %cmp110497.i.i, label %for.body112.i.i, label %do.end241.i.i

for.body112.i.i:                                  ; preds = %for.inc236.i.i, %panic_on_rcu_stall.exit.i.i
  %ndetected.0500.i.i = phi i32 [ %ndetected.1.lcssa.i.i, %for.inc236.i.i ], [ 0, %panic_on_rcu_stall.exit.i.i ]
  %rnp.1498.i.i = phi ptr [ %incdec.ptr237.i.i, %for.inc236.i.i ], [ %211, %panic_on_rcu_stall.exit.i.i ]
  %level116.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.1498.i.i, i32 0, i32 18
  %213 = ptrtoint ptr %level116.i.i to i32
  call void @__asan_load1_noabort(i32 %213)
  %214 = load i8, ptr %level116.i.i, align 1
  %conv117.i.i = zext i8 %214 to i32
  %215 = load i32, ptr @rcu_num_lvls, align 4
  %sub118.i.i = add i32 %215, -1
  %cmp119.not.i.i = icmp eq i32 %sub118.i.i, %conv117.i.i
  br i1 %cmp119.not.i.i, label %if.end168.i.i, label %land.rhs130.i.i

land.rhs130.i.i:                                  ; preds = %for.body112.i.i
  %.b478.i.i = load i1, ptr @synchronize_rcu_expedited_wait.__already_done.450, align 1
  br i1 %.b478.i.i, label %if.end168.i.i, label %if.then141.i.i, !prof !1646

if.then141.i.i:                                   ; preds = %land.rhs130.i.i
  store i1 true, ptr @synchronize_rcu_expedited_wait.__already_done.450, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 533, i32 noundef 9, ptr noundef null) #24
  br label %if.end168.i.i

if.end168.i.i:                                    ; preds = %if.then141.i.i, %land.rhs130.i.i, %for.body112.i.i
  %grplo176.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.1498.i.i, i32 0, i32 15
  %216 = ptrtoint ptr %grplo176.i.i to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load i32, ptr %grplo176.i.i, align 4
  %sub177.i.i = add i32 %217, -1
  %call178.i.i = call i32 @cpumask_next(i32 noundef %sub177.i.i, ptr noundef nonnull @__cpu_possible_mask) #28
  %grphi180.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.1498.i.i, i32 0, i32 16
  %218 = ptrtoint ptr %grphi180.i.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load i32, ptr %grphi180.i.i, align 8
  %cmp181.not492.i.i = icmp sgt i32 %call178.i.i, %219
  br i1 %cmp181.not492.i.i, label %for.inc236.i.i, label %for.body183.lr.ph.i.i

for.body183.lr.ph.i.i:                            ; preds = %if.end168.i.i
  %expmask191.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.1498.i.i, i32 0, i32 9
  %expmaskinit.i.i5 = getelementptr inbounds %struct.rcu_node, ptr %rnp.1498.i.i, i32 0, i32 10
  %expmaskinitnext.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.1498.i.i, i32 0, i32 11
  br label %for.body183.i.i

for.body183.i.i:                                  ; preds = %cleanup.i.i, %for.body183.lr.ph.i.i
  %cpu.1494.i.i = phi i32 [ %call178.i.i, %for.body183.lr.ph.i.i ], [ %call234.i.i, %cleanup.i.i ]
  %ndetected.1493.i.i = phi i32 [ %ndetected.0500.i.i, %for.body183.lr.ph.i.i ], [ %ndetected.2.i.i, %cleanup.i.i ]
  %220 = ptrtoint ptr %grplo176.i.i to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load i32, ptr %grplo176.i.i, align 4
  %sub186.i.i = sub i32 %cpu.1494.i.i, %221
  %shl.i.i = shl nuw i32 1, %sub186.i.i
  %222 = ptrtoint ptr %expmask191.i.i to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load volatile i32, ptr %expmask191.i.i, align 4
  %and.i.i = and i32 %shl.i.i, %223
  %tobool192.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool192.not.i.i, label %cleanup.i.i, label %if.end194.i.i

if.end194.i.i:                                    ; preds = %for.body183.i.i
  %inc.i.i = add i32 %ndetected.1493.i.i, 1
  %arrayidx202.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu.1494.i.i
  %224 = ptrtoint ptr %arrayidx202.i.i to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load i32, ptr %arrayidx202.i.i, align 4
  %add203.i.i = add i32 %225, ptrtoint (ptr @rcu_data to i32)
  %226 = inttoptr i32 %add203.i.i to ptr
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %227 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i.i.i = icmp ugt i32 %227, %cpu.1494.i.i
  br i1 %cmp.not.i.i.i.i.i.i, label %cpu_online.exit.i.i, label %land.rhs.i.i.i.i.i.i

land.rhs.i.i.i.i.i.i:                             ; preds = %if.end194.i.i
  %.b37.i.i.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i.i.i, label %cpu_online.exit.i.i, label %if.then.i.i.i.i.i.i, !prof !1646

if.then.i.i.i.i.i.i:                              ; preds = %land.rhs.i.i.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit.i.i

cpu_online.exit.i.i:                              ; preds = %if.then.i.i.i.i.i.i, %land.rhs.i.i.i.i.i.i, %if.end194.i.i
  %div3.i.i.i.i.i = lshr i32 %cpu.1494.i.i, 5
  %arrayidx.i.i.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i.i.i
  %228 = ptrtoint ptr %arrayidx.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load volatile i32, ptr %arrayidx.i.i.i.i.i, align 4
  %and.i.i.i.i.i6 = and i32 %cpu.1494.i.i, 31
  %230 = lshr i32 %229, %and.i.i.i.i.i6
  %231 = and i32 %230, 1
  %arrayidx213.i.i7 = getelementptr [3 x i8], ptr @.str.199, i32 0, i32 %231
  %232 = ptrtoint ptr %arrayidx213.i.i7 to i32
  call void @__asan_load1_noabort(i32 %232)
  %233 = load i8, ptr %arrayidx213.i.i7, align 1
  %conv214.i.i = zext i8 %233 to i32
  %grpmask.i.i = getelementptr inbounds %struct.rcu_data, ptr %226, i32 0, i32 8
  %234 = ptrtoint ptr %grpmask.i.i to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load i32, ptr %grpmask.i.i, align 4
  %236 = ptrtoint ptr %expmaskinit.i.i5 to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load i32, ptr %expmaskinit.i.i5, align 16
  %and215.i.i = and i32 %237, %235
  %tobool216.i.i = icmp ne i32 %and215.i.i, 0
  %lnot.ext220.i.i = zext i1 %tobool216.i.i to i32
  %arrayidx221.i.i = getelementptr [3 x i8], ptr @.str.200, i32 0, i32 %lnot.ext220.i.i
  %238 = ptrtoint ptr %arrayidx221.i.i to i32
  call void @__asan_load1_noabort(i32 %238)
  %239 = load i8, ptr %arrayidx221.i.i, align 1
  %conv222.i.i = zext i8 %239 to i32
  %240 = ptrtoint ptr %expmaskinitnext.i.i to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load i32, ptr %expmaskinitnext.i.i, align 4
  %and224.i.i = and i32 %241, %235
  %tobool225.i.i = icmp ne i32 %and224.i.i, 0
  %lnot.ext229.i.i = zext i1 %tobool225.i.i to i32
  %arrayidx230.i.i = getelementptr [3 x i8], ptr @.str.201, i32 0, i32 %lnot.ext229.i.i
  %242 = ptrtoint ptr %arrayidx230.i.i to i32
  call void @__asan_load1_noabort(i32 %242)
  %243 = load i8, ptr %arrayidx230.i.i, align 1
  %conv231.i.i = zext i8 %243 to i32
  %call232.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.452, i32 noundef %cpu.1494.i.i, i32 noundef %conv214.i.i, i32 noundef %conv222.i.i, i32 noundef %conv231.i.i) #27
  br label %cleanup.i.i

cleanup.i.i:                                      ; preds = %cpu_online.exit.i.i, %for.body183.i.i
  %ndetected.2.i.i = phi i32 [ %inc.i.i, %cpu_online.exit.i.i ], [ %ndetected.1493.i.i, %for.body183.i.i ]
  %call234.i.i = call i32 @cpumask_next(i32 noundef %cpu.1494.i.i, ptr noundef nonnull @__cpu_possible_mask) #28
  %244 = ptrtoint ptr %grphi180.i.i to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load i32, ptr %grphi180.i.i, align 8
  %cmp181.not.i.i = icmp sgt i32 %call234.i.i, %245
  br i1 %cmp181.not.i.i, label %for.inc236.i.i, label %for.body183.i.i

for.inc236.i.i:                                   ; preds = %cleanup.i.i, %if.end168.i.i
  %ndetected.1.lcssa.i.i = phi i32 [ %ndetected.0500.i.i, %if.end168.i.i ], [ %ndetected.2.i.i, %cleanup.i.i ]
  %incdec.ptr237.i.i = getelementptr %struct.rcu_node, ptr %rnp.1498.i.i, i32 1
  %246 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx109.i.i = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %246
  %cmp110.i.i = icmp ult ptr %incdec.ptr237.i.i, %arrayidx109.i.i
  br i1 %cmp110.i.i, label %for.body112.i.i, label %do.end241.i.i

do.end241.i.i:                                    ; preds = %for.inc236.i.i, %panic_on_rcu_stall.exit.i.i
  %ndetected.0.lcssa.i.i = phi i32 [ 0, %panic_on_rcu_stall.exit.i.i ], [ %ndetected.1.lcssa.i.i, %for.inc236.i.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %247 = load volatile i32, ptr @jiffies, align 128
  %sub243.i.i = sub i32 %247, %193
  %248 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 20), align 4
  %249 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 9), align 4
  %250 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 23), align 128
  %tobool250.i.i = icmp ne ptr %250, null
  %lnot.ext254.i.i = zext i1 %tobool250.i.i to i32
  %arrayidx255.i.i = getelementptr [3 x i8], ptr @.str.457, i32 0, i32 %lnot.ext254.i.i
  %251 = ptrtoint ptr %arrayidx255.i.i to i32
  call void @__asan_load1_noabort(i32 %251)
  %252 = load i8, ptr %arrayidx255.i.i, align 1
  %conv256.i.i = zext i8 %252 to i32
  %call257.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.455, i32 noundef %sub243.i.i, i32 noundef %248, i32 noundef %249, i32 noundef %conv256.i.i) #27
  %tobool258.not.i.i = icmp eq i32 %ndetected.0.lcssa.i.i, 0
  br i1 %tobool258.not.i.i, label %if.end309.i.i, label %do.end262.i.i

do.end262.i.i:                                    ; preds = %do.end241.i.i
  %call264.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.459) #27
  %253 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx266502.i.i = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %253
  %cmp267503.i.i = icmp ugt ptr %arrayidx266502.i.i, @rcu_state
  br i1 %cmp267503.i.i, label %for.body269.i.i, label %do.end306.i.i

for.body269.i.i:                                  ; preds = %for.inc301.i.i, %do.end262.i.i
  %rnp.2504.i.i = phi ptr [ %incdec.ptr302.i.i, %for.inc301.i.i ], [ @rcu_state, %do.end262.i.i ]
  %cmp270.i.i = icmp eq ptr %rnp.2504.i.i, @rcu_state
  br i1 %cmp270.i.i, label %for.inc301.i.i, label %if.end273.i.i

if.end273.i.i:                                    ; preds = %for.body269.i.i
  %call274.i.i = call fastcc zeroext i1 @sync_rcu_exp_done_unlocked(ptr noundef %rnp.2504.i.i) #24
  br i1 %call274.i.i, label %for.inc301.i.i, label %do.end279.i.i

do.end279.i.i:                                    ; preds = %if.end273.i.i
  %level281.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.2504.i.i, i32 0, i32 18
  %254 = ptrtoint ptr %level281.i.i to i32
  call void @__asan_load1_noabort(i32 %254)
  %255 = load i8, ptr %level281.i.i, align 1
  %conv282.i.i = zext i8 %255 to i32
  %grplo283.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.2504.i.i, i32 0, i32 15
  %256 = ptrtoint ptr %grplo283.i.i to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load i32, ptr %grplo283.i.i, align 4
  %grphi284.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.2504.i.i, i32 0, i32 16
  %258 = ptrtoint ptr %grphi284.i.i to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load i32, ptr %grphi284.i.i, align 8
  %expmask287.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.2504.i.i, i32 0, i32 9
  %260 = ptrtoint ptr %expmask287.i.i to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load i32, ptr %expmask287.i.i, align 4
  %exp_tasks291.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.2504.i.i, i32 0, i32 23
  %262 = ptrtoint ptr %exp_tasks291.i.i to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load ptr, ptr %exp_tasks291.i.i, align 128
  %tobool293.i.i = icmp ne ptr %263, null
  %lnot.ext297.i.i = zext i1 %tobool293.i.i to i32
  %arrayidx298.i.i = getelementptr [3 x i8], ptr @.str.457, i32 0, i32 %lnot.ext297.i.i
  %264 = ptrtoint ptr %arrayidx298.i.i to i32
  call void @__asan_load1_noabort(i32 %264)
  %265 = load i8, ptr %arrayidx298.i.i, align 1
  %conv299.i.i = zext i8 %265 to i32
  %call300.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.462, i32 noundef %conv282.i.i, i32 noundef %257, i32 noundef %259, i32 noundef %261, i32 noundef %conv299.i.i) #27
  br label %for.inc301.i.i

for.inc301.i.i:                                   ; preds = %do.end279.i.i, %if.end273.i.i, %for.body269.i.i
  %incdec.ptr302.i.i = getelementptr %struct.rcu_node, ptr %rnp.2504.i.i, i32 1
  %266 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx266.i.i = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %266
  %cmp267.i.i = icmp ult ptr %incdec.ptr302.i.i, %arrayidx266.i.i
  br i1 %cmp267.i.i, label %for.body269.i.i, label %do.end306.i.i

do.end306.i.i:                                    ; preds = %for.inc301.i.i, %do.end262.i.i
  %call308.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.90) #27
  br label %if.end309.i.i

if.end309.i.i:                                    ; preds = %do.end306.i.i, %do.end241.i.i
  %267 = load i32, ptr @rcu_num_lvls, align 4
  %sub310.i.i = add i32 %267, -1
  %arrayidx311.i.i = getelementptr %struct.rcu_state, ptr @rcu_state, i32 0, i32 1, i32 %sub310.i.i
  %268 = ptrtoint ptr %arrayidx311.i.i to i32
  call void @__asan_load4_noabort(i32 %268)
  %269 = load ptr, ptr %arrayidx311.i.i, align 4
  %270 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx313509.i.i = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %270
  %cmp314510.i.i = icmp ult ptr %269, %arrayidx313509.i.i
  br i1 %cmp314510.i.i, label %for.body316.i.i, label %for.end403.i.i

for.body316.i.i:                                  ; preds = %for.inc401.i.i, %if.end309.i.i
  %rnp.3511.i.i = phi ptr [ %incdec.ptr402.i.i, %for.inc401.i.i ], [ %269, %if.end309.i.i ]
  %level318.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.3511.i.i, i32 0, i32 18
  %271 = ptrtoint ptr %level318.i.i to i32
  call void @__asan_load1_noabort(i32 %271)
  %272 = load i8, ptr %level318.i.i, align 1
  %conv319.i.i = zext i8 %272 to i32
  %273 = load i32, ptr @rcu_num_lvls, align 4
  %sub320.i.i = add i32 %273, -1
  %cmp321.not.i.i = icmp eq i32 %sub320.i.i, %conv319.i.i
  br i1 %cmp321.not.i.i, label %if.end370.i.i, label %land.rhs332.i.i

land.rhs332.i.i:                                  ; preds = %for.body316.i.i
  %.b476477.i.i = load i1, ptr @synchronize_rcu_expedited_wait.__already_done.466, align 1
  br i1 %.b476477.i.i, label %if.end370.i.i, label %if.then343.i.i, !prof !1646

if.then343.i.i:                                   ; preds = %land.rhs332.i.i
  store i1 true, ptr @synchronize_rcu_expedited_wait.__already_done.466, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 566, i32 noundef 9, ptr noundef null) #24
  br label %if.end370.i.i

if.end370.i.i:                                    ; preds = %if.then343.i.i, %land.rhs332.i.i, %for.body316.i.i
  %grplo378.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.3511.i.i, i32 0, i32 15
  %274 = ptrtoint ptr %grplo378.i.i to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load i32, ptr %grplo378.i.i, align 4
  %sub379.i.i = add i32 %275, -1
  %call380.i.i = call i32 @cpumask_next(i32 noundef %sub379.i.i, ptr noundef nonnull @__cpu_possible_mask) #28
  %grphi382.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.3511.i.i, i32 0, i32 16
  %276 = ptrtoint ptr %grphi382.i.i to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load i32, ptr %grphi382.i.i, align 8
  %cmp383.not506.i.i = icmp sgt i32 %call380.i.i, %277
  br i1 %cmp383.not506.i.i, label %for.inc401.i.i, label %for.body385.lr.ph.i.i

for.body385.lr.ph.i.i:                            ; preds = %if.end370.i.i
  %expmask393.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.3511.i.i, i32 0, i32 9
  br label %for.body385.i.i

for.body385.i.i:                                  ; preds = %for.inc398.i.i, %for.body385.lr.ph.i.i
  %cpu.2507.i.i = phi i32 [ %call380.i.i, %for.body385.lr.ph.i.i ], [ %call399.i.i, %for.inc398.i.i ]
  %278 = ptrtoint ptr %grplo378.i.i to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load i32, ptr %grplo378.i.i, align 4
  %sub387.i.i = sub i32 %cpu.2507.i.i, %279
  %shl388.i.i = shl nuw i32 1, %sub387.i.i
  %280 = ptrtoint ptr %expmask393.i.i to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load volatile i32, ptr %expmask393.i.i, align 4
  %and394.i.i = and i32 %shl388.i.i, %281
  %tobool395.not.i.i = icmp eq i32 %and394.i.i, 0
  br i1 %tobool395.not.i.i, label %for.inc398.i.i, label %if.end397.i.i

if.end397.i.i:                                    ; preds = %for.body385.i.i
  call void @dump_cpu_task(i32 noundef %cpu.2507.i.i) #24
  br label %for.inc398.i.i

for.inc398.i.i:                                   ; preds = %if.end397.i.i, %for.body385.i.i
  %call399.i.i = call i32 @cpumask_next(i32 noundef %cpu.2507.i.i, ptr noundef nonnull @__cpu_possible_mask) #28
  %282 = ptrtoint ptr %grphi382.i.i to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load i32, ptr %grphi382.i.i, align 8
  %cmp383.not.i.i = icmp sgt i32 %call399.i.i, %283
  br i1 %cmp383.not.i.i, label %for.inc401.i.i, label %for.body385.i.i

for.inc401.i.i:                                   ; preds = %for.inc398.i.i, %if.end370.i.i
  %incdec.ptr402.i.i = getelementptr %struct.rcu_node, ptr %rnp.3511.i.i, i32 1
  %284 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx313.i.i = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %284
  %cmp314.i.i = icmp ult ptr %incdec.ptr402.i.i, %arrayidx313.i.i
  br i1 %cmp314.i.i, label %for.body316.i.i, label %for.end403.i.i

for.end403.i.i:                                   ; preds = %for.inc401.i.i, %if.end309.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_timeout to i32))
  %285 = load volatile i32, ptr @rcu_cpu_stall_timeout, align 4
  %cmp.i482.i.i = icmp slt i32 %285, 3
  br i1 %cmp.i482.i.i, label %if.end21.sink.split.i486.i.i, label %if.else.i484.i.i

if.else.i484.i.i:                                 ; preds = %for.end403.i.i
  %cmp10.i483.i.i = icmp ugt i32 %285, 300
  br i1 %cmp10.i483.i.i, label %if.end21.sink.split.i486.i.i, label %rcu_jiffies_till_stall_check.exit490.i.i

if.end21.sink.split.i486.i.i:                     ; preds = %if.else.i484.i.i, %for.end403.i.i
  %.sink.i485.i.i = phi i32 [ 3, %for.end403.i.i ], [ 300, %if.else.i484.i.i ]
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_timeout to i32))
  store volatile i32 %.sink.i485.i.i, ptr @rcu_cpu_stall_timeout, align 4
  br label %rcu_jiffies_till_stall_check.exit490.i.i

rcu_jiffies_till_stall_check.exit490.i.i:         ; preds = %if.end21.sink.split.i486.i.i, %if.else.i484.i.i
  %till_stall_check.0.i487.i.i = phi i32 [ %285, %if.else.i484.i.i ], [ %.sink.i485.i.i, %if.end21.sink.split.i486.i.i ]
  %286 = mul nuw nsw i32 %till_stall_check.0.i487.i.i, 300
  %add405.i.i = add nuw nsw i32 %286, 1503
  br label %for.cond93.outer.i.i

synchronize_rcu_expedited_wait.exit.i:            ; preds = %lor.lhs.false.i.i.i, %if.end29.i.i.i
  call void @mutex_lock_nested(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 19), i32 noundef 0) #24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1806
  %287 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 20), align 4
  %and.i.i.i.i8 = and i32 %287, 3
  %tobool.not.i.i39.i = icmp eq i32 %and.i.i.i.i8, 0
  br i1 %tobool.not.i.i39.i, label %land.rhs.i.i.i9, label %rcu_exp_gp_seq_end.exit.i

land.rhs.i.i.i9:                                  ; preds = %synchronize_rcu_expedited_wait.exit.i
  %.b55.i.i.i = load i1, ptr @rcu_seq_end.__already_done, align 1
  br i1 %.b55.i.i.i, label %rcu_exp_gp_seq_end.exit.i, label %if.then.i.i.i, !prof !1646

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i9
  store i1 true, ptr @rcu_seq_end.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.242, i32 noundef 72, i32 noundef 9, ptr noundef null) #24
  br label %rcu_exp_gp_seq_end.exit.i

rcu_exp_gp_seq_end.exit.i:                        ; preds = %if.then.i.i.i, %land.rhs.i.i.i9, %synchronize_rcu_expedited_wait.exit.i
  %288 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 20), align 4
  %or.i.i.i40.i = or i32 %288, 3
  %add.i.i.i41.i = add i32 %or.i.i.i40.i, 1
  store volatile i32 %add.i.i.i41.i, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 20), align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1944
  %289 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %290 = load ptr, ptr @rcu_exp_wait_wake.___tp_str, align 4
  call fastcc void @trace_rcu_exp_grace_period(ptr noundef %289, i32 noundef %s, ptr noundef %290) #24
  %291 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx42.i = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %291
  %cmp43.i = icmp ugt ptr %arrayidx42.i, @rcu_state
  br i1 %cmp43.i, label %do.end.lr.ph.i, label %rcu_exp_wait_wake.exit

do.end.lr.ph.i:                                   ; preds = %rcu_exp_gp_seq_end.exit.i
  %shr.i.i = lshr i32 %s, 2
  %and.i = and i32 %shr.i.i, 3
  br label %do.end.i

do.end.i:                                         ; preds = %do.end22.i, %do.end.lr.ph.i
  %rnp.044.i = phi ptr [ @rcu_state, %do.end.lr.ph.i ], [ %incdec.ptr.i11, %do.end22.i ]
  %exp_seq_rq.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.044.i, i32 0, i32 35
  %292 = ptrtoint ptr %exp_seq_rq.i to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load volatile i32, ptr %exp_seq_rq.i, align 4
  %sub.i10 = sub i32 %293, %s
  %cmp2.i = icmp slt i32 %sub.i10, 0
  br i1 %cmp2.i, label %if.then.i, label %do.end22.i

if.then.i:                                        ; preds = %do.end.i
  %exp_lock.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.044.i, i32 0, i32 34
  call void @_raw_spin_lock(ptr noundef %exp_lock.i) #24
  %294 = ptrtoint ptr %exp_seq_rq.i to i32
  call void @__asan_load4_noabort(i32 %294)
  %295 = load i32, ptr %exp_seq_rq.i, align 4
  %sub4.i = sub i32 %295, %s
  %cmp5.i = icmp slt i32 %sub4.i, 0
  br i1 %cmp5.i, label %do.body11.i, label %if.end.i

do.body11.i:                                      ; preds = %if.then.i
  %296 = ptrtoint ptr %exp_seq_rq.i to i32
  call void @__asan_store4_noabort(i32 %296)
  store volatile i32 %s, ptr %exp_seq_rq.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %do.body11.i, %if.then.i
  call void @_raw_spin_unlock(ptr noundef %exp_lock.i) #24
  br label %do.end22.i

do.end22.i:                                       ; preds = %if.end.i, %do.end.i
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1945
  %arrayidx25.i = getelementptr %struct.rcu_node, ptr %rnp.044.i, i32 0, i32 36, i32 %and.i
  call void @__wake_up(ptr noundef %arrayidx25.i, i32 noundef 3, i32 noundef 0, ptr noundef null) #24
  %incdec.ptr.i11 = getelementptr %struct.rcu_node, ptr %rnp.044.i, i32 1
  %297 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx.i12 = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %297
  %cmp.i13 = icmp ult ptr %incdec.ptr.i11, %arrayidx.i12
  br i1 %cmp.i13, label %do.end.i, label %rcu_exp_wait_wake.exit

rcu_exp_wait_wake.exit:                           ; preds = %do.end22.i, %rcu_exp_gp_seq_end.exit.i
  %298 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %299 = load ptr, ptr @rcu_exp_wait_wake.___tp_str.443, align 4
  call fastcc void @trace_rcu_exp_grace_period(ptr noundef %298, i32 noundef %s, ptr noundef %299) #24
  call void @mutex_unlock(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 19)) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @wait_rcu_exp_gp(ptr nocapture noundef readonly %wp) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %wp, i32 -4
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %add.ptr, align 4
  tail call fastcc void @rcu_exp_sel_wait_wake(i32 noundef %1)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_wait_entry(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @prepare_to_wait_event(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_wait(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @destroy_work_on_stack(ptr noundef) local_unnamed_addr #5

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @rcu_nocb_setup(ptr noundef %str) #9 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @alloc_bootmem_cpumask_var(ptr noundef nonnull @rcu_nocb_mask) #24
  %0 = ptrtoint ptr %str to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %str, align 1
  %cmp = icmp eq i8 %1, 61
  br i1 %cmp, label %if.then, label %if.end4

if.then:                                          ; preds = %entry
  %incdec.ptr = getelementptr i8, ptr %str, i32 1
  %2 = load ptr, ptr @rcu_nocb_mask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %3 = load i32, ptr @nr_cpu_ids, align 4
  %call.i = tail call i32 @bitmap_parselist(ptr noundef %incdec.ptr, ptr noundef %2, i32 noundef %3) #24
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end4, label %do.end

do.end:                                           ; preds = %if.then
  %call3 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.468) #27
  %4 = load ptr, ptr @rcu_nocb_mask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %5 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i = add i32 %5, 31
  %6 = lshr i32 %sub.i.i, 3
  %mul.i.i = and i32 %6, 536870908
  %7 = call ptr @memset(ptr %4, i32 255, i32 %mul.i.i)
  br label %if.end4

if.end4:                                          ; preds = %do.end, %if.then, %entry
  store i1 true, ptr @rcu_nocb_is_setup, align 1
  ret i32 1
}

; Function Attrs: cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn writeonly uwtable(sync)
define internal i32 @parse_rcu_nocb_poll(ptr nocapture noundef readnone %arg) #13 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  store i1 true, ptr @rcu_nocb_poll, align 1
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @rcu_is_nocb_cpu(i32 noundef %cpu) local_unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @rcu_nocb_mask, align 4
  %cmp.i.not = icmp eq ptr %0, null
  br i1 %cmp.i.not, label %return, label %if.then

if.then:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %1 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i = icmp ugt i32 %1, %cpu
  br i1 %cmp.not.i.i.i, label %cpumask_test_cpu.exit, label %land.rhs.i.i.i

land.rhs.i.i.i:                                   ; preds = %if.then
  %.b37.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i, label %cpumask_test_cpu.exit, label %if.then.i.i.i, !prof !1646

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpumask_test_cpu.exit

cpumask_test_cpu.exit:                            ; preds = %if.then.i.i.i, %land.rhs.i.i.i, %if.then
  %div3.i.i = lshr i32 %cpu, 5
  %arrayidx.i.i = getelementptr i32, ptr %0, i32 %div3.i.i
  %2 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %cpu, 31
  %4 = shl nuw i32 1, %and.i.i
  %5 = and i32 %3, %4
  %tobool = icmp ne i32 %5, 0
  br label %return

return:                                           ; preds = %cpumask_test_cpu.exit, %entry
  %retval.0 = phi i1 [ %tobool, %cpumask_test_cpu.exit ], [ false, %entry ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_nocb_flush_deferred_wakeup() #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr @rcu_data to i32)
  %6 = inttoptr i32 %add to ptr
  %nocb_gp_rdp.i = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 55
  %7 = ptrtoint ptr %nocb_gp_rdp.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %nocb_gp_rdp.i, align 128
  %tobool.not.i = icmp eq ptr %8, null
  br i1 %tobool.not.i, label %do_nocb_deferred_wakeup.exit, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %entry
  %nocb_defer_wakeup.i.i = getelementptr inbounds %struct.rcu_data, ptr %8, i32 0, i32 33
  %9 = ptrtoint ptr %nocb_defer_wakeup.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %nocb_defer_wakeup.i.i, align 4
  %cmp.i.i = icmp slt i32 %10, 2
  br i1 %cmp.i.i, label %do_nocb_deferred_wakeup.exit, label %do.body.i

do.body.i:                                        ; preds = %lor.lhs.false.i
  %nocb_gp_lock.i = getelementptr inbounds %struct.rcu_data, ptr %8, i32 0, i32 43
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %nocb_gp_lock.i) #24
  %11 = ptrtoint ptr %nocb_defer_wakeup.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %nocb_defer_wakeup.i.i, align 4
  %cmp.i.not.i.i = icmp slt i32 %12, 2
  br i1 %cmp.i.not.i.i, label %do.body.i.i, label %if.end.i.i

do.body.i.i:                                      ; preds = %do.body.i
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %nocb_gp_lock.i, i32 noundef %call2.i) #24
  br label %do_nocb_deferred_wakeup.exit

if.end.i.i:                                       ; preds = %do.body.i
  %cmp1.i.i = icmp eq i32 %12, 3
  %call3.i.i = tail call fastcc zeroext i1 @__wake_nocb_gp(ptr noundef nonnull %8, ptr noundef %6, i1 noundef zeroext %cmp1.i.i, i32 noundef %call2.i) #24
  %13 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %cpu.i.i = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 68
  %14 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %cpu.i.i, align 64
  %16 = load ptr, ptr @do_nocb_deferred_wakeup_common.___tp_str, align 4
  tail call fastcc void @trace_rcu_nocb_wake(ptr noundef %13, i32 noundef %15, ptr noundef %16) #24
  br label %do_nocb_deferred_wakeup.exit

do_nocb_deferred_wakeup.exit:                     ; preds = %if.end.i.i, %do.body.i.i, %lor.lhs.false.i, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rcu_nocb_cpu_deoffload(i32 noundef %cpu) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr @rcu_data to i32)
  %2 = inttoptr i32 %add to ptr
  tail call void @mutex_lock_nested(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 14), i32 noundef 0) #24
  tail call void @cpus_read_lock() #24
  %call = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %2)
  br i1 %call, label %if.then, label %if.end12

if.then:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %3 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %3, %cpu
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %if.then
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %if.then
  %div3.i.i.i = lshr i32 %cpu, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %4 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i = and i32 %cpu, 31
  %6 = shl nuw i32 1, %and.i.i.i
  %7 = and i32 %5, %6
  %tobool.i.not = icmp eq i32 %7, 0
  br i1 %tobool.i.not, label %do.end8, label %if.then3

if.then3:                                         ; preds = %cpu_online.exit
  %call4 = tail call i32 @work_on_cpu(i32 noundef %cpu, ptr noundef nonnull @rcu_nocb_rdp_deoffload, ptr noundef %2) #24
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %if.then5, label %if.end12

if.then5:                                         ; preds = %if.then3
  %8 = load ptr, ptr @rcu_nocb_mask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %9 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i = icmp ugt i32 %9, %cpu
  br i1 %cmp.not.i.i.i, label %cpumask_clear_cpu.exit, label %land.rhs.i.i.i

land.rhs.i.i.i:                                   ; preds = %if.then5
  %.b37.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i, label %cpumask_clear_cpu.exit, label %if.then.i.i.i, !prof !1646

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpumask_clear_cpu.exit

cpumask_clear_cpu.exit:                           ; preds = %if.then.i.i.i, %land.rhs.i.i.i, %if.then5
  tail call void @_clear_bit(i32 noundef %cpu, ptr noundef %8) #24
  br label %if.end12

do.end8:                                          ; preds = %cpu_online.exit
  %call10 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.95) #27
  br label %if.end12

if.end12:                                         ; preds = %do.end8, %cpumask_clear_cpu.exit, %if.then3, %entry
  %ret.0 = phi i32 [ %call4, %if.then3 ], [ 0, %cpumask_clear_cpu.exit ], [ -22, %do.end8 ], [ 0, %entry ]
  tail call void @cpus_read_unlock() #24
  tail call void @mutex_unlock(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 14)) #24
  ret i32 %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @work_on_cpu(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rcu_nocb_rdp_deoffload(ptr noundef %arg) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %__wait = alloca %struct.swait_queue, align 4
  %cpu = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 68
  %0 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cpu, align 64
  %2 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i to ptr
  %cpu2 = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %cpu2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cpu2, align 4
  %cmp.not = icmp eq i32 %1, %5
  br i1 %cmp.not, label %if.end29, label %land.rhs

land.rhs:                                         ; preds = %entry
  %.b267 = load i1, ptr @rcu_nocb_rdp_deoffload.__already_done, align 1
  br i1 %.b267, label %if.end29, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @rcu_nocb_rdp_deoffload.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 999, i32 noundef 9, ptr noundef null) #24
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs, %entry
  %6 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu, align 64
  %call42 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.481, i32 noundef %7) #27
  %8 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i268 = and i32 %8, 128
  %tobool58.not = icmp eq i32 %and.i268, 0
  br i1 %tobool58.not, label %if.then59, label %do.end62

if.then59:                                        ; preds = %if.end29
  tail call void @trace_hardirqs_off() #24
  br label %do.end62

do.end62:                                         ; preds = %if.then59, %if.end29
  %flags1.i.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 13, i32 5
  %9 = ptrtoint ptr %flags1.i.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load volatile i8, ptr %flags1.i.i, align 4
  %11 = and i8 %10, 4
  %tobool.i.i.not = icmp eq i8 %11, 0
  br i1 %tobool.i.i.not, label %do.end68, label %if.then65

if.then65:                                        ; preds = %do.end62
  %nocb_lock = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 31
  tail call void @_raw_spin_lock(ptr noundef %nocb_lock) #24
  br label %do.end68

do.end68:                                         ; preds = %if.then65, %do.end62
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %12 = load volatile i32, ptr @jiffies, align 128
  %call.i = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %arg) #24
  br i1 %call.i, label %rcu_nocb_flush_bypass.exit, label %if.end118

rcu_nocb_flush_bypass.exit:                       ; preds = %do.end68
  tail call fastcc void @rcu_lockdep_assert_cblist_protected(ptr noundef %arg) #24
  tail call fastcc void @rcu_nocb_bypass_lock(ptr noundef %arg) #24
  %call1.i = tail call fastcc zeroext i1 @rcu_nocb_do_flush_bypass(ptr noundef %arg, ptr noundef null, i32 noundef %12) #24
  br i1 %call1.i, label %if.end118, label %land.rhs80

land.rhs80:                                       ; preds = %rcu_nocb_flush_bypass.exit
  %.b263266 = load i1, ptr @rcu_nocb_rdp_deoffload.__already_done.483, align 1
  br i1 %.b263266, label %if.end118, label %if.then91, !prof !1646

if.then91:                                        ; preds = %land.rhs80
  store i1 true, ptr @rcu_nocb_rdp_deoffload.__already_done.483, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 1013, i32 noundef 9, ptr noundef null) #24
  br label %if.end118

if.end118:                                        ; preds = %if.then91, %land.rhs80, %rcu_nocb_flush_bypass.exit, %do.end68
  %13 = ptrtoint ptr %flags1.i.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %flags1.i.i, align 4
  %conv2.i = or i8 %14, 2
  store i8 %conv2.i, ptr %flags1.i.i, align 4
  tail call fastcc void @invoke_rcu_core()
  tail call fastcc void @rdp_offload_toggle(ptr noundef %arg, i1 noundef zeroext false, i32 noundef %8)
  %15 = ptrtoint ptr %flags1.i.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load volatile i8, ptr %flags1.i.i, align 4
  %17 = and i8 %16, 24
  %tobool.i.not = icmp eq i8 %17, 0
  br i1 %tobool.i.not, label %do.end138, label %if.end130

if.end130:                                        ; preds = %if.end118
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %__wait) #24
  %18 = ptrtoint ptr %__wait to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr inttoptr (i32 -1 to ptr), ptr %__wait, align 4, !annotation !1767
  %19 = getelementptr inbounds %struct.swait_queue, ptr %__wait, i32 0, i32 1
  %20 = getelementptr inbounds %struct.swait_queue, ptr %__wait, i32 0, i32 1, i32 1
  %21 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %19, ptr %19, align 4
  %22 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %19, ptr %20, align 4
  %nocb_state_wq = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 29
  %call131284 = call i32 @prepare_to_swait_event(ptr noundef %nocb_state_wq, ptr noundef nonnull %__wait, i32 noundef 2) #24
  %23 = ptrtoint ptr %flags1.i.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load volatile i8, ptr %flags1.i.i, align 4
  %25 = and i8 %24, 24
  %tobool.i274.not285 = icmp eq i8 %25, 0
  br i1 %tobool.i274.not285, label %for.end, label %cleanup

cleanup:                                          ; preds = %cleanup, %if.end130
  call void @schedule() #24
  %call131 = call i32 @prepare_to_swait_event(ptr noundef %nocb_state_wq, ptr noundef nonnull %__wait, i32 noundef 2) #24
  %26 = ptrtoint ptr %flags1.i.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load volatile i8, ptr %flags1.i.i, align 4
  %28 = and i8 %27, 24
  %tobool.i274.not = icmp eq i8 %28, 0
  br i1 %tobool.i274.not, label %for.end, label %cleanup

for.end:                                          ; preds = %cleanup, %if.end130
  call void @finish_swait(ptr noundef %nocb_state_wq, ptr noundef nonnull %__wait) #24
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %__wait) #24
  br label %do.end138

do.end138:                                        ; preds = %for.end, %if.end118
  %nocb_entry_rdp = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 53
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %nocb_entry_rdp) #24
  br i1 %call.i.i, label %if.end.i.i, label %list_del_rcu.exit

if.end.i.i:                                       ; preds = %do.end138
  %prev.i.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 53, i32 1
  %29 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %prev.i.i, align 4
  %31 = ptrtoint ptr %nocb_entry_rdp to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %nocb_entry_rdp, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %30, ptr %prev1.i.i.i, align 4
  %34 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile ptr %32, ptr %30, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i, %do.end138
  %prev.i275 = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 53, i32 1
  %35 = ptrtoint ptr %prev.i275 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i275, align 4
  %36 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i276 = and i32 %36, 128
  %tobool157.not = icmp eq i32 %and.i276, 0
  br i1 %tobool157.not, label %if.then158, label %do.end161

if.then158:                                       ; preds = %list_del_rcu.exit
  call void @trace_hardirqs_off() #24
  br label %do.end161

do.end161:                                        ; preds = %if.then158, %list_del_rcu.exit
  %37 = ptrtoint ptr %flags1.i.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load volatile i8, ptr %flags1.i.i, align 4
  %39 = and i8 %38, 4
  %tobool.i.i278.not = icmp eq i8 %39, 0
  br i1 %tobool.i.i278.not, label %do.end168, label %if.then164

if.then164:                                       ; preds = %do.end161
  %nocb_lock165 = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 31
  call void @_raw_spin_lock(ptr noundef %nocb_lock165) #24
  br label %do.end168

do.end168:                                        ; preds = %if.then164, %do.end161
  %40 = ptrtoint ptr %flags1.i.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %flags1.i.i, align 4
  %conv2.i280 = and i8 %41, -5
  store i8 %conv2.i280, ptr %flags1.i.i, align 4
  %nocb_lock175 = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 31
  call void @_raw_spin_unlock_irqrestore(ptr noundef %nocb_lock175, i32 noundef %36) #24
  %len.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 38, i32 2
  %42 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %len.i, align 4
  %tobool180.not = icmp eq i32 %43, 0
  br i1 %tobool180.not, label %if.end226, label %land.rhs188

land.rhs188:                                      ; preds = %do.end168
  %.b264265 = load i1, ptr @rcu_nocb_rdp_deoffload.__already_done.484, align 1
  br i1 %.b264265, label %if.end226, label %if.then199, !prof !1646

if.then199:                                       ; preds = %land.rhs188
  store i1 true, ptr @rcu_nocb_rdp_deoffload.__already_done.484, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 1046, i32 noundef 9, ptr noundef null) #24
  br label %if.end226

if.end226:                                        ; preds = %if.then199, %land.rhs188, %do.end168
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rcu_nocb_cpu_offload(i32 noundef %cpu) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr @rcu_data to i32)
  %2 = inttoptr i32 %add to ptr
  tail call void @mutex_lock_nested(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 14), i32 noundef 0) #24
  tail call void @cpus_read_lock() #24
  %call = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %2)
  br i1 %call, label %if.end12, label %if.then

if.then:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %3 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %3, %cpu
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %if.then
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %if.then
  %div3.i.i.i = lshr i32 %cpu, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %4 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i = and i32 %cpu, 31
  %6 = shl nuw i32 1, %and.i.i.i
  %7 = and i32 %5, %6
  %tobool.i.not = icmp eq i32 %7, 0
  br i1 %tobool.i.not, label %do.end8, label %if.then3

if.then3:                                         ; preds = %cpu_online.exit
  %call4 = tail call i32 @work_on_cpu(i32 noundef %cpu, ptr noundef nonnull @rcu_nocb_rdp_offload, ptr noundef %2) #24
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %if.then5, label %if.end12

if.then5:                                         ; preds = %if.then3
  %8 = load ptr, ptr @rcu_nocb_mask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %9 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i = icmp ugt i32 %9, %cpu
  br i1 %cmp.not.i.i.i, label %cpumask_set_cpu.exit, label %land.rhs.i.i.i

land.rhs.i.i.i:                                   ; preds = %if.then5
  %.b37.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i, label %cpumask_set_cpu.exit, label %if.then.i.i.i, !prof !1646

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpumask_set_cpu.exit

cpumask_set_cpu.exit:                             ; preds = %if.then.i.i.i, %land.rhs.i.i.i, %if.then5
  tail call void @_set_bit(i32 noundef %cpu, ptr noundef %8) #24
  br label %if.end12

do.end8:                                          ; preds = %cpu_online.exit
  %call10 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.98) #27
  br label %if.end12

if.end12:                                         ; preds = %do.end8, %cpumask_set_cpu.exit, %if.then3, %entry
  %ret.0 = phi i32 [ 0, %entry ], [ %call4, %if.then3 ], [ 0, %cpumask_set_cpu.exit ], [ -22, %do.end8 ]
  tail call void @cpus_read_unlock() #24
  tail call void @mutex_unlock(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 14)) #24
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rcu_nocb_rdp_offload(ptr noundef %arg) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %__wait = alloca %struct.swait_queue, align 4
  %cpu = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 68
  %0 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cpu, align 64
  %2 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i to ptr
  %cpu2 = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %cpu2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cpu2, align 4
  %cmp.not = icmp eq i32 %1, %5
  br i1 %cmp.not, label %if.end29, label %land.rhs

land.rhs:                                         ; preds = %entry
  %.b127 = load i1, ptr @rcu_nocb_rdp_offload.__already_done, align 1
  br i1 %.b127, label %if.end29, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @rcu_nocb_rdp_offload.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 1083, i32 noundef 9, ptr noundef null) #24
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs, %entry
  %nocb_gp_rdp = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 55
  %6 = ptrtoint ptr %nocb_gp_rdp to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %nocb_gp_rdp, align 128
  %tobool37.not = icmp eq ptr %7, null
  br i1 %tobool37.not, label %cleanup103, label %do.end42

do.end42:                                         ; preds = %if.end29
  %8 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cpu, align 64
  %call45 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.485, i32 noundef %9) #27
  %nocb_entry_rdp = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 53
  %10 = ptrtoint ptr %nocb_gp_rdp to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %nocb_gp_rdp, align 128
  %nocb_head_rdp = getelementptr inbounds %struct.rcu_data, ptr %11, i32 0, i32 52
  %prev.i = getelementptr inbounds %struct.rcu_data, ptr %11, i32 0, i32 52, i32 1
  %12 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %nocb_entry_rdp, ptr noundef %13, ptr noundef %nocb_head_rdp) #24
  br i1 %call.i.i, label %if.end.i.i, label %list_add_tail_rcu.exit

if.end.i.i:                                       ; preds = %do.end42
  %14 = ptrtoint ptr %nocb_entry_rdp to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %nocb_head_rdp, ptr %nocb_entry_rdp, align 4
  %prev2.i.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 53, i32 1
  %15 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %13, ptr %prev2.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1946
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %nocb_entry_rdp, ptr %13, align 4
  %17 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %nocb_entry_rdp, ptr %prev.i, align 4
  br label %list_add_tail_rcu.exit

list_add_tail_rcu.exit:                           ; preds = %if.end.i.i, %do.end42
  %nocb_lock = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 31
  %call50 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %nocb_lock) #24
  tail call fastcc void @rdp_offload_toggle(ptr noundef %arg, i1 noundef zeroext true, i32 noundef %call50)
  %flags1.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 13, i32 5
  %18 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load volatile i8, ptr %flags1.i, align 4
  %20 = and i8 %19, 8
  %tobool.i.not = icmp eq i8 %20, 0
  br i1 %tobool.i.not, label %if.end60, label %land.lhs.true

land.lhs.true:                                    ; preds = %list_add_tail_rcu.exit
  %21 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load volatile i8, ptr %flags1.i, align 4
  %23 = and i8 %22, 16
  %tobool.i132.not = icmp eq i8 %23, 0
  br i1 %tobool.i132.not, label %if.end60, label %do.body75

if.end60:                                         ; preds = %land.lhs.true, %list_add_tail_rcu.exit
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %__wait) #24
  %24 = ptrtoint ptr %__wait to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr inttoptr (i32 -1 to ptr), ptr %__wait, align 4, !annotation !1767
  %25 = getelementptr inbounds %struct.swait_queue, ptr %__wait, i32 0, i32 1
  %26 = getelementptr inbounds %struct.swait_queue, ptr %__wait, i32 0, i32 1, i32 1
  %27 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %25, ptr %25, align 4
  %28 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %25, ptr %26, align 4
  %nocb_state_wq = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 29
  br label %for.cond

for.cond:                                         ; preds = %cleanup, %if.end60
  %call61 = call i32 @prepare_to_swait_event(ptr noundef %nocb_state_wq, ptr noundef nonnull %__wait, i32 noundef 2) #24
  %29 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load volatile i8, ptr %flags1.i, align 4
  %31 = and i8 %30, 8
  %tobool.i137.not = icmp eq i8 %31, 0
  br i1 %tobool.i137.not, label %cleanup, label %land.lhs.true64

land.lhs.true64:                                  ; preds = %for.cond
  %32 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load volatile i8, ptr %flags1.i, align 4
  %34 = and i8 %33, 16
  %tobool.i141.not = icmp eq i8 %34, 0
  br i1 %tobool.i141.not, label %cleanup, label %for.end

cleanup:                                          ; preds = %land.lhs.true64, %for.cond
  call void @schedule() #24
  br label %for.cond

for.end:                                          ; preds = %land.lhs.true64
  call void @finish_swait(ptr noundef %nocb_state_wq, ptr noundef nonnull %__wait) #24
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %__wait) #24
  br label %do.body75

do.body75:                                        ; preds = %for.end, %land.lhs.true
  %35 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i142 = and i32 %35, 128
  %tobool91.not = icmp eq i32 %and.i142, 0
  br i1 %tobool91.not, label %if.then92, label %do.end95

if.then92:                                        ; preds = %do.body75
  call void @trace_hardirqs_off() #24
  br label %do.end95

do.end95:                                         ; preds = %if.then92, %do.body75
  %36 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load volatile i8, ptr %flags1.i, align 4
  %38 = and i8 %37, 4
  %tobool.i.i.not = icmp eq i8 %38, 0
  br i1 %tobool.i.i.not, label %do.end102, label %if.then98

if.then98:                                        ; preds = %do.end95
  call void @_raw_spin_lock(ptr noundef %nocb_lock) #24
  br label %do.end102

do.end102:                                        ; preds = %if.then98, %do.end95
  %39 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %flags1.i, align 4
  %conv2.i = and i8 %40, -3
  store i8 %conv2.i, ptr %flags1.i, align 4
  call fastcc void @rcu_nocb_unlock_irqrestore(ptr noundef %arg, i32 noundef %35)
  br label %cleanup103

cleanup103:                                       ; preds = %do.end102, %if.end29
  %retval.0 = phi i32 [ 0, %do.end102 ], [ -22, %if.end29 ]
  ret i32 %retval.0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_init_nohz() local_unnamed_addr #9 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %.b63 = load i1, ptr @rcu_nocb_is_setup, align 1
  br i1 %.b63, label %if.else.i.i, label %cleanup

if.else.i.i:                                      ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %1 = load ptr, ptr @rcu_nocb_mask, align 4
  %call.i.i = tail call i32 @__bitmap_subset(ptr noundef %1, ptr noundef nonnull @__cpu_possible_mask, i32 noundef %0) #24
  %tobool11.not = icmp eq i32 %call.i.i, 0
  br i1 %tobool11.not, label %do.end15, label %cpumask_empty.exit

do.end15:                                         ; preds = %if.else.i.i
  %call17 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.103) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  %3 = load ptr, ptr @rcu_nocb_mask, align 4
  %call.i.i71 = tail call i32 @__bitmap_and(ptr noundef %3, ptr noundef nonnull @__cpu_possible_mask, ptr noundef %3, i32 noundef %2) #24
  br label %cpumask_empty.exit

cpumask_empty.exit:                               ; preds = %do.end15, %if.else.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %5 = load ptr, ptr @rcu_nocb_mask, align 4
  %call.i.i78 = tail call i32 @_find_first_bit_be(ptr noundef %5, i32 noundef %4) #24
  %cmp4.i.i = icmp eq i32 %call.i.i78, %4
  br i1 %cmp4.i.i, label %do.end24, label %do.end29

do.end24:                                         ; preds = %cpumask_empty.exit
  %call26 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.106) #27
  br label %if.end32

do.end29:                                         ; preds = %cpumask_empty.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %6 = load i32, ptr @nr_cpu_ids, align 4
  %7 = load ptr, ptr @rcu_nocb_mask, align 4
  %call31 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.109, i32 noundef %6, ptr noundef %7) #27
  br label %if.end32

if.end32:                                         ; preds = %do.end29, %do.end24
  %.b6264 = load i1, ptr @rcu_nocb_poll, align 1
  br i1 %.b6264, label %do.end37, label %if.end40

do.end37:                                         ; preds = %if.end32
  %call39 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.112) #27
  br label %if.end40

if.end40:                                         ; preds = %do.end37, %if.end32
  %8 = load ptr, ptr @rcu_nocb_mask, align 4
  %call4183 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef %8) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %9 = load i32, ptr @nr_cpu_ids, align 4
  %cmp84 = icmp ult i32 %call4183, %9
  br i1 %cmp84, label %do.body42, label %for.end

do.body42:                                        ; preds = %if.end50, %if.end40
  %call4185 = phi i32 [ %call41, %if.end50 ], [ %call4183, %if.end40 ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call4185
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx, align 4
  %add = add i32 %11, ptrtoint (ptr @rcu_data to i32)
  %12 = inttoptr i32 %add to ptr
  %cblist = getelementptr inbounds %struct.rcu_data, ptr %12, i32 0, i32 13
  %13 = ptrtoint ptr %cblist to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile ptr, ptr %cblist, align 4
  %tobool.not.i = icmp eq ptr %14, null
  br i1 %tobool.not.i, label %if.then48, label %if.end50

if.then48:                                        ; preds = %do.body42
  tail call void @rcu_segcblist_init(ptr noundef %cblist) #24
  br label %if.end50

if.end50:                                         ; preds = %if.then48, %do.body42
  tail call void @rcu_segcblist_offload(ptr noundef %cblist, i1 noundef zeroext true) #24
  %flags1.i = getelementptr inbounds %struct.rcu_data, ptr %12, i32 0, i32 13, i32 5
  %15 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %flags1.i, align 4
  %conv2.i = and i8 %16, -27
  %conv2.i82 = or i8 %conv2.i, 24
  store i8 %conv2.i82, ptr %flags1.i, align 4
  %17 = load ptr, ptr @rcu_nocb_mask, align 4
  %call41 = tail call i32 @cpumask_next(i32 noundef %call4185, ptr noundef %17) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %18 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call41, %18
  br i1 %cmp, label %do.body42, label %for.end

for.end:                                          ; preds = %if.end50, %if.end40
  tail call fastcc void @rcu_organize_nocb_kthreads() #30
  br label %cleanup

cleanup:                                          ; preds = %for.end, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_segcblist_offload(ptr noundef, i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_organize_nocb_kthreads() unnamed_addr #9 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @rcu_nocb_mask, align 4
  %cmp.i.not = icmp eq ptr %0, null
  br i1 %cmp.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %1 = load i32, ptr @rcu_nocb_gp_stride, align 4
  %cmp = icmp eq i32 %1, -1
  br i1 %cmp, label %if.then1, label %if.end3

if.then1:                                         ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  %call2 = tail call i32 @int_sqrt(i32 noundef %2) #24
  %div = udiv i32 %2, %call2
  store i32 %div, ptr @rcu_nocb_gp_stride, align 4
  br label %if.end3

if.end3:                                          ; preds = %if.then1, %if.end
  %ls.0 = phi i32 [ %div, %if.then1 ], [ %1, %if.end ]
  %call486 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %3 = load i32, ptr @nr_cpu_ids, align 4
  %cmp587 = icmp ult i32 %call486, %3
  br i1 %cmp587, label %do.body, label %cleanup

do.body:                                          ; preds = %if.end43, %if.end3
  %call493 = phi i32 [ %call4, %if.end43 ], [ %call486, %if.end3 ]
  %firsttime.0.off092 = phi i1 [ %firsttime.1.off0, %if.end43 ], [ true, %if.end3 ]
  %gotnocbs.0.off091 = phi i1 [ %gotnocbs.1.off0, %if.end43 ], [ false, %if.end3 ]
  %gotnocbscbs.0.off090 = phi i1 [ %gotnocbscbs.1.off0, %if.end43 ], [ true, %if.end3 ]
  %nl.089 = phi i32 [ %nl.1, %if.end43 ], [ 0, %if.end3 ]
  %rdp_gp.088 = phi ptr [ %rdp_gp.1, %if.end43 ], [ null, %if.end3 ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call493
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr @rcu_data to i32)
  %6 = inttoptr i32 %add to ptr
  %cpu7 = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 68
  %7 = ptrtoint ptr %cpu7 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu7, align 64
  %cmp8.not = icmp slt i32 %8, %nl.089
  br i1 %cmp8.not, label %if.else, label %if.then9

if.then9:                                         ; preds = %do.body
  %sub = add i32 %8, %ls.0
  %9 = srem i32 %sub, %ls.0
  %mul = sub i32 %sub, %9
  %nocb_head_rdp = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 52
  %10 = ptrtoint ptr %nocb_head_rdp to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %nocb_head_rdp, ptr %nocb_head_rdp, align 4
  %prev.i = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 52, i32 1
  %11 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %nocb_head_rdp, ptr %prev.i, align 4
  %12 = load i8, ptr @dump_tree, align 1, !range !1644
  %tobool.not = icmp eq i8 %12, 0
  br i1 %tobool.not, label %if.end38, label %if.then14

if.then14:                                        ; preds = %if.then9
  br i1 %firsttime.0.off092, label %if.end23, label %do.end19

do.end19:                                         ; preds = %if.then14
  %cond = select i1 %gotnocbscbs.0.off090, ptr @.str.204, ptr @.str.518
  %call22 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.516, ptr noundef nonnull %cond) #27
  br label %if.end23

if.end23:                                         ; preds = %do.end19, %if.then14
  %call28 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.520, ptr noundef nonnull @.str.517, i32 noundef %call493) #27
  br label %if.end38

if.else:                                          ; preds = %do.body
  %13 = load i8, ptr @dump_tree, align 1, !range !1644
  %tobool30.not = icmp eq i8 %13, 0
  br i1 %tobool30.not, label %if.end38, label %do.end34

do.end34:                                         ; preds = %if.else
  %call36 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.523, i32 noundef %call493) #27
  br label %if.end38

if.end38:                                         ; preds = %do.end34, %if.else, %if.end23, %if.then9
  %rdp_gp.1 = phi ptr [ %6, %if.end23 ], [ %6, %if.then9 ], [ %rdp_gp.088, %do.end34 ], [ %rdp_gp.088, %if.else ]
  %nl.1 = phi i32 [ %mul, %if.end23 ], [ %mul, %if.then9 ], [ %nl.089, %do.end34 ], [ %nl.089, %if.else ]
  %gotnocbscbs.1.off0 = phi i1 [ false, %if.end23 ], [ %gotnocbscbs.0.off090, %if.then9 ], [ true, %do.end34 ], [ true, %if.else ]
  %gotnocbs.1.off0 = phi i1 [ true, %if.end23 ], [ true, %if.then9 ], [ %gotnocbs.0.off091, %do.end34 ], [ %gotnocbs.0.off091, %if.else ]
  %firsttime.1.off0 = phi i1 [ false, %if.end23 ], [ %firsttime.0.off092, %if.then9 ], [ %firsttime.0.off092, %do.end34 ], [ %firsttime.0.off092, %if.else ]
  %nocb_gp_rdp = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 55
  %14 = ptrtoint ptr %nocb_gp_rdp to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %rdp_gp.1, ptr %nocb_gp_rdp, align 128
  %15 = load ptr, ptr @rcu_nocb_mask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %16 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i = icmp ugt i32 %16, %call493
  br i1 %cmp.not.i.i.i, label %cpumask_test_cpu.exit, label %land.rhs.i.i.i

land.rhs.i.i.i:                                   ; preds = %if.end38
  %.b37.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i, label %cpumask_test_cpu.exit, label %if.then.i.i.i, !prof !1646

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpumask_test_cpu.exit

cpumask_test_cpu.exit:                            ; preds = %if.then.i.i.i, %land.rhs.i.i.i, %if.end38
  %div3.i.i = lshr i32 %call493, 5
  %arrayidx.i.i = getelementptr i32, ptr %15, i32 %div3.i.i
  %17 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %call493, 31
  %19 = shl nuw i32 1, %and.i.i
  %20 = and i32 %18, %19
  %tobool40.not = icmp eq i32 %20, 0
  br i1 %tobool40.not, label %if.end43, label %if.then41

if.then41:                                        ; preds = %cpumask_test_cpu.exit
  %nocb_entry_rdp = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 53
  %nocb_head_rdp42 = getelementptr inbounds %struct.rcu_data, ptr %rdp_gp.1, i32 0, i32 52
  %prev.i85 = getelementptr inbounds %struct.rcu_data, ptr %rdp_gp.1, i32 0, i32 52, i32 1
  %21 = ptrtoint ptr %prev.i85 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %prev.i85, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %nocb_entry_rdp, ptr noundef %22, ptr noundef %nocb_head_rdp42) #24
  br i1 %call.i.i, label %if.end.i.i, label %if.end43

if.end.i.i:                                       ; preds = %if.then41
  %23 = ptrtoint ptr %prev.i85 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %nocb_entry_rdp, ptr %prev.i85, align 4
  %24 = ptrtoint ptr %nocb_entry_rdp to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %nocb_head_rdp42, ptr %nocb_entry_rdp, align 4
  %prev3.i.i = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 53, i32 1
  %25 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %22, ptr %prev3.i.i, align 4
  %26 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %nocb_entry_rdp, ptr %22, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.end.i.i, %if.then41, %cpumask_test_cpu.exit
  %call4 = tail call i32 @cpumask_next(i32 noundef %call493, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %27 = load i32, ptr @nr_cpu_ids, align 4
  %cmp5 = icmp ult i32 %call4, %27
  br i1 %cmp5, label %do.body, label %for.end

for.end:                                          ; preds = %if.end43
  br i1 %gotnocbs.1.off0, label %land.lhs.true, label %cleanup

land.lhs.true:                                    ; preds = %for.end
  %28 = load i8, ptr @dump_tree, align 1, !range !1644
  %tobool45.not = icmp eq i8 %28, 0
  br i1 %tobool45.not, label %cleanup, label %do.end49

do.end49:                                         ; preds = %land.lhs.true
  %cond52 = select i1 %gotnocbscbs.1.off0, ptr @.str.204, ptr @.str.518
  %call53 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.516, ptr noundef nonnull %cond52) #27
  br label %cleanup

cleanup:                                          ; preds = %do.end49, %land.lhs.true, %for.end, %if.end3, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_bind_current_to_nocb() #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @rcu_nocb_mask, align 4
  %cmp.i.not = icmp eq ptr %0, null
  br i1 %cmp.i.not, label %if.end25, label %if.end.i.i

if.end.i.i:                                       ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %1 = load i32, ptr @nr_cpu_ids, align 4
  %call4.i.i = tail call i32 @__bitmap_weight(ptr noundef nonnull %0, i32 noundef %1) #24
  %tobool.not = icmp eq i32 %call4.i.i, 0
  br i1 %tobool.not, label %if.end25, label %if.then

if.then:                                          ; preds = %if.end.i.i
  %2 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task, align 8
  %pid = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 68
  %6 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pid, align 8
  %8 = load ptr, ptr @rcu_nocb_mask, align 4
  %call3 = tail call i32 @sched_setaffinity(i32 noundef %7, ptr noundef %8) #24
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.end25, label %do.end, !prof !1646

do.end:                                           ; preds = %if.then
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 1352, i32 noundef 9, ptr noundef null) #24
  br label %if.end25

if.end25:                                         ; preds = %do.end, %if.then, %if.end.i.i, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sched_setaffinity(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_read_unlock_strict() #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #24, !srcloc !1649
  %and.i = and i32 %0, 128
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %lor.lhs.false, label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i, align 4
  %tobool11.not = icmp eq i32 %4, 0
  br i1 %tobool11.not, label %lor.lhs.false12, label %cleanup

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %5 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 8), align 4
  %tobool13.not = icmp eq ptr %5, null
  br i1 %tobool13.not, label %cleanup, label %do.body14

do.body14:                                        ; preds = %lor.lhs.false12
  %6 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i25 = and i32 %6, -16384
  %7 = inttoptr i32 %and.i25 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %9
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx, align 4
  %add = add i32 %11, ptrtoint (ptr @rcu_data to i32)
  %12 = inttoptr i32 %add to ptr
  tail call fastcc void @rcu_report_qs_rdp(ptr noundef %12)
  %13 = load i32, ptr @rcu_unlock_delay, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %14 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  tail call void %14(i32 noundef %13) #24
  br label %cleanup

cleanup:                                          ; preds = %do.body14, %lor.lhs.false12, %lor.lhs.false, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_report_qs_rdp(ptr noundef %rdp) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %cpu = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 68
  %0 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cpu, align 64
  %2 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i to ptr
  %cpu1 = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %cpu1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cpu1, align 4
  %cmp.not = icmp eq i32 %1, %5
  br i1 %cmp.not, label %if.end28, label %land.rhs

land.rhs:                                         ; preds = %entry
  %.b417 = load i1, ptr @rcu_report_qs_rdp.__already_done, align 1
  br i1 %.b417, label %if.end28, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @rcu_report_qs_rdp.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2291, i32 noundef 9, ptr noundef null) #24
  br label %if.end28

if.end28:                                         ; preds = %if.then, %land.rhs, %entry
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 7
  %6 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mynode, align 16
  %call40 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %7) #24
  %cpu_no_qs = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 2
  %8 = ptrtoint ptr %cpu_no_qs to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %cpu_no_qs, align 8
  %tobool49.not = icmp eq i8 %9, 0
  br i1 %tobool49.not, label %lor.lhs.false, label %if.then56

lor.lhs.false:                                    ; preds = %if.end28
  %10 = ptrtoint ptr %rdp to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %rdp, align 128
  %gp_seq50 = getelementptr inbounds %struct.rcu_node, ptr %7, i32 0, i32 1
  %12 = ptrtoint ptr %gp_seq50 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %gp_seq50, align 4
  %cmp51.not = icmp eq i32 %11, %13
  br i1 %cmp51.not, label %lor.lhs.false53, label %if.then56

lor.lhs.false53:                                  ; preds = %lor.lhs.false
  %gpwrap = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 5
  %14 = ptrtoint ptr %gpwrap to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %gpwrap, align 4, !range !1644
  %tobool54.not = icmp eq i8 %15, 0
  br i1 %tobool54.not, label %if.end188, label %if.then56

if.then56:                                        ; preds = %lor.lhs.false53, %lor.lhs.false, %if.end28
  %16 = ptrtoint ptr %cpu_no_qs to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 1, ptr %cpu_no_qs, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %17 = load i32, ptr @debug_locks, align 4
  %tobool62.not = icmp eq i32 %17, 0
  br i1 %tobool62.not, label %if.end167, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then56
  %18 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %21, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1947
  %22 = ptrtoint ptr %cpu1 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cpu1, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %23
  %24 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx, align 4
  %add = add i32 %25, ptrtoint (ptr @lockdep_recursion to i32)
  %26 = inttoptr i32 %add to ptr
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %26, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1948
  %29 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i424 = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i424 to ptr
  %preempt_count.i.i425 = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i425 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i425, align 4
  %sub.i = add i32 %32, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i425, align 4
  %tobool87.not = icmp eq i32 %28, 0
  br i1 %tobool87.not, label %land.rhs88, label %if.end167

land.rhs88:                                       ; preds = %land.lhs.true
  %33 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i426 = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i426 to ptr
  %preempt_count.i.i427 = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i427 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i427, align 4
  %add.i428 = add i32 %36, 1
  store volatile i32 %add.i428, ptr %preempt_count.i.i427, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1949
  %37 = ptrtoint ptr %cpu1 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %cpu1, align 4
  %arrayidx112 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %38
  %39 = ptrtoint ptr %arrayidx112 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx112, align 4
  %add113 = add i32 %40, ptrtoint (ptr @hardirqs_enabled to i32)
  %41 = inttoptr i32 %add113 to ptr
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %41, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1950
  %44 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i429 = and i32 %44, -16384
  %45 = inttoptr i32 %and.i.i.i429 to ptr
  %preempt_count.i.i430 = getelementptr inbounds %struct.thread_info, ptr %45, i32 0, i32 1
  %46 = ptrtoint ptr %preempt_count.i.i430 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %preempt_count.i.i430, align 4
  %sub.i431 = add i32 %47, -1
  store volatile i32 %sub.i431, ptr %preempt_count.i.i430, align 4
  %tobool120.not = icmp eq i32 %43, 0
  br i1 %tobool120.not, label %if.end167, label %land.rhs129

land.rhs129:                                      ; preds = %land.rhs88
  %.b413416 = load i1, ptr @rcu_report_qs_rdp.__already_done.548, align 1
  br i1 %.b413416, label %if.end167, label %if.then140, !prof !1646

if.then140:                                       ; preds = %land.rhs129
  store i1 true, ptr @rcu_report_qs_rdp.__already_done.548, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2304, i32 noundef 9, ptr noundef null) #24
  br label %if.end167

if.end167:                                        ; preds = %if.then140, %land.rhs129, %land.rhs88, %land.lhs.true, %if.then56
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %7, i32 noundef %call40) #24
  br label %cleanup

if.end188:                                        ; preds = %lor.lhs.false53
  %grpmask = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 8
  %48 = ptrtoint ptr %grpmask to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %grpmask, align 4
  %core_needs_qs = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 3
  %50 = ptrtoint ptr %core_needs_qs to i32
  call void @__asan_store1_noabort(i32 %50)
  store i8 0, ptr %core_needs_qs, align 2
  %qsmask = getelementptr inbounds %struct.rcu_node, ptr %7, i32 0, i32 4
  %51 = ptrtoint ptr %qsmask to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %qsmask, align 8
  %and = and i32 %52, %49
  %cmp189 = icmp eq i32 %and, 0
  br i1 %cmp189, label %do.body193, label %if.else

do.body193:                                       ; preds = %if.end188
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %53 = load i32, ptr @debug_locks, align 4
  %tobool195.not = icmp eq i32 %53, 0
  br i1 %tobool195.not, label %if.end308, label %land.lhs.true196

land.lhs.true196:                                 ; preds = %do.body193
  %54 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i432 = and i32 %54, -16384
  %55 = inttoptr i32 %and.i.i.i432 to ptr
  %preempt_count.i.i433 = getelementptr inbounds %struct.thread_info, ptr %55, i32 0, i32 1
  %56 = ptrtoint ptr %preempt_count.i.i433 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %preempt_count.i.i433, align 4
  %add.i434 = add i32 %57, 1
  store volatile i32 %add.i434, ptr %preempt_count.i.i433, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1951
  %58 = ptrtoint ptr %cpu1 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %cpu1, align 4
  %arrayidx220 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %59
  %60 = ptrtoint ptr %arrayidx220 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %arrayidx220, align 4
  %add221 = add i32 %61, ptrtoint (ptr @lockdep_recursion to i32)
  %62 = inttoptr i32 %add221 to ptr
  %63 = ptrtoint ptr %62 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %62, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1952
  %65 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i435 = and i32 %65, -16384
  %66 = inttoptr i32 %and.i.i.i435 to ptr
  %preempt_count.i.i436 = getelementptr inbounds %struct.thread_info, ptr %66, i32 0, i32 1
  %67 = ptrtoint ptr %preempt_count.i.i436 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %preempt_count.i.i436, align 4
  %sub.i437 = add i32 %68, -1
  store volatile i32 %sub.i437, ptr %preempt_count.i.i436, align 4
  %tobool228.not = icmp eq i32 %64, 0
  br i1 %tobool228.not, label %land.rhs229, label %if.end308

land.rhs229:                                      ; preds = %land.lhs.true196
  %69 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i438 = and i32 %69, -16384
  %70 = inttoptr i32 %and.i.i.i438 to ptr
  %preempt_count.i.i439 = getelementptr inbounds %struct.thread_info, ptr %70, i32 0, i32 1
  %71 = ptrtoint ptr %preempt_count.i.i439 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load volatile i32, ptr %preempt_count.i.i439, align 4
  %add.i440 = add i32 %72, 1
  store volatile i32 %add.i440, ptr %preempt_count.i.i439, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1953
  %73 = ptrtoint ptr %cpu1 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %cpu1, align 4
  %arrayidx253 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %74
  %75 = ptrtoint ptr %arrayidx253 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %arrayidx253, align 4
  %add254 = add i32 %76, ptrtoint (ptr @hardirqs_enabled to i32)
  %77 = inttoptr i32 %add254 to ptr
  %78 = ptrtoint ptr %77 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load volatile i32, ptr %77, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1954
  %80 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i441 = and i32 %80, -16384
  %81 = inttoptr i32 %and.i.i.i441 to ptr
  %preempt_count.i.i442 = getelementptr inbounds %struct.thread_info, ptr %81, i32 0, i32 1
  %82 = ptrtoint ptr %preempt_count.i.i442 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile i32, ptr %preempt_count.i.i442, align 4
  %sub.i443 = add i32 %83, -1
  store volatile i32 %sub.i443, ptr %preempt_count.i.i442, align 4
  %tobool261.not = icmp eq i32 %79, 0
  br i1 %tobool261.not, label %if.end308, label %land.rhs270

land.rhs270:                                      ; preds = %land.rhs229
  %.b414415 = load i1, ptr @rcu_report_qs_rdp.__already_done.549, align 1
  br i1 %.b414415, label %if.end308, label %if.then281, !prof !1646

if.then281:                                       ; preds = %land.rhs270
  store i1 true, ptr @rcu_report_qs_rdp.__already_done.549, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2310, i32 noundef 9, ptr noundef null) #24
  br label %if.end308

if.end308:                                        ; preds = %if.then281, %land.rhs270, %land.rhs229, %land.lhs.true196, %do.body193
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %7, i32 noundef %call40) #24
  br label %cleanup

if.else:                                          ; preds = %if.end188
  %call329 = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %rdp)
  br i1 %call329, label %if.else333, label %if.then330

if.then330:                                       ; preds = %if.else
  %call331 = tail call fastcc zeroext i1 @rcu_accelerate_cbs(ptr noundef %7, ptr noundef %rdp)
  br label %if.end337

if.else333:                                       ; preds = %if.else
  %flags1.i.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 13, i32 5
  %84 = ptrtoint ptr %flags1.i.i to i32
  call void @__asan_load1_noabort(i32 %84)
  %85 = load volatile i8, ptr %flags1.i.i, align 4
  %86 = and i8 %85, 2
  %tobool.i.not.i = icmp ne i8 %86, 0
  br label %if.end337

if.end337:                                        ; preds = %if.else333, %if.then330
  %needacc.0.off0 = phi i1 [ false, %if.then330 ], [ %tobool.i.not.i, %if.else333 ]
  %needwake.0.off0 = phi i1 [ %call331, %if.then330 ], [ false, %if.else333 ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %87 = load i32, ptr @debug_locks, align 4
  %tobool.not.i = icmp eq i32 %87, 0
  br i1 %tobool.not.i, label %rcu_disable_urgency_upon_qs.exit, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.end337
  %88 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %mynode, align 16
  %dep_map.i = getelementptr inbounds %struct.raw_spinlock, ptr %89, i32 0, i32 4
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #24
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %rcu_disable_urgency_upon_qs.exit, !prof !1645

do.end.i:                                         ; preds = %land.rhs.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1103, i32 noundef 9, ptr noundef null) #24
  br label %rcu_disable_urgency_upon_qs.exit

rcu_disable_urgency_upon_qs.exit:                 ; preds = %do.end.i, %land.rhs.i, %if.end337
  %rcu_urgent_qs.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 23
  %90 = ptrtoint ptr %rcu_urgent_qs.i to i32
  call void @__asan_store1_noabort(i32 %90)
  store volatile i8 0, ptr %rcu_urgent_qs.i, align 1
  %rcu_need_heavy_qs.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 22
  %91 = ptrtoint ptr %rcu_need_heavy_qs.i to i32
  call void @__asan_store1_noabort(i32 %91)
  store volatile i8 0, ptr %rcu_need_heavy_qs.i, align 8
  %92 = ptrtoint ptr %gp_seq50 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %gp_seq50, align 4
  tail call fastcc void @rcu_report_qs_rnp(i32 noundef %49, ptr noundef %7, i32 noundef %93, i32 noundef %call40)
  br i1 %needwake.0.off0, label %if.then340, label %if.end341

if.then340:                                       ; preds = %rcu_disable_urgency_upon_qs.exit
  %94 = load volatile ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 8), align 4
  %95 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %95, -16384
  %96 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %96, i32 0, i32 2
  %97 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %task.i, align 8
  %cmp.i = icmp eq ptr %98, %94
  br i1 %cmp.i, label %land.lhs.true.i, label %do.end9.i

land.lhs.true.i:                                  ; preds = %if.then340
  %preempt_count.i.i444 = getelementptr inbounds %struct.thread_info, ptr %96, i32 0, i32 1
  %99 = ptrtoint ptr %preempt_count.i.i444 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load volatile i32, ptr %preempt_count.i.i444, align 4
  %and.i445 = and i32 %100, 983040
  %tobool.not.i446 = icmp eq i32 %and.i445, 0
  br i1 %tobool.not.i446, label %land.lhs.true2.i, label %do.end9.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %101 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i37.i = and i32 %101, -16384
  %102 = inttoptr i32 %and.i.i37.i to ptr
  %preempt_count.i38.i = getelementptr inbounds %struct.thread_info, ptr %102, i32 0, i32 1
  %103 = ptrtoint ptr %preempt_count.i38.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load volatile i32, ptr %preempt_count.i38.i, align 4
  %and5.i = and i32 %104, 256
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  br i1 %tobool6.not.i, label %if.end341, label %do.end9.i

do.end9.i:                                        ; preds = %land.lhs.true2.i, %land.lhs.true.i, %if.then340
  %105 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %tobool11.not.i = icmp eq i16 %105, 0
  %tobool13.not.i = icmp eq ptr %94, null
  %or.cond.i = select i1 %tobool11.not.i, i1 true, i1 %tobool13.not.i
  br i1 %or.cond.i, label %if.end341, label %do.body18.i

do.body18.i:                                      ; preds = %do.end9.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %106 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %106, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 12), align 8
  %107 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  store volatile i32 %107, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 13), align 4
  tail call void @swake_up_one(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 9)) #24
  br label %if.end341

if.end341:                                        ; preds = %do.body18.i, %do.end9.i, %land.lhs.true2.i, %rcu_disable_urgency_upon_qs.exit
  br i1 %needacc.0.off0, label %do.body346, label %cleanup

do.body346:                                       ; preds = %if.end341
  %108 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i447 = and i32 %108, 128
  %tobool362.not = icmp eq i32 %and.i447, 0
  br i1 %tobool362.not, label %if.then363, label %do.end366

if.then363:                                       ; preds = %do.body346
  tail call void @trace_hardirqs_off() #24
  br label %do.end366

do.end366:                                        ; preds = %if.then363, %do.body346
  %flags1.i.i448 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 13, i32 5
  %109 = ptrtoint ptr %flags1.i.i448 to i32
  call void @__asan_load1_noabort(i32 %109)
  %110 = load volatile i8, ptr %flags1.i.i448, align 4
  %111 = and i8 %110, 4
  %tobool.i.i.not = icmp eq i8 %111, 0
  br i1 %tobool.i.i.not, label %do.end372, label %if.then369

if.then369:                                       ; preds = %do.end366
  %nocb_lock = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 31
  tail call void @_raw_spin_lock(ptr noundef %nocb_lock) #24
  br label %do.end372

do.end372:                                        ; preds = %if.then369, %do.end366
  tail call fastcc void @rcu_accelerate_cbs_unlocked(ptr noundef %7, ptr noundef %rdp)
  tail call fastcc void @rcu_nocb_unlock_irqrestore(ptr noundef %rdp, i32 noundef %108)
  br label %cleanup

cleanup:                                          ; preds = %do.end372, %if.end341, %if.end308, %if.end167
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_all_qs() #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 23) to i32)
  %6 = inttoptr i32 %add to ptr
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %6, align 1, !range !1644
  %tobool.not = icmp eq i8 %8, 0
  br i1 %tobool.not, label %cleanup, label %do.body13

do.body13:                                        ; preds = %entry
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %10, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1955
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx29 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx29, align 4
  %add30 = add i32 %14, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 23) to i32)
  %15 = inttoptr i32 %add30 to ptr
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load volatile i8, ptr %15, align 1, !range !1644
  %tobool31.not = icmp eq i8 %17, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1956
  br i1 %tobool31.not, label %do.body43, label %do.body48

do.body43:                                        ; preds = %do.body13
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1957
  br label %cleanup.sink.split

do.body48:                                        ; preds = %do.body13
  %18 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %19 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu, align 4
  %arrayidx68 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %20
  %21 = ptrtoint ptr %arrayidx68 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx68, align 4
  %add69 = add i32 %22, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 23) to i32)
  %23 = inttoptr i32 %add69 to ptr
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 0, ptr %23, align 1
  %25 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #24, !srcloc !1649
  %and.i.i = and i32 %25, 128
  %tobool80.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool80.not, label %if.then84, label %do.end87, !prof !1645

if.then84:                                        ; preds = %do.body48
  tail call void @warn_bogus_irq_restore() #24
  br label %do.end87

do.end87:                                         ; preds = %if.then84, %do.body48
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %18) #24, !srcloc !1679
  %26 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu, align 4
  %arrayidx109 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %27
  %28 = ptrtoint ptr %arrayidx109 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx109, align 4
  %add110 = add i32 %29, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 22) to i32)
  %30 = inttoptr i32 %add110 to ptr
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %30, align 1, !range !1644
  %tobool111.not = icmp eq i8 %32, 0
  br i1 %tobool111.not, label %if.end184, label %do.body127, !prof !1646

do.body127:                                       ; preds = %do.end87
  %33 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i195 = and i32 %33, 128
  %tobool143.not = icmp eq i32 %and.i195, 0
  br i1 %tobool143.not, label %if.then157, label %do.end147

do.end147:                                        ; preds = %do.body127
  tail call void @rcu_momentary_dyntick_idle()
  br label %do.body159

if.then157:                                       ; preds = %do.body127
  tail call void @trace_hardirqs_off() #24
  tail call void @rcu_momentary_dyntick_idle()
  tail call void @trace_hardirqs_on() #24
  br label %do.body159

do.body159:                                       ; preds = %if.then157, %do.end147
  %34 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #24, !srcloc !1649
  %and.i.i197 = and i32 %34, 128
  %tobool167.not = icmp eq i32 %and.i.i197, 0
  br i1 %tobool167.not, label %if.then176, label %do.end179, !prof !1645

if.then176:                                       ; preds = %do.body159
  tail call void @warn_bogus_irq_restore() #24
  br label %do.end179

do.end179:                                        ; preds = %if.then176, %do.body159
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %33) #24, !srcloc !1679
  br label %if.end184

if.end184:                                        ; preds = %do.end179, %do.end87
  tail call fastcc void @rcu_qs()
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1958
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end184, %do.body43
  %35 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i190 = and i32 %35, -16384
  %36 = inttoptr i32 %and.i.i.i190 to ptr
  %preempt_count.i.i191 = getelementptr inbounds %struct.thread_info, ptr %36, i32 0, i32 1
  %37 = ptrtoint ptr %preempt_count.i.i191 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %preempt_count.i.i191, align 4
  %sub.i194 = add i32 %38, -1
  store volatile i32 %sub.i194, ptr %preempt_count.i.i191, align 4
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_note_context_switch(i1 noundef zeroext %preempt) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @rcu_note_context_switch.___tp_str, align 4
  tail call fastcc void @trace_rcu_utilization(ptr noundef %0)
  tail call fastcc void @rcu_qs()
  %1 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %4
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx, align 4
  %add = add i32 %6, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 23) to i32)
  %7 = inttoptr i32 %add to ptr
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load volatile i8, ptr %7, align 1, !range !1644
  %tobool.not = icmp eq i8 %9, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1959
  br i1 %tobool.not, label %out, label %do.body18

do.body18:                                        ; preds = %entry
  %10 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx38 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx38 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx38, align 4
  %add39 = add i32 %14, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 23) to i32)
  %15 = inttoptr i32 %add39 to ptr
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 0, ptr %15, align 1
  %17 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #24, !srcloc !1649
  %and.i.i = and i32 %17, 128
  %tobool50.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool50.not, label %if.then54, label %do.end57, !prof !1645

if.then54:                                        ; preds = %do.body18
  tail call void @warn_bogus_irq_restore() #24
  br label %do.end57

do.end57:                                         ; preds = %if.then54, %do.body18
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %10) #24, !srcloc !1679
  %18 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %cpu, align 4
  %arrayidx78 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %19
  %20 = ptrtoint ptr %arrayidx78 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %arrayidx78, align 4
  %add79 = add i32 %21, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 22) to i32)
  %22 = inttoptr i32 %add79 to ptr
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %22, align 1, !range !1644
  %tobool80.not = icmp eq i8 %24, 0
  br i1 %tobool80.not, label %do.body97, label %if.then94, !prof !1646

if.then94:                                        ; preds = %do.end57
  tail call void @rcu_momentary_dyntick_idle()
  br label %do.body97

do.body97:                                        ; preds = %if.then94, %do.end57
  br i1 %preempt, label %do.end125, label %do.end101

do.end101:                                        ; preds = %do.body97
  %task = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %25 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %task, align 8
  %rcu_tasks_holdout = getelementptr inbounds %struct.task_struct, ptr %26, i32 0, i32 40
  %27 = ptrtoint ptr %rcu_tasks_holdout to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load volatile i8, ptr %rcu_tasks_holdout, align 4
  %tobool105.not = icmp eq i8 %28, 0
  br i1 %tobool105.not, label %do.end125, label %do.body111

do.body111:                                       ; preds = %do.end101
  %29 = ptrtoint ptr %rcu_tasks_holdout to i32
  call void @__asan_store1_noabort(i32 %29)
  store volatile i8 0, ptr %rcu_tasks_holdout, align 4
  br label %do.end125

do.end125:                                        ; preds = %do.body111, %do.end101, %do.body97
  %task128 = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %30 = ptrtoint ptr %task128 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %task128, align 8
  %trc_reader_checked = getelementptr inbounds %struct.task_struct, ptr %31, i32 0, i32 47
  %32 = ptrtoint ptr %trc_reader_checked to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load volatile i8, ptr %trc_reader_checked, align 64, !range !1644
  %tobool129.not = icmp eq i8 %33, 0
  br i1 %tobool129.not, label %do.end141, label %out, !prof !1645

do.end141:                                        ; preds = %do.end125
  %trc_reader_nesting = getelementptr inbounds %struct.task_struct, ptr %31, i32 0, i32 44
  %34 = ptrtoint ptr %trc_reader_nesting to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %trc_reader_nesting, align 4
  %tobool145.not = icmp eq i32 %35, 0
  br i1 %tobool145.not, label %do.end160, label %out, !prof !1646

do.end160:                                        ; preds = %do.end141
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1960
  %36 = ptrtoint ptr %task128 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %task128, align 8
  %trc_reader_checked168 = getelementptr inbounds %struct.task_struct, ptr %37, i32 0, i32 47
  %38 = ptrtoint ptr %trc_reader_checked168 to i32
  call void @__asan_store1_noabort(i32 %38)
  store volatile i8 1, ptr %trc_reader_checked168, align 64
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1961
  br label %out

out:                                              ; preds = %do.end160, %do.end141, %do.end125, %entry
  %39 = load ptr, ptr @rcu_note_context_switch.___tp_str.115, align 4
  tail call fastcc void @trace_rcu_utilization(ptr noundef %39)
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @exit_rcu() local_unnamed_addr #14 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #15

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #16

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @param_set_first_fqs_jiffies(ptr noundef %val, ptr nocapture noundef readonly %kp) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %j = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %j) #24
  %0 = ptrtoint ptr %j to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %j, align 4, !annotation !1767
  %call.i = call i32 @_kstrtoul(ptr noundef %val, i32 noundef 0, ptr noundef nonnull %j) #24
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %do.body2, label %if.end

do.body2:                                         ; preds = %entry
  %1 = ptrtoint ptr %j to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %j, align 4
  %3 = call i32 @llvm.umin.i32(i32 %2, i32 100)
  %4 = getelementptr inbounds %struct.kernel_param, ptr %kp, i32 0, i32 6
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 4
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile i32 %3, ptr %6, align 4
  %8 = load i32, ptr @jiffies_till_sched_qs, align 4
  %cmp.not.i = icmp eq i32 %8, -1
  br i1 %cmp.not.i, label %do.end9.i, label %adjust_jiffies_till_sched_qs.exit

do.end9.i:                                        ; preds = %do.body2
  %9 = load volatile i32, ptr @jiffies_till_first_fqs, align 4
  %10 = load volatile i32, ptr @jiffies_till_next_fqs, align 4
  %mul.i = shl i32 %10, 1
  %add.i = add i32 %mul.i, %9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %11 = load i32, ptr @nr_cpu_ids, align 4
  %div35.i = lshr i32 %11, 8
  %add14.i = add nuw nsw i32 %div35.i, 10
  %12 = call i32 @llvm.umax.i32(i32 %add.i, i32 %add14.i) #24
  %call.i8 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.330, i32 noundef %12) #27
  br label %adjust_jiffies_till_sched_qs.exit

adjust_jiffies_till_sched_qs.exit:                ; preds = %do.end9.i, %do.body2
  %.sink.i = phi i32 [ %12, %do.end9.i ], [ %8, %do.body2 ]
  store volatile i32 %.sink.i, ptr @jiffies_to_sched_qs, align 4
  br label %if.end

if.end:                                           ; preds = %adjust_jiffies_till_sched_qs.exit, %entry
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %j) #24
  ret i32 %call.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @param_get_ulong(ptr noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_kstrtoul(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @param_set_next_fqs_jiffies(ptr noundef %val, ptr nocapture noundef readonly %kp) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %j = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %j) #24
  %0 = ptrtoint ptr %j to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %j, align 4, !annotation !1767
  %call.i = call i32 @_kstrtoul(ptr noundef %val, i32 noundef 0, ptr noundef nonnull %j) #24
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %do.body2, label %if.end

do.body2:                                         ; preds = %entry
  %1 = ptrtoint ptr %j to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %j, align 4
  %cmp = icmp ugt i32 %2, 100
  %tobool3.not = icmp eq i32 %2, 0
  %. = select i1 %tobool3.not, i32 1, i32 %2
  %cond7 = select i1 %cmp, i32 100, i32 %.
  %3 = getelementptr inbounds %struct.kernel_param, ptr %kp, i32 0, i32 6
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile i32 %cond7, ptr %5, align 4
  %7 = load i32, ptr @jiffies_till_sched_qs, align 4
  %cmp.not.i = icmp eq i32 %7, -1
  br i1 %cmp.not.i, label %do.end9.i, label %adjust_jiffies_till_sched_qs.exit

do.end9.i:                                        ; preds = %do.body2
  %8 = load volatile i32, ptr @jiffies_till_first_fqs, align 4
  %9 = load volatile i32, ptr @jiffies_till_next_fqs, align 4
  %mul.i = shl i32 %9, 1
  %add.i = add i32 %mul.i, %8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %10 = load i32, ptr @nr_cpu_ids, align 4
  %div35.i = lshr i32 %10, 8
  %add14.i = add nuw nsw i32 %div35.i, 10
  %11 = call i32 @llvm.umax.i32(i32 %add.i, i32 %add14.i) #24
  %call.i13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.330, i32 noundef %11) #27
  br label %adjust_jiffies_till_sched_qs.exit

adjust_jiffies_till_sched_qs.exit:                ; preds = %do.end9.i, %do.body2
  %.sink.i = phi i32 [ %11, %do.end9.i ], [ %7, %do.body2 ]
  store volatile i32 %.sink.i, ptr @jiffies_to_sched_qs, align 4
  br label %if.end

if.end:                                           ; preds = %adjust_jiffies_till_sched_qs.exit, %entry
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %j) #24
  ret i32 %call.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rcu_dyntick(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rcu_grace_period(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rcu_utilization(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @swake_up_one(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @raise_softirq(i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wake_up_process(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @mem_dump_obj(ptr noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal void @rcu_leak_callback(ptr nocapture noundef %rhp) #14 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_segcblist_enqueue(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rcu_kvfree_callback(ptr noundef %rcuname, ptr noundef %rhp, i32 noundef %offset, i32 noundef %qlen) unnamed_addr #7 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_kvfree_callback, i32 0, i32 1), ptr blockaddress(@trace_rcu_kvfree_callback, %do.body)) #24
          to label %if.end48 [label %do.body], !srcloc !1665

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1962
  %call42 = tail call i32 @__traceiter_rcu_kvfree_callback(ptr noundef null, ptr noundef %rcuname, ptr noundef %rhp, i32 noundef %offset, i32 noundef %qlen) #24
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1963
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !1646

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1668
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_kvfree_callback, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_kvfree_callback, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #24
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rcu_kvfree_callback.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_rcu_kvfree_callback.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.128, i32 noundef 595, ptr noundef nonnull @.str.129) #24
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1669
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rcu_callback(ptr noundef %rcuname, ptr noundef %rhp, i32 noundef %qlen) unnamed_addr #7 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_callback, i32 0, i32 1), ptr blockaddress(@trace_rcu_callback, %do.body)) #24
          to label %if.end48 [label %do.body], !srcloc !1665

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1964
  %call42 = tail call i32 @__traceiter_rcu_callback(ptr noundef null, ptr noundef %rcuname, ptr noundef %rhp, i32 noundef %qlen) #24
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1965
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !1646

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1668
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_callback, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_callback, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #24
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rcu_callback.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_rcu_callback.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.128, i32 noundef 535, ptr noundef nonnull @.str.129) #24
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1669
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rcu_segcb_stats(ptr noundef %rs, ptr noundef %ctx) unnamed_addr #7 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_segcb_stats, i32 0, i32 1), ptr blockaddress(@trace_rcu_segcb_stats, %do.body)) #24
          to label %if.end48 [label %do.body], !srcloc !1665

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1966
  %call42 = tail call i32 @__traceiter_rcu_segcb_stats(ptr noundef null, ptr noundef %rs, ptr noundef %ctx) #24
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1967
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !1646

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1668
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_segcb_stats, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_segcb_stats, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #24
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rcu_segcb_stats.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_rcu_segcb_stats.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.128, i32 noundef 561, ptr noundef nonnull @.str.129) #24
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1669
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_segcblist_pend_cbs(ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rcu_nocb_wake(ptr noundef %rcuname, i32 noundef %cpu, ptr noundef %reason) unnamed_addr #7 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_nocb_wake, i32 0, i32 1), ptr blockaddress(@trace_rcu_nocb_wake, %do.body)) #24
          to label %if.end49 [label %do.body], !srcloc !1665

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu2 = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu2, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i76 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i76
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end70, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1968
  %call43 = tail call i32 @__traceiter_rcu_nocb_wake(ptr noundef null, ptr noundef %rcuname, i32 noundef %cpu, ptr noundef %reason) #24
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1969
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i74 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i74 to ptr
  %preempt_count.i.i75 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i75 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i75, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i75, align 4
  br label %if.end49

if.end49:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i77 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i77 to ptr
  %cpu51 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu51 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu51, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i78 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i78, label %cpu_online.exit86, label %land.rhs.i.i.i.i80

land.rhs.i.i.i.i80:                               ; preds = %if.end49
  %.b37.i.i.i.i79 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i79, label %cpu_online.exit86, label %if.then.i.i.i.i81, !prof !1646

if.then.i.i.i.i81:                                ; preds = %land.rhs.i.i.i.i80
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit86

cpu_online.exit86:                                ; preds = %if.then.i.i.i.i81, %land.rhs.i.i.i.i80, %if.end49
  %div3.i.i.i82 = lshr i32 %20, 5
  %arrayidx.i.i.i83 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i82
  %22 = ptrtoint ptr %arrayidx.i.i.i83 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i83, align 4
  %and.i.i.i84 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i84
  %25 = and i32 %23, %24
  %tobool.i85.not = icmp eq i32 %25, 0
  br i1 %tobool.i85.not, label %if.end70, label %if.then53

if.then53:                                        ; preds = %cpu_online.exit86
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1668
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_nocb_wake, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_nocb_wake, i32 0, i32 7), align 4
  %call59 = tail call i32 @rcu_read_lock_sched_held() #24
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %land.lhs.true, label %do.end68

land.lhs.true:                                    ; preds = %if.then53
  %call61 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %do.end68, label %land.lhs.true63

land.lhs.true63:                                  ; preds = %land.lhs.true
  %.b73 = load i1, ptr @trace_rcu_nocb_wake.__warned, align 1
  br i1 %.b73, label %do.end68, label %if.then65

if.then65:                                        ; preds = %land.lhs.true63
  store i1 true, ptr @trace_rcu_nocb_wake.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.128, i32 noundef 303, ptr noundef nonnull @.str.129) #24
  br label %do.end68

do.end68:                                         ; preds = %if.then65, %land.lhs.true63, %land.lhs.true, %if.then53
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1669
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i87 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i87 to ptr
  %preempt_count.i.i.i88 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i88 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i88, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i88, align 4
  br label %if.end70

if.end70:                                         ; preds = %do.end68, %cpu_online.exit86, %cpu_online.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_segcblist_nextgp(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_advance_cbs_nowake(ptr noundef %rnp, ptr noundef %rdp) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @rcu_lockdep_assert_cblist_protected(ptr noundef %rdp)
  %gp_seq = getelementptr inbounds %struct.rcu_node, ptr %rnp, i32 0, i32 1
  %0 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %gp_seq, align 4
  %and.i = and i32 %1, 3
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %do.end177, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %call2 = tail call i32 @_raw_spin_trylock(ptr noundef %rnp) #24
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %do.end177, label %if.end9

if.end9:                                          ; preds = %lor.lhs.false
  %2 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %gp_seq, align 4
  %and.i202 = and i32 %3, 3
  %tobool13.not = icmp eq i32 %and.i202, 0
  br i1 %tobool13.not, label %do.body60, label %if.then14

if.then14:                                        ; preds = %if.end9
  %call15 = tail call fastcc zeroext i1 @rcu_advance_cbs(ptr noundef %rnp, ptr noundef %rdp)
  br i1 %call15, label %land.rhs, label %do.body60

land.rhs:                                         ; preds = %if.then14
  %.b190 = load i1, ptr @rcu_advance_cbs_nowake.__already_done, align 1
  br i1 %.b190, label %do.body60, label %if.then24, !prof !1646

if.then24:                                        ; preds = %land.rhs
  store i1 true, ptr @rcu_advance_cbs_nowake.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1604, i32 noundef 9, ptr noundef null) #24
  br label %do.body60

do.body60:                                        ; preds = %if.then24, %land.rhs, %if.then14, %if.end9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %4 = load i32, ptr @debug_locks, align 4
  %tobool62.not = icmp eq i32 %4, 0
  br i1 %tobool62.not, label %if.end165, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body60
  %5 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %8, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1970
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i203 = and i32 %9, -16384
  %10 = inttoptr i32 %and.i203 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, ptrtoint (ptr @lockdep_recursion to i32)
  %15 = inttoptr i32 %add to ptr
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %15, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1971
  %18 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i194 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i194 to ptr
  %preempt_count.i.i195 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i195 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i195, align 4
  %sub.i = add i32 %21, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i195, align 4
  %tobool86.not = icmp eq i32 %17, 0
  br i1 %tobool86.not, label %land.rhs87, label %if.end165

land.rhs87:                                       ; preds = %land.lhs.true
  %22 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i196 = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i196 to ptr
  %preempt_count.i.i197 = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i197 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i197, align 4
  %add.i198 = add i32 %25, 1
  store volatile i32 %add.i198, ptr %preempt_count.i.i197, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1972
  %26 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu, align 4
  %arrayidx111 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %27
  %28 = ptrtoint ptr %arrayidx111 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx111, align 4
  %add112 = add i32 %29, ptrtoint (ptr @hardirqs_enabled to i32)
  %30 = inttoptr i32 %add112 to ptr
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %30, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1973
  %33 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i199 = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i199 to ptr
  %preempt_count.i.i200 = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i200 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i200, align 4
  %sub.i201 = add i32 %36, -1
  store volatile i32 %sub.i201, ptr %preempt_count.i.i200, align 4
  %tobool119.not = icmp eq i32 %32, 0
  br i1 %tobool119.not, label %if.end165, label %land.rhs127

land.rhs127:                                      ; preds = %land.rhs87
  %.b188189 = load i1, ptr @rcu_advance_cbs_nowake.__already_done.155, align 1
  br i1 %.b188189, label %if.end165, label %if.then138, !prof !1646

if.then138:                                       ; preds = %land.rhs127
  store i1 true, ptr @rcu_advance_cbs_nowake.__already_done.155, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1605, i32 noundef 9, ptr noundef null) #24
  br label %if.end165

if.end165:                                        ; preds = %if.then138, %land.rhs127, %land.rhs87, %land.lhs.true, %do.body60
  tail call void @_raw_spin_unlock(ptr noundef %rnp) #24
  br label %do.end177

do.end177:                                        ; preds = %if.end165, %lor.lhs.false, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_nocb_unlock_irqrestore(ptr noundef %rdp, i32 noundef %flags) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %rdp)
  br i1 %call, label %do.body, label %do.body102

do.body:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end88, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body
  %1 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %4, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1974
  %5 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1975
  %14 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i148 = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i148 to ptr
  %preempt_count.i.i149 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i149 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i149, align 4
  %sub.i = add i32 %17, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i149, align 4
  %tobool21.not = icmp eq i32 %13, 0
  br i1 %tobool21.not, label %land.rhs, label %if.end88

land.rhs:                                         ; preds = %land.lhs.true
  %18 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i150 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i150 to ptr
  %preempt_count.i.i151 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i151 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i151, align 4
  %add.i152 = add i32 %21, 1
  store volatile i32 %add.i152, ptr %preempt_count.i.i151, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1976
  %22 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cpu, align 4
  %arrayidx45 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %23
  %24 = ptrtoint ptr %arrayidx45 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx45, align 4
  %add46 = add i32 %25, ptrtoint (ptr @hardirqs_enabled to i32)
  %26 = inttoptr i32 %add46 to ptr
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %26, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1977
  %29 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i153 = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i153 to ptr
  %preempt_count.i.i154 = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i154 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i154, align 4
  %sub.i155 = add i32 %32, -1
  store volatile i32 %sub.i155, ptr %preempt_count.i.i154, align 4
  %tobool53.not = icmp eq i32 %28, 0
  br i1 %tobool53.not, label %if.end88, label %land.rhs56

land.rhs56:                                       ; preds = %land.rhs
  %.b144 = load i1, ptr @rcu_nocb_unlock_irqrestore.__already_done, align 1
  br i1 %.b144, label %if.end88, label %if.then63, !prof !1646

if.then63:                                        ; preds = %land.rhs56
  store i1 true, ptr @rcu_nocb_unlock_irqrestore.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 183, i32 noundef 9, ptr noundef null) #24
  br label %if.end88

if.end88:                                         ; preds = %if.then63, %land.rhs56, %land.rhs, %land.lhs.true, %do.body
  %nocb_lock = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 31
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %nocb_lock, i32 noundef %flags) #24
  br label %if.end138

do.body102:                                       ; preds = %entry
  %and.i156 = and i32 %flags, 128
  %tobool110.not = icmp eq i32 %and.i156, 0
  br i1 %tobool110.not, label %if.then111, label %do.body113

if.then111:                                       ; preds = %do.body102
  tail call void @trace_hardirqs_on() #24
  br label %do.body113

do.body113:                                       ; preds = %if.then111, %do.body102
  %33 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #24, !srcloc !1649
  %and.i.i = and i32 %33, 128
  %tobool121.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool121.not, label %if.then130, label %do.end133, !prof !1645

if.then130:                                       ; preds = %do.body113
  tail call void @warn_bogus_irq_restore() #24
  br label %do.end133

do.end133:                                        ; preds = %if.then130, %do.body113
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %flags) #24, !srcloc !1679
  br label %if.end138

if.end138:                                        ; preds = %do.end133, %if.end88
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_nocb_bypass_lock(ptr noundef %rdp) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end86, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %4, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1978
  %5 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1979
  %14 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i184 = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i184 to ptr
  %preempt_count.i.i185 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i185 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i185, align 4
  %sub.i = add i32 %17, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i185, align 4
  %tobool20.not = icmp eq i32 %13, 0
  br i1 %tobool20.not, label %land.rhs, label %if.end86

land.rhs:                                         ; preds = %land.lhs.true
  %18 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i186 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i186 to ptr
  %preempt_count.i.i187 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i187 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i187, align 4
  %add.i188 = add i32 %21, 1
  store volatile i32 %add.i188, ptr %preempt_count.i.i187, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1980
  %22 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cpu, align 4
  %arrayidx44 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %23
  %24 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx44, align 4
  %add45 = add i32 %25, ptrtoint (ptr @hardirqs_enabled to i32)
  %26 = inttoptr i32 %add45 to ptr
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %26, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1981
  %29 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i189 = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i189 to ptr
  %preempt_count.i.i190 = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i190 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i190, align 4
  %sub.i191 = add i32 %32, -1
  store volatile i32 %sub.i191, ptr %preempt_count.i.i190, align 4
  %tobool52.not = icmp eq i32 %28, 0
  br i1 %tobool52.not, label %if.end86, label %land.rhs55

land.rhs55:                                       ; preds = %land.rhs
  %.b180 = load i1, ptr @rcu_nocb_bypass_lock.__already_done, align 1
  br i1 %.b180, label %if.end86, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs55
  store i1 true, ptr @rcu_nocb_bypass_lock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 103, i32 noundef 9, ptr noundef null) #24
  br label %if.end86

if.end86:                                         ; preds = %if.then, %land.rhs55, %land.rhs, %land.lhs.true, %entry
  %nocb_bypass_lock = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 37
  %call96 = tail call i32 @_raw_spin_trylock(ptr noundef %nocb_bypass_lock) #24
  %tobool97.not = icmp eq i32 %call96, 0
  br i1 %tobool97.not, label %if.end99, label %return

if.end99:                                         ; preds = %if.end86
  %nocb_lock_contended = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 32
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %nocb_lock_contended, i32 noundef 4) #24
  tail call void @llvm.prefetch.p0(ptr %nocb_lock_contended, i32 1, i32 3, i32 1) #24
  %33 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nocb_lock_contended, ptr %nocb_lock_contended, i32 1, ptr elementtype(i32) %nocb_lock_contended) #24, !srcloc !1807
  %34 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i193 = and i32 %34, -16384
  %35 = inttoptr i32 %and.i193 to ptr
  %cpu102 = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 3
  %36 = ptrtoint ptr %cpu102 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %cpu102, align 4
  %cpu103 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 68
  %38 = ptrtoint ptr %cpu103 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %cpu103, align 64
  %cmp.not = icmp eq i32 %37, %39
  br i1 %cmp.not, label %if.end148, label %land.rhs110

land.rhs110:                                      ; preds = %if.end99
  %.b178179 = load i1, ptr @rcu_nocb_bypass_lock.__already_done.157, align 1
  br i1 %.b178179, label %if.end148, label %if.then121, !prof !1646

if.then121:                                       ; preds = %land.rhs110
  store i1 true, ptr @rcu_nocb_bypass_lock.__already_done.157, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 107, i32 noundef 9, ptr noundef null) #24
  br label %if.end148

if.end148:                                        ; preds = %if.then121, %land.rhs110, %if.end99
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1982
  tail call void @_raw_spin_lock(ptr noundef %nocb_bypass_lock) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1983
  %call.i.i192 = tail call zeroext i1 @__kasan_check_write(ptr noundef %nocb_lock_contended, i32 noundef 4) #24
  tail call void @llvm.prefetch.p0(ptr %nocb_lock_contended, i32 1, i32 3, i32 1) #24
  %40 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nocb_lock_contended, ptr %nocb_lock_contended, i32 1, ptr elementtype(i32) %nocb_lock_contended) #24, !srcloc !1984
  br label %return

return:                                           ; preds = %if.end148, %if.end86
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_segcblist_inc_len(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_cblist_enqueue(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_nocb_bypass_unlock(ptr noundef %rdp) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end86, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %4, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1985
  %5 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1986
  %14 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i102 = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i102 to ptr
  %preempt_count.i.i103 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i103 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i103, align 4
  %sub.i = add i32 %17, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i103, align 4
  %tobool20.not = icmp eq i32 %13, 0
  br i1 %tobool20.not, label %land.rhs, label %if.end86

land.rhs:                                         ; preds = %land.lhs.true
  %18 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i104 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i104 to ptr
  %preempt_count.i.i105 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i105 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i105, align 4
  %add.i106 = add i32 %21, 1
  store volatile i32 %add.i106, ptr %preempt_count.i.i105, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1987
  %22 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cpu, align 4
  %arrayidx44 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %23
  %24 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx44, align 4
  %add45 = add i32 %25, ptrtoint (ptr @hardirqs_enabled to i32)
  %26 = inttoptr i32 %add45 to ptr
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %26, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1988
  %29 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i107 = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i107 to ptr
  %preempt_count.i.i108 = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i108 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i108, align 4
  %sub.i109 = add i32 %32, -1
  store volatile i32 %sub.i109, ptr %preempt_count.i.i108, align 4
  %tobool52.not = icmp eq i32 %28, 0
  br i1 %tobool52.not, label %if.end86, label %land.rhs55

land.rhs55:                                       ; preds = %land.rhs
  %.b98 = load i1, ptr @rcu_nocb_bypass_unlock.__already_done, align 1
  br i1 %.b98, label %if.end86, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs55
  store i1 true, ptr @rcu_nocb_bypass_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 147, i32 noundef 9, ptr noundef null) #24
  br label %if.end86

if.end86:                                         ; preds = %if.then, %land.rhs55, %land.rhs, %land.lhs.true, %entry
  %nocb_bypass_lock = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 37
  tail call void @_raw_spin_unlock(ptr noundef %nocb_bypass_lock) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rcu_nocb_wake(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lockdep_assert_cblist_protected(ptr noundef %rdp) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end86, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %4, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1989
  %5 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1990
  %14 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i146 = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i146 to ptr
  %preempt_count.i.i147 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i147 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i147, align 4
  %sub.i = add i32 %17, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i147, align 4
  %tobool20.not = icmp eq i32 %13, 0
  br i1 %tobool20.not, label %land.rhs, label %if.end86

land.rhs:                                         ; preds = %land.lhs.true
  %18 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i148 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i148 to ptr
  %preempt_count.i.i149 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i149 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i149, align 4
  %add.i150 = add i32 %21, 1
  store volatile i32 %add.i150, ptr %preempt_count.i.i149, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1991
  %22 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cpu, align 4
  %arrayidx44 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %23
  %24 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx44, align 4
  %add45 = add i32 %25, ptrtoint (ptr @hardirqs_enabled to i32)
  %26 = inttoptr i32 %add45 to ptr
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %26, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1992
  %29 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i151 = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i151 to ptr
  %preempt_count.i.i152 = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i152 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i152, align 4
  %sub.i153 = add i32 %32, -1
  store volatile i32 %sub.i153, ptr %preempt_count.i.i152, align 4
  %tobool52.not = icmp eq i32 %28, 0
  br i1 %tobool52.not, label %if.end86, label %land.rhs55

land.rhs55:                                       ; preds = %land.rhs
  %.b142 = load i1, ptr @rcu_lockdep_assert_cblist_protected.__already_done, align 1
  br i1 %.b142, label %if.end86, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs55
  store i1 true, ptr @rcu_lockdep_assert_cblist_protected.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 193, i32 noundef 9, ptr noundef null) #24
  br label %if.end86

if.end86:                                         ; preds = %if.then, %land.rhs55, %land.rhs, %land.lhs.true, %entry
  %call96 = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %rdp)
  br i1 %call96, label %do.body98, label %if.end137

do.body98:                                        ; preds = %if.end86
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %33 = load i32, ptr @debug_locks, align 4
  %tobool100.not = icmp eq i32 %33, 0
  br i1 %tobool100.not, label %if.end137, label %land.rhs101

land.rhs101:                                      ; preds = %do.body98
  %dep_map = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 31, i32 4
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #24
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end121, label %if.end137, !prof !1645

do.end121:                                        ; preds = %land.rhs101
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 195, i32 noundef 9, ptr noundef null) #24
  br label %if.end137

if.end137:                                        ; preds = %do.end121, %land.rhs101, %do.body98, %if.end86
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rcu_kvfree_callback(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rcu_callback(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rcu_segcb_stats(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @note_gp_changes(ptr noundef %rdp) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i = and i32 %0, 128
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.then, label %do.end11

if.then:                                          ; preds = %entry
  tail call void @trace_hardirqs_off() #24
  br label %do.end11

do.end11:                                         ; preds = %if.then, %entry
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 7
  %1 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %mynode, align 16
  %3 = ptrtoint ptr %rdp to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %rdp, align 128
  %gp_seq12 = getelementptr inbounds %struct.rcu_node, ptr %2, i32 0, i32 1
  %5 = ptrtoint ptr %gp_seq12 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %gp_seq12, align 4
  %cmp14 = icmp eq i32 %4, %6
  br i1 %cmp14, label %do.end18, label %lor.lhs.false

do.end18:                                         ; preds = %do.end11
  %gpwrap = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 5
  %7 = ptrtoint ptr %gpwrap to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load volatile i8, ptr %gpwrap, align 4, !range !1644
  %tobool20.not = icmp eq i8 %8, 0
  br i1 %tobool20.not, label %do.body38, label %lor.lhs.false, !prof !1646

lor.lhs.false:                                    ; preds = %do.end18, %do.end11
  %call24 = tail call i32 @_raw_spin_trylock(ptr noundef %2) #24
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %do.body38, label %if.end74

do.body38:                                        ; preds = %lor.lhs.false, %do.end18
  br i1 %tobool.not, label %if.then47, label %do.body49

if.then47:                                        ; preds = %do.body38
  tail call void @trace_hardirqs_on() #24
  br label %do.body49

do.body49:                                        ; preds = %if.then47, %do.body38
  %9 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #24, !srcloc !1649
  %and.i.i = and i32 %9, 128
  %tobool57.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool57.not, label %if.then66, label %do.end69, !prof !1645

if.then66:                                        ; preds = %do.body49
  tail call void @warn_bogus_irq_restore() #24
  br label %do.end69

do.end69:                                         ; preds = %if.then66, %do.body49
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #24, !srcloc !1679
  br label %cleanup

if.end74:                                         ; preds = %lor.lhs.false
  %call75 = tail call fastcc zeroext i1 @__note_gp_changes(ptr noundef %2, ptr noundef %rdp)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %10 = load i32, ptr @debug_locks, align 4
  %tobool79.not = icmp eq i32 %10, 0
  br i1 %tobool79.not, label %if.end181, label %land.lhs.true80

land.lhs.true80:                                  ; preds = %if.end74
  %11 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %14, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1993
  %15 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i232 = and i32 %15, -16384
  %16 = inttoptr i32 %and.i232 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 3
  %17 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %18
  %19 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx, align 4
  %add = add i32 %20, ptrtoint (ptr @lockdep_recursion to i32)
  %21 = inttoptr i32 %add to ptr
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %21, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1994
  %24 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i223 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i223 to ptr
  %preempt_count.i.i224 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i224 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i224, align 4
  %sub.i = add i32 %27, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i224, align 4
  %tobool104.not = icmp eq i32 %23, 0
  br i1 %tobool104.not, label %land.rhs, label %if.end181

land.rhs:                                         ; preds = %land.lhs.true80
  %28 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i225 = and i32 %28, -16384
  %29 = inttoptr i32 %and.i.i.i225 to ptr
  %preempt_count.i.i226 = getelementptr inbounds %struct.thread_info, ptr %29, i32 0, i32 1
  %30 = ptrtoint ptr %preempt_count.i.i226 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %preempt_count.i.i226, align 4
  %add.i227 = add i32 %31, 1
  store volatile i32 %add.i227, ptr %preempt_count.i.i226, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1995
  %32 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cpu, align 4
  %arrayidx128 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %33
  %34 = ptrtoint ptr %arrayidx128 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %arrayidx128, align 4
  %add129 = add i32 %35, ptrtoint (ptr @hardirqs_enabled to i32)
  %36 = inttoptr i32 %add129 to ptr
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %36, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1996
  %39 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i228 = and i32 %39, -16384
  %40 = inttoptr i32 %and.i.i.i228 to ptr
  %preempt_count.i.i229 = getelementptr inbounds %struct.thread_info, ptr %40, i32 0, i32 1
  %41 = ptrtoint ptr %preempt_count.i.i229 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %preempt_count.i.i229, align 4
  %sub.i230 = add i32 %42, -1
  store volatile i32 %sub.i230, ptr %preempt_count.i.i229, align 4
  %tobool136.not = icmp eq i32 %38, 0
  br i1 %tobool136.not, label %if.end181, label %land.rhs144

land.rhs144:                                      ; preds = %land.rhs
  %.b219 = load i1, ptr @note_gp_changes.__already_done, align 1
  br i1 %.b219, label %if.end181, label %if.then155, !prof !1646

if.then155:                                       ; preds = %land.rhs144
  store i1 true, ptr @note_gp_changes.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1689, i32 noundef 9, ptr noundef null) #24
  br label %if.end181

if.end181:                                        ; preds = %if.then155, %land.rhs144, %land.rhs, %land.lhs.true80, %if.end74
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %2, i32 noundef %0) #24
  %43 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i.i.i = and i32 %43, -16384
  %44 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %44, i32 0, i32 1
  %45 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %46, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1997
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #24
  %47 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i5.i.i = and i32 %47, -16384
  %48 = inttoptr i32 %and.i.i.i.i5.i.i to ptr
  %preempt_count.i.i.i6.i.i = getelementptr inbounds %struct.thread_info, ptr %48, i32 0, i32 1
  %49 = ptrtoint ptr %preempt_count.i.i.i6.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %preempt_count.i.i.i6.i.i, align 4
  %add.i.i7.i.i = add i32 %50, 1
  store volatile i32 %add.i.i7.i.i, ptr %preempt_count.i.i.i6.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1689
  %51 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i.i = and i32 %51, -16384
  %52 = inttoptr i32 %and.i.i.i.i.i to ptr
  %cpu.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %52, i32 0, i32 3
  %53 = ptrtoint ptr %cpu.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %cpu.i.i.i.i, align 4
  %arrayidx.i.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %54
  %55 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %arrayidx.i.i.i.i, align 4
  %add.i4.i.i.i = add i32 %56, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 21) to i32)
  %57 = inttoptr i32 %add.i4.i.i.i to ptr
  %58 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %57, align 4
  %and.i.i.i.i = and i32 %59, 1
  %tobool.not.i.i.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1690
  %60 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i5.i.i.i = and i32 %60, -16384
  %61 = inttoptr i32 %and.i.i.i5.i.i.i to ptr
  %preempt_count.i.i6.i.i.i = getelementptr inbounds %struct.thread_info, ptr %61, i32 0, i32 1
  %62 = ptrtoint ptr %preempt_count.i.i6.i.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %preempt_count.i.i6.i.i.i, align 4
  %sub.i.i.i.i = add i32 %63, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i6.i.i.i, align 4
  br i1 %tobool.not.i.i.not.i.i, label %land.lhs.true.i.i, label %rcu_strict_gp_check_qs.exit

land.lhs.true.i.i:                                ; preds = %if.end181
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %rcu_strict_gp_check_qs.exit, label %land.lhs.true2.i.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %rcu_strict_gp_check_qs.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.168, i32 noundef 696, ptr noundef nonnull @.str.169) #24
  br label %rcu_strict_gp_check_qs.exit

rcu_strict_gp_check_qs.exit:                      ; preds = %if.then.i.i, %land.lhs.true2.i.i, %land.lhs.true.i.i, %if.end181
  tail call fastcc void @rcu_read_unlock() #24
  br i1 %call75, label %if.then203, label %cleanup

if.then203:                                       ; preds = %rcu_strict_gp_check_qs.exit
  %64 = load volatile ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 8), align 4
  %65 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i233 = and i32 %65, -16384
  %66 = inttoptr i32 %and.i.i233 to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %66, i32 0, i32 2
  %67 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %task.i, align 8
  %cmp.i = icmp eq ptr %68, %64
  br i1 %cmp.i, label %land.lhs.true.i, label %do.end9.i

land.lhs.true.i:                                  ; preds = %if.then203
  %preempt_count.i.i234 = getelementptr inbounds %struct.thread_info, ptr %66, i32 0, i32 1
  %69 = ptrtoint ptr %preempt_count.i.i234 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %preempt_count.i.i234, align 4
  %and.i235 = and i32 %70, 983040
  %tobool.not.i = icmp eq i32 %and.i235, 0
  br i1 %tobool.not.i, label %land.lhs.true2.i, label %do.end9.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %71 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i37.i = and i32 %71, -16384
  %72 = inttoptr i32 %and.i.i37.i to ptr
  %preempt_count.i38.i = getelementptr inbounds %struct.thread_info, ptr %72, i32 0, i32 1
  %73 = ptrtoint ptr %preempt_count.i38.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load volatile i32, ptr %preempt_count.i38.i, align 4
  %and5.i = and i32 %74, 256
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  br i1 %tobool6.not.i, label %cleanup, label %do.end9.i

do.end9.i:                                        ; preds = %land.lhs.true2.i, %land.lhs.true.i, %if.then203
  %75 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %tobool11.not.i = icmp eq i16 %75, 0
  %tobool13.not.i = icmp eq ptr %64, null
  %or.cond.i = select i1 %tobool11.not.i, i1 true, i1 %tobool13.not.i
  br i1 %or.cond.i, label %cleanup, label %do.body18.i

do.body18.i:                                      ; preds = %do.end9.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %76 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %76, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 12), align 8
  %77 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  store volatile i32 %77, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 13), align 4
  tail call void @swake_up_one(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 9)) #24
  br label %cleanup

cleanup:                                          ; preds = %do.body18.i, %do.end9.i, %land.lhs.true2.i, %rcu_strict_gp_check_qs.exit, %do.end69
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_accelerate_cbs_unlocked(ptr noundef %rnp, ptr noundef %rdp) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @rcu_lockdep_assert_cblist_protected(ptr noundef %rdp)
  %0 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %add1.i = add i32 %0, 7
  %and.i = and i32 %add1.i, -4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1778
  %gpwrap = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 5
  %1 = ptrtoint ptr %gpwrap to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load volatile i8, ptr %gpwrap, align 4, !range !1644
  %tobool.not = icmp eq i8 %2, 0
  br i1 %tobool.not, label %land.lhs.true, label %do.body3

land.lhs.true:                                    ; preds = %entry
  %gp_seq_needed = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 1
  %3 = ptrtoint ptr %gp_seq_needed to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %gp_seq_needed, align 4
  %sub = sub i32 %4, %and.i
  %cmp = icmp sgt i32 %sub, -1
  br i1 %cmp, label %if.then, label %do.body3

if.then:                                          ; preds = %land.lhs.true
  %cblist = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 13
  %call2 = tail call zeroext i1 @rcu_segcblist_accelerate(ptr noundef %cblist, i32 noundef %and.i) #24
  br label %cleanup

do.body3:                                         ; preds = %land.lhs.true, %entry
  tail call void @_raw_spin_lock(ptr noundef %rnp) #24
  %call9 = tail call fastcc zeroext i1 @rcu_accelerate_cbs(ptr noundef %rnp, ptr noundef %rdp)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %5 = load i32, ptr @debug_locks, align 4
  %tobool13.not = icmp eq i32 %5, 0
  br i1 %tobool13.not, label %if.end107, label %land.lhs.true14

land.lhs.true14:                                  ; preds = %do.body3
  %6 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %9, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1998
  %10 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i145 = and i32 %10, -16384
  %11 = inttoptr i32 %and.i145 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %13
  %14 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx, align 4
  %add = add i32 %15, ptrtoint (ptr @lockdep_recursion to i32)
  %16 = inttoptr i32 %add to ptr
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %16, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1999
  %19 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i137 = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i.i137 to ptr
  %preempt_count.i.i138 = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %preempt_count.i.i138 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %preempt_count.i.i138, align 4
  %sub.i = add i32 %22, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i138, align 4
  %tobool38.not = icmp eq i32 %18, 0
  br i1 %tobool38.not, label %land.rhs, label %if.end107

land.rhs:                                         ; preds = %land.lhs.true14
  %23 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i139 = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i139 to ptr
  %preempt_count.i.i140 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %preempt_count.i.i140 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %preempt_count.i.i140, align 4
  %add.i141 = add i32 %26, 1
  store volatile i32 %add.i141, ptr %preempt_count.i.i140, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2000
  %27 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cpu, align 4
  %arrayidx62 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %28
  %29 = ptrtoint ptr %arrayidx62 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %arrayidx62, align 4
  %add63 = add i32 %30, ptrtoint (ptr @hardirqs_enabled to i32)
  %31 = inttoptr i32 %add63 to ptr
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %31, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2001
  %34 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i142 = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i.i142 to ptr
  %preempt_count.i.i143 = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %preempt_count.i.i143 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %preempt_count.i.i143, align 4
  %sub.i144 = add i32 %37, -1
  store volatile i32 %sub.i144, ptr %preempt_count.i.i143, align 4
  %tobool70.not = icmp eq i32 %33, 0
  br i1 %tobool70.not, label %if.end107, label %land.rhs74

land.rhs74:                                       ; preds = %land.rhs
  %.b133 = load i1, ptr @rcu_accelerate_cbs_unlocked.__already_done, align 1
  br i1 %.b133, label %if.end107, label %if.then81, !prof !1646

if.then81:                                        ; preds = %land.rhs74
  store i1 true, ptr @rcu_accelerate_cbs_unlocked.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1558, i32 noundef 9, ptr noundef null) #24
  br label %if.end107

if.end107:                                        ; preds = %if.then81, %land.rhs74, %land.rhs, %land.lhs.true14, %do.body3
  tail call void @_raw_spin_unlock(ptr noundef %rnp) #24
  br i1 %call9, label %if.then121, label %cleanup

if.then121:                                       ; preds = %if.end107
  %38 = load volatile ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 8), align 4
  %39 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %39, -16384
  %40 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %40, i32 0, i32 2
  %41 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %task.i, align 8
  %cmp.i = icmp eq ptr %42, %38
  br i1 %cmp.i, label %land.lhs.true.i, label %do.end9.i

land.lhs.true.i:                                  ; preds = %if.then121
  %preempt_count.i.i146 = getelementptr inbounds %struct.thread_info, ptr %40, i32 0, i32 1
  %43 = ptrtoint ptr %preempt_count.i.i146 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %preempt_count.i.i146, align 4
  %and.i147 = and i32 %44, 983040
  %tobool.not.i = icmp eq i32 %and.i147, 0
  br i1 %tobool.not.i, label %land.lhs.true2.i, label %do.end9.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %45 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i37.i = and i32 %45, -16384
  %46 = inttoptr i32 %and.i.i37.i to ptr
  %preempt_count.i38.i = getelementptr inbounds %struct.thread_info, ptr %46, i32 0, i32 1
  %47 = ptrtoint ptr %preempt_count.i38.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %preempt_count.i38.i, align 4
  %and5.i = and i32 %48, 256
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  br i1 %tobool6.not.i, label %cleanup, label %do.end9.i

do.end9.i:                                        ; preds = %land.lhs.true2.i, %land.lhs.true.i, %if.then121
  %49 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %tobool11.not.i = icmp eq i16 %49, 0
  %tobool13.not.i = icmp eq ptr %38, null
  %or.cond.i = select i1 %tobool11.not.i, i1 true, i1 %tobool13.not.i
  br i1 %or.cond.i, label %cleanup, label %do.body18.i

do.body18.i:                                      ; preds = %do.end9.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %50 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %50, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 12), align 8
  %51 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  store volatile i32 %51, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 13), align 4
  tail call void @swake_up_one(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 9)) #24
  br label %cleanup

cleanup:                                          ; preds = %do.body18.i, %do.end9.i, %land.lhs.true2.i, %if.end107, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rcu_segcblist_first_pend_cb(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @__note_gp_changes(ptr noundef %rnp, ptr noundef %rdp) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %rdp)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end, label %land.rhs

land.rhs:                                         ; preds = %entry
  %dep_map = getelementptr inbounds %struct.raw_spinlock, ptr %rnp, i32 0, i32 4
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #24
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %if.end, !prof !1645

do.end:                                           ; preds = %land.rhs
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1633, i32 noundef 9, ptr noundef null) #24
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs, %entry
  %1 = ptrtoint ptr %rdp to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %rdp, align 128
  %gp_seq25 = getelementptr inbounds %struct.rcu_node, ptr %rnp, i32 0, i32 1
  %3 = ptrtoint ptr %gp_seq25 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %gp_seq25, align 4
  %cmp26 = icmp eq i32 %2, %4
  br i1 %cmp26, label %cleanup, label %if.end28

if.end28:                                         ; preds = %if.end
  %and.i = and i32 %4, -4
  %sub.i = sub i32 %2, %and.i
  %cmp.i = icmp slt i32 %sub.i, 0
  br i1 %cmp.i, label %if.then45, label %do.end34

do.end34:                                         ; preds = %if.end28
  %gpwrap = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 5
  %5 = ptrtoint ptr %gpwrap to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load volatile i8, ptr %gpwrap, align 4, !range !1644
  %tobool36.not = icmp eq i8 %6, 0
  br i1 %tobool36.not, label %if.else, label %if.then45, !prof !1646

if.then45:                                        ; preds = %do.end34, %if.end28
  br i1 %call, label %if.end50, label %if.then47

if.then47:                                        ; preds = %if.then45
  %call48 = tail call fastcc zeroext i1 @rcu_advance_cbs(ptr noundef %rnp, ptr noundef %rdp)
  br label %if.end50

if.end50:                                         ; preds = %if.then47, %if.then45
  %ret.0 = phi i1 [ false, %if.then45 ], [ %call48, %if.then47 ]
  %core_needs_qs = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 3
  %7 = ptrtoint ptr %core_needs_qs to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 0, ptr %core_needs_qs, align 2
  %8 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %9 = ptrtoint ptr %rdp to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %rdp, align 128
  %11 = load ptr, ptr @__note_gp_changes.___tp_str, align 4
  tail call fastcc void @trace_rcu_grace_period(ptr noundef %8, i32 noundef %10, ptr noundef %11)
  br label %if.end69

if.else:                                          ; preds = %do.end34
  br i1 %call, label %if.end57, label %if.then54

if.then54:                                        ; preds = %if.else
  %call55 = tail call fastcc zeroext i1 @rcu_accelerate_cbs(ptr noundef %rnp, ptr noundef %rdp)
  br label %if.end57

if.end57:                                         ; preds = %if.then54, %if.else
  %ret.1.off0 = phi i1 [ false, %if.else ], [ %call55, %if.then54 ]
  %core_needs_qs58 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 3
  %12 = ptrtoint ptr %core_needs_qs58 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %core_needs_qs58, align 2, !range !1644
  %tobool59.not = icmp eq i8 %13, 0
  br i1 %tobool59.not, label %if.end69, label %if.then60

if.then60:                                        ; preds = %if.end57
  %qsmask = getelementptr inbounds %struct.rcu_node, ptr %rnp, i32 0, i32 4
  %14 = ptrtoint ptr %qsmask to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %qsmask, align 8
  %grpmask = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 8
  %16 = ptrtoint ptr %grpmask to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %grpmask, align 4
  %and = and i32 %17, %15
  %tobool61 = icmp ne i32 %and, 0
  %frombool67 = zext i1 %tobool61 to i8
  %18 = ptrtoint ptr %core_needs_qs58 to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %frombool67, ptr %core_needs_qs58, align 2
  br label %if.end69

if.end69:                                         ; preds = %if.then60, %if.end57, %if.end50
  %ret.2.off0 = phi i1 [ %ret.0, %if.end50 ], [ %ret.1.off0, %if.then60 ], [ %ret.1.off0, %if.end57 ]
  %19 = ptrtoint ptr %rdp to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %rdp, align 128
  %21 = ptrtoint ptr %gp_seq25 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %gp_seq25, align 4
  %add.i = add i32 %20, 3
  %and.i181 = and i32 %add.i, -4
  %sub.i182 = sub i32 %and.i181, %22
  %cmp.i183 = icmp slt i32 %sub.i182, 0
  br i1 %cmp.i183, label %if.then88, label %do.end76

do.end76:                                         ; preds = %if.end69
  %gpwrap78 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 5
  %23 = ptrtoint ptr %gpwrap78 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load volatile i8, ptr %gpwrap78, align 4, !range !1644
  %tobool79.not = icmp eq i8 %24, 0
  br i1 %tobool79.not, label %if.end104, label %if.then88, !prof !1646

if.then88:                                        ; preds = %do.end76, %if.end69
  %25 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %26 = load ptr, ptr @__note_gp_changes.___tp_str.159, align 4
  tail call fastcc void @trace_rcu_grace_period(ptr noundef %25, i32 noundef %22, ptr noundef %26)
  %qsmask91 = getelementptr inbounds %struct.rcu_node, ptr %rnp, i32 0, i32 4
  %27 = ptrtoint ptr %qsmask91 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %qsmask91, align 8
  %grpmask92 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 8
  %29 = ptrtoint ptr %grpmask92 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %grpmask92, align 4
  %and93 = and i32 %30, %28
  %tobool94 = icmp ne i32 %and93, 0
  %frombool99 = zext i1 %tobool94 to i8
  %cpu_no_qs = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 2
  %31 = ptrtoint ptr %cpu_no_qs to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 %frombool99, ptr %cpu_no_qs, align 8
  %core_needs_qs102 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 3
  %32 = ptrtoint ptr %core_needs_qs102 to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 %frombool99, ptr %core_needs_qs102, align 2
  %ticks_this_gp.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 9
  %33 = ptrtoint ptr %ticks_this_gp.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 0, ptr %ticks_this_gp.i, align 8
  %34 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 3
  %36 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %cpu.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %37
  %38 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %39, ptrtoint (ptr @kstat to i32)
  %40 = inttoptr i32 %add.i.i to ptr
  %arrayidx2.i.i = getelementptr %struct.kernel_stat, ptr %40, i32 0, i32 1, i32 9
  %41 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %arrayidx2.i.i, align 4
  %softirq_snap.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 59
  %43 = ptrtoint ptr %softirq_snap.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %softirq_snap.i, align 16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %44 = load volatile i32, ptr @jiffies, align 128
  %last_fqs_resched.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 67
  %45 = ptrtoint ptr %last_fqs_resched.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile i32 %44, ptr %last_fqs_resched.i, align 4
  br label %if.end104

if.end104:                                        ; preds = %if.then88, %do.end76
  %46 = ptrtoint ptr %gp_seq25 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %gp_seq25, align 4
  %48 = ptrtoint ptr %rdp to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %rdp, align 128
  %gp_seq_needed = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 1
  %49 = ptrtoint ptr %gp_seq_needed to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %gp_seq_needed, align 4
  %gp_seq_needed107 = getelementptr inbounds %struct.rcu_node, ptr %rnp, i32 0, i32 2
  %51 = ptrtoint ptr %gp_seq_needed107 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %gp_seq_needed107, align 16
  %sub = sub i32 %50, %52
  %cmp108 = icmp slt i32 %sub, 0
  br i1 %cmp108, label %do.body119, label %lor.lhs.false110

lor.lhs.false110:                                 ; preds = %if.end104
  %gpwrap111 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 5
  %53 = ptrtoint ptr %gpwrap111 to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %gpwrap111, align 4, !range !1644
  %tobool112.not = icmp eq i8 %54, 0
  br i1 %tobool112.not, label %do.body131, label %do.body119

do.body119:                                       ; preds = %lor.lhs.false110, %if.end104
  %55 = ptrtoint ptr %gp_seq_needed to i32
  call void @__asan_store4_noabort(i32 %55)
  store volatile i32 %52, ptr %gp_seq_needed, align 4
  br label %do.body131

do.body131:                                       ; preds = %do.body119, %lor.lhs.false110
  %gpwrap132 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 5
  %56 = ptrtoint ptr %gpwrap132 to i32
  call void @__asan_store1_noabort(i32 %56)
  store volatile i8 0, ptr %gpwrap132, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %57 = load i32, ptr @debug_locks, align 4
  %tobool.not.i = icmp eq i32 %57, 0
  br i1 %tobool.not.i, label %if.end.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %do.body131
  %dep_map.i = getelementptr inbounds %struct.raw_spinlock, ptr %rnp, i32 0, i32 4
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #24
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %if.end.i, !prof !1645

do.end.i:                                         ; preds = %land.rhs.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1196, i32 noundef 9, ptr noundef null) #24
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i, %do.body131
  %58 = ptrtoint ptr %rdp to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %rdp, align 4
  %add.i184 = add i32 %59, 1073741823
  %60 = ptrtoint ptr %gp_seq25 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %gp_seq25, align 4
  %sub.i185 = sub i32 %add.i184, %61
  %cmp26.i = icmp slt i32 %sub.i185, 0
  br i1 %cmp26.i, label %do.body32.i, label %if.end37.i

do.body32.i:                                      ; preds = %if.end.i
  %62 = ptrtoint ptr %gpwrap132 to i32
  call void @__asan_store1_noabort(i32 %62)
  store volatile i8 1, ptr %gpwrap132, align 4
  br label %if.end37.i

if.end37.i:                                       ; preds = %do.body32.i, %if.end.i
  %rcu_iw_gp_seq.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 62
  %63 = ptrtoint ptr %rcu_iw_gp_seq.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %rcu_iw_gp_seq.i, align 8
  %add38.i = add i32 %64, 1073741823
  %65 = ptrtoint ptr %gp_seq25 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %gp_seq25, align 4
  %sub40.i = sub i32 %add38.i, %66
  %cmp41.i = icmp slt i32 %sub40.i, 0
  br i1 %cmp41.i, label %if.then42.i, label %cleanup

if.then42.i:                                      ; preds = %if.end37.i
  %add44.i = add i32 %66, 1073741823
  %67 = ptrtoint ptr %rcu_iw_gp_seq.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %add44.i, ptr %rcu_iw_gp_seq.i, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.then42.i, %if.end37.i, %if.end
  %retval.0 = phi i1 [ false, %if.end ], [ %ret.2.off0, %if.end37.i ], [ %ret.2.off0, %if.then42.i ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @rcu_accelerate_cbs(ptr noundef %rnp, ptr noundef %rdp) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @rcu_lockdep_assert_cblist_protected(ptr noundef %rdp)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end, label %land.rhs

land.rhs:                                         ; preds = %entry
  %dep_map = getelementptr inbounds %struct.raw_spinlock, ptr %rnp, i32 0, i32 4
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #24
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %if.end, !prof !1645

do.end:                                           ; preds = %land.rhs
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1503, i32 noundef 9, ptr noundef null) #24
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs, %entry
  %cblist = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 13
  %call24 = tail call zeroext i1 @rcu_segcblist_pend_cbs(ptr noundef %cblist) #24
  br i1 %call24, label %if.end26, label %cleanup

if.end26:                                         ; preds = %if.end
  %1 = load ptr, ptr @rcu_accelerate_cbs.___tp_str, align 4
  tail call fastcc void @trace_rcu_segcb_stats(ptr noundef %cblist, ptr noundef %1)
  %2 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %add1.i = add i32 %2, 7
  %and.i = and i32 %add1.i, -4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1778
  %call31 = tail call zeroext i1 @rcu_segcblist_accelerate(ptr noundef %cblist, i32 noundef %and.i) #24
  br i1 %call31, label %if.then32, label %if.end34

if.then32:                                        ; preds = %if.end26
  %call33 = tail call fastcc zeroext i1 @rcu_start_this_gp(ptr noundef %rnp, ptr noundef %rdp, i32 noundef %and.i)
  br label %if.end34

if.end34:                                         ; preds = %if.then32, %if.end26
  %ret.0.off0 = phi i1 [ %call33, %if.then32 ], [ false, %if.end26 ]
  %arrayidx.i = getelementptr %struct.rcu_data, ptr %rdp, i32 0, i32 13, i32 1, i32 1
  %3 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %arrayidx.i, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %4, align 4
  %tobool.not.i = icmp eq ptr %6, null
  %7 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %rcu_accelerate_cbs.___tp_str.162.val = load ptr, ptr @rcu_accelerate_cbs.___tp_str.162, align 4
  %rcu_accelerate_cbs.___tp_str.164.val = load ptr, ptr @rcu_accelerate_cbs.___tp_str.164, align 4
  %8 = select i1 %tobool.not.i, ptr %rcu_accelerate_cbs.___tp_str.162.val, ptr %rcu_accelerate_cbs.___tp_str.164.val
  tail call fastcc void @trace_rcu_grace_period(ptr noundef %7, i32 noundef %and.i, ptr noundef %8)
  %9 = load ptr, ptr @rcu_accelerate_cbs.___tp_str.166, align 4
  tail call fastcc void @trace_rcu_segcb_stats(ptr noundef %cblist, ptr noundef %9)
  br label %cleanup

cleanup:                                          ; preds = %if.end34, %if.end
  %retval.0 = phi i1 [ %ret.0.off0, %if.end34 ], [ false, %if.end ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_segcblist_accelerate(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_read_unlock() unnamed_addr #7 align 64 {
entry:
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %3, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1689
  %4 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %7
  %8 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx.i.i, align 4
  %add.i4.i = add i32 %9, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 21) to i32)
  %10 = inttoptr i32 %add.i4.i to ptr
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %10, align 4
  %and.i.i = and i32 %12, 1
  %tobool.not.i.i.not = icmp eq i32 %and.i.i, 0
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1690
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i5.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i5.i to ptr
  %preempt_count.i.i6.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i6.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i6.i, align 4
  %sub.i.i = add i32 %16, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i6.i, align 4
  br i1 %tobool.not.i.i.not, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %do.end, label %land.lhs.true2

land.lhs.true2:                                   ; preds = %land.lhs.true
  %.b4 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4, label %do.end, label %if.then

if.then:                                          ; preds = %land.lhs.true2
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.168, i32 noundef 724, ptr noundef nonnull @.str.170) #24
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2002
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i5 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i.i.i5 to ptr
  %preempt_count.i.i.i6 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %preempt_count.i.i.i6 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %preempt_count.i.i.i6, align 4
  %sub.i.i7 = add i32 %20, -1
  store volatile i32 %sub.i.i7, ptr %preempt_count.i.i.i6, align 4
  %21 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #24, !srcloc !1649
  %and.i.i.i8 = and i32 %21, 128
  %tobool.not.i.i9 = icmp eq i32 %and.i.i.i8, 0
  br i1 %tobool.not.i.i9, label %lor.lhs.false.i.i, label %__rcu_read_unlock.exit

lor.lhs.false.i.i:                                ; preds = %do.end
  %22 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i1.i to ptr
  %preempt_count.i.i2.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i2.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i2.i, align 4
  %tobool11.not.i.i = icmp eq i32 %25, 0
  br i1 %tobool11.not.i.i, label %lor.lhs.false12.i.i, label %__rcu_read_unlock.exit

lor.lhs.false12.i.i:                              ; preds = %lor.lhs.false.i.i
  %26 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 8), align 4
  %tobool13.not.i.i = icmp eq ptr %26, null
  br i1 %tobool13.not.i.i, label %__rcu_read_unlock.exit, label %do.body14.i.i

do.body14.i.i:                                    ; preds = %lor.lhs.false12.i.i
  %27 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i25.i.i = and i32 %27, -16384
  %28 = inttoptr i32 %and.i25.i.i to ptr
  %cpu.i.i10 = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 3
  %29 = ptrtoint ptr %cpu.i.i10 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %cpu.i.i10, align 4
  %arrayidx.i.i11 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %30
  %31 = ptrtoint ptr %arrayidx.i.i11 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %arrayidx.i.i11, align 4
  %add.i.i12 = add i32 %32, ptrtoint (ptr @rcu_data to i32)
  %33 = inttoptr i32 %add.i.i12 to ptr
  tail call fastcc void @rcu_report_qs_rdp(ptr noundef %33) #24
  %34 = load i32, ptr @rcu_unlock_delay, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %35 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  tail call void %35(i32 noundef %34) #24
  br label %__rcu_read_unlock.exit

__rcu_read_unlock.exit:                           ; preds = %do.body14.i.i, %lor.lhs.false12.i.i, %lor.lhs.false.i.i, %do.end
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map)
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr noundef %map) #7 align 64 {
entry:
  br label %__here

__here:                                           ; preds = %entry
  tail call void @lock_acquire(ptr noundef %map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr noundef %map) #7 align 64 {
entry:
  br label %__here

__here:                                           ; preds = %entry
  tail call void @lock_release(ptr noundef %map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_object_activate(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_object_active_state(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @is_vmalloc_addr(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__get_free_pages(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @llist_del_first(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @hrtimer_init(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @schedule_page_work_fn(ptr noundef %t) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_highpri_wq to i32))
  %0 = load ptr, ptr @system_highpri_wq, align 4
  %page_cache_work = getelementptr i8, ptr %t, i32 -108
  %call.i = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %0, ptr noundef %page_cache_work, i32 noundef 0) #24
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_delayed_work_on(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__msecs_to_jiffies(i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @hrtimer_start_range_ns(ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_object_deactivate(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rcu_future_grace_period(ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %gp_seq_req, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, ptr noundef %gpevent) unnamed_addr #7 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_future_grace_period, i32 0, i32 1), ptr blockaddress(@trace_rcu_future_grace_period, %do.body)) #24
          to label %if.end48 [label %do.body], !srcloc !1665

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2003
  %call42 = tail call i32 @__traceiter_rcu_future_grace_period(ptr noundef null, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %gp_seq_req, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, ptr noundef %gpevent) #24
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2004
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !1646

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1668
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_future_grace_period, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_future_grace_period, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #24
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rcu_future_grace_period.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_rcu_future_grace_period.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.128, i32 noundef 138, ptr noundef nonnull @.str.129) #24
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1669
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rcu_future_grace_period(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i8 noundef zeroext, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_segcblist_ready_cbs(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_stall_kick_kthreads() unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile i8, ptr @rcu_kick_kthreads, align 1, !range !1644
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %cleanup, label %do.end4

do.end4:                                          ; preds = %entry
  %1 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 27), align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %2 = load volatile i32, ptr @jiffies, align 128
  %sub = sub i32 %1, %2
  %cmp = icmp slt i32 %sub, 0
  br i1 %cmp, label %land.lhs.true, label %cleanup

land.lhs.true:                                    ; preds = %do.end4
  %3 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 8), align 4
  %tobool6.not = icmp eq ptr %3, null
  br i1 %tobool6.not, label %cleanup, label %land.lhs.true7

land.lhs.true7:                                   ; preds = %land.lhs.true
  %4 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %and.i.i = and i32 %4, 3
  %tobool8.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool8.not, label %do.end11, label %land.end

do.end11:                                         ; preds = %land.lhs.true7
  %5 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %tobool13.not = icmp eq i16 %5, 0
  br i1 %tobool13.not, label %cleanup, label %land.end

land.end:                                         ; preds = %do.end11, %land.lhs.true7
  %.b92 = load i1, ptr @rcu_stall_kick_kthreads.__already_done, align 1
  br i1 %.b92, label %if.end47, label %if.then21, !prof !1646

if.then21:                                        ; preds = %land.end
  store i1 true, ptr @rcu_stall_kick_kthreads.__already_done, align 1
  %6 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 172, i32 noundef 9, ptr noundef nonnull @.str.186, ptr noundef %6) #24
  br label %if.end47

if.end47:                                         ; preds = %if.then21, %land.end
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @rcu_stall_kick_kthreads.___rfd_beenhere, i32 noundef 4) #24
  %7 = load volatile i32, ptr @rcu_stall_kick_kthreads.___rfd_beenhere, align 4
  %tobool57.not = icmp eq i32 %7, 0
  br i1 %tobool57.not, label %land.lhs.true58, label %do.end77

land.lhs.true58:                                  ; preds = %if.end47
  %call.i.i93 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @rcu_stall_kick_kthreads.___rfd_beenhere, i32 noundef 4) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1728
  tail call void @llvm.prefetch.p0(ptr nonnull @rcu_stall_kick_kthreads.___rfd_beenhere, i32 1, i32 3, i32 1) #24
  %8 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 1, ptr nonnull @rcu_stall_kick_kthreads.___rfd_beenhere) #24, !srcloc !1729
  %asmresult.i.i = extractvalue { i32, i32 } %8, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1730
  %tobool60.not = icmp eq i32 %asmresult.i.i, 0
  br i1 %tobool60.not, label %if.then61, label %do.end77

if.then61:                                        ; preds = %land.lhs.true58
  tail call void @tracing_off() #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress to i32))
  %9 = load i32, ptr @rcu_cpu_stall_suppress, align 4
  %tobool63.not = icmp eq i32 %9, 0
  br i1 %tobool63.not, label %if.then64, label %do.end67

if.then64:                                        ; preds = %if.then61
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress to i32))
  store i32 3, ptr @rcu_cpu_stall_suppress, align 4
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %if.then61
  tail call void @ftrace_dump(i32 noundef 1) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress to i32))
  %10 = load i32, ptr @rcu_cpu_stall_suppress, align 4
  %cmp69 = icmp eq i32 %10, 3
  br i1 %cmp69, label %if.then71, label %do.end77

if.then71:                                        ; preds = %do.end67
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress to i32))
  store i32 0, ptr @rcu_cpu_stall_suppress, align 4
  br label %do.end77

do.end77:                                         ; preds = %if.then71, %do.end67, %land.lhs.true58, %if.end47
  %11 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 8), align 4
  %call78 = tail call i32 @wake_up_process(ptr noundef %11) #24
  %add = add i32 %1, 100
  store volatile i32 %add, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 27), align 4
  br label %cleanup

cleanup:                                          ; preds = %do.end77, %do.end11, %land.lhs.true, %do.end4, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @tracing_off() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @ftrace_dump(i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_inkernel_boot_has_ended() local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rcu_stall_warning(ptr noundef %rcuname, ptr noundef %msg) unnamed_addr #7 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_stall_warning, i32 0, i32 1), ptr blockaddress(@trace_rcu_stall_warning, %do.body)) #24
          to label %if.end48 [label %do.body], !srcloc !1665

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2005
  %call42 = tail call i32 @__traceiter_rcu_stall_warning(ptr noundef null, ptr noundef %rcuname, ptr noundef %msg) #24
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2006
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !1646

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1668
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_stall_warning, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_stall_warning, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #24
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rcu_stall_warning.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_rcu_stall_warning.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.128, i32 noundef 462, ptr noundef nonnull @.str.129) #24
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1669
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_cpu_stall_info(i32 noundef %cpu) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr @rcu_data to i32)
  %2 = inttoptr i32 %add to ptr
  tail call void @touch_softlockup_watchdog() #24
  %3 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %4 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %2, align 128
  %sub = sub i32 %3, %5
  %shr.i = lshr i32 %sub, 2
  %tobool.not = icmp ult i32 %sub, 4
  br i1 %tobool.not, label %if.else, label %if.end

if.else:                                          ; preds = %entry
  %ticks_this_gp = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 9
  %6 = ptrtoint ptr %ticks_this_gp to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ticks_this_gp, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %entry
  %ticks_value.0 = phi i32 [ %7, %if.else ], [ %shr.i, %entry ]
  %ticks_title.0 = phi ptr [ @.str.196, %if.else ], [ @.str.195, %entry ]
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 7
  %8 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %mynode, align 16
  %gp_seq2 = getelementptr inbounds %struct.rcu_node, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %gp_seq2 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %gp_seq2, align 4
  %rcu_iw_gp_seq = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 62
  %12 = ptrtoint ptr %rcu_iw_gp_seq to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rcu_iw_gp_seq, align 8
  %sub3 = sub i32 %11, %13
  %shr.i77 = lshr i32 %sub3, 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %14 = load volatile i32, ptr @jiffies, align 128
  %15 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 31), align 4
  %sub.i = sub i32 %14, %15
  %cmp.i = icmp ugt i32 %sub.i, 200
  br i1 %cmp.i, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1650
  %dynticks.i = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 21
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dynticks.i, i32 noundef 4) #24
  %16 = ptrtoint ptr %dynticks.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %dynticks.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1651
  %and.i = and i32 %17, 1
  %tobool.not.i = icmp eq i32 %and.i, 0
  %phi.sel = select i1 %tobool.not.i, ptr @.str.203, ptr @.str.204
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %18 = phi ptr [ @.str.204, %if.end ], [ %phi.sel, %land.rhs ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %19 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %19, %cpu
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %land.end
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %land.end
  %div3.i.i.i = lshr i32 %cpu, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %20 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i = and i32 %cpu, 31
  %22 = lshr i32 %21, %and.i.i.i
  %23 = and i32 %22, 1
  %arrayidx14 = getelementptr [3 x i8], ptr @.str.199, i32 0, i32 %23
  %24 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %arrayidx14, align 1
  %grpmask = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 8
  %26 = ptrtoint ptr %grpmask to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %grpmask, align 4
  %28 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %mynode, align 16
  %qsmaskinit = getelementptr inbounds %struct.rcu_node, ptr %29, i32 0, i32 6
  %30 = ptrtoint ptr %qsmaskinit to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %qsmaskinit, align 64
  %and = and i32 %31, %27
  %tobool16 = icmp ne i32 %and, 0
  %lnot.ext20 = zext i1 %tobool16 to i32
  %arrayidx21 = getelementptr [3 x i8], ptr @.str.200, i32 0, i32 %lnot.ext20
  %32 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %arrayidx21, align 1
  %qsmaskinitnext = getelementptr inbounds %struct.rcu_node, ptr %29, i32 0, i32 7
  %34 = ptrtoint ptr %qsmaskinitnext to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %qsmaskinitnext, align 4
  %and25 = and i32 %35, %27
  %tobool26 = icmp ne i32 %and25, 0
  %lnot.ext30 = zext i1 %tobool26 to i32
  %arrayidx31 = getelementptr [3 x i8], ptr @.str.201, i32 0, i32 %lnot.ext30
  %36 = ptrtoint ptr %arrayidx31 to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %arrayidx31, align 1
  %rcu_iw_pending = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 61
  %38 = ptrtoint ptr %rcu_iw_pending to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %rcu_iw_pending, align 4, !range !1644
  %tobool33.not = icmp eq i8 %39, 0
  br i1 %tobool33.not, label %cond.false39, label %cond.true

cond.true:                                        ; preds = %cpu_online.exit
  %cmp = icmp ult i32 %sub3, 36
  %phi.bo = add nuw nsw i32 %shr.i77, 48
  %cond = select i1 %cmp, i32 %phi.bo, i32 57
  br label %cond.end45

cond.false39:                                     ; preds = %cpu_online.exit
  %tobool40.not = icmp ult i32 %sub3, 4
  %lnot.ext42 = zext i1 %tobool40.not to i32
  %arrayidx43 = getelementptr [3 x i8], ptr @.str.202, i32 0, i32 %lnot.ext42
  %40 = ptrtoint ptr %arrayidx43 to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %arrayidx43, align 1
  %conv44 = zext i8 %41 to i32
  br label %cond.end45

cond.end45:                                       ; preds = %cond.false39, %cond.true
  %cond46 = phi i32 [ %cond, %cond.true ], [ %conv44, %cond.false39 ]
  %conv32 = zext i8 %37 to i32
  %conv22 = zext i8 %33 to i32
  %conv = zext i8 %25 to i32
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1650
  %dynticks.i78 = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 21
  %call.i.i.i79 = tail call zeroext i1 @__kasan_check_read(ptr noundef %dynticks.i78, i32 noundef 4) #24
  %42 = ptrtoint ptr %dynticks.i78 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %dynticks.i78, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1651
  %and48 = and i32 %43, 4095
  %dynticks_nesting = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 19
  %44 = ptrtoint ptr %dynticks_nesting to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %dynticks_nesting, align 4
  %dynticks_nmi_nesting = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 20
  %46 = ptrtoint ptr %dynticks_nmi_nesting to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %dynticks_nmi_nesting, align 16
  %softirq_snap = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 59
  %48 = ptrtoint ptr %softirq_snap to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %softirq_snap, align 16
  %50 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %arrayidx, align 4
  %add.i = add i32 %51, ptrtoint (ptr @kstat to i32)
  %52 = inttoptr i32 %add.i to ptr
  %arrayidx2.i = getelementptr %struct.kernel_stat, ptr %52, i32 0, i32 1, i32 9
  %53 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %arrayidx2.i, align 4
  %55 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 28), align 16
  %56 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 35), align 4
  %sub52 = sub i32 %55, %56
  %call56 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.197, i32 noundef %cpu, i32 noundef %conv, i32 noundef %conv22, i32 noundef %conv32, i32 noundef %cond46, i32 noundef %ticks_value.0, ptr noundef nonnull %ticks_title.0, i32 noundef %and48, i32 noundef %45, i32 noundef %47, i32 noundef %49, i32 noundef %54, i32 noundef %sub52, ptr noundef nonnull %18) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_check_gp_kthread_expired_fqs_timer() unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 8), align 4
  %1 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 11), align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2007
  %2 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 26), align 8
  %cmp = icmp eq i16 %1, 5
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %add = add i32 %2, 200
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %3 = load volatile i32, ptr @jiffies, align 128
  %sub = sub i32 %add, %3
  %cmp10 = icmp sgt i32 %sub, -1
  %tobool.not = icmp eq ptr %0, null
  %or.cond = select i1 %cmp10, i1 true, i1 %tobool.not
  br i1 %or.cond, label %if.end, label %do.end16

do.end16:                                         ; preds = %land.lhs.true
  %on_rq = getelementptr inbounds %struct.task_struct, ptr %0, i32 0, i32 12
  %4 = ptrtoint ptr %on_rq to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %on_rq, align 4
  %tobool18.not = icmp eq i32 %5, 0
  br i1 %tobool18.not, label %if.then, label %if.end

if.then:                                          ; preds = %do.end16
  %stack.i = getelementptr inbounds %struct.task_struct, ptr %0, i32 0, i32 1
  %6 = ptrtoint ptr %stack.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %stack.i, align 4
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %cpu.i, align 4
  %10 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %11 = load volatile i32, ptr @jiffies, align 128
  %sub23 = sub i32 %11, %2
  %12 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %13 = load i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %conv27 = sext i16 %13 to i32
  %14 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %0, align 128
  %call36 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.205, ptr noundef %10, i32 noundef %sub23, i32 noundef %12, i32 noundef %conv27, ptr noundef nonnull @.str.412, i32 noundef 5, i32 noundef %15) #27
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %9
  %16 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %17, ptrtoint (ptr @kstat to i32)
  %18 = inttoptr i32 %add.i to ptr
  %arrayidx2.i = getelementptr %struct.kernel_stat, ptr %18, i32 0, i32 1, i32 1
  %19 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx2.i, align 4
  %call42 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.208, i32 noundef %9, i32 noundef %20) #27
  br label %if.end

if.end:                                           ; preds = %if.then, %do.end16, %land.lhs.true, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_check_gp_kthread_starvation() unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 8), align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %1 = load volatile i32, ptr @jiffies, align 128
  %2 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 31), align 4
  %sub.i = sub i32 %1, %2
  %cmp.i = icmp ugt i32 %sub.i, 200
  br i1 %cmp.i, label %if.then, label %if.end66

if.then:                                          ; preds = %entry
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.then
  %stack.i = getelementptr inbounds %struct.task_struct, ptr %0, i32 0, i32 1
  %3 = ptrtoint ptr %stack.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %stack.i, align 4
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %cpu.i, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.then
  %cond = phi i32 [ %6, %cond.true ], [ -1, %if.then ]
  %7 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %8 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %9 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %conv = sext i16 %9 to i32
  %10 = load i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 11), align 2
  %cmp3.i = icmp ugt i16 %10, 8
  br i1 %cmp3.i, label %gp_state_getname.exit, label %if.end.i

if.end.i:                                         ; preds = %cond.end
  %conv7.i = zext i16 %10 to i32
  %arrayidx.i = getelementptr [9 x ptr], ptr @gp_state_names, i32 0, i32 %conv7.i
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx.i, align 4
  br label %gp_state_getname.exit

gp_state_getname.exit:                            ; preds = %if.end.i, %cond.end
  %retval.0.i = phi ptr [ %12, %if.end.i ], [ @.str.406, %cond.end ]
  %13 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 11), align 2
  %conv17 = sext i16 %13 to i32
  br i1 %tobool.not, label %if.end66.critedge, label %cond.true19

cond.true19:                                      ; preds = %gp_state_getname.exit
  %14 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %0, align 128
  %call30.c78 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.210, ptr noundef %7, i32 noundef %sub.i, i32 noundef %8, i32 noundef %conv, ptr noundef %retval.0.i, i32 noundef %conv17, i32 noundef %15, i32 noundef %cond) #27
  %16 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %call37 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.213, ptr noundef %16) #27
  %call42 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.216) #27
  tail call void @sched_show_task(ptr noundef nonnull %0) #24
  %cmp = icmp sgt i32 %cond, -1
  br i1 %cmp, label %if.then44, label %if.end63

if.then44:                                        ; preds = %cond.true19
  %call45 = tail call fastcc zeroext i1 @cpu_online(i32 noundef %cond)
  br i1 %call45, label %do.end57, label %do.end52, !prof !1646

do.end52:                                         ; preds = %if.then44
  %call54 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.219, i32 noundef %cond) #27
  br label %if.end63

do.end57:                                         ; preds = %if.then44
  %call59 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.222) #27
  %rem.i.i = and i32 %cond, 31
  %add.i.i = add nuw nsw i32 %rem.i.i, 1
  %arrayidx.i.i = getelementptr [33 x [1 x i32]], ptr @cpu_bit_bitmap, i32 0, i32 %add.i.i
  %div3.i.i = lshr i32 %cond, 5
  %idx.neg.i.i = sub nsw i32 0, %div3.i.i
  %add.ptr.i.i = getelementptr i32, ptr %arrayidx.i.i, i32 %idx.neg.i.i
  tail call void @arch_trigger_cpumask_backtrace(ptr noundef %add.ptr.i.i, i1 noundef zeroext false) #24
  br label %if.end63

if.end63:                                         ; preds = %do.end57, %do.end52, %cond.true19
  %call64 = tail call i32 @wake_up_process(ptr noundef nonnull %0) #24
  br label %if.end66

if.end66.critedge:                                ; preds = %gp_state_getname.exit
  %call30.c = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.210, ptr noundef %7, i32 noundef %sub.i, i32 noundef %8, i32 noundef %conv, ptr noundef %retval.0.i, i32 noundef %conv17, i32 noundef -1, i32 noundef %cond) #27
  br label %if.end66

if.end66:                                         ; preds = %if.end66.critedge, %if.end63, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_dump_cpu_stacks() unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @rcu_num_lvls, align 4
  %sub = add i32 %0, -1
  %arrayidx = getelementptr %struct.rcu_state, ptr @rcu_state, i32 0, i32 1, i32 %sub
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %arrayidx, align 4
  %3 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx1252 = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %3
  %cmp253 = icmp ult ptr %2, %arrayidx1252
  br i1 %cmp253, label %do.body2, label %for.end215

do.body2:                                         ; preds = %if.end193, %entry
  %rnp.0254 = phi ptr [ %incdec.ptr, %if.end193 ], [ %2, %entry ]
  %call = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %rnp.0254) #24
  %level = getelementptr inbounds %struct.rcu_node, ptr %rnp.0254, i32 0, i32 18
  %4 = ptrtoint ptr %level to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %level, align 1
  %conv9 = zext i8 %5 to i32
  %6 = load i32, ptr @rcu_num_lvls, align 4
  %sub10 = add i32 %6, -1
  %cmp11.not = icmp eq i32 %sub10, %conv9
  br i1 %cmp11.not, label %if.end45, label %land.rhs

land.rhs:                                         ; preds = %do.body2
  %.b236 = load i1, ptr @rcu_dump_cpu_stacks.__already_done, align 1
  br i1 %.b236, label %if.end45, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @rcu_dump_cpu_stacks.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 339, i32 noundef 9, ptr noundef null) #24
  br label %if.end45

if.end45:                                         ; preds = %if.then, %land.rhs, %do.body2
  %grplo = getelementptr inbounds %struct.rcu_node, ptr %rnp.0254, i32 0, i32 15
  %7 = ptrtoint ptr %grplo to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %grplo, align 4
  %sub53 = add i32 %8, -1
  %call54 = tail call i32 @cpumask_next(i32 noundef %sub53, ptr noundef nonnull @__cpu_possible_mask) #28
  %grphi = getelementptr inbounds %struct.rcu_node, ptr %rnp.0254, i32 0, i32 16
  %9 = ptrtoint ptr %grphi to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %grphi, align 8
  %cmp56.not249 = icmp sgt i32 %call54, %10
  br i1 %cmp56.not249, label %do.body85, label %for.body58.lr.ph

for.body58.lr.ph:                                 ; preds = %if.end45
  %qsmask = getelementptr inbounds %struct.rcu_node, ptr %rnp.0254, i32 0, i32 4
  br label %for.body58

for.body58:                                       ; preds = %for.inc, %for.body58.lr.ph
  %cpu.0250 = phi i32 [ %call54, %for.body58.lr.ph ], [ %call83, %for.inc ]
  %11 = ptrtoint ptr %qsmask to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %qsmask, align 8
  %13 = ptrtoint ptr %grplo to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %grplo, align 4
  %sub60 = sub i32 %cpu.0250, %14
  %shl = shl nuw i32 1, %sub60
  %and = and i32 %shl, %12
  %tobool61.not = icmp eq i32 %and, 0
  br i1 %tobool61.not, label %for.inc, label %if.then62

if.then62:                                        ; preds = %for.body58
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %15 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %15, %cpu.0250
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %if.then62
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %if.then62
  %div3.i.i.i = lshr i32 %cpu.0250, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %16 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i248 = and i32 %cpu.0250, 31
  %18 = shl nuw i32 1, %and.i.i.i248
  %19 = and i32 %17, %18
  %tobool.i.not = icmp eq i32 %19, 0
  br i1 %tobool.i.not, label %do.end75, label %if.else, !prof !1645

do.end75:                                         ; preds = %cpu_online.exit
  %call77 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.224, i32 noundef %cpu.0250) #27
  br label %for.inc

if.else:                                          ; preds = %cpu_online.exit
  %add.i.i = add nuw nsw i32 %and.i.i.i248, 1
  %arrayidx.i.i = getelementptr [33 x [1 x i32]], ptr @cpu_bit_bitmap, i32 0, i32 %add.i.i
  %idx.neg.i.i = sub nsw i32 0, %div3.i.i.i
  %add.ptr.i.i = getelementptr i32, ptr %arrayidx.i.i, i32 %idx.neg.i.i
  tail call void @arch_trigger_cpumask_backtrace(ptr noundef %add.ptr.i.i, i1 noundef zeroext false) #24
  br label %for.inc

for.inc:                                          ; preds = %if.else, %do.end75, %for.body58
  %call83 = tail call i32 @cpumask_next(i32 noundef %cpu.0250, ptr noundef nonnull @__cpu_possible_mask) #28
  %20 = ptrtoint ptr %grphi to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %grphi, align 8
  %cmp56.not = icmp sgt i32 %call83, %21
  br i1 %cmp56.not, label %do.body85, label %for.body58

do.body85:                                        ; preds = %for.inc, %if.end45
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %22 = load i32, ptr @debug_locks, align 4
  %tobool87.not = icmp eq i32 %22, 0
  br i1 %tobool87.not, label %if.end193, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body85
  %23 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %26, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2008
  %27 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %27, -16384
  %28 = inttoptr i32 %and.i to ptr
  %cpu105 = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 3
  %29 = ptrtoint ptr %cpu105 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %cpu105, align 4
  %arrayidx106 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %30
  %31 = ptrtoint ptr %arrayidx106 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %arrayidx106, align 4
  %add = add i32 %32, ptrtoint (ptr @lockdep_recursion to i32)
  %33 = inttoptr i32 %add to ptr
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %33, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2009
  %36 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i240 = and i32 %36, -16384
  %37 = inttoptr i32 %and.i.i.i240 to ptr
  %preempt_count.i.i241 = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 1
  %38 = ptrtoint ptr %preempt_count.i.i241 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %preempt_count.i.i241, align 4
  %sub.i = add i32 %39, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i241, align 4
  %tobool113.not = icmp eq i32 %35, 0
  br i1 %tobool113.not, label %land.rhs114, label %if.end193

land.rhs114:                                      ; preds = %land.lhs.true
  %40 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i242 = and i32 %40, -16384
  %41 = inttoptr i32 %and.i.i.i242 to ptr
  %preempt_count.i.i243 = getelementptr inbounds %struct.thread_info, ptr %41, i32 0, i32 1
  %42 = ptrtoint ptr %preempt_count.i.i243 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %preempt_count.i.i243, align 4
  %add.i244 = add i32 %43, 1
  store volatile i32 %add.i244, ptr %preempt_count.i.i243, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2010
  %44 = ptrtoint ptr %cpu105 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %cpu105, align 4
  %arrayidx138 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %45
  %46 = ptrtoint ptr %arrayidx138 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %arrayidx138, align 4
  %add139 = add i32 %47, ptrtoint (ptr @hardirqs_enabled to i32)
  %48 = inttoptr i32 %add139 to ptr
  %49 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %48, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2011
  %51 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i245 = and i32 %51, -16384
  %52 = inttoptr i32 %and.i.i.i245 to ptr
  %preempt_count.i.i246 = getelementptr inbounds %struct.thread_info, ptr %52, i32 0, i32 1
  %53 = ptrtoint ptr %preempt_count.i.i246 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %preempt_count.i.i246, align 4
  %sub.i247 = add i32 %54, -1
  store volatile i32 %sub.i247, ptr %preempt_count.i.i246, align 4
  %tobool146.not = icmp eq i32 %50, 0
  br i1 %tobool146.not, label %if.end193, label %land.rhs155

land.rhs155:                                      ; preds = %land.rhs114
  %.b234235 = load i1, ptr @rcu_dump_cpu_stacks.__already_done.226, align 1
  br i1 %.b234235, label %if.end193, label %if.then166, !prof !1646

if.then166:                                       ; preds = %land.rhs155
  store i1 true, ptr @rcu_dump_cpu_stacks.__already_done.226, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 346, i32 noundef 9, ptr noundef null) #24
  br label %if.end193

if.end193:                                        ; preds = %if.then166, %land.rhs155, %land.rhs114, %land.lhs.true, %do.body85
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp.0254, i32 noundef %call) #24
  %incdec.ptr = getelementptr %struct.rcu_node, ptr %rnp.0254, i32 1
  %55 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx1 = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %55
  %cmp = icmp ult ptr %incdec.ptr, %arrayidx1
  br i1 %cmp, label %do.body2, label %for.end215

for.end215:                                       ; preds = %if.end193, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rcu_stall_warning(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @touch_softlockup_watchdog() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @sched_show_task(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @dump_cpu_task(i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @arch_trigger_cpumask_backtrace(ptr noundef, i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: cold noreturn null_pointer_is_valid
declare dso_local void @panic(ptr noundef, ...) local_unnamed_addr #17

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rcu_barrier(ptr noundef %rcuname, ptr noundef %s, i32 noundef %cpu, i32 noundef %cnt, i32 noundef %done) unnamed_addr #7 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_barrier, i32 0, i32 1), ptr blockaddress(@trace_rcu_barrier, %do.body)) #24
          to label %if.end49 [label %do.body], !srcloc !1665

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu2 = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu2, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i76 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i76
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end70, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2012
  %call43 = tail call i32 @__traceiter_rcu_barrier(ptr noundef null, ptr noundef %rcuname, ptr noundef %s, i32 noundef %cpu, i32 noundef %cnt, i32 noundef %done) #24
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2013
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i74 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i74 to ptr
  %preempt_count.i.i75 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i75 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i75, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i75, align 4
  br label %if.end49

if.end49:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i77 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i77 to ptr
  %cpu51 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu51 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu51, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i78 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i78, label %cpu_online.exit86, label %land.rhs.i.i.i.i80

land.rhs.i.i.i.i80:                               ; preds = %if.end49
  %.b37.i.i.i.i79 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i79, label %cpu_online.exit86, label %if.then.i.i.i.i81, !prof !1646

if.then.i.i.i.i81:                                ; preds = %land.rhs.i.i.i.i80
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit86

cpu_online.exit86:                                ; preds = %if.then.i.i.i.i81, %land.rhs.i.i.i.i80, %if.end49
  %div3.i.i.i82 = lshr i32 %20, 5
  %arrayidx.i.i.i83 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i82
  %22 = ptrtoint ptr %arrayidx.i.i.i83 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i83, align 4
  %and.i.i.i84 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i84
  %25 = and i32 %23, %24
  %tobool.i85.not = icmp eq i32 %25, 0
  br i1 %tobool.i85.not, label %if.end70, label %if.then53

if.then53:                                        ; preds = %cpu_online.exit86
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1668
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_barrier, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_barrier, i32 0, i32 7), align 4
  %call59 = tail call i32 @rcu_read_lock_sched_held() #24
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %land.lhs.true, label %do.end68

land.lhs.true:                                    ; preds = %if.then53
  %call61 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %do.end68, label %land.lhs.true63

land.lhs.true63:                                  ; preds = %land.lhs.true
  %.b73 = load i1, ptr @trace_rcu_barrier.__warned, align 1
  br i1 %.b73, label %do.end68, label %if.then65

if.then65:                                        ; preds = %land.lhs.true63
  store i1 true, ptr @trace_rcu_barrier.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.128, i32 noundef 835, ptr noundef nonnull @.str.129) #24
  br label %do.end68

do.end68:                                         ; preds = %if.then65, %land.lhs.true63, %land.lhs.true, %if.then53
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1669
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i87 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i87 to ptr
  %preempt_count.i.i.i88 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i88 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i88, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i88, align 4
  br label %if.end70

if.end70:                                         ; preds = %do.end68, %cpu_online.exit86, %cpu_online.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rcu_barrier(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_swait_queue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_barrier_callback(ptr nocapture noundef readnone %rhp) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 17), align 8
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), i32 noundef 4) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1803
  tail call void @llvm.prefetch.p0(ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), i32 1, i32 3, i32 1) #24
  %1 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), i32 1, ptr elementtype(i32) getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15)) #24, !srcloc !1804
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %1, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1805
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.i.i, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr @rcu_barrier_callback.___tp_str, align 4
  %3 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), i32 noundef 4) #24
  %4 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), align 4
  tail call fastcc void @trace_rcu_barrier(ptr noundef %3, ptr noundef %2, i32 noundef -1, i32 noundef %4, i32 noundef %0) #24
  tail call void @complete(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 16)) #24
  br label %if.end

if.else:                                          ; preds = %entry
  %5 = load ptr, ptr @rcu_barrier_callback.___tp_str.248, align 4
  %6 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %call.i.i.i3 = tail call zeroext i1 @__kasan_check_read(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), i32 noundef 4) #24
  %7 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 15), align 4
  tail call fastcc void @trace_rcu_barrier(ptr noundef %6, ptr noundef %5, i32 noundef -1, i32 noundef %7, i32 noundef %0) #24
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_segcblist_entrain(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rcu_quiescent_state_report(ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %mask, i32 noundef %qsmask, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, i32 noundef %gp_tasks) unnamed_addr #7 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_quiescent_state_report, i32 0, i32 1), ptr blockaddress(@trace_rcu_quiescent_state_report, %do.body)) #24
          to label %if.end48 [label %do.body], !srcloc !1665

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2014
  %call42 = tail call i32 @__traceiter_rcu_quiescent_state_report(ptr noundef null, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %mask, i32 noundef %qsmask, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, i32 noundef %gp_tasks) #24
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2015
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !1646

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1668
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_quiescent_state_report, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_quiescent_state_report, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #24
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rcu_quiescent_state_report.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_rcu_quiescent_state_report.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.128, i32 noundef 402, ptr noundef nonnull @.str.129) #24
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1669
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rcu_quiescent_state_report(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i8 noundef zeroext, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_segcblist_advance(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kthread_create_on_node(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: noreturn nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rcu_gp_kthread(ptr nocapture noundef readnone %unused) #18 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %__wait = alloca %struct.swait_queue, align 4
  %0 = getelementptr inbounds %struct.swait_queue, ptr %__wait, i32 0, i32 1
  %1 = getelementptr inbounds %struct.swait_queue, ptr %__wait, i32 0, i32 1, i32 1
  br label %for.cond1

for.cond1:                                        ; preds = %for.cond1.backedge, %entry
  %2 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %3 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %4 = load ptr, ptr @rcu_gp_kthread.___tp_str, align 4
  call fastcc void @trace_rcu_grace_period(ptr noundef %2, i32 noundef %3, ptr noundef %4)
  store volatile i16 1, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 11), align 2
  %5 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %6 = and i16 %5, 1
  %tobool.not = icmp eq i16 %6, 0
  br i1 %tobool.not, label %if.end, label %do.end21

if.end:                                           ; preds = %for.cond1
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %__wait) #24
  %7 = ptrtoint ptr %__wait to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr inttoptr (i32 -1 to ptr), ptr %__wait, align 4, !annotation !1767
  %8 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %0, ptr %0, align 4
  %9 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %0, ptr %1, align 4
  %call193 = call i32 @prepare_to_swait_event(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 9), ptr noundef nonnull %__wait, i32 noundef 1026) #24
  %10 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %11 = and i16 %10, 1
  %tobool16.not194 = icmp eq i16 %11, 0
  br i1 %tobool16.not194, label %cleanup, label %for.end

cleanup:                                          ; preds = %cleanup, %if.end
  call void @schedule() #24
  %call = call i32 @prepare_to_swait_event(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 9), ptr noundef nonnull %__wait, i32 noundef 1026) #24
  %12 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %13 = and i16 %12, 1
  %tobool16.not = icmp eq i16 %13, 0
  br i1 %tobool16.not, label %cleanup, label %for.end

for.end:                                          ; preds = %cleanup, %if.end
  call void @finish_swait(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 9), ptr noundef nonnull %__wait) #24
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %__wait) #24
  br label %do.end21

do.end21:                                         ; preds = %for.end, %for.cond1
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull @sleep_duration, i32 noundef 4) #24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2016
  call void @llvm.prefetch.p0(ptr nonnull @sleep_duration, i32 1, i32 3, i32 1) #24
  %14 = call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr nonnull @sleep_duration) #24, !srcloc !1729
  %asmresult.i.i = extractvalue { i32, i32 } %14, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2017
  %cmp.not.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.not.i, label %rcu_gp_torture_wait.exit, label %do.end17.i

do.end17.i:                                       ; preds = %do.end21
  %call19.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.263, ptr noundef nonnull @.str.264, i32 noundef %asmresult.i.i) #27
  %call20.i = call i32 @schedule_timeout_idle(i32 noundef %asmresult.i.i) #24
  %call25.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.266, ptr noundef nonnull @.str.264) #27
  br label %rcu_gp_torture_wait.exit

rcu_gp_torture_wait.exit:                         ; preds = %do.end17.i, %do.end21
  store volatile i16 2, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 11), align 2
  %call31 = call fastcc zeroext i1 @rcu_gp_init()
  br i1 %call31, label %for.end167, label %do.end39

do.end39:                                         ; preds = %rcu_gp_torture_wait.exit
  %15 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %15, -16384
  %16 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 2
  %17 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %task, align 8
  %rcu_tasks_holdout = getelementptr inbounds %struct.task_struct, ptr %18, i32 0, i32 40
  %19 = ptrtoint ptr %rcu_tasks_holdout to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load volatile i8, ptr %rcu_tasks_holdout, align 4
  %tobool43.not = icmp eq i8 %20, 0
  br i1 %tobool43.not, label %do.end63, label %do.body49

do.body49:                                        ; preds = %do.end39
  %21 = ptrtoint ptr %rcu_tasks_holdout to i32
  call void @__asan_store1_noabort(i32 %21)
  store volatile i8 0, ptr %rcu_tasks_holdout, align 4
  br label %do.end63

do.end63:                                         ; preds = %do.body49, %do.end39
  %22 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task, align 8
  %trc_reader_checked = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 47
  %24 = ptrtoint ptr %trc_reader_checked to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load volatile i8, ptr %trc_reader_checked, align 64, !range !1644
  %tobool67.not = icmp eq i8 %25, 0
  br i1 %tobool67.not, label %do.end73, label %do.end119, !prof !1645

do.end73:                                         ; preds = %do.end63
  %trc_reader_nesting = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 44
  %26 = ptrtoint ptr %trc_reader_nesting to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %trc_reader_nesting, align 4
  %tobool77.not = icmp eq i32 %27, 0
  br i1 %tobool77.not, label %do.end92, label %do.end119, !prof !1646

do.end92:                                         ; preds = %do.end73
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2018
  %28 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %task, align 8
  %trc_reader_checked100 = getelementptr inbounds %struct.task_struct, ptr %29, i32 0, i32 47
  %30 = ptrtoint ptr %trc_reader_checked100 to i32
  call void @__asan_store1_noabort(i32 %30)
  store volatile i8 1, ptr %trc_reader_checked100, align 64
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2019
  br label %do.end119

do.end119:                                        ; preds = %do.end92, %do.end73, %do.end63
  call void @__might_resched(ptr noundef nonnull @.str, i32 noundef 2128, i32 noundef 0) #24
  %call.i = call i32 @__cond_resched() #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %31 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %31, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 31), align 4
  %32 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %task, align 8
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %stack.i.i, align 4
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %35, align 4
  %38 = and i32 %37, 256
  %tobool.not.i = icmp eq i32 %38, 0
  br i1 %tobool.not.i, label %signal_pending.exit, label %do.end152, !prof !1646

signal_pending.exit:                              ; preds = %do.end119
  %39 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %35, align 4
  %and1.i.i.i.i.i = and i32 %40, 1
  %tobool136.not = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool136.not, label %if.end158, label %do.end152, !prof !1646

do.end152:                                        ; preds = %signal_pending.exit, %do.end119
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2130, i32 noundef 9, ptr noundef null) #24
  br label %if.end158

if.end158:                                        ; preds = %do.end152, %signal_pending.exit
  %41 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %42 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %43 = load ptr, ptr @rcu_gp_kthread.___tp_str.261, align 4
  call fastcc void @trace_rcu_grace_period(ptr noundef %41, i32 noundef %42, ptr noundef %43)
  br label %for.cond1.backedge

for.cond1.backedge:                               ; preds = %for.end167, %if.end158
  br label %for.cond1

for.end167:                                       ; preds = %rcu_gp_torture_wait.exit
  call fastcc void @rcu_gp_fqs_loop()
  store volatile i16 7, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 11), align 2
  call fastcc void @rcu_gp_cleanup()
  store volatile i16 8, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 11), align 2
  br label %for.cond1.backedge
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sched_setscheduler_nocheck(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_spawn_nocb_kthreads() unnamed_addr #9 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %.b3 = load i1, ptr @rcu_nocb_is_setup, align 1
  br i1 %.b3, label %for.cond.preheader, label %if.end

for.cond.preheader:                               ; preds = %entry
  %call4 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %cmp5 = icmp ult i32 %call4, %0
  br i1 %cmp5, label %for.body, label %if.end

for.body:                                         ; preds = %for.body, %for.cond.preheader
  %call6 = phi i32 [ %call, %for.body ], [ %call4, %for.cond.preheader ]
  tail call fastcc void @rcu_spawn_cpu_nocb_kthread(i32 noundef %call6)
  %call = tail call i32 @cpumask_next(i32 noundef %call6, ptr noundef nonnull @__cpu_online_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %1 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call, %1
  br i1 %cmp, label %for.body, label %if.end

if.end:                                           ; preds = %for.body, %for.cond.preheader, %entry
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_spawn_core_kthreads() unnamed_addr #9 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call3 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %cmp4 = icmp ult i32 %call3, %0
  br i1 %cmp4, label %do.body, label %for.end

do.body:                                          ; preds = %do.body, %entry
  %call5 = phi i32 [ %call, %do.body ], [ %call3, %entry ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call5
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %arrayidx, align 4
  %add = add i32 %2, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 58) to i32)
  %3 = inttoptr i32 %add to ptr
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %3, align 1
  %call = tail call i32 @cpumask_next(i32 noundef %call5, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %5 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call, %5
  br i1 %cmp, label %do.body, label %for.end

for.end:                                          ; preds = %do.body, %entry
  %6 = load i8, ptr @use_softirq, align 1, !range !1644
  %tobool.not = icmp eq i8 %6, 0
  br i1 %tobool.not, label %if.end, label %cleanup

if.end:                                           ; preds = %for.end
  %call2 = tail call i32 @smpboot_register_percpu_thread(ptr noundef nonnull @rcu_cpu_thread_spec) #24
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %cleanup, label %land.rhs

land.rhs:                                         ; preds = %if.end
  %.b1 = load i1, ptr @rcu_spawn_core_kthreads.__already_done, align 1
  br i1 %.b1, label %cleanup, label %if.then11, !prof !1646

if.then11:                                        ; preds = %land.rhs
  store i1 true, ptr @rcu_spawn_core_kthreads.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2900, i32 noundef 9, ptr noundef nonnull @.str.311, ptr noundef nonnull @__func__.rcu_spawn_core_kthreads) #24
  br label %cleanup

cleanup:                                          ; preds = %if.then11, %land.rhs, %if.end, %for.end
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @prepare_to_swait_event(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_swait(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @rcu_gp_init() unnamed_addr #19 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %0 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %0, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 31), align 4
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @rcu_state) #24
  %1 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %tobool.not = icmp eq i16 %1, 0
  br i1 %tobool.not, label %do.body17, label %do.body127

do.body17:                                        ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  %tobool18.not = icmp eq i32 %2, 0
  br i1 %tobool18.not, label %if.end109, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body17
  %3 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %6, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2020
  %7 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, ptrtoint (ptr @lockdep_recursion to i32)
  %13 = inttoptr i32 %add to ptr
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %13, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2021
  %16 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1206 = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i.i1206 to ptr
  %preempt_count.i.i1207 = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %preempt_count.i.i1207 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %preempt_count.i.i1207, align 4
  %sub.i = add i32 %19, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i1207, align 4
  %tobool42.not = icmp eq i32 %15, 0
  br i1 %tobool42.not, label %land.rhs, label %if.end109

land.rhs:                                         ; preds = %land.lhs.true
  %20 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1208 = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i1208 to ptr
  %preempt_count.i.i1209 = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i1209 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i1209, align 4
  %add.i1210 = add i32 %23, 1
  store volatile i32 %add.i1210, ptr %preempt_count.i.i1209, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2022
  %24 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %cpu, align 4
  %arrayidx66 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %25
  %26 = ptrtoint ptr %arrayidx66 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx66, align 4
  %add67 = add i32 %27, ptrtoint (ptr @hardirqs_enabled to i32)
  %28 = inttoptr i32 %add67 to ptr
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %28, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2023
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1211 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i1211 to ptr
  %preempt_count.i.i1212 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i1212 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i1212, align 4
  %sub.i1213 = add i32 %34, -1
  store volatile i32 %sub.i1213, ptr %preempt_count.i.i1212, align 4
  %tobool74.not = icmp eq i32 %30, 0
  br i1 %tobool74.not, label %if.end109, label %land.rhs77

land.rhs77:                                       ; preds = %land.rhs
  %.b1180 = load i1, ptr @rcu_gp_init.__already_done, align 1
  br i1 %.b1180, label %if.end109, label %if.then84, !prof !1646

if.then84:                                        ; preds = %land.rhs77
  store i1 true, ptr @rcu_gp_init.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1753, i32 noundef 9, ptr noundef null) #24
  br label %if.end109

if.end109:                                        ; preds = %if.then84, %land.rhs77, %land.rhs, %land.lhs.true, %do.body17
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @rcu_state) #24
  br label %cleanup

do.body127:                                       ; preds = %entry
  store volatile i16 0, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %35 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %and.i.i = and i32 %35, 3
  %tobool134.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool134.not, label %if.end317, label %land.rhs141

land.rhs141:                                      ; preds = %do.body127
  %.b11741186 = load i1, ptr @rcu_gp_init.__already_done.268, align 1
  br i1 %.b11741186, label %do.body190, label %if.then152, !prof !1646

if.then152:                                       ; preds = %land.rhs141
  store i1 true, ptr @rcu_gp_init.__already_done.268, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1758, i32 noundef 9, ptr noundef null) #24
  br label %do.body190

do.body190:                                       ; preds = %if.then152, %land.rhs141
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %36 = load i32, ptr @debug_locks, align 4
  %tobool192.not = icmp eq i32 %36, 0
  br i1 %tobool192.not, label %if.end304, label %land.lhs.true193

land.lhs.true193:                                 ; preds = %do.body190
  %37 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1214 = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i.i1214 to ptr
  %preempt_count.i.i1215 = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %preempt_count.i.i1215 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %preempt_count.i.i1215, align 4
  %add.i1216 = add i32 %40, 1
  store volatile i32 %add.i1216, ptr %preempt_count.i.i1215, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2024
  %41 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i1274 = and i32 %41, -16384
  %42 = inttoptr i32 %and.i1274 to ptr
  %cpu216 = getelementptr inbounds %struct.thread_info, ptr %42, i32 0, i32 3
  %43 = ptrtoint ptr %cpu216 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %cpu216, align 4
  %arrayidx217 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %44
  %45 = ptrtoint ptr %arrayidx217 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %arrayidx217, align 4
  %add218 = add i32 %46, ptrtoint (ptr @lockdep_recursion to i32)
  %47 = inttoptr i32 %add218 to ptr
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %47, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2025
  %50 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1217 = and i32 %50, -16384
  %51 = inttoptr i32 %and.i.i.i1217 to ptr
  %preempt_count.i.i1218 = getelementptr inbounds %struct.thread_info, ptr %51, i32 0, i32 1
  %52 = ptrtoint ptr %preempt_count.i.i1218 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %preempt_count.i.i1218, align 4
  %sub.i1219 = add i32 %53, -1
  store volatile i32 %sub.i1219, ptr %preempt_count.i.i1218, align 4
  %tobool225.not = icmp eq i32 %49, 0
  br i1 %tobool225.not, label %land.rhs226, label %if.end304

land.rhs226:                                      ; preds = %land.lhs.true193
  %54 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1220 = and i32 %54, -16384
  %55 = inttoptr i32 %and.i.i.i1220 to ptr
  %preempt_count.i.i1221 = getelementptr inbounds %struct.thread_info, ptr %55, i32 0, i32 1
  %56 = ptrtoint ptr %preempt_count.i.i1221 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %preempt_count.i.i1221, align 4
  %add.i1222 = add i32 %57, 1
  store volatile i32 %add.i1222, ptr %preempt_count.i.i1221, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2026
  %58 = ptrtoint ptr %cpu216 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %cpu216, align 4
  %arrayidx250 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %59
  %60 = ptrtoint ptr %arrayidx250 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %arrayidx250, align 4
  %add251 = add i32 %61, ptrtoint (ptr @hardirqs_enabled to i32)
  %62 = inttoptr i32 %add251 to ptr
  %63 = ptrtoint ptr %62 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %62, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2027
  %65 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1223 = and i32 %65, -16384
  %66 = inttoptr i32 %and.i.i.i1223 to ptr
  %preempt_count.i.i1224 = getelementptr inbounds %struct.thread_info, ptr %66, i32 0, i32 1
  %67 = ptrtoint ptr %preempt_count.i.i1224 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %preempt_count.i.i1224, align 4
  %sub.i1225 = add i32 %68, -1
  store volatile i32 %sub.i1225, ptr %preempt_count.i.i1224, align 4
  %tobool258.not = icmp eq i32 %64, 0
  br i1 %tobool258.not, label %if.end304, label %land.rhs266

land.rhs266:                                      ; preds = %land.rhs226
  %.b11751185 = load i1, ptr @rcu_gp_init.__already_done.269, align 1
  br i1 %.b11751185, label %if.end304, label %if.then277, !prof !1646

if.then277:                                       ; preds = %land.rhs266
  store i1 true, ptr @rcu_gp_init.__already_done.269, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1763, i32 noundef 9, ptr noundef null) #24
  br label %if.end304

if.end304:                                        ; preds = %if.then277, %land.rhs266, %land.rhs226, %land.lhs.true193, %do.body190
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @rcu_state) #24
  br label %cleanup

if.end317:                                        ; preds = %do.body127
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %69 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %69, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 29), align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_timeout to i32))
  %70 = load volatile i32, ptr @rcu_cpu_stall_timeout, align 4
  %cmp.i.i = icmp slt i32 %70, 3
  br i1 %cmp.i.i, label %if.end21.sink.split.i.i, label %if.else.i.i

if.else.i.i:                                      ; preds = %if.end317
  %cmp10.i.i = icmp ugt i32 %70, 300
  br i1 %cmp10.i.i, label %if.end21.sink.split.i.i, label %record_gp_stall_check_time.exit

if.end21.sink.split.i.i:                          ; preds = %if.else.i.i, %if.end317
  %.sink.i.i = phi i32 [ 3, %if.end317 ], [ 300, %if.else.i.i ]
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_timeout to i32))
  store volatile i32 %.sink.i.i, ptr @rcu_cpu_stall_timeout, align 4
  br label %record_gp_stall_check_time.exit

record_gp_stall_check_time.exit:                  ; preds = %if.end21.sink.split.i.i, %if.else.i.i
  %till_stall_check.0.i.i = phi i32 [ %70, %if.else.i.i ], [ %.sink.i.i, %if.end21.sink.split.i.i ]
  %mul.i.i = mul nuw nsw i32 %till_stall_check.0.i.i, 100
  %add.i.i = add nuw nsw i32 %mul.i.i, 500
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2028
  %add.i1275 = add i32 %add.i.i, %69
  store volatile i32 %add.i1275, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 33), align 4
  %div29.i = lshr exact i32 %add.i.i, 1
  %add22.i = add i32 %div29.i, %69
  store i32 %add22.i, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 34), align 8
  %71 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 28), align 16
  store i32 %71, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 35), align 4
  %72 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %add.i1276 = add i32 %72, 1
  store volatile i32 %add.i1276, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1780
  %73 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %and.i.i1277 = and i32 %73, 3
  %cmp.not.i = icmp eq i32 %and.i.i1277, 1
  br i1 %cmp.not.i, label %rcu_seq_start.exit, label %land.rhs.i

land.rhs.i:                                       ; preds = %record_gp_stall_check_time.exit
  %.b49.i = load i1, ptr @rcu_seq_start.__already_done, align 1
  br i1 %.b49.i, label %rcu_seq_start.exit, label %if.then.i, !prof !1646

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @rcu_seq_start.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.242, i32 noundef 59, i32 noundef 9, ptr noundef null) #24
  br label %rcu_seq_start.exit

rcu_seq_start.exit:                               ; preds = %if.then.i, %land.rhs.i, %record_gp_stall_check_time.exit
  %74 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %75 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %76 = load ptr, ptr @rcu_gp_init.___tp_str, align 4
  tail call fastcc void @trace_rcu_grace_period(ptr noundef %74, i32 noundef %75, ptr noundef %76)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %77 = load i32, ptr @debug_locks, align 4
  %tobool322.not = icmp eq i32 %77, 0
  br i1 %tobool322.not, label %if.end434, label %land.lhs.true323

land.lhs.true323:                                 ; preds = %rcu_seq_start.exit
  %78 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1226 = and i32 %78, -16384
  %79 = inttoptr i32 %and.i.i.i1226 to ptr
  %preempt_count.i.i1227 = getelementptr inbounds %struct.thread_info, ptr %79, i32 0, i32 1
  %80 = ptrtoint ptr %preempt_count.i.i1227 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load volatile i32, ptr %preempt_count.i.i1227, align 4
  %add.i1228 = add i32 %81, 1
  store volatile i32 %add.i1228, ptr %preempt_count.i.i1227, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2029
  %82 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i1278 = and i32 %82, -16384
  %83 = inttoptr i32 %and.i1278 to ptr
  %cpu346 = getelementptr inbounds %struct.thread_info, ptr %83, i32 0, i32 3
  %84 = ptrtoint ptr %cpu346 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %cpu346, align 4
  %arrayidx347 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %85
  %86 = ptrtoint ptr %arrayidx347 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %arrayidx347, align 4
  %add348 = add i32 %87, ptrtoint (ptr @lockdep_recursion to i32)
  %88 = inttoptr i32 %add348 to ptr
  %89 = ptrtoint ptr %88 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load volatile i32, ptr %88, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2030
  %91 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1229 = and i32 %91, -16384
  %92 = inttoptr i32 %and.i.i.i1229 to ptr
  %preempt_count.i.i1230 = getelementptr inbounds %struct.thread_info, ptr %92, i32 0, i32 1
  %93 = ptrtoint ptr %preempt_count.i.i1230 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load volatile i32, ptr %preempt_count.i.i1230, align 4
  %sub.i1231 = add i32 %94, -1
  store volatile i32 %sub.i1231, ptr %preempt_count.i.i1230, align 4
  %tobool355.not = icmp eq i32 %90, 0
  br i1 %tobool355.not, label %land.rhs356, label %if.end434

land.rhs356:                                      ; preds = %land.lhs.true323
  %95 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1232 = and i32 %95, -16384
  %96 = inttoptr i32 %and.i.i.i1232 to ptr
  %preempt_count.i.i1233 = getelementptr inbounds %struct.thread_info, ptr %96, i32 0, i32 1
  %97 = ptrtoint ptr %preempt_count.i.i1233 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load volatile i32, ptr %preempt_count.i.i1233, align 4
  %add.i1234 = add i32 %98, 1
  store volatile i32 %add.i1234, ptr %preempt_count.i.i1233, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2031
  %99 = ptrtoint ptr %cpu346 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %cpu346, align 4
  %arrayidx380 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %100
  %101 = ptrtoint ptr %arrayidx380 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %arrayidx380, align 4
  %add381 = add i32 %102, ptrtoint (ptr @hardirqs_enabled to i32)
  %103 = inttoptr i32 %add381 to ptr
  %104 = ptrtoint ptr %103 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load volatile i32, ptr %103, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2032
  %106 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1235 = and i32 %106, -16384
  %107 = inttoptr i32 %and.i.i.i1235 to ptr
  %preempt_count.i.i1236 = getelementptr inbounds %struct.thread_info, ptr %107, i32 0, i32 1
  %108 = ptrtoint ptr %preempt_count.i.i1236 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load volatile i32, ptr %preempt_count.i.i1236, align 4
  %sub.i1237 = add i32 %109, -1
  store volatile i32 %sub.i1237, ptr %preempt_count.i.i1236, align 4
  %tobool388.not = icmp eq i32 %105, 0
  br i1 %tobool388.not, label %if.end434, label %land.rhs396

land.rhs396:                                      ; preds = %land.rhs356
  %.b11761184 = load i1, ptr @rcu_gp_init.__already_done.271, align 1
  br i1 %.b11761184, label %if.end434, label %if.then407, !prof !1646

if.then407:                                       ; preds = %land.rhs396
  store i1 true, ptr @rcu_gp_init.__already_done.271, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1773, i32 noundef 9, ptr noundef null) #24
  br label %if.end434

if.end434:                                        ; preds = %if.then407, %land.rhs396, %land.rhs356, %land.lhs.true323, %rcu_seq_start.exit
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @rcu_state) #24
  store volatile i16 3, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 11), align 2
  %110 = load i32, ptr @rcu_num_lvls, align 4
  %sub = add i32 %110, -1
  %arrayidx456 = getelementptr %struct.rcu_state, ptr @rcu_state, i32 0, i32 1, i32 %sub
  %111 = ptrtoint ptr %arrayidx456 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %arrayidx456, align 4
  %113 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx4571307 = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %113
  %cmp1308 = icmp ult ptr %112, %arrayidx4571307
  br i1 %cmp1308, label %do.end461, label %for.end

do.end461:                                        ; preds = %for.inc, %if.end434
  %rnp.01309 = phi ptr [ %incdec.ptr, %for.inc ], [ %112, %if.end434 ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2033
  %ofl_seq = getelementptr inbounds %struct.rcu_node, ptr %rnp.01309, i32 0, i32 8
  %114 = ptrtoint ptr %ofl_seq to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load volatile i32, ptr %ofl_seq, align 8
  %and = and i32 %115, 1
  %tobool468.not = icmp eq i32 %and, 0
  br i1 %tobool468.not, label %do.end481, label %while.cond.preheader

while.cond.preheader:                             ; preds = %do.end461
  %116 = ptrtoint ptr %ofl_seq to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load volatile i32, ptr %ofl_seq, align 8
  %cmp4751306 = icmp eq i32 %115, %117
  br i1 %cmp4751306, label %while.body, label %do.end481

while.body:                                       ; preds = %while.body, %while.cond.preheader
  %call476 = tail call i32 @schedule_timeout_idle(i32 noundef 1) #24
  %118 = ptrtoint ptr %ofl_seq to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load volatile i32, ptr %ofl_seq, align 8
  %cmp475 = icmp eq i32 %115, %119
  br i1 %cmp475, label %while.body, label %do.end481

do.end481:                                        ; preds = %while.body, %while.cond.preheader, %do.end461
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2034
  tail call void @_raw_spin_lock(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 39)) #24
  tail call void @_raw_spin_lock_irq(ptr noundef %rnp.01309) #24
  %qsmaskinit = getelementptr inbounds %struct.rcu_node, ptr %rnp.01309, i32 0, i32 6
  %120 = ptrtoint ptr %qsmaskinit to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %qsmaskinit, align 64
  %qsmaskinitnext = getelementptr inbounds %struct.rcu_node, ptr %rnp.01309, i32 0, i32 7
  %122 = ptrtoint ptr %qsmaskinitnext to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %qsmaskinitnext, align 4
  %cmp491 = icmp eq i32 %121, %123
  br i1 %cmp491, label %land.lhs.true492, label %if.end623

land.lhs.true492:                                 ; preds = %do.end481
  %wait_blkd_tasks = getelementptr inbounds %struct.rcu_node, ptr %rnp.01309, i32 0, i32 19
  %124 = ptrtoint ptr %wait_blkd_tasks to i32
  call void @__asan_load1_noabort(i32 %124)
  %125 = load i8, ptr %wait_blkd_tasks, align 2, !range !1644
  %tobool493.not = icmp eq i8 %125, 0
  br i1 %tobool493.not, label %do.body496, label %if.end623

do.body496:                                       ; preds = %land.lhs.true492
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %126 = load i32, ptr @debug_locks, align 4
  %tobool498.not = icmp eq i32 %126, 0
  br i1 %tobool498.not, label %for.inc, label %land.lhs.true499

land.lhs.true499:                                 ; preds = %do.body496
  %127 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1238 = and i32 %127, -16384
  %128 = inttoptr i32 %and.i.i.i1238 to ptr
  %preempt_count.i.i1239 = getelementptr inbounds %struct.thread_info, ptr %128, i32 0, i32 1
  %129 = ptrtoint ptr %preempt_count.i.i1239 to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load volatile i32, ptr %preempt_count.i.i1239, align 4
  %add.i1240 = add i32 %130, 1
  store volatile i32 %add.i1240, ptr %preempt_count.i.i1239, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2035
  %131 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i1279 = and i32 %131, -16384
  %132 = inttoptr i32 %and.i1279 to ptr
  %cpu522 = getelementptr inbounds %struct.thread_info, ptr %132, i32 0, i32 3
  %133 = ptrtoint ptr %cpu522 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %cpu522, align 4
  %arrayidx523 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %134
  %135 = ptrtoint ptr %arrayidx523 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %arrayidx523, align 4
  %add524 = add i32 %136, ptrtoint (ptr @lockdep_recursion to i32)
  %137 = inttoptr i32 %add524 to ptr
  %138 = ptrtoint ptr %137 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load volatile i32, ptr %137, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2036
  %140 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1241 = and i32 %140, -16384
  %141 = inttoptr i32 %and.i.i.i1241 to ptr
  %preempt_count.i.i1242 = getelementptr inbounds %struct.thread_info, ptr %141, i32 0, i32 1
  %142 = ptrtoint ptr %preempt_count.i.i1242 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load volatile i32, ptr %preempt_count.i.i1242, align 4
  %sub.i1243 = add i32 %143, -1
  store volatile i32 %sub.i1243, ptr %preempt_count.i.i1242, align 4
  %tobool531.not = icmp eq i32 %139, 0
  br i1 %tobool531.not, label %land.rhs532, label %for.inc

land.rhs532:                                      ; preds = %land.lhs.true499
  %144 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1244 = and i32 %144, -16384
  %145 = inttoptr i32 %and.i.i.i1244 to ptr
  %preempt_count.i.i1245 = getelementptr inbounds %struct.thread_info, ptr %145, i32 0, i32 1
  %146 = ptrtoint ptr %preempt_count.i.i1245 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load volatile i32, ptr %preempt_count.i.i1245, align 4
  %add.i1246 = add i32 %147, 1
  store volatile i32 %add.i1246, ptr %preempt_count.i.i1245, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2037
  %148 = ptrtoint ptr %cpu522 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load i32, ptr %cpu522, align 4
  %arrayidx556 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %149
  %150 = ptrtoint ptr %arrayidx556 to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %arrayidx556, align 4
  %add557 = add i32 %151, ptrtoint (ptr @hardirqs_enabled to i32)
  %152 = inttoptr i32 %add557 to ptr
  %153 = ptrtoint ptr %152 to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load volatile i32, ptr %152, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2038
  %155 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1247 = and i32 %155, -16384
  %156 = inttoptr i32 %and.i.i.i1247 to ptr
  %preempt_count.i.i1248 = getelementptr inbounds %struct.thread_info, ptr %156, i32 0, i32 1
  %157 = ptrtoint ptr %preempt_count.i.i1248 to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load volatile i32, ptr %preempt_count.i.i1248, align 4
  %sub.i1249 = add i32 %158, -1
  store volatile i32 %sub.i1249, ptr %preempt_count.i.i1248, align 4
  %tobool564.not = icmp eq i32 %154, 0
  br i1 %tobool564.not, label %for.inc, label %land.rhs572

land.rhs572:                                      ; preds = %land.rhs532
  %.b11771183 = load i1, ptr @rcu_gp_init.__already_done.272, align 1
  br i1 %.b11771183, label %for.inc, label %for.inc.sink.split, !prof !1646

if.end623:                                        ; preds = %land.lhs.true492, %do.end481
  %159 = ptrtoint ptr %qsmaskinit to i32
  call void @__asan_store4_noabort(i32 %159)
  store i32 %123, ptr %qsmaskinit, align 64
  %tobool627.not = icmp eq i32 %121, 0
  %tobool631.not = icmp ne i32 %123, 0
  %cmp634.not = xor i1 %tobool627.not, %tobool631.not
  br i1 %cmp634.not, label %if.end648, label %if.then635

if.then635:                                       ; preds = %if.end623
  br i1 %tobool627.not, label %if.then637, label %if.else

if.then637:                                       ; preds = %if.then635
  %wait_blkd_tasks638 = getelementptr inbounds %struct.rcu_node, ptr %rnp.01309, i32 0, i32 19
  %160 = ptrtoint ptr %wait_blkd_tasks638 to i32
  call void @__asan_load1_noabort(i32 %160)
  %161 = load i8, ptr %wait_blkd_tasks638, align 2, !range !1644
  %tobool639.not = icmp eq i8 %161, 0
  br i1 %tobool639.not, label %if.then640, label %if.end648

if.then640:                                       ; preds = %if.then637
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %162 = load i32, ptr @debug_locks, align 4
  %tobool.not.i = icmp eq i32 %162, 0
  br i1 %tobool.not.i, label %for.cond.i.preheader, label %land.rhs.i1281

land.rhs.i1281:                                   ; preds = %if.then640
  %dep_map.i = getelementptr inbounds %struct.raw_spinlock, ptr %rnp.01309, i32 0, i32 4
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #24
  %cmp.not.i1280 = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i1280, label %do.end.i, label %if.end.i, !prof !1645

do.end.i:                                         ; preds = %land.rhs.i1281
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4114, i32 noundef 9, ptr noundef null) #24
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i1281
  %163 = ptrtoint ptr %wait_blkd_tasks638 to i32
  call void @__asan_load1_noabort(i32 %163)
  %.pr = load i8, ptr %wait_blkd_tasks638, align 2
  %tobool24.not.i = icmp eq i8 %.pr, 0
  br i1 %tobool24.not.i, label %for.cond.i.preheader, label %land.rhs30.i

land.rhs30.i:                                     ; preds = %if.end.i
  %.b226.i = load i1, ptr @rcu_init_new_rnp.__already_done, align 1
  br i1 %.b226.i, label %for.cond.i.preheader, label %if.then41.i, !prof !1646

if.then41.i:                                      ; preds = %land.rhs30.i
  store i1 true, ptr @rcu_init_new_rnp.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4115, i32 noundef 9, ptr noundef null) #24
  br label %for.cond.i.preheader

for.cond.i.preheader:                             ; preds = %if.then41.i, %land.rhs30.i, %if.end.i, %if.then640
  br label %for.cond.i

for.cond.i:                                       ; preds = %if.end193.i, %for.cond.i.preheader
  %rnp.0.i = phi ptr [ %165, %if.end193.i ], [ %rnp.01309, %for.cond.i.preheader ]
  %parent.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0.i, i32 0, i32 20
  %164 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %parent.i, align 16
  %cmp76.i = icmp eq ptr %165, null
  br i1 %cmp76.i, label %if.end648, label %do.body79.i

do.body79.i:                                      ; preds = %for.cond.i
  %grpmask.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0.i, i32 0, i32 14
  %166 = ptrtoint ptr %grpmask.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load i32, ptr %grpmask.i, align 32
  tail call void @_raw_spin_lock(ptr noundef nonnull %165) #24
  %qsmaskinit.i = getelementptr inbounds %struct.rcu_node, ptr %165, i32 0, i32 6
  %168 = ptrtoint ptr %qsmaskinit.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %qsmaskinit.i, align 64
  %or.i = or i32 %169, %167
  store i32 %or.i, ptr %qsmaskinit.i, align 64
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %170 = load i32, ptr @debug_locks, align 4
  %tobool90.not.i = icmp eq i32 %170, 0
  br i1 %tobool90.not.i, label %if.end193.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.body79.i
  %171 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %171, -16384
  %172 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %172, i32 0, i32 1
  %173 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i1282 = add i32 %174, 1
  store volatile i32 %add.i.i1282, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2039
  %175 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i1283 = and i32 %175, -16384
  %176 = inttoptr i32 %and.i.i1283 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %176, i32 0, i32 3
  %177 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %178
  %179 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %arrayidx.i, align 4
  %add.i1284 = add i32 %180, ptrtoint (ptr @lockdep_recursion to i32)
  %181 = inttoptr i32 %add.i1284 to ptr
  %182 = ptrtoint ptr %181 to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load volatile i32, ptr %181, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2040
  %184 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i230.i = and i32 %184, -16384
  %185 = inttoptr i32 %and.i.i.i230.i to ptr
  %preempt_count.i.i231.i = getelementptr inbounds %struct.thread_info, ptr %185, i32 0, i32 1
  %186 = ptrtoint ptr %preempt_count.i.i231.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load volatile i32, ptr %preempt_count.i.i231.i, align 4
  %sub.i.i = add i32 %187, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i231.i, align 4
  %tobool114.not.i = icmp eq i32 %183, 0
  br i1 %tobool114.not.i, label %land.rhs115.i, label %if.end193.i

land.rhs115.i:                                    ; preds = %land.lhs.true.i
  %188 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i232.i = and i32 %188, -16384
  %189 = inttoptr i32 %and.i.i.i232.i to ptr
  %preempt_count.i.i233.i = getelementptr inbounds %struct.thread_info, ptr %189, i32 0, i32 1
  %190 = ptrtoint ptr %preempt_count.i.i233.i to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load volatile i32, ptr %preempt_count.i.i233.i, align 4
  %add.i234.i = add i32 %191, 1
  store volatile i32 %add.i234.i, ptr %preempt_count.i.i233.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2041
  %192 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %cpu.i, align 4
  %arrayidx139.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %193
  %194 = ptrtoint ptr %arrayidx139.i to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load i32, ptr %arrayidx139.i, align 4
  %add140.i = add i32 %195, ptrtoint (ptr @hardirqs_enabled to i32)
  %196 = inttoptr i32 %add140.i to ptr
  %197 = ptrtoint ptr %196 to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load volatile i32, ptr %196, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2042
  %199 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i235.i = and i32 %199, -16384
  %200 = inttoptr i32 %and.i.i.i235.i to ptr
  %preempt_count.i.i236.i = getelementptr inbounds %struct.thread_info, ptr %200, i32 0, i32 1
  %201 = ptrtoint ptr %preempt_count.i.i236.i to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load volatile i32, ptr %preempt_count.i.i236.i, align 4
  %sub.i237.i = add i32 %202, -1
  store volatile i32 %sub.i237.i, ptr %preempt_count.i.i236.i, align 4
  %tobool147.not.i = icmp eq i32 %198, 0
  br i1 %tobool147.not.i, label %if.end193.i, label %land.rhs155.i

land.rhs155.i:                                    ; preds = %land.rhs115.i
  %.b224225.i = load i1, ptr @rcu_init_new_rnp.__already_done.275, align 1
  br i1 %.b224225.i, label %if.end193.i, label %if.then166.i, !prof !1646

if.then166.i:                                     ; preds = %land.rhs155.i
  store i1 true, ptr @rcu_init_new_rnp.__already_done.275, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4124, i32 noundef 9, ptr noundef null) #24
  br label %if.end193.i

if.end193.i:                                      ; preds = %if.then166.i, %land.rhs155.i, %land.rhs115.i, %land.lhs.true.i, %do.body79.i
  tail call void @_raw_spin_unlock(ptr noundef nonnull %165) #24
  %tobool206.not.i = icmp eq i32 %169, 0
  br i1 %tobool206.not.i, label %for.cond.i, label %if.end648

if.else:                                          ; preds = %if.then635
  tail call fastcc void @rcu_cleanup_dead_rnp(ptr noundef %rnp.01309)
  br label %if.end648

if.end648:                                        ; preds = %if.else, %if.end193.i, %for.cond.i, %if.then637, %if.end623
  %wait_blkd_tasks649 = getelementptr inbounds %struct.rcu_node, ptr %rnp.01309, i32 0, i32 19
  %203 = ptrtoint ptr %wait_blkd_tasks649 to i32
  call void @__asan_load1_noabort(i32 %203)
  %204 = load i8, ptr %wait_blkd_tasks649, align 2, !range !1644
  %tobool650.not = icmp eq i8 %204, 0
  br i1 %tobool650.not, label %do.body663, label %land.lhs.true651

land.lhs.true651:                                 ; preds = %if.end648
  %205 = ptrtoint ptr %wait_blkd_tasks649 to i32
  call void @__asan_store1_noabort(i32 %205)
  store i8 0, ptr %wait_blkd_tasks649, align 2
  %206 = ptrtoint ptr %qsmaskinit to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %qsmaskinit, align 64
  %tobool658.not = icmp eq i32 %207, 0
  br i1 %tobool658.not, label %if.then659, label %do.body663

if.then659:                                       ; preds = %land.lhs.true651
  tail call fastcc void @rcu_cleanup_dead_rnp(ptr noundef %rnp.01309)
  br label %do.body663

do.body663:                                       ; preds = %if.then659, %land.lhs.true651, %if.end648
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %208 = load i32, ptr @debug_locks, align 4
  %tobool665.not = icmp eq i32 %208, 0
  br i1 %tobool665.not, label %for.inc, label %land.lhs.true666

land.lhs.true666:                                 ; preds = %do.body663
  %209 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1250 = and i32 %209, -16384
  %210 = inttoptr i32 %and.i.i.i1250 to ptr
  %preempt_count.i.i1251 = getelementptr inbounds %struct.thread_info, ptr %210, i32 0, i32 1
  %211 = ptrtoint ptr %preempt_count.i.i1251 to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load volatile i32, ptr %preempt_count.i.i1251, align 4
  %add.i1252 = add i32 %212, 1
  store volatile i32 %add.i1252, ptr %preempt_count.i.i1251, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2043
  %213 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i1285 = and i32 %213, -16384
  %214 = inttoptr i32 %and.i1285 to ptr
  %cpu689 = getelementptr inbounds %struct.thread_info, ptr %214, i32 0, i32 3
  %215 = ptrtoint ptr %cpu689 to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load i32, ptr %cpu689, align 4
  %arrayidx690 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %216
  %217 = ptrtoint ptr %arrayidx690 to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load i32, ptr %arrayidx690, align 4
  %add691 = add i32 %218, ptrtoint (ptr @lockdep_recursion to i32)
  %219 = inttoptr i32 %add691 to ptr
  %220 = ptrtoint ptr %219 to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load volatile i32, ptr %219, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2044
  %222 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1253 = and i32 %222, -16384
  %223 = inttoptr i32 %and.i.i.i1253 to ptr
  %preempt_count.i.i1254 = getelementptr inbounds %struct.thread_info, ptr %223, i32 0, i32 1
  %224 = ptrtoint ptr %preempt_count.i.i1254 to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load volatile i32, ptr %preempt_count.i.i1254, align 4
  %sub.i1255 = add i32 %225, -1
  store volatile i32 %sub.i1255, ptr %preempt_count.i.i1254, align 4
  %tobool698.not = icmp eq i32 %221, 0
  br i1 %tobool698.not, label %land.rhs699, label %for.inc

land.rhs699:                                      ; preds = %land.lhs.true666
  %226 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1256 = and i32 %226, -16384
  %227 = inttoptr i32 %and.i.i.i1256 to ptr
  %preempt_count.i.i1257 = getelementptr inbounds %struct.thread_info, ptr %227, i32 0, i32 1
  %228 = ptrtoint ptr %preempt_count.i.i1257 to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load volatile i32, ptr %preempt_count.i.i1257, align 4
  %add.i1258 = add i32 %229, 1
  store volatile i32 %add.i1258, ptr %preempt_count.i.i1257, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2045
  %230 = ptrtoint ptr %cpu689 to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load i32, ptr %cpu689, align 4
  %arrayidx723 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %231
  %232 = ptrtoint ptr %arrayidx723 to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load i32, ptr %arrayidx723, align 4
  %add724 = add i32 %233, ptrtoint (ptr @hardirqs_enabled to i32)
  %234 = inttoptr i32 %add724 to ptr
  %235 = ptrtoint ptr %234 to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load volatile i32, ptr %234, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2046
  %237 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1259 = and i32 %237, -16384
  %238 = inttoptr i32 %and.i.i.i1259 to ptr
  %preempt_count.i.i1260 = getelementptr inbounds %struct.thread_info, ptr %238, i32 0, i32 1
  %239 = ptrtoint ptr %preempt_count.i.i1260 to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load volatile i32, ptr %preempt_count.i.i1260, align 4
  %sub.i1261 = add i32 %240, -1
  store volatile i32 %sub.i1261, ptr %preempt_count.i.i1260, align 4
  %tobool731.not = icmp eq i32 %236, 0
  br i1 %tobool731.not, label %for.inc, label %land.rhs739

land.rhs739:                                      ; preds = %land.rhs699
  %.b11781182 = load i1, ptr @rcu_gp_init.__already_done.273, align 1
  br i1 %.b11781182, label %for.inc, label %for.inc.sink.split, !prof !1646

for.inc.sink.split:                               ; preds = %land.rhs739, %land.rhs572
  %rcu_gp_init.__already_done.273.sink = phi ptr [ @rcu_gp_init.__already_done.272, %land.rhs572 ], [ @rcu_gp_init.__already_done.273, %land.rhs739 ]
  %.sink = phi i32 [ 1799, %land.rhs572 ], [ 1835, %land.rhs739 ]
  %241 = ptrtoint ptr %rcu_gp_init.__already_done.273.sink to i32
  call void @__asan_store1_noabort(i32 %241)
  store i1 true, ptr %rcu_gp_init.__already_done.273.sink, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef %.sink, i32 noundef 9, ptr noundef null) #24
  br label %for.inc

for.inc:                                          ; preds = %for.inc.sink.split, %land.rhs739, %land.rhs699, %land.lhs.true666, %do.body663, %land.rhs572, %land.rhs532, %land.lhs.true499, %do.body496
  tail call void @_raw_spin_unlock_irq(ptr noundef %rnp.01309) #24
  tail call void @_raw_spin_unlock(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 39)) #24
  %incdec.ptr = getelementptr %struct.rcu_node, ptr %rnp.01309, i32 1
  %242 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx457 = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %242
  %cmp = icmp ult ptr %incdec.ptr, %arrayidx457
  br i1 %cmp, label %do.end461, label %for.end

for.end:                                          ; preds = %for.inc, %if.end434
  %.lcssa = phi i32 [ %113, %if.end434 ], [ %242, %for.inc ]
  %243 = load i32, ptr @gp_preinit_delay, align 4
  %cmp.i = icmp sgt i32 %243, 0
  br i1 %cmp.i, label %land.lhs.true.i1287, label %rcu_gp_slow.exit

land.lhs.true.i1287:                              ; preds = %for.end
  %244 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %shr.i.i = lshr i32 %244, 2
  %mul.i = mul i32 %.lcssa, 3
  %mul1.i = mul i32 %mul.i, %243
  %rem.i = urem i32 %shr.i.i, %mul1.i
  %tobool.not.i1286 = icmp eq i32 %rem.i, 0
  br i1 %tobool.not.i1286, label %if.then.i1288, label %rcu_gp_slow.exit

if.then.i1288:                                    ; preds = %land.lhs.true.i1287
  %call2.i = tail call i32 @schedule_timeout_idle(i32 noundef %243) #24
  br label %rcu_gp_slow.exit

rcu_gp_slow.exit:                                 ; preds = %if.then.i1288, %land.lhs.true.i1287, %for.end
  store volatile i16 4, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 11), align 2
  %245 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx8001313 = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %245
  %cmp8011314 = icmp ugt ptr %arrayidx8001313, @rcu_state
  br i1 %cmp8011314, label %for.body802, label %for.end1098

for.body802:                                      ; preds = %do.end1082, %rcu_gp_slow.exit
  %246 = phi i32 [ %334, %do.end1082 ], [ %245, %rcu_gp_slow.exit ]
  %rnp.11315 = phi ptr [ %incdec.ptr1097, %do.end1082 ], [ @rcu_state, %rcu_gp_slow.exit ]
  %247 = load i32, ptr @gp_init_delay, align 4
  %cmp.i1290 = icmp sgt i32 %247, 0
  br i1 %cmp.i1290, label %land.lhs.true.i1296, label %rcu_gp_slow.exit1300

land.lhs.true.i1296:                              ; preds = %for.body802
  %248 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %shr.i.i1291 = lshr i32 %248, 2
  %mul.i1292 = mul i32 %246, 3
  %mul1.i1293 = mul i32 %mul.i1292, %247
  %rem.i1294 = urem i32 %shr.i.i1291, %mul1.i1293
  %tobool.not.i1295 = icmp eq i32 %rem.i1294, 0
  br i1 %tobool.not.i1295, label %if.then.i1298, label %rcu_gp_slow.exit1300

if.then.i1298:                                    ; preds = %land.lhs.true.i1296
  %call2.i1297 = tail call i32 @schedule_timeout_idle(i32 noundef %247) #24
  br label %rcu_gp_slow.exit1300

rcu_gp_slow.exit1300:                             ; preds = %if.then.i1298, %land.lhs.true.i1296, %for.body802
  %call808 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %rnp.11315) #24
  %249 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i1301 = and i32 %249, -16384
  %250 = inttoptr i32 %and.i1301 to ptr
  %cpu824 = getelementptr inbounds %struct.thread_info, ptr %250, i32 0, i32 3
  %251 = ptrtoint ptr %cpu824 to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load i32, ptr %cpu824, align 4
  %arrayidx825 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %252
  %253 = ptrtoint ptr %arrayidx825 to i32
  call void @__asan_load4_noabort(i32 %253)
  %254 = load i32, ptr %arrayidx825, align 4
  %add826 = add i32 %254, ptrtoint (ptr @rcu_data to i32)
  %255 = inttoptr i32 %add826 to ptr
  %qsmask.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.11315, i32 0, i32 4
  %256 = ptrtoint ptr %qsmask.i to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load i32, ptr %qsmask.i, align 8
  %tobool.not.i1302 = icmp eq i32 %257, 0
  br i1 %tobool.not.i1302, label %rcu_preempt_check_blocked_tasks.exit, label %land.rhs.i1303

land.rhs.i1303:                                   ; preds = %rcu_gp_slow.exit1300
  %.b38.i = load i1, ptr @rcu_preempt_check_blocked_tasks.__already_done, align 1
  br i1 %.b38.i, label %rcu_preempt_check_blocked_tasks.exit, label %if.then.i1304, !prof !1646

if.then.i1304:                                    ; preds = %land.rhs.i1303
  store i1 true, ptr @rcu_preempt_check_blocked_tasks.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.280, i32 noundef 948, i32 noundef 9, ptr noundef null) #24
  br label %rcu_preempt_check_blocked_tasks.exit

rcu_preempt_check_blocked_tasks.exit:             ; preds = %if.then.i1304, %land.rhs.i1303, %rcu_gp_slow.exit1300
  %qsmaskinit827 = getelementptr inbounds %struct.rcu_node, ptr %rnp.11315, i32 0, i32 6
  %258 = ptrtoint ptr %qsmaskinit827 to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load i32, ptr %qsmaskinit827, align 64
  %260 = ptrtoint ptr %qsmask.i to i32
  call void @__asan_store4_noabort(i32 %260)
  store i32 %259, ptr %qsmask.i, align 8
  %261 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %gp_seq = getelementptr inbounds %struct.rcu_node, ptr %rnp.11315, i32 0, i32 1
  %262 = ptrtoint ptr %gp_seq to i32
  call void @__asan_store4_noabort(i32 %262)
  store volatile i32 %261, ptr %gp_seq, align 4
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %255, i32 0, i32 7
  %263 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load ptr, ptr %mynode, align 16
  %cmp837 = icmp eq ptr %rnp.11315, %264
  br i1 %cmp837, label %if.then839, label %if.end841

if.then839:                                       ; preds = %rcu_preempt_check_blocked_tasks.exit
  %call840 = tail call fastcc zeroext i1 @__note_gp_changes(ptr noundef %rnp.11315, ptr noundef %255)
  br label %if.end841

if.end841:                                        ; preds = %if.then839, %rcu_preempt_check_blocked_tasks.exit
  %265 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %266 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load i32, ptr %gp_seq, align 4
  %level = getelementptr inbounds %struct.rcu_node, ptr %rnp.11315, i32 0, i32 18
  %268 = ptrtoint ptr %level to i32
  call void @__asan_load1_noabort(i32 %268)
  %269 = load i8, ptr %level, align 1
  %grplo = getelementptr inbounds %struct.rcu_node, ptr %rnp.11315, i32 0, i32 15
  %270 = ptrtoint ptr %grplo to i32
  call void @__asan_load4_noabort(i32 %270)
  %271 = load i32, ptr %grplo, align 4
  %grphi = getelementptr inbounds %struct.rcu_node, ptr %rnp.11315, i32 0, i32 16
  %272 = ptrtoint ptr %grphi to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load i32, ptr %grphi, align 8
  %274 = ptrtoint ptr %qsmask.i to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load i32, ptr %qsmask.i, align 8
  tail call fastcc void @trace_rcu_grace_period_init(ptr noundef %265, i32 noundef %267, i8 noundef zeroext %269, i32 noundef %271, i32 noundef %273, i32 noundef %275)
  %276 = ptrtoint ptr %qsmask.i to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load i32, ptr %qsmask.i, align 8
  %qsmaskinitnext845 = getelementptr inbounds %struct.rcu_node, ptr %rnp.11315, i32 0, i32 7
  %278 = ptrtoint ptr %qsmaskinitnext845 to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load i32, ptr %qsmaskinitnext845, align 4
  %neg = xor i32 %279, -1
  %and846 = and i32 %277, %neg
  %rcu_gp_init_mask = getelementptr inbounds %struct.rcu_node, ptr %rnp.11315, i32 0, i32 5
  %280 = ptrtoint ptr %rcu_gp_init_mask to i32
  call void @__asan_store4_noabort(i32 %280)
  store i32 %and846, ptr %rcu_gp_init_mask, align 4
  %tobool847.not = icmp eq i32 %and846, 0
  br i1 %tobool847.not, label %lor.lhs.false848, label %land.lhs.true852

lor.lhs.false848:                                 ; preds = %if.end841
  %wait_blkd_tasks849 = getelementptr inbounds %struct.rcu_node, ptr %rnp.11315, i32 0, i32 19
  %281 = ptrtoint ptr %wait_blkd_tasks849 to i32
  call void @__asan_load1_noabort(i32 %281)
  %282 = load i8, ptr %wait_blkd_tasks849, align 2, !range !1644
  %tobool850.not = icmp eq i8 %282, 0
  br i1 %tobool850.not, label %do.body862, label %land.lhs.true852

land.lhs.true852:                                 ; preds = %lor.lhs.false848, %if.end841
  %283 = ptrtoint ptr %level to i32
  call void @__asan_load1_noabort(i32 %283)
  %284 = load i8, ptr %level, align 1
  %conv854 = zext i8 %284 to i32
  %285 = load i32, ptr @rcu_num_lvls, align 4
  %sub855 = add i32 %285, -1
  %cmp856 = icmp eq i32 %sub855, %conv854
  br i1 %cmp856, label %if.then858, label %do.body862

if.then858:                                       ; preds = %land.lhs.true852
  %286 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load i32, ptr %gp_seq, align 4
  tail call fastcc void @rcu_report_qs_rnp(i32 noundef %and846, ptr noundef %rnp.11315, i32 noundef %287, i32 noundef %call808)
  br label %do.end996

do.body862:                                       ; preds = %land.lhs.true852, %lor.lhs.false848
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %288 = load i32, ptr @debug_locks, align 4
  %tobool864.not = icmp eq i32 %288, 0
  br i1 %tobool864.not, label %if.end977, label %land.lhs.true865

land.lhs.true865:                                 ; preds = %do.body862
  %289 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1262 = and i32 %289, -16384
  %290 = inttoptr i32 %and.i.i.i1262 to ptr
  %preempt_count.i.i1263 = getelementptr inbounds %struct.thread_info, ptr %290, i32 0, i32 1
  %291 = ptrtoint ptr %preempt_count.i.i1263 to i32
  call void @__asan_load4_noabort(i32 %291)
  %292 = load volatile i32, ptr %preempt_count.i.i1263, align 4
  %add.i1264 = add i32 %292, 1
  store volatile i32 %add.i1264, ptr %preempt_count.i.i1263, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2047
  %293 = ptrtoint ptr %cpu824 to i32
  call void @__asan_load4_noabort(i32 %293)
  %294 = load i32, ptr %cpu824, align 4
  %arrayidx889 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %294
  %295 = ptrtoint ptr %arrayidx889 to i32
  call void @__asan_load4_noabort(i32 %295)
  %296 = load i32, ptr %arrayidx889, align 4
  %add890 = add i32 %296, ptrtoint (ptr @lockdep_recursion to i32)
  %297 = inttoptr i32 %add890 to ptr
  %298 = ptrtoint ptr %297 to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load volatile i32, ptr %297, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2048
  %300 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1265 = and i32 %300, -16384
  %301 = inttoptr i32 %and.i.i.i1265 to ptr
  %preempt_count.i.i1266 = getelementptr inbounds %struct.thread_info, ptr %301, i32 0, i32 1
  %302 = ptrtoint ptr %preempt_count.i.i1266 to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load volatile i32, ptr %preempt_count.i.i1266, align 4
  %sub.i1267 = add i32 %303, -1
  store volatile i32 %sub.i1267, ptr %preempt_count.i.i1266, align 4
  %tobool897.not = icmp eq i32 %299, 0
  br i1 %tobool897.not, label %land.rhs898, label %if.end977

land.rhs898:                                      ; preds = %land.lhs.true865
  %304 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1268 = and i32 %304, -16384
  %305 = inttoptr i32 %and.i.i.i1268 to ptr
  %preempt_count.i.i1269 = getelementptr inbounds %struct.thread_info, ptr %305, i32 0, i32 1
  %306 = ptrtoint ptr %preempt_count.i.i1269 to i32
  call void @__asan_load4_noabort(i32 %306)
  %307 = load volatile i32, ptr %preempt_count.i.i1269, align 4
  %add.i1270 = add i32 %307, 1
  store volatile i32 %add.i1270, ptr %preempt_count.i.i1269, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2049
  %308 = ptrtoint ptr %cpu824 to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load i32, ptr %cpu824, align 4
  %arrayidx922 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %309
  %310 = ptrtoint ptr %arrayidx922 to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load i32, ptr %arrayidx922, align 4
  %add923 = add i32 %311, ptrtoint (ptr @hardirqs_enabled to i32)
  %312 = inttoptr i32 %add923 to ptr
  %313 = ptrtoint ptr %312 to i32
  call void @__asan_load4_noabort(i32 %313)
  %314 = load volatile i32, ptr %312, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2050
  %315 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1271 = and i32 %315, -16384
  %316 = inttoptr i32 %and.i.i.i1271 to ptr
  %preempt_count.i.i1272 = getelementptr inbounds %struct.thread_info, ptr %316, i32 0, i32 1
  %317 = ptrtoint ptr %preempt_count.i.i1272 to i32
  call void @__asan_load4_noabort(i32 %317)
  %318 = load volatile i32, ptr %preempt_count.i.i1272, align 4
  %sub.i1273 = add i32 %318, -1
  store volatile i32 %sub.i1273, ptr %preempt_count.i.i1272, align 4
  %tobool930.not = icmp eq i32 %314, 0
  br i1 %tobool930.not, label %if.end977, label %land.rhs939

land.rhs939:                                      ; preds = %land.rhs898
  %.b11791181 = load i1, ptr @rcu_gp_init.__already_done.274, align 1
  br i1 %.b11791181, label %if.end977, label %if.then950, !prof !1646

if.then950:                                       ; preds = %land.rhs939
  store i1 true, ptr @rcu_gp_init.__already_done.274, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1872, i32 noundef 9, ptr noundef null) #24
  br label %if.end977

if.end977:                                        ; preds = %if.then950, %land.rhs939, %land.rhs898, %land.lhs.true865, %do.body862
  tail call void @_raw_spin_unlock_irq(ptr noundef %rnp.11315) #24
  br label %do.end996

do.end996:                                        ; preds = %if.end977, %if.then858
  %task = getelementptr inbounds %struct.thread_info, ptr %250, i32 0, i32 2
  %319 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %319)
  %320 = load ptr, ptr %task, align 8
  %rcu_tasks_holdout = getelementptr inbounds %struct.task_struct, ptr %320, i32 0, i32 40
  %321 = ptrtoint ptr %rcu_tasks_holdout to i32
  call void @__asan_load1_noabort(i32 %321)
  %322 = load volatile i8, ptr %rcu_tasks_holdout, align 4
  %tobool1000.not = icmp eq i8 %322, 0
  br i1 %tobool1000.not, label %do.end1020, label %do.body1006

do.body1006:                                      ; preds = %do.end996
  %323 = ptrtoint ptr %rcu_tasks_holdout to i32
  call void @__asan_store1_noabort(i32 %323)
  store volatile i8 0, ptr %rcu_tasks_holdout, align 4
  br label %do.end1020

do.end1020:                                       ; preds = %do.body1006, %do.end996
  %324 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %324)
  %325 = load ptr, ptr %task, align 8
  %trc_reader_checked = getelementptr inbounds %struct.task_struct, ptr %325, i32 0, i32 47
  %326 = ptrtoint ptr %trc_reader_checked to i32
  call void @__asan_load1_noabort(i32 %326)
  %327 = load volatile i8, ptr %trc_reader_checked, align 64, !range !1644
  %tobool1024.not = icmp eq i8 %327, 0
  br i1 %tobool1024.not, label %do.end1036, label %do.end1082, !prof !1645

do.end1036:                                       ; preds = %do.end1020
  %trc_reader_nesting = getelementptr inbounds %struct.task_struct, ptr %325, i32 0, i32 44
  %328 = ptrtoint ptr %trc_reader_nesting to i32
  call void @__asan_load4_noabort(i32 %328)
  %329 = load volatile i32, ptr %trc_reader_nesting, align 4
  %tobool1040.not = icmp eq i32 %329, 0
  br i1 %tobool1040.not, label %do.end1055, label %do.end1082, !prof !1646

do.end1055:                                       ; preds = %do.end1036
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2051
  %330 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %330)
  %331 = load ptr, ptr %task, align 8
  %trc_reader_checked1063 = getelementptr inbounds %struct.task_struct, ptr %331, i32 0, i32 47
  %332 = ptrtoint ptr %trc_reader_checked1063 to i32
  call void @__asan_store1_noabort(i32 %332)
  store volatile i8 1, ptr %trc_reader_checked1063, align 64
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2052
  br label %do.end1082

do.end1082:                                       ; preds = %do.end1055, %do.end1036, %do.end1020
  tail call void @__might_resched(ptr noundef nonnull @.str, i32 noundef 1873, i32 noundef 0) #24
  %call.i = tail call i32 @__cond_resched() #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %333 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %333, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 31), align 4
  %incdec.ptr1097 = getelementptr %struct.rcu_node, ptr %rnp.11315, i32 1
  %334 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx800 = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %334
  %cmp801 = icmp ult ptr %incdec.ptr1097, %arrayidx800
  br i1 %cmp801, label %for.body802, label %for.end1098

for.end1098:                                      ; preds = %do.end1082, %rcu_gp_slow.exit
  tail call void @on_each_cpu_cond_mask(ptr noundef null, ptr noundef nonnull @rcu_strict_gp_boundary, ptr noundef null, i1 noundef zeroext false, ptr noundef nonnull @__cpu_online_mask) #24
  br label %cleanup

cleanup:                                          ; preds = %for.end1098, %if.end304, %if.end109
  %retval.0 = phi i1 [ false, %if.end304 ], [ true, %for.end1098 ], [ false, %if.end109 ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_gp_fqs_loop() unnamed_addr #19 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %__wait = alloca %struct.swait_queue, align 4
  %0 = load i8, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 24), align 4
  %tobool.not = icmp eq i8 %0, 0
  %spec.select442 = select i1 %tobool.not, i32 0, i32 4
  %1 = getelementptr inbounds %struct.swait_queue, ptr %__wait, i32 0, i32 1
  %2 = getelementptr inbounds %struct.swait_queue, ptr %__wait, i32 0, i32 1, i32 1
  br label %for.cond.outer

for.cond.outer:                                   ; preds = %do.end192, %entry
  %gf.1.ph = phi i32 [ %gf.6, %do.end192 ], [ %spec.select442, %entry ]
  %j.0.ph.in = phi ptr [ @jiffies_till_next_fqs, %do.end192 ], [ @jiffies_till_first_fqs, %entry ]
  %first_gp_fqs.0.off0.ph = phi i1 [ false, %do.end192 ], [ true, %entry ]
  %3 = ptrtoint ptr %j.0.ph.in to i32
  call void @__asan_load4_noabort(i32 %3)
  %j.0.ph = load volatile i32, ptr %j.0.ph.in, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end344, %for.cond.outer
  %gf.1 = phi i32 [ 0, %if.end344 ], [ %gf.1.ph, %for.cond.outer ]
  %tobool1.not = phi i1 [ false, %if.end344 ], [ true, %for.cond.outer ]
  %j.0 = phi i32 [ %spec.select445, %if.end344 ], [ %j.0.ph, %for.cond.outer ]
  br i1 %tobool1.not, label %do.body7, label %if.end29

do.body7:                                         ; preds = %for.cond
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %4 = load volatile i32, ptr @jiffies, align 128
  %add = add i32 %4, %j.0
  store volatile i32 %add, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 26), align 8
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2053
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %5 = load volatile i32, ptr @jiffies, align 128
  %tobool23.not = icmp eq i32 %j.0, 0
  %mul = mul i32 %j.0, 3
  %spec.select = select i1 %tobool23.not, i32 2, i32 %mul
  %add24 = add i32 %5, %spec.select
  store volatile i32 %add24, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 27), align 4
  br label %if.end29

if.end29:                                         ; preds = %do.body7, %for.cond
  %6 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %7 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %8 = load ptr, ptr @rcu_gp_fqs_loop.___tp_str, align 4
  call fastcc void @trace_rcu_grace_period(ptr noundef %6, i32 noundef %7, ptr noundef %8)
  store volatile i16 5, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 11), align 2
  %and.i = and i32 %gf.1, 4
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.end.i, label %if.end73

do.end.i:                                         ; preds = %if.end29
  %9 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %conv.i460 = zext i16 %9 to i32
  %and1.i = and i32 %conv.i460, 2
  %tobool2.not.i = icmp eq i32 %and1.i, 0
  br i1 %tobool2.not.i, label %rcu_gp_fqs_check_wake.exit, label %if.end73

rcu_gp_fqs_check_wake.exit:                       ; preds = %do.end.i
  %10 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 4), align 8
  %tobool9.not.i = icmp eq i32 %10, 0
  %tobool47.not = icmp eq i32 %j.0, 0
  %or.cond = select i1 %tobool9.not.i, i1 true, i1 %tobool47.not
  br i1 %or.cond, label %if.end73, label %if.then49

if.then49:                                        ; preds = %rcu_gp_fqs_check_wake.exit
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %__wait) #24
  %11 = ptrtoint ptr %__wait to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr inttoptr (i32 -1 to ptr), ptr %__wait, align 4, !annotation !1767
  %12 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %1, ptr %1, align 4
  %13 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %1, ptr %2, align 4
  %call52452 = call i32 @prepare_to_swait_event(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 9), ptr noundef nonnull %__wait, i32 noundef 1026) #24
  %and.i381453 = and i32 %conv.i460, 4
  %tobool.not.i382454 = icmp eq i32 %and.i381453, 0
  br i1 %tobool.not.i382454, label %do.end.i386, label %for.end

do.end.i386:                                      ; preds = %cleanup, %if.then49
  %__ret50.0455 = phi i32 [ %call71, %cleanup ], [ %j.0, %if.then49 ]
  %14 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %conv.i383461 = zext i16 %14 to i32
  %and1.i384 = and i32 %conv.i383461, 2
  %tobool2.not.i385 = icmp eq i32 %and1.i384, 0
  br i1 %tobool2.not.i385, label %rcu_gp_fqs_check_wake.exit390, label %for.end.loopexit

rcu_gp_fqs_check_wake.exit390:                    ; preds = %do.end.i386
  %15 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 4), align 8
  %tobool9.not.i387 = icmp eq i32 %15, 0
  %tobool64.not = icmp eq i32 %__ret50.0455, 0
  %or.cond443 = select i1 %tobool9.not.i387, i1 true, i1 %tobool64.not
  br i1 %or.cond443, label %for.end.loopexit, label %cleanup

cleanup:                                          ; preds = %rcu_gp_fqs_check_wake.exit390
  %call71 = call i32 @schedule_timeout(i32 noundef %__ret50.0455) #24
  %call52 = call i32 @prepare_to_swait_event(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 9), ptr noundef nonnull %__wait, i32 noundef 1026) #24
  %and.i381 = and i32 %conv.i383461, 4
  %tobool.not.i382 = icmp eq i32 %and.i381, 0
  br i1 %tobool.not.i382, label %do.end.i386, label %for.end.loopexit

for.end.loopexit:                                 ; preds = %cleanup, %rcu_gp_fqs_check_wake.exit390, %do.end.i386
  %conv.i383461.le = zext i16 %14 to i32
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %if.then49
  %gf.4425434.ph = phi i32 [ %conv.i460, %if.then49 ], [ %conv.i383461.le, %for.end.loopexit ]
  call void @finish_swait(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 9), ptr noundef nonnull %__wait) #24
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %__wait) #24
  br label %if.end73

if.end73:                                         ; preds = %for.end, %rcu_gp_fqs_check_wake.exit, %do.end.i, %if.end29
  %gf.5 = phi i32 [ %gf.4425434.ph, %for.end ], [ %conv.i460, %rcu_gp_fqs_check_wake.exit ], [ 4, %if.end29 ], [ %conv.i460, %do.end.i ]
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull @sleep_duration, i32 noundef 4) #24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2016
  call void @llvm.prefetch.p0(ptr nonnull @sleep_duration, i32 1, i32 3, i32 1) #24
  %16 = call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr nonnull @sleep_duration) #24, !srcloc !1729
  %asmresult.i.i = extractvalue { i32, i32 } %16, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2017
  %cmp.not.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.not.i, label %rcu_gp_torture_wait.exit, label %do.end17.i

do.end17.i:                                       ; preds = %if.end73
  %call19.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.263, ptr noundef nonnull @.str.264, i32 noundef %asmresult.i.i) #27
  %call20.i = call i32 @schedule_timeout_idle(i32 noundef %asmresult.i.i) #24
  %call25.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.266, ptr noundef nonnull @.str.264) #27
  br label %rcu_gp_torture_wait.exit

rcu_gp_torture_wait.exit:                         ; preds = %do.end17.i, %if.end73
  store volatile i16 6, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 11), align 2
  %17 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 4), align 8
  %tobool88.not = icmp eq i32 %17, 0
  br i1 %tobool88.not, label %land.lhs.true89, label %if.end93

land.lhs.true89:                                  ; preds = %rcu_gp_torture_wait.exit
  ret void

if.end93:                                         ; preds = %rcu_gp_torture_wait.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %18 = load volatile i32, ptr @jiffies, align 128
  %19 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 26), align 8
  %sub = sub i32 %18, %19
  %cmp = icmp slt i32 %sub, 0
  %and = and i32 %gf.5, 6
  %tobool94.not = icmp eq i32 %and, 0
  %or.cond444 = select i1 %cmp, i1 %tobool94.not, i1 false
  br i1 %or.cond444, label %do.end215, label %if.then95

if.then95:                                        ; preds = %if.end93
  %20 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %21 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %22 = load ptr, ptr @rcu_gp_fqs_loop.___tp_str.282, align 4
  call fastcc void @trace_rcu_grace_period(ptr noundef %20, i32 noundef %21, ptr noundef %22)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %23 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %23, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 31), align 4
  %24 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 28), align 16
  %add.i = add i32 %24, 1
  store volatile i32 %add.i, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 28), align 16
  %dyntick_save_progress_counter.rcu_implicit_dynticks_qs.i = select i1 %first_gp_fqs.0.off0.ph, ptr @dyntick_save_progress_counter, ptr @rcu_implicit_dynticks_qs
  %25 = load i8, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 25), align 1
  store i8 %25, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 24), align 4
  store i8 0, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 25), align 1
  %26 = load i32, ptr @rcu_num_lvls, align 4
  %sub.i = add i32 %26, -1
  %arrayidx.i396 = getelementptr %struct.rcu_state, ptr @rcu_state, i32 0, i32 1, i32 %sub.i
  %27 = ptrtoint ptr %arrayidx.i396 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx.i396, align 4
  %29 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx1535.i = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %29
  %cmp536.i = icmp ult ptr %28, %arrayidx1535.i
  br i1 %cmp536.i, label %do.end.i399, label %force_qs_rnp.exit

do.end.i399:                                      ; preds = %for.inc467.i, %if.then95
  %rnp.0537.i = phi ptr [ %incdec.ptr.i, %for.inc467.i ], [ %28, %if.then95 ]
  %30 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i397 = and i32 %30, -16384
  %31 = inttoptr i32 %and.i.i397 to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 2
  %32 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %task.i, align 8
  %rcu_tasks_holdout.i = getelementptr inbounds %struct.task_struct, ptr %33, i32 0, i32 40
  %34 = ptrtoint ptr %rcu_tasks_holdout.i to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load volatile i8, ptr %rcu_tasks_holdout.i, align 4
  %tobool.not.i398 = icmp eq i8 %35, 0
  br i1 %tobool.not.i398, label %do.end22.i, label %do.body9.i

do.body9.i:                                       ; preds = %do.end.i399
  %36 = ptrtoint ptr %rcu_tasks_holdout.i to i32
  call void @__asan_store1_noabort(i32 %36)
  store volatile i8 0, ptr %rcu_tasks_holdout.i, align 4
  br label %do.end22.i

do.end22.i:                                       ; preds = %do.body9.i, %do.end.i399
  %37 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %task.i, align 8
  %trc_reader_checked.i = getelementptr inbounds %struct.task_struct, ptr %38, i32 0, i32 47
  %39 = ptrtoint ptr %trc_reader_checked.i to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load volatile i8, ptr %trc_reader_checked.i, align 64, !range !1644
  %tobool26.not.i = icmp eq i8 %40, 0
  br i1 %tobool26.not.i, label %do.end32.i, label %do.end78.i, !prof !1645

do.end32.i:                                       ; preds = %do.end22.i
  %trc_reader_nesting.i = getelementptr inbounds %struct.task_struct, ptr %38, i32 0, i32 44
  %41 = ptrtoint ptr %trc_reader_nesting.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %trc_reader_nesting.i, align 4
  %tobool36.not.i = icmp eq i32 %42, 0
  br i1 %tobool36.not.i, label %do.end51.i, label %do.end78.i, !prof !1646

do.end51.i:                                       ; preds = %do.end32.i
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2054
  %43 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %task.i, align 8
  %trc_reader_checked59.i = getelementptr inbounds %struct.task_struct, ptr %44, i32 0, i32 47
  %45 = ptrtoint ptr %trc_reader_checked59.i to i32
  call void @__asan_store1_noabort(i32 %45)
  store volatile i8 1, ptr %trc_reader_checked59.i, align 64
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2055
  br label %do.end78.i

do.end78.i:                                       ; preds = %do.end51.i, %do.end32.i, %do.end22.i
  call void @__might_resched(ptr noundef nonnull @.str, i32 noundef 2642, i32 noundef 0) #24
  %call.i.i400 = call i32 @__cond_resched() #24
  %call88.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %rnp.0537.i) #24
  %cbovldmask.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0537.i, i32 0, i32 12
  %46 = ptrtoint ptr %cbovldmask.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %cbovldmask.i, align 8
  %tobool96.i = icmp ne i32 %47, 0
  %lnot.ext100.i = zext i1 %tobool96.i to i8
  %48 = load i8, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 25), align 1
  %or.i = or i8 %48, %lnot.ext100.i
  store i8 %or.i, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 25), align 1
  %qsmask.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0537.i, i32 0, i32 4
  %49 = ptrtoint ptr %qsmask.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %qsmask.i, align 8
  %cmp103.i = icmp eq i32 %50, 0
  br i1 %cmp103.i, label %if.then105.i, label %if.end237.i

if.then105.i:                                     ; preds = %do.end78.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %51 = load i32, ptr @debug_locks, align 4
  %tobool112.not.i = icmp eq i32 %51, 0
  br i1 %tobool112.not.i, label %if.end216.i, label %land.lhs.true113.i

land.lhs.true113.i:                               ; preds = %if.then105.i
  %52 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i401 = and i32 %52, -16384
  %53 = inttoptr i32 %and.i.i.i.i401 to ptr
  %preempt_count.i.i.i402 = getelementptr inbounds %struct.thread_info, ptr %53, i32 0, i32 1
  %54 = ptrtoint ptr %preempt_count.i.i.i402 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %preempt_count.i.i.i402, align 4
  %add.i.i403 = add i32 %55, 1
  store volatile i32 %add.i.i403, ptr %preempt_count.i.i.i402, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2056
  %cpu131.i = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 3
  %56 = ptrtoint ptr %cpu131.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %cpu131.i, align 4
  %arrayidx132.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %57
  %58 = ptrtoint ptr %arrayidx132.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %arrayidx132.i, align 4
  %add.i404 = add i32 %59, ptrtoint (ptr @lockdep_recursion to i32)
  %60 = inttoptr i32 %add.i404 to ptr
  %61 = ptrtoint ptr %60 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile i32, ptr %60, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2057
  %63 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i512.i = and i32 %63, -16384
  %64 = inttoptr i32 %and.i.i.i512.i to ptr
  %preempt_count.i.i513.i = getelementptr inbounds %struct.thread_info, ptr %64, i32 0, i32 1
  %65 = ptrtoint ptr %preempt_count.i.i513.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %preempt_count.i.i513.i, align 4
  %sub.i.i405 = add i32 %66, -1
  store volatile i32 %sub.i.i405, ptr %preempt_count.i.i513.i, align 4
  %tobool139.not.i = icmp eq i32 %62, 0
  br i1 %tobool139.not.i, label %land.rhs.i406, label %if.end216.i

land.rhs.i406:                                    ; preds = %land.lhs.true113.i
  %67 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i514.i = and i32 %67, -16384
  %68 = inttoptr i32 %and.i.i.i514.i to ptr
  %preempt_count.i.i515.i = getelementptr inbounds %struct.thread_info, ptr %68, i32 0, i32 1
  %69 = ptrtoint ptr %preempt_count.i.i515.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %preempt_count.i.i515.i, align 4
  %add.i516.i = add i32 %70, 1
  store volatile i32 %add.i516.i, ptr %preempt_count.i.i515.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2058
  %71 = ptrtoint ptr %cpu131.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %cpu131.i, align 4
  %arrayidx163.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %72
  %73 = ptrtoint ptr %arrayidx163.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %arrayidx163.i, align 4
  %add164.i = add i32 %74, ptrtoint (ptr @hardirqs_enabled to i32)
  %75 = inttoptr i32 %add164.i to ptr
  %76 = ptrtoint ptr %75 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %75, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2059
  %78 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i517.i = and i32 %78, -16384
  %79 = inttoptr i32 %and.i.i.i517.i to ptr
  %preempt_count.i.i518.i = getelementptr inbounds %struct.thread_info, ptr %79, i32 0, i32 1
  %80 = ptrtoint ptr %preempt_count.i.i518.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load volatile i32, ptr %preempt_count.i.i518.i, align 4
  %sub.i519.i = add i32 %81, -1
  store volatile i32 %sub.i519.i, ptr %preempt_count.i.i518.i, align 4
  %tobool171.not.i = icmp eq i32 %77, 0
  br i1 %tobool171.not.i, label %if.end216.i, label %land.rhs179.i

land.rhs179.i:                                    ; preds = %land.rhs.i406
  %.b505.i = load i1, ptr @force_qs_rnp.__already_done, align 1
  br i1 %.b505.i, label %if.end216.i, label %if.then190.i, !prof !1646

if.then190.i:                                     ; preds = %land.rhs179.i
  store i1 true, ptr @force_qs_rnp.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2657, i32 noundef 9, ptr noundef null) #24
  br label %if.end216.i

if.end216.i:                                      ; preds = %if.then190.i, %land.rhs179.i, %land.rhs.i406, %land.lhs.true113.i, %if.then105.i
  call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp.0537.i, i32 noundef %call88.i) #24
  br label %for.inc467.i

if.end237.i:                                      ; preds = %do.end78.i
  %level.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0537.i, i32 0, i32 18
  %82 = ptrtoint ptr %level.i to i32
  call void @__asan_load1_noabort(i32 %82)
  %83 = load i8, ptr %level.i, align 1
  %conv239.i = zext i8 %83 to i32
  %84 = load i32, ptr @rcu_num_lvls, align 4
  %sub240.i = add i32 %84, -1
  %cmp241.not.i = icmp eq i32 %sub240.i, %conv239.i
  br i1 %cmp241.not.i, label %if.end290.i, label %land.rhs252.i

land.rhs252.i:                                    ; preds = %if.end237.i
  %.b501504.i = load i1, ptr @force_qs_rnp.__already_done.288, align 1
  br i1 %.b501504.i, label %if.end290.i, label %if.then263.i, !prof !1646

if.then263.i:                                     ; preds = %land.rhs252.i
  store i1 true, ptr @force_qs_rnp.__already_done.288, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2660, i32 noundef 9, ptr noundef null) #24
  br label %if.end290.i

if.end290.i:                                      ; preds = %if.then263.i, %land.rhs252.i, %if.end237.i
  %grplo.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0537.i, i32 0, i32 15
  %85 = ptrtoint ptr %grplo.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %grplo.i, align 4
  %call299.i = call i32 @_find_next_bit_be(ptr noundef %qsmask.i, i32 noundef 32, i32 noundef 0) #24
  %add300.i = add i32 %call299.i, %86
  %grphi.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0537.i, i32 0, i32 16
  %87 = ptrtoint ptr %grphi.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %grphi.i, align 8
  %cmp302.not532.i = icmp sgt i32 %add300.i, %88
  br i1 %cmp302.not532.i, label %do.body330.i, label %do.body305.i

do.body305.i:                                     ; preds = %for.inc.i, %if.end290.i
  %cpu.0534.i = phi i32 [ %add325.i, %for.inc.i ], [ %add300.i, %if.end290.i ]
  %mask.0533.i = phi i32 [ %mask.1.i, %for.inc.i ], [ 0, %if.end290.i ]
  %arrayidx312.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu.0534.i
  %89 = ptrtoint ptr %arrayidx312.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %arrayidx312.i, align 4
  %add313.i = add i32 %90, ptrtoint (ptr @rcu_data to i32)
  %91 = inttoptr i32 %add313.i to ptr
  %call314.i = call i32 %dyntick_save_progress_counter.rcu_implicit_dynticks_qs.i(ptr noundef %91) #24, !callees !2060
  %tobool315.not.i = icmp eq i32 %call314.i, 0
  br i1 %tobool315.not.i, label %for.inc.i, label %if.then316.i

if.then316.i:                                     ; preds = %do.body305.i
  %grpmask.i = getelementptr inbounds %struct.rcu_data, ptr %91, i32 0, i32 8
  %92 = ptrtoint ptr %grpmask.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %grpmask.i, align 4
  %or317.i = or i32 %93, %mask.0533.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %94 = load i32, ptr @debug_locks, align 4
  %tobool.not.i.i = icmp eq i32 %94, 0
  br i1 %tobool.not.i.i, label %rcu_disable_urgency_upon_qs.exit.i, label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %if.then316.i
  %mynode.i.i = getelementptr inbounds %struct.rcu_data, ptr %91, i32 0, i32 7
  %95 = ptrtoint ptr %mynode.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %mynode.i.i, align 16
  %dep_map.i.i = getelementptr inbounds %struct.raw_spinlock, ptr %96, i32 0, i32 4
  %call.i.i.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i.i, i32 noundef -1) #24
  %cmp.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp.not.i.i, label %do.end.i.i, label %rcu_disable_urgency_upon_qs.exit.i, !prof !1645

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1103, i32 noundef 9, ptr noundef null) #24
  br label %rcu_disable_urgency_upon_qs.exit.i

rcu_disable_urgency_upon_qs.exit.i:               ; preds = %do.end.i.i, %land.rhs.i.i, %if.then316.i
  %rcu_urgent_qs.i.i = getelementptr inbounds %struct.rcu_data, ptr %91, i32 0, i32 23
  %97 = ptrtoint ptr %rcu_urgent_qs.i.i to i32
  call void @__asan_store1_noabort(i32 %97)
  store volatile i8 0, ptr %rcu_urgent_qs.i.i, align 1
  %rcu_need_heavy_qs.i.i = getelementptr inbounds %struct.rcu_data, ptr %91, i32 0, i32 22
  %98 = ptrtoint ptr %rcu_need_heavy_qs.i.i to i32
  call void @__asan_store1_noabort(i32 %98)
  store volatile i8 0, ptr %rcu_need_heavy_qs.i.i, align 8
  br label %for.inc.i

for.inc.i:                                        ; preds = %rcu_disable_urgency_upon_qs.exit.i, %do.body305.i
  %mask.1.i = phi i32 [ %or317.i, %rcu_disable_urgency_upon_qs.exit.i ], [ %mask.0533.i, %do.body305.i ]
  %99 = ptrtoint ptr %grplo.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %grplo.i, align 4
  %add321.i = add i32 %cpu.0534.i, 1
  %sub323.i = sub i32 %add321.i, %100
  %call324.i = call i32 @_find_next_bit_be(ptr noundef %qsmask.i, i32 noundef 32, i32 noundef %sub323.i) #24
  %add325.i = add i32 %call324.i, %100
  %101 = ptrtoint ptr %grphi.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %grphi.i, align 8
  %cmp302.not.i = icmp sgt i32 %add325.i, %102
  br i1 %cmp302.not.i, label %for.end.i, label %do.body305.i

for.end.i:                                        ; preds = %for.inc.i
  %cmp326.not.i = icmp eq i32 %mask.1.i, 0
  br i1 %cmp326.not.i, label %do.body330.i, label %if.then328.i

if.then328.i:                                     ; preds = %for.end.i
  %gp_seq.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0537.i, i32 0, i32 1
  %103 = ptrtoint ptr %gp_seq.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %gp_seq.i, align 4
  call fastcc void @rcu_report_qs_rnp(i32 noundef %mask.1.i, ptr noundef %rnp.0537.i, i32 noundef %104, i32 noundef %call88.i) #24
  br label %for.inc467.i

do.body330.i:                                     ; preds = %for.end.i, %if.end290.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %105 = load i32, ptr @debug_locks, align 4
  %tobool332.not.i = icmp eq i32 %105, 0
  br i1 %tobool332.not.i, label %if.end445.i, label %land.lhs.true333.i

land.lhs.true333.i:                               ; preds = %do.body330.i
  %106 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i520.i = and i32 %106, -16384
  %107 = inttoptr i32 %and.i.i.i520.i to ptr
  %preempt_count.i.i521.i = getelementptr inbounds %struct.thread_info, ptr %107, i32 0, i32 1
  %108 = ptrtoint ptr %preempt_count.i.i521.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load volatile i32, ptr %preempt_count.i.i521.i, align 4
  %add.i522.i = add i32 %109, 1
  store volatile i32 %add.i522.i, ptr %preempt_count.i.i521.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2061
  %cpu356.i = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 3
  %110 = ptrtoint ptr %cpu356.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %cpu356.i, align 4
  %arrayidx357.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %111
  %112 = ptrtoint ptr %arrayidx357.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %arrayidx357.i, align 4
  %add358.i = add i32 %113, ptrtoint (ptr @lockdep_recursion to i32)
  %114 = inttoptr i32 %add358.i to ptr
  %115 = ptrtoint ptr %114 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load volatile i32, ptr %114, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2062
  %117 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i523.i = and i32 %117, -16384
  %118 = inttoptr i32 %and.i.i.i523.i to ptr
  %preempt_count.i.i524.i = getelementptr inbounds %struct.thread_info, ptr %118, i32 0, i32 1
  %119 = ptrtoint ptr %preempt_count.i.i524.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load volatile i32, ptr %preempt_count.i.i524.i, align 4
  %sub.i525.i = add i32 %120, -1
  store volatile i32 %sub.i525.i, ptr %preempt_count.i.i524.i, align 4
  %tobool365.not.i = icmp eq i32 %116, 0
  br i1 %tobool365.not.i, label %land.rhs366.i, label %if.end445.i

land.rhs366.i:                                    ; preds = %land.lhs.true333.i
  %121 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i526.i = and i32 %121, -16384
  %122 = inttoptr i32 %and.i.i.i526.i to ptr
  %preempt_count.i.i527.i = getelementptr inbounds %struct.thread_info, ptr %122, i32 0, i32 1
  %123 = ptrtoint ptr %preempt_count.i.i527.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load volatile i32, ptr %preempt_count.i.i527.i, align 4
  %add.i528.i = add i32 %124, 1
  store volatile i32 %add.i528.i, ptr %preempt_count.i.i527.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2063
  %125 = ptrtoint ptr %cpu356.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %cpu356.i, align 4
  %arrayidx390.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %126
  %127 = ptrtoint ptr %arrayidx390.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %arrayidx390.i, align 4
  %add391.i = add i32 %128, ptrtoint (ptr @hardirqs_enabled to i32)
  %129 = inttoptr i32 %add391.i to ptr
  %130 = ptrtoint ptr %129 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load volatile i32, ptr %129, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2064
  %132 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i529.i = and i32 %132, -16384
  %133 = inttoptr i32 %and.i.i.i529.i to ptr
  %preempt_count.i.i530.i = getelementptr inbounds %struct.thread_info, ptr %133, i32 0, i32 1
  %134 = ptrtoint ptr %preempt_count.i.i530.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load volatile i32, ptr %preempt_count.i.i530.i, align 4
  %sub.i531.i = add i32 %135, -1
  store volatile i32 %sub.i531.i, ptr %preempt_count.i.i530.i, align 4
  %tobool398.not.i = icmp eq i32 %131, 0
  br i1 %tobool398.not.i, label %if.end445.i, label %land.rhs407.i

land.rhs407.i:                                    ; preds = %land.rhs366.i
  %.b502503.i = load i1, ptr @force_qs_rnp.__already_done.289, align 1
  br i1 %.b502503.i, label %if.end445.i, label %if.then418.i, !prof !1646

if.then418.i:                                     ; preds = %land.rhs407.i
  store i1 true, ptr @force_qs_rnp.__already_done.289, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2672, i32 noundef 9, ptr noundef null) #24
  br label %if.end445.i

if.end445.i:                                      ; preds = %if.then418.i, %land.rhs407.i, %land.rhs366.i, %land.lhs.true333.i, %do.body330.i
  call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp.0537.i, i32 noundef %call88.i) #24
  br label %for.inc467.i

for.inc467.i:                                     ; preds = %if.end445.i, %if.then328.i, %if.end216.i
  %incdec.ptr.i = getelementptr %struct.rcu_node, ptr %rnp.0537.i, i32 1
  %136 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx1.i = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %136
  %cmp.i = icmp ult ptr %incdec.ptr.i, %arrayidx1.i
  br i1 %cmp.i, label %do.end.i399, label %force_qs_rnp.exit

force_qs_rnp.exit:                                ; preds = %for.inc467.i, %if.then95
  %137 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %138 = and i16 %137, 2
  %tobool19.not.i = icmp eq i16 %138, 0
  br i1 %tobool19.not.i, label %rcu_gp_fqs.exit, label %do.body21.i

do.body21.i:                                      ; preds = %force_qs_rnp.exit
  call void @_raw_spin_lock_irq(ptr noundef nonnull @rcu_state) #24
  %139 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %140 = and i16 %139, -3
  store volatile i16 %140, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %141 = load i32, ptr @debug_locks, align 4
  %tobool45.not.i = icmp eq i32 %141, 0
  br i1 %tobool45.not.i, label %if.end140.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.body21.i
  %142 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %142, -16384
  %143 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %143, i32 0, i32 1
  %144 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %145, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2065
  %146 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %146, -16384
  %147 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %147, i32 0, i32 3
  %148 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %149
  %150 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %arrayidx.i, align 4
  %add63.i = add i32 %151, ptrtoint (ptr @lockdep_recursion to i32)
  %152 = inttoptr i32 %add63.i to ptr
  %153 = ptrtoint ptr %152 to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load volatile i32, ptr %152, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2066
  %155 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i162.i = and i32 %155, -16384
  %156 = inttoptr i32 %and.i.i.i162.i to ptr
  %preempt_count.i.i163.i = getelementptr inbounds %struct.thread_info, ptr %156, i32 0, i32 1
  %157 = ptrtoint ptr %preempt_count.i.i163.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load volatile i32, ptr %preempt_count.i.i163.i, align 4
  %sub.i.i = add i32 %158, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i163.i, align 4
  %tobool70.not.i = icmp eq i32 %154, 0
  br i1 %tobool70.not.i, label %land.rhs.i, label %if.end140.i

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %159 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i164.i = and i32 %159, -16384
  %160 = inttoptr i32 %and.i.i.i164.i to ptr
  %preempt_count.i.i165.i = getelementptr inbounds %struct.thread_info, ptr %160, i32 0, i32 1
  %161 = ptrtoint ptr %preempt_count.i.i165.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load volatile i32, ptr %preempt_count.i.i165.i, align 4
  %add.i166.i = add i32 %162, 1
  store volatile i32 %add.i166.i, ptr %preempt_count.i.i165.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2067
  %163 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load i32, ptr %cpu.i, align 4
  %arrayidx94.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %164
  %165 = ptrtoint ptr %arrayidx94.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load i32, ptr %arrayidx94.i, align 4
  %add95.i = add i32 %166, ptrtoint (ptr @hardirqs_enabled to i32)
  %167 = inttoptr i32 %add95.i to ptr
  %168 = ptrtoint ptr %167 to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load volatile i32, ptr %167, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2068
  %170 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i167.i = and i32 %170, -16384
  %171 = inttoptr i32 %and.i.i.i167.i to ptr
  %preempt_count.i.i168.i = getelementptr inbounds %struct.thread_info, ptr %171, i32 0, i32 1
  %172 = ptrtoint ptr %preempt_count.i.i168.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load volatile i32, ptr %preempt_count.i.i168.i, align 4
  %sub.i169.i = add i32 %173, -1
  store volatile i32 %sub.i169.i, ptr %preempt_count.i.i168.i, align 4
  %tobool102.not.i = icmp eq i32 %169, 0
  br i1 %tobool102.not.i, label %if.end140.i, label %land.rhs107.i

land.rhs107.i:                                    ; preds = %land.rhs.i
  %.b158.i = load i1, ptr @rcu_gp_fqs.__already_done, align 1
  br i1 %.b158.i, label %if.end140.i, label %if.then114.i, !prof !1646

if.then114.i:                                     ; preds = %land.rhs107.i
  store i1 true, ptr @rcu_gp_fqs.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1929, i32 noundef 9, ptr noundef null) #24
  br label %if.end140.i

if.end140.i:                                      ; preds = %if.then114.i, %land.rhs107.i, %land.rhs.i, %land.lhs.true.i, %do.body21.i
  call void @_raw_spin_unlock_irq(ptr noundef nonnull @rcu_state) #24
  br label %rcu_gp_fqs.exit

rcu_gp_fqs.exit:                                  ; preds = %if.end140.i, %force_qs_rnp.exit
  br i1 %first_gp_fqs.0.off0.ph, label %if.then99, label %if.end102

if.then99:                                        ; preds = %rcu_gp_fqs.exit
  %174 = load i8, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 24), align 4
  %tobool100.not = icmp eq i8 %174, 0
  %cond101 = select i1 %tobool100.not, i32 0, i32 4
  br label %if.end102

if.end102:                                        ; preds = %if.then99, %rcu_gp_fqs.exit
  %gf.6 = phi i32 [ %cond101, %if.then99 ], [ 0, %rcu_gp_fqs.exit ]
  %175 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %176 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %177 = load ptr, ptr @rcu_gp_fqs_loop.___tp_str.284, align 4
  call fastcc void @trace_rcu_grace_period(ptr noundef %175, i32 noundef %176, ptr noundef %177)
  %178 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i391 = and i32 %178, -16384
  %179 = inttoptr i32 %and.i391 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %179, i32 0, i32 2
  %180 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %task, align 8
  %rcu_tasks_holdout = getelementptr inbounds %struct.task_struct, ptr %181, i32 0, i32 40
  %182 = ptrtoint ptr %rcu_tasks_holdout to i32
  call void @__asan_load1_noabort(i32 %182)
  %183 = load volatile i8, ptr %rcu_tasks_holdout, align 4
  %tobool113.not = icmp eq i8 %183, 0
  br i1 %tobool113.not, label %do.end133, label %do.body119

do.body119:                                       ; preds = %if.end102
  %184 = ptrtoint ptr %rcu_tasks_holdout to i32
  call void @__asan_store1_noabort(i32 %184)
  store volatile i8 0, ptr %rcu_tasks_holdout, align 4
  br label %do.end133

do.end133:                                        ; preds = %do.body119, %if.end102
  %185 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %task, align 8
  %trc_reader_checked = getelementptr inbounds %struct.task_struct, ptr %186, i32 0, i32 47
  %187 = ptrtoint ptr %trc_reader_checked to i32
  call void @__asan_load1_noabort(i32 %187)
  %188 = load volatile i8, ptr %trc_reader_checked, align 64, !range !1644
  %tobool137.not = icmp eq i8 %188, 0
  br i1 %tobool137.not, label %do.end146, label %do.end192, !prof !1645

do.end146:                                        ; preds = %do.end133
  %trc_reader_nesting = getelementptr inbounds %struct.task_struct, ptr %186, i32 0, i32 44
  %189 = ptrtoint ptr %trc_reader_nesting to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load volatile i32, ptr %trc_reader_nesting, align 4
  %tobool150.not = icmp eq i32 %190, 0
  br i1 %tobool150.not, label %do.end165, label %do.end192, !prof !1646

do.end165:                                        ; preds = %do.end146
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2069
  %191 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %task, align 8
  %trc_reader_checked173 = getelementptr inbounds %struct.task_struct, ptr %192, i32 0, i32 47
  %193 = ptrtoint ptr %trc_reader_checked173 to i32
  call void @__asan_store1_noabort(i32 %193)
  store volatile i8 1, ptr %trc_reader_checked173, align 64
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2070
  br label %do.end192

do.end192:                                        ; preds = %do.end165, %do.end146, %do.end133
  call void @__might_resched(ptr noundef nonnull @.str, i32 noundef 1985, i32 noundef 0) #24
  %call.i = call i32 @__cond_resched() #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %194 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %194, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 31), align 4
  br label %for.cond.outer

do.end215:                                        ; preds = %if.end93
  %195 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i392 = and i32 %195, -16384
  %196 = inttoptr i32 %and.i392 to ptr
  %task218 = getelementptr inbounds %struct.thread_info, ptr %196, i32 0, i32 2
  %197 = ptrtoint ptr %task218 to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load ptr, ptr %task218, align 8
  %rcu_tasks_holdout219 = getelementptr inbounds %struct.task_struct, ptr %198, i32 0, i32 40
  %199 = ptrtoint ptr %rcu_tasks_holdout219 to i32
  call void @__asan_load1_noabort(i32 %199)
  %200 = load volatile i8, ptr %rcu_tasks_holdout219, align 4
  %tobool221.not = icmp eq i8 %200, 0
  br i1 %tobool221.not, label %do.end241, label %do.body227

do.body227:                                       ; preds = %do.end215
  %201 = ptrtoint ptr %rcu_tasks_holdout219 to i32
  call void @__asan_store1_noabort(i32 %201)
  store volatile i8 0, ptr %rcu_tasks_holdout219, align 4
  br label %do.end241

do.end241:                                        ; preds = %do.body227, %do.end215
  %202 = ptrtoint ptr %task218 to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %task218, align 8
  %trc_reader_checked245 = getelementptr inbounds %struct.task_struct, ptr %203, i32 0, i32 47
  %204 = ptrtoint ptr %trc_reader_checked245 to i32
  call void @__asan_load1_noabort(i32 %204)
  %205 = load volatile i8, ptr %trc_reader_checked245, align 64, !range !1644
  %tobool246.not = icmp eq i8 %205, 0
  br i1 %tobool246.not, label %do.end258, label %do.end305, !prof !1645

do.end258:                                        ; preds = %do.end241
  %trc_reader_nesting262 = getelementptr inbounds %struct.task_struct, ptr %203, i32 0, i32 44
  %206 = ptrtoint ptr %trc_reader_nesting262 to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load volatile i32, ptr %trc_reader_nesting262, align 4
  %tobool263.not = icmp eq i32 %207, 0
  br i1 %tobool263.not, label %do.end278, label %do.end305, !prof !1646

do.end278:                                        ; preds = %do.end258
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2071
  %208 = ptrtoint ptr %task218 to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load ptr, ptr %task218, align 8
  %trc_reader_checked286 = getelementptr inbounds %struct.task_struct, ptr %209, i32 0, i32 47
  %210 = ptrtoint ptr %trc_reader_checked286 to i32
  call void @__asan_store1_noabort(i32 %210)
  store volatile i8 1, ptr %trc_reader_checked286, align 64
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2072
  br label %do.end305

do.end305:                                        ; preds = %do.end278, %do.end258, %do.end241
  call void @__might_resched(ptr noundef nonnull @.str, i32 noundef 1991, i32 noundef 0) #24
  %call.i393 = call i32 @__cond_resched() #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %211 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %211, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 31), align 4
  %212 = ptrtoint ptr %task218 to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load ptr, ptr %task218, align 8
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %213, i32 0, i32 1
  %214 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load ptr, ptr %stack.i.i, align 4
  %216 = ptrtoint ptr %215 to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load volatile i32, ptr %215, align 4
  %218 = and i32 %217, 256
  %tobool.not.i394 = icmp eq i32 %218, 0
  br i1 %tobool.not.i394, label %signal_pending.exit, label %do.end338, !prof !1646

signal_pending.exit:                              ; preds = %do.end305
  %219 = ptrtoint ptr %215 to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load volatile i32, ptr %215, align 4
  %and1.i.i.i.i.i = and i32 %220, 1
  %tobool322.not = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool322.not, label %if.end344, label %do.end338, !prof !1646

do.end338:                                        ; preds = %signal_pending.exit, %do.end305
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1993, i32 noundef 9, ptr noundef null) #24
  br label %if.end344

if.end344:                                        ; preds = %do.end338, %signal_pending.exit
  %221 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %222 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %223 = load ptr, ptr @rcu_gp_fqs_loop.___tp_str.286, align 4
  call fastcc void @trace_rcu_grace_period(ptr noundef %221, i32 noundef %222, ptr noundef %223)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %224 = load volatile i32, ptr @jiffies, align 128
  %225 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 26), align 8
  %226 = load volatile i32, ptr @jiffies, align 128
  %sub353 = sub i32 %225, %226
  %cmp354 = icmp slt i32 %sub353, 0
  %sub358 = sub i32 %225, %224
  %spec.select445 = select i1 %cmp354, i32 1, i32 %sub358
  br label %for.cond
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_gp_cleanup() unnamed_addr #19 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %new_gp_seq = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %new_gp_seq)
  %0 = ptrtoint ptr %new_gp_seq to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %new_gp_seq, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %1 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %1, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 31), align 4
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @rcu_state) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %2 = load volatile i32, ptr @jiffies, align 128
  store i32 %2, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 30), align 8
  %3 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 29), align 4
  %sub = sub i32 %2, %3
  %4 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 7), align 8
  %cmp = icmp ugt i32 %sub, %4
  br i1 %cmp, label %if.then, label %do.body14

if.then:                                          ; preds = %entry
  store i32 %sub, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 7), align 8
  br label %do.body14

do.body14:                                        ; preds = %if.then, %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %5 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %if.end106, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body14
  %6 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %9, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2073
  %10 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i to ptr
  %cpu31 = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %cpu31 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %cpu31, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %13
  %14 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx, align 4
  %add = add i32 %15, ptrtoint (ptr @lockdep_recursion to i32)
  %16 = inttoptr i32 %add to ptr
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %16, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2074
  %19 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i878 = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i.i878 to ptr
  %preempt_count.i.i879 = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %preempt_count.i.i879 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %preempt_count.i.i879, align 4
  %sub.i = add i32 %22, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i879, align 4
  %tobool38.not = icmp eq i32 %18, 0
  br i1 %tobool38.not, label %land.rhs, label %if.end106

land.rhs:                                         ; preds = %land.lhs.true
  %23 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i880 = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i880 to ptr
  %preempt_count.i.i881 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %preempt_count.i.i881 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %preempt_count.i.i881, align 4
  %add.i882 = add i32 %26, 1
  store volatile i32 %add.i882, ptr %preempt_count.i.i881, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2075
  %27 = ptrtoint ptr %cpu31 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cpu31, align 4
  %arrayidx62 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %28
  %29 = ptrtoint ptr %arrayidx62 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %arrayidx62, align 4
  %add63 = add i32 %30, ptrtoint (ptr @hardirqs_enabled to i32)
  %31 = inttoptr i32 %add63 to ptr
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %31, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2076
  %34 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i883 = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i.i883 to ptr
  %preempt_count.i.i884 = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %preempt_count.i.i884 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %preempt_count.i.i884, align 4
  %sub.i885 = add i32 %37, -1
  store volatile i32 %sub.i885, ptr %preempt_count.i.i884, align 4
  %tobool70.not = icmp eq i32 %33, 0
  br i1 %tobool70.not, label %if.end106, label %land.rhs73

land.rhs73:                                       ; preds = %land.rhs
  %.b867 = load i1, ptr @rcu_gp_cleanup.__already_done, align 1
  br i1 %.b867, label %if.end106, label %if.then80, !prof !1646

if.then80:                                        ; preds = %land.rhs73
  store i1 true, ptr @rcu_gp_cleanup.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2036, i32 noundef 9, ptr noundef null) #24
  br label %if.end106

if.end106:                                        ; preds = %if.then80, %land.rhs73, %land.rhs, %land.lhs.true, %do.body14
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @rcu_state) #24
  %38 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %39 = ptrtoint ptr %new_gp_seq to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %new_gp_seq, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1806
  %and.i.i = and i32 %38, 3
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %land.rhs.i, label %rcu_seq_end.exit

land.rhs.i:                                       ; preds = %if.end106
  %.b55.i = load i1, ptr @rcu_seq_end.__already_done, align 1
  br i1 %.b55.i, label %rcu_seq_end.exit, label %if.then.i, !prof !1646

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @rcu_seq_end.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.242, i32 noundef 72, i32 noundef 9, ptr noundef null) #24
  br label %rcu_seq_end.exit

rcu_seq_end.exit:                                 ; preds = %if.then.i, %land.rhs.i, %if.end106
  %40 = ptrtoint ptr %new_gp_seq to i32
  call void @__asan_load4_noabort(i32 %40)
  %new_gp_seq.0.new_gp_seq.0.933 = load i32, ptr %new_gp_seq, align 4
  %or.i.i = or i32 %new_gp_seq.0.new_gp_seq.0.933, 3
  %add.i.i = add i32 %or.i.i, 1
  store volatile i32 %add.i.i, ptr %new_gp_seq, align 4
  %41 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx119941 = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %41
  %cmp120942 = icmp ugt ptr %arrayidx119941, @rcu_state
  br i1 %cmp120942, label %do.body121, label %for.end595

do.body121:                                       ; preds = %rcu_gp_slow.exit, %rcu_seq_end.exit
  %needgp.0.off0944 = phi i1 [ %spec.select871, %rcu_gp_slow.exit ], [ false, %rcu_seq_end.exit ]
  %rnp.0943 = phi ptr [ %incdec.ptr, %rcu_gp_slow.exit ], [ @rcu_state, %rcu_seq_end.exit ]
  tail call void @_raw_spin_lock_irq(ptr noundef %rnp.0943) #24
  %qsmask = getelementptr inbounds %struct.rcu_node, ptr %rnp.0943, i32 0, i32 4
  %42 = ptrtoint ptr %qsmask to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %qsmask, align 8
  %tobool187.not = icmp eq i32 %43, 0
  br i1 %tobool187.not, label %if.end232, label %land.rhs194

land.rhs194:                                      ; preds = %do.body121
  %.b856866 = load i1, ptr @rcu_gp_cleanup.__already_done.301, align 1
  br i1 %.b856866, label %if.end232, label %if.then205, !prof !1646

if.then205:                                       ; preds = %land.rhs194
  store i1 true, ptr @rcu_gp_cleanup.__already_done.301, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2053, i32 noundef 9, ptr noundef null) #24
  br label %if.end232

if.end232:                                        ; preds = %if.then205, %land.rhs194, %do.body121
  %44 = ptrtoint ptr %new_gp_seq to i32
  call void @__asan_load4_noabort(i32 %44)
  %new_gp_seq.0.new_gp_seq.0. = load i32, ptr %new_gp_seq, align 4
  %gp_seq = getelementptr inbounds %struct.rcu_node, ptr %rnp.0943, i32 0, i32 1
  %45 = ptrtoint ptr %gp_seq to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile i32 %new_gp_seq.0.new_gp_seq.0., ptr %gp_seq, align 4
  %46 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i910 = and i32 %46, -16384
  %47 = inttoptr i32 %and.i910 to ptr
  %cpu257 = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 3
  %48 = ptrtoint ptr %cpu257 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %cpu257, align 4
  %arrayidx258 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %49
  %50 = ptrtoint ptr %arrayidx258 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %arrayidx258, align 4
  %add259 = add i32 %51, ptrtoint (ptr @rcu_data to i32)
  %52 = inttoptr i32 %add259 to ptr
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %52, i32 0, i32 7
  %53 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %mynode, align 16
  %cmp260 = icmp eq ptr %rnp.0943, %54
  br i1 %cmp260, label %if.then261, label %if.end265

if.then261:                                       ; preds = %if.end232
  %call262 = tail call fastcc zeroext i1 @__note_gp_changes(ptr noundef %rnp.0943, ptr noundef %52)
  %spec.select = select i1 %call262, i1 true, i1 %needgp.0.off0944
  br label %if.end265

if.end265:                                        ; preds = %if.then261, %if.end232
  %needgp.1.off0 = phi i1 [ %spec.select, %if.then261 ], [ %needgp.0.off0944, %if.end232 ]
  %55 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %gp_seq, align 4
  %gp_seq_needed.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0943, i32 0, i32 2
  %57 = ptrtoint ptr %gp_seq_needed.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %gp_seq_needed.i, align 16
  %sub.i911 = sub i32 %56, %58
  %cmp.i = icmp slt i32 %sub.i911, 0
  br i1 %cmp.i, label %rcu_future_gp_cleanup.exit, label %if.then.i912

if.then.i912:                                     ; preds = %if.end265
  %59 = ptrtoint ptr %gp_seq_needed.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %56, ptr %gp_seq_needed.i, align 16
  br label %rcu_future_gp_cleanup.exit

rcu_future_gp_cleanup.exit:                       ; preds = %if.then.i912, %if.end265
  %spec.select871 = phi i1 [ true, %if.end265 ], [ %needgp.1.off0, %if.then.i912 ]
  %rcu_future_gp_cleanup.___tp_str.rcu_future_gp_cleanup.___tp_str.309.i = phi ptr [ @rcu_future_gp_cleanup.___tp_str, %if.end265 ], [ @rcu_future_gp_cleanup.___tp_str.309, %if.then.i912 ]
  %60 = ptrtoint ptr %rcu_future_gp_cleanup.___tp_str.rcu_future_gp_cleanup.___tp_str.309.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %cond.i = load ptr, ptr %rcu_future_gp_cleanup.___tp_str.rcu_future_gp_cleanup.___tp_str.309.i, align 4
  %61 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %62 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %gp_seq, align 4
  %level.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0943, i32 0, i32 18
  %64 = ptrtoint ptr %level.i.i to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %level.i.i, align 1
  %grplo.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0943, i32 0, i32 15
  %66 = ptrtoint ptr %grplo.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %grplo.i.i, align 4
  %grphi.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.0943, i32 0, i32 16
  %68 = ptrtoint ptr %grphi.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %grphi.i.i, align 8
  tail call fastcc void @trace_rcu_future_grace_period(ptr noundef %61, i32 noundef %63, i32 noundef %56, i8 noundef zeroext %65, i32 noundef %67, i32 noundef %69, ptr noundef %cond.i) #24
  %70 = ptrtoint ptr %level.i.i to i32
  call void @__asan_load1_noabort(i32 %70)
  %71 = load i8, ptr %level.i.i, align 1
  %conv = zext i8 %71 to i32
  %72 = load i32, ptr @rcu_num_lvls, align 4
  %sub271 = add i32 %72, -1
  %cmp272 = icmp eq i32 %sub271, %conv
  br i1 %cmp272, label %if.end328, label %if.end358

if.end328:                                        ; preds = %rcu_future_gp_cleanup.exit
  %73 = ptrtoint ptr %grplo.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %grplo.i.i, align 4
  %cbovldmask = getelementptr inbounds %struct.rcu_node, ptr %rnp.0943, i32 0, i32 12
  %call336 = tail call i32 @_find_next_bit_be(ptr noundef %cbovldmask, i32 noundef 32, i32 noundef 0) #24
  %add337 = add i32 %call336, %74
  %75 = ptrtoint ptr %grphi.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %grphi.i.i, align 8
  %cmp339.not939 = icmp sgt i32 %add337, %76
  br i1 %cmp339.not939, label %if.end358, label %do.body342.lr.ph

do.body342.lr.ph:                                 ; preds = %if.end328
  %dep_map.i = getelementptr inbounds %struct.raw_spinlock, ptr %rnp.0943, i32 0, i32 4
  br label %do.body342

do.body342:                                       ; preds = %check_cb_ovld_locked.exit, %do.body342.lr.ph
  %cpu.0940 = phi i32 [ %add337, %do.body342.lr.ph ], [ %add357, %check_cb_ovld_locked.exit ]
  %arrayidx349 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu.0940
  %77 = ptrtoint ptr %arrayidx349 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %arrayidx349, align 4
  %add350 = add i32 %78, ptrtoint (ptr @rcu_data to i32)
  %79 = inttoptr i32 %add350 to ptr
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %80 = load i32, ptr @debug_locks, align 4
  %tobool.not.i913 = icmp eq i32 %80, 0
  br i1 %tobool.not.i913, label %if.end.i, label %land.rhs.i914

land.rhs.i914:                                    ; preds = %do.body342
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #24
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %if.end.i, !prof !1645

do.end.i:                                         ; preds = %land.rhs.i914
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2964, i32 noundef 9, ptr noundef null) #24
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i914, %do.body342
  %81 = load i32, ptr @qovld_calc, align 4
  %cmp24.i = icmp slt i32 %81, 1
  br i1 %cmp24.i, label %check_cb_ovld_locked.exit, label %if.end26.i

if.end26.i:                                       ; preds = %if.end.i
  %len.i.i = getelementptr inbounds %struct.rcu_data, ptr %79, i32 0, i32 13, i32 3
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %len.i.i, i32 noundef 4) #24
  %82 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile i32, ptr %len.i.i, align 4
  %84 = load i32, ptr @qovld_calc, align 4
  %cmp28.not.i = icmp slt i32 %83, %84
  %85 = ptrtoint ptr %cbovldmask to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %cbovldmask, align 8
  %grpmask46.i = getelementptr inbounds %struct.rcu_data, ptr %79, i32 0, i32 8
  %87 = ptrtoint ptr %grpmask46.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %grpmask46.i, align 4
  %neg.i = xor i32 %88, -1
  %and.i915 = and i32 %86, %neg.i
  %or.i = or i32 %88, %86
  %and.sink.i = select i1 %cmp28.not.i, i32 %and.i915, i32 %or.i
  store volatile i32 %and.sink.i, ptr %cbovldmask, align 8
  br label %check_cb_ovld_locked.exit

check_cb_ovld_locked.exit:                        ; preds = %if.end26.i, %if.end.i
  %89 = ptrtoint ptr %grplo.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %grplo.i.i, align 4
  %add353 = add i32 %cpu.0940, 1
  %sub355 = sub i32 %add353, %90
  %call356 = tail call i32 @_find_next_bit_be(ptr noundef %cbovldmask, i32 noundef 32, i32 noundef %sub355) #24
  %add357 = add i32 %call356, %90
  %91 = ptrtoint ptr %grphi.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %grphi.i.i, align 8
  %cmp339.not = icmp sgt i32 %add357, %92
  br i1 %cmp339.not, label %if.end358, label %do.body342

if.end358:                                        ; preds = %check_cb_ovld_locked.exit, %if.end328, %rcu_future_gp_cleanup.exit
  %93 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %gp_seq, align 4
  %shr.i.i = lshr i32 %94, 2
  %and.i917 = and i32 %shr.i.i, 1
  %arrayidx.i = getelementptr %struct.rcu_node, ptr %rnp.0943, i32 0, i32 30, i32 %and.i917
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %95 = load i32, ptr @debug_locks, align 4
  %tobool363.not = icmp eq i32 %95, 0
  br i1 %tobool363.not, label %if.end476, label %land.lhs.true364

land.lhs.true364:                                 ; preds = %if.end358
  %96 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i886 = and i32 %96, -16384
  %97 = inttoptr i32 %and.i.i.i886 to ptr
  %preempt_count.i.i887 = getelementptr inbounds %struct.thread_info, ptr %97, i32 0, i32 1
  %98 = ptrtoint ptr %preempt_count.i.i887 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load volatile i32, ptr %preempt_count.i.i887, align 4
  %add.i888 = add i32 %99, 1
  store volatile i32 %add.i888, ptr %preempt_count.i.i887, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2077
  %100 = ptrtoint ptr %cpu257 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %cpu257, align 4
  %arrayidx388 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %101
  %102 = ptrtoint ptr %arrayidx388 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %arrayidx388, align 4
  %add389 = add i32 %103, ptrtoint (ptr @lockdep_recursion to i32)
  %104 = inttoptr i32 %add389 to ptr
  %105 = ptrtoint ptr %104 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load volatile i32, ptr %104, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2078
  %107 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i889 = and i32 %107, -16384
  %108 = inttoptr i32 %and.i.i.i889 to ptr
  %preempt_count.i.i890 = getelementptr inbounds %struct.thread_info, ptr %108, i32 0, i32 1
  %109 = ptrtoint ptr %preempt_count.i.i890 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load volatile i32, ptr %preempt_count.i.i890, align 4
  %sub.i891 = add i32 %110, -1
  store volatile i32 %sub.i891, ptr %preempt_count.i.i890, align 4
  %tobool396.not = icmp eq i32 %106, 0
  br i1 %tobool396.not, label %land.rhs397, label %if.end476

land.rhs397:                                      ; preds = %land.lhs.true364
  %111 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i892 = and i32 %111, -16384
  %112 = inttoptr i32 %and.i.i.i892 to ptr
  %preempt_count.i.i893 = getelementptr inbounds %struct.thread_info, ptr %112, i32 0, i32 1
  %113 = ptrtoint ptr %preempt_count.i.i893 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load volatile i32, ptr %preempt_count.i.i893, align 4
  %add.i894 = add i32 %114, 1
  store volatile i32 %add.i894, ptr %preempt_count.i.i893, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2079
  %115 = ptrtoint ptr %cpu257 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %cpu257, align 4
  %arrayidx421 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %116
  %117 = ptrtoint ptr %arrayidx421 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %arrayidx421, align 4
  %add422 = add i32 %118, ptrtoint (ptr @hardirqs_enabled to i32)
  %119 = inttoptr i32 %add422 to ptr
  %120 = ptrtoint ptr %119 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load volatile i32, ptr %119, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2080
  %122 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i895 = and i32 %122, -16384
  %123 = inttoptr i32 %and.i.i.i895 to ptr
  %preempt_count.i.i896 = getelementptr inbounds %struct.thread_info, ptr %123, i32 0, i32 1
  %124 = ptrtoint ptr %preempt_count.i.i896 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load volatile i32, ptr %preempt_count.i.i896, align 4
  %sub.i897 = add i32 %125, -1
  store volatile i32 %sub.i897, ptr %preempt_count.i.i896, align 4
  %tobool429.not = icmp eq i32 %121, 0
  br i1 %tobool429.not, label %if.end476, label %land.rhs438

land.rhs438:                                      ; preds = %land.rhs397
  %.b857865 = load i1, ptr @rcu_gp_cleanup.__already_done.303, align 1
  br i1 %.b857865, label %if.end476, label %if.then449, !prof !1646

if.then449:                                       ; preds = %land.rhs438
  store i1 true, ptr @rcu_gp_cleanup.__already_done.303, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2067, i32 noundef 9, ptr noundef null) #24
  br label %if.end476

if.end476:                                        ; preds = %if.then449, %land.rhs438, %land.rhs397, %land.lhs.true364, %if.end358
  tail call void @_raw_spin_unlock_irq(ptr noundef %rnp.0943) #24
  tail call void @swake_up_all(ptr noundef %arrayidx.i) #24
  %task = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 2
  %126 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %task, align 8
  %rcu_tasks_holdout = getelementptr inbounds %struct.task_struct, ptr %127, i32 0, i32 40
  %128 = ptrtoint ptr %rcu_tasks_holdout to i32
  call void @__asan_load1_noabort(i32 %128)
  %129 = load volatile i8, ptr %rcu_tasks_holdout, align 4
  %tobool498.not = icmp eq i8 %129, 0
  br i1 %tobool498.not, label %do.end518, label %do.body504

do.body504:                                       ; preds = %if.end476
  %130 = ptrtoint ptr %rcu_tasks_holdout to i32
  call void @__asan_store1_noabort(i32 %130)
  store volatile i8 0, ptr %rcu_tasks_holdout, align 4
  br label %do.end518

do.end518:                                        ; preds = %do.body504, %if.end476
  %131 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %task, align 8
  %trc_reader_checked = getelementptr inbounds %struct.task_struct, ptr %132, i32 0, i32 47
  %133 = ptrtoint ptr %trc_reader_checked to i32
  call void @__asan_load1_noabort(i32 %133)
  %134 = load volatile i8, ptr %trc_reader_checked, align 64, !range !1644
  %tobool522.not = icmp eq i8 %134, 0
  br i1 %tobool522.not, label %do.end534, label %do.end580, !prof !1645

do.end534:                                        ; preds = %do.end518
  %trc_reader_nesting = getelementptr inbounds %struct.task_struct, ptr %132, i32 0, i32 44
  %135 = ptrtoint ptr %trc_reader_nesting to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load volatile i32, ptr %trc_reader_nesting, align 4
  %tobool538.not = icmp eq i32 %136, 0
  br i1 %tobool538.not, label %do.end553, label %do.end580, !prof !1646

do.end553:                                        ; preds = %do.end534
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2081
  %137 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %task, align 8
  %trc_reader_checked561 = getelementptr inbounds %struct.task_struct, ptr %138, i32 0, i32 47
  %139 = ptrtoint ptr %trc_reader_checked561 to i32
  call void @__asan_store1_noabort(i32 %139)
  store volatile i8 1, ptr %trc_reader_checked561, align 64
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2082
  br label %do.end580

do.end580:                                        ; preds = %do.end553, %do.end534, %do.end518
  tail call void @__might_resched(ptr noundef nonnull @.str, i32 noundef 2069, i32 noundef 0) #24
  %call.i = tail call i32 @__cond_resched() #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %140 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %140, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 31), align 4
  %141 = load i32, ptr @gp_cleanup_delay, align 4
  %cmp.i918 = icmp sgt i32 %141, 0
  br i1 %cmp.i918, label %land.lhs.true.i, label %rcu_gp_slow.exit

land.lhs.true.i:                                  ; preds = %do.end580
  %142 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %shr.i.i919 = lshr i32 %142, 2
  %143 = load i32, ptr @rcu_num_nodes, align 4
  %mul.i = mul i32 %141, 3
  %mul1.i = mul i32 %mul.i, %143
  %rem.i = urem i32 %shr.i.i919, %mul1.i
  %tobool.not.i920 = icmp eq i32 %rem.i, 0
  br i1 %tobool.not.i920, label %if.then.i921, label %rcu_gp_slow.exit

if.then.i921:                                     ; preds = %land.lhs.true.i
  %call2.i = tail call i32 @schedule_timeout_idle(i32 noundef %141) #24
  br label %rcu_gp_slow.exit

rcu_gp_slow.exit:                                 ; preds = %if.then.i921, %land.lhs.true.i, %do.end580
  %incdec.ptr = getelementptr %struct.rcu_node, ptr %rnp.0943, i32 1
  %144 = load i32, ptr @rcu_num_nodes, align 4
  %arrayidx119 = getelementptr [3 x %struct.rcu_node], ptr @rcu_state, i32 0, i32 %144
  %cmp120 = icmp ult ptr %incdec.ptr, %arrayidx119
  br i1 %cmp120, label %do.body121, label %for.end595

for.end595:                                       ; preds = %rcu_gp_slow.exit, %rcu_seq_end.exit
  %needgp.0.off0.lcssa = phi i1 [ false, %rcu_seq_end.exit ], [ %spec.select871, %rcu_gp_slow.exit ]
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @rcu_state) #24
  %145 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %146 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %147 = load ptr, ptr @rcu_gp_cleanup.___tp_str, align 4
  tail call fastcc void @trace_rcu_grace_period(ptr noundef %145, i32 noundef %146, ptr noundef %147)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1806
  %148 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %and.i.i923 = and i32 %148, 3
  %tobool.not.i924 = icmp eq i32 %and.i.i923, 0
  br i1 %tobool.not.i924, label %land.rhs.i926, label %rcu_seq_end.exit930

land.rhs.i926:                                    ; preds = %for.end595
  %.b55.i925 = load i1, ptr @rcu_seq_end.__already_done, align 1
  br i1 %.b55.i925, label %rcu_seq_end.exit930, label %if.then.i927, !prof !1646

if.then.i927:                                     ; preds = %land.rhs.i926
  store i1 true, ptr @rcu_seq_end.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.242, i32 noundef 72, i32 noundef 9, ptr noundef null) #24
  br label %rcu_seq_end.exit930

rcu_seq_end.exit930:                              ; preds = %if.then.i927, %land.rhs.i926, %for.end595
  %149 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %or.i.i928 = or i32 %149, 3
  %add.i.i929 = add i32 %or.i.i928, 1
  store volatile i32 %add.i.i929, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  store volatile i16 0, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 11), align 2
  %150 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i931 = and i32 %150, -16384
  %151 = inttoptr i32 %and.i931 to ptr
  %cpu622 = getelementptr inbounds %struct.thread_info, ptr %151, i32 0, i32 3
  %152 = ptrtoint ptr %cpu622 to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %cpu622, align 4
  %arrayidx623 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %153
  %154 = ptrtoint ptr %arrayidx623 to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %arrayidx623, align 4
  %add624 = add i32 %155, ptrtoint (ptr @rcu_data to i32)
  %156 = inttoptr i32 %add624 to ptr
  br i1 %needgp.0.off0.lcssa, label %if.end634, label %land.lhs.true626

land.lhs.true626:                                 ; preds = %rcu_seq_end.exit930
  %157 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 1), align 4
  %158 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 2), align 16
  %sub628 = sub i32 %157, %158
  %cmp629 = icmp slt i32 %sub628, 0
  br i1 %cmp629, label %if.end634.thread, label %if.end634.thread945

if.end634:                                        ; preds = %rcu_seq_end.exit930
  %call635 = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %156)
  br i1 %call635, label %do.body648, label %lor.lhs.false

if.end634.thread945:                              ; preds = %land.lhs.true626
  %call635946 = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %156)
  br i1 %call635946, label %do.body667, label %lor.lhs.false.thread

lor.lhs.false.thread:                             ; preds = %if.end634.thread945
  %call639948 = tail call fastcc zeroext i1 @rcu_accelerate_cbs(ptr noundef nonnull @rcu_state, ptr noundef %156)
  br label %do.body667

if.end634.thread:                                 ; preds = %land.lhs.true626
  %159 = load ptr, ptr @rcu_gp_cleanup.___tp_str.305, align 4
  %160 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %161 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 1), align 4
  %162 = load i8, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 18), align 1
  %163 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 15), align 4
  %164 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 0, i32 0, i32 16), align 8
  tail call fastcc void @trace_rcu_future_grace_period(ptr noundef %160, i32 noundef %161, i32 noundef %158, i8 noundef zeroext %162, i32 noundef %163, i32 noundef %164, ptr noundef %159) #24
  %call635935 = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %156)
  br i1 %call635935, label %do.body648, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end634.thread, %if.end634
  %needgp.2.off0937 = phi i1 [ true, %if.end634.thread ], [ %needgp.0.off0.lcssa, %if.end634 ]
  %call639 = tail call fastcc zeroext i1 @rcu_accelerate_cbs(ptr noundef nonnull @rcu_state, ptr noundef %156)
  %needgp.2.off0.not = xor i1 %needgp.2.off0937, true
  %brmerge = select i1 %call639, i1 true, i1 %needgp.2.off0.not
  br i1 %brmerge, label %do.body667, label %do.body648

do.body648:                                       ; preds = %lor.lhs.false, %if.end634.thread, %if.end634
  store volatile i16 1, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %165 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %165, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 32), align 128
  %166 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %167 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %168 = load ptr, ptr @rcu_gp_cleanup.___tp_str.307, align 4
  tail call fastcc void @trace_rcu_grace_period(ptr noundef %166, i32 noundef %167, ptr noundef %168)
  br label %do.body676

do.body667:                                       ; preds = %lor.lhs.false, %lor.lhs.false.thread, %if.end634.thread945
  %169 = load i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %170 = and i16 %169, 1
  store volatile i16 %170, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  br label %do.body676

do.body676:                                       ; preds = %do.body667, %do.body648
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %171 = load i32, ptr @debug_locks, align 4
  %tobool678.not = icmp eq i32 %171, 0
  br i1 %tobool678.not, label %if.end791, label %land.lhs.true679

land.lhs.true679:                                 ; preds = %do.body676
  %172 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i898 = and i32 %172, -16384
  %173 = inttoptr i32 %and.i.i.i898 to ptr
  %preempt_count.i.i899 = getelementptr inbounds %struct.thread_info, ptr %173, i32 0, i32 1
  %174 = ptrtoint ptr %preempt_count.i.i899 to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load volatile i32, ptr %preempt_count.i.i899, align 4
  %add.i900 = add i32 %175, 1
  store volatile i32 %add.i900, ptr %preempt_count.i.i899, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2083
  %176 = ptrtoint ptr %cpu622 to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load i32, ptr %cpu622, align 4
  %arrayidx703 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %177
  %178 = ptrtoint ptr %arrayidx703 to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load i32, ptr %arrayidx703, align 4
  %add704 = add i32 %179, ptrtoint (ptr @lockdep_recursion to i32)
  %180 = inttoptr i32 %add704 to ptr
  %181 = ptrtoint ptr %180 to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load volatile i32, ptr %180, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2084
  %183 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i901 = and i32 %183, -16384
  %184 = inttoptr i32 %and.i.i.i901 to ptr
  %preempt_count.i.i902 = getelementptr inbounds %struct.thread_info, ptr %184, i32 0, i32 1
  %185 = ptrtoint ptr %preempt_count.i.i902 to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load volatile i32, ptr %preempt_count.i.i902, align 4
  %sub.i903 = add i32 %186, -1
  store volatile i32 %sub.i903, ptr %preempt_count.i.i902, align 4
  %tobool711.not = icmp eq i32 %182, 0
  br i1 %tobool711.not, label %land.rhs712, label %if.end791

land.rhs712:                                      ; preds = %land.lhs.true679
  %187 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i904 = and i32 %187, -16384
  %188 = inttoptr i32 %and.i.i.i904 to ptr
  %preempt_count.i.i905 = getelementptr inbounds %struct.thread_info, ptr %188, i32 0, i32 1
  %189 = ptrtoint ptr %preempt_count.i.i905 to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load volatile i32, ptr %preempt_count.i.i905, align 4
  %add.i906 = add i32 %190, 1
  store volatile i32 %add.i906, ptr %preempt_count.i.i905, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2085
  %191 = ptrtoint ptr %cpu622 to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load i32, ptr %cpu622, align 4
  %arrayidx736 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %192
  %193 = ptrtoint ptr %arrayidx736 to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %arrayidx736, align 4
  %add737 = add i32 %194, ptrtoint (ptr @hardirqs_enabled to i32)
  %195 = inttoptr i32 %add737 to ptr
  %196 = ptrtoint ptr %195 to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load volatile i32, ptr %195, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2086
  %198 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i907 = and i32 %198, -16384
  %199 = inttoptr i32 %and.i.i.i907 to ptr
  %preempt_count.i.i908 = getelementptr inbounds %struct.thread_info, ptr %199, i32 0, i32 1
  %200 = ptrtoint ptr %preempt_count.i.i908 to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load volatile i32, ptr %preempt_count.i.i908, align 4
  %sub.i909 = add i32 %201, -1
  store volatile i32 %sub.i909, ptr %preempt_count.i.i908, align 4
  %tobool744.not = icmp eq i32 %197, 0
  br i1 %tobool744.not, label %if.end791, label %land.rhs753

land.rhs753:                                      ; preds = %land.rhs712
  %.b858864 = load i1, ptr @rcu_gp_cleanup.__already_done.308, align 1
  br i1 %.b858864, label %if.end791, label %if.then764, !prof !1646

if.then764:                                       ; preds = %land.rhs753
  store i1 true, ptr @rcu_gp_cleanup.__already_done.308, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2100, i32 noundef 9, ptr noundef null) #24
  br label %if.end791

if.end791:                                        ; preds = %if.then764, %land.rhs753, %land.rhs712, %land.lhs.true679, %do.body676
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @rcu_state) #24
  tail call void @on_each_cpu_cond_mask(ptr noundef null, ptr noundef nonnull @rcu_strict_gp_boundary, ptr noundef null, i1 noundef zeroext false, ptr noundef nonnull @__cpu_online_mask) #24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %new_gp_seq)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @schedule_timeout_idle(i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_irq(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irq(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_cleanup_dead_rnp(ptr noundef %rnp_leaf) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end, label %land.rhs

land.rhs:                                         ; preds = %entry
  %dep_map = getelementptr inbounds %struct.raw_spinlock, ptr %rnp_leaf, i32 0, i32 4
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #24
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %if.end, !prof !1645

do.end:                                           ; preds = %land.rhs
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2416, i32 noundef 9, ptr noundef null) #24
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs, %entry
  %qsmaskinit = getelementptr inbounds %struct.rcu_node, ptr %rnp_leaf, i32 0, i32 6
  %1 = ptrtoint ptr %qsmaskinit to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %qsmaskinit, align 64
  %tobool24.not = icmp eq i32 %2, 0
  br i1 %tobool24.not, label %for.cond.preheader, label %land.rhs30

for.cond.preheader:                               ; preds = %if.end
  %parent509 = getelementptr inbounds %struct.rcu_node, ptr %rnp_leaf, i32 0, i32 20
  %3 = ptrtoint ptr %parent509 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %parent509, align 16
  %tobool134.not510 = icmp eq ptr %4, null
  br i1 %tobool134.not510, label %cleanup, label %do.body137

land.rhs30:                                       ; preds = %if.end
  %.b479 = load i1, ptr @rcu_cleanup_dead_rnp.__already_done, align 1
  br i1 %.b479, label %cleanup, label %if.then41, !prof !1646

if.then41:                                        ; preds = %land.rhs30
  store i1 true, ptr @rcu_cleanup_dead_rnp.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2418, i32 noundef 9, ptr noundef null) #24
  br label %cleanup

do.body137:                                       ; preds = %if.end437, %for.cond.preheader
  %5 = phi ptr [ %80, %if.end437 ], [ %4, %for.cond.preheader ]
  %rnp.0511 = phi ptr [ %5, %if.end437 ], [ %rnp_leaf, %for.cond.preheader ]
  %grpmask = getelementptr inbounds %struct.rcu_node, ptr %rnp.0511, i32 0, i32 14
  %6 = ptrtoint ptr %grpmask to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %grpmask, align 32
  tail call void @_raw_spin_lock(ptr noundef nonnull %5) #24
  %neg = xor i32 %7, -1
  %qsmaskinit144 = getelementptr inbounds %struct.rcu_node, ptr %5, i32 0, i32 6
  %8 = ptrtoint ptr %qsmaskinit144 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %qsmaskinit144, align 64
  %and = and i32 %9, %neg
  store i32 %and, ptr %qsmaskinit144, align 64
  %qsmask = getelementptr inbounds %struct.rcu_node, ptr %5, i32 0, i32 4
  %10 = ptrtoint ptr %qsmask to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %qsmask, align 8
  %tobool146.not = icmp eq i32 %11, 0
  br i1 %tobool146.not, label %if.end191, label %land.rhs153

land.rhs153:                                      ; preds = %do.body137
  %.b473478 = load i1, ptr @rcu_cleanup_dead_rnp.__already_done.277, align 1
  br i1 %.b473478, label %if.end191thread-pre-split, label %if.then164, !prof !1646

if.then164:                                       ; preds = %land.rhs153
  store i1 true, ptr @rcu_cleanup_dead_rnp.__already_done.277, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2429, i32 noundef 9, ptr noundef null) #24
  br label %if.end191thread-pre-split

if.end191thread-pre-split:                        ; preds = %if.then164, %land.rhs153
  %12 = ptrtoint ptr %qsmaskinit144 to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pr = load i32, ptr %qsmaskinit144, align 64
  br label %if.end191

if.end191:                                        ; preds = %if.end191thread-pre-split, %do.body137
  %13 = phi i32 [ %.pr, %if.end191thread-pre-split ], [ %and, %do.body137 ]
  %tobool200.not = icmp eq i32 %13, 0
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %14 = load i32, ptr @debug_locks, align 4
  %tobool325.not = icmp eq i32 %14, 0
  br i1 %tobool200.not, label %do.body323, label %do.body203

do.body203:                                       ; preds = %if.end191
  br i1 %tobool325.not, label %if.end308, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body203
  %15 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %18, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2087
  %19 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %19, -16384
  %20 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %22
  %23 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx, align 4
  %add = add i32 %24, ptrtoint (ptr @lockdep_recursion to i32)
  %25 = inttoptr i32 %add to ptr
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %25, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2088
  %28 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i487 = and i32 %28, -16384
  %29 = inttoptr i32 %and.i.i.i487 to ptr
  %preempt_count.i.i488 = getelementptr inbounds %struct.thread_info, ptr %29, i32 0, i32 1
  %30 = ptrtoint ptr %preempt_count.i.i488 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %preempt_count.i.i488, align 4
  %sub.i = add i32 %31, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i488, align 4
  %tobool229.not = icmp eq i32 %27, 0
  br i1 %tobool229.not, label %land.rhs230, label %if.end308

land.rhs230:                                      ; preds = %land.lhs.true
  %32 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i489 = and i32 %32, -16384
  %33 = inttoptr i32 %and.i.i.i489 to ptr
  %preempt_count.i.i490 = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %preempt_count.i.i490 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %preempt_count.i.i490, align 4
  %add.i491 = add i32 %35, 1
  store volatile i32 %add.i491, ptr %preempt_count.i.i490, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2089
  %36 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %cpu, align 4
  %arrayidx254 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %37
  %38 = ptrtoint ptr %arrayidx254 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %arrayidx254, align 4
  %add255 = add i32 %39, ptrtoint (ptr @hardirqs_enabled to i32)
  %40 = inttoptr i32 %add255 to ptr
  %41 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %40, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2090
  %43 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i492 = and i32 %43, -16384
  %44 = inttoptr i32 %and.i.i.i492 to ptr
  %preempt_count.i.i493 = getelementptr inbounds %struct.thread_info, ptr %44, i32 0, i32 1
  %45 = ptrtoint ptr %preempt_count.i.i493 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %preempt_count.i.i493, align 4
  %sub.i494 = add i32 %46, -1
  store volatile i32 %sub.i494, ptr %preempt_count.i.i493, align 4
  %tobool262.not = icmp eq i32 %42, 0
  br i1 %tobool262.not, label %if.end308, label %land.rhs270

land.rhs270:                                      ; preds = %land.rhs230
  %.b474477 = load i1, ptr @rcu_cleanup_dead_rnp.__already_done.278, align 1
  br i1 %.b474477, label %if.end308, label %if.then281, !prof !1646

if.then281:                                       ; preds = %land.rhs270
  store i1 true, ptr @rcu_cleanup_dead_rnp.__already_done.278, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2431, i32 noundef 9, ptr noundef null) #24
  br label %if.end308

if.end308:                                        ; preds = %if.then281, %land.rhs270, %land.rhs230, %land.lhs.true, %do.body203
  tail call void @_raw_spin_unlock(ptr noundef nonnull %5) #24
  br label %cleanup

do.body323:                                       ; preds = %if.end191
  br i1 %tobool325.not, label %if.end437, label %land.lhs.true326

land.lhs.true326:                                 ; preds = %do.body323
  %47 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i495 = and i32 %47, -16384
  %48 = inttoptr i32 %and.i.i.i495 to ptr
  %preempt_count.i.i496 = getelementptr inbounds %struct.thread_info, ptr %48, i32 0, i32 1
  %49 = ptrtoint ptr %preempt_count.i.i496 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %preempt_count.i.i496, align 4
  %add.i497 = add i32 %50, 1
  store volatile i32 %add.i497, ptr %preempt_count.i.i496, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2091
  %51 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i507 = and i32 %51, -16384
  %52 = inttoptr i32 %and.i507 to ptr
  %cpu349 = getelementptr inbounds %struct.thread_info, ptr %52, i32 0, i32 3
  %53 = ptrtoint ptr %cpu349 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %cpu349, align 4
  %arrayidx350 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %54
  %55 = ptrtoint ptr %arrayidx350 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %arrayidx350, align 4
  %add351 = add i32 %56, ptrtoint (ptr @lockdep_recursion to i32)
  %57 = inttoptr i32 %add351 to ptr
  %58 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %57, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2092
  %60 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i498 = and i32 %60, -16384
  %61 = inttoptr i32 %and.i.i.i498 to ptr
  %preempt_count.i.i499 = getelementptr inbounds %struct.thread_info, ptr %61, i32 0, i32 1
  %62 = ptrtoint ptr %preempt_count.i.i499 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %preempt_count.i.i499, align 4
  %sub.i500 = add i32 %63, -1
  store volatile i32 %sub.i500, ptr %preempt_count.i.i499, align 4
  %tobool358.not = icmp eq i32 %59, 0
  br i1 %tobool358.not, label %land.rhs359, label %if.end437

land.rhs359:                                      ; preds = %land.lhs.true326
  %64 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i501 = and i32 %64, -16384
  %65 = inttoptr i32 %and.i.i.i501 to ptr
  %preempt_count.i.i502 = getelementptr inbounds %struct.thread_info, ptr %65, i32 0, i32 1
  %66 = ptrtoint ptr %preempt_count.i.i502 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile i32, ptr %preempt_count.i.i502, align 4
  %add.i503 = add i32 %67, 1
  store volatile i32 %add.i503, ptr %preempt_count.i.i502, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2093
  %68 = ptrtoint ptr %cpu349 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %cpu349, align 4
  %arrayidx383 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %69
  %70 = ptrtoint ptr %arrayidx383 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %arrayidx383, align 4
  %add384 = add i32 %71, ptrtoint (ptr @hardirqs_enabled to i32)
  %72 = inttoptr i32 %add384 to ptr
  %73 = ptrtoint ptr %72 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load volatile i32, ptr %72, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2094
  %75 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i504 = and i32 %75, -16384
  %76 = inttoptr i32 %and.i.i.i504 to ptr
  %preempt_count.i.i505 = getelementptr inbounds %struct.thread_info, ptr %76, i32 0, i32 1
  %77 = ptrtoint ptr %preempt_count.i.i505 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile i32, ptr %preempt_count.i.i505, align 4
  %sub.i506 = add i32 %78, -1
  store volatile i32 %sub.i506, ptr %preempt_count.i.i505, align 4
  %tobool391.not = icmp eq i32 %74, 0
  br i1 %tobool391.not, label %if.end437, label %land.rhs399

land.rhs399:                                      ; preds = %land.rhs359
  %.b475476 = load i1, ptr @rcu_cleanup_dead_rnp.__already_done.279, align 1
  br i1 %.b475476, label %if.end437, label %if.then410, !prof !1646

if.then410:                                       ; preds = %land.rhs399
  store i1 true, ptr @rcu_cleanup_dead_rnp.__already_done.279, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2435, i32 noundef 9, ptr noundef null) #24
  br label %if.end437

if.end437:                                        ; preds = %if.then410, %land.rhs399, %land.rhs359, %land.lhs.true326, %do.body323
  tail call void @_raw_spin_unlock(ptr noundef nonnull %5) #24
  %parent = getelementptr inbounds %struct.rcu_node, ptr %5, i32 0, i32 20
  %79 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %parent, align 16
  %tobool134.not = icmp eq ptr %80, null
  br i1 %tobool134.not, label %cleanup, label %do.body137

cleanup:                                          ; preds = %if.end437, %if.end308, %if.then41, %land.rhs30, %for.cond.preheader
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rcu_grace_period_init(ptr noundef %rcuname, i32 noundef %gp_seq, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, i32 noundef %qsmask) unnamed_addr #7 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_grace_period_init, i32 0, i32 1), ptr blockaddress(@trace_rcu_grace_period_init, %do.body)) #24
          to label %if.end48 [label %do.body], !srcloc !1665

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2095
  %call42 = tail call i32 @__traceiter_rcu_grace_period_init(ptr noundef null, ptr noundef %rcuname, i32 noundef %gp_seq, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, i32 noundef %qsmask) #24
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2096
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !1646

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1668
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_grace_period_init, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_grace_period_init, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #24
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rcu_grace_period_init.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_rcu_grace_period_init.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.128, i32 noundef 175, ptr noundef nonnull @.str.129) #24
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1669
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_strict_gp_boundary(ptr nocapture noundef readnone %unused) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @invoke_rcu_core()
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rcu_grace_period_init(ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @on_each_cpu_cond_mask(ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @schedule_timeout(i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @dyntick_save_progress_counter(ptr noundef %rdp) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1650
  %dynticks.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 21
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dynticks.i, i32 noundef 4) #24
  %0 = ptrtoint ptr %dynticks.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %dynticks.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1651
  %dynticks_snap = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 18
  %2 = ptrtoint ptr %dynticks_snap to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %1, ptr %dynticks_snap, align 8
  %and.i = and i32 %1, 1
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then, label %return

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %4 = ptrtoint ptr %rdp to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rdp, align 128
  %cpu = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 68
  %6 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu, align 64
  %8 = load ptr, ptr @dyntick_save_progress_counter.___tp_str, align 4
  tail call fastcc void @trace_rcu_fqs(ptr noundef %3, i32 noundef %5, i32 noundef %7, ptr noundef %8)
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 7
  %9 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %mynode, align 16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %11 = load i32, ptr @debug_locks, align 4
  %tobool.not.i9 = icmp eq i32 %11, 0
  br i1 %tobool.not.i9, label %if.end.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.then
  %dep_map.i = getelementptr inbounds %struct.raw_spinlock, ptr %10, i32 0, i32 4
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #24
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %if.end.i, !prof !1645

do.end.i:                                         ; preds = %land.rhs.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1196, i32 noundef 9, ptr noundef null) #24
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i, %if.then
  %12 = ptrtoint ptr %rdp to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %rdp, align 4
  %add.i = add i32 %13, 1073741823
  %gp_seq25.i = getelementptr inbounds %struct.rcu_node, ptr %10, i32 0, i32 1
  %14 = ptrtoint ptr %gp_seq25.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %gp_seq25.i, align 4
  %sub.i = sub i32 %add.i, %15
  %cmp26.i = icmp slt i32 %sub.i, 0
  br i1 %cmp26.i, label %do.body32.i, label %if.end37.i

do.body32.i:                                      ; preds = %if.end.i
  %gpwrap.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 5
  %16 = ptrtoint ptr %gpwrap.i to i32
  call void @__asan_store1_noabort(i32 %16)
  store volatile i8 1, ptr %gpwrap.i, align 4
  br label %if.end37.i

if.end37.i:                                       ; preds = %do.body32.i, %if.end.i
  %rcu_iw_gp_seq.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 62
  %17 = ptrtoint ptr %rcu_iw_gp_seq.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %rcu_iw_gp_seq.i, align 8
  %add38.i = add i32 %18, 1073741823
  %19 = ptrtoint ptr %gp_seq25.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %gp_seq25.i, align 4
  %sub40.i = sub i32 %add38.i, %20
  %cmp41.i = icmp slt i32 %sub40.i, 0
  br i1 %cmp41.i, label %if.then42.i, label %return

if.then42.i:                                      ; preds = %if.end37.i
  %add44.i = add i32 %20, 1073741823
  %21 = ptrtoint ptr %rcu_iw_gp_seq.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %add44.i, ptr %rcu_iw_gp_seq.i, align 8
  br label %return

return:                                           ; preds = %if.then42.i, %if.end37.i, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 1, %if.end37.i ], [ 1, %if.then42.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rcu_implicit_dynticks_qs(ptr noundef %rdp) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 7
  %0 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mynode, align 16
  %dynticks_snap = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 18
  %2 = ptrtoint ptr %dynticks_snap to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dynticks_snap, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1650
  %dynticks.i.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 21
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dynticks.i.i, i32 noundef 4) #24
  %4 = ptrtoint ptr %dynticks.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %dynticks.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1651
  %cmp.i.not = icmp eq i32 %5, %3
  br i1 %cmp.i.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %6 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %7 = ptrtoint ptr %rdp to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %rdp, align 128
  %cpu = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 68
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 64
  %11 = load ptr, ptr @rcu_implicit_dynticks_qs.___tp_str, align 4
  tail call fastcc void @trace_rcu_fqs(ptr noundef %6, i32 noundef %8, i32 noundef %10, ptr noundef %11)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %12 = load i32, ptr @debug_locks, align 4
  %tobool.not.i = icmp eq i32 %12, 0
  br i1 %tobool.not.i, label %if.end.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.then
  %dep_map.i = getelementptr inbounds %struct.raw_spinlock, ptr %1, i32 0, i32 4
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #24
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %if.end.i, !prof !1645

do.end.i:                                         ; preds = %land.rhs.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1196, i32 noundef 9, ptr noundef null) #24
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i, %if.then
  %13 = ptrtoint ptr %rdp to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %rdp, align 4
  %add.i = add i32 %14, 1073741823
  %gp_seq25.i = getelementptr inbounds %struct.rcu_node, ptr %1, i32 0, i32 1
  %15 = ptrtoint ptr %gp_seq25.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %gp_seq25.i, align 4
  %sub.i = sub i32 %add.i, %16
  %cmp26.i = icmp slt i32 %sub.i, 0
  br i1 %cmp26.i, label %do.body32.i, label %if.end37.i

do.body32.i:                                      ; preds = %if.end.i
  %gpwrap.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 5
  %17 = ptrtoint ptr %gpwrap.i to i32
  call void @__asan_store1_noabort(i32 %17)
  store volatile i8 1, ptr %gpwrap.i, align 4
  br label %if.end37.i

if.end37.i:                                       ; preds = %do.body32.i, %if.end.i
  %rcu_iw_gp_seq.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 62
  %18 = ptrtoint ptr %rcu_iw_gp_seq.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %rcu_iw_gp_seq.i, align 8
  %add38.i = add i32 %19, 1073741823
  %20 = ptrtoint ptr %gp_seq25.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %gp_seq25.i, align 4
  %sub40.i = sub i32 %add38.i, %21
  %cmp41.i = icmp slt i32 %sub40.i, 0
  br i1 %cmp41.i, label %if.then42.i, label %cleanup

if.then42.i:                                      ; preds = %if.end37.i
  %add44.i = add i32 %21, 1073741823
  %22 = ptrtoint ptr %rcu_iw_gp_seq.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %add44.i, ptr %rcu_iw_gp_seq.i, align 8
  br label %cleanup

if.end:                                           ; preds = %entry
  %grpmask = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 8
  %23 = ptrtoint ptr %grpmask to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %grpmask, align 4
  %qsmaskinitnext.i = getelementptr inbounds %struct.rcu_node, ptr %1, i32 0, i32 7
  %25 = ptrtoint ptr %qsmaskinitnext.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %qsmaskinitnext.i, align 4
  %and = and i32 %26, %24
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %land.rhs, label %do.end79

land.rhs:                                         ; preds = %if.end
  %.b281 = load i1, ptr @rcu_implicit_dynticks_qs.__already_done, align 1
  br i1 %.b281, label %if.then42, label %if.then10, !prof !1646

if.then10:                                        ; preds = %land.rhs
  store i1 true, ptr @rcu_implicit_dynticks_qs.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1263, i32 noundef 9, ptr noundef null) #24
  br label %if.then42

if.then42:                                        ; preds = %if.then10, %land.rhs
  %grplo = getelementptr inbounds %struct.rcu_node, ptr %1, i32 0, i32 15
  %27 = ptrtoint ptr %grplo to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %grplo, align 4
  %grphi = getelementptr inbounds %struct.rcu_node, ptr %1, i32 0, i32 16
  %29 = ptrtoint ptr %grphi to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %grphi, align 8
  %level = getelementptr inbounds %struct.rcu_node, ptr %1, i32 0, i32 18
  %31 = ptrtoint ptr %level to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %level, align 1
  %conv = zext i8 %32 to i32
  %gp_seq47 = getelementptr inbounds %struct.rcu_node, ptr %1, i32 0, i32 1
  %33 = ptrtoint ptr %gp_seq47 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %gp_seq47, align 4
  %completedqs = getelementptr inbounds %struct.rcu_node, ptr %1, i32 0, i32 3
  %35 = ptrtoint ptr %completedqs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %completedqs, align 4
  %call48 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.291, ptr noundef nonnull @.str.292, i32 noundef %28, i32 noundef %30, i32 noundef %conv, i32 noundef %34, i32 noundef %36) #27
  %tobool49.not288 = icmp eq ptr %1, null
  br i1 %tobool49.not288, label %for.end, label %do.end52

do.end52:                                         ; preds = %do.end52, %if.then42
  %rnp1.0289 = phi ptr [ %50, %do.end52 ], [ %1, %if.then42 ]
  %grplo54 = getelementptr inbounds %struct.rcu_node, ptr %rnp1.0289, i32 0, i32 15
  %37 = ptrtoint ptr %grplo54 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %grplo54, align 4
  %grphi55 = getelementptr inbounds %struct.rcu_node, ptr %rnp1.0289, i32 0, i32 16
  %39 = ptrtoint ptr %grphi55 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %grphi55, align 8
  %qsmask = getelementptr inbounds %struct.rcu_node, ptr %rnp1.0289, i32 0, i32 4
  %41 = ptrtoint ptr %qsmask to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %qsmask, align 8
  %qsmaskinit = getelementptr inbounds %struct.rcu_node, ptr %rnp1.0289, i32 0, i32 6
  %43 = ptrtoint ptr %qsmaskinit to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %qsmaskinit, align 64
  %qsmaskinitnext = getelementptr inbounds %struct.rcu_node, ptr %rnp1.0289, i32 0, i32 7
  %45 = ptrtoint ptr %qsmaskinitnext to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %qsmaskinitnext, align 4
  %rcu_gp_init_mask = getelementptr inbounds %struct.rcu_node, ptr %rnp1.0289, i32 0, i32 5
  %47 = ptrtoint ptr %rcu_gp_init_mask to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %rcu_gp_init_mask, align 4
  %call56 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.294, ptr noundef nonnull @.str.292, i32 noundef %38, i32 noundef %40, i32 noundef %42, i32 noundef %44, i32 noundef %46, i32 noundef %48) #27
  %parent = getelementptr inbounds %struct.rcu_node, ptr %rnp1.0289, i32 0, i32 20
  %49 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %parent, align 16
  %tobool49.not = icmp eq ptr %50, null
  br i1 %tobool49.not, label %for.end, label %do.end52

for.end:                                          ; preds = %do.end52, %if.then42
  %51 = ptrtoint ptr %grpmask to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %grpmask, align 4
  %53 = ptrtoint ptr %qsmaskinitnext.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %qsmaskinitnext.i, align 4
  %and59 = and i32 %54, %52
  %tobool60 = icmp ne i32 %and59, 0
  %cpu70 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 68
  %55 = ptrtoint ptr %cpu70 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %cpu70, align 64
  %idxprom = zext i1 %tobool60 to i32
  %arrayidx = getelementptr [3 x i8], ptr @.str.299, i32 0, i32 %idxprom
  %57 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %arrayidx, align 1
  %conv72 = zext i8 %58 to i32
  %rcu_onl_gp_seq = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 65
  %59 = ptrtoint ptr %rcu_onl_gp_seq to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %rcu_onl_gp_seq, align 4
  %rcu_onl_gp_flags = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 66
  %61 = ptrtoint ptr %rcu_onl_gp_flags to i32
  call void @__asan_load2_noabort(i32 %61)
  %62 = load i16, ptr %rcu_onl_gp_flags, align 8
  %conv73 = sext i16 %62 to i32
  %rcu_ofl_gp_seq = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 63
  %63 = ptrtoint ptr %rcu_ofl_gp_seq to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %rcu_ofl_gp_seq, align 4
  %rcu_ofl_gp_flags = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 64
  %65 = ptrtoint ptr %rcu_ofl_gp_flags to i32
  call void @__asan_load2_noabort(i32 %65)
  %66 = load i16, ptr %rcu_ofl_gp_flags, align 16
  %conv74 = sext i16 %66 to i32
  %call75 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.297, ptr noundef nonnull @.str.292, i32 noundef %56, i32 noundef %conv72, i32 noundef %60, i32 noundef %conv73, i32 noundef %64, i32 noundef %conv74) #27
  br label %cleanup

do.end79:                                         ; preds = %if.end
  %67 = load volatile i32, ptr @jiffies_to_sched_qs, align 4
  %rcu_need_heavy_qs = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 22
  %68 = ptrtoint ptr %rcu_need_heavy_qs to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load volatile i8, ptr %rcu_need_heavy_qs, align 8, !range !1644
  %tobool85.not = icmp eq i8 %69, 0
  br i1 %tobool85.not, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %do.end79
  %70 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 29), align 4
  %mul = shl i32 %67, 1
  %add = add i32 %70, %mul
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %71 = load volatile i32, ptr @jiffies, align 128
  %sub = sub i32 %add, %71
  %cmp = icmp slt i32 %sub, 0
  br i1 %cmp, label %do.body100, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %72 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 34), align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %73 = load volatile i32, ptr @jiffies, align 128
  %sub89 = sub i32 %72, %73
  %cmp90 = icmp slt i32 %sub89, 0
  br i1 %cmp90, label %do.body100, label %lor.lhs.false92

lor.lhs.false92:                                  ; preds = %lor.lhs.false
  %74 = load i8, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 24), align 4
  %tobool94.not = icmp eq i8 %74, 0
  br i1 %tobool94.not, label %if.else, label %do.body100

do.body100:                                       ; preds = %lor.lhs.false92, %lor.lhs.false, %land.lhs.true
  %75 = ptrtoint ptr %rcu_need_heavy_qs to i32
  call void @__asan_store1_noabort(i32 %75)
  store volatile i8 1, ptr %rcu_need_heavy_qs, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2097
  br label %if.end143.sink.split

if.else:                                          ; preds = %lor.lhs.false92, %do.end79
  %76 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 29), align 4
  %add127 = add i32 %76, %67
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %77 = load volatile i32, ptr @jiffies, align 128
  %sub128 = sub i32 %add127, %77
  %cmp129 = icmp slt i32 %sub128, 0
  br i1 %cmp129, label %if.end143.sink.split, label %if.end143

if.end143.sink.split:                             ; preds = %if.else, %do.body100
  %rcu_urgent_qs137 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 23
  %78 = ptrtoint ptr %rcu_urgent_qs137 to i32
  call void @__asan_store1_noabort(i32 %78)
  store volatile i8 1, ptr %rcu_urgent_qs137, align 1
  br label %if.end143

if.end143:                                        ; preds = %if.end143.sink.split, %if.else
  %cpu144 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 68
  %79 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 34), align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %80 = load volatile i32, ptr @jiffies, align 128
  %sub183 = sub i32 %79, %80
  %cmp184 = icmp slt i32 %sub183, 0
  br i1 %cmp184, label %do.end189, label %cleanup

do.end189:                                        ; preds = %if.end143
  %last_fqs_resched191 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 67
  %81 = ptrtoint ptr %last_fqs_resched191 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load volatile i32, ptr %last_fqs_resched191, align 4
  %add192 = add i32 %82, %67
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %83 = load volatile i32, ptr @jiffies, align 128
  %sub193 = sub i32 %add192, %83
  %cmp194 = icmp slt i32 %sub193, 0
  br i1 %cmp194, label %if.then196, label %if.end208

if.then196:                                       ; preds = %do.end189
  %84 = ptrtoint ptr %cpu144 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %cpu144, align 64
  tail call void @resched_cpu(i32 noundef %85) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %86 = load volatile i32, ptr @jiffies, align 128
  %87 = ptrtoint ptr %last_fqs_resched191 to i32
  call void @__asan_store4_noabort(i32 %87)
  store volatile i32 %86, ptr %last_fqs_resched191, align 4
  br label %if.end208

if.end208:                                        ; preds = %if.then196, %do.end189
  %rcu_iw_pending = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 61
  %88 = ptrtoint ptr %rcu_iw_pending to i32
  call void @__asan_load1_noabort(i32 %88)
  %89 = load i8, ptr %rcu_iw_pending, align 4, !range !1644
  %tobool209.not = icmp eq i8 %89, 0
  br i1 %tobool209.not, label %land.lhs.true210, label %cleanup

land.lhs.true210:                                 ; preds = %if.end208
  %rcu_iw_gp_seq = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 62
  %90 = ptrtoint ptr %rcu_iw_gp_seq to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %rcu_iw_gp_seq, align 8
  %gp_seq211 = getelementptr inbounds %struct.rcu_node, ptr %1, i32 0, i32 1
  %92 = ptrtoint ptr %gp_seq211 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %gp_seq211, align 4
  %cmp212.not = icmp eq i32 %91, %93
  br i1 %cmp212.not, label %cleanup, label %land.lhs.true214

land.lhs.true214:                                 ; preds = %land.lhs.true210
  %ffmask = getelementptr inbounds %struct.rcu_node, ptr %1, i32 0, i32 13
  %94 = ptrtoint ptr %ffmask to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %ffmask, align 4
  %96 = ptrtoint ptr %grpmask to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %grpmask, align 4
  %and216 = and i32 %97, %95
  %tobool217.not = icmp eq i32 %and216, 0
  br i1 %tobool217.not, label %cleanup, label %if.then218

if.then218:                                       ; preds = %land.lhs.true214
  %98 = ptrtoint ptr %rcu_iw_pending to i32
  call void @__asan_store1_noabort(i32 %98)
  store i8 1, ptr %rcu_iw_pending, align 4
  %99 = ptrtoint ptr %gp_seq211 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %gp_seq211, align 4
  %101 = ptrtoint ptr %rcu_iw_gp_seq to i32
  call void @__asan_store4_noabort(i32 %101)
  store i32 %100, ptr %rcu_iw_gp_seq, align 8
  %rcu_iw = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 60
  %102 = ptrtoint ptr %cpu144 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %cpu144, align 64
  %call223 = tail call zeroext i1 @irq_work_queue_on(ptr noundef %rcu_iw, i32 noundef %103) #24
  br label %cleanup

cleanup:                                          ; preds = %if.then218, %land.lhs.true214, %land.lhs.true210, %if.end208, %if.end143, %for.end, %if.then42.i, %if.end37.i
  %retval.0 = phi i32 [ 1, %for.end ], [ 0, %if.end208 ], [ 0, %land.lhs.true210 ], [ 0, %land.lhs.true214 ], [ 0, %if.then218 ], [ 0, %if.end143 ], [ 1, %if.end37.i ], [ 1, %if.then42.i ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_bit_be(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rcu_fqs(ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %cpu, ptr noundef %qsevent) unnamed_addr #7 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_fqs, i32 0, i32 1), ptr blockaddress(@trace_rcu_fqs, %do.body)) #24
          to label %if.end49 [label %do.body], !srcloc !1665

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu2 = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu2, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i76 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i76
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end70, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2098
  %call43 = tail call i32 @__traceiter_rcu_fqs(ptr noundef null, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %cpu, ptr noundef %qsevent) #24
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2099
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i74 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i74 to ptr
  %preempt_count.i.i75 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i75 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i75, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i75, align 4
  br label %if.end49

if.end49:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i77 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i77 to ptr
  %cpu51 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu51 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu51, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i78 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i78, label %cpu_online.exit86, label %land.rhs.i.i.i.i80

land.rhs.i.i.i.i80:                               ; preds = %if.end49
  %.b37.i.i.i.i79 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i79, label %cpu_online.exit86, label %if.then.i.i.i.i81, !prof !1646

if.then.i.i.i.i81:                                ; preds = %land.rhs.i.i.i.i80
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit86

cpu_online.exit86:                                ; preds = %if.then.i.i.i.i81, %land.rhs.i.i.i.i80, %if.end49
  %div3.i.i.i82 = lshr i32 %20, 5
  %arrayidx.i.i.i83 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i82
  %22 = ptrtoint ptr %arrayidx.i.i.i83 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i83, align 4
  %and.i.i.i84 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i84
  %25 = and i32 %23, %24
  %tobool.i85.not = icmp eq i32 %25, 0
  br i1 %tobool.i85.not, label %if.end70, label %if.then53

if.then53:                                        ; preds = %cpu_online.exit86
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1668
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_fqs, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_fqs, i32 0, i32 7), align 4
  %call59 = tail call i32 @rcu_read_lock_sched_held() #24
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %land.lhs.true, label %do.end68

land.lhs.true:                                    ; preds = %if.then53
  %call61 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %do.end68, label %land.lhs.true63

land.lhs.true63:                                  ; preds = %land.lhs.true
  %.b73 = load i1, ptr @trace_rcu_fqs.__warned, align 1
  br i1 %.b73, label %do.end68, label %if.then65

if.then65:                                        ; preds = %land.lhs.true63
  store i1 true, ptr @trace_rcu_fqs.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.128, i32 noundef 434, ptr noundef nonnull @.str.129) #24
  br label %do.end68

do.end68:                                         ; preds = %if.then65, %land.lhs.true63, %land.lhs.true, %if.then53
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1669
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i87 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i87 to ptr
  %preempt_count.i.i.i88 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i88 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i88, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i88, align 4
  br label %if.end70

if.end70:                                         ; preds = %do.end68, %cpu_online.exit86, %cpu_online.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rcu_fqs(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @resched_cpu(i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @irq_work_queue_on(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @swake_up_all(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @smpboot_register_percpu_thread(ptr noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @rcu_cpu_kthread_should_run(i32 noundef %cpu) #20 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu8 = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu8 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu8, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 58) to i32)
  %6 = inttoptr i32 %add to ptr
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %6, align 1
  %conv = zext i8 %8 to i32
  ret i32 %conv
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_cpu_kthread(i32 noundef %cpu) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu2 = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu2, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 57) to i32)
  %6 = inttoptr i32 %add to ptr
  %add13 = add i32 %5, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 58) to i32)
  %7 = inttoptr i32 %add13 to ptr
  %8 = load ptr, ptr @rcu_cpu_kthread.___tp_str, align 4
  tail call fastcc void @trace_rcu_utilization(ptr noundef %8)
  br label %for.body

for.cond:                                         ; preds = %if.end25
  %inc = add nuw nsw i32 %spincnt.043, 1
  %exitcond.not = icmp eq i32 %inc, 10
  br i1 %exitcond.not, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond, %entry
  %spincnt.043 = phi i32 [ 0, %entry ], [ %inc, %for.cond ]
  tail call fastcc void @local_bh_disable()
  %9 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 1, ptr %6, align 4
  %10 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #24, !srcloc !1649
  %and.i.i = and i32 %10, 128
  %tobool.not = icmp eq i32 %and.i.i, 0
  tail call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #24, !srcloc !1801
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  tail call void @trace_hardirqs_off() #24
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %7, align 1
  store i8 0, ptr %7, align 1
  tail call void @trace_hardirqs_on() #24
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #24, !srcloc !1802
  %tobool23.not = icmp eq i8 %12, 0
  br i1 %tobool23.not, label %if.end25, label %if.then24

if.then24:                                        ; preds = %if.end
  tail call fastcc void @rcu_core()
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %if.end
  tail call fastcc void @local_bh_enable()
  %13 = ptrtoint ptr %7 to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %7, align 1
  %cmp26 = icmp eq i8 %14, 0
  br i1 %cmp26, label %cleanup, label %for.cond

for.end:                                          ; preds = %for.cond
  %15 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 4, ptr %6, align 4
  %16 = load ptr, ptr @rcu_cpu_kthread.___tp_str.316, align 4
  tail call fastcc void @trace_rcu_utilization(ptr noundef %16)
  %call32 = tail call i32 @schedule_timeout_idle(i32 noundef 2) #24
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.end25
  %rcu_cpu_kthread.___tp_str.318.sink = phi ptr [ @rcu_cpu_kthread.___tp_str.318, %for.end ], [ @rcu_cpu_kthread.___tp_str.314, %if.end25 ]
  %17 = ptrtoint ptr %rcu_cpu_kthread.___tp_str.318.sink to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %rcu_cpu_kthread.___tp_str.318.sink, align 4
  tail call fastcc void @trace_rcu_utilization(ptr noundef %18)
  %19 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 2, ptr %6, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal void @rcu_cpu_kthread_setup(i32 noundef %cpu) #14 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @rcu_cpu_kthread_park(i32 noundef %cpu) #12 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 57) to i32)
  %2 = inttoptr i32 %add to ptr
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 3, ptr %2, align 4
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_bh_disable() #7 align 64 {
entry:
  br label %__here

__here:                                           ; preds = %entry
  tail call void @__local_bh_disable_ip(i32 noundef ptrtoint (ptr blockaddress(@local_bh_disable, %__here) to i32), i32 noundef 512) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_core() unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr @rcu_data to i32)
  %6 = inttoptr i32 %add to ptr
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 7
  %7 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %mynode, align 16
  %cblist = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 13
  %flags1.i.i = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 13, i32 5
  %9 = ptrtoint ptr %flags1.i.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load volatile i8, ptr %flags1.i.i, align 4
  %11 = and i8 %10, 2
  %tobool.i.not.i = icmp eq i8 %11, 0
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %12 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %12, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %entry
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %entry
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %13 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i = and i32 %3, 31
  %15 = shl nuw i32 1, %and.i.i.i
  %16 = and i32 %14, %15
  %tobool.i.not = icmp eq i32 %16, 0
  br i1 %tobool.i.not, label %cleanup, label %if.end, !prof !1645

if.end:                                           ; preds = %cpu_online.exit
  %17 = load ptr, ptr @rcu_core.___tp_str, align 4
  tail call fastcc void @trace_rcu_utilization(ptr noundef %17)
  %beenonline = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 4
  %18 = ptrtoint ptr %beenonline to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %beenonline, align 1, !range !1644
  %tobool10.not = icmp eq i8 %19, 0
  br i1 %tobool10.not, label %land.rhs, label %if.end54

land.rhs:                                         ; preds = %if.end
  %.b164 = load i1, ptr @rcu_core.__already_done, align 1
  br i1 %.b164, label %if.end54, label %if.then28, !prof !1646

if.then28:                                        ; preds = %land.rhs
  store i1 true, ptr @rcu_core.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2751, i32 noundef 9, ptr noundef null) #24
  br label %if.end54

if.end54:                                         ; preds = %if.then28, %land.rhs, %if.end
  %20 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %23, 255
  %tobool63.not = icmp eq i32 %and, 0
  br i1 %tobool63.not, label %if.then64, label %if.end73

if.then64:                                        ; preds = %if.end54
  %24 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i165 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i165 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %27
  %28 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %29, ptrtoint (ptr @rcu_data to i32)
  %30 = inttoptr i32 %add.i to ptr
  %cpu_no_qs.i = getelementptr inbounds %struct.rcu_data, ptr %30, i32 0, i32 2
  %exp.i = getelementptr inbounds %struct.anon, ptr %cpu_no_qs.i, i32 0, i32 1
  %31 = ptrtoint ptr %exp.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %exp.i, align 1
  %tobool.not.i = icmp eq i8 %32, 0
  br i1 %tobool.not.i, label %if.end73, label %if.then.i

if.then.i:                                        ; preds = %if.then64
  %33 = ptrtoint ptr %exp.i to i32
  call void @__asan_store1_noabort(i32 %33)
  store volatile i8 0, ptr %exp.i, align 1
  %mynode.i.i = getelementptr inbounds %struct.rcu_data, ptr %30, i32 0, i32 7
  %34 = ptrtoint ptr %mynode.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %mynode.i.i, align 16
  %grpmask.i.i = getelementptr inbounds %struct.rcu_data, ptr %30, i32 0, i32 8
  %36 = ptrtoint ptr %grpmask.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %grpmask.i.i, align 4
  tail call fastcc void @rcu_report_exp_cpu_mult(ptr noundef %35, i32 noundef %37, i1 noundef zeroext true) #24
  br label %if.end73

if.end73:                                         ; preds = %if.then.i, %if.then64, %if.end54
  tail call fastcc void @note_gp_changes(ptr noundef %6) #24
  %core_needs_qs.i = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 3
  %38 = ptrtoint ptr %core_needs_qs.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %core_needs_qs.i, align 2, !range !1644
  %tobool.not.i166 = icmp eq i8 %39, 0
  br i1 %tobool.not.i166, label %rcu_check_quiescent_state.exit, label %if.end.i

if.end.i:                                         ; preds = %if.end73
  %cpu_no_qs.i167 = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 2
  %40 = ptrtoint ptr %cpu_no_qs.i167 to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %cpu_no_qs.i167, align 8
  %tobool1.not.i = icmp eq i8 %41, 0
  br i1 %tobool1.not.i, label %if.end3.i, label %rcu_check_quiescent_state.exit

if.end3.i:                                        ; preds = %if.end.i
  tail call fastcc void @rcu_report_qs_rdp(ptr noundef %6) #24
  br label %rcu_check_quiescent_state.exit

rcu_check_quiescent_state.exit:                   ; preds = %if.end3.i, %if.end.i, %if.end73
  %42 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %and.i.i168 = and i32 %42, 3
  %tobool75.not = icmp eq i32 %and.i.i168, 0
  br i1 %tobool75.not, label %land.lhs.true, label %if.end110

land.lhs.true:                                    ; preds = %rcu_check_quiescent_state.exit
  %43 = ptrtoint ptr %flags1.i.i to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load volatile i8, ptr %flags1.i.i, align 4
  %45 = and i8 %44, 1
  %tobool.i.i.not = icmp eq i8 %45, 0
  %brmerge = select i1 %tobool.i.i.not, i1 true, i1 %tobool.i.not.i
  br i1 %brmerge, label %if.end110, label %do.body83

do.body83:                                        ; preds = %land.lhs.true
  %46 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i170 = and i32 %46, 128
  %tobool95.not = icmp eq i32 %and.i170, 0
  br i1 %tobool95.not, label %if.then96, label %do.end99

if.then96:                                        ; preds = %do.body83
  tail call void @trace_hardirqs_off() #24
  br label %do.end99

do.end99:                                         ; preds = %if.then96, %do.body83
  %47 = ptrtoint ptr %flags1.i.i to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load volatile i8, ptr %flags1.i.i, align 4
  %49 = and i8 %48, 4
  %tobool.i.i172.not = icmp eq i8 %49, 0
  br i1 %tobool.i.i172.not, label %do.end105, label %if.then102

if.then102:                                       ; preds = %do.end99
  %nocb_lock = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 31
  tail call void @_raw_spin_lock(ptr noundef %nocb_lock) #24
  br label %do.end105

do.end105:                                        ; preds = %if.then102, %do.end99
  %arrayidx.i173 = getelementptr %struct.rcu_data, ptr %6, i32 0, i32 13, i32 1, i32 2
  %50 = ptrtoint ptr %arrayidx.i173 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile ptr, ptr %arrayidx.i173, align 4
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile ptr, ptr %51, align 4
  %tobool.not.i174 = icmp eq ptr %53, null
  br i1 %tobool.not.i174, label %if.end109, label %if.then108

if.then108:                                       ; preds = %do.end105
  tail call fastcc void @rcu_accelerate_cbs_unlocked(ptr noundef %8, ptr noundef %6)
  br label %if.end109

if.end109:                                        ; preds = %if.then108, %do.end105
  tail call fastcc void @rcu_nocb_unlock_irqrestore(ptr noundef %6, i32 noundef %46)
  br label %if.end110

if.end110:                                        ; preds = %if.end109, %land.lhs.true, %rcu_check_quiescent_state.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_timeout to i32))
  %54 = load volatile i32, ptr @rcu_cpu_stall_timeout, align 4
  %cmp.i = icmp slt i32 %54, 3
  br i1 %cmp.i, label %if.end21.sink.split.i, label %if.else.i

if.else.i:                                        ; preds = %if.end110
  %cmp10.i = icmp ugt i32 %54, 300
  br i1 %cmp10.i, label %if.end21.sink.split.i, label %rcu_jiffies_till_stall_check.exit

if.end21.sink.split.i:                            ; preds = %if.else.i, %if.end110
  %.sink.i = phi i32 [ 3, %if.end110 ], [ 300, %if.else.i ]
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_timeout to i32))
  store volatile i32 %.sink.i, ptr @rcu_cpu_stall_timeout, align 4
  br label %rcu_jiffies_till_stall_check.exit

rcu_jiffies_till_stall_check.exit:                ; preds = %if.end21.sink.split.i, %if.else.i
  %till_stall_check.0.i = phi i32 [ %54, %if.else.i ], [ %.sink.i, %if.end21.sink.split.i ]
  %mul.i = mul nuw nsw i32 %till_stall_check.0.i, 100
  %add.i175 = add nuw nsw i32 %mul.i, 500
  tail call fastcc void @rcu_check_gp_start_stall(ptr noundef %8, i32 noundef %add.i175)
  br i1 %tobool.i.not.i, label %if.end135, label %land.lhs.true114

land.lhs.true114:                                 ; preds = %rcu_jiffies_till_stall_check.exit
  %call116 = tail call zeroext i1 @rcu_segcblist_ready_cbs(ptr noundef %cblist) #24
  br i1 %call116, label %do.end121, label %if.end135

do.end121:                                        ; preds = %land.lhs.true114
  %55 = load volatile i32, ptr @rcu_scheduler_fully_active, align 4
  %tobool123.not = icmp eq i32 %55, 0
  br i1 %tobool123.not, label %if.end135, label %if.then130, !prof !1645

if.then130:                                       ; preds = %do.end121
  tail call fastcc void @rcu_do_batch(ptr noundef %6)
  %call132 = tail call zeroext i1 @rcu_segcblist_ready_cbs(ptr noundef %cblist) #24
  br i1 %call132, label %if.then133, label %if.end135

if.then133:                                       ; preds = %if.then130
  tail call fastcc void @invoke_rcu_core()
  br label %if.end135

if.end135:                                        ; preds = %if.then133, %if.then130, %do.end121, %land.lhs.true114, %rcu_jiffies_till_stall_check.exit
  %nocb_gp_rdp.i = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 55
  %56 = ptrtoint ptr %nocb_gp_rdp.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %nocb_gp_rdp.i, align 128
  %tobool.not.i176 = icmp eq ptr %57, null
  br i1 %tobool.not.i176, label %do_nocb_deferred_wakeup.exit, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end135
  %nocb_defer_wakeup.i.i = getelementptr inbounds %struct.rcu_data, ptr %57, i32 0, i32 33
  %58 = ptrtoint ptr %nocb_defer_wakeup.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %nocb_defer_wakeup.i.i, align 4
  %cmp.i.i = icmp slt i32 %59, 2
  br i1 %cmp.i.i, label %do_nocb_deferred_wakeup.exit, label %do.body.i

do.body.i:                                        ; preds = %lor.lhs.false.i
  %nocb_gp_lock.i = getelementptr inbounds %struct.rcu_data, ptr %57, i32 0, i32 43
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %nocb_gp_lock.i) #24
  %60 = ptrtoint ptr %nocb_defer_wakeup.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %nocb_defer_wakeup.i.i, align 4
  %cmp.i.not.i.i = icmp slt i32 %61, 2
  br i1 %cmp.i.not.i.i, label %do.body.i.i, label %if.end.i.i

do.body.i.i:                                      ; preds = %do.body.i
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %nocb_gp_lock.i, i32 noundef %call2.i) #24
  br label %do_nocb_deferred_wakeup.exit

if.end.i.i:                                       ; preds = %do.body.i
  %cmp1.i.i = icmp eq i32 %61, 3
  %call3.i.i = tail call fastcc zeroext i1 @__wake_nocb_gp(ptr noundef nonnull %57, ptr noundef %6, i1 noundef zeroext %cmp1.i.i, i32 noundef %call2.i) #24
  %62 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %cpu.i.i = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 68
  %63 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %cpu.i.i, align 64
  %65 = load ptr, ptr @do_nocb_deferred_wakeup_common.___tp_str, align 4
  tail call fastcc void @trace_rcu_nocb_wake(ptr noundef %62, i32 noundef %64, ptr noundef %65) #24
  br label %do_nocb_deferred_wakeup.exit

do_nocb_deferred_wakeup.exit:                     ; preds = %if.end.i.i, %do.body.i.i, %lor.lhs.false.i, %if.end135
  %66 = load ptr, ptr @rcu_core.___tp_str.321, align 4
  tail call fastcc void @trace_rcu_utilization(ptr noundef %66)
  %cpu138 = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 68
  %67 = ptrtoint ptr %cpu138 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %cpu138, align 64
  %69 = load ptr, ptr @rcu_gp_wq, align 4
  %strict_work = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 12
  %call139 = tail call zeroext i1 @queue_work_on(i32 noundef %68, ptr noundef %69, ptr noundef %strict_work) #24
  br label %cleanup

cleanup:                                          ; preds = %do_nocb_deferred_wakeup.exit, %cpu_online.exit
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_bh_enable() #7 align 64 {
entry:
  br label %__here

__here:                                           ; preds = %entry
  tail call void @__local_bh_enable_ip(i32 noundef ptrtoint (ptr blockaddress(@local_bh_enable, %__here) to i32), i32 noundef 512) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__local_bh_disable_ip(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_do_batch(ptr noundef %rdp) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %rcl = alloca %struct.rcu_cblist, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %rcl) #24
  %0 = getelementptr inbounds %struct.rcu_cblist, ptr %rcl, i32 0, i32 1
  %1 = getelementptr inbounds %struct.rcu_cblist, ptr %rcl, i32 0, i32 2
  %2 = ptrtoint ptr %rcl to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %rcl, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %rcl, ptr %0, align 4
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %1, align 4
  %cblist = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 13
  %call = call zeroext i1 @rcu_segcblist_ready_cbs(ptr noundef %cblist) #24
  br i1 %call, label %do.body14, label %if.then

if.then:                                          ; preds = %entry
  %5 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %len.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 13, i32 3
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %len.i, i32 noundef 4) #24
  %6 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %len.i, align 4
  call fastcc void @trace_rcu_batch_start(ptr noundef %5, i32 noundef %7, i32 noundef 0)
  %8 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %9 = ptrtoint ptr %cblist to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile ptr, ptr %cblist, align 4
  %tobool.not.i = icmp ne ptr %10, null
  %conv = zext i1 %tobool.not.i to i8
  %11 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i to ptr
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %12, align 16384
  %15 = trunc i32 %14 to i8
  %16 = lshr i8 %15, 1
  %17 = and i8 %16, 1
  %18 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i1016 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i1016 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 2
  %20 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %task, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %21, i32 0, i32 3
  %22 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %flags.i, align 4
  %24 = trunc i32 %23 to i8
  %25 = lshr i8 %24, 1
  %26 = and i8 %25, 1
  call fastcc void @trace_rcu_batch_end(ptr noundef %8, i32 noundef 0, i8 noundef zeroext %conv, i8 noundef zeroext %17, i8 noundef zeroext %26)
  br label %cleanup872

do.body14:                                        ; preds = %entry
  %27 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i1017 = and i32 %27, 128
  %tobool.not = icmp eq i32 %and.i1017, 0
  br i1 %tobool.not, label %if.then24, label %do.end27

if.then24:                                        ; preds = %do.body14
  call void @trace_hardirqs_off() #24
  br label %do.end27

do.end27:                                         ; preds = %if.then24, %do.body14
  %flags1.i.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 13, i32 5
  %28 = ptrtoint ptr %flags1.i.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load volatile i8, ptr %flags1.i.i, align 4
  %30 = and i8 %29, 4
  %tobool.i.i.not = icmp eq i8 %30, 0
  br i1 %tobool.i.i.not, label %do.end33, label %if.then30

if.then30:                                        ; preds = %do.end27
  %nocb_lock = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 31
  call void @_raw_spin_lock(ptr noundef %nocb_lock) #24
  br label %do.end33

do.end33:                                         ; preds = %if.then30, %do.end27
  %31 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i1018 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i1018 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 3
  %33 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %35 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %35, %34
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.end33
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.end33
  %div3.i.i.i = lshr i32 %34, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %36 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i1019 = and i32 %34, 31
  %38 = shl nuw i32 1, %and.i.i.i1019
  %39 = and i32 %37, %38
  %tobool.i1020.not = icmp eq i32 %39, 0
  br i1 %tobool.i1020.not, label %land.rhs, label %if.end84

land.rhs:                                         ; preds = %cpu_online.exit
  %.b971 = load i1, ptr @rcu_do_batch.__already_done, align 1
  br i1 %.b971, label %if.end84, label %if.then58, !prof !1646

if.then58:                                        ; preds = %land.rhs
  store i1 true, ptr @rcu_do_batch.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2492, i32 noundef 9, ptr noundef null) #24
  br label %if.end84

if.end84:                                         ; preds = %if.then58, %land.rhs, %cpu_online.exit
  %len.i1021 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 13, i32 3
  %call.i.i.i1022 = call zeroext i1 @__kasan_check_read(ptr noundef %len.i1021, i32 noundef 4) #24
  %40 = ptrtoint ptr %len.i1021 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %len.i1021, align 4
  %42 = load volatile i32, ptr @rcu_divisor, align 4
  %cmp98 = icmp slt i32 %42, 0
  %43 = call i32 @llvm.umin.i32(i32 %42, i32 30)
  %cond105 = select i1 %cmp98, i32 7, i32 %43
  %blimit = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 17
  %44 = ptrtoint ptr %blimit to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %blimit, align 4
  %shr = ashr i32 %41, %cond105
  %46 = call i32 @llvm.smax.i32(i32 %45, i32 %shr)
  %47 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i983 = and i32 %47, -16384
  %48 = inttoptr i32 %and.i.i983 to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %48, i32 0, i32 1
  %49 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %preempt_count.i, align 4
  %and114 = and i32 %50, 256
  %tobool115.not = icmp ne i32 %and114, 0
  %cmp116 = icmp sgt i32 %46, 100
  %or.cond = select i1 %tobool115.not, i1 %cmp116, i1 false
  br i1 %or.cond, label %if.then124, label %if.end144, !prof !2100

if.then124:                                       ; preds = %if.end84
  %51 = load volatile i32, ptr @rcu_resched_ns, align 4
  %52 = call i32 @llvm.smin.i32(i32 %51, i32 1000000000)
  %53 = call i32 @llvm.smax.i32(i32 %52, i32 1000000)
  %call.i = call i64 @sched_clock() #24
  %54 = trunc i64 %call.i to i32
  %conv143 = add i32 %53, %54
  br label %if.end144

if.end144:                                        ; preds = %if.then124, %if.end84
  %tlimit.0 = phi i32 [ %conv143, %if.then124 ], [ 0, %if.end84 ]
  %55 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %call.i.i.i1024 = call zeroext i1 @__kasan_check_read(ptr noundef %len.i1021, i32 noundef 4) #24
  %56 = ptrtoint ptr %len.i1021 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %len.i1021, align 4
  call fastcc void @trace_rcu_batch_start(ptr noundef %55, i32 noundef %57, i32 noundef %46)
  call void @rcu_segcblist_extract_done_cbs(ptr noundef %cblist, ptr noundef nonnull %rcl) #24
  %call148 = call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %rdp)
  br i1 %call148, label %if.then149, label %if.end152

if.then149:                                       ; preds = %if.end144
  %call.i.i.i1026 = call zeroext i1 @__kasan_check_read(ptr noundef %len.i1021, i32 noundef 4) #24
  %58 = ptrtoint ptr %len.i1021 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %len.i1021, align 4
  %qlen_last_fqs_check = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 14
  %60 = ptrtoint ptr %qlen_last_fqs_check to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %59, ptr %qlen_last_fqs_check, align 8
  br label %if.end152

if.end152:                                        ; preds = %if.then149, %if.end144
  %61 = load ptr, ptr @rcu_do_batch.___tp_str, align 4
  call fastcc void @trace_rcu_segcb_stats(ptr noundef %cblist, ptr noundef %61)
  call fastcc void @rcu_nocb_unlock_irqrestore(ptr noundef %rdp, i32 noundef %27)
  %task156 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 2
  %call157 = call ptr @rcu_cblist_dequeue(ptr noundef nonnull %rcl) #24
  %tobool158.not1038 = icmp eq ptr %call157, null
  br i1 %tobool158.not1038, label %do.body556, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end152
  %tobool184.not = icmp eq i32 %tlimit.0, 0
  %conv195 = sext i32 %tlimit.0 to i64
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %rhp.01040 = phi ptr [ %call157, %for.body.lr.ph ], [ %call553, %for.inc ]
  %count.01039 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %inc = add i32 %count.01039, 1
  call void @debug_object_active_state(ptr noundef nonnull %rhp.01040, ptr noundef nonnull @rcuhead_debug_descr, i32 noundef 1, i32 noundef 0) #24
  call void @debug_object_deactivate(ptr noundef nonnull %rhp.01040, ptr noundef nonnull @rcuhead_debug_descr) #24
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_callback_map)
  %62 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  call fastcc void @trace_rcu_invoke_callback(ptr noundef %62, ptr noundef nonnull %rhp.01040)
  %func = getelementptr inbounds %struct.callback_head, ptr %rhp.01040, i32 0, i32 1
  %63 = ptrtoint ptr %func to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %func, align 4
  store volatile ptr null, ptr %func, align 4
  call void %64(ptr noundef nonnull %rhp.01040) #24
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_callback_map)
  %65 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i984 = and i32 %65, -16384
  %66 = inttoptr i32 %and.i.i984 to ptr
  %preempt_count.i985 = getelementptr inbounds %struct.thread_info, ptr %66, i32 0, i32 1
  %67 = ptrtoint ptr %preempt_count.i985 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %preempt_count.i985, align 4
  %and171 = and i32 %68, 256
  %tobool172.not = icmp eq i32 %and171, 0
  br i1 %tobool172.not, label %if.else, label %if.then173

if.then173:                                       ; preds = %for.body
  %cmp174.not = icmp slt i32 %inc, %46
  br i1 %cmp174.not, label %if.end183, label %land.lhs.true176

land.lhs.true176:                                 ; preds = %if.then173
  %69 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i986 = and i32 %69, -16384
  %70 = inttoptr i32 %and.i.i986 to ptr
  %71 = ptrtoint ptr %70 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load volatile i32, ptr %70, align 16384
  %73 = and i32 %72, 2
  %tobool.i987.not = icmp eq i32 %73, 0
  br i1 %tobool.i987.not, label %lor.lhs.false, label %do.body556

lor.lhs.false:                                    ; preds = %land.lhs.true176
  %74 = ptrtoint ptr %task156 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %task156, align 8
  %flags.i988 = getelementptr inbounds %struct.task_struct, ptr %75, i32 0, i32 3
  %76 = ptrtoint ptr %flags.i988 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %flags.i988, align 4
  %and.i989 = and i32 %77, 2
  %tobool.i990.not = icmp eq i32 %and.i989, 0
  br i1 %tobool.i990.not, label %do.body556, label %if.end183

if.end183:                                        ; preds = %lor.lhs.false, %if.then173
  br i1 %tobool184.not, label %for.inc, label %if.then191, !prof !1646

if.then191:                                       ; preds = %if.end183
  %and192 = and i32 %inc, 31
  %tobool193.not = icmp eq i32 %and192, 0
  br i1 %tobool193.not, label %lor.end, label %for.inc

lor.end:                                          ; preds = %if.then191
  %call.i1027 = call i64 @sched_clock() #24
  %cmp196 = icmp ult i64 %call.i1027, %conv195
  br i1 %cmp196, label %for.inc, label %do.body556

if.else:                                          ; preds = %for.body
  call fastcc void @local_bh_enable()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %78 = load i32, ptr @debug_locks, align 4
  %tobool209.not = icmp eq i32 %78, 0
  br i1 %tobool209.not, label %if.end318, label %land.lhs.true210

land.lhs.true210:                                 ; preds = %if.else
  %79 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %79, -16384
  %80 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %80, i32 0, i32 1
  %81 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %82, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2101
  %83 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %84
  %85 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %arrayidx, align 4
  %add229 = add i32 %86, ptrtoint (ptr @lockdep_recursion to i32)
  %87 = inttoptr i32 %add229 to ptr
  %88 = ptrtoint ptr %87 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile i32, ptr %87, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2102
  %90 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i991 = and i32 %90, -16384
  %91 = inttoptr i32 %and.i.i.i991 to ptr
  %preempt_count.i.i992 = getelementptr inbounds %struct.thread_info, ptr %91, i32 0, i32 1
  %92 = ptrtoint ptr %preempt_count.i.i992 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile i32, ptr %preempt_count.i.i992, align 4
  %sub.i = add i32 %93, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i992, align 4
  %tobool236.not = icmp eq i32 %89, 0
  br i1 %tobool236.not, label %land.rhs237, label %if.end318

land.rhs237:                                      ; preds = %land.lhs.true210
  %94 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i993 = and i32 %94, -16384
  %95 = inttoptr i32 %and.i.i.i993 to ptr
  %preempt_count.i.i994 = getelementptr inbounds %struct.thread_info, ptr %95, i32 0, i32 1
  %96 = ptrtoint ptr %preempt_count.i.i994 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load volatile i32, ptr %preempt_count.i.i994, align 4
  %add.i995 = add i32 %97, 1
  store volatile i32 %add.i995, ptr %preempt_count.i.i994, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2103
  %98 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %cpu, align 4
  %arrayidx261 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %99
  %100 = ptrtoint ptr %arrayidx261 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %arrayidx261, align 4
  %add262 = add i32 %101, ptrtoint (ptr @hardirqs_enabled to i32)
  %102 = inttoptr i32 %add262 to ptr
  %103 = ptrtoint ptr %102 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load volatile i32, ptr %102, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2104
  %105 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i996 = and i32 %105, -16384
  %106 = inttoptr i32 %and.i.i.i996 to ptr
  %preempt_count.i.i997 = getelementptr inbounds %struct.thread_info, ptr %106, i32 0, i32 1
  %107 = ptrtoint ptr %preempt_count.i.i997 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load volatile i32, ptr %preempt_count.i.i997, align 4
  %sub.i998 = add i32 %108, -1
  store volatile i32 %sub.i998, ptr %preempt_count.i.i997, align 4
  %tobool269.not = icmp eq i32 %104, 0
  br i1 %tobool269.not, label %land.rhs280, label %if.end318

land.rhs280:                                      ; preds = %land.rhs237
  %.b960969 = load i1, ptr @rcu_do_batch.__already_done.324, align 1
  br i1 %.b960969, label %if.end318, label %if.then291, !prof !1646

if.then291:                                       ; preds = %land.rhs280
  store i1 true, ptr @rcu_do_batch.__already_done.324, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2550, i32 noundef 9, ptr noundef null) #24
  br label %if.end318

if.end318:                                        ; preds = %if.then291, %land.rhs280, %land.rhs237, %land.lhs.true210, %if.else
  %109 = ptrtoint ptr %task156 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %task156, align 8
  %rcu_tasks_holdout = getelementptr inbounds %struct.task_struct, ptr %110, i32 0, i32 40
  %111 = ptrtoint ptr %rcu_tasks_holdout to i32
  call void @__asan_load1_noabort(i32 %111)
  %112 = load volatile i8, ptr %rcu_tasks_holdout, align 4
  %tobool338.not = icmp eq i8 %112, 0
  br i1 %tobool338.not, label %do.end358, label %do.body344

do.body344:                                       ; preds = %if.end318
  %113 = ptrtoint ptr %rcu_tasks_holdout to i32
  call void @__asan_store1_noabort(i32 %113)
  store volatile i8 0, ptr %rcu_tasks_holdout, align 4
  br label %do.end358

do.end358:                                        ; preds = %do.body344, %if.end318
  %114 = ptrtoint ptr %task156 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %task156, align 8
  %trc_reader_checked = getelementptr inbounds %struct.task_struct, ptr %115, i32 0, i32 47
  %116 = ptrtoint ptr %trc_reader_checked to i32
  call void @__asan_load1_noabort(i32 %116)
  %117 = load volatile i8, ptr %trc_reader_checked, align 64, !range !1644
  %tobool362.not = icmp eq i8 %117, 0
  br i1 %tobool362.not, label %do.end374, label %do.end420, !prof !1645

do.end374:                                        ; preds = %do.end358
  %trc_reader_nesting = getelementptr inbounds %struct.task_struct, ptr %115, i32 0, i32 44
  %118 = ptrtoint ptr %trc_reader_nesting to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load volatile i32, ptr %trc_reader_nesting, align 4
  %tobool378.not = icmp eq i32 %119, 0
  br i1 %tobool378.not, label %do.end393, label %do.end420, !prof !1646

do.end393:                                        ; preds = %do.end374
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2105
  %120 = ptrtoint ptr %task156 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %task156, align 8
  %trc_reader_checked401 = getelementptr inbounds %struct.task_struct, ptr %121, i32 0, i32 47
  %122 = ptrtoint ptr %trc_reader_checked401 to i32
  call void @__asan_store1_noabort(i32 %122)
  store volatile i8 1, ptr %trc_reader_checked401, align 64
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2106
  br label %do.end420

do.end420:                                        ; preds = %do.end393, %do.end374, %do.end358
  call void @__might_resched(ptr noundef nonnull @.str, i32 noundef 2551, i32 noundef 0) #24
  %call.i1028 = call i32 @__cond_resched() #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %123 = load i32, ptr @debug_locks, align 4
  %tobool427.not = icmp eq i32 %123, 0
  br i1 %tobool427.not, label %if.end542, label %land.lhs.true428

land.lhs.true428:                                 ; preds = %do.end420
  %124 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i999 = and i32 %124, -16384
  %125 = inttoptr i32 %and.i.i.i999 to ptr
  %preempt_count.i.i1000 = getelementptr inbounds %struct.thread_info, ptr %125, i32 0, i32 1
  %126 = ptrtoint ptr %preempt_count.i.i1000 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load volatile i32, ptr %preempt_count.i.i1000, align 4
  %add.i1001 = add i32 %127, 1
  store volatile i32 %add.i1001, ptr %preempt_count.i.i1000, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2107
  %128 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %cpu, align 4
  %arrayidx452 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %129
  %130 = ptrtoint ptr %arrayidx452 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %arrayidx452, align 4
  %add453 = add i32 %131, ptrtoint (ptr @lockdep_recursion to i32)
  %132 = inttoptr i32 %add453 to ptr
  %133 = ptrtoint ptr %132 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load volatile i32, ptr %132, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2108
  %135 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1002 = and i32 %135, -16384
  %136 = inttoptr i32 %and.i.i.i1002 to ptr
  %preempt_count.i.i1003 = getelementptr inbounds %struct.thread_info, ptr %136, i32 0, i32 1
  %137 = ptrtoint ptr %preempt_count.i.i1003 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load volatile i32, ptr %preempt_count.i.i1003, align 4
  %sub.i1004 = add i32 %138, -1
  store volatile i32 %sub.i1004, ptr %preempt_count.i.i1003, align 4
  %tobool460.not = icmp eq i32 %134, 0
  br i1 %tobool460.not, label %land.rhs461, label %if.end542

land.rhs461:                                      ; preds = %land.lhs.true428
  %139 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1005 = and i32 %139, -16384
  %140 = inttoptr i32 %and.i.i.i1005 to ptr
  %preempt_count.i.i1006 = getelementptr inbounds %struct.thread_info, ptr %140, i32 0, i32 1
  %141 = ptrtoint ptr %preempt_count.i.i1006 to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load volatile i32, ptr %preempt_count.i.i1006, align 4
  %add.i1007 = add i32 %142, 1
  store volatile i32 %add.i1007, ptr %preempt_count.i.i1006, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2109
  %143 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %cpu, align 4
  %arrayidx485 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %144
  %145 = ptrtoint ptr %arrayidx485 to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %arrayidx485, align 4
  %add486 = add i32 %146, ptrtoint (ptr @hardirqs_enabled to i32)
  %147 = inttoptr i32 %add486 to ptr
  %148 = ptrtoint ptr %147 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load volatile i32, ptr %147, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2110
  %150 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i1008 = and i32 %150, -16384
  %151 = inttoptr i32 %and.i.i.i1008 to ptr
  %preempt_count.i.i1009 = getelementptr inbounds %struct.thread_info, ptr %151, i32 0, i32 1
  %152 = ptrtoint ptr %preempt_count.i.i1009 to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load volatile i32, ptr %preempt_count.i.i1009, align 4
  %sub.i1010 = add i32 %153, -1
  store volatile i32 %sub.i1010, ptr %preempt_count.i.i1009, align 4
  %tobool493.not = icmp eq i32 %149, 0
  br i1 %tobool493.not, label %land.rhs504, label %if.end542

land.rhs504:                                      ; preds = %land.rhs461
  %.b961968 = load i1, ptr @rcu_do_batch.__already_done.325, align 1
  br i1 %.b961968, label %if.end542, label %if.then515, !prof !1646

if.then515:                                       ; preds = %land.rhs504
  store i1 true, ptr @rcu_do_batch.__already_done.325, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2552, i32 noundef 9, ptr noundef null) #24
  br label %if.end542

if.end542:                                        ; preds = %if.then515, %land.rhs504, %land.rhs461, %land.lhs.true428, %do.end420
  call fastcc void @local_bh_disable()
  br label %for.inc

for.inc:                                          ; preds = %if.end542, %lor.end, %if.then191, %if.end183
  %call553 = call ptr @rcu_cblist_dequeue(ptr noundef nonnull %rcl) #24
  %tobool158.not = icmp eq ptr %call553, null
  br i1 %tobool158.not, label %do.body556, label %for.body

do.body556:                                       ; preds = %for.inc, %lor.end, %lor.lhs.false, %land.lhs.true176, %if.end152
  %count.1 = phi i32 [ 0, %if.end152 ], [ %inc, %lor.end ], [ %inc, %land.lhs.true176 ], [ %inc, %lor.lhs.false ], [ %inc, %for.inc ]
  %154 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i1029 = and i32 %154, 128
  %tobool572.not = icmp eq i32 %and.i1029, 0
  br i1 %tobool572.not, label %if.then573, label %do.end576

if.then573:                                       ; preds = %do.body556
  call void @trace_hardirqs_off() #24
  br label %do.end576

do.end576:                                        ; preds = %if.then573, %do.body556
  %155 = ptrtoint ptr %flags1.i.i to i32
  call void @__asan_load1_noabort(i32 %155)
  %156 = load volatile i8, ptr %flags1.i.i, align 4
  %157 = and i8 %156, 4
  %tobool.i.i1031.not = icmp eq i8 %157, 0
  br i1 %tobool.i.i1031.not, label %do.end583, label %if.then579

if.then579:                                       ; preds = %do.end576
  %nocb_lock580 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 31
  call void @_raw_spin_lock(ptr noundef %nocb_lock580) #24
  br label %do.end583

do.end583:                                        ; preds = %if.then579, %do.end576
  %n_cbs_invoked = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 15
  %158 = ptrtoint ptr %n_cbs_invoked to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %n_cbs_invoked, align 4
  %add584 = add i32 %159, %count.1
  store i32 %add584, ptr %n_cbs_invoked, align 4
  %160 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %161 = ptrtoint ptr %rcl to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load ptr, ptr %rcl, align 4
  %tobool586 = icmp ne ptr %162, null
  %conv591 = zext i1 %tobool586 to i8
  %163 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i1011 = and i32 %163, -16384
  %164 = inttoptr i32 %and.i.i1011 to ptr
  %165 = ptrtoint ptr %164 to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load volatile i32, ptr %164, align 16384
  %167 = trunc i32 %166 to i8
  %168 = lshr i8 %167, 1
  %169 = and i8 %168, 1
  %170 = ptrtoint ptr %task156 to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load ptr, ptr %task156, align 8
  %flags.i1013 = getelementptr inbounds %struct.task_struct, ptr %171, i32 0, i32 3
  %172 = ptrtoint ptr %flags.i1013 to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %flags.i1013, align 4
  %174 = trunc i32 %173 to i8
  %175 = lshr i8 %174, 1
  %176 = and i8 %175, 1
  call fastcc void @trace_rcu_batch_end(ptr noundef %160, i32 noundef %count.1, i8 noundef zeroext %conv591, i8 noundef zeroext %169, i8 noundef zeroext %176)
  call void @rcu_segcblist_insert_done_cbs(ptr noundef %cblist, ptr noundef nonnull %rcl) #24
  %sub = sub i32 0, %count.1
  call void @rcu_segcblist_add_len(ptr noundef %cblist, i32 noundef %sub) #24
  %call.i.i.i1033 = call zeroext i1 @__kasan_check_read(ptr noundef %len.i1021, i32 noundef 4) #24
  %177 = ptrtoint ptr %len.i1021 to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load volatile i32, ptr %len.i1021, align 4
  %179 = ptrtoint ptr %blimit to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %blimit, align 4
  %cmp605 = icmp sgt i32 %180, 9999
  br i1 %cmp605, label %land.lhs.true607, label %if.end612

land.lhs.true607:                                 ; preds = %do.end583
  %181 = load i32, ptr @qlowmark, align 4
  %cmp608.not = icmp sgt i32 %178, %181
  br i1 %cmp608.not, label %if.end612, label %if.then610

if.then610:                                       ; preds = %land.lhs.true607
  %182 = load i32, ptr @blimit, align 4
  %183 = ptrtoint ptr %blimit to i32
  call void @__asan_store4_noabort(i32 %183)
  store i32 %182, ptr %blimit, align 4
  br label %if.end612

if.end612:                                        ; preds = %if.then610, %land.lhs.true607, %do.end583
  %cmp613 = icmp eq i32 %178, 0
  br i1 %cmp613, label %land.lhs.true615, label %if.else625

land.lhs.true615:                                 ; preds = %if.end612
  %qlen_last_fqs_check616 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 14
  %184 = ptrtoint ptr %qlen_last_fqs_check616 to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load i32, ptr %qlen_last_fqs_check616, align 8
  %cmp617.not = icmp eq i32 %185, 0
  br i1 %cmp617.not, label %if.else625, label %if.then619

if.then619:                                       ; preds = %land.lhs.true615
  %186 = ptrtoint ptr %qlen_last_fqs_check616 to i32
  call void @__asan_store4_noabort(i32 %186)
  store i32 0, ptr %qlen_last_fqs_check616, align 8
  %187 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 28), align 16
  %n_force_qs_snap = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 16
  %188 = ptrtoint ptr %n_force_qs_snap to i32
  call void @__asan_store4_noabort(i32 %188)
  store i32 %187, ptr %n_force_qs_snap, align 32
  br label %if.end633

if.else625:                                       ; preds = %land.lhs.true615, %if.end612
  %qlen_last_fqs_check626 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 14
  %189 = ptrtoint ptr %qlen_last_fqs_check626 to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load i32, ptr %qlen_last_fqs_check626, align 8
  %191 = load i32, ptr @qhimark, align 4
  %sub627 = sub i32 %190, %191
  %cmp628 = icmp slt i32 %178, %sub627
  br i1 %cmp628, label %if.then630, label %if.end633

if.then630:                                       ; preds = %if.else625
  %192 = ptrtoint ptr %qlen_last_fqs_check626 to i32
  call void @__asan_store4_noabort(i32 %192)
  store i32 %178, ptr %qlen_last_fqs_check626, align 8
  br label %if.end633

if.end633:                                        ; preds = %if.then630, %if.else625, %if.then619
  %193 = ptrtoint ptr %cblist to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load volatile ptr, ptr %cblist, align 4
  %tobool.not.i1034 = icmp eq ptr %194, null
  %lnot642 = xor i1 %tobool.not.i1034, true
  %spec.select979 = select i1 %cmp613, i1 %lnot642, i1 false
  br i1 %spec.select979, label %land.rhs652, label %if.end739

land.rhs652:                                      ; preds = %if.end633
  %.b962967 = load i1, ptr @rcu_do_batch.__already_done.326, align 1
  br i1 %.b962967, label %if.end739, label %if.then663, !prof !1646

if.then663:                                       ; preds = %land.rhs652
  store i1 true, ptr @rcu_do_batch.__already_done.326, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2583, i32 noundef 9, ptr noundef null) #24
  br label %if.end739

if.end739:                                        ; preds = %if.then663, %land.rhs652, %if.end633
  br i1 %cmp613, label %land.rhs750, label %if.end801

land.rhs750:                                      ; preds = %if.end739
  %call752 = call i32 @rcu_segcblist_n_segment_cbs(ptr noundef %cblist) #24
  %cmp753.not = icmp eq i32 %call752, 0
  br i1 %cmp753.not, label %if.end801, label %land.rhs763

land.rhs763:                                      ; preds = %land.rhs750
  %.b963966 = load i1, ptr @rcu_do_batch.__already_done.328, align 1
  br i1 %.b963966, label %if.end801, label %if.then774, !prof !1646

if.then774:                                       ; preds = %land.rhs763
  store i1 true, ptr @rcu_do_batch.__already_done.328, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2586, i32 noundef 9, ptr noundef null) #24
  br label %if.end801

if.end801:                                        ; preds = %if.then774, %land.rhs763, %land.rhs750, %if.end739
  br i1 %tobool.not.i1034, label %if.end862, label %land.rhs811

land.rhs811:                                      ; preds = %if.end801
  %call813 = call i32 @rcu_segcblist_n_segment_cbs(ptr noundef %cblist) #24
  %cmp814 = icmp eq i32 %call813, 0
  br i1 %cmp814, label %land.rhs824, label %if.end862

land.rhs824:                                      ; preds = %land.rhs811
  %.b964965 = load i1, ptr @rcu_do_batch.__already_done.329, align 1
  br i1 %.b964965, label %if.end862, label %if.then835, !prof !1646

if.then835:                                       ; preds = %land.rhs824
  store i1 true, ptr @rcu_do_batch.__already_done.329, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2587, i32 noundef 9, ptr noundef null) #24
  br label %if.end862

if.end862:                                        ; preds = %if.then835, %land.rhs824, %land.rhs811, %if.end801
  call fastcc void @rcu_nocb_unlock_irqrestore(ptr noundef %rdp, i32 noundef %154)
  br label %cleanup872

cleanup872:                                       ; preds = %if.end862, %if.then
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %rcl) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rcu_batch_start(ptr noundef %rcuname, i32 noundef %qlen, i32 noundef %blimit) unnamed_addr #7 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_batch_start, i32 0, i32 1), ptr blockaddress(@trace_rcu_batch_start, %do.body)) #24
          to label %if.end48 [label %do.body], !srcloc !1665

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2111
  %call42 = tail call i32 @__traceiter_rcu_batch_start(ptr noundef null, ptr noundef %rcuname, i32 noundef %qlen, i32 noundef %blimit) #24
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2112
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !1646

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1668
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_batch_start, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_batch_start, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #24
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rcu_batch_start.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_rcu_batch_start.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.128, i32 noundef 624, ptr noundef nonnull @.str.129) #24
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1669
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rcu_batch_end(ptr noundef %rcuname, i32 noundef %callbacks_invoked, i8 noundef zeroext %cb, i8 noundef zeroext %nr, i8 noundef zeroext %iit) unnamed_addr #7 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_batch_end, i32 0, i32 1), ptr blockaddress(@trace_rcu_batch_end, %do.body)) #24
          to label %if.end48 [label %do.body], !srcloc !1665

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i4 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i4
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2113
  %call42 = tail call i32 @__traceiter_rcu_batch_end(ptr noundef null, ptr noundef %rcuname, i32 noundef %callbacks_invoked, i8 noundef zeroext %cb, i8 noundef zeroext %nr, i8 noundef zeroext %iit, i8 noundef zeroext 0) #24
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2114
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i2 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i2 to ptr
  %preempt_count.i.i3 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i3 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i3, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i3, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i5 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i5 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i6 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i6, label %cpu_online.exit14, label %land.rhs.i.i.i.i8

land.rhs.i.i.i.i8:                                ; preds = %if.end48
  %.b37.i.i.i.i7 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i7, label %cpu_online.exit14, label %if.then.i.i.i.i9, !prof !1646

if.then.i.i.i.i9:                                 ; preds = %land.rhs.i.i.i.i8
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit14

cpu_online.exit14:                                ; preds = %if.then.i.i.i.i9, %land.rhs.i.i.i.i8, %if.end48
  %div3.i.i.i10 = lshr i32 %20, 5
  %arrayidx.i.i.i11 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i10
  %22 = ptrtoint ptr %arrayidx.i.i.i11 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i11, align 4
  %and.i.i.i12 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i12
  %25 = and i32 %23, %24
  %tobool.i13.not = icmp eq i32 %25, 0
  br i1 %tobool.i13.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit14
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1668
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_batch_end, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_batch_end, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #24
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b1 = load i1, ptr @trace_rcu_batch_end.__warned, align 1
  br i1 %.b1, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_rcu_batch_end.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.128, i32 noundef 752, ptr noundef nonnull @.str.129) #24
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1669
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i15 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i15 to ptr
  %preempt_count.i.i.i16 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i16, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i16, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit14, %cpu_online.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_segcblist_extract_done_cbs(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rcu_cblist_dequeue(ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rcu_invoke_callback(ptr noundef %rcuname, ptr noundef %rhp) unnamed_addr #7 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_invoke_callback, i32 0, i32 1), ptr blockaddress(@trace_rcu_invoke_callback, %do.body)) #24
          to label %if.end48 [label %do.body], !srcloc !1665

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2115
  %call42 = tail call i32 @__traceiter_rcu_invoke_callback(ptr noundef null, ptr noundef %rcuname, ptr noundef %rhp) #24
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2116
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !1646

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1668
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_invoke_callback, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_invoke_callback, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #24
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rcu_invoke_callback.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_rcu_invoke_callback.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.128, i32 noundef 651, ptr noundef nonnull @.str.129) #24
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1669
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_segcblist_insert_done_cbs(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_segcblist_add_len(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_segcblist_n_segment_cbs(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rcu_batch_start(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rcu_batch_end(ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @sched_clock() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rcu_invoke_callback(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__local_bh_enable_ip(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @kfree_rcu_work(ptr nocapture noundef %work) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %bkvhead = alloca [2 x ptr], align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %bkvhead) #24
  %0 = getelementptr inbounds [2 x ptr], ptr %bkvhead, i32 0, i32 1
  %krcp1 = getelementptr inbounds %struct.kfree_rcu_cpu_work, ptr %work, i32 0, i32 3
  %1 = ptrtoint ptr %krcp1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %krcp1, align 4
  %lock = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %2, i32 0, i32 3
  %call3 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #24
  %arrayidx = getelementptr %struct.kfree_rcu_cpu_work, ptr %work, i32 0, i32 2, i32 0
  %3 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %arrayidx, align 4
  %5 = ptrtoint ptr %bkvhead to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %4, ptr %bkvhead, align 4
  store ptr null, ptr %arrayidx, align 4
  %arrayidx.1 = getelementptr %struct.kfree_rcu_cpu_work, ptr %work, i32 0, i32 2, i32 1
  %6 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx.1, align 4
  %8 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %7, ptr %0, align 4
  store ptr null, ptr %arrayidx.1, align 4
  %head_free = getelementptr inbounds %struct.kfree_rcu_cpu_work, ptr %work, i32 0, i32 1
  %9 = ptrtoint ptr %head_free to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %head_free, align 4
  store ptr null, ptr %head_free, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call3) #24
  %nr_bkv_objs.i = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %2, i32 0, i32 13
  %bkvcache.i = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %2, i32 0, i32 12
  br label %for.cond23.preheader

for.cond23.preheader:                             ; preds = %for.inc175, %entry
  %i.1394 = phi i32 [ 0, %entry ], [ %inc176, %for.inc175 ]
  %arrayidx24 = getelementptr [2 x ptr], ptr %bkvhead, i32 0, i32 %i.1394
  %11 = ptrtoint ptr %arrayidx24 to i32
  call void @__asan_load4_noabort(i32 %11)
  %arrayidx24.promoted = load ptr, ptr %arrayidx24, align 4
  %tobool.not393 = icmp eq ptr %arrayidx24.promoted, null
  br i1 %tobool.not393, label %for.inc175, label %for.body25.lr.ph

for.body25.lr.ph:                                 ; preds = %for.cond23.preheader
  %cmp29 = icmp eq i32 %i.1394, 0
  br label %for.body25

for.cond178.preheader:                            ; preds = %for.inc175
  %tobool179.not395 = icmp eq ptr %10, null
  br i1 %tobool179.not395, label %for.end341, label %for.body180

for.body25:                                       ; preds = %do.end167, %for.body25.lr.ph
  %12 = phi ptr [ %arrayidx24.promoted, %for.body25.lr.ph ], [ %14, %do.end167 ]
  %next27 = getelementptr inbounds %struct.kvfree_rcu_bulk_data, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %next27 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %next27, align 4
  %15 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %12, align 4
  %cmp4.not.i = icmp eq i32 %16, 0
  br i1 %cmp4.not.i, label %debug_rcu_bhead_unqueue.exit, label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body25
  %i.05.i = phi i32 [ %inc.i, %for.body.i ], [ 0, %for.body25 ]
  %arrayidx.i = getelementptr %struct.kvfree_rcu_bulk_data, ptr %12, i32 0, i32 2, i32 %i.05.i
  %17 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx.i, align 4
  tail call void @debug_object_active_state(ptr noundef %18, ptr noundef nonnull @rcuhead_debug_descr, i32 noundef 1, i32 noundef 0) #24
  tail call void @debug_object_deactivate(ptr noundef %18, ptr noundef nonnull @rcuhead_debug_descr) #24
  %inc.i = add nuw i32 %i.05.i, 1
  %19 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %12, align 4
  %cmp.i = icmp ult i32 %inc.i, %20
  br i1 %cmp.i, label %for.body.i, label %debug_rcu_bhead_unqueue.exit

debug_rcu_bhead_unqueue.exit:                     ; preds = %for.body.i, %for.body25
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_callback_map)
  br i1 %cmp29, label %if.then, label %for.cond38.preheader

for.cond38.preheader:                             ; preds = %debug_rcu_bhead_unqueue.exit
  %21 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %12, align 4
  %cmp41391.not = icmp eq i32 %22, 0
  br i1 %cmp41391.not, label %if.end, label %for.body43

if.then:                                          ; preds = %debug_rcu_bhead_unqueue.exit
  %23 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %24 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %12, align 4
  %records = getelementptr inbounds %struct.kvfree_rcu_bulk_data, ptr %12, i32 0, i32 2
  tail call fastcc void @trace_rcu_invoke_kfree_bulk_callback(ptr noundef %23, i32 noundef %25, ptr noundef %records)
  %26 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %12, align 4
  tail call void @kmem_cache_free_bulk(ptr noundef null, i32 noundef %27, ptr noundef %records) #24
  br label %if.end

for.body43:                                       ; preds = %for.body43, %for.cond38.preheader
  %j.0392 = phi i32 [ %inc51, %for.body43 ], [ 0, %for.cond38.preheader ]
  %28 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %arrayidx46 = getelementptr %struct.kvfree_rcu_bulk_data, ptr %12, i32 0, i32 2, i32 %j.0392
  %29 = ptrtoint ptr %arrayidx46 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx46, align 4
  tail call fastcc void @trace_rcu_invoke_kvfree_callback(ptr noundef %28, ptr noundef %30, i32 noundef 0)
  %31 = ptrtoint ptr %arrayidx46 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %arrayidx46, align 4
  tail call void @vfree(ptr noundef %32) #24
  %inc51 = add nuw i32 %j.0392, 1
  %33 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %12, align 4
  %cmp41 = icmp ult i32 %inc51, %34
  br i1 %cmp41, label %for.body43, label %if.end

if.end:                                           ; preds = %for.body43, %if.then, %for.cond38.preheader
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_callback_map)
  %call60 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #24
  %35 = ptrtoint ptr %nr_bkv_objs.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %nr_bkv_objs.i, align 4
  %37 = load i32, ptr @rcu_min_cached_objs, align 4
  %cmp.not.i = icmp slt i32 %36, %37
  br i1 %cmp.not.i, label %do.body68.thread, label %do.body68

do.body68.thread:                                 ; preds = %if.end
  %call.i.i = tail call zeroext i1 @llist_add_batch(ptr noundef nonnull %12, ptr noundef nonnull %12, ptr noundef %bkvcache.i) #24
  %38 = ptrtoint ptr %nr_bkv_objs.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %nr_bkv_objs.i, align 4
  %add.i = add i32 %39, 1
  store volatile i32 %add.i, ptr %nr_bkv_objs.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call60) #24
  br label %do.end87

do.body68:                                        ; preds = %if.end
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call60) #24
  %tobool78.not = icmp eq ptr %12, null
  br i1 %tobool78.not, label %do.end87, label %if.then79

if.then79:                                        ; preds = %do.body68
  %40 = ptrtoint ptr %12 to i32
  tail call void @free_pages(i32 noundef %40, i32 noundef 0) #24
  br label %do.end87

do.end87:                                         ; preds = %if.then79, %do.body68, %do.body68.thread
  %41 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %41, -16384
  %42 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %42, i32 0, i32 2
  %43 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %task, align 8
  %rcu_tasks_holdout = getelementptr inbounds %struct.task_struct, ptr %44, i32 0, i32 40
  %45 = ptrtoint ptr %rcu_tasks_holdout to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load volatile i8, ptr %rcu_tasks_holdout, align 4
  %tobool91.not = icmp eq i8 %46, 0
  br i1 %tobool91.not, label %do.end111, label %do.body97

do.body97:                                        ; preds = %do.end87
  %47 = ptrtoint ptr %rcu_tasks_holdout to i32
  call void @__asan_store1_noabort(i32 %47)
  store volatile i8 0, ptr %rcu_tasks_holdout, align 4
  br label %do.end111

do.end111:                                        ; preds = %do.body97, %do.end87
  %48 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %task, align 8
  %trc_reader_checked = getelementptr inbounds %struct.task_struct, ptr %49, i32 0, i32 47
  %50 = ptrtoint ptr %trc_reader_checked to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load volatile i8, ptr %trc_reader_checked, align 64, !range !1644
  %tobool115.not = icmp eq i8 %51, 0
  br i1 %tobool115.not, label %do.end121, label %do.end167, !prof !1645

do.end121:                                        ; preds = %do.end111
  %trc_reader_nesting = getelementptr inbounds %struct.task_struct, ptr %49, i32 0, i32 44
  %52 = ptrtoint ptr %trc_reader_nesting to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %trc_reader_nesting, align 4
  %tobool125.not = icmp eq i32 %53, 0
  br i1 %tobool125.not, label %do.end140, label %do.end167, !prof !1646

do.end140:                                        ; preds = %do.end121
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2117
  %54 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %task, align 8
  %trc_reader_checked148 = getelementptr inbounds %struct.task_struct, ptr %55, i32 0, i32 47
  %56 = ptrtoint ptr %trc_reader_checked148 to i32
  call void @__asan_store1_noabort(i32 %56)
  store volatile i8 1, ptr %trc_reader_checked148, align 64
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2118
  br label %do.end167

do.end167:                                        ; preds = %do.end140, %do.end121, %do.end111
  tail call void @__might_resched(ptr noundef nonnull @.str, i32 noundef 3335, i32 noundef 0) #24
  %call.i = tail call i32 @__cond_resched() #24
  %tobool.not = icmp eq ptr %14, null
  br i1 %tobool.not, label %for.inc175, label %for.body25

for.inc175:                                       ; preds = %do.end167, %for.cond23.preheader
  %57 = ptrtoint ptr %arrayidx24 to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr null, ptr %arrayidx24, align 4
  %inc176 = add nuw nsw i32 %i.1394, 1
  %exitcond.not = icmp eq i32 %inc176, 2
  br i1 %exitcond.not, label %for.cond178.preheader, label %for.cond23.preheader

for.body180:                                      ; preds = %do.end335, %for.cond178.preheader
  %head.0396 = phi ptr [ %62, %do.end335 ], [ %10, %for.cond178.preheader ]
  %func = getelementptr inbounds %struct.callback_head, ptr %head.0396, i32 0, i32 1
  %58 = ptrtoint ptr %func to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %func, align 4
  %60 = ptrtoint ptr %59 to i32
  %idx.neg = sub i32 0, %60
  %add.ptr181 = getelementptr i8, ptr %head.0396, i32 %idx.neg
  %61 = ptrtoint ptr %head.0396 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %head.0396, align 4
  tail call void @debug_object_active_state(ptr noundef %add.ptr181, ptr noundef nonnull @rcuhead_debug_descr, i32 noundef 1, i32 noundef 0) #24
  tail call void @debug_object_deactivate(ptr noundef %add.ptr181, ptr noundef nonnull @rcuhead_debug_descr) #24
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_callback_map)
  %63 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  tail call fastcc void @trace_rcu_invoke_kvfree_callback(ptr noundef %63, ptr noundef nonnull %head.0396, i32 noundef %60)
  %cmp183.not = icmp ult ptr %59, inttoptr (i32 4096 to ptr)
  br i1 %cmp183.not, label %if.then238.critedge, label %land.rhs

land.rhs:                                         ; preds = %for.body180
  %.b386 = load i1, ptr @kfree_rcu_work.__already_done, align 1
  br i1 %.b386, label %if.end239, label %if.then203, !prof !1646

if.then203:                                       ; preds = %land.rhs
  store i1 true, ptr @kfree_rcu_work.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3355, i32 noundef 9, ptr noundef null) #24
  br label %if.end239

if.then238.critedge:                              ; preds = %for.body180
  tail call void @kvfree(ptr noundef %add.ptr181) #24
  br label %if.end239

if.end239:                                        ; preds = %if.then238.critedge, %if.then203, %land.rhs
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_callback_map)
  %64 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i388 = and i32 %64, -16384
  %65 = inttoptr i32 %and.i388 to ptr
  %task248 = getelementptr inbounds %struct.thread_info, ptr %65, i32 0, i32 2
  %66 = ptrtoint ptr %task248 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %task248, align 8
  %rcu_tasks_holdout249 = getelementptr inbounds %struct.task_struct, ptr %67, i32 0, i32 40
  %68 = ptrtoint ptr %rcu_tasks_holdout249 to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load volatile i8, ptr %rcu_tasks_holdout249, align 4
  %tobool251.not = icmp eq i8 %69, 0
  br i1 %tobool251.not, label %do.end271, label %do.body257

do.body257:                                       ; preds = %if.end239
  %70 = ptrtoint ptr %rcu_tasks_holdout249 to i32
  call void @__asan_store1_noabort(i32 %70)
  store volatile i8 0, ptr %rcu_tasks_holdout249, align 4
  br label %do.end271

do.end271:                                        ; preds = %do.body257, %if.end239
  %71 = ptrtoint ptr %task248 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %task248, align 8
  %trc_reader_checked275 = getelementptr inbounds %struct.task_struct, ptr %72, i32 0, i32 47
  %73 = ptrtoint ptr %trc_reader_checked275 to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load volatile i8, ptr %trc_reader_checked275, align 64, !range !1644
  %tobool276.not = icmp eq i8 %74, 0
  br i1 %tobool276.not, label %do.end288, label %do.end335, !prof !1645

do.end288:                                        ; preds = %do.end271
  %trc_reader_nesting292 = getelementptr inbounds %struct.task_struct, ptr %72, i32 0, i32 44
  %75 = ptrtoint ptr %trc_reader_nesting292 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load volatile i32, ptr %trc_reader_nesting292, align 4
  %tobool293.not = icmp eq i32 %76, 0
  br i1 %tobool293.not, label %do.end308, label %do.end335, !prof !1646

do.end308:                                        ; preds = %do.end288
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2119
  %77 = ptrtoint ptr %task248 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %task248, align 8
  %trc_reader_checked316 = getelementptr inbounds %struct.task_struct, ptr %78, i32 0, i32 47
  %79 = ptrtoint ptr %trc_reader_checked316 to i32
  call void @__asan_store1_noabort(i32 %79)
  store volatile i8 1, ptr %trc_reader_checked316, align 64
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2120
  br label %do.end335

do.end335:                                        ; preds = %do.end308, %do.end288, %do.end271
  tail call void @__might_resched(ptr noundef nonnull @.str, i32 noundef 3359, i32 noundef 0) #24
  %call.i389 = tail call i32 @__cond_resched() #24
  %tobool179.not = icmp eq ptr %62, null
  br i1 %tobool179.not, label %for.end341, label %for.body180

for.end341:                                       ; preds = %do.end335, %for.cond178.preheader
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %bkvhead) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @kfree_rcu_monitor(ptr noundef %work) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -200
  %lock = getelementptr i8, ptr %work, i32 -44
  %call = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #24
  %krw_arr = getelementptr i8, ptr %work, i32 -188
  %bkvhead = getelementptr i8, ptr %work, i32 -196
  %arrayidx8 = getelementptr i8, ptr %work, i32 -192
  %count = getelementptr i8, ptr %work, i32 104
  %0 = ptrtoint ptr %bkvhead to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bkvhead, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %lor.lhs.false, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %bkvhead_free = getelementptr i8, ptr %work, i32 -128
  %2 = ptrtoint ptr %bkvhead_free to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %bkvhead_free, align 4
  %tobool6.not = icmp eq ptr %3, null
  br i1 %tobool6.not, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %4 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx8, align 4
  %tobool9.not = icmp eq ptr %5, null
  br i1 %tobool9.not, label %lor.lhs.false14, label %land.lhs.true10

land.lhs.true10:                                  ; preds = %lor.lhs.false
  %arrayidx12 = getelementptr i8, ptr %work, i32 -124
  %6 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx12, align 4
  %tobool13.not = icmp eq ptr %7, null
  br i1 %tobool13.not, label %if.then, label %lor.lhs.false14

lor.lhs.false14:                                  ; preds = %land.lhs.true10, %lor.lhs.false
  %8 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %add.ptr, align 8
  %tobool15.not = icmp eq ptr %9, null
  br i1 %tobool15.not, label %if.end49, label %land.lhs.true16

land.lhs.true16:                                  ; preds = %lor.lhs.false14
  %head_free = getelementptr i8, ptr %work, i32 -132
  %10 = ptrtoint ptr %head_free to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %head_free, align 4
  %tobool17.not = icmp eq ptr %11, null
  br i1 %tobool17.not, label %if.then, label %if.end49

if.then:                                          ; preds = %land.lhs.true16, %land.lhs.true10, %land.lhs.true
  %arrayidx23 = getelementptr i8, ptr %work, i32 -128
  %12 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx23, align 4
  %tobool24.not = icmp eq ptr %13, null
  br i1 %tobool24.not, label %if.then25, label %for.inc

if.then25:                                        ; preds = %if.then
  %14 = ptrtoint ptr %bkvhead to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %bkvhead, align 4
  %16 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %15, ptr %arrayidx23, align 4
  store ptr null, ptr %bkvhead, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.then25, %if.then
  %arrayidx23.1 = getelementptr i8, ptr %work, i32 -124
  %17 = ptrtoint ptr %arrayidx23.1 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx23.1, align 4
  %tobool24.not.1 = icmp eq ptr %18, null
  br i1 %tobool24.not.1, label %if.then25.1, label %for.inc.1

if.then25.1:                                      ; preds = %for.inc
  %arrayidx27.1 = getelementptr i8, ptr %work, i32 -192
  %19 = ptrtoint ptr %arrayidx27.1 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx27.1, align 4
  %21 = ptrtoint ptr %arrayidx23.1 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %20, ptr %arrayidx23.1, align 4
  store ptr null, ptr %arrayidx27.1, align 4
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then25.1, %for.inc
  %head_free32 = getelementptr i8, ptr %work, i32 -132
  %22 = ptrtoint ptr %head_free32 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %head_free32, align 4
  %tobool33.not = icmp eq ptr %23, null
  br i1 %tobool33.not, label %if.then34, label %do.body43

if.then34:                                        ; preds = %for.inc.1
  %24 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %add.ptr, align 8
  %26 = ptrtoint ptr %head_free32 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %25, ptr %head_free32, align 4
  store ptr null, ptr %add.ptr, align 8
  br label %do.body43

do.body43:                                        ; preds = %if.then34, %for.inc.1
  %27 = ptrtoint ptr %count to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile i32 0, ptr %count, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %28 = load ptr, ptr @system_wq, align 4
  %call48 = tail call zeroext i1 @queue_rcu_work(ptr noundef %28, ptr noundef %krw_arr) #24
  br label %if.end49

if.end49:                                         ; preds = %do.body43, %land.lhs.true16, %lor.lhs.false14
  %arrayidx.1 = getelementptr i8, ptr %work, i32 -116
  %29 = ptrtoint ptr %bkvhead to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %bkvhead, align 4
  %tobool.not.1 = icmp eq ptr %30, null
  br i1 %tobool.not.1, label %lor.lhs.false.1, label %land.lhs.true.1

land.lhs.true.1:                                  ; preds = %if.end49
  %bkvhead_free.1 = getelementptr i8, ptr %work, i32 -56
  %31 = ptrtoint ptr %bkvhead_free.1 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %bkvhead_free.1, align 4
  %tobool6.not.1 = icmp eq ptr %32, null
  br i1 %tobool6.not.1, label %if.then.1, label %lor.lhs.false.1

lor.lhs.false.1:                                  ; preds = %land.lhs.true.1, %if.end49
  %33 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx8, align 4
  %tobool9.not.1 = icmp eq ptr %34, null
  br i1 %tobool9.not.1, label %lor.lhs.false14.1, label %land.lhs.true10.1

land.lhs.true10.1:                                ; preds = %lor.lhs.false.1
  %arrayidx12.1 = getelementptr i8, ptr %work, i32 -52
  %35 = ptrtoint ptr %arrayidx12.1 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx12.1, align 4
  %tobool13.not.1 = icmp eq ptr %36, null
  br i1 %tobool13.not.1, label %if.then.1, label %lor.lhs.false14.1

lor.lhs.false14.1:                                ; preds = %land.lhs.true10.1, %lor.lhs.false.1
  %37 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %add.ptr, align 8
  %tobool15.not.1 = icmp eq ptr %38, null
  br i1 %tobool15.not.1, label %if.end49.1, label %land.lhs.true16.1

land.lhs.true16.1:                                ; preds = %lor.lhs.false14.1
  %head_free.1 = getelementptr i8, ptr %work, i32 -60
  %39 = ptrtoint ptr %head_free.1 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %head_free.1, align 4
  %tobool17.not.1 = icmp eq ptr %40, null
  br i1 %tobool17.not.1, label %if.then.1, label %if.end49.1

if.then.1:                                        ; preds = %land.lhs.true16.1, %land.lhs.true10.1, %land.lhs.true.1
  %arrayidx23.1106 = getelementptr i8, ptr %work, i32 -56
  %41 = ptrtoint ptr %arrayidx23.1106 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %arrayidx23.1106, align 4
  %tobool24.not.1107 = icmp eq ptr %42, null
  br i1 %tobool24.not.1107, label %if.then25.1108, label %for.inc.1109

if.then25.1108:                                   ; preds = %if.then.1
  %43 = ptrtoint ptr %bkvhead to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %bkvhead, align 4
  %45 = ptrtoint ptr %arrayidx23.1106 to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %44, ptr %arrayidx23.1106, align 4
  store ptr null, ptr %bkvhead, align 4
  br label %for.inc.1109

for.inc.1109:                                     ; preds = %if.then25.1108, %if.then.1
  %arrayidx23.1.1 = getelementptr i8, ptr %work, i32 -52
  %46 = ptrtoint ptr %arrayidx23.1.1 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %arrayidx23.1.1, align 4
  %tobool24.not.1.1 = icmp eq ptr %47, null
  br i1 %tobool24.not.1.1, label %if.then25.1.1, label %for.inc.1.1

if.then25.1.1:                                    ; preds = %for.inc.1109
  %arrayidx27.1.1 = getelementptr i8, ptr %work, i32 -192
  %48 = ptrtoint ptr %arrayidx27.1.1 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %arrayidx27.1.1, align 4
  %50 = ptrtoint ptr %arrayidx23.1.1 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %49, ptr %arrayidx23.1.1, align 4
  store ptr null, ptr %arrayidx27.1.1, align 4
  br label %for.inc.1.1

for.inc.1.1:                                      ; preds = %if.then25.1.1, %for.inc.1109
  %head_free32.1 = getelementptr i8, ptr %work, i32 -60
  %51 = ptrtoint ptr %head_free32.1 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %head_free32.1, align 4
  %tobool33.not.1 = icmp eq ptr %52, null
  br i1 %tobool33.not.1, label %if.then34.1, label %do.body43.1

if.then34.1:                                      ; preds = %for.inc.1.1
  %53 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %add.ptr, align 8
  %55 = ptrtoint ptr %head_free32.1 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %54, ptr %head_free32.1, align 4
  store ptr null, ptr %add.ptr, align 8
  br label %do.body43.1

do.body43.1:                                      ; preds = %if.then34.1, %for.inc.1.1
  %56 = ptrtoint ptr %count to i32
  call void @__asan_store4_noabort(i32 %56)
  store volatile i32 0, ptr %count, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %57 = load ptr, ptr @system_wq, align 4
  %call48.1 = tail call zeroext i1 @queue_rcu_work(ptr noundef %57, ptr noundef %arrayidx.1) #24
  br label %if.end49.1

if.end49.1:                                       ; preds = %do.body43.1, %land.lhs.true16.1, %lor.lhs.false14.1
  %58 = ptrtoint ptr %bkvhead to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %bkvhead, align 4
  %tobool55.not = icmp eq ptr %59, null
  br i1 %tobool55.not, label %land.lhs.true56, label %if.else

land.lhs.true56:                                  ; preds = %if.end49.1
  %60 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %arrayidx8, align 4
  %tobool59.not = icmp eq ptr %61, null
  br i1 %tobool59.not, label %land.lhs.true60, label %if.else

land.lhs.true60:                                  ; preds = %land.lhs.true56
  %62 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %add.ptr, align 8
  %tobool62.not = icmp eq ptr %63, null
  br i1 %tobool62.not, label %if.then63, label %if.else

if.then63:                                        ; preds = %land.lhs.true60
  %monitor_todo = getelementptr i8, ptr %work, i32 100
  %64 = ptrtoint ptr %monitor_todo to i32
  call void @__asan_store1_noabort(i32 %64)
  store i8 0, ptr %monitor_todo, align 4
  br label %do.body66

if.else:                                          ; preds = %land.lhs.true60, %land.lhs.true56, %if.end49.1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %65 = load ptr, ptr @system_wq, align 4
  %call.i.i = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %65, ptr noundef %work, i32 noundef 2) #24
  br label %do.body66

do.body66:                                        ; preds = %if.else, %if.then63
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @delayed_work_timer_fn(ptr noundef) #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @fill_page_cache_func(ptr noundef %work) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %backoff_page_cache_fill = getelementptr i8, ptr %work, i32 100
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %backoff_page_cache_fill, i32 noundef 4) #24
  %0 = ptrtoint ptr %backoff_page_cache_fill to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %backoff_page_cache_fill, align 4
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %cond.end, label %for.body.lr.ph

cond.end:                                         ; preds = %entry
  %2 = load i32, ptr @rcu_min_cached_objs, align 4
  %cmp31 = icmp sgt i32 %2, 0
  br i1 %cmp31, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %cond.end, %entry
  %cond36 = phi i32 [ %2, %cond.end ], [ 1, %entry ]
  %lock = getelementptr i8, ptr %work, i32 -152
  %nr_bkv_objs.i = getelementptr i8, ptr %work, i32 160
  %bkvcache.i = getelementptr i8, ptr %work, i32 156
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %i.032 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %call1 = tail call i32 @__get_free_pages(i32 noundef 601280, i32 noundef 0) #24
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %for.inc, label %do.body

do.body:                                          ; preds = %for.body
  %call5 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #24
  %3 = ptrtoint ptr %nr_bkv_objs.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %nr_bkv_objs.i, align 4
  %5 = load i32, ptr @rcu_min_cached_objs, align 4
  %cmp.not.i = icmp slt i32 %4, %5
  br i1 %cmp.not.i, label %put_cached_bnode.exit.thread, label %if.then17

put_cached_bnode.exit.thread:                     ; preds = %do.body
  %6 = inttoptr i32 %call1 to ptr
  %call.i.i30 = tail call zeroext i1 @llist_add_batch(ptr noundef nonnull %6, ptr noundef nonnull %6, ptr noundef %bkvcache.i) #24
  %7 = ptrtoint ptr %nr_bkv_objs.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %nr_bkv_objs.i, align 4
  %add.i = add i32 %8, 1
  store volatile i32 %add.i, ptr %nr_bkv_objs.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call5) #24
  br label %for.inc

if.then17:                                        ; preds = %do.body
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call5) #24
  tail call void @free_pages(i32 noundef %call1, i32 noundef 0) #24
  br label %for.end

for.inc:                                          ; preds = %put_cached_bnode.exit.thread, %for.body
  %inc = add nuw nsw i32 %i.032, 1
  %exitcond.not = icmp eq i32 %inc, %cond36
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.then17, %cond.end
  %work_in_progress = getelementptr i8, ptr %work, i32 104
  %call.i.i28 = tail call zeroext i1 @__kasan_check_write(ptr noundef %work_in_progress, i32 noundef 4) #24
  %9 = ptrtoint ptr %work_in_progress to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 0, ptr %work_in_progress, align 4
  %call.i.i29 = tail call zeroext i1 @__kasan_check_write(ptr noundef %backoff_page_cache_fill, i32 noundef 4) #24
  %10 = ptrtoint ptr %backoff_page_cache_fill to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile i32 0, ptr %backoff_page_cache_fill, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_shrinker(ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rcu_invoke_kfree_bulk_callback(ptr noundef %rcuname, i32 noundef %nr_records, ptr noundef %p) unnamed_addr #7 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_invoke_kfree_bulk_callback, i32 0, i32 1), ptr blockaddress(@trace_rcu_invoke_kfree_bulk_callback, %do.body)) #24
          to label %if.end48 [label %do.body], !srcloc !1665

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2121
  %call42 = tail call i32 @__traceiter_rcu_invoke_kfree_bulk_callback(ptr noundef null, ptr noundef %rcuname, i32 noundef %nr_records, ptr noundef %p) #24
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2122
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !1646

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1668
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_invoke_kfree_bulk_callback, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_invoke_kfree_bulk_callback, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #24
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rcu_invoke_kfree_bulk_callback.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_rcu_invoke_kfree_bulk_callback.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.128, i32 noundef 708, ptr noundef nonnull @.str.129) #24
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1669
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rcu_invoke_kvfree_callback(ptr noundef %rcuname, ptr noundef %rhp, i32 noundef %offset) unnamed_addr #7 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_invoke_kvfree_callback, i32 0, i32 1), ptr blockaddress(@trace_rcu_invoke_kvfree_callback, %do.body)) #24
          to label %if.end48 [label %do.body], !srcloc !1665

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2123
  %call42 = tail call i32 @__traceiter_rcu_invoke_kvfree_callback(ptr noundef null, ptr noundef %rcuname, ptr noundef %rhp, i32 noundef %offset) #24
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2124
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !1646

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1668
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_invoke_kvfree_callback, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_invoke_kvfree_callback, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #24
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rcu_invoke_kvfree_callback.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_rcu_invoke_kvfree_callback.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.128, i32 noundef 680, ptr noundef nonnull @.str.129) #24
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1669
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @vfree(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_pages(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rcu_invoke_kfree_bulk_callback(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_free_bulk(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rcu_invoke_kvfree_callback(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @llist_add_batch(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_rcu_work(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @kfree_rcu_shrink_count(ptr nocapture noundef readnone %shrink, ptr nocapture noundef readnone %sc) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call19 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %cmp20 = icmp ult i32 %call19, %0
  br i1 %cmp20, label %for.body, label %for.end

for.body:                                         ; preds = %for.body, %entry
  %call22 = phi i32 [ %call, %for.body ], [ %call19, %entry ]
  %count.021 = phi i32 [ %add12, %for.body ], [ 0, %entry ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call22
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %arrayidx, align 4
  %add = add i32 %2, ptrtoint (ptr @krc to i32)
  %3 = inttoptr i32 %add to ptr
  %count6 = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %3, i32 0, i32 7
  %4 = ptrtoint ptr %count6 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %count6, align 8
  %add7 = add i32 %5, %count.021
  %nr_bkv_objs = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %3, i32 0, i32 13
  %6 = ptrtoint ptr %nr_bkv_objs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %nr_bkv_objs, align 4
  %add12 = add i32 %add7, %7
  %backoff_page_cache_fill = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %3, i32 0, i32 9
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %backoff_page_cache_fill, i32 noundef 4) #24
  %8 = ptrtoint ptr %backoff_page_cache_fill to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile i32 1, ptr %backoff_page_cache_fill, align 4
  %call = tail call i32 @cpumask_next(i32 noundef %call22, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %9 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call, %9
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  %count.0.lcssa = phi i32 [ 0, %entry ], [ %add12, %for.body ]
  ret i32 %count.0.lcssa
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @kfree_rcu_shrink_scan(ptr nocapture noundef readnone %shrink, ptr nocapture noundef %sc) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %nr_to_scan = getelementptr inbounds %struct.shrink_control, ptr %sc, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %drain_page_cache.exit, %entry
  %freed.0 = phi i32 [ 0, %entry ], [ %add5, %drain_page_cache.exit ]
  %cpu.0 = phi i32 [ -1, %entry ], [ %call, %drain_page_cache.exit ]
  %call = tail call i32 @cpumask_next(i32 noundef %cpu.0, ptr noundef nonnull @__cpu_possible_mask) #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call, %0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %arrayidx, align 4
  %add = add i32 %2, ptrtoint (ptr @krc to i32)
  %3 = inttoptr i32 %add to ptr
  %count2 = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %3, i32 0, i32 7
  %4 = ptrtoint ptr %count2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %count2, align 8
  %lock.i = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %3, i32 0, i32 3
  %call.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #24
  %bkvcache.i = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %3, i32 0, i32 12
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %bkvcache.i, i32 noundef 4) #24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2125
  tail call void @llvm.prefetch.p0(ptr %bkvcache.i, i32 1, i32 3, i32 1) #24
  %6 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr %bkvcache.i) #24, !srcloc !1729
  %asmresult.i.i.i = extractvalue { i32, i32 } %6, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2126
  %nr_bkv_objs.i = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %3, i32 0, i32 13
  %7 = ptrtoint ptr %nr_bkv_objs.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile i32 0, ptr %nr_bkv_objs.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i, i32 noundef %call.i) #24
  %tobool.not26.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %tobool.not26.i, label %drain_page_cache.exit, label %land.rhs.preheader.i

land.rhs.preheader.i:                             ; preds = %for.body
  %8 = inttoptr i32 %asmresult.i.i.i to ptr
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %land.rhs.i, %land.rhs.preheader.i
  %pos.028.i = phi ptr [ %10, %land.rhs.i ], [ %8, %land.rhs.preheader.i ]
  %freed.027.i = phi i32 [ %inc.i, %land.rhs.i ], [ 0, %land.rhs.preheader.i ]
  %9 = ptrtoint ptr %pos.028.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pos.028.i, align 4
  %11 = ptrtoint ptr %pos.028.i to i32
  tail call void @free_pages(i32 noundef %11, i32 noundef 0) #24
  %inc.i = add i32 %freed.027.i, 1
  %tobool.not.i = icmp eq ptr %10, null
  br i1 %tobool.not.i, label %drain_page_cache.exit, label %land.rhs.i

drain_page_cache.exit:                            ; preds = %land.rhs.i, %for.body
  %freed.0.lcssa.i = phi i32 [ 0, %for.body ], [ %inc.i, %land.rhs.i ]
  %add4 = add i32 %freed.0.lcssa.i, %5
  %monitor_work = getelementptr inbounds %struct.kfree_rcu_cpu, ptr %3, i32 0, i32 4
  tail call void @kfree_rcu_monitor(ptr noundef %monitor_work)
  %12 = ptrtoint ptr %nr_to_scan to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %nr_to_scan, align 4
  %sub = sub i32 %13, %add4
  store i32 %sub, ptr %nr_to_scan, align 4
  %add5 = add i32 %add4, %freed.0
  %cmp7 = icmp eq i32 %13, %add4
  br i1 %cmp7, label %for.end, label %for.cond

for.end:                                          ; preds = %drain_page_cache.exit, %for.cond
  %freed.1 = phi i32 [ %add5, %drain_page_cache.exit ], [ %freed.0, %for.cond ]
  %cmp9 = icmp eq i32 %freed.1, 0
  %spec.select = select i1 %cmp9, i32 -1, i32 %freed.1
  ret i32 %spec.select
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_waitqueue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_boot_init_percpu_data(i32 noundef %cpu) unnamed_addr #9 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr @rcu_data to i32)
  %2 = inttoptr i32 %add to ptr
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 7
  %3 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mynode, align 16
  %grplo = getelementptr inbounds %struct.rcu_node, ptr %4, i32 0, i32 15
  %5 = ptrtoint ptr %grplo to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %grplo, align 4
  %sub = sub i32 %cpu, %6
  %shl = shl nuw i32 1, %sub
  %grpmask = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 8
  %7 = ptrtoint ptr %grpmask to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %shl, ptr %grpmask, align 4
  %strict_work = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 12
  tail call void @__init_work(ptr noundef %strict_work, i32 noundef 0) #24
  %8 = ptrtoint ptr %strict_work to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -64, ptr %strict_work, align 16
  %lockdep_map = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 12, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.371, ptr noundef nonnull @rcu_boot_init_percpu_data.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #24
  %entry6 = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 12, i32 1
  %9 = ptrtoint ptr %entry6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %entry6, ptr %entry6, align 4
  %prev.i = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 12, i32 1, i32 1
  %10 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %entry6, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 12, i32 2
  %11 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr @strict_work_handler, ptr %func, align 4
  %dynticks_nesting = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 19
  %12 = ptrtoint ptr %dynticks_nesting to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %dynticks_nesting, align 4
  %cmp.not = icmp eq i32 %13, 1
  br i1 %cmp.not, label %if.end40, label %land.rhs

land.rhs:                                         ; preds = %entry
  %.b125 = load i1, ptr @rcu_boot_init_percpu_data.__already_done, align 1
  br i1 %.b125, label %if.end40, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @rcu_boot_init_percpu_data.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4141, i32 noundef 9, ptr noundef null) #24
  br label %if.end40

if.end40:                                         ; preds = %if.then, %land.rhs, %entry
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1650
  %dynticks.i = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 21
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dynticks.i, i32 noundef 4) #24
  %14 = ptrtoint ptr %dynticks.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %dynticks.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1651
  %and.i = and i32 %15, 1
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %land.rhs56, label %if.end94

land.rhs56:                                       ; preds = %if.end40
  %.b123124 = load i1, ptr @rcu_boot_init_percpu_data.__already_done.372, align 1
  br i1 %.b123124, label %if.end94, label %if.then67, !prof !1646

if.then67:                                        ; preds = %land.rhs56
  store i1 true, ptr @rcu_boot_init_percpu_data.__already_done.372, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4142, i32 noundef 9, ptr noundef null) #24
  br label %if.end94

if.end94:                                         ; preds = %if.then67, %land.rhs56, %if.end40
  %16 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %rcu_ofl_gp_seq = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 63
  %17 = ptrtoint ptr %rcu_ofl_gp_seq to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %rcu_ofl_gp_seq, align 4
  %rcu_ofl_gp_flags = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 64
  %18 = ptrtoint ptr %rcu_ofl_gp_flags to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 8, ptr %rcu_ofl_gp_flags, align 16
  %19 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  %rcu_onl_gp_seq = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 65
  %20 = ptrtoint ptr %rcu_onl_gp_seq to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %rcu_onl_gp_seq, align 4
  %rcu_onl_gp_flags = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 66
  %21 = ptrtoint ptr %rcu_onl_gp_flags to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 8, ptr %rcu_onl_gp_flags, align 8
  %cpu102 = getelementptr inbounds %struct.rcu_data, ptr %2, i32 0, i32 68
  %22 = ptrtoint ptr %cpu102 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %cpu, ptr %cpu102, align 64
  tail call fastcc void @rcu_boot_init_nocb_percpu_data(ptr noundef %2)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @strict_work_handler(ptr nocapture noundef readnone %work) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1997
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #24
  %4 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i5.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i.i5.i to ptr
  %preempt_count.i.i.i6.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i.i6.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i.i6.i, align 4
  %add.i.i7.i = add i32 %7, 1
  store volatile i32 %add.i.i7.i, ptr %preempt_count.i.i.i6.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1689
  %8 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i.i to ptr
  %cpu.i.i.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu.i.i.i, align 4
  %arrayidx.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %11
  %12 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.i.i.i, align 4
  %add.i4.i.i = add i32 %13, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 21) to i32)
  %14 = inttoptr i32 %add.i4.i.i to ptr
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %14, align 4
  %and.i.i.i = and i32 %16, 1
  %tobool.not.i.i.not.i = icmp eq i32 %and.i.i.i, 0
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1690
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i5.i.i = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i.i5.i.i to ptr
  %preempt_count.i.i6.i.i = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %preempt_count.i.i6.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %preempt_count.i.i6.i.i, align 4
  %sub.i.i.i = add i32 %20, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i6.i.i, align 4
  br i1 %tobool.not.i.i.not.i, label %land.lhs.true.i, label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %rcu_read_lock.exit, label %land.lhs.true2.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %rcu_read_lock.exit, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true2.i
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.168, i32 noundef 696, ptr noundef nonnull @.str.169) #24
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i, %land.lhs.true.i, %entry
  tail call fastcc void @rcu_read_unlock()
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_boot_init_nocb_percpu_data(ptr noundef %rdp) unnamed_addr #9 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %nocb_cb_wq = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 28
  tail call void @__init_swait_queue_head(ptr noundef %nocb_cb_wq, ptr noundef nonnull @.str.373, ptr noundef nonnull @rcu_boot_init_nocb_percpu_data.__key) #24
  %nocb_gp_wq = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 49
  tail call void @__init_swait_queue_head(ptr noundef %nocb_gp_wq, ptr noundef nonnull @.str.375, ptr noundef nonnull @rcu_boot_init_nocb_percpu_data.__key.374) #24
  %nocb_state_wq = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 29
  tail call void @__init_swait_queue_head(ptr noundef %nocb_state_wq, ptr noundef nonnull @.str.377, ptr noundef nonnull @rcu_boot_init_nocb_percpu_data.__key.376) #24
  %nocb_lock = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 31
  tail call void @__raw_spin_lock_init(ptr noundef %nocb_lock, ptr noundef nonnull @.str.379, ptr noundef nonnull @rcu_boot_init_nocb_percpu_data.__key.378, i16 noundef signext 2) #24
  %nocb_bypass_lock = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 37
  tail call void @__raw_spin_lock_init(ptr noundef %nocb_bypass_lock, ptr noundef nonnull @.str.381, ptr noundef nonnull @rcu_boot_init_nocb_percpu_data.__key.380, i16 noundef signext 2) #24
  %nocb_gp_lock = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 43
  tail call void @__raw_spin_lock_init(ptr noundef %nocb_gp_lock, ptr noundef nonnull @.str.383, ptr noundef nonnull @rcu_boot_init_nocb_percpu_data.__key.382, i16 noundef signext 2) #24
  %nocb_timer = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 34
  tail call void @init_timer_key(ptr noundef %nocb_timer, ptr noundef nonnull @do_nocb_deferred_wakeup_timer, i32 noundef 0, ptr noundef nonnull @.str.385, ptr noundef nonnull @rcu_boot_init_nocb_percpu_data.__key.384) #24
  %nocb_bypass = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 38
  tail call void @rcu_cblist_init(ptr noundef %nocb_bypass) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @do_nocb_deferred_wakeup_timer(ptr noundef %t) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %t, i32 -360
  %nocb_gp_rdp = getelementptr i8, ptr %t, i32 536
  %0 = ptrtoint ptr %nocb_gp_rdp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %nocb_gp_rdp, align 128
  %cmp.not = icmp eq ptr %1, %add.ptr
  br i1 %cmp.not, label %if.end28, label %land.rhs

land.rhs:                                         ; preds = %entry
  %.b53 = load i1, ptr @do_nocb_deferred_wakeup_timer.__already_done, align 1
  br i1 %.b53, label %if.end28, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @do_nocb_deferred_wakeup_timer.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 928, i32 noundef 9, ptr noundef null) #24
  br label %if.end28

if.end28:                                         ; preds = %if.then, %land.rhs, %entry
  %2 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %cpu = getelementptr i8, ptr %t, i32 600
  %3 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cpu, align 64
  %5 = load ptr, ptr @do_nocb_deferred_wakeup_timer.___tp_str, align 4
  tail call fastcc void @trace_rcu_nocb_wake(ptr noundef %2, i32 noundef %4, ptr noundef %5)
  %nocb_gp_lock = getelementptr i8, ptr %t, i32 280
  %call = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %nocb_gp_lock) #24
  %nocb_defer_wakeup.i.i = getelementptr i8, ptr %t, i32 -4
  %6 = ptrtoint ptr %nocb_defer_wakeup.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %nocb_defer_wakeup.i.i, align 4
  %cmp.i.not.i = icmp slt i32 %7, 1
  br i1 %cmp.i.not.i, label %do.body.i, label %if.end.i

do.body.i:                                        ; preds = %if.end28
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %nocb_gp_lock, i32 noundef %call) #24
  br label %do_nocb_deferred_wakeup_common.exit

if.end.i:                                         ; preds = %if.end28
  %cmp1.i = icmp eq i32 %7, 3
  %call3.i = tail call fastcc zeroext i1 @__wake_nocb_gp(ptr noundef %add.ptr, ptr noundef %add.ptr, i1 noundef zeroext %cmp1.i, i32 noundef %call) #24
  %8 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 64
  %11 = load ptr, ptr @do_nocb_deferred_wakeup_common.___tp_str, align 4
  tail call fastcc void @trace_rcu_nocb_wake(ptr noundef %8, i32 noundef %10, ptr noundef %11) #24
  br label %do_nocb_deferred_wakeup_common.exit

do_nocb_deferred_wakeup_common.exit:              ; preds = %if.end.i, %do.body.i
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_cblist_init(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @__wake_nocb_gp(ptr noundef %rdp_gp, ptr nocapture noundef readonly %rdp, i1 noundef zeroext %force, i32 noundef %flags) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %nocb_gp_kthread = getelementptr inbounds %struct.rcu_data, ptr %rdp_gp, i32 0, i32 30
  %0 = ptrtoint ptr %nocb_gp_kthread to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %nocb_gp_kthread, align 16
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %do.body1, label %if.end

do.body1:                                         ; preds = %entry
  %nocb_gp_lock = getelementptr inbounds %struct.rcu_data, ptr %rdp_gp, i32 0, i32 43
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %nocb_gp_lock, i32 noundef %flags) #24
  %2 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %cpu = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 68
  %3 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cpu, align 64
  %5 = load ptr, ptr @__wake_nocb_gp.___tp_str, align 4
  tail call fastcc void @trace_rcu_nocb_wake(ptr noundef %2, i32 noundef %4, ptr noundef %5)
  br label %cleanup

if.end:                                           ; preds = %entry
  %nocb_defer_wakeup = getelementptr inbounds %struct.rcu_data, ptr %rdp_gp, i32 0, i32 33
  %6 = ptrtoint ptr %nocb_defer_wakeup to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nocb_defer_wakeup, align 4
  %cmp6 = icmp sgt i32 %7, 0
  br i1 %cmp6, label %do.body13, label %if.end19

do.body13:                                        ; preds = %if.end
  %8 = ptrtoint ptr %nocb_defer_wakeup to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile i32 0, ptr %nocb_defer_wakeup, align 4
  %nocb_timer = getelementptr inbounds %struct.rcu_data, ptr %rdp_gp, i32 0, i32 34
  %call = tail call i32 @del_timer(ptr noundef %nocb_timer) #24
  br label %if.end19

if.end19:                                         ; preds = %do.body13, %if.end
  br i1 %force, label %if.then50, label %do.end24

do.end24:                                         ; preds = %if.end19
  %nocb_gp_sleep = getelementptr inbounds %struct.rcu_data, ptr %rdp_gp, i32 0, i32 44
  %9 = ptrtoint ptr %nocb_gp_sleep to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load volatile i8, ptr %nocb_gp_sleep, align 4
  %tobool27.not = icmp eq i8 %10, 0
  br i1 %tobool27.not, label %do.body40, label %if.then50

do.body40:                                        ; preds = %do.end24
  %nocb_gp_lock46 = getelementptr inbounds %struct.rcu_data, ptr %rdp_gp, i32 0, i32 43
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %nocb_gp_lock46, i32 noundef %flags) #24
  br label %cleanup

if.then50:                                        ; preds = %do.end24, %if.end19
  %nocb_gp_sleep34 = getelementptr inbounds %struct.rcu_data, ptr %rdp_gp, i32 0, i32 44
  %11 = ptrtoint ptr %nocb_gp_sleep34 to i32
  call void @__asan_store1_noabort(i32 %11)
  store volatile i8 0, ptr %nocb_gp_sleep34, align 4
  %nocb_gp_lock4669 = getelementptr inbounds %struct.rcu_data, ptr %rdp_gp, i32 0, i32 43
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %nocb_gp_lock4669, i32 noundef %flags) #24
  %12 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %cpu51 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 68
  %13 = ptrtoint ptr %cpu51 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cpu51, align 64
  %15 = load ptr, ptr @__wake_nocb_gp.___tp_str.389, align 4
  tail call fastcc void @trace_rcu_nocb_wake(ptr noundef %12, i32 noundef %14, ptr noundef %15)
  %16 = ptrtoint ptr %nocb_gp_kthread to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %nocb_gp_kthread, align 16
  %call54 = tail call i32 @wake_up_process(ptr noundef %17) #24
  br label %cleanup

cleanup:                                          ; preds = %if.then50, %do.body40, %do.body1
  %retval.0 = phi i1 [ false, %do.body1 ], [ true, %if.then50 ], [ false, %do.body40 ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @del_timer(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_expedite_gp() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_unexpedite_gp() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @atomic_notifier_chain_register(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define internal i32 @rcu_panic(ptr nocapture noundef readnone %this, i32 noundef %ev, ptr nocapture noundef readnone %ptr) #21 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @rcu_cpu_stall_suppress to i32))
  store i32 1, ptr @rcu_cpu_stall_suppress, align 4
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_sysrq_key(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @sysrq_show_rcu(i32 noundef %key) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @show_rcu_gp_kthreads()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_report_exp_cpu_mult(ptr noundef %rnp, i32 noundef %mask, i1 noundef zeroext %wake) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %mask.addr = alloca i32, align 4
  %0 = ptrtoint ptr %mask.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %mask, ptr %mask.addr, align 4
  %call = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %rnp) #24
  %expmask = getelementptr inbounds %struct.rcu_node, ptr %rnp, i32 0, i32 9
  %1 = ptrtoint ptr %expmask to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %expmask, align 4
  %and = and i32 %2, %mask
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.body8, label %do.body129

do.body8:                                         ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %3 = load i32, ptr @debug_locks, align 4
  %tobool9.not = icmp eq i32 %3, 0
  br i1 %tobool9.not, label %if.end103, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body8
  %4 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %7, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2127
  %8 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i to ptr
  %cpu27 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu27 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu27, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %11
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx, align 4
  %add = add i32 %13, ptrtoint (ptr @lockdep_recursion to i32)
  %14 = inttoptr i32 %add to ptr
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %14, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2128
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i241 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i.i241 to ptr
  %preempt_count.i.i242 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %preempt_count.i.i242 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %preempt_count.i.i242, align 4
  %sub.i = add i32 %20, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i242, align 4
  %tobool34.not = icmp eq i32 %16, 0
  br i1 %tobool34.not, label %land.rhs, label %if.end103

land.rhs:                                         ; preds = %land.lhs.true
  %21 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i243 = and i32 %21, -16384
  %22 = inttoptr i32 %and.i.i.i243 to ptr
  %preempt_count.i.i244 = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %preempt_count.i.i244 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %preempt_count.i.i244, align 4
  %add.i245 = add i32 %24, 1
  store volatile i32 %add.i245, ptr %preempt_count.i.i244, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2129
  %25 = ptrtoint ptr %cpu27 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cpu27, align 4
  %arrayidx58 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %26
  %27 = ptrtoint ptr %arrayidx58 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx58, align 4
  %add59 = add i32 %28, ptrtoint (ptr @hardirqs_enabled to i32)
  %29 = inttoptr i32 %add59 to ptr
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %29, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2130
  %32 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i246 = and i32 %32, -16384
  %33 = inttoptr i32 %and.i.i.i246 to ptr
  %preempt_count.i.i247 = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %preempt_count.i.i247 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %preempt_count.i.i247, align 4
  %sub.i248 = add i32 %35, -1
  store volatile i32 %sub.i248, ptr %preempt_count.i.i247, align 4
  %tobool66.not = icmp eq i32 %31, 0
  br i1 %tobool66.not, label %if.end103, label %land.rhs71

land.rhs71:                                       ; preds = %land.rhs
  %.b236 = load i1, ptr @rcu_report_exp_cpu_mult.__already_done, align 1
  br i1 %.b236, label %if.end103, label %if.then78, !prof !1646

if.then78:                                        ; preds = %land.rhs71
  store i1 true, ptr @rcu_report_exp_cpu_mult.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 239, i32 noundef 9, ptr noundef null) #24
  br label %if.end103

if.end103:                                        ; preds = %if.then78, %land.rhs71, %land.rhs, %land.lhs.true, %do.body8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp, i32 noundef %call) #24
  br label %cleanup

do.body129:                                       ; preds = %entry
  %neg = xor i32 %mask, -1
  %and131 = and i32 %2, %neg
  %36 = ptrtoint ptr %expmask to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile i32 %and131, ptr %expmask, align 4
  %level = getelementptr inbounds %struct.rcu_node, ptr %rnp, i32 0, i32 18
  %37 = ptrtoint ptr %level to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %level, align 1
  %conv138 = zext i8 %38 to i32
  %39 = load i32, ptr @rcu_num_lvls, align 4
  %sub = add i32 %39, -1
  %cmp139.not = icmp eq i32 %sub, %conv138
  br i1 %cmp139.not, label %if.end188, label %land.rhs150

land.rhs150:                                      ; preds = %do.body129
  %.b235237 = load i1, ptr @rcu_report_exp_cpu_mult.__already_done.422, align 1
  br i1 %.b235237, label %if.end188, label %if.then161, !prof !1646

if.then161:                                       ; preds = %land.rhs150
  store i1 true, ptr @rcu_report_exp_cpu_mult.__already_done.422, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 243, i32 noundef 9, ptr noundef null) #24
  br label %if.end188

if.end188:                                        ; preds = %if.then161, %land.rhs150, %do.body129
  %grplo = getelementptr inbounds %struct.rcu_node, ptr %rnp, i32 0, i32 15
  %40 = ptrtoint ptr %grplo to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %grplo, align 4
  %call196 = call i32 @_find_next_bit_be(ptr noundef nonnull %mask.addr, i32 noundef 32, i32 noundef 0) #24
  %add197 = add i32 %call196, %41
  %grphi = getelementptr inbounds %struct.rcu_node, ptr %rnp, i32 0, i32 16
  %42 = ptrtoint ptr %grphi to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %grphi, align 8
  %cmp198.not253 = icmp sgt i32 %add197, %43
  br i1 %cmp198.not253, label %for.end, label %do.body200

do.body200:                                       ; preds = %do.body200, %if.end188
  %cpu.0254 = phi i32 [ %add214, %do.body200 ], [ %add197, %if.end188 ]
  %44 = ptrtoint ptr %grplo to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %grplo, align 4
  %add210 = add i32 %cpu.0254, 1
  %sub212 = sub i32 %add210, %45
  %call213 = call i32 @_find_next_bit_be(ptr noundef nonnull %mask.addr, i32 noundef 32, i32 noundef %sub212) #24
  %add214 = add i32 %call213, %45
  %46 = ptrtoint ptr %grphi to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %grphi, align 8
  %cmp198.not = icmp sgt i32 %add214, %47
  br i1 %cmp198.not, label %for.end, label %do.body200

for.end:                                          ; preds = %do.body200, %if.end188
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %48 = load i32, ptr @debug_locks, align 4
  %tobool.not.i = icmp eq i32 %48, 0
  br i1 %tobool.not.i, label %for.cond.i.preheader, label %land.rhs.i

land.rhs.i:                                       ; preds = %for.end
  %dep_map.i = getelementptr inbounds %struct.raw_spinlock, ptr %rnp, i32 0, i32 4
  %call.i.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #24
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %for.cond.i.preheader, !prof !1645

do.end.i:                                         ; preds = %land.rhs.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 188, i32 noundef 9, ptr noundef null) #24
  br label %for.cond.i.preheader

for.cond.i.preheader:                             ; preds = %do.end.i, %land.rhs.i, %for.end
  br label %for.cond.i

for.cond.i:                                       ; preds = %if.end490.i, %for.cond.i.preheader
  %rnp.addr.0.i = phi ptr [ %192, %if.end490.i ], [ %rnp, %for.cond.i.preheader ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %49 = load i32, ptr @debug_locks, align 4
  %tobool.not.i.i = icmp eq i32 %49, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %for.cond.i
  %dep_map.i.i = getelementptr inbounds %struct.raw_spinlock, ptr %rnp.addr.0.i, i32 0, i32 4
  %call.i.i.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i.i, i32 noundef -1) #24
  %cmp.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp.not.i.i, label %do.end.i.i, label %if.end.i.i, !prof !1645

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 152, i32 noundef 9, ptr noundef null) #24
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %do.end.i.i, %land.rhs.i.i, %for.cond.i
  %exp_tasks.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.addr.0.i, i32 0, i32 23
  %50 = ptrtoint ptr %exp_tasks.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile ptr, ptr %exp_tasks.i.i, align 128
  %cmp28.i.i = icmp eq ptr %51, null
  br i1 %cmp28.i.i, label %sync_rcu_exp_done.exit.i, label %if.then25.i

sync_rcu_exp_done.exit.i:                         ; preds = %if.end.i.i
  %expmask.i.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.addr.0.i, i32 0, i32 9
  %52 = ptrtoint ptr %expmask.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %expmask.i.i, align 4
  %cmp34.i.i = icmp eq i32 %53, 0
  br i1 %cmp34.i.i, label %if.end152.i, label %if.then25.i

if.then25.i:                                      ; preds = %sync_rcu_exp_done.exit.i, %if.end.i.i
  %expmask.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.addr.0.i, i32 0, i32 9
  %54 = ptrtoint ptr %expmask.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %expmask.i, align 4
  %tobool26.not.i = icmp eq i32 %55, 0
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %56 = load i32, ptr @debug_locks, align 4
  %tobool.not.i583.i = icmp eq i32 %56, 0
  br i1 %tobool26.not.i, label %if.then27.i, label %do.body29.i

if.then27.i:                                      ; preds = %if.then25.i
  br i1 %tobool.not.i583.i, label %rcu_initiate_boost.exit.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %if.then27.i
  %57 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i.i = and i32 %57, -16384
  %58 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %58, i32 0, i32 1
  %59 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %60, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2131
  %61 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i249 = and i32 %61, -16384
  %62 = inttoptr i32 %and.i.i.i249 to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %62, i32 0, i32 3
  %63 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %64
  %65 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %arrayidx.i.i, align 4
  %add.i584.i = add i32 %66, ptrtoint (ptr @lockdep_recursion to i32)
  %67 = inttoptr i32 %add.i584.i to ptr
  %68 = ptrtoint ptr %67 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile i32, ptr %67, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2132
  %70 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i109.i.i = and i32 %70, -16384
  %71 = inttoptr i32 %and.i.i.i109.i.i to ptr
  %preempt_count.i.i110.i.i = getelementptr inbounds %struct.thread_info, ptr %71, i32 0, i32 1
  %72 = ptrtoint ptr %preempt_count.i.i110.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %preempt_count.i.i110.i.i, align 4
  %sub.i.i.i = add i32 %73, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i110.i.i, align 4
  %tobool21.not.i.i = icmp eq i32 %69, 0
  br i1 %tobool21.not.i.i, label %land.rhs.i585.i, label %rcu_initiate_boost.exit.i

land.rhs.i585.i:                                  ; preds = %land.lhs.true.i.i
  %74 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i111.i.i = and i32 %74, -16384
  %75 = inttoptr i32 %and.i.i.i111.i.i to ptr
  %preempt_count.i.i112.i.i = getelementptr inbounds %struct.thread_info, ptr %75, i32 0, i32 1
  %76 = ptrtoint ptr %preempt_count.i.i112.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %preempt_count.i.i112.i.i, align 4
  %add.i113.i.i = add i32 %77, 1
  store volatile i32 %add.i113.i.i, ptr %preempt_count.i.i112.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2133
  %78 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %cpu.i.i, align 4
  %arrayidx45.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %79
  %80 = ptrtoint ptr %arrayidx45.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %arrayidx45.i.i, align 4
  %add46.i.i = add i32 %81, ptrtoint (ptr @hardirqs_enabled to i32)
  %82 = inttoptr i32 %add46.i.i to ptr
  %83 = ptrtoint ptr %82 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load volatile i32, ptr %82, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2134
  %85 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i114.i.i = and i32 %85, -16384
  %86 = inttoptr i32 %and.i.i.i114.i.i to ptr
  %preempt_count.i.i115.i.i = getelementptr inbounds %struct.thread_info, ptr %86, i32 0, i32 1
  %87 = ptrtoint ptr %preempt_count.i.i115.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load volatile i32, ptr %preempt_count.i.i115.i.i, align 4
  %sub.i116.i.i = add i32 %88, -1
  store volatile i32 %sub.i116.i.i, ptr %preempt_count.i.i115.i.i, align 4
  %tobool53.not.i.i = icmp eq i32 %84, 0
  br i1 %tobool53.not.i.i, label %rcu_initiate_boost.exit.i, label %land.rhs56.i.i

land.rhs56.i.i:                                   ; preds = %land.rhs.i585.i
  %.b105.i.i = load i1, ptr @rcu_initiate_boost.__already_done, align 1
  br i1 %.b105.i.i, label %rcu_initiate_boost.exit.i, label %if.then.i.i, !prof !1646

if.then.i.i:                                      ; preds = %land.rhs56.i.i
  store i1 true, ptr @rcu_initiate_boost.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.280, i32 noundef 1241, i32 noundef 9, ptr noundef null) #24
  br label %rcu_initiate_boost.exit.i

rcu_initiate_boost.exit.i:                        ; preds = %if.then.i.i, %land.rhs56.i.i, %land.rhs.i585.i, %land.lhs.true.i.i, %if.then27.i
  call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp.addr.0.i, i32 noundef %call) #24
  br label %cleanup

do.body29.i:                                      ; preds = %if.then25.i
  br i1 %tobool.not.i583.i, label %if.end133.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.body29.i
  %89 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %89, -16384
  %90 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %90, i32 0, i32 1
  %91 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %92, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2135
  %93 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %93, -16384
  %94 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %94, i32 0, i32 3
  %95 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %96
  %97 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %arrayidx.i, align 4
  %add.i250 = add i32 %98, ptrtoint (ptr @lockdep_recursion to i32)
  %99 = inttoptr i32 %add.i250 to ptr
  %100 = ptrtoint ptr %99 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load volatile i32, ptr %99, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2136
  %102 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i551.i = and i32 %102, -16384
  %103 = inttoptr i32 %and.i.i.i551.i to ptr
  %preempt_count.i.i552.i = getelementptr inbounds %struct.thread_info, ptr %103, i32 0, i32 1
  %104 = ptrtoint ptr %preempt_count.i.i552.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load volatile i32, ptr %preempt_count.i.i552.i, align 4
  %sub.i.i = add i32 %105, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i552.i, align 4
  %tobool54.not.i = icmp eq i32 %101, 0
  br i1 %tobool54.not.i, label %land.rhs55.i, label %if.end133.i

land.rhs55.i:                                     ; preds = %land.lhs.true.i
  %106 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i553.i = and i32 %106, -16384
  %107 = inttoptr i32 %and.i.i.i553.i to ptr
  %preempt_count.i.i554.i = getelementptr inbounds %struct.thread_info, ptr %107, i32 0, i32 1
  %108 = ptrtoint ptr %preempt_count.i.i554.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load volatile i32, ptr %preempt_count.i.i554.i, align 4
  %add.i555.i = add i32 %109, 1
  store volatile i32 %add.i555.i, ptr %preempt_count.i.i554.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2137
  %110 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %cpu.i, align 4
  %arrayidx79.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %111
  %112 = ptrtoint ptr %arrayidx79.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %arrayidx79.i, align 4
  %add80.i = add i32 %113, ptrtoint (ptr @hardirqs_enabled to i32)
  %114 = inttoptr i32 %add80.i to ptr
  %115 = ptrtoint ptr %114 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load volatile i32, ptr %114, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2138
  %117 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i556.i = and i32 %117, -16384
  %118 = inttoptr i32 %and.i.i.i556.i to ptr
  %preempt_count.i.i557.i = getelementptr inbounds %struct.thread_info, ptr %118, i32 0, i32 1
  %119 = ptrtoint ptr %preempt_count.i.i557.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load volatile i32, ptr %preempt_count.i.i557.i, align 4
  %sub.i558.i = add i32 %120, -1
  store volatile i32 %sub.i558.i, ptr %preempt_count.i.i557.i, align 4
  %tobool87.not.i = icmp eq i32 %116, 0
  br i1 %tobool87.not.i, label %if.end133.i, label %land.rhs95.i

land.rhs95.i:                                     ; preds = %land.rhs55.i
  %.b538.i = load i1, ptr @__rcu_report_exp_rnp.__already_done, align 1
  br i1 %.b538.i, label %if.end133.i, label %if.then106.i, !prof !1646

if.then106.i:                                     ; preds = %land.rhs95.i
  store i1 true, ptr @__rcu_report_exp_rnp.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 194, i32 noundef 9, ptr noundef null) #24
  br label %if.end133.i

if.end133.i:                                      ; preds = %if.then106.i, %land.rhs95.i, %land.rhs55.i, %land.lhs.true.i, %do.body29.i
  call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp.addr.0.i, i32 noundef %call) #24
  br label %cleanup

if.end152.i:                                      ; preds = %sync_rcu_exp_done.exit.i
  %parent.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.addr.0.i, i32 0, i32 20
  %121 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %parent.i, align 16
  %cmp153.i = icmp eq ptr %122, null
  br i1 %cmp153.i, label %do.body157.i, label %if.end302.i

do.body157.i:                                     ; preds = %if.end152.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %123 = load i32, ptr @debug_locks, align 4
  %tobool159.not.i = icmp eq i32 %123, 0
  br i1 %tobool159.not.i, label %if.end272.i, label %land.lhs.true160.i

land.lhs.true160.i:                               ; preds = %do.body157.i
  %124 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i559.i = and i32 %124, -16384
  %125 = inttoptr i32 %and.i.i.i559.i to ptr
  %preempt_count.i.i560.i = getelementptr inbounds %struct.thread_info, ptr %125, i32 0, i32 1
  %126 = ptrtoint ptr %preempt_count.i.i560.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load volatile i32, ptr %preempt_count.i.i560.i, align 4
  %add.i561.i = add i32 %127, 1
  store volatile i32 %add.i561.i, ptr %preempt_count.i.i560.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2139
  %128 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i586.i = and i32 %128, -16384
  %129 = inttoptr i32 %and.i586.i to ptr
  %cpu183.i = getelementptr inbounds %struct.thread_info, ptr %129, i32 0, i32 3
  %130 = ptrtoint ptr %cpu183.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %cpu183.i, align 4
  %arrayidx184.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %131
  %132 = ptrtoint ptr %arrayidx184.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %arrayidx184.i, align 4
  %add185.i = add i32 %133, ptrtoint (ptr @lockdep_recursion to i32)
  %134 = inttoptr i32 %add185.i to ptr
  %135 = ptrtoint ptr %134 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load volatile i32, ptr %134, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2140
  %137 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i562.i = and i32 %137, -16384
  %138 = inttoptr i32 %and.i.i.i562.i to ptr
  %preempt_count.i.i563.i = getelementptr inbounds %struct.thread_info, ptr %138, i32 0, i32 1
  %139 = ptrtoint ptr %preempt_count.i.i563.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load volatile i32, ptr %preempt_count.i.i563.i, align 4
  %sub.i564.i = add i32 %140, -1
  store volatile i32 %sub.i564.i, ptr %preempt_count.i.i563.i, align 4
  %tobool192.not.i = icmp eq i32 %136, 0
  br i1 %tobool192.not.i, label %land.rhs193.i, label %if.end272.i

land.rhs193.i:                                    ; preds = %land.lhs.true160.i
  %141 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i565.i = and i32 %141, -16384
  %142 = inttoptr i32 %and.i.i.i565.i to ptr
  %preempt_count.i.i566.i = getelementptr inbounds %struct.thread_info, ptr %142, i32 0, i32 1
  %143 = ptrtoint ptr %preempt_count.i.i566.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load volatile i32, ptr %preempt_count.i.i566.i, align 4
  %add.i567.i = add i32 %144, 1
  store volatile i32 %add.i567.i, ptr %preempt_count.i.i566.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2141
  %145 = ptrtoint ptr %cpu183.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %cpu183.i, align 4
  %arrayidx217.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %146
  %147 = ptrtoint ptr %arrayidx217.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %arrayidx217.i, align 4
  %add218.i = add i32 %148, ptrtoint (ptr @hardirqs_enabled to i32)
  %149 = inttoptr i32 %add218.i to ptr
  %150 = ptrtoint ptr %149 to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load volatile i32, ptr %149, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2142
  %152 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i568.i = and i32 %152, -16384
  %153 = inttoptr i32 %and.i.i.i568.i to ptr
  %preempt_count.i.i569.i = getelementptr inbounds %struct.thread_info, ptr %153, i32 0, i32 1
  %154 = ptrtoint ptr %preempt_count.i.i569.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load volatile i32, ptr %preempt_count.i.i569.i, align 4
  %sub.i570.i = add i32 %155, -1
  store volatile i32 %sub.i570.i, ptr %preempt_count.i.i569.i, align 4
  %tobool225.not.i = icmp eq i32 %151, 0
  br i1 %tobool225.not.i, label %if.end272.i, label %land.rhs234.i

land.rhs234.i:                                    ; preds = %land.rhs193.i
  %.b535541.i = load i1, ptr @__rcu_report_exp_rnp.__already_done.423, align 1
  br i1 %.b535541.i, label %if.end272.i, label %if.then245.i, !prof !1646

if.then245.i:                                     ; preds = %land.rhs234.i
  store i1 true, ptr @__rcu_report_exp_rnp.__already_done.423, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 198, i32 noundef 9, ptr noundef null) #24
  br label %if.end272.i

if.end272.i:                                      ; preds = %if.then245.i, %land.rhs234.i, %land.rhs193.i, %land.lhs.true160.i, %do.body157.i
  call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp.addr.0.i, i32 noundef %call) #24
  br i1 %wake, label %do.end298.i, label %cleanup

do.end298.i:                                      ; preds = %if.end272.i
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2143
  call void @swake_up_one(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 22)) #24
  br label %cleanup

if.end302.i:                                      ; preds = %if.end152.i
  %grpmask.i = getelementptr inbounds %struct.rcu_node, ptr %rnp.addr.0.i, i32 0, i32 14
  %156 = ptrtoint ptr %grpmask.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %grpmask.i, align 32
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %158 = load i32, ptr @debug_locks, align 4
  %tobool306.not.i = icmp eq i32 %158, 0
  br i1 %tobool306.not.i, label %if.end419.i, label %land.lhs.true307.i

land.lhs.true307.i:                               ; preds = %if.end302.i
  %159 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i571.i = and i32 %159, -16384
  %160 = inttoptr i32 %and.i.i.i571.i to ptr
  %preempt_count.i.i572.i = getelementptr inbounds %struct.thread_info, ptr %160, i32 0, i32 1
  %161 = ptrtoint ptr %preempt_count.i.i572.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load volatile i32, ptr %preempt_count.i.i572.i, align 4
  %add.i573.i = add i32 %162, 1
  store volatile i32 %add.i573.i, ptr %preempt_count.i.i572.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2144
  %163 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i587.i = and i32 %163, -16384
  %164 = inttoptr i32 %and.i587.i to ptr
  %cpu330.i = getelementptr inbounds %struct.thread_info, ptr %164, i32 0, i32 3
  %165 = ptrtoint ptr %cpu330.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load i32, ptr %cpu330.i, align 4
  %arrayidx331.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %166
  %167 = ptrtoint ptr %arrayidx331.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load i32, ptr %arrayidx331.i, align 4
  %add332.i = add i32 %168, ptrtoint (ptr @lockdep_recursion to i32)
  %169 = inttoptr i32 %add332.i to ptr
  %170 = ptrtoint ptr %169 to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load volatile i32, ptr %169, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2145
  %172 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i574.i = and i32 %172, -16384
  %173 = inttoptr i32 %and.i.i.i574.i to ptr
  %preempt_count.i.i575.i = getelementptr inbounds %struct.thread_info, ptr %173, i32 0, i32 1
  %174 = ptrtoint ptr %preempt_count.i.i575.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load volatile i32, ptr %preempt_count.i.i575.i, align 4
  %sub.i576.i = add i32 %175, -1
  store volatile i32 %sub.i576.i, ptr %preempt_count.i.i575.i, align 4
  %tobool339.not.i = icmp eq i32 %171, 0
  br i1 %tobool339.not.i, label %land.rhs340.i, label %if.end419.i

land.rhs340.i:                                    ; preds = %land.lhs.true307.i
  %176 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i577.i = and i32 %176, -16384
  %177 = inttoptr i32 %and.i.i.i577.i to ptr
  %preempt_count.i.i578.i = getelementptr inbounds %struct.thread_info, ptr %177, i32 0, i32 1
  %178 = ptrtoint ptr %preempt_count.i.i578.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load volatile i32, ptr %preempt_count.i.i578.i, align 4
  %add.i579.i = add i32 %179, 1
  store volatile i32 %add.i579.i, ptr %preempt_count.i.i578.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2146
  %180 = ptrtoint ptr %cpu330.i to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load i32, ptr %cpu330.i, align 4
  %arrayidx364.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %181
  %182 = ptrtoint ptr %arrayidx364.i to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %arrayidx364.i, align 4
  %add365.i = add i32 %183, ptrtoint (ptr @hardirqs_enabled to i32)
  %184 = inttoptr i32 %add365.i to ptr
  %185 = ptrtoint ptr %184 to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load volatile i32, ptr %184, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2147
  %187 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i580.i = and i32 %187, -16384
  %188 = inttoptr i32 %and.i.i.i580.i to ptr
  %preempt_count.i.i581.i = getelementptr inbounds %struct.thread_info, ptr %188, i32 0, i32 1
  %189 = ptrtoint ptr %preempt_count.i.i581.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load volatile i32, ptr %preempt_count.i.i581.i, align 4
  %sub.i582.i = add i32 %190, -1
  store volatile i32 %sub.i582.i, ptr %preempt_count.i.i581.i, align 4
  %tobool372.not.i = icmp eq i32 %186, 0
  br i1 %tobool372.not.i, label %if.end419.i, label %land.rhs381.i

land.rhs381.i:                                    ; preds = %land.rhs340.i
  %.b536540.i = load i1, ptr @__rcu_report_exp_rnp.__already_done.424, align 1
  br i1 %.b536540.i, label %if.end419.i, label %if.then392.i, !prof !1646

if.then392.i:                                     ; preds = %land.rhs381.i
  store i1 true, ptr @__rcu_report_exp_rnp.__already_done.424, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 206, i32 noundef 9, ptr noundef null) #24
  br label %if.end419.i

if.end419.i:                                      ; preds = %if.then392.i, %land.rhs381.i, %land.rhs340.i, %land.lhs.true307.i, %if.end302.i
  call void @_raw_spin_unlock(ptr noundef %rnp.addr.0.i) #24
  %191 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %parent.i, align 16
  call void @_raw_spin_lock(ptr noundef %192) #24
  %expmask441.i = getelementptr inbounds %struct.rcu_node, ptr %192, i32 0, i32 9
  %193 = ptrtoint ptr %expmask441.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %expmask441.i, align 4
  %and.i251 = and i32 %194, %157
  %tobool442.not.i = icmp eq i32 %and.i251, 0
  br i1 %tobool442.not.i, label %land.rhs452.i, label %if.end490.i

land.rhs452.i:                                    ; preds = %if.end419.i
  %.b537539.i = load i1, ptr @__rcu_report_exp_rnp.__already_done.425, align 1
  br i1 %.b537539.i, label %if.end490.i, label %if.then463.i, !prof !1646

if.then463.i:                                     ; preds = %land.rhs452.i
  store i1 true, ptr @__rcu_report_exp_rnp.__already_done.425, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 209, i32 noundef 9, ptr noundef null) #24
  br label %if.end490.i

if.end490.i:                                      ; preds = %if.then463.i, %land.rhs452.i, %if.end419.i
  %195 = ptrtoint ptr %expmask441.i to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load i32, ptr %expmask441.i, align 4
  %neg.i = xor i32 %157, -1
  %and504.i = and i32 %196, %neg.i
  store volatile i32 %and504.i, ptr %expmask441.i, align 4
  br label %for.cond.i

cleanup:                                          ; preds = %do.end298.i, %if.end272.i, %if.end133.i, %rcu_initiate_boost.exit.i, %if.end103
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_exp_handler(ptr nocapture noundef readnone %unused) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr @rcu_data to i32)
  %6 = inttoptr i32 %add to ptr
  %mynode = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 7
  %7 = ptrtoint ptr %mynode to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %mynode, align 16
  %expmask = getelementptr inbounds %struct.rcu_node, ptr %8, i32 0, i32 9
  %9 = ptrtoint ptr %expmask to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %expmask, align 4
  %grpmask = getelementptr inbounds %struct.rcu_data, ptr %6, i32 0, i32 8
  %11 = ptrtoint ptr %grpmask to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %grpmask, align 4
  %and = and i32 %12, %10
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %add22 = add i32 %5, ptrtoint (ptr getelementptr inbounds (%struct.anon, ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 2), i32 0, i32 1) to i32)
  %13 = inttoptr i32 %add22 to ptr
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %13, align 1
  %tobool24.not = icmp eq i8 %15, 0
  br i1 %tobool24.not, label %if.end, label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %call25 = tail call fastcc i32 @rcu_is_cpu_rrupt_from_idle()
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %if.end39, label %do.body28

do.body28:                                        ; preds = %if.end
  %16 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %cpu, align 4
  %arrayidx37 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %17
  %18 = ptrtoint ptr %arrayidx37 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx37, align 4
  %add38 = add i32 %19, ptrtoint (ptr @rcu_data to i32)
  %20 = inttoptr i32 %add38 to ptr
  %cpu_no_qs.i = getelementptr inbounds %struct.rcu_data, ptr %20, i32 0, i32 2
  %exp.i = getelementptr inbounds %struct.anon, ptr %cpu_no_qs.i, i32 0, i32 1
  %21 = ptrtoint ptr %exp.i to i32
  call void @__asan_store1_noabort(i32 %21)
  store volatile i8 0, ptr %exp.i, align 1
  %mynode.i = getelementptr inbounds %struct.rcu_data, ptr %20, i32 0, i32 7
  %22 = ptrtoint ptr %mynode.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %mynode.i, align 16
  %grpmask.i = getelementptr inbounds %struct.rcu_data, ptr %20, i32 0, i32 8
  %24 = ptrtoint ptr %grpmask.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %grpmask.i, align 4
  tail call fastcc void @rcu_report_exp_cpu_mult(ptr noundef %23, i32 noundef %25, i1 noundef zeroext true) #24
  br label %cleanup

if.end39:                                         ; preds = %if.end
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 3
  %28 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %29
  %30 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %31, ptrtoint (ptr getelementptr inbounds (%struct.anon, ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 2), i32 0, i32 1) to i32)
  %32 = inttoptr i32 %add.i to ptr
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 1, ptr %32, align 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1826
  %34 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %cpu.i, align 4
  %arrayidx27.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %35
  %36 = ptrtoint ptr %arrayidx27.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %arrayidx27.i, align 4
  %add28.i = add i32 %37, ptrtoint (ptr getelementptr inbounds (%struct.rcu_data, ptr @rcu_data, i32 0, i32 23) to i32)
  %38 = inttoptr i32 %add28.i to ptr
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_store1_noabort(i32 %39)
  store volatile i8 1, ptr %38, align 1
  %task.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 2
  %40 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %task.i, align 8
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %41, i32 0, i32 1
  %42 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %stack.i.i.i, align 4
  tail call void @_set_bit(i32 noundef 1, ptr noundef %43) #24
  br label %cleanup

cleanup:                                          ; preds = %if.end39, %do.body28, %lor.lhs.false, %entry
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rcu_exp_grace_period(ptr noundef %rcuname, i32 noundef %gpseq, ptr noundef %gpevent) unnamed_addr #7 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_exp_grace_period, i32 0, i32 1), ptr blockaddress(@trace_rcu_exp_grace_period, %do.body)) #24
          to label %if.end48 [label %do.body], !srcloc !1665

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2148
  %call42 = tail call i32 @__traceiter_rcu_exp_grace_period(ptr noundef null, ptr noundef %rcuname, i32 noundef %gpseq, ptr noundef %gpevent) #24
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2149
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !1646

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1668
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_exp_grace_period, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_exp_grace_period, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #24
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rcu_exp_grace_period.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_rcu_exp_grace_period.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.128, i32 noundef 212, ptr noundef nonnull @.str.129) #24
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1669
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rcu_exp_grace_period(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mutex_trylock(ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rcu_exp_funnel_lock(ptr noundef %rcuname, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, ptr noundef %gpevent) unnamed_addr #7 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_exp_funnel_lock, i32 0, i32 1), ptr blockaddress(@trace_rcu_exp_funnel_lock, %do.body)) #24
          to label %if.end48 [label %do.body], !srcloc !1665

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !1646

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %cleanup.thread

cleanup.thread:                                   ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2150
  %call42 = tail call i32 @__traceiter_rcu_exp_funnel_lock(ptr noundef null, ptr noundef %rcuname, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, ptr noundef %gpevent) #24
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2151
  %13 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !1646

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.470, i32 noundef 108, i32 noundef 9, ptr noundef null) #24
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1668
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_exp_funnel_lock, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_rcu_exp_funnel_lock, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #24
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #24
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rcu_exp_funnel_lock.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_rcu_exp_funnel_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.128, i32 noundef 250, ptr noundef nonnull @.str.129) #24
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !1669
  %31 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_rcu_exp_funnel_lock(ptr noundef, ptr noundef, i8 noundef zeroext, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @sync_rcu_exp_select_node_cpus(ptr noundef %wp) #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %mask_ofl_ipi = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %mask_ofl_ipi) #24
  %add.ptr3 = getelementptr i8, ptr %wp, i32 -772
  %call = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %add.ptr3) #24
  %level = getelementptr i8, ptr %wp, i32 -663
  %0 = ptrtoint ptr %level to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %level, align 1
  %conv11 = zext i8 %1 to i32
  %2 = load i32, ptr @rcu_num_lvls, align 4
  %sub = add i32 %2, -1
  %cmp12.not = icmp eq i32 %sub, %conv11
  br i1 %cmp12.not, label %if.end46, label %land.rhs

land.rhs:                                         ; preds = %entry
  %.b729 = load i1, ptr @sync_rcu_exp_select_node_cpus.__already_done, align 1
  br i1 %.b729, label %if.end46, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @sync_rcu_exp_select_node_cpus.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 352, i32 noundef 9, ptr noundef null) #24
  br label %if.end46

if.end46:                                         ; preds = %if.then, %land.rhs, %entry
  %grplo = getelementptr i8, ptr %wp, i32 -672
  %3 = ptrtoint ptr %grplo to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %grplo, align 4
  %expmask = getelementptr i8, ptr %wp, i32 -696
  %call54 = tail call i32 @_find_next_bit_be(ptr noundef %expmask, i32 noundef 32, i32 noundef 0) #24
  %add = add i32 %call54, %4
  %grphi = getelementptr i8, ptr %wp, i32 -668
  %5 = ptrtoint ptr %grphi to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %grphi, align 8
  %cmp55.not786 = icmp sgt i32 %add, %6
  br i1 %cmp55.not786, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end46
  %qsmaskinitnext = getelementptr i8, ptr %wp, i32 -704
  br label %for.body

for.body:                                         ; preds = %if.end75, %for.body.lr.ph
  %cpu.0789 = phi i32 [ %add, %for.body.lr.ph ], [ %add82, %if.end75 ]
  %mask_ofl_test.0787 = phi i32 [ 0, %for.body.lr.ph ], [ %mask_ofl_test.1, %if.end75 ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu.0789
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx, align 4
  %add62 = add i32 %8, ptrtoint (ptr @rcu_data to i32)
  %9 = inttoptr i32 %add62 to ptr
  %grpmask = getelementptr inbounds %struct.rcu_data, ptr %9, i32 0, i32 8
  %10 = ptrtoint ptr %grpmask to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %grpmask, align 4
  %12 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i to ptr
  %cpu64 = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %cpu64 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %cpu64, align 4
  %cmp65 = icmp eq i32 %15, %cpu.0789
  br i1 %cmp65, label %if.then68, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %16 = ptrtoint ptr %qsmaskinitnext to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %qsmaskinitnext, align 4
  %and = and i32 %17, %11
  %tobool67.not = icmp eq i32 %and, 0
  br i1 %tobool67.not, label %if.then68, label %if.else

if.then68:                                        ; preds = %lor.lhs.false, %for.body
  %or = or i32 %11, %mask_ofl_test.0787
  br label %if.end75

if.else:                                          ; preds = %lor.lhs.false
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1650
  %dynticks.i = getelementptr inbounds %struct.rcu_data, ptr %9, i32 0, i32 21
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dynticks.i, i32 noundef 4) #24
  %18 = ptrtoint ptr %dynticks.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %dynticks.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1651
  %and.i780 = and i32 %19, 1
  %tobool.not.i = icmp eq i32 %and.i780, 0
  br i1 %tobool.not.i, label %if.then71, label %if.else73

if.then71:                                        ; preds = %if.else
  %or72 = or i32 %11, %mask_ofl_test.0787
  br label %if.end75

if.else73:                                        ; preds = %if.else
  %exp_dynticks_snap = getelementptr inbounds %struct.rcu_data, ptr %9, i32 0, i32 27
  %20 = ptrtoint ptr %exp_dynticks_snap to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %exp_dynticks_snap, align 4
  br label %if.end75

if.end75:                                         ; preds = %if.else73, %if.then71, %if.then68
  %mask_ofl_test.1 = phi i32 [ %or, %if.then68 ], [ %or72, %if.then71 ], [ %mask_ofl_test.0787, %if.else73 ]
  %21 = ptrtoint ptr %grplo to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %grplo, align 4
  %add78 = add i32 %cpu.0789, 1
  %sub80 = sub i32 %add78, %22
  %call81 = tail call i32 @_find_next_bit_be(ptr noundef %expmask, i32 noundef 32, i32 noundef %sub80) #24
  %add82 = add i32 %call81, %22
  %23 = ptrtoint ptr %grphi to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %grphi, align 8
  %cmp55.not = icmp sgt i32 %add82, %24
  br i1 %cmp55.not, label %for.end, label %for.body

for.end:                                          ; preds = %if.end75, %if.end46
  %mask_ofl_test.0.lcssa = phi i32 [ 0, %if.end46 ], [ %mask_ofl_test.1, %if.end75 ]
  %25 = ptrtoint ptr %expmask to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %expmask, align 4
  %neg = xor i32 %mask_ofl_test.0.lcssa, -1
  %and84 = and i32 %26, %neg
  %27 = ptrtoint ptr %mask_ofl_ipi to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %and84, ptr %mask_ofl_ipi, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %28 = load i32, ptr @debug_locks, align 4
  %tobool100.not = icmp eq i32 %28, 0
  br i1 %tobool100.not, label %if.end209, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.end
  %29 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %32, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2152
  %33 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i781 = and i32 %33, -16384
  %34 = inttoptr i32 %and.i781 to ptr
  %cpu120 = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 3
  %35 = ptrtoint ptr %cpu120 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cpu120, align 4
  %arrayidx121 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %36
  %37 = ptrtoint ptr %arrayidx121 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx121, align 4
  %add122 = add i32 %38, ptrtoint (ptr @lockdep_recursion to i32)
  %39 = inttoptr i32 %add122 to ptr
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %39, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2153
  %42 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i739 = and i32 %42, -16384
  %43 = inttoptr i32 %and.i.i.i739 to ptr
  %preempt_count.i.i740 = getelementptr inbounds %struct.thread_info, ptr %43, i32 0, i32 1
  %44 = ptrtoint ptr %preempt_count.i.i740 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %preempt_count.i.i740, align 4
  %sub.i = add i32 %45, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i740, align 4
  %tobool129.not = icmp eq i32 %41, 0
  br i1 %tobool129.not, label %land.rhs130, label %if.end209

land.rhs130:                                      ; preds = %land.lhs.true
  %46 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i741 = and i32 %46, -16384
  %47 = inttoptr i32 %and.i.i.i741 to ptr
  %preempt_count.i.i742 = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 1
  %48 = ptrtoint ptr %preempt_count.i.i742 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %preempt_count.i.i742, align 4
  %add.i743 = add i32 %49, 1
  store volatile i32 %add.i743, ptr %preempt_count.i.i742, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2154
  %50 = ptrtoint ptr %cpu120 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %cpu120, align 4
  %arrayidx154 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %51
  %52 = ptrtoint ptr %arrayidx154 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %arrayidx154, align 4
  %add155 = add i32 %53, ptrtoint (ptr @hardirqs_enabled to i32)
  %54 = inttoptr i32 %add155 to ptr
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %54, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2155
  %57 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i744 = and i32 %57, -16384
  %58 = inttoptr i32 %and.i.i.i744 to ptr
  %preempt_count.i.i745 = getelementptr inbounds %struct.thread_info, ptr %58, i32 0, i32 1
  %59 = ptrtoint ptr %preempt_count.i.i745 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %preempt_count.i.i745, align 4
  %sub.i746 = add i32 %60, -1
  store volatile i32 %sub.i746, ptr %preempt_count.i.i745, align 4
  %tobool162.not = icmp eq i32 %56, 0
  br i1 %tobool162.not, label %if.end209, label %land.rhs171

land.rhs171:                                      ; preds = %land.rhs130
  %.b721728 = load i1, ptr @sync_rcu_exp_select_node_cpus.__already_done.438, align 1
  br i1 %.b721728, label %if.end209, label %if.then182, !prof !1646

if.then182:                                       ; preds = %land.rhs171
  store i1 true, ptr @sync_rcu_exp_select_node_cpus.__already_done.438, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 377, i32 noundef 9, ptr noundef null) #24
  br label %if.end209

if.end209:                                        ; preds = %if.then182, %land.rhs171, %land.rhs130, %land.lhs.true, %for.end
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %add.ptr3, i32 noundef %call) #24
  %61 = ptrtoint ptr %level to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %level, align 1
  %conv232 = zext i8 %62 to i32
  %63 = load i32, ptr @rcu_num_lvls, align 4
  %sub233 = add i32 %63, -1
  %cmp234.not = icmp eq i32 %sub233, %conv232
  br i1 %cmp234.not, label %if.end283, label %land.rhs245

land.rhs245:                                      ; preds = %if.end209
  %.b722727 = load i1, ptr @sync_rcu_exp_select_node_cpus.__already_done.439, align 1
  br i1 %.b722727, label %if.end283, label %if.then256, !prof !1646

if.then256:                                       ; preds = %land.rhs245
  store i1 true, ptr @sync_rcu_exp_select_node_cpus.__already_done.439, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 380, i32 noundef 9, ptr noundef null) #24
  br label %if.end283

if.end283:                                        ; preds = %if.then256, %land.rhs245, %if.end209
  %64 = ptrtoint ptr %grplo to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %grplo, align 4
  %call292 = call i32 @_find_next_bit_be(ptr noundef nonnull %mask_ofl_ipi, i32 noundef 32, i32 noundef 0) #24
  %add293 = add i32 %call292, %65
  %66 = ptrtoint ptr %grphi to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %grphi, align 8
  %cmp296.not792 = icmp sgt i32 %add293, %67
  br i1 %cmp296.not792, label %for.end653, label %for.body298.lr.ph

for.body298.lr.ph:                                ; preds = %if.end283
  %qsmaskinitnext353 = getelementptr i8, ptr %wp, i32 -704
  br label %for.body298

for.body298:                                      ; preds = %cleanup, %for.body298.lr.ph
  %cpu.1796 = phi i32 [ %add293, %for.body298.lr.ph ], [ %add652, %cleanup ]
  %mask_ofl_test.2793 = phi i32 [ %mask_ofl_test.0.lcssa, %for.body298.lr.ph ], [ %mask_ofl_test.4, %cleanup ]
  %arrayidx307 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu.1796
  %68 = ptrtoint ptr %arrayidx307 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %arrayidx307, align 4
  %add308 = add i32 %69, ptrtoint (ptr @rcu_data to i32)
  %70 = inttoptr i32 %add308 to ptr
  %grpmask310 = getelementptr inbounds %struct.rcu_data, ptr %70, i32 0, i32 8
  %71 = ptrtoint ptr %grpmask310 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %grpmask310, align 4
  %exp_dynticks_snap311 = getelementptr inbounds %struct.rcu_data, ptr %70, i32 0, i32 27
  %73 = ptrtoint ptr %exp_dynticks_snap311 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %exp_dynticks_snap311, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1650
  %dynticks.i.i = getelementptr inbounds %struct.rcu_data, ptr %70, i32 0, i32 21
  %call.i.i.i.i790 = call zeroext i1 @__kasan_check_read(ptr noundef %dynticks.i.i, i32 noundef 4) #24
  %75 = ptrtoint ptr %dynticks.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load volatile i32, ptr %dynticks.i.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1651
  %cmp.i.not791 = icmp eq i32 %76, %74
  br i1 %cmp.i.not791, label %do.body316, label %if.then313

if.then313:                                       ; preds = %if.end477, %for.body298
  %or314 = or i32 %72, %mask_ofl_test.2793
  br label %cleanup

do.body316:                                       ; preds = %if.end477, %for.body298
  %77 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i747 = and i32 %77, -16384
  %78 = inttoptr i32 %and.i.i.i747 to ptr
  %preempt_count.i.i748 = getelementptr inbounds %struct.thread_info, ptr %78, i32 0, i32 1
  %79 = ptrtoint ptr %preempt_count.i.i748 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load volatile i32, ptr %preempt_count.i.i748, align 4
  %add.i749 = add i32 %80, 1
  store volatile i32 %add.i749, ptr %preempt_count.i.i748, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2156
  %81 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i782 = and i32 %81, -16384
  %82 = inttoptr i32 %and.i782 to ptr
  %cpu321 = getelementptr inbounds %struct.thread_info, ptr %82, i32 0, i32 3
  %83 = ptrtoint ptr %cpu321 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %cpu321, align 4
  %cmp322 = icmp eq i32 %84, %cpu.1796
  br i1 %cmp322, label %if.then324, label %if.end329

if.then324:                                       ; preds = %do.body316
  %or325 = or i32 %72, %mask_ofl_test.2793
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2157
  %85 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i750 = and i32 %85, -16384
  %86 = inttoptr i32 %and.i.i.i750 to ptr
  %preempt_count.i.i751 = getelementptr inbounds %struct.thread_info, ptr %86, i32 0, i32 1
  %87 = ptrtoint ptr %preempt_count.i.i751 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load volatile i32, ptr %preempt_count.i.i751, align 4
  %sub.i752 = add i32 %88, -1
  store volatile i32 %sub.i752, ptr %preempt_count.i.i751, align 4
  br label %cleanup

if.end329:                                        ; preds = %do.body316
  %call330 = call i32 @smp_call_function_single(i32 noundef %cpu.1796, ptr noundef nonnull @rcu_exp_handler, ptr noundef null, i32 noundef 0) #24
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2158
  %89 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i753 = and i32 %89, -16384
  %90 = inttoptr i32 %and.i.i.i753 to ptr
  %preempt_count.i.i754 = getelementptr inbounds %struct.thread_info, ptr %90, i32 0, i32 1
  %91 = ptrtoint ptr %preempt_count.i.i754 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load volatile i32, ptr %preempt_count.i.i754, align 4
  %sub.i755 = add i32 %92, -1
  store volatile i32 %sub.i755, ptr %preempt_count.i.i754, align 4
  %tobool334.not = icmp eq i32 %call330, 0
  br i1 %tobool334.not, label %cleanup, label %do.body338

do.body338:                                       ; preds = %if.end329
  %call345 = call i32 @_raw_spin_lock_irqsave(ptr noundef %add.ptr3) #24
  %93 = ptrtoint ptr %qsmaskinitnext353 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %qsmaskinitnext353, align 4
  %and354 = and i32 %94, %72
  %tobool355.not = icmp eq i32 %and354, 0
  br i1 %tobool355.not, label %if.end501, label %land.lhs.true356

land.lhs.true356:                                 ; preds = %do.body338
  %95 = ptrtoint ptr %expmask to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %expmask, align 4
  %and358 = and i32 %96, %72
  %tobool359.not = icmp eq i32 %and358, 0
  br i1 %tobool359.not, label %if.end501, label %do.body362

do.body362:                                       ; preds = %land.lhs.true356
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %97 = load i32, ptr @debug_locks, align 4
  %tobool364.not = icmp eq i32 %97, 0
  br i1 %tobool364.not, label %if.end477, label %land.lhs.true365

land.lhs.true365:                                 ; preds = %do.body362
  %98 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i756 = and i32 %98, -16384
  %99 = inttoptr i32 %and.i.i.i756 to ptr
  %preempt_count.i.i757 = getelementptr inbounds %struct.thread_info, ptr %99, i32 0, i32 1
  %100 = ptrtoint ptr %preempt_count.i.i757 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load volatile i32, ptr %preempt_count.i.i757, align 4
  %add.i758 = add i32 %101, 1
  store volatile i32 %add.i758, ptr %preempt_count.i.i757, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2159
  %102 = ptrtoint ptr %cpu321 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %cpu321, align 4
  %arrayidx389 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %103
  %104 = ptrtoint ptr %arrayidx389 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %arrayidx389, align 4
  %add390 = add i32 %105, ptrtoint (ptr @lockdep_recursion to i32)
  %106 = inttoptr i32 %add390 to ptr
  %107 = ptrtoint ptr %106 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load volatile i32, ptr %106, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2160
  %109 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i759 = and i32 %109, -16384
  %110 = inttoptr i32 %and.i.i.i759 to ptr
  %preempt_count.i.i760 = getelementptr inbounds %struct.thread_info, ptr %110, i32 0, i32 1
  %111 = ptrtoint ptr %preempt_count.i.i760 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load volatile i32, ptr %preempt_count.i.i760, align 4
  %sub.i761 = add i32 %112, -1
  store volatile i32 %sub.i761, ptr %preempt_count.i.i760, align 4
  %tobool397.not = icmp eq i32 %108, 0
  br i1 %tobool397.not, label %land.rhs398, label %if.end477

land.rhs398:                                      ; preds = %land.lhs.true365
  %113 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i762 = and i32 %113, -16384
  %114 = inttoptr i32 %and.i.i.i762 to ptr
  %preempt_count.i.i763 = getelementptr inbounds %struct.thread_info, ptr %114, i32 0, i32 1
  %115 = ptrtoint ptr %preempt_count.i.i763 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load volatile i32, ptr %preempt_count.i.i763, align 4
  %add.i764 = add i32 %116, 1
  store volatile i32 %add.i764, ptr %preempt_count.i.i763, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2161
  %117 = ptrtoint ptr %cpu321 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %cpu321, align 4
  %arrayidx422 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %118
  %119 = ptrtoint ptr %arrayidx422 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %arrayidx422, align 4
  %add423 = add i32 %120, ptrtoint (ptr @hardirqs_enabled to i32)
  %121 = inttoptr i32 %add423 to ptr
  %122 = ptrtoint ptr %121 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load volatile i32, ptr %121, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2162
  %124 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i765 = and i32 %124, -16384
  %125 = inttoptr i32 %and.i.i.i765 to ptr
  %preempt_count.i.i766 = getelementptr inbounds %struct.thread_info, ptr %125, i32 0, i32 1
  %126 = ptrtoint ptr %preempt_count.i.i766 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load volatile i32, ptr %preempt_count.i.i766, align 4
  %sub.i767 = add i32 %127, -1
  store volatile i32 %sub.i767, ptr %preempt_count.i.i766, align 4
  %tobool430.not = icmp eq i32 %123, 0
  br i1 %tobool430.not, label %if.end477, label %land.rhs439

land.rhs439:                                      ; preds = %land.rhs398
  %.b723726 = load i1, ptr @sync_rcu_exp_select_node_cpus.__already_done.440, align 1
  br i1 %.b723726, label %if.end477, label %if.then450, !prof !1646

if.then450:                                       ; preds = %land.rhs439
  store i1 true, ptr @sync_rcu_exp_select_node_cpus.__already_done.440, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 405, i32 noundef 9, ptr noundef null) #24
  br label %if.end477

if.end477:                                        ; preds = %if.then450, %land.rhs439, %land.rhs398, %land.lhs.true365, %do.body362
  call void @_raw_spin_unlock_irqrestore(ptr noundef %add.ptr3, i32 noundef %call345) #24
  %128 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %129 = load i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 20), align 4
  %or.i.i = or i32 %129, 3
  %add.i.i = add i32 %or.i.i, 1
  %130 = load ptr, ptr @sync_rcu_exp_select_node_cpus.___tp_str, align 4
  call fastcc void @trace_rcu_exp_grace_period(ptr noundef %128, i32 noundef %add.i.i, ptr noundef %130)
  %call500 = call i32 @schedule_timeout_idle(i32 noundef 1) #24
  %131 = ptrtoint ptr %exp_dynticks_snap311 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %exp_dynticks_snap311, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1650
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %dynticks.i.i, i32 noundef 4) #24
  %133 = ptrtoint ptr %dynticks.i.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load volatile i32, ptr %dynticks.i.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !1651
  %cmp.i.not = icmp eq i32 %134, %132
  br i1 %cmp.i.not, label %do.body316, label %if.then313

if.end501:                                        ; preds = %land.lhs.true356, %do.body338
  %135 = ptrtoint ptr %expmask to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %expmask, align 4
  %and503 = and i32 %136, %72
  %tobool504.not = icmp eq i32 %and503, 0
  %or506 = select i1 %tobool504.not, i32 0, i32 %72
  %spec.select = or i32 %or506, %mask_ofl_test.2793
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %137 = load i32, ptr @debug_locks, align 4
  %tobool511.not = icmp eq i32 %137, 0
  br i1 %tobool511.not, label %if.end624, label %land.lhs.true512

land.lhs.true512:                                 ; preds = %if.end501
  %138 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i768 = and i32 %138, -16384
  %139 = inttoptr i32 %and.i.i.i768 to ptr
  %preempt_count.i.i769 = getelementptr inbounds %struct.thread_info, ptr %139, i32 0, i32 1
  %140 = ptrtoint ptr %preempt_count.i.i769 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load volatile i32, ptr %preempt_count.i.i769, align 4
  %add.i770 = add i32 %141, 1
  store volatile i32 %add.i770, ptr %preempt_count.i.i769, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2163
  %142 = ptrtoint ptr %cpu321 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %cpu321, align 4
  %arrayidx536 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %143
  %144 = ptrtoint ptr %arrayidx536 to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %arrayidx536, align 4
  %add537 = add i32 %145, ptrtoint (ptr @lockdep_recursion to i32)
  %146 = inttoptr i32 %add537 to ptr
  %147 = ptrtoint ptr %146 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load volatile i32, ptr %146, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2164
  %149 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i771 = and i32 %149, -16384
  %150 = inttoptr i32 %and.i.i.i771 to ptr
  %preempt_count.i.i772 = getelementptr inbounds %struct.thread_info, ptr %150, i32 0, i32 1
  %151 = ptrtoint ptr %preempt_count.i.i772 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load volatile i32, ptr %preempt_count.i.i772, align 4
  %sub.i773 = add i32 %152, -1
  store volatile i32 %sub.i773, ptr %preempt_count.i.i772, align 4
  %tobool544.not = icmp eq i32 %148, 0
  br i1 %tobool544.not, label %land.rhs545, label %if.end624

land.rhs545:                                      ; preds = %land.lhs.true512
  %153 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i774 = and i32 %153, -16384
  %154 = inttoptr i32 %and.i.i.i774 to ptr
  %preempt_count.i.i775 = getelementptr inbounds %struct.thread_info, ptr %154, i32 0, i32 1
  %155 = ptrtoint ptr %preempt_count.i.i775 to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load volatile i32, ptr %preempt_count.i.i775, align 4
  %add.i776 = add i32 %156, 1
  store volatile i32 %add.i776, ptr %preempt_count.i.i775, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2165
  %157 = ptrtoint ptr %cpu321 to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load i32, ptr %cpu321, align 4
  %arrayidx569 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %158
  %159 = ptrtoint ptr %arrayidx569 to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load i32, ptr %arrayidx569, align 4
  %add570 = add i32 %160, ptrtoint (ptr @hardirqs_enabled to i32)
  %161 = inttoptr i32 %add570 to ptr
  %162 = ptrtoint ptr %161 to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load volatile i32, ptr %161, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2166
  %164 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i777 = and i32 %164, -16384
  %165 = inttoptr i32 %and.i.i.i777 to ptr
  %preempt_count.i.i778 = getelementptr inbounds %struct.thread_info, ptr %165, i32 0, i32 1
  %166 = ptrtoint ptr %preempt_count.i.i778 to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load volatile i32, ptr %preempt_count.i.i778, align 4
  %sub.i779 = add i32 %167, -1
  store volatile i32 %sub.i779, ptr %preempt_count.i.i778, align 4
  %tobool577.not = icmp eq i32 %163, 0
  br i1 %tobool577.not, label %if.end624, label %land.rhs586

land.rhs586:                                      ; preds = %land.rhs545
  %.b724725 = load i1, ptr @sync_rcu_exp_select_node_cpus.__already_done.442, align 1
  br i1 %.b724725, label %if.end624, label %if.then597, !prof !1646

if.then597:                                       ; preds = %land.rhs586
  store i1 true, ptr @sync_rcu_exp_select_node_cpus.__already_done.442, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 413, i32 noundef 9, ptr noundef null) #24
  br label %if.end624

if.end624:                                        ; preds = %if.then597, %land.rhs586, %land.rhs545, %land.lhs.true512, %if.end501
  call void @_raw_spin_unlock_irqrestore(ptr noundef %add.ptr3, i32 noundef %call345) #24
  br label %cleanup

cleanup:                                          ; preds = %if.end624, %if.end329, %if.then324, %if.then313
  %mask_ofl_test.4 = phi i32 [ %or314, %if.then313 ], [ %or325, %if.then324 ], [ %spec.select, %if.end624 ], [ %mask_ofl_test.2793, %if.end329 ]
  %168 = ptrtoint ptr %grplo to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %grplo, align 4
  %add648 = add i32 %cpu.1796, 1
  %sub650 = sub i32 %add648, %169
  %call651 = call i32 @_find_next_bit_be(ptr noundef nonnull %mask_ofl_ipi, i32 noundef 32, i32 noundef %sub650) #24
  %add652 = add i32 %call651, %169
  %170 = ptrtoint ptr %grphi to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %grphi, align 8
  %cmp296.not = icmp sgt i32 %add652, %171
  br i1 %cmp296.not, label %for.end653, label %for.body298

for.end653:                                       ; preds = %cleanup, %if.end283
  %mask_ofl_test.2.lcssa = phi i32 [ %mask_ofl_test.0.lcssa, %if.end283 ], [ %mask_ofl_test.4, %cleanup ]
  %tobool654.not = icmp eq i32 %mask_ofl_test.2.lcssa, 0
  br i1 %tobool654.not, label %if.end656, label %if.then655

if.then655:                                       ; preds = %for.end653
  call fastcc void @rcu_report_exp_cpu_mult(ptr noundef %add.ptr3, i32 noundef %mask_ofl_test.2.lcssa, i1 noundef zeroext false)
  br label %if.end656

if.end656:                                        ; preds = %if.then655, %for.end653
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %mask_ofl_ipi) #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @flush_work(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @sync_rcu_exp_done_unlocked(ptr noundef %rnp) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %rnp) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %if.end.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %entry
  %dep_map.i = getelementptr inbounds %struct.raw_spinlock, ptr %rnp, i32 0, i32 4
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #24
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %if.end.i, !prof !1645

do.end.i:                                         ; preds = %land.rhs.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 152, i32 noundef 9, ptr noundef null) #24
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i, %entry
  %exp_tasks.i = getelementptr inbounds %struct.rcu_node, ptr %rnp, i32 0, i32 23
  %1 = ptrtoint ptr %exp_tasks.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %exp_tasks.i, align 128
  %cmp28.i = icmp eq ptr %2, null
  br i1 %cmp28.i, label %do.end32.i, label %sync_rcu_exp_done.exit

do.end32.i:                                       ; preds = %if.end.i
  %expmask.i = getelementptr inbounds %struct.rcu_node, ptr %rnp, i32 0, i32 9
  %3 = ptrtoint ptr %expmask.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %expmask.i, align 4
  %cmp34.i = icmp eq i32 %4, 0
  br label %sync_rcu_exp_done.exit

sync_rcu_exp_done.exit:                           ; preds = %do.end32.i, %if.end.i
  %5 = phi i1 [ false, %if.end.i ], [ %cmp34.i, %do.end32.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %6 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %if.end101, label %land.lhs.true

land.lhs.true:                                    ; preds = %sync_rcu_exp_done.exit
  %7 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %10, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2167
  %11 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %14
  %15 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx, align 4
  %add = add i32 %16, ptrtoint (ptr @lockdep_recursion to i32)
  %17 = inttoptr i32 %add to ptr
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %17, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2168
  %20 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i131 = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i131 to ptr
  %preempt_count.i.i132 = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i132 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i132, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i132, align 4
  %tobool33.not = icmp eq i32 %19, 0
  br i1 %tobool33.not, label %land.rhs, label %if.end101

land.rhs:                                         ; preds = %land.lhs.true
  %24 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i133 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i133 to ptr
  %preempt_count.i.i134 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i134 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i134, align 4
  %add.i135 = add i32 %27, 1
  store volatile i32 %add.i135, ptr %preempt_count.i.i134, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2169
  %28 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %cpu, align 4
  %arrayidx57 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %29
  %30 = ptrtoint ptr %arrayidx57 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %arrayidx57, align 4
  %add58 = add i32 %31, ptrtoint (ptr @hardirqs_enabled to i32)
  %32 = inttoptr i32 %add58 to ptr
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %32, align 4
  tail call void asm sideeffect "", "~{memory}"() #24, !srcloc !2170
  %35 = tail call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i136 = and i32 %35, -16384
  %36 = inttoptr i32 %and.i.i.i136 to ptr
  %preempt_count.i.i137 = getelementptr inbounds %struct.thread_info, ptr %36, i32 0, i32 1
  %37 = ptrtoint ptr %preempt_count.i.i137 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %preempt_count.i.i137, align 4
  %sub.i138 = add i32 %38, -1
  store volatile i32 %sub.i138, ptr %preempt_count.i.i137, align 4
  %tobool65.not = icmp eq i32 %34, 0
  br i1 %tobool65.not, label %if.end101, label %land.rhs70

land.rhs70:                                       ; preds = %land.rhs
  %.b127 = load i1, ptr @sync_rcu_exp_done_unlocked.__already_done, align 1
  br i1 %.b127, label %if.end101, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs70
  store i1 true, ptr @sync_rcu_exp_done_unlocked.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.92, i32 noundef 168, i32 noundef 9, ptr noundef null) #24
  br label %if.end101

if.end101:                                        ; preds = %if.then, %land.rhs70, %land.rhs, %land.lhs.true, %sync_rcu_exp_done.exit
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rnp, i32 noundef %call) #24
  ret i1 %5
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @alloc_bootmem_cpumask_var(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bitmap_parselist(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @rcu_nocb_do_flush_bypass(ptr noundef %rdp, ptr noundef %rhp, i32 noundef %j) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %rcl = alloca %struct.rcu_cblist, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %rcl) #24
  %0 = ptrtoint ptr %rcl to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %rcl, align 4, !annotation !1767
  %1 = getelementptr inbounds %struct.rcu_cblist, ptr %rcl, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !1767
  %3 = getelementptr inbounds %struct.rcu_cblist, ptr %rcl, i32 0, i32 2
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %3, align 4, !annotation !1767
  %call = tail call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %rdp)
  br i1 %call, label %if.end28, label %land.rhs

land.rhs:                                         ; preds = %entry
  %.b109 = load i1, ptr @rcu_nocb_do_flush_bypass.__already_done, align 1
  br i1 %.b109, label %if.end28, label %if.then, !prof !1646

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @rcu_nocb_do_flush_bypass.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 314, i32 noundef 9, ptr noundef null) #24
  br label %if.end28

if.end28:                                         ; preds = %if.then, %land.rhs, %entry
  tail call fastcc void @rcu_lockdep_assert_cblist_protected(ptr noundef %rdp)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %5 = load i32, ptr @debug_locks, align 4
  %tobool38.not = icmp eq i32 %5, 0
  br i1 %tobool38.not, label %if.end65, label %land.rhs39

land.rhs39:                                       ; preds = %if.end28
  %dep_map = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 37, i32 4
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #24
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end59, label %if.end65, !prof !1645

do.end59:                                         ; preds = %land.rhs39
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 316, i32 noundef 9, ptr noundef null) #24
  br label %if.end65

if.end65:                                         ; preds = %do.end59, %land.rhs39, %if.end28
  %tobool75.not = icmp eq ptr %rhp, null
  br i1 %tobool75.not, label %if.end83, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end65
  %len.i = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 38, i32 2
  %6 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %len.i, align 4
  %tobool77.not = icmp eq i32 %7, 0
  br i1 %tobool77.not, label %if.then78, label %if.then82.critedge

if.then78:                                        ; preds = %land.lhs.true
  %nocb_bypass_lock79 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 37
  tail call void @_raw_spin_unlock(ptr noundef %nocb_bypass_lock79) #24
  br label %cleanup

if.then82.critedge:                               ; preds = %land.lhs.true
  %cblist = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 13
  tail call void @rcu_segcblist_inc_len(ptr noundef %cblist) #24
  br label %if.end83

if.end83:                                         ; preds = %if.then82.critedge, %if.end65
  %nocb_bypass84 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 38
  call void @rcu_cblist_flush_enqueue(ptr noundef nonnull %rcl, ptr noundef %nocb_bypass84, ptr noundef %rhp) #24
  %cblist85 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 13
  call void @rcu_segcblist_insert_pend_cbs(ptr noundef %cblist85, ptr noundef nonnull %rcl) #24
  %nocb_bypass_first = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 39
  %8 = ptrtoint ptr %nocb_bypass_first to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile i32 %j, ptr %nocb_bypass_first, align 8
  call fastcc void @rcu_nocb_bypass_unlock(ptr noundef %rdp)
  br label %cleanup

cleanup:                                          ; preds = %if.end83, %if.then78
  %retval.0 = phi i1 [ true, %if.end83 ], [ false, %if.then78 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %rcl) #24
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_cblist_flush_enqueue(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_segcblist_insert_pend_cbs(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mod_timer(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rdp_offload_toggle(ptr noundef %rdp, i1 noundef zeroext %offload, i32 noundef %flags) unnamed_addr #1 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %cblist1 = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 13
  %nocb_gp_rdp = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 55
  %0 = ptrtoint ptr %nocb_gp_rdp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %nocb_gp_rdp, align 128
  tail call void @rcu_segcblist_offload(ptr noundef %cblist1, i1 noundef zeroext %offload) #24
  %nocb_cb_sleep = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 50
  %2 = ptrtoint ptr %nocb_cb_sleep to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nocb_cb_sleep, align 4, !range !1644
  %tobool2.not = icmp eq i8 %3, 0
  br i1 %tobool2.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %4 = ptrtoint ptr %nocb_cb_sleep to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %nocb_cb_sleep, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  tail call fastcc void @rcu_nocb_unlock_irqrestore(ptr noundef %rdp, i32 noundef %flags)
  %nocb_cb_wq = getelementptr inbounds %struct.rcu_data, ptr %rdp, i32 0, i32 28
  tail call void @swake_up_one(ptr noundef %nocb_cb_wq) #24
  %nocb_gp_lock = getelementptr inbounds %struct.rcu_data, ptr %1, i32 0, i32 43
  %call = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %nocb_gp_lock) #24
  %nocb_gp_sleep = getelementptr inbounds %struct.rcu_data, ptr %1, i32 0, i32 44
  %5 = ptrtoint ptr %nocb_gp_sleep to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %nocb_gp_sleep, align 4
  %tobool4.not = icmp eq i8 %6, 0
  br i1 %tobool4.not, label %if.end20.critedge, label %if.then5

if.then5:                                         ; preds = %if.end
  %7 = ptrtoint ptr %nocb_gp_sleep to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 0, ptr %nocb_gp_sleep, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %nocb_gp_lock, i32 noundef %call) #24
  %nocb_gp_kthread = getelementptr inbounds %struct.rcu_data, ptr %1, i32 0, i32 30
  %8 = ptrtoint ptr %nocb_gp_kthread to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %nocb_gp_kthread, align 16
  %call19 = tail call i32 @wake_up_process(ptr noundef %9) #24
  br label %if.end20

if.end20.critedge:                                ; preds = %if.end
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %nocb_gp_lock, i32 noundef %call) #24
  br label %if.end20

if.end20:                                         ; preds = %if.end20.critedge, %if.then5
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__bitmap_subset(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__bitmap_and(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_first_bit_be(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noreturn nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rcu_nocb_gp_kthread(ptr noundef %arg) #18 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %cur_gp_seq.i = alloca i32, align 4
  %__wait.i = alloca %struct.swait_queue, align 4
  %__wait442.i = alloca %struct.swait_queue, align 4
  %nocb_gp_loops = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 48
  %cpu1.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 68
  %nocb_gp_rdp.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 55
  %nocb_head_rdp.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 52
  %nocb_gp_bypass.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 45
  %nocb_gp_gp.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 46
  %nocb_gp_seq825.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 47
  %mynode428.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 7
  %nocb_gp_sleep439.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 44
  %0 = getelementptr inbounds %struct.swait_queue, ptr %__wait442.i, i32 0, i32 1
  %1 = getelementptr inbounds %struct.swait_queue, ptr %__wait442.i, i32 0, i32 1, i32 1
  %2 = getelementptr inbounds %struct.swait_queue, ptr %__wait.i, i32 0, i32 1
  %3 = getelementptr inbounds %struct.swait_queue, ptr %__wait.i, i32 0, i32 1, i32 1
  %nocb_gp_wq.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 49
  %nocb_gp_lock.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 43
  %nocb_defer_wakeup.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 33
  %nocb_timer.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 34
  br label %for.cond

for.cond:                                         ; preds = %do.end87, %entry
  %4 = ptrtoint ptr %nocb_gp_loops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nocb_gp_loops, align 4
  %add = add i32 %5, 1
  store volatile i32 %add, ptr %nocb_gp_loops, align 4
  %6 = ptrtoint ptr %cpu1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu1.i, align 64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cur_gp_seq.i) #24
  %8 = ptrtoint ptr %cur_gp_seq.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -1, ptr %cur_gp_seq.i, align 4, !annotation !1767
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %9 = load volatile i32, ptr @jiffies, align 128
  %10 = ptrtoint ptr %nocb_gp_rdp.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %nocb_gp_rdp.i, align 128
  %cmp.not.i = icmp eq ptr %11, %arg
  br i1 %cmp.not.i, label %if.end28.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %for.cond
  %.b657687.i = load i1, ptr @nocb_gp_wait.__already_done, align 1
  br i1 %.b657687.i, label %if.end28.i, label %if.then.i, !prof !1646

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @nocb_gp_wait.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 633, i32 noundef 9, ptr noundef null) #24
  br label %if.end28.i

if.end28.i:                                       ; preds = %if.then.i, %land.rhs.i, %for.cond
  %12 = ptrtoint ptr %nocb_head_rdp.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pn772.i = load volatile ptr, ptr %nocb_head_rdp.i, align 4
  %cmp45.not774.i = icmp eq ptr %.pn772.i, %nocb_head_rdp.i
  br i1 %cmp45.not774.i, label %if.end385.thread.i, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %if.end28.i
  %add.i = sub i32 1, %9
  br label %for.body.i

for.body.i:                                       ; preds = %cleanup.i, %for.body.lr.ph.i
  %.pn783.i = phi ptr [ %.pn772.i, %for.body.lr.ph.i ], [ %.pn.i, %cleanup.i ]
  %bypass.0.off0782.i = phi i1 [ false, %for.body.lr.ph.i ], [ %bypass.2.off0.i, %cleanup.i ]
  %gotcbs.0.off0780.i = phi i1 [ false, %for.body.lr.ph.i ], [ %gotcbs.2.off0.i, %cleanup.i ]
  %needwait_gp.0.off0778.i = phi i1 [ false, %for.body.lr.ph.i ], [ %needwait_gp.2.off0.i, %cleanup.i ]
  %wait_gp_seq.0776.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %wait_gp_seq.3.i, %cleanup.i ]
  %wasempty.0.off0775.i = phi i1 [ false, %for.body.lr.ph.i ], [ %wasempty.2.off0.i, %cleanup.i ]
  %rdp.0784.i = getelementptr i8, ptr %.pn783.i, i32 -764
  %flags1.i.i.i = getelementptr i8, ptr %.pn783.i, i32 -616
  %13 = ptrtoint ptr %flags1.i.i.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load volatile i8, ptr %flags1.i.i.i, align 4
  %15 = and i8 %14, 48
  %tobool.i.i.not.i = icmp eq i8 %15, 0
  br i1 %tobool.i.i.not.i, label %cleanup.i, label %if.end47.i

if.end47.i:                                       ; preds = %for.body.i
  %16 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %cpu48.i = getelementptr i8, ptr %.pn783.i, i32 196
  %17 = ptrtoint ptr %cpu48.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %cpu48.i, align 64
  %19 = load ptr, ptr @nocb_gp_wait.___tp_str, align 4
  call fastcc void @trace_rcu_nocb_wake(ptr noundef %16, i32 noundef %18, ptr noundef %19) #24
  %20 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i.i = and i32 %20, 128
  %tobool65.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool65.not.i, label %if.then66.i, label %do.end69.i

if.then66.i:                                      ; preds = %if.end47.i
  call void @trace_hardirqs_off() #24
  br label %do.end69.i

do.end69.i:                                       ; preds = %if.then66.i, %if.end47.i
  %cblist.i = getelementptr i8, ptr %.pn783.i, i32 -672
  %21 = ptrtoint ptr %flags1.i.i.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load volatile i8, ptr %flags1.i.i.i, align 4
  %23 = and i8 %22, 4
  %tobool.i.i701.not.i = icmp eq i8 %23, 0
  br i1 %tobool.i.i701.not.i, label %do.end74.i, label %if.then71.i

if.then71.i:                                      ; preds = %do.end69.i
  %nocb_lock.i = getelementptr i8, ptr %.pn783.i, i32 -456
  call void @_raw_spin_lock(ptr noundef %nocb_lock.i) #24
  br label %do.end74.i

do.end74.i:                                       ; preds = %if.then71.i, %do.end69.i
  %24 = ptrtoint ptr %flags1.i.i.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load volatile i8, ptr %flags1.i.i.i, align 4
  %26 = and i8 %25, 32
  %tobool.i.not.i.i = icmp eq i8 %26, 0
  %27 = load volatile i8, ptr %flags1.i.i.i, align 4
  %28 = and i8 %27, 16
  %tobool.i71.not.i.i = icmp eq i8 %28, 0
  br i1 %tobool.i.not.i.i, label %if.end7.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %do.end74.i
  br i1 %tobool.i71.not.i.i, label %if.then3.i.i, label %nocb_gp_update_state_deoffloading.exit.thread.i

if.then3.i.i:                                     ; preds = %if.then.i.i
  %conv2.i.i.i = or i8 %27, 16
  %29 = ptrtoint ptr %flags1.i.i.i to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 %conv2.i.i.i, ptr %flags1.i.i.i, align 4
  %30 = load volatile i8, ptr %flags1.i.i.i, align 4
  %31 = and i8 %30, 8
  %tobool.i67.not.i.i = icmp eq i8 %31, 0
  br i1 %tobool.i67.not.i.i, label %nocb_gp_update_state_deoffloading.exit.thread.i, label %if.end80.i

if.end7.i.i:                                      ; preds = %do.end74.i
  br i1 %tobool.i71.not.i.i, label %land.rhs.i.i, label %if.end38.i.i

land.rhs.i.i:                                     ; preds = %if.end7.i.i
  %.b58.i.i = load i1, ptr @nocb_gp_update_state_deoffloading.__already_done, align 1
  br i1 %.b58.i.i, label %if.end38.i.i, label %if.then16.i.i, !prof !1646

if.then16.i.i:                                    ; preds = %land.rhs.i.i
  store i1 true, ptr @nocb_gp_update_state_deoffloading.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 599, i32 noundef 9, ptr noundef null) #24
  br label %if.end38.i.i

if.end38.i.i:                                     ; preds = %if.then16.i.i, %land.rhs.i.i, %if.end7.i.i
  %32 = ptrtoint ptr %flags1.i.i.i to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %flags1.i.i.i, align 4
  %conv2.i73.i.i = and i8 %33, -17
  store i8 %conv2.i73.i.i, ptr %flags1.i.i.i, align 4
  %34 = load volatile i8, ptr %flags1.i.i.i, align 4
  %35 = and i8 %34, 8
  %tobool.i77.not.i.i = icmp eq i8 %35, 0
  call fastcc void @rcu_nocb_unlock_irqrestore(ptr noundef %rdp.0784.i, i32 noundef %20) #24
  br i1 %tobool.i77.not.i.i, label %cleanup.sink.split.i, label %cleanup.i

nocb_gp_update_state_deoffloading.exit.thread.i:  ; preds = %if.then3.i.i, %if.then.i.i
  br label %if.end80.i

if.end80.i:                                       ; preds = %nocb_gp_update_state_deoffloading.exit.thread.i, %if.then3.i.i
  %tobool360.not.i = phi i1 [ false, %if.then3.i.i ], [ true, %nocb_gp_update_state_deoffloading.exit.thread.i ]
  %len.i.i = getelementptr i8, ptr %.pn783.i, i32 -200
  %36 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %len.i.i, align 4
  %tobool82.not.i = icmp eq i32 %37, 0
  br i1 %tobool82.not.i, label %land.lhs.true95.critedge.i, label %do.end85.i

do.end85.i:                                       ; preds = %if.end80.i
  %nocb_bypass_first.i = getelementptr i8, ptr %.pn783.i, i32 -196
  %38 = ptrtoint ptr %nocb_bypass_first.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %nocb_bypass_first.i, align 8
  %sub.i = add i32 %add.i, %39
  %cmp87.i = icmp slt i32 %sub.i, 0
  br i1 %cmp87.i, label %if.then91.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %do.end85.i
  %40 = load i32, ptr @qhimark, align 4
  %mul.i = shl i32 %40, 1
  %cmp89.i = icmp sgt i32 %37, %mul.i
  br i1 %cmp89.i, label %if.then91.i, label %if.then107.i

if.then91.i:                                      ; preds = %lor.lhs.false.i, %do.end85.i
  call fastcc void @rcu_lockdep_assert_cblist_protected(ptr noundef %rdp.0784.i) #24
  %call.i.i = call fastcc zeroext i1 @rcu_rdp_is_offloaded(ptr noundef %rdp.0784.i) #24
  br i1 %call.i.i, label %lor.lhs.false.i.i, label %if.end105.i

lor.lhs.false.i.i:                                ; preds = %if.then91.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %41 = load i32, ptr @debug_locks, align 4
  %tobool.not.i.i.i = icmp eq i32 %41, 0
  br i1 %tobool.not.i.i.i, label %rcu_nocb_bypass_trylock.exit.i.i, label %land.lhs.true.i.i.i

land.lhs.true.i.i.i:                              ; preds = %lor.lhs.false.i.i
  %42 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i.i.i = and i32 %42, -16384
  %43 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %43, i32 0, i32 1
  %44 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %45, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2171
  %46 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i703.i = and i32 %46, -16384
  %47 = inttoptr i32 %and.i.i.i703.i to ptr
  %cpu.i.i.i = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 3
  %48 = ptrtoint ptr %cpu.i.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %cpu.i.i.i, align 4
  %arrayidx.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %49
  %50 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %arrayidx.i.i.i, align 4
  %add.i.i.i = add i32 %51, ptrtoint (ptr @lockdep_recursion to i32)
  %52 = inttoptr i32 %add.i.i.i to ptr
  %53 = ptrtoint ptr %52 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %52, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2172
  %55 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i104.i.i.i = and i32 %55, -16384
  %56 = inttoptr i32 %and.i.i.i104.i.i.i to ptr
  %preempt_count.i.i105.i.i.i = getelementptr inbounds %struct.thread_info, ptr %56, i32 0, i32 1
  %57 = ptrtoint ptr %preempt_count.i.i105.i.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load volatile i32, ptr %preempt_count.i.i105.i.i.i, align 4
  %sub.i.i.i.i = add i32 %58, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i105.i.i.i, align 4
  %tobool20.not.i.i.i = icmp eq i32 %54, 0
  br i1 %tobool20.not.i.i.i, label %land.rhs.i.i.i, label %rcu_nocb_bypass_trylock.exit.i.i

land.rhs.i.i.i:                                   ; preds = %land.lhs.true.i.i.i
  %59 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i106.i.i.i = and i32 %59, -16384
  %60 = inttoptr i32 %and.i.i.i106.i.i.i to ptr
  %preempt_count.i.i107.i.i.i = getelementptr inbounds %struct.thread_info, ptr %60, i32 0, i32 1
  %61 = ptrtoint ptr %preempt_count.i.i107.i.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile i32, ptr %preempt_count.i.i107.i.i.i, align 4
  %add.i108.i.i.i = add i32 %62, 1
  store volatile i32 %add.i108.i.i.i, ptr %preempt_count.i.i107.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2173
  %63 = ptrtoint ptr %cpu.i.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %cpu.i.i.i, align 4
  %arrayidx44.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %64
  %65 = ptrtoint ptr %arrayidx44.i.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %arrayidx44.i.i.i, align 4
  %add45.i.i.i = add i32 %66, ptrtoint (ptr @hardirqs_enabled to i32)
  %67 = inttoptr i32 %add45.i.i.i to ptr
  %68 = ptrtoint ptr %67 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile i32, ptr %67, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2174
  %70 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i109.i.i.i = and i32 %70, -16384
  %71 = inttoptr i32 %and.i.i.i109.i.i.i to ptr
  %preempt_count.i.i110.i.i.i = getelementptr inbounds %struct.thread_info, ptr %71, i32 0, i32 1
  %72 = ptrtoint ptr %preempt_count.i.i110.i.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %preempt_count.i.i110.i.i.i, align 4
  %sub.i111.i.i.i = add i32 %73, -1
  store volatile i32 %sub.i111.i.i.i, ptr %preempt_count.i.i110.i.i.i, align 4
  %tobool52.not.i.i.i = icmp eq i32 %69, 0
  br i1 %tobool52.not.i.i.i, label %rcu_nocb_bypass_trylock.exit.i.i, label %land.rhs55.i.i.i

land.rhs55.i.i.i:                                 ; preds = %land.rhs.i.i.i
  %.b100.i.i.i = load i1, ptr @rcu_nocb_bypass_trylock.__already_done, align 1
  br i1 %.b100.i.i.i, label %rcu_nocb_bypass_trylock.exit.i.i, label %if.then.i.i.i, !prof !1646

if.then.i.i.i:                                    ; preds = %land.rhs55.i.i.i
  store i1 true, ptr @rcu_nocb_bypass_trylock.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 137, i32 noundef 9, ptr noundef null) #24
  br label %rcu_nocb_bypass_trylock.exit.i.i

rcu_nocb_bypass_trylock.exit.i.i:                 ; preds = %if.then.i.i.i, %land.rhs55.i.i.i, %land.rhs.i.i.i, %land.lhs.true.i.i.i, %lor.lhs.false.i.i
  %nocb_bypass_lock.i.i.i = getelementptr i8, ptr %.pn783.i, i32 -252
  %call96.i.i.i = call i32 @_raw_spin_trylock(ptr noundef %nocb_bypass_lock.i.i.i) #24
  %tobool97.i.not.i.i = icmp eq i32 %call96.i.i.i, 0
  br i1 %tobool97.i.not.i.i, label %if.end105.i, label %if.end.i.i

if.end.i.i:                                       ; preds = %rcu_nocb_bypass_trylock.exit.i.i
  %call2.i.i = call fastcc zeroext i1 @rcu_nocb_do_flush_bypass(ptr noundef %rdp.0784.i, ptr noundef null, i32 noundef %9) #24
  br i1 %call2.i.i, label %if.end105.i, label %land.rhs.i704.i

land.rhs.i704.i:                                  ; preds = %if.end.i.i
  %.b45.i.i = load i1, ptr @rcu_nocb_try_flush_bypass.__already_done, align 1
  br i1 %.b45.i.i, label %if.end105.i, label %if.then10.i.i, !prof !1646

if.then10.i.i:                                    ; preds = %land.rhs.i704.i
  store i1 true, ptr @rcu_nocb_try_flush_bypass.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 359, i32 noundef 9, ptr noundef null) #24
  br label %if.end105.i

land.lhs.true95.critedge.i:                       ; preds = %if.end80.i
  %74 = ptrtoint ptr %cblist.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load volatile ptr, ptr %cblist.i, align 4
  %tobool.not.i.i = icmp eq ptr %75, null
  br i1 %tobool.not.i.i, label %if.then99.i, label %if.end110.i

if.then99.i:                                      ; preds = %land.lhs.true95.critedge.i
  call fastcc void @rcu_nocb_unlock_irqrestore(ptr noundef %rdp.0784.i, i32 noundef %20) #24
  br i1 %tobool360.not.i, label %cleanup.i, label %cleanup.sink.split.i

if.end105.i:                                      ; preds = %if.then10.i.i, %land.rhs.i704.i, %if.end.i.i, %rcu_nocb_bypass_trylock.exit.i.i, %if.then91.i
  %76 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %len.i.i, align 4
  %tobool106.not.i = icmp eq i32 %77, 0
  br i1 %tobool106.not.i, label %if.end110.i, label %if.then107.i

if.then107.i:                                     ; preds = %if.end105.i, %lor.lhs.false.i
  %78 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %79 = ptrtoint ptr %cpu48.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %cpu48.i, align 64
  %81 = load ptr, ptr @nocb_gp_wait.___tp_str.493, align 4
  call fastcc void @trace_rcu_nocb_wake(ptr noundef %78, i32 noundef %80, ptr noundef %81) #24
  br label %if.end110.i

if.end110.i:                                      ; preds = %if.then107.i, %if.end105.i, %land.lhs.true95.critedge.i
  %bypass.1.off0.i = phi i1 [ true, %if.then107.i ], [ %bypass.0.off0782.i, %if.end105.i ], [ %bypass.0.off0782.i, %land.lhs.true95.critedge.i ]
  %mynode.i = getelementptr i8, ptr %.pn783.i, i32 -748
  %82 = ptrtoint ptr %mynode.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %mynode.i, align 16
  %arrayidx.i.i = getelementptr i8, ptr %.pn783.i, i32 -660
  %84 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile ptr, ptr %arrayidx.i.i, align 4
  %86 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load volatile ptr, ptr %85, align 4
  %tobool.not.i706.i = icmp eq ptr %87, null
  br i1 %tobool.not.i706.i, label %lor.lhs.false113.i, label %do.body121.i

lor.lhs.false113.i:                               ; preds = %if.end110.i
  %call115.i = call zeroext i1 @rcu_segcblist_nextgp(ptr noundef %cblist.i, ptr noundef nonnull %cur_gp_seq.i) #24
  br i1 %call115.i, label %land.lhs.true117.i, label %if.end255.i

land.lhs.true117.i:                               ; preds = %lor.lhs.false113.i
  %gp_seq.i = getelementptr inbounds %struct.rcu_node, ptr %83, i32 0, i32 1
  %88 = ptrtoint ptr %cur_gp_seq.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %cur_gp_seq.i, align 4
  %90 = ptrtoint ptr %gp_seq.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load volatile i32, ptr %gp_seq.i, align 4
  %sub.i707.i = sub i32 %91, %89
  %cmp.i.i = icmp sgt i32 %sub.i707.i, -1
  br i1 %cmp.i.i, label %do.body121.i, label %if.end255.i

do.body121.i:                                     ; preds = %land.lhs.true117.i, %if.end110.i
  call void @_raw_spin_lock(ptr noundef %83) #24
  %call127.i = call fastcc zeroext i1 @rcu_advance_cbs(ptr noundef %83, ptr noundef %rdp.0784.i) #24
  %92 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile ptr, ptr %arrayidx.i.i, align 4
  %94 = ptrtoint ptr %93 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load volatile ptr, ptr %93, align 4
  %tobool.not.i709.i = icmp eq ptr %95, null
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %96 = load i32, ptr @debug_locks, align 4
  %tobool135.not.i = icmp eq i32 %96, 0
  br i1 %tobool135.not.i, label %if.end242.i, label %land.lhs.true136.i

land.lhs.true136.i:                               ; preds = %do.body121.i
  %97 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %97, -16384
  %98 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %98, i32 0, i32 1
  %99 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %100, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2175
  %101 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i710.i = and i32 %101, -16384
  %102 = inttoptr i32 %and.i710.i to ptr
  %cpu154.i = getelementptr inbounds %struct.thread_info, ptr %102, i32 0, i32 3
  %103 = ptrtoint ptr %cpu154.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %cpu154.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %104
  %105 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %arrayidx.i, align 4
  %add155.i = add i32 %106, ptrtoint (ptr @lockdep_recursion to i32)
  %107 = inttoptr i32 %add155.i to ptr
  %108 = ptrtoint ptr %107 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load volatile i32, ptr %107, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2176
  %110 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i692.i = and i32 %110, -16384
  %111 = inttoptr i32 %and.i.i.i692.i to ptr
  %preempt_count.i.i693.i = getelementptr inbounds %struct.thread_info, ptr %111, i32 0, i32 1
  %112 = ptrtoint ptr %preempt_count.i.i693.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load volatile i32, ptr %preempt_count.i.i693.i, align 4
  %sub.i.i = add i32 %113, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i693.i, align 4
  %tobool162.not.i = icmp eq i32 %109, 0
  br i1 %tobool162.not.i, label %land.rhs163.i, label %if.end242.i

land.rhs163.i:                                    ; preds = %land.lhs.true136.i
  %114 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i694.i = and i32 %114, -16384
  %115 = inttoptr i32 %and.i.i.i694.i to ptr
  %preempt_count.i.i695.i = getelementptr inbounds %struct.thread_info, ptr %115, i32 0, i32 1
  %116 = ptrtoint ptr %preempt_count.i.i695.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load volatile i32, ptr %preempt_count.i.i695.i, align 4
  %add.i696.i = add i32 %117, 1
  store volatile i32 %add.i696.i, ptr %preempt_count.i.i695.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2177
  %118 = ptrtoint ptr %cpu154.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %cpu154.i, align 4
  %arrayidx187.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %119
  %120 = ptrtoint ptr %arrayidx187.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %arrayidx187.i, align 4
  %add188.i = add i32 %121, ptrtoint (ptr @hardirqs_enabled to i32)
  %122 = inttoptr i32 %add188.i to ptr
  %123 = ptrtoint ptr %122 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load volatile i32, ptr %122, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2178
  %125 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i697.i = and i32 %125, -16384
  %126 = inttoptr i32 %and.i.i.i697.i to ptr
  %preempt_count.i.i698.i = getelementptr inbounds %struct.thread_info, ptr %126, i32 0, i32 1
  %127 = ptrtoint ptr %preempt_count.i.i698.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load volatile i32, ptr %preempt_count.i.i698.i, align 4
  %sub.i699.i = add i32 %128, -1
  store volatile i32 %sub.i699.i, ptr %preempt_count.i.i698.i, align 4
  %tobool195.not.i = icmp eq i32 %124, 0
  br i1 %tobool195.not.i, label %if.end242.i, label %land.rhs204.i

land.rhs204.i:                                    ; preds = %land.rhs163.i
  %.b658686.i = load i1, ptr @nocb_gp_wait.__already_done.495, align 1
  br i1 %.b658686.i, label %if.end242.i, label %if.then215.i, !prof !1646

if.then215.i:                                     ; preds = %land.rhs204.i
  store i1 true, ptr @nocb_gp_wait.__already_done.495, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 691, i32 noundef 9, ptr noundef null) #24
  br label %if.end242.i

if.end242.i:                                      ; preds = %if.then215.i, %land.rhs204.i, %land.rhs163.i, %land.lhs.true136.i, %do.body121.i
  call void @_raw_spin_unlock(ptr noundef %83) #24
  br i1 %tobool.not.i709.i, label %land.rhs259.i, label %if.end310.i

if.end255.i:                                      ; preds = %land.lhs.true117.i, %lor.lhs.false113.i
  br i1 %wasempty.0.off0775.i, label %land.rhs259.i, label %if.end310.i

land.rhs259.i:                                    ; preds = %if.end255.i, %if.end242.i
  %needwake_gp.0.off0756.i = phi i1 [ %call127.i, %if.end242.i ], [ false, %if.end255.i ]
  %129 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load volatile ptr, ptr %arrayidx.i.i, align 4
  %131 = ptrtoint ptr %130 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load volatile ptr, ptr %130, align 4
  %tobool.not.i712.not.i = icmp eq ptr %132, null
  br i1 %tobool.not.i712.not.i, label %if.end310.i, label %land.rhs272.i

land.rhs272.i:                                    ; preds = %land.rhs259.i
  %.b659685.i = load i1, ptr @nocb_gp_wait.__already_done.496, align 1
  br i1 %.b659685.i, label %if.end310.i, label %if.then283.i, !prof !1646

if.then283.i:                                     ; preds = %land.rhs272.i
  store i1 true, ptr @nocb_gp_wait.__already_done.496, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 696, i32 noundef 9, ptr noundef null) #24
  br label %if.end310.i

if.end310.i:                                      ; preds = %if.then283.i, %land.rhs272.i, %land.rhs259.i, %if.end255.i, %if.end242.i
  %needwake_gp.0.off0755.i = phi i1 [ %call127.i, %if.end242.i ], [ false, %if.end255.i ], [ %needwake_gp.0.off0756.i, %land.rhs259.i ], [ %needwake_gp.0.off0756.i, %if.then283.i ], [ %needwake_gp.0.off0756.i, %land.rhs272.i ]
  %wasempty.1.off0753.i = phi i1 [ false, %if.end242.i ], [ false, %if.end255.i ], [ true, %land.rhs259.i ], [ true, %if.then283.i ], [ true, %land.rhs272.i ]
  %call319.i = call zeroext i1 @rcu_segcblist_nextgp(ptr noundef %cblist.i, ptr noundef nonnull %cur_gp_seq.i) #24
  br i1 %call319.i, label %if.then320.i, label %if.end330.i

if.then320.i:                                     ; preds = %if.end310.i
  br i1 %needwait_gp.0.off0778.i, label %lor.lhs.false322.i, label %if.then326.i

lor.lhs.false322.i:                               ; preds = %if.then320.i
  %133 = ptrtoint ptr %cur_gp_seq.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %cur_gp_seq.i, align 4
  %sub323.i = sub i32 %134, %wait_gp_seq.0776.i
  %cmp324.i = icmp slt i32 %sub323.i, 0
  br i1 %cmp324.i, label %if.then326.i, label %if.end327.i

if.then326.i:                                     ; preds = %lor.lhs.false322.i, %if.then320.i
  %135 = ptrtoint ptr %cur_gp_seq.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %cur_gp_seq.i, align 4
  br label %if.end327.i

if.end327.i:                                      ; preds = %if.then326.i, %lor.lhs.false322.i
  %wait_gp_seq.1.i = phi i32 [ %136, %if.then326.i ], [ %wait_gp_seq.0776.i, %lor.lhs.false322.i ]
  %137 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %138 = ptrtoint ptr %cpu48.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %cpu48.i, align 64
  %140 = load ptr, ptr @nocb_gp_wait.___tp_str.497, align 4
  call fastcc void @trace_rcu_nocb_wake(ptr noundef %137, i32 noundef %139, ptr noundef %140) #24
  br label %if.end330.i

if.end330.i:                                      ; preds = %if.end327.i, %if.end310.i
  %wait_gp_seq.2.i = phi i32 [ %wait_gp_seq.1.i, %if.end327.i ], [ %wait_gp_seq.0776.i, %if.end310.i ]
  %needwait_gp.1.off0.i = phi i1 [ true, %if.end327.i ], [ %needwait_gp.0.off0778.i, %if.end310.i ]
  %call332.i = call zeroext i1 @rcu_segcblist_ready_cbs(ptr noundef %cblist.i) #24
  br i1 %call332.i, label %if.then333.i, label %if.end356.critedge.i

if.then333.i:                                     ; preds = %if.end330.i
  %nocb_cb_sleep.i = getelementptr i8, ptr %.pn783.i, i32 -16
  %141 = ptrtoint ptr %nocb_cb_sleep.i to i32
  call void @__asan_load1_noabort(i32 %141)
  %142 = load i8, ptr %nocb_cb_sleep.i, align 4, !range !1644
  %tobool334.not.i = icmp eq i8 %142, 0
  store volatile i8 0, ptr %nocb_cb_sleep.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2179
  call fastcc void @rcu_nocb_unlock_irqrestore(ptr noundef %rdp.0784.i, i32 noundef %20) #24
  br i1 %tobool334.not.i, label %if.end356.i, label %if.then355.i

if.then355.i:                                     ; preds = %if.then333.i
  %nocb_cb_wq.i = getelementptr i8, ptr %.pn783.i, i32 -564
  call void @swake_up_one(ptr noundef %nocb_cb_wq.i) #24
  br label %if.end356.i

if.end356.critedge.i:                             ; preds = %if.end330.i
  call fastcc void @rcu_nocb_unlock_irqrestore(ptr noundef %rdp.0784.i, i32 noundef %20) #24
  br label %if.end356.i

if.end356.i:                                      ; preds = %if.end356.critedge.i, %if.then355.i, %if.then333.i
  %gotcbs.1.off0.i = phi i1 [ true, %if.then355.i ], [ %gotcbs.0.off0780.i, %if.then333.i ], [ %gotcbs.0.off0780.i, %if.end356.critedge.i ]
  br i1 %needwake_gp.0.off0755.i, label %if.then358.i, label %if.end359.i

if.then358.i:                                     ; preds = %if.end356.i
  %143 = load volatile ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 8), align 4
  %144 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i = and i32 %144, -16384
  %145 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %145, i32 0, i32 2
  %146 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %task.i.i, align 8
  %cmp.i713.i = icmp eq ptr %147, %143
  br i1 %cmp.i713.i, label %land.lhs.true.i.i, label %do.end9.i.i

land.lhs.true.i.i:                                ; preds = %if.then358.i
  %preempt_count.i.i714.i = getelementptr inbounds %struct.thread_info, ptr %145, i32 0, i32 1
  %148 = ptrtoint ptr %preempt_count.i.i714.i to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load volatile i32, ptr %preempt_count.i.i714.i, align 4
  %and.i715.i = and i32 %149, 983040
  %tobool.not.i716.i = icmp eq i32 %and.i715.i, 0
  br i1 %tobool.not.i716.i, label %land.lhs.true2.i.i, label %do.end9.i.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %150 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i37.i.i = and i32 %150, -16384
  %151 = inttoptr i32 %and.i.i37.i.i to ptr
  %preempt_count.i38.i.i = getelementptr inbounds %struct.thread_info, ptr %151, i32 0, i32 1
  %152 = ptrtoint ptr %preempt_count.i38.i.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load volatile i32, ptr %preempt_count.i38.i.i, align 4
  %and5.i.i = and i32 %153, 256
  %tobool6.not.i.i = icmp eq i32 %and5.i.i, 0
  br i1 %tobool6.not.i.i, label %if.end359.i, label %do.end9.i.i

do.end9.i.i:                                      ; preds = %land.lhs.true2.i.i, %land.lhs.true.i.i, %if.then358.i
  %154 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %tobool11.not.i.i = icmp eq i16 %154, 0
  %tobool13.not.i.i = icmp eq ptr %143, null
  %or.cond.i.i = select i1 %tobool11.not.i.i, i1 true, i1 %tobool13.not.i.i
  br i1 %or.cond.i.i, label %if.end359.i, label %do.body18.i.i

do.body18.i.i:                                    ; preds = %do.end9.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %155 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %155, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 12), align 8
  %156 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  store volatile i32 %156, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 13), align 4
  call void @swake_up_one(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 9)) #24
  br label %if.end359.i

if.end359.i:                                      ; preds = %do.body18.i.i, %do.end9.i.i, %land.lhs.true2.i.i, %if.end356.i
  br i1 %tobool360.not.i, label %cleanup.i, label %cleanup.sink.split.i

cleanup.sink.split.i:                             ; preds = %if.end359.i, %if.then99.i, %if.end38.i.i
  %wasempty.2.off0.ph.i = phi i1 [ %wasempty.0.off0775.i, %if.end38.i.i ], [ %wasempty.0.off0775.i, %if.then99.i ], [ %wasempty.1.off0753.i, %if.end359.i ]
  %wait_gp_seq.3.ph.i = phi i32 [ %wait_gp_seq.0776.i, %if.end38.i.i ], [ %wait_gp_seq.0776.i, %if.then99.i ], [ %wait_gp_seq.2.i, %if.end359.i ]
  %needwait_gp.2.off0.ph.i = phi i1 [ %needwait_gp.0.off0778.i, %if.end38.i.i ], [ %needwait_gp.0.off0778.i, %if.then99.i ], [ %needwait_gp.1.off0.i, %if.end359.i ]
  %gotcbs.2.off0.ph.i = phi i1 [ %gotcbs.0.off0780.i, %if.end38.i.i ], [ %gotcbs.0.off0780.i, %if.then99.i ], [ %gotcbs.1.off0.i, %if.end359.i ]
  %bypass.2.off0.ph.i = phi i1 [ %bypass.0.off0782.i, %if.end38.i.i ], [ %bypass.0.off0782.i, %if.then99.i ], [ %bypass.1.off0.i, %if.end359.i ]
  %nocb_state_wq362.i = getelementptr i8, ptr %.pn783.i, i32 -512
  call void @swake_up_one(ptr noundef %nocb_state_wq362.i) #24
  br label %cleanup.i

cleanup.i:                                        ; preds = %cleanup.sink.split.i, %if.end359.i, %if.then99.i, %if.end38.i.i, %for.body.i
  %wasempty.2.off0.i = phi i1 [ %wasempty.0.off0775.i, %for.body.i ], [ %wasempty.0.off0775.i, %if.then99.i ], [ %wasempty.1.off0753.i, %if.end359.i ], [ %wasempty.0.off0775.i, %if.end38.i.i ], [ %wasempty.2.off0.ph.i, %cleanup.sink.split.i ]
  %wait_gp_seq.3.i = phi i32 [ %wait_gp_seq.0776.i, %for.body.i ], [ %wait_gp_seq.0776.i, %if.then99.i ], [ %wait_gp_seq.2.i, %if.end359.i ], [ %wait_gp_seq.0776.i, %if.end38.i.i ], [ %wait_gp_seq.3.ph.i, %cleanup.sink.split.i ]
  %needwait_gp.2.off0.i = phi i1 [ %needwait_gp.0.off0778.i, %for.body.i ], [ %needwait_gp.0.off0778.i, %if.then99.i ], [ %needwait_gp.1.off0.i, %if.end359.i ], [ %needwait_gp.0.off0778.i, %if.end38.i.i ], [ %needwait_gp.2.off0.ph.i, %cleanup.sink.split.i ]
  %gotcbs.2.off0.i = phi i1 [ %gotcbs.0.off0780.i, %for.body.i ], [ %gotcbs.0.off0780.i, %if.then99.i ], [ %gotcbs.1.off0.i, %if.end359.i ], [ %gotcbs.0.off0780.i, %if.end38.i.i ], [ %gotcbs.2.off0.ph.i, %cleanup.sink.split.i ]
  %bypass.2.off0.i = phi i1 [ %bypass.0.off0782.i, %for.body.i ], [ %bypass.0.off0782.i, %if.then99.i ], [ %bypass.1.off0.i, %if.end359.i ], [ %bypass.0.off0782.i, %if.end38.i.i ], [ %bypass.2.off0.ph.i, %cleanup.sink.split.i ]
  %157 = ptrtoint ptr %.pn783.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %.pn.i = load volatile ptr, ptr %.pn783.i, align 4
  %cmp45.not.i = icmp eq ptr %.pn.i, %nocb_head_rdp.i
  br i1 %cmp45.not.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %cleanup.i
  %conv374.i = zext i1 %bypass.2.off0.i to i8
  %158 = ptrtoint ptr %nocb_gp_bypass.i to i32
  call void @__asan_store1_noabort(i32 %158)
  store i8 %conv374.i, ptr %nocb_gp_bypass.i, align 1
  %conv376.i = zext i1 %needwait_gp.2.off0.i to i8
  %159 = ptrtoint ptr %nocb_gp_gp.i to i32
  call void @__asan_store1_noabort(i32 %159)
  store i8 %conv376.i, ptr %nocb_gp_gp.i, align 2
  br i1 %needwait_gp.2.off0.i, label %160, label %162

160:                                              ; preds = %for.end.i
  %161 = ptrtoint ptr %nocb_gp_seq825.i to i32
  call void @__asan_store4_noabort(i32 %161)
  store i32 %wait_gp_seq.3.i, ptr %nocb_gp_seq825.i, align 16
  br i1 %bypass.2.off0.i, label %land.lhs.true381.i, label %if.end385.i.thread99

162:                                              ; preds = %for.end.i
  %163 = ptrtoint ptr %nocb_gp_seq825.i to i32
  call void @__asan_store4_noabort(i32 %163)
  store i32 0, ptr %nocb_gp_seq825.i, align 16
  br i1 %bypass.2.off0.i, label %land.lhs.true381.i, label %if.end385.i.thread

land.lhs.true381.i:                               ; preds = %162, %160
  %.b656684.i = load i1, ptr @rcu_nocb_poll, align 1
  br i1 %.b656684.i, label %if.then387.i, label %if.end385.i

if.end385.i:                                      ; preds = %land.lhs.true381.i
  %164 = load ptr, ptr @nocb_gp_wait.___tp_str.499, align 4
  %165 = ptrtoint ptr %nocb_gp_rdp.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %nocb_gp_rdp.i, align 128
  %nocb_gp_lock.i.i = getelementptr inbounds %struct.rcu_data, ptr %166, i32 0, i32 43
  %call.i717.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %nocb_gp_lock.i.i) #24
  %nocb_timer.i.i = getelementptr inbounds %struct.rcu_data, ptr %166, i32 0, i32 34
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %167 = load volatile i32, ptr @jiffies, align 128
  %add.i718.i = add i32 %167, 2
  %call3.i.i = call i32 @mod_timer(ptr noundef %nocb_timer.i.i, i32 noundef %add.i718.i) #24
  %nocb_defer_wakeup.i.i = getelementptr inbounds %struct.rcu_data, ptr %166, i32 0, i32 33
  %168 = ptrtoint ptr %nocb_defer_wakeup.i.i to i32
  call void @__asan_store4_noabort(i32 %168)
  store volatile i32 1, ptr %nocb_defer_wakeup.i.i, align 4
  call void @_raw_spin_unlock_irqrestore(ptr noundef %nocb_gp_lock.i.i, i32 noundef %call.i717.i) #24
  %169 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %170 = ptrtoint ptr %cpu1.i to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %cpu1.i, align 64
  call fastcc void @trace_rcu_nocb_wake(ptr noundef %169, i32 noundef %171, ptr noundef %164) #24
  %.b655682.pr.i = load i1, ptr @rcu_nocb_poll, align 1
  br i1 %.b655682.pr.i, label %if.then387.i, label %if.else393.i

if.end385.i.thread99:                             ; preds = %160
  %.b655682.pr.i100 = load i1, ptr @rcu_nocb_poll, align 1
  br i1 %.b655682.pr.i100, label %if.then387.i, label %if.else427.i

if.end385.i.thread:                               ; preds = %162
  %.b655682.pr.i96 = load i1, ptr @rcu_nocb_poll, align 1
  br i1 %.b655682.pr.i96, label %if.then387.i, label %if.then395.i

if.end385.thread.i:                               ; preds = %if.end28.i
  %172 = ptrtoint ptr %nocb_gp_bypass.i to i32
  call void @__asan_store1_noabort(i32 %172)
  store i8 0, ptr %nocb_gp_bypass.i, align 1
  %173 = ptrtoint ptr %nocb_gp_gp.i to i32
  call void @__asan_store1_noabort(i32 %173)
  store i8 0, ptr %nocb_gp_gp.i, align 2
  %174 = ptrtoint ptr %nocb_gp_seq825.i to i32
  call void @__asan_store4_noabort(i32 %174)
  store i32 0, ptr %nocb_gp_seq825.i, align 16
  %.b655682.pr834.i = load i1, ptr @rcu_nocb_poll, align 1
  br i1 %.b655682.pr834.i, label %if.end391.i, label %if.then395.i

if.then387.i:                                     ; preds = %if.end385.i.thread, %if.end385.i.thread99, %if.end385.i, %land.lhs.true381.i
  br i1 %gotcbs.2.off0.i, label %if.then389.i, label %if.end391.i

if.then389.i:                                     ; preds = %if.then387.i
  %175 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %176 = load ptr, ptr @nocb_gp_wait.___tp_str.501, align 4
  call fastcc void @trace_rcu_nocb_wake(ptr noundef %175, i32 noundef %7, ptr noundef %176) #24
  br label %if.end391.i

if.end391.i:                                      ; preds = %if.then389.i, %if.then387.i, %if.end385.thread.i
  %call392.i = call i32 @schedule_timeout_idle(i32 noundef 1) #24
  br label %if.end480.i

if.else393.i:                                     ; preds = %if.end385.i
  br i1 %needwait_gp.2.off0.i, label %if.else427.i, label %if.then395.i

if.then395.i:                                     ; preds = %if.else393.i, %if.end385.thread.i, %if.end385.i.thread
  %177 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %178 = load ptr, ptr @nocb_gp_wait.___tp_str.503, align 4
  call fastcc void @trace_rcu_nocb_wake(ptr noundef %177, i32 noundef %7, ptr noundef %178) #24
  %179 = ptrtoint ptr %nocb_gp_sleep439.i to i32
  call void @__asan_load1_noabort(i32 %179)
  %180 = load volatile i8, ptr %nocb_gp_sleep439.i, align 4
  %tobool402.not.i = icmp eq i8 %180, 0
  br i1 %tobool402.not.i, label %if.end424.i, label %if.then403.i

if.then403.i:                                     ; preds = %if.then395.i
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %__wait.i) #24
  %181 = ptrtoint ptr %__wait.i to i32
  call void @__asan_store4_noabort(i32 %181)
  store ptr inttoptr (i32 -1 to ptr), ptr %__wait.i, align 4, !annotation !1767
  %182 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %182)
  store volatile ptr %2, ptr %2, align 4
  %183 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %183)
  store ptr %2, ptr %3, align 4
  %call406791.i = call i32 @prepare_to_swait_event(ptr noundef %nocb_gp_wq.i, ptr noundef nonnull %__wait.i, i32 noundef 1) #24
  %184 = ptrtoint ptr %nocb_gp_sleep439.i to i32
  call void @__asan_load1_noabort(i32 %184)
  %185 = load volatile i8, ptr %nocb_gp_sleep439.i, align 4
  %tobool412.not792.i = icmp eq i8 %185, 0
  br i1 %tobool412.not792.i, label %for.end421.i, label %if.end414.i

if.end414.i:                                      ; preds = %cleanup418.i, %if.then403.i
  %call406793.i = phi i32 [ %call406.i, %cleanup418.i ], [ %call406791.i, %if.then403.i ]
  %tobool415.not.i = icmp eq i32 %call406793.i, 0
  br i1 %tobool415.not.i, label %cleanup418.i, label %__out.i

cleanup418.i:                                     ; preds = %if.end414.i
  call void @schedule() #24
  %call406.i = call i32 @prepare_to_swait_event(ptr noundef %nocb_gp_wq.i, ptr noundef nonnull %__wait.i, i32 noundef 1) #24
  %186 = ptrtoint ptr %nocb_gp_sleep439.i to i32
  call void @__asan_load1_noabort(i32 %186)
  %187 = load volatile i8, ptr %nocb_gp_sleep439.i, align 4
  %tobool412.not.i = icmp eq i8 %187, 0
  br i1 %tobool412.not.i, label %for.end421.i, label %if.end414.i

for.end421.i:                                     ; preds = %cleanup418.i, %if.then403.i
  call void @finish_swait(ptr noundef %nocb_gp_wq.i, ptr noundef nonnull %__wait.i) #24
  br label %__out.i

__out.i:                                          ; preds = %for.end421.i, %if.end414.i
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %__wait.i) #24
  br label %if.end424.i

if.end424.i:                                      ; preds = %__out.i, %if.then395.i
  %188 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %189 = load ptr, ptr @nocb_gp_wait.___tp_str.505, align 4
  call fastcc void @trace_rcu_nocb_wake(ptr noundef %188, i32 noundef %7, ptr noundef %189) #24
  br label %if.end480.i

if.else427.i:                                     ; preds = %if.else393.i, %if.end385.i.thread99
  %190 = ptrtoint ptr %mynode428.i to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %mynode428.i, align 16
  %192 = load ptr, ptr @nocb_gp_wait.___tp_str.507, align 4
  %193 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %gp_seq.i.i = getelementptr inbounds %struct.rcu_node, ptr %191, i32 0, i32 1
  %194 = ptrtoint ptr %gp_seq.i.i to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load volatile i32, ptr %gp_seq.i.i, align 4
  %level.i.i = getelementptr inbounds %struct.rcu_node, ptr %191, i32 0, i32 18
  %196 = ptrtoint ptr %level.i.i to i32
  call void @__asan_load1_noabort(i32 %196)
  %197 = load i8, ptr %level.i.i, align 1
  %grplo.i.i = getelementptr inbounds %struct.rcu_node, ptr %191, i32 0, i32 15
  %198 = ptrtoint ptr %grplo.i.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load i32, ptr %grplo.i.i, align 4
  %grphi.i.i = getelementptr inbounds %struct.rcu_node, ptr %191, i32 0, i32 16
  %200 = ptrtoint ptr %grphi.i.i to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %grphi.i.i, align 8
  call fastcc void @trace_rcu_future_grace_period(ptr noundef %193, i32 noundef %195, i32 noundef %wait_gp_seq.3.i, i8 noundef zeroext %197, i32 noundef %199, i32 noundef %201, ptr noundef %192) #24
  %202 = ptrtoint ptr %gp_seq.i.i to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load volatile i32, ptr %gp_seq.i.i, align 4
  %sub.i720.i = sub i32 %203, %wait_gp_seq.3.i
  %cmp.i721.i = icmp sgt i32 %sub.i720.i, -1
  br i1 %cmp.i721.i, label %if.end476.i, label %do.end437.i

do.end437.i:                                      ; preds = %if.else427.i
  %204 = ptrtoint ptr %nocb_gp_sleep439.i to i32
  call void @__asan_load1_noabort(i32 %204)
  %205 = load volatile i8, ptr %nocb_gp_sleep439.i, align 4
  %tobool440.not.i = icmp eq i8 %205, 0
  br i1 %tobool440.not.i, label %if.end476.i, label %if.then441.i

if.then441.i:                                     ; preds = %do.end437.i
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %__wait442.i) #24
  %206 = ptrtoint ptr %__wait442.i to i32
  call void @__asan_store4_noabort(i32 %206)
  store ptr inttoptr (i32 -1 to ptr), ptr %__wait442.i, align 4, !annotation !1767
  %207 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %207)
  store volatile ptr %0, ptr %0, align 4
  %208 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %208)
  store ptr %0, ptr %1, align 4
  %shr.i.i = lshr i32 %wait_gp_seq.3.i, 2
  %and.i = and i32 %shr.i.i, 1
  %arrayidx449.i = getelementptr %struct.rcu_node, ptr %191, i32 0, i32 30, i32 %and.i
  %call450795.i = call i32 @prepare_to_swait_event(ptr noundef %arrayidx449.i, ptr noundef nonnull %__wait442.i, i32 noundef 1) #24
  %209 = ptrtoint ptr %gp_seq.i.i to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load volatile i32, ptr %gp_seq.i.i, align 4
  %sub.i723796.i = sub i32 %210, %wait_gp_seq.3.i
  %cmp.i724797.i = icmp sgt i32 %sub.i723796.i, -1
  br i1 %cmp.i724797.i, label %for.end469.i, label %do.end457.i

do.end457.i:                                      ; preds = %cleanup466.i, %if.then441.i
  %call450798.i = phi i32 [ %call450.i, %cleanup466.i ], [ %call450795.i, %if.then441.i ]
  %211 = ptrtoint ptr %nocb_gp_sleep439.i to i32
  call void @__asan_load1_noabort(i32 %211)
  %212 = load volatile i8, ptr %nocb_gp_sleep439.i, align 4
  %tobool460.not.i = icmp eq i8 %212, 0
  br i1 %tobool460.not.i, label %for.end469.i, label %if.end462.i

if.end462.i:                                      ; preds = %do.end457.i
  %tobool463.not.i = icmp eq i32 %call450798.i, 0
  br i1 %tobool463.not.i, label %cleanup466.i, label %__out474.i

cleanup466.i:                                     ; preds = %if.end462.i
  call void @schedule() #24
  %call450.i = call i32 @prepare_to_swait_event(ptr noundef %arrayidx449.i, ptr noundef nonnull %__wait442.i, i32 noundef 1) #24
  %213 = ptrtoint ptr %gp_seq.i.i to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load volatile i32, ptr %gp_seq.i.i, align 4
  %sub.i723.i = sub i32 %214, %wait_gp_seq.3.i
  %cmp.i724.i = icmp sgt i32 %sub.i723.i, -1
  br i1 %cmp.i724.i, label %for.end469.i, label %do.end457.i

for.end469.i:                                     ; preds = %cleanup466.i, %do.end457.i, %if.then441.i
  call void @finish_swait(ptr noundef %arrayidx449.i, ptr noundef nonnull %__wait442.i) #24
  br label %__out474.i

__out474.i:                                       ; preds = %for.end469.i, %if.end462.i
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %__wait442.i) #24
  br label %if.end476.i

if.end476.i:                                      ; preds = %__out474.i, %do.end437.i, %if.else427.i
  %215 = load ptr, ptr @nocb_gp_wait.___tp_str.509, align 4
  %216 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %217 = ptrtoint ptr %gp_seq.i.i to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load volatile i32, ptr %gp_seq.i.i, align 4
  %219 = ptrtoint ptr %level.i.i to i32
  call void @__asan_load1_noabort(i32 %219)
  %220 = load i8, ptr %level.i.i, align 1
  %221 = ptrtoint ptr %grplo.i.i to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load i32, ptr %grplo.i.i, align 4
  %223 = ptrtoint ptr %grphi.i.i to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load i32, ptr %grphi.i.i, align 8
  call fastcc void @trace_rcu_future_grace_period(ptr noundef %216, i32 noundef %218, i32 noundef %wait_gp_seq.3.i, i8 noundef zeroext %220, i32 noundef %222, i32 noundef %224, ptr noundef %215) #24
  br label %if.end480.i

if.end480.i:                                      ; preds = %if.end476.i, %if.end424.i, %if.end391.i
  %.b683.i = load i1, ptr @rcu_nocb_poll, align 1
  br i1 %.b683.i, label %if.end526.i, label %do.body483.i

do.body483.i:                                     ; preds = %if.end480.i
  %call489.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %nocb_gp_lock.i) #24
  %225 = ptrtoint ptr %nocb_defer_wakeup.i to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load i32, ptr %nocb_defer_wakeup.i, align 4
  %cmp492.i = icmp sgt i32 %226, 0
  br i1 %cmp492.i, label %do.body499.i, label %do.body511.i

do.body499.i:                                     ; preds = %do.body483.i
  %227 = ptrtoint ptr %nocb_defer_wakeup.i to i32
  call void @__asan_store4_noabort(i32 %227)
  store volatile i32 0, ptr %nocb_defer_wakeup.i, align 4
  %call505.i = call i32 @del_timer(ptr noundef %nocb_timer.i) #24
  br label %do.body511.i

do.body511.i:                                     ; preds = %do.body499.i, %do.body483.i
  %228 = ptrtoint ptr %nocb_gp_sleep439.i to i32
  call void @__asan_store1_noabort(i32 %228)
  store volatile i8 1, ptr %nocb_gp_sleep439.i, align 4
  call void @_raw_spin_unlock_irqrestore(ptr noundef %nocb_gp_lock.i, i32 noundef %call489.i) #24
  br label %if.end526.i

if.end526.i:                                      ; preds = %do.body511.i, %if.end480.i
  %229 = ptrtoint ptr %nocb_gp_seq825.i to i32
  call void @__asan_store4_noabort(i32 %229)
  store i32 -1, ptr %nocb_gp_seq825.i, align 16
  %230 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i730.i = and i32 %230, -16384
  %231 = inttoptr i32 %and.i730.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %231, i32 0, i32 2
  %232 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load ptr, ptr %task.i, align 8
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %233, i32 0, i32 1
  %234 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load ptr, ptr %stack.i.i.i, align 4
  %236 = ptrtoint ptr %235 to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load volatile i32, ptr %235, align 4
  %238 = and i32 %237, 256
  %tobool.not.i731.i = icmp eq i32 %238, 0
  br i1 %tobool.not.i731.i, label %signal_pending.exit.i, label %do.end547.i, !prof !1646

signal_pending.exit.i:                            ; preds = %if.end526.i
  %239 = ptrtoint ptr %235 to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load volatile i32, ptr %235, align 4
  %and1.i.i.i.i.i.i = and i32 %240, 1
  %tobool531.not.i = icmp eq i32 %and1.i.i.i.i.i.i, 0
  br i1 %tobool531.not.i, label %nocb_gp_wait.exit, label %do.end547.i, !prof !1646

do.end547.i:                                      ; preds = %signal_pending.exit.i, %if.end526.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 763, i32 noundef 9, ptr noundef null) #24
  br label %nocb_gp_wait.exit

nocb_gp_wait.exit:                                ; preds = %do.end547.i, %signal_pending.exit.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cur_gp_seq.i) #24
  %241 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i94 = and i32 %241, -16384
  %242 = inttoptr i32 %and.i94 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %242, i32 0, i32 2
  %243 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load ptr, ptr %task, align 8
  %rcu_tasks_holdout = getelementptr inbounds %struct.task_struct, ptr %244, i32 0, i32 40
  %245 = ptrtoint ptr %rcu_tasks_holdout to i32
  call void @__asan_load1_noabort(i32 %245)
  %246 = load volatile i8, ptr %rcu_tasks_holdout, align 4
  %tobool.not = icmp eq i8 %246, 0
  br i1 %tobool.not, label %do.end31, label %do.body18

do.body18:                                        ; preds = %nocb_gp_wait.exit
  %247 = ptrtoint ptr %rcu_tasks_holdout to i32
  call void @__asan_store1_noabort(i32 %247)
  store volatile i8 0, ptr %rcu_tasks_holdout, align 4
  br label %do.end31

do.end31:                                         ; preds = %do.body18, %nocb_gp_wait.exit
  %248 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load ptr, ptr %task, align 8
  %trc_reader_checked = getelementptr inbounds %struct.task_struct, ptr %249, i32 0, i32 47
  %250 = ptrtoint ptr %trc_reader_checked to i32
  call void @__asan_load1_noabort(i32 %250)
  %251 = load volatile i8, ptr %trc_reader_checked, align 64, !range !1644
  %tobool35.not = icmp eq i8 %251, 0
  br i1 %tobool35.not, label %do.end41, label %do.end87, !prof !1645

do.end41:                                         ; preds = %do.end31
  %trc_reader_nesting = getelementptr inbounds %struct.task_struct, ptr %249, i32 0, i32 44
  %252 = ptrtoint ptr %trc_reader_nesting to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load volatile i32, ptr %trc_reader_nesting, align 4
  %tobool45.not = icmp eq i32 %253, 0
  br i1 %tobool45.not, label %do.end60, label %do.end87, !prof !1646

do.end60:                                         ; preds = %do.end41
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2180
  %254 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load ptr, ptr %task, align 8
  %trc_reader_checked68 = getelementptr inbounds %struct.task_struct, ptr %255, i32 0, i32 47
  %256 = ptrtoint ptr %trc_reader_checked68 to i32
  call void @__asan_store1_noabort(i32 %256)
  store volatile i8 1, ptr %trc_reader_checked68, align 64
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2181
  br label %do.end87

do.end87:                                         ; preds = %do.end60, %do.end41, %do.end31
  call void @__might_resched(ptr noundef nonnull @.str.97, i32 noundef 781, i32 noundef 0) #24
  %call.i = call i32 @__cond_resched() #24
  br label %for.cond
}

; Function Attrs: noreturn nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rcu_nocb_cb_kthread(ptr noundef %arg) #18 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %cur_gp_seq.i = alloca i32, align 4
  %__wait.i = alloca %struct.swait_queue, align 4
  %mynode.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 7
  %flags1.i.i.i.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 13, i32 5
  %nocb_cb_sleep.i.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 50
  %0 = getelementptr inbounds %struct.swait_queue, ptr %__wait.i, i32 0, i32 1
  %1 = getelementptr inbounds %struct.swait_queue, ptr %__wait.i, i32 0, i32 1, i32 1
  %nocb_cb_wq.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 28
  %cpu.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 68
  %cblist1.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 13
  %nocb_lock.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 31
  %nocb_state_wq.i = getelementptr inbounds %struct.rcu_data, ptr %arg, i32 0, i32 29
  br label %for.cond

for.cond:                                         ; preds = %do.end77, %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cur_gp_seq.i) #24
  %2 = ptrtoint ptr %cur_gp_seq.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %cur_gp_seq.i, align 4, !annotation !1767
  %3 = ptrtoint ptr %mynode.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mynode.i, align 16
  br label %do.body.i

do.body.i:                                        ; preds = %do.cond54.i, %for.cond
  %5 = ptrtoint ptr %flags1.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load volatile i8, ptr %flags1.i.i.i.i, align 4
  %7 = and i8 %6, 40
  %tobool.i.i.not.i.i = icmp eq i8 %7, 0
  br i1 %tobool.i.i.not.i.i, label %if.then.i, label %nocb_cb_wait_cond.exit.i

nocb_cb_wait_cond.exit.i:                         ; preds = %do.body.i
  %8 = ptrtoint ptr %nocb_cb_sleep.i.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load volatile i8, ptr %nocb_cb_sleep.i.i, align 4, !range !1644
  %tobool.not.i.i = icmp eq i8 %9, 0
  br i1 %tobool.not.i.i, label %if.end9.i, label %if.then.i

if.then.i:                                        ; preds = %nocb_cb_wait_cond.exit.i, %do.body.i
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %__wait.i) #24
  %10 = ptrtoint ptr %__wait.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 -1 to ptr), ptr %__wait.i, align 4, !annotation !1767
  %11 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %0, ptr %0, align 4
  %12 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %0, ptr %1, align 4
  br label %for.cond.i

for.cond.i:                                       ; preds = %cleanup.i, %if.then.i
  %call3.i = call i32 @prepare_to_swait_event(ptr noundef %nocb_cb_wq.i, ptr noundef nonnull %__wait.i, i32 noundef 1) #24
  %13 = ptrtoint ptr %flags1.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load volatile i8, ptr %flags1.i.i.i.i, align 4
  %15 = and i8 %14, 40
  %tobool.i.i.not.i585.i = icmp eq i8 %15, 0
  br i1 %tobool.i.i.not.i585.i, label %if.end.i, label %nocb_cb_wait_cond.exit589.i

nocb_cb_wait_cond.exit589.i:                      ; preds = %for.cond.i
  %16 = ptrtoint ptr %nocb_cb_sleep.i.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load volatile i8, ptr %nocb_cb_sleep.i.i, align 4, !range !1644
  %tobool.not.i587.i = icmp eq i8 %17, 0
  br i1 %tobool.not.i587.i, label %for.end.i, label %if.end.i

if.end.i:                                         ; preds = %nocb_cb_wait_cond.exit589.i, %for.cond.i
  %tobool.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool.not.i, label %cleanup.i, label %__out.i

cleanup.i:                                        ; preds = %if.end.i
  call void @schedule() #24
  br label %for.cond.i

for.end.i:                                        ; preds = %nocb_cb_wait_cond.exit589.i
  call void @finish_swait(ptr noundef %nocb_cb_wq.i, ptr noundef nonnull %__wait.i) #24
  br label %__out.i

__out.i:                                          ; preds = %for.end.i, %if.end.i
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %__wait.i) #24
  br label %if.end9.i

if.end9.i:                                        ; preds = %__out.i, %nocb_cb_wait_cond.exit.i
  %18 = ptrtoint ptr %nocb_cb_sleep.i.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load volatile i8, ptr %nocb_cb_sleep.i.i, align 4, !range !1644
  %tobool13.not.i = icmp eq i8 %19, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2182
  br i1 %tobool13.not.i, label %do.cond54.i, label %if.then23.i

if.then23.i:                                      ; preds = %if.end9.i
  %20 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task.i, align 8
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %stack.i.i.i, align 4
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %25, align 4
  %28 = and i32 %27, 256
  %tobool.not.i590.i = icmp eq i32 %28, 0
  br i1 %tobool.not.i590.i, label %signal_pending.exit.i, label %do.end38.i, !prof !1646

signal_pending.exit.i:                            ; preds = %if.then23.i
  %29 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %25, align 4
  %and1.i.i.i.i.i.i = and i32 %30, 1
  %tobool26.not.i = icmp eq i32 %and1.i.i.i.i.i.i, 0
  br i1 %tobool26.not.i, label %if.end44.i, label %do.end38.i, !prof !1646

do.end38.i:                                       ; preds = %signal_pending.exit.i, %if.then23.i
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 818, i32 noundef 9, ptr noundef null) #24
  br label %if.end44.i

if.end44.i:                                       ; preds = %do.end38.i, %signal_pending.exit.i
  %31 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %32 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cpu.i, align 64
  %34 = load ptr, ptr @nocb_cb_wait.___tp_str, align 4
  call fastcc void @trace_rcu_nocb_wake(ptr noundef %31, i32 noundef %33, ptr noundef %34) #24
  br label %do.cond54.i

do.cond54.i:                                      ; preds = %if.end44.i, %if.end9.i
  %35 = ptrtoint ptr %flags1.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load volatile i8, ptr %flags1.i.i.i.i, align 4
  %37 = and i8 %36, 40
  %tobool.i.i.not.i = icmp eq i8 %37, 0
  br i1 %tobool.i.i.not.i, label %do.body.i, label %do.body60.i

do.body60.i:                                      ; preds = %do.cond54.i
  %38 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i591.i = and i32 %38, 128
  %tobool72.not.i = icmp eq i32 %and.i591.i, 0
  br i1 %tobool72.not.i, label %if.then86.i, label %do.end76.i

do.end76.i:                                       ; preds = %do.body60.i
  call void @rcu_momentary_dyntick_idle() #24
  br label %do.body88.i

if.then86.i:                                      ; preds = %do.body60.i
  call void @trace_hardirqs_off() #24
  call void @rcu_momentary_dyntick_idle() #24
  call void @trace_hardirqs_on() #24
  br label %do.body88.i

do.body88.i:                                      ; preds = %if.then86.i, %do.end76.i
  %39 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #24, !srcloc !1649
  %and.i.i.i = and i32 %39, 128
  %tobool96.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool96.not.i, label %if.then105.i, label %do.end108.i, !prof !1645

if.then105.i:                                     ; preds = %do.body88.i
  call void @warn_bogus_irq_restore() #24
  br label %do.end108.i

do.end108.i:                                      ; preds = %if.then105.i, %do.body88.i
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %38) #24, !srcloc !1679
  call fastcc void @local_bh_disable() #24
  call fastcc void @rcu_do_batch(ptr noundef %arg) #24
  call fastcc void @local_bh_enable() #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %40 = load i32, ptr @debug_locks, align 4
  %tobool114.not.i = icmp eq i32 %40, 0
  br i1 %tobool114.not.i, label %if.end220.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.end108.i
  %41 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i.i = and i32 %41, -16384
  %42 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %44, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2183
  %45 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i593.i = and i32 %45, -16384
  %46 = inttoptr i32 %and.i593.i to ptr
  %cpu133.i = getelementptr inbounds %struct.thread_info, ptr %46, i32 0, i32 3
  %47 = ptrtoint ptr %cpu133.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %cpu133.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %48
  %49 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %50, ptrtoint (ptr @lockdep_recursion to i32)
  %51 = inttoptr i32 %add.i to ptr
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %51, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2184
  %54 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i564.i = and i32 %54, -16384
  %55 = inttoptr i32 %and.i.i.i564.i to ptr
  %preempt_count.i.i565.i = getelementptr inbounds %struct.thread_info, ptr %55, i32 0, i32 1
  %56 = ptrtoint ptr %preempt_count.i.i565.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %preempt_count.i.i565.i, align 4
  %sub.i.i = add i32 %57, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i565.i, align 4
  %tobool140.not.i = icmp eq i32 %53, 0
  br i1 %tobool140.not.i, label %land.rhs.i, label %if.end220.i

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %58 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i566.i = and i32 %58, -16384
  %59 = inttoptr i32 %and.i.i.i566.i to ptr
  %preempt_count.i.i567.i = getelementptr inbounds %struct.thread_info, ptr %59, i32 0, i32 1
  %60 = ptrtoint ptr %preempt_count.i.i567.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %preempt_count.i.i567.i, align 4
  %add.i568.i = add i32 %61, 1
  store volatile i32 %add.i568.i, ptr %preempt_count.i.i567.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2185
  %62 = ptrtoint ptr %cpu133.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %cpu133.i, align 4
  %arrayidx164.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %63
  %64 = ptrtoint ptr %arrayidx164.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %arrayidx164.i, align 4
  %add165.i = add i32 %65, ptrtoint (ptr @hardirqs_enabled to i32)
  %66 = inttoptr i32 %add165.i to ptr
  %67 = ptrtoint ptr %66 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %66, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2186
  %69 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i569.i = and i32 %69, -16384
  %70 = inttoptr i32 %and.i.i.i569.i to ptr
  %preempt_count.i.i570.i = getelementptr inbounds %struct.thread_info, ptr %70, i32 0, i32 1
  %71 = ptrtoint ptr %preempt_count.i.i570.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load volatile i32, ptr %preempt_count.i.i570.i, align 4
  %sub.i571.i = add i32 %72, -1
  store volatile i32 %sub.i571.i, ptr %preempt_count.i.i570.i, align 4
  %tobool172.not.i = icmp eq i32 %68, 0
  br i1 %tobool172.not.i, label %land.rhs182.i, label %if.end220.i

land.rhs182.i:                                    ; preds = %land.rhs.i
  %.b555.i = load i1, ptr @nocb_cb_wait.__already_done, align 1
  br i1 %.b555.i, label %if.end220.i, label %if.then193.i, !prof !1646

if.then193.i:                                     ; preds = %land.rhs182.i
  store i1 true, ptr @nocb_cb_wait.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 836, i32 noundef 9, ptr noundef null) #24
  br label %if.end220.i

if.end220.i:                                      ; preds = %if.then193.i, %land.rhs182.i, %land.rhs.i, %land.lhs.true.i, %do.end108.i
  %73 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #24, !srcloc !1678
  %and.i594.i = and i32 %73, 128
  %tobool248.not.i = icmp eq i32 %and.i594.i, 0
  br i1 %tobool248.not.i, label %if.then249.i, label %do.end252.i

if.then249.i:                                     ; preds = %if.end220.i
  call void @trace_hardirqs_off() #24
  br label %do.end252.i

do.end252.i:                                      ; preds = %if.then249.i, %if.end220.i
  %74 = ptrtoint ptr %flags1.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %74)
  %75 = load volatile i8, ptr %flags1.i.i.i.i, align 4
  %76 = and i8 %75, 4
  %tobool.i.i596.not.i = icmp eq i8 %76, 0
  br i1 %tobool.i.i596.not.i, label %do.end258.i, label %if.then255.i

if.then255.i:                                     ; preds = %do.end252.i
  call void @_raw_spin_lock(ptr noundef %nocb_lock.i) #24
  br label %do.end258.i

do.end258.i:                                      ; preds = %if.then255.i, %do.end252.i
  %call259.i = call zeroext i1 @rcu_segcblist_nextgp(ptr noundef %cblist1.i, ptr noundef nonnull %cur_gp_seq.i) #24
  br i1 %call259.i, label %land.lhs.true261.i, label %if.end412.i

land.lhs.true261.i:                               ; preds = %do.end258.i
  %gp_seq.i = getelementptr inbounds %struct.rcu_node, ptr %4, i32 0, i32 1
  %77 = ptrtoint ptr %cur_gp_seq.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %cur_gp_seq.i, align 4
  %79 = ptrtoint ptr %gp_seq.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load volatile i32, ptr %gp_seq.i, align 4
  %sub.i597.i = sub i32 %80, %78
  %cmp.i.i = icmp sgt i32 %sub.i597.i, -1
  br i1 %cmp.i.i, label %land.lhs.true264.i, label %if.end412.i

land.lhs.true264.i:                               ; preds = %land.lhs.true261.i
  %call265.i = call i32 @_raw_spin_trylock(ptr noundef %4) #24
  %tobool266.not.i = icmp eq i32 %call265.i, 0
  br i1 %tobool266.not.i, label %if.end412.i, label %if.then279.i

if.then279.i:                                     ; preds = %land.lhs.true264.i
  %81 = ptrtoint ptr %mynode.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %mynode.i, align 16
  %call281.i = call fastcc zeroext i1 @rcu_advance_cbs(ptr noundef %82, ptr noundef %arg) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %83 = load i32, ptr @debug_locks, align 4
  %tobool286.not.i = icmp eq i32 %83, 0
  br i1 %tobool286.not.i, label %if.end399.i, label %land.lhs.true287.i

land.lhs.true287.i:                               ; preds = %if.then279.i
  %84 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i572.i = and i32 %84, -16384
  %85 = inttoptr i32 %and.i.i.i572.i to ptr
  %preempt_count.i.i573.i = getelementptr inbounds %struct.thread_info, ptr %85, i32 0, i32 1
  %86 = ptrtoint ptr %preempt_count.i.i573.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load volatile i32, ptr %preempt_count.i.i573.i, align 4
  %add.i574.i = add i32 %87, 1
  store volatile i32 %add.i574.i, ptr %preempt_count.i.i573.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2187
  %88 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i598.i = and i32 %88, -16384
  %89 = inttoptr i32 %and.i598.i to ptr
  %cpu310.i = getelementptr inbounds %struct.thread_info, ptr %89, i32 0, i32 3
  %90 = ptrtoint ptr %cpu310.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %cpu310.i, align 4
  %arrayidx311.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %91
  %92 = ptrtoint ptr %arrayidx311.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %arrayidx311.i, align 4
  %add312.i = add i32 %93, ptrtoint (ptr @lockdep_recursion to i32)
  %94 = inttoptr i32 %add312.i to ptr
  %95 = ptrtoint ptr %94 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load volatile i32, ptr %94, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2188
  %97 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i575.i = and i32 %97, -16384
  %98 = inttoptr i32 %and.i.i.i575.i to ptr
  %preempt_count.i.i576.i = getelementptr inbounds %struct.thread_info, ptr %98, i32 0, i32 1
  %99 = ptrtoint ptr %preempt_count.i.i576.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load volatile i32, ptr %preempt_count.i.i576.i, align 4
  %sub.i577.i = add i32 %100, -1
  store volatile i32 %sub.i577.i, ptr %preempt_count.i.i576.i, align 4
  %tobool319.not.i = icmp eq i32 %96, 0
  br i1 %tobool319.not.i, label %land.rhs320.i, label %if.end399.i

land.rhs320.i:                                    ; preds = %land.lhs.true287.i
  %101 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i578.i = and i32 %101, -16384
  %102 = inttoptr i32 %and.i.i.i578.i to ptr
  %preempt_count.i.i579.i = getelementptr inbounds %struct.thread_info, ptr %102, i32 0, i32 1
  %103 = ptrtoint ptr %preempt_count.i.i579.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load volatile i32, ptr %preempt_count.i.i579.i, align 4
  %add.i580.i = add i32 %104, 1
  store volatile i32 %add.i580.i, ptr %preempt_count.i.i579.i, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2189
  %105 = ptrtoint ptr %cpu310.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %cpu310.i, align 4
  %arrayidx344.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %106
  %107 = ptrtoint ptr %arrayidx344.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %arrayidx344.i, align 4
  %add345.i = add i32 %108, ptrtoint (ptr @hardirqs_enabled to i32)
  %109 = inttoptr i32 %add345.i to ptr
  %110 = ptrtoint ptr %109 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load volatile i32, ptr %109, align 4
  call void asm sideeffect "", "~{memory}"() #24, !srcloc !2190
  %112 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i.i581.i = and i32 %112, -16384
  %113 = inttoptr i32 %and.i.i.i581.i to ptr
  %preempt_count.i.i582.i = getelementptr inbounds %struct.thread_info, ptr %113, i32 0, i32 1
  %114 = ptrtoint ptr %preempt_count.i.i582.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load volatile i32, ptr %preempt_count.i.i582.i, align 4
  %sub.i583.i = add i32 %115, -1
  store volatile i32 %sub.i583.i, ptr %preempt_count.i.i582.i, align 4
  %tobool352.not.i = icmp eq i32 %111, 0
  br i1 %tobool352.not.i, label %if.end399.i, label %land.rhs361.i

land.rhs361.i:                                    ; preds = %land.rhs320.i
  %.b550554.i = load i1, ptr @nocb_cb_wait.__already_done.512, align 1
  br i1 %.b550554.i, label %if.end399.i, label %if.then372.i, !prof !1646

if.then372.i:                                     ; preds = %land.rhs361.i
  store i1 true, ptr @nocb_cb_wait.__already_done.512, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 842, i32 noundef 9, ptr noundef null) #24
  br label %if.end399.i

if.end399.i:                                      ; preds = %if.then372.i, %land.rhs361.i, %land.rhs320.i, %land.lhs.true287.i, %if.then279.i
  call void @_raw_spin_unlock(ptr noundef %4) #24
  br label %if.end412.i

if.end412.i:                                      ; preds = %if.end399.i, %land.lhs.true264.i, %land.lhs.true261.i, %do.end258.i
  %needwake_gp.0.off0.i = phi i1 [ %call281.i, %if.end399.i ], [ false, %land.lhs.true264.i ], [ false, %land.lhs.true261.i ], [ false, %do.end258.i ]
  %116 = ptrtoint ptr %flags1.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %116)
  %117 = load volatile i8, ptr %flags1.i.i.i.i, align 4
  %118 = and i8 %117, 32
  %tobool.i.not.i = icmp eq i8 %118, 0
  %119 = load volatile i8, ptr %flags1.i.i.i.i, align 4
  %120 = and i8 %119, 8
  %tobool.i612.not.i = icmp eq i8 %120, 0
  br i1 %tobool.i.not.i, label %if.else.i, label %if.then414.i

if.then414.i:                                     ; preds = %if.end412.i
  br i1 %tobool.i612.not.i, label %if.then416.i, label %do.body489.i

if.then416.i:                                     ; preds = %if.then414.i
  %conv2.i.i = or i8 %119, 8
  %121 = ptrtoint ptr %flags1.i.i.i.i to i32
  call void @__asan_store1_noabort(i32 %121)
  store i8 %conv2.i.i, ptr %flags1.i.i.i.i, align 4
  %122 = load volatile i8, ptr %flags1.i.i.i.i, align 4
  %123 = and i8 %122, 16
  %tobool.i608.i = icmp ne i8 %123, 0
  br label %do.body489.i

if.else.i:                                        ; preds = %if.end412.i
  br i1 %tobool.i612.not.i, label %land.rhs435.i, label %do.body489.thread.i

land.rhs435.i:                                    ; preds = %if.else.i
  %.b551553.i = load i1, ptr @nocb_cb_wait.__already_done.513, align 1
  br i1 %.b551553.i, label %do.body489.thread.i, label %if.then446.i, !prof !1646

if.then446.i:                                     ; preds = %land.rhs435.i
  store i1 true, ptr @nocb_cb_wait.__already_done.513, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 859, i32 noundef 9, ptr noundef null) #24
  br label %do.body489.thread.i

do.body489.thread.i:                              ; preds = %if.then446.i, %land.rhs435.i, %if.else.i
  %124 = ptrtoint ptr %flags1.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %124)
  %125 = load i8, ptr %flags1.i.i.i.i, align 4
  %conv2.i614.i = and i8 %125, -9
  store i8 %conv2.i614.i, ptr %flags1.i.i.i.i, align 4
  %126 = load volatile i8, ptr %flags1.i.i.i.i, align 4
  %127 = and i8 %126, 16
  %tobool.i618.not.i = icmp eq i8 %127, 0
  %128 = ptrtoint ptr %nocb_cb_sleep.i.i to i32
  call void @__asan_store1_noabort(i32 %128)
  store volatile i8 1, ptr %nocb_cb_sleep.i.i, align 4
  br label %if.then499.i

do.body489.i:                                     ; preds = %if.then416.i, %if.then414.i
  %needwake_state.0.i = phi i1 [ false, %if.then414.i ], [ %tobool.i608.i, %if.then416.i ]
  %call421.i = call zeroext i1 @rcu_segcblist_ready_cbs(ptr noundef %cblist1.i) #24
  %not.call421.i = xor i1 %call421.i, true
  %frombool492.i = zext i1 %not.call421.i to i8
  %129 = ptrtoint ptr %nocb_cb_sleep.i.i to i32
  call void @__asan_store1_noabort(i32 %129)
  store volatile i8 %frombool492.i, ptr %nocb_cb_sleep.i.i, align 4
  br i1 %call421.i, label %if.end502.i, label %if.then499.i

if.then499.i:                                     ; preds = %do.body489.i, %do.body489.thread.i
  %needwake_state.1.off0635.i = phi i1 [ %tobool.i618.not.i, %do.body489.thread.i ], [ %needwake_state.0.i, %do.body489.i ]
  %130 = load ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 36), align 16
  %131 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %cpu.i, align 64
  %133 = load ptr, ptr @nocb_cb_wait.___tp_str.514, align 4
  call fastcc void @trace_rcu_nocb_wake(ptr noundef %130, i32 noundef %132, ptr noundef %133) #24
  br label %if.end502.i

if.end502.i:                                      ; preds = %if.then499.i, %do.body489.i
  %needwake_state.1.off0634.i = phi i1 [ %needwake_state.1.off0635.i, %if.then499.i ], [ %needwake_state.0.i, %do.body489.i ]
  call fastcc void @rcu_nocb_unlock_irqrestore(ptr noundef %arg, i32 noundef %73) #24
  br i1 %needwake_gp.0.off0.i, label %if.then504.i, label %if.end505.i

if.then504.i:                                     ; preds = %if.end502.i
  %134 = load volatile ptr, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 8), align 4
  %135 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i619.i = and i32 %135, -16384
  %136 = inttoptr i32 %and.i.i619.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %136, i32 0, i32 2
  %137 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %task.i.i, align 8
  %cmp.i620.i = icmp eq ptr %138, %134
  br i1 %cmp.i620.i, label %land.lhs.true.i.i, label %do.end9.i.i

land.lhs.true.i.i:                                ; preds = %if.then504.i
  %preempt_count.i.i621.i = getelementptr inbounds %struct.thread_info, ptr %136, i32 0, i32 1
  %139 = ptrtoint ptr %preempt_count.i.i621.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load volatile i32, ptr %preempt_count.i.i621.i, align 4
  %and.i622.i = and i32 %140, 983040
  %tobool.not.i623.i = icmp eq i32 %and.i622.i, 0
  br i1 %tobool.not.i623.i, label %land.lhs.true2.i.i, label %do.end9.i.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %141 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i.i37.i.i = and i32 %141, -16384
  %142 = inttoptr i32 %and.i.i37.i.i to ptr
  %preempt_count.i38.i.i = getelementptr inbounds %struct.thread_info, ptr %142, i32 0, i32 1
  %143 = ptrtoint ptr %preempt_count.i38.i.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load volatile i32, ptr %preempt_count.i38.i.i, align 4
  %and5.i.i = and i32 %144, 256
  %tobool6.not.i.i = icmp eq i32 %and5.i.i, 0
  br i1 %tobool6.not.i.i, label %if.end505.i, label %do.end9.i.i

do.end9.i.i:                                      ; preds = %land.lhs.true2.i.i, %land.lhs.true.i.i, %if.then504.i
  %145 = load volatile i16, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 10), align 4
  %tobool11.not.i.i = icmp eq i16 %145, 0
  %tobool13.not.i.i = icmp eq ptr %134, null
  %or.cond.i.i = select i1 %tobool11.not.i.i, i1 true, i1 %tobool13.not.i.i
  br i1 %or.cond.i.i, label %if.end505.i, label %do.body18.i.i

do.body18.i.i:                                    ; preds = %do.end9.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %146 = load volatile i32, ptr @jiffies, align 128
  store volatile i32 %146, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 12), align 8
  %147 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 6), align 4
  store volatile i32 %147, ptr getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 13), align 4
  call void @swake_up_one(ptr noundef getelementptr inbounds (%struct.rcu_state, ptr @rcu_state, i32 0, i32 9)) #24
  br label %if.end505.i

if.end505.i:                                      ; preds = %do.body18.i.i, %do.end9.i.i, %land.lhs.true2.i.i, %if.end502.i
  br i1 %needwake_state.1.off0634.i, label %if.then507.i, label %nocb_cb_wait.exit

if.then507.i:                                     ; preds = %if.end505.i
  call void @swake_up_one(ptr noundef %nocb_state_wq.i) #24
  br label %nocb_cb_wait.exit

nocb_cb_wait.exit:                                ; preds = %if.then507.i, %if.end505.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cur_gp_seq.i) #24
  %148 = call i32 @llvm.read_register.i32(metadata !1634) #24
  %and.i = and i32 %148, -16384
  %149 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %149, i32 0, i32 2
  %150 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %task, align 8
  %rcu_tasks_holdout = getelementptr inbounds %struct.task_struct, ptr %151, i32 0, i32 40
  %152 = ptrtoint ptr %rcu_tasks_holdout to i32
  call void @__asan_load1_noabort(i32 %152)
  %153 = load volatile i8, ptr %rcu_tasks_holdout, align 4
  %tobool.not = icmp eq i8 %153, 0
  br i1 %tobool.not, label %do.end21, label %do.body8

do.body8:                                         ; preds = %nocb_cb_wait.exit
  %154 = ptrtoint ptr %rcu_tasks_holdout to i32
  call void @__asan_store1_noabort(i32 %154)
  store volatile i8 0, ptr %rcu_tasks_holdout, align 4
  br label %do.end21

do.end21:                                         ; preds = %do.body8, %nocb_cb_wait.exit
  %155 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load ptr, ptr %task, align 8
  %trc_reader_checked = getelementptr inbounds %struct.task_struct, ptr %156, i32 0, i32 47
  %157 = ptrtoint ptr %trc_reader_checked to i32
  call void @__asan_load1_noabort(i32 %157)
  %158 = load volatile i8, ptr %trc_reader_checked, align 64, !range !1644
  %tobool25.not = icmp eq i8 %158, 0
  br i1 %tobool25.not, label %do.end31, label %do.end77, !prof !1645

do.end31:                                         ; preds = %do.end21
  %trc_reader_nesting = getelementptr inbounds %struct.task_struct, ptr %156, i32 0, i32 44
  %159 = ptrtoint ptr %trc_reader_nesting to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load volatile i32, ptr %trc_reader_nesting, align 4
  %tobool35.not = icmp eq i32 %160, 0
  br i1 %tobool35.not, label %do.end50, label %do.end77, !prof !1646

do.end50:                                         ; preds = %do.end31
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2191
  %161 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load ptr, ptr %task, align 8
  %trc_reader_checked58 = getelementptr inbounds %struct.task_struct, ptr %162, i32 0, i32 47
  %163 = ptrtoint ptr %trc_reader_checked58 to i32
  call void @__asan_store1_noabort(i32 %163)
  store volatile i8 1, ptr %trc_reader_checked58, align 64
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #24, !srcloc !2192
  br label %do.end77

do.end77:                                         ; preds = %do.end50, %do.end31, %do.end21
  call void @__might_resched(ptr noundef nonnull @.str.97, i32 noundef 890, i32 noundef 0) #24
  %call.i = call i32 @__cond_resched() #24
  br label %for.cond
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @int_sqrt(i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__bitmap_weight(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #22

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #23

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lockdep_is_cpus_held() local_unnamed_addr #5

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_bootup_announce_oddness() unnamed_addr #9 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.552) #27
  %0 = load i8, ptr @rcu_fanout_exact, align 1, !range !1644
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %do.end6, label %do.end2

do.end2:                                          ; preds = %entry
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.555) #27
  br label %do.end6

do.end6:                                          ; preds = %do.end2, %entry
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.558) #27
  %call12 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.561) #27
  %call16 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.564, i32 noundef 2) #27
  %1 = load i32, ptr @rcu_fanout_leaf, align 4
  %cmp.not = icmp eq i32 %1, 2
  br i1 %cmp.not, label %if.end22, label %do.end19

do.end19:                                         ; preds = %do.end6
  %call21 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.567, i32 noundef %1) #27
  br label %if.end22

if.end22:                                         ; preds = %do.end19, %do.end6
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  %cmp23.not = icmp eq i32 %2, 4
  br i1 %cmp23.not, label %if.end29, label %do.end26

do.end26:                                         ; preds = %if.end22
  %call28 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.570, i32 noundef 4, i32 noundef %2) #27
  br label %if.end29

if.end29:                                         ; preds = %do.end26, %if.end22
  %3 = load i32, ptr @blimit, align 4
  %cmp30.not = icmp eq i32 %3, 1000
  br i1 %cmp30.not, label %if.end36, label %do.end33

do.end33:                                         ; preds = %if.end29
  %call35 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.573, i32 noundef %3) #27
  br label %if.end36

if.end36:                                         ; preds = %do.end33, %if.end29
  %4 = load i32, ptr @qhimark, align 4
  %cmp37.not = icmp eq i32 %4, 10000
  br i1 %cmp37.not, label %if.end43, label %do.end40

do.end40:                                         ; preds = %if.end36
  %call42 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.576, i32 noundef %4) #27
  br label %if.end43

if.end43:                                         ; preds = %do.end40, %if.end36
  %5 = load i32, ptr @qlowmark, align 4
  %cmp44.not = icmp eq i32 %5, 100
  br i1 %cmp44.not, label %if.end50, label %do.end47

do.end47:                                         ; preds = %if.end43
  %call49 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.579, i32 noundef %5) #27
  br label %if.end50

if.end50:                                         ; preds = %do.end47, %if.end43
  %6 = load i32, ptr @qovld, align 4
  %cmp51.not = icmp eq i32 %6, 20000
  br i1 %cmp51.not, label %if.end57, label %do.end54

do.end54:                                         ; preds = %if.end50
  %call56 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.582, i32 noundef %6) #27
  br label %if.end57

if.end57:                                         ; preds = %do.end54, %if.end50
  %7 = load i32, ptr @jiffies_till_first_fqs, align 4
  %cmp58.not = icmp eq i32 %7, -1
  br i1 %cmp58.not, label %if.end64, label %do.end61

do.end61:                                         ; preds = %if.end57
  %call63 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.585, i32 noundef %7) #27
  br label %if.end64

if.end64:                                         ; preds = %do.end61, %if.end57
  %8 = load i32, ptr @jiffies_till_next_fqs, align 4
  %cmp65.not = icmp eq i32 %8, -1
  br i1 %cmp65.not, label %if.end71, label %do.end68

do.end68:                                         ; preds = %if.end64
  %call70 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.588, i32 noundef %8) #27
  br label %if.end71

if.end71:                                         ; preds = %do.end68, %if.end64
  %9 = load i32, ptr @jiffies_till_sched_qs, align 4
  %cmp72.not = icmp eq i32 %9, -1
  br i1 %cmp72.not, label %if.end78, label %do.end75

do.end75:                                         ; preds = %if.end71
  %call77 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.591, i32 noundef %9) #27
  br label %if.end78

if.end78:                                         ; preds = %do.end75, %if.end71
  %10 = load i8, ptr @rcu_kick_kthreads, align 1, !range !1644
  %tobool79.not = icmp eq i8 %10, 0
  br i1 %tobool79.not, label %do.end87, label %do.end82

do.end82:                                         ; preds = %if.end78
  %call84 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.594) #27
  br label %do.end87

do.end87:                                         ; preds = %do.end82, %if.end78
  %call89 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.597) #27
  %11 = load i32, ptr @gp_preinit_delay, align 4
  %tobool90.not = icmp eq i32 %11, 0
  br i1 %tobool90.not, label %if.end96, label %do.end93

do.end93:                                         ; preds = %do.end87
  %call95 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.600, i32 noundef %11) #27
  br label %if.end96

if.end96:                                         ; preds = %do.end93, %do.end87
  %12 = load i32, ptr @gp_init_delay, align 4
  %tobool97.not = icmp eq i32 %12, 0
  br i1 %tobool97.not, label %if.end103, label %do.end100

do.end100:                                        ; preds = %if.end96
  %call102 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.603, i32 noundef %12) #27
  br label %if.end103

if.end103:                                        ; preds = %do.end100, %if.end96
  %13 = load i32, ptr @gp_cleanup_delay, align 4
  %tobool104.not = icmp eq i32 %13, 0
  br i1 %tobool104.not, label %if.end110, label %do.end107

do.end107:                                        ; preds = %if.end103
  %call109 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.606, i32 noundef %13) #27
  br label %if.end110

if.end110:                                        ; preds = %do.end107, %if.end103
  %14 = load i8, ptr @use_softirq, align 1, !range !1644
  %tobool111.not = icmp eq i8 %14, 0
  br i1 %tobool111.not, label %do.end114, label %do.end119

do.end114:                                        ; preds = %if.end110
  %call116 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.609) #27
  br label %do.end119

do.end119:                                        ; preds = %do.end114, %if.end110
  %call121 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.612) #27
  tail call void @rcupdate_announce_bootup_oddness() #24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcupdate_announce_bootup_oddness() local_unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #23

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #23

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #23

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #23

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #24

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_handle_no_return()

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #25 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 484)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #25 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 484)
  ret void
}

attributes #0 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #2 = { inlinehint mustprogress nofree nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #3 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #4 = { noinline noprofile nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { nounwind readonly }
attributes #16 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #17 = { cold noreturn null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { noreturn nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #19 = { noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #20 = { mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #21 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #22 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #24 = { nounwind }
attributes #25 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #26 = { nounwind readnone willreturn }
attributes #27 = { cold nounwind }
attributes #28 = { nounwind readonly willreturn }
attributes #29 = { cold noreturn nounwind }
attributes #30 = { cold }

!llvm.asan.globals = !{!0, !2, !4, !6, !7, !9, !10, !12, !13, !15, !16, !18, !20, !22, !24, !26, !27, !29, !30, !32, !33, !35, !36, !38, !39, !41, !42, !44, !45, !47, !49, !50, !52, !54, !55, !57, !58, !60, !61, !63, !64, !66, !67, !69, !70, !72, !73, !75, !76, !78, !80, !82, !83, !85, !87, !89, !91, !93, !95, !97, !99, !100, !102, !103, !105, !107, !109, !110, !111, !113, !114, !116, !117, !119, !121, !123, !124, !126, !127, !129, !131, !133, !135, !137, !138, !140, !141, !143, !144, !146, !148, !150, !152, !153, !155, !157, !159, !161, !163, !165, !167, !168, !169, !171, !173, !174, !176, !178, !180, !182, !184, !186, !188, !190, !191, !193, !194, !196, !197, !199, !200, !202, !203, !205, !206, !208, !209, !211, !212, !214, !216, !218, !219, !221, !223, !225, !227, !229, !231, !233, !235, !237, !239, !241, !243, !245, !247, !249, !251, !252, !254, !256, !258, !260, !262, !263, !264, !265, !267, !269, !271, !273, !275, !277, !278, !280, !282, !284, !286, !288, !289, !290, !291, !293, !294, !295, !296, !297, !298, !299, !301, !303, !304, !305, !307, !308, !309, !311, !313, !314, !315, !316, !318, !319, !320, !322, !323, !324, !326, !327, !328, !330, !331, !332, !334, !336, !337, !339, !341, !342, !343, !345, !346, !348, !350, !352, !354, !355, !357, !359, !360, !361, !362, !363, !365, !367, !368, !369, !370, !372, !374, !375, !376, !377, !379, !380, !381, !383, !384, !385, !387, !388, !389, !391, !392, !393, !395, !396, !398, !400, !402, !404, !405, !407, !408, !410, !412, !413, !415, !417, !419, !421, !423, !425, !427, !429, !431, !433, !434, !436, !438, !440, !442, !444, !446, !448, !450, !452, !453, !454, !456, !457, !458, !460, !461, !463, !464, !465, !466, !467, !468, !470, !471, !473, !474, !476, !477, !479, !480, !482, !483, !485, !486, !488, !489, !491, !492, !494, !495, !496, !498, !500, !501, !503, !505, !506, !508, !509, !511, !512, !514, !515, !517, !519, !521, !523, !525, !527, !528, !530, !532, !533, !534, !535, !537, !539, !541, !543, !544, !546, !548, !550, !552, !553, !555, !556, !558, !560, !561, !563, !564, !566, !568, !570, !572, !573, !574, !575, !577, !579, !581, !582, !584, !586, !588, !590, !591, !593, !595, !597, !599, !601, !602, !604, !605, !607, !608, !610, !611, !613, !615, !617, !619, !621, !623, !625, !627, !629, !631, !632, !634, !635, !637, !638, !640, !642, !643, !645, !646, !648, !649, !651, !652, !654, !655, !657, !658, !660, !661, !662, !664, !665, !667, !669, !670, !672, !673, !675, !676, !678, !680, !681, !683, !684, !686, !687, !689, !690, !692, !694, !695, !697, !699, !701, !703, !705, !706, !708, !710, !712, !713, !715, !716, !717, !718, !720, !722, !723, !724, !726, !728, !729, !731, !733, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !746, !747, !748, !749, !751, !752, !753, !755, !756, !757, !758, !760, !761, !762, !764, !765, !766, !768, !769, !770, !772, !773, !774, !776, !778, !779, !780, !781, !783, !785, !787, !789, !791, !792, !794, !795, !796, !797, !799, !801, !803, !804, !805, !807, !808, !809, !811, !812, !813, !815, !817, !818, !820, !821, !823, !824, !826, !827, !829, !831, !832, !834, !835, !837, !838, !840, !842, !844, !846, !848, !850, !852, !853, !855, !857, !859, !860, !861, !862, !864, !866, !867, !869, !871, !872, !874, !875, !877, !878, !879, !880, !882, !883, !884, !886, !888, !890, !892, !893, !895, !897, !899, !901, !903, !905, !907, !909, !911, !913, !915, !917, !918, !920, !921, !923, !924, !926, !927, !929, !930, !932, !933, !935, !937, !939, !941, !943, !945, !946, !948, !949, !951, !953, !955, !956, !957, !958, !960, !961, !962, !964, !965, !966, !967, !969, !971, !973, !975, !977, !979, !980, !982, !983, !985, !987, !989, !991, !993, !994, !996, !997, !998, !1000, !1002, !1004, !1005, !1007, !1008, !1010, !1011, !1013, !1014, !1016, !1017, !1019, !1021, !1022, !1024, !1026, !1027, !1029, !1031, !1033, !1035, !1037, !1039, !1041, !1042, !1044, !1045, !1047, !1048, !1050, !1051, !1052, !1053, !1055, !1056, !1057, !1058, !1060, !1061, !1063, !1064, !1065, !1066, !1068, !1069, !1070, !1071, !1073, !1074, !1075, !1077, !1079, !1080, !1082, !1083, !1085, !1087, !1088, !1090, !1092, !1093, !1095, !1097, !1099, !1101, !1103, !1104, !1106, !1107, !1109, !1110, !1112, !1113, !1115, !1116, !1118, !1119, !1121, !1122, !1124, !1125, !1127, !1128, !1130, !1131, !1133, !1134, !1136, !1137, !1139, !1141, !1143, !1144, !1146, !1147, !1149, !1150, !1152, !1153, !1155, !1156, !1158, !1159, !1161, !1162, !1164, !1166, !1167, !1169, !1170, !1172, !1173, !1175, !1176, !1178, !1179, !1180, !1181, !1183, !1184, !1185, !1187, !1188, !1190, !1191, !1193, !1194, !1195, !1197, !1198, !1200, !1202, !1204, !1206, !1208, !1210, !1212, !1214, !1216, !1218, !1220, !1222, !1224, !1226, !1228, !1230, !1232, !1234, !1236, !1238, !1240, !1241, !1243, !1245, !1247, !1249, !1251, !1253, !1255, !1257, !1259, !1261, !1263, !1264, !1266, !1267, !1269, !1270, !1272, !1273, !1275, !1277, !1278, !1280, !1281, !1283, !1284, !1286, !1287, !1289, !1291, !1293, !1295, !1297, !1299, !1301, !1303, !1305, !1307, !1308, !1310, !1312, !1314, !1315, !1317, !1318, !1320, !1322, !1323, !1325, !1326, !1327, !1328, !1330, !1332, !1333, !1334, !1336, !1337, !1338, !1339, !1341, !1342, !1343, !1345, !1346, !1347, !1349, !1350, !1352, !1354, !1356, !1357, !1358, !1360, !1361, !1362, !1363, !1364, !1365, !1367, !1369, !1371, !1373, !1374, !1376, !1378, !1379, !1381, !1382, !1384, !1385, !1387, !1388, !1390, !1391, !1393, !1395, !1397, !1398, !1399, !1400, !1402, !1404, !1406, !1408, !1409, !1410, !1411, !1413, !1415, !1416, !1417, !1419, !1421, !1422, !1424, !1426, !1428, !1429, !1431, !1432, !1434, !1436, !1438, !1439, !1441, !1442, !1444, !1445, !1447, !1448, !1450, !1451, !1453, !1454, !1456, !1457, !1459, !1461, !1463, !1465, !1466, !1468, !1470, !1472, !1474, !1475, !1476, !1478, !1480, !1481, !1482, !1483, !1484, !1486, !1487, !1488, !1490, !1491, !1492, !1494, !1495, !1497, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1513, !1514, !1515, !1516, !1518, !1519, !1520, !1521, !1522, !1524, !1526, !1528, !1529, !1531, !1533, !1535, !1537, !1538, !1539, !1540, !1542, !1543, !1544, !1545, !1547, !1548, !1549, !1551, !1552, !1553, !1555, !1556, !1557, !1559, !1560, !1561, !1563, !1564, !1565, !1567, !1568, !1569, !1571, !1572, !1573, !1575, !1576, !1577, !1579, !1580, !1581, !1583, !1584, !1585, !1587, !1588, !1589, !1591, !1592, !1593, !1595, !1596, !1597, !1599, !1600, !1601, !1603, !1604, !1605, !1607, !1608, !1609, !1611, !1612, !1613, !1615, !1616, !1617, !1619, !1620, !1621, !1623, !1624, !1625, !1627, !1628, !1630, !1631, !1633}
!llvm.named.register.sp = !{!1634}
!llvm.module.flags = !{!1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642}
!llvm.ident = !{!1643}

!0 = !{ptr @tp_rcu_varname, !1, !"tp_rcu_varname", i1 false, i1 false}
!1 = !{!"../kernel/rcu/tree.h", i32 398, i32 20}
!2 = !{ptr @rcu_data, !3, !"rcu_data", i1 false, i1 false}
!3 = !{!"../kernel/rcu/tree.c", i32 77, i32 8}
!4 = !{ptr @__param_dump_tree, !5, !"__param_dump_tree", i1 false, i1 false}
!5 = !{!"../kernel/rcu/tree.c", i32 99, i32 1}
!6 = !{ptr @__UNIQUE_ID_dump_treetype365, !5, !"__UNIQUE_ID_dump_treetype365", i1 false, i1 false}
!7 = !{ptr @__param_use_softirq, !8, !"__param_use_softirq", i1 false, i1 false}
!8 = !{!"../kernel/rcu/tree.c", i32 103, i32 1}
!9 = !{ptr @__UNIQUE_ID_use_softirqtype366, !8, !"__UNIQUE_ID_use_softirqtype366", i1 false, i1 false}
!10 = !{ptr @__param_rcu_fanout_exact, !11, !"__param_rcu_fanout_exact", i1 false, i1 false}
!11 = !{!"../kernel/rcu/tree.c", i32 107, i32 1}
!12 = !{ptr @__UNIQUE_ID_rcu_fanout_exacttype367, !11, !"__UNIQUE_ID_rcu_fanout_exacttype367", i1 false, i1 false}
!13 = !{ptr @__param_rcu_fanout_leaf, !14, !"__param_rcu_fanout_leaf", i1 false, i1 false}
!14 = !{!"../kernel/rcu/tree.c", i32 110, i32 1}
!15 = !{ptr @__UNIQUE_ID_rcu_fanout_leaftype368, !14, !"__UNIQUE_ID_rcu_fanout_leaftype368", i1 false, i1 false}
!16 = !{ptr @rcu_num_lvls, !17, !"rcu_num_lvls", i1 false, i1 false}
!17 = !{!"../kernel/rcu/tree.c", i32 111, i32 5}
!18 = !{ptr @num_rcu_lvl, !19, !"num_rcu_lvl", i1 false, i1 false}
!19 = !{!"../kernel/rcu/tree.c", i32 113, i32 5}
!20 = !{ptr @rcu_num_nodes, !21, !"rcu_num_nodes", i1 false, i1 false}
!21 = !{!"../kernel/rcu/tree.c", i32 114, i32 5}
!22 = !{ptr @__ksymtab_rcu_scheduler_active, !23, !"__ksymtab_rcu_scheduler_active", i1 false, i1 false}
!23 = !{!"../kernel/rcu/tree.c", i32 129, i32 1}
!24 = !{ptr @__param_kthread_prio, !25, !"__param_kthread_prio", i1 false, i1 false}
!25 = !{!"../kernel/rcu/tree.c", i32 158, i32 1}
!26 = !{ptr @__UNIQUE_ID_kthread_priotype369, !25, !"__UNIQUE_ID_kthread_priotype369", i1 false, i1 false}
!27 = !{ptr @__param_gp_preinit_delay, !28, !"__param_gp_preinit_delay", i1 false, i1 false}
!28 = !{!"../kernel/rcu/tree.c", i32 163, i32 1}
!29 = !{ptr @__UNIQUE_ID_gp_preinit_delaytype370, !28, !"__UNIQUE_ID_gp_preinit_delaytype370", i1 false, i1 false}
!30 = !{ptr @__param_gp_init_delay, !31, !"__param_gp_init_delay", i1 false, i1 false}
!31 = !{!"../kernel/rcu/tree.c", i32 165, i32 1}
!32 = !{ptr @__UNIQUE_ID_gp_init_delaytype371, !31, !"__UNIQUE_ID_gp_init_delaytype371", i1 false, i1 false}
!33 = !{ptr @__param_gp_cleanup_delay, !34, !"__param_gp_cleanup_delay", i1 false, i1 false}
!34 = !{!"../kernel/rcu/tree.c", i32 167, i32 1}
!35 = !{ptr @__UNIQUE_ID_gp_cleanup_delaytype372, !34, !"__UNIQUE_ID_gp_cleanup_delaytype372", i1 false, i1 false}
!36 = !{ptr @__param_rcu_unlock_delay, !37, !"__param_rcu_unlock_delay", i1 false, i1 false}
!37 = !{!"../kernel/rcu/tree.c", i32 172, i32 1}
!38 = !{ptr @__UNIQUE_ID_rcu_unlock_delaytype373, !37, !"__UNIQUE_ID_rcu_unlock_delaytype373", i1 false, i1 false}
!39 = !{ptr @__param_rcu_min_cached_objs, !40, !"__param_rcu_min_cached_objs", i1 false, i1 false}
!40 = !{!"../kernel/rcu/tree.c", i32 182, i32 1}
!41 = !{ptr @__UNIQUE_ID_rcu_min_cached_objstype374, !40, !"__UNIQUE_ID_rcu_min_cached_objstype374", i1 false, i1 false}
!42 = !{ptr @__param_rcu_delay_page_cache_fill_msec, !43, !"__param_rcu_delay_page_cache_fill_msec", i1 false, i1 false}
!43 = !{!"../kernel/rcu/tree.c", i32 193, i32 1}
!44 = !{ptr @__UNIQUE_ID_rcu_delay_page_cache_fill_msectype375, !43, !"__UNIQUE_ID_rcu_delay_page_cache_fill_msectype375", i1 false, i1 false}
!45 = !{ptr @__ksymtab_rcu_get_gp_kthreads_prio, !46, !"__ksymtab_rcu_get_gp_kthreads_prio", i1 false, i1 false}
!46 = !{!"../kernel/rcu/tree.c", i32 200, i32 1}
!47 = distinct !{null, !48, !"__already_done", i1 false, i1 false}
!48 = !{!"../kernel/rcu/tree.c", i32 409, i32 2}
!49 = !{ptr @.str, !48, !"<string literal>", i1 false, i1 false}
!50 = !{ptr @__ksymtab_rcu_momentary_dyntick_idle, !51, !"__ksymtab_rcu_momentary_dyntick_idle", i1 false, i1 false}
!51 = !{!"../kernel/rcu/tree.c", i32 412, i32 1}
!52 = !{ptr @__param_blimit, !53, !"__param_blimit", i1 false, i1 false}
!53 = !{!"../kernel/rcu/tree.c", i32 466, i32 1}
!54 = !{ptr @__UNIQUE_ID_blimittype393, !53, !"__UNIQUE_ID_blimittype393", i1 false, i1 false}
!55 = !{ptr @__param_qhimark, !56, !"__param_qhimark", i1 false, i1 false}
!56 = !{!"../kernel/rcu/tree.c", i32 467, i32 1}
!57 = !{ptr @__UNIQUE_ID_qhimarktype394, !56, !"__UNIQUE_ID_qhimarktype394", i1 false, i1 false}
!58 = !{ptr @__param_qlowmark, !59, !"__param_qlowmark", i1 false, i1 false}
!59 = !{!"../kernel/rcu/tree.c", i32 468, i32 1}
!60 = !{ptr @__UNIQUE_ID_qlowmarktype395, !59, !"__UNIQUE_ID_qlowmarktype395", i1 false, i1 false}
!61 = !{ptr @__param_qovld, !62, !"__param_qovld", i1 false, i1 false}
!62 = !{!"../kernel/rcu/tree.c", i32 469, i32 1}
!63 = !{ptr @__UNIQUE_ID_qovldtype396, !62, !"__UNIQUE_ID_qovldtype396", i1 false, i1 false}
!64 = !{ptr @__param_rcu_divisor, !65, !"__param_rcu_divisor", i1 false, i1 false}
!65 = !{!"../kernel/rcu/tree.c", i32 475, i32 1}
!66 = !{ptr @__UNIQUE_ID_rcu_divisortype397, !65, !"__UNIQUE_ID_rcu_divisortype397", i1 false, i1 false}
!67 = !{ptr @__param_rcu_resched_ns, !68, !"__param_rcu_resched_ns", i1 false, i1 false}
!68 = !{!"../kernel/rcu/tree.c", i32 479, i32 1}
!69 = !{ptr @__UNIQUE_ID_rcu_resched_nstype398, !68, !"__UNIQUE_ID_rcu_resched_nstype398", i1 false, i1 false}
!70 = !{ptr @__param_jiffies_till_sched_qs, !71, !"__param_jiffies_till_sched_qs", i1 false, i1 false}
!71 = !{!"../kernel/rcu/tree.c", i32 486, i32 1}
!72 = !{ptr @__UNIQUE_ID_jiffies_till_sched_qstype399, !71, !"__UNIQUE_ID_jiffies_till_sched_qstype399", i1 false, i1 false}
!73 = !{ptr @__param_jiffies_to_sched_qs, !74, !"__param_jiffies_to_sched_qs", i1 false, i1 false}
!74 = !{!"../kernel/rcu/tree.c", i32 488, i32 1}
!75 = !{ptr @__UNIQUE_ID_jiffies_to_sched_qstype400, !74, !"__UNIQUE_ID_jiffies_to_sched_qstype400", i1 false, i1 false}
!76 = !{ptr @__param_jiffies_till_first_fqs, !77, !"__param_jiffies_till_first_fqs", i1 false, i1 false}
!77 = !{!"../kernel/rcu/tree.c", i32 548, i32 1}
!78 = !{ptr @__param_jiffies_till_next_fqs, !79, !"__param_jiffies_till_next_fqs", i1 false, i1 false}
!79 = !{!"../kernel/rcu/tree.c", i32 549, i32 1}
!80 = !{ptr @__param_rcu_kick_kthreads, !81, !"__param_rcu_kick_kthreads", i1 false, i1 false}
!81 = !{!"../kernel/rcu/tree.c", i32 550, i32 1}
!82 = !{ptr @__UNIQUE_ID_rcu_kick_kthreadstype407, !81, !"__UNIQUE_ID_rcu_kick_kthreadstype407", i1 false, i1 false}
!83 = !{ptr @__ksymtab_rcu_get_gp_seq, !84, !"__ksymtab_rcu_get_gp_seq", i1 false, i1 false}
!84 = !{!"../kernel/rcu/tree.c", i32 562, i32 1}
!85 = !{ptr @__ksymtab_rcu_exp_batches_completed, !86, !"__ksymtab_rcu_exp_batches_completed", i1 false, i1 false}
!86 = !{!"../kernel/rcu/tree.c", i32 574, i32 1}
!87 = !{ptr @__ksymtab_rcutorture_get_gp_data, !88, !"__ksymtab_rcutorture_get_gp_data", i1 false, i1 false}
!88 = !{!"../kernel/rcu/tree.c", i32 599, i32 1}
!89 = distinct !{null, !90, !"__already_done", i1 false, i1 false}
!90 = !{!"../kernel/rcu/tree.c", i32 653, i32 2}
!91 = !{ptr @__ksymtab_rcu_idle_enter, !92, !"__ksymtab_rcu_idle_enter", i1 false, i1 false}
!92 = !{!"../kernel/rcu/tree.c", i32 656, i32 1}
!93 = distinct !{null, !94, !"__already_done", i1 false, i1 false}
!94 = !{!"../kernel/rcu/tree.c", i32 750, i32 2}
!95 = distinct !{null, !96, !"__already_done", i1 false, i1 false}
!96 = !{!"../kernel/rcu/tree.c", i32 751, i32 2}
!97 = !{ptr @.str.2, !98, !"<string literal>", i1 false, i1 false}
!98 = !{!"../kernel/rcu/tree.c", i32 758, i32 21}
!99 = !{ptr @rcu_nmi_exit.___tp_str, !98, !"___tp_str", i1 false, i1 false}
!100 = !{ptr @.str.4, !101, !"<string literal>", i1 false, i1 false}
!101 = !{!"../kernel/rcu/tree.c", i32 767, i32 20}
!102 = !{ptr @rcu_nmi_exit.___tp_str.3, !101, !"___tp_str", i1 false, i1 false}
!103 = distinct !{null, !104, !"__already_done", i1 false, i1 false}
!104 = !{!"../kernel/rcu/tree.c", i32 803, i32 2}
!105 = distinct !{null, !106, !"__already_done", i1 false, i1 false}
!106 = !{!"../kernel/rcu/tree.c", i32 813, i32 2}
!107 = distinct !{null, !108, !"__warned", i1 false, i1 false}
!108 = !{!"../kernel/rcu/tree.c", i32 815, i32 2}
!109 = distinct !{null, !108, !"<string literal>", i1 false, i1 false}
!110 = !{ptr @.str.6, !108, !"<string literal>", i1 false, i1 false}
!111 = distinct !{null, !112, !"__warned", i1 false, i1 false}
!112 = !{!"../kernel/rcu/tree.c", i32 817, i32 2}
!113 = !{ptr @.str.8, !112, !"<string literal>", i1 false, i1 false}
!114 = distinct !{null, !115, !"__warned", i1 false, i1 false}
!115 = !{!"../kernel/rcu/tree.c", i32 820, i32 2}
!116 = !{ptr @.str.10, !115, !"<string literal>", i1 false, i1 false}
!117 = !{ptr @__ksymtab_rcu_idle_exit, !118, !"__ksymtab_rcu_idle_exit", i1 false, i1 false}
!118 = !{!"../kernel/rcu/tree.c", i32 896, i32 1}
!119 = distinct !{null, !120, !"__already_done", i1 false, i1 false}
!120 = !{!"../kernel/rcu/tree.c", i32 993, i32 2}
!121 = !{ptr @.str.11, !122, !"<string literal>", i1 false, i1 false}
!122 = !{!"../kernel/rcu/tree.c", i32 1026, i32 33}
!123 = !{ptr @rcu_nmi_enter.___tp_str, !122, !"___tp_str", i1 false, i1 false}
!124 = !{ptr @.str.13, !125, !"<string literal>", i1 false, i1 false}
!125 = !{!"../kernel/rcu/tree.c", i32 1026, i32 49}
!126 = !{ptr @rcu_nmi_enter.___tp_str.12, !125, !"___tp_str", i1 false, i1 false}
!127 = distinct !{null, !128, !"__already_done", i1 false, i1 false}
!128 = !{!"../kernel/rcu/tree.c", i32 1059, i32 2}
!129 = !{ptr @__ksymtab_rcu_is_watching, !130, !"__ksymtab_rcu_is_watching", i1 false, i1 false}
!130 = !{!"../kernel/rcu/tree.c", i32 1132, i32 1}
!131 = !{ptr @__ksymtab_rcu_lockdep_current_cpu_online, !132, !"__ksymtab_rcu_lockdep_current_cpu_online", i1 false, i1 false}
!132 = !{!"../kernel/rcu/tree.c", i32 1183, i32 1}
!133 = !{ptr @__ksymtab_rcu_gp_set_torture_wait, !134, !"__ksymtab_rcu_gp_set_torture_wait", i1 false, i1 false}
!134 = !{!"../kernel/rcu/tree.c", i32 1711, i32 1}
!135 = !{ptr @.str.14, !136, !"<string literal>", i1 false, i1 false}
!136 = !{!"../kernel/rcu/tree.c", i32 2390, i32 18}
!137 = !{ptr @rcutree_dying_cpu.___tp_str, !136, !"___tp_str", i1 false, i1 false}
!138 = !{ptr @.str.16, !139, !"<string literal>", i1 false, i1 false}
!139 = !{!"../kernel/rcu/tree.c", i32 2390, i32 38}
!140 = !{ptr @rcutree_dying_cpu.___tp_str.15, !139, !"___tp_str", i1 false, i1 false}
!141 = !{ptr @.str.17, !142, !"<string literal>", i1 false, i1 false}
!142 = !{!"../kernel/rcu/tree.c", i32 2604, i32 24}
!143 = !{ptr @rcu_sched_clock_irq.___tp_str, !142, !"___tp_str", i1 false, i1 false}
!144 = distinct !{null, !145, !"__already_done", i1 false, i1 false}
!145 = !{!"../kernel/rcu/tree.c", i32 2605, i32 2}
!146 = distinct !{null, !147, !"<string literal>", i1 false, i1 false}
!147 = !{!"../kernel/rcu/tree.c", i32 2614, i32 3}
!148 = distinct !{null, !149, !"__already_done", i1 false, i1 false}
!149 = !{!"../kernel/rcu/tree.c", i32 2619, i32 2}
!150 = !{ptr @.str.21, !151, !"<string literal>", i1 false, i1 false}
!151 = !{!"../kernel/rcu/tree.c", i32 2621, i32 24}
!152 = !{ptr @rcu_sched_clock_irq.___tp_str.20, !151, !"___tp_str", i1 false, i1 false}
!153 = distinct !{null, !154, !"__already_done", i1 false, i1 false}
!154 = !{!"../kernel/rcu/tree.c", i32 2705, i32 3}
!155 = distinct !{null, !156, !"__already_done", i1 false, i1 false}
!156 = !{!"../kernel/rcu/tree.c", i32 2710, i32 2}
!157 = !{ptr @__ksymtab_rcu_force_quiescent_state, !158, !"__ksymtab_rcu_force_quiescent_state", i1 false, i1 false}
!158 = !{!"../kernel/rcu/tree.c", i32 2713, i32 1}
!159 = !{ptr @__ksymtab_call_rcu, !160, !"__ksymtab_call_rcu", i1 false, i1 false}
!160 = !{!"../kernel/rcu/tree.c", i32 3108, i32 1}
!161 = !{ptr @.str.23, !162, !"<string literal>", i1 false, i1 false}
!162 = !{!"../kernel/rcu/tree.c", i32 3197, i32 10}
!163 = !{ptr @krc, !164, !"krc", i1 false, i1 false}
!164 = !{!"../kernel/rcu/tree.c", i32 3196, i32 8}
!165 = distinct !{null, !166, !"__already_done", i1 false, i1 false}
!166 = !{!"../kernel/rcu/tree.c", i32 3584, i32 3}
!167 = !{ptr @.str.24, !166, !"<string literal>", i1 false, i1 false}
!168 = !{ptr @__func__.kvfree_call_rcu, !166, !"<string literal>", i1 false, i1 false}
!169 = !{ptr @__ksymtab_kvfree_call_rcu, !170, !"__ksymtab_kvfree_call_rcu", i1 false, i1 false}
!170 = !{!"../kernel/rcu/tree.c", i32 3629, i32 1}
!171 = distinct !{null, !172, !"__warned", i1 false, i1 false}
!172 = !{!"../kernel/rcu/tree.c", i32 3778, i32 2}
!173 = !{ptr @.str.25, !172, !"<string literal>", i1 false, i1 false}
!174 = !{ptr @__ksymtab_synchronize_rcu, !175, !"__ksymtab_synchronize_rcu", i1 false, i1 false}
!175 = !{!"../kernel/rcu/tree.c", i32 3789, i32 1}
!176 = !{ptr @__ksymtab_get_state_synchronize_rcu, !177, !"__ksymtab_get_state_synchronize_rcu", i1 false, i1 false}
!177 = !{!"../kernel/rcu/tree.c", i32 3807, i32 1}
!178 = distinct !{null, !179, !"__already_done", i1 false, i1 false}
!179 = !{!"../kernel/rcu/tree.c", i32 3829, i32 2}
!180 = distinct !{null, !181, !"__already_done", i1 false, i1 false}
!181 = !{!"../kernel/rcu/tree.c", i32 3835, i32 2}
!182 = !{ptr @__ksymtab_start_poll_synchronize_rcu, !183, !"__ksymtab_start_poll_synchronize_rcu", i1 false, i1 false}
!183 = !{!"../kernel/rcu/tree.c", i32 3840, i32 1}
!184 = !{ptr @__ksymtab_poll_state_synchronize_rcu, !185, !"__ksymtab_poll_state_synchronize_rcu", i1 false, i1 false}
!185 = !{!"../kernel/rcu/tree.c", i32 3875, i32 1}
!186 = !{ptr @__ksymtab_cond_synchronize_rcu, !187, !"__ksymtab_cond_synchronize_rcu", i1 false, i1 false}
!187 = !{!"../kernel/rcu/tree.c", i32 3901, i32 1}
!188 = !{ptr @.str.27, !189, !"<string literal>", i1 false, i1 false}
!189 = !{!"../kernel/rcu/tree.c", i32 4023, i32 20}
!190 = !{ptr @rcu_barrier.___tp_str, !189, !"___tp_str", i1 false, i1 false}
!191 = !{ptr @.str.29, !192, !"<string literal>", i1 false, i1 false}
!192 = !{!"../kernel/rcu/tree.c", i32 4030, i32 21}
!193 = !{ptr @rcu_barrier.___tp_str.28, !192, !"___tp_str", i1 false, i1 false}
!194 = !{ptr @.str.31, !195, !"<string literal>", i1 false, i1 false}
!195 = !{!"../kernel/rcu/tree.c", i32 4039, i32 20}
!196 = !{ptr @rcu_barrier.___tp_str.30, !195, !"___tp_str", i1 false, i1 false}
!197 = !{ptr @.str.33, !198, !"<string literal>", i1 false, i1 false}
!198 = !{!"../kernel/rcu/tree.c", i32 4063, i32 22}
!199 = !{ptr @rcu_barrier.___tp_str.32, !198, !"___tp_str", i1 false, i1 false}
!200 = !{ptr @.str.35, !201, !"<string literal>", i1 false, i1 false}
!201 = !{!"../kernel/rcu/tree.c", i32 4068, i32 22}
!202 = !{ptr @rcu_barrier.___tp_str.34, !201, !"___tp_str", i1 false, i1 false}
!203 = !{ptr @.str.37, !204, !"<string literal>", i1 false, i1 false}
!204 = !{!"../kernel/rcu/tree.c", i32 4074, i32 22}
!205 = !{ptr @rcu_barrier.___tp_str.36, !204, !"___tp_str", i1 false, i1 false}
!206 = !{ptr @.str.39, !207, !"<string literal>", i1 false, i1 false}
!207 = !{!"../kernel/rcu/tree.c", i32 4077, i32 22}
!208 = !{ptr @rcu_barrier.___tp_str.38, !207, !"___tp_str", i1 false, i1 false}
!209 = !{ptr @.str.41, !210, !"<string literal>", i1 false, i1 false}
!210 = !{!"../kernel/rcu/tree.c", i32 4094, i32 20}
!211 = !{ptr @rcu_barrier.___tp_str.40, !210, !"___tp_str", i1 false, i1 false}
!212 = !{ptr @__ksymtab_rcu_barrier, !213, !"__ksymtab_rcu_barrier", i1 false, i1 false}
!213 = !{!"../kernel/rcu/tree.c", i32 4100, i32 1}
!214 = distinct !{null, !215, !"__already_done", i1 false, i1 false}
!215 = !{!"../kernel/rcu/tree.c", i32 4173, i32 2}
!216 = !{ptr @.str.42, !217, !"<string literal>", i1 false, i1 false}
!217 = !{!"../kernel/rcu/tree.c", i32 4197, i32 54}
!218 = !{ptr @rcutree_prepare_cpu.___tp_str, !217, !"___tp_str", i1 false, i1 false}
!219 = distinct !{null, !220, !"__already_done", i1 false, i1 false}
!220 = !{!"../kernel/rcu/tree.c", i32 4198, i32 2}
!221 = distinct !{null, !222, !"__already_done", i1 false, i1 false}
!222 = !{!"../kernel/rcu/tree.c", i32 4230, i32 2}
!223 = distinct !{null, !224, !"__already_done", i1 false, i1 false}
!224 = !{!"../kernel/rcu/tree.c", i32 4255, i32 2}
!225 = distinct !{null, !226, !"__already_done", i1 false, i1 false}
!226 = !{!"../kernel/rcu/tree.c", i32 4291, i32 2}
!227 = distinct !{null, !228, !"__already_done", i1 false, i1 false}
!228 = !{!"../kernel/rcu/tree.c", i32 4306, i32 6}
!229 = distinct !{null, !230, !"__already_done", i1 false, i1 false}
!230 = !{!"../kernel/rcu/tree.c", i32 4311, i32 3}
!231 = distinct !{null, !232, !"__already_done", i1 false, i1 false}
!232 = !{!"../kernel/rcu/tree.c", i32 4315, i32 2}
!233 = distinct !{null, !234, !"__already_done", i1 false, i1 false}
!234 = !{!"../kernel/rcu/tree.c", i32 4344, i32 2}
!235 = distinct !{null, !236, !"__already_done", i1 false, i1 false}
!236 = !{!"../kernel/rcu/tree.c", i32 4356, i32 2}
!237 = distinct !{null, !238, !"__already_done", i1 false, i1 false}
!238 = !{!"../kernel/rcu/tree.c", i32 4360, i32 2}
!239 = distinct !{null, !240, !"__already_done", i1 false, i1 false}
!240 = !{!"../kernel/rcu/tree.c", i32 4387, i32 2}
!241 = distinct !{null, !242, !"__already_done", i1 false, i1 false}
!242 = !{!"../kernel/rcu/tree.c", i32 4395, i32 2}
!243 = distinct !{null, !244, !"__already_done", i1 false, i1 false}
!244 = !{!"../kernel/rcu/tree.c", i32 4398, i32 3}
!245 = distinct !{null, !246, !"__already_done", i1 false, i1 false}
!246 = !{!"../kernel/rcu/tree.c", i32 4402, i32 3}
!247 = distinct !{null, !248, !"__already_done", i1 false, i1 false}
!248 = !{!"../kernel/rcu/tree.c", i32 4406, i32 2}
!249 = distinct !{null, !250, !"__already_done", i1 false, i1 false}
!250 = !{!"../kernel/rcu/tree.c", i32 4407, i32 2}
!251 = !{ptr @.str.54, !250, !"<string literal>", i1 false, i1 false}
!252 = !{ptr @__initcall__kmod_tree__1031_4484_rcu_spawn_gp_kthreadearly, !253, !"__initcall__kmod_tree__1031_4484_rcu_spawn_gp_kthreadearly", i1 false, i1 false}
!253 = !{!"../kernel/rcu/tree.c", i32 4484, i32 1}
!254 = !{ptr @rcu_init_geometry.old_nr_cpu_ids, !255, !"old_nr_cpu_ids", i1 false, i1 false}
!255 = !{!"../kernel/rcu/tree.c", i32 4596, i32 23}
!256 = distinct !{null, !257, !"initialized", i1 false, i1 false}
!257 = !{!"../kernel/rcu/tree.c", i32 4598, i32 14}
!258 = distinct !{null, !259, !"__already_done", i1 false, i1 false}
!259 = !{!"../kernel/rcu/tree.c", i32 4605, i32 3}
!260 = !{ptr @.str.55, !261, !"<string literal>", i1 false, i1 false}
!261 = !{!"../kernel/rcu/tree.c", i32 4630, i32 2}
!262 = !{ptr @.str.56, !261, !"<string literal>", i1 false, i1 false}
!263 = !{ptr @rcu_init_geometry._entry, !261, !"_entry", i1 false, i1 false}
!264 = !{ptr @rcu_init_geometry._entry_ptr, !261, !"_entry_ptr", i1 false, i1 false}
!265 = !{ptr @rcu_init.rcu_pm_notify_nb, !266, !"rcu_pm_notify_nb", i1 false, i1 false}
!266 = !{!"../kernel/rcu/tree.c", i32 4759, i32 2}
!267 = !{ptr @.str.57, !268, !"<string literal>", i1 false, i1 false}
!268 = !{!"../kernel/rcu/tree.c", i32 4767, i32 30}
!269 = !{ptr @.str.58, !270, !"<string literal>", i1 false, i1 false}
!270 = !{!"../kernel/rcu/tree.c", i32 4769, i32 34}
!271 = !{ptr @__ksymtab_rcu_jiffies_till_stall_check, !272, !"__ksymtab_rcu_jiffies_till_stall_check", i1 false, i1 false}
!272 = !{!"../kernel/rcu/tree_stall.h", i32 46, i32 1}
!273 = !{ptr @__initcall__kmod_tree__1041_107_check_cpu_stall_initearly, !274, !"__initcall__kmod_tree__1041_107_check_cpu_stall_initearly", i1 false, i1 false}
!274 = !{!"../kernel/rcu/tree_stall.h", i32 107, i32 1}
!275 = distinct !{null, !276, !"__already_done", i1 false, i1 false}
!276 = !{!"../kernel/rcu/tree_stall.h", i32 761, i32 4}
!277 = !{ptr @.str.59, !276, !"<string literal>", i1 false, i1 false}
!278 = distinct !{null, !279, !"__already_done", i1 false, i1 false}
!279 = !{!"../kernel/rcu/tree_stall.h", i32 765, i32 3}
!280 = distinct !{null, !281, !"__already_done", i1 false, i1 false}
!281 = !{!"../kernel/rcu/tree_stall.h", i32 767, i32 5}
!282 = distinct !{null, !283, !"__already_done", i1 false, i1 false}
!283 = !{!"../kernel/rcu/tree_stall.h", i32 772, i32 3}
!284 = !{ptr @__ksymtab_rcu_check_boost_fail, !285, !"__ksymtab_rcu_check_boost_fail", i1 false, i1 false}
!285 = !{!"../kernel/rcu/tree_stall.h", i32 777, i32 1}
!286 = !{ptr @.str.63, !287, !"<string literal>", i1 false, i1 false}
!287 = !{!"../kernel/rcu/tree_stall.h", i32 800, i32 2}
!288 = !{ptr @.str.64, !287, !"<string literal>", i1 false, i1 false}
!289 = !{ptr @show_rcu_gp_kthreads._entry, !287, !"_entry", i1 false, i1 false}
!290 = !{ptr @show_rcu_gp_kthreads._entry_ptr, !287, !"_entry_ptr", i1 false, i1 false}
!291 = !{ptr @.str.66, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../kernel/rcu/tree_stall.h", i32 814, i32 3}
!293 = !{ptr @show_rcu_gp_kthreads._entry.65, !292, !"_entry", i1 false, i1 false}
!294 = !{ptr @show_rcu_gp_kthreads._entry_ptr.67, !292, !"_entry_ptr", i1 false, i1 false}
!295 = !{ptr @.str.68, !292, !"<string literal>", i1 false, i1 false}
!296 = !{ptr @.str.69, !292, !"<string literal>", i1 false, i1 false}
!297 = !{ptr @.str.70, !292, !"<string literal>", i1 false, i1 false}
!298 = !{ptr @.str.71, !292, !"<string literal>", i1 false, i1 false}
!299 = distinct !{null, !300, !"__already_done", i1 false, i1 false}
!300 = !{!"../kernel/rcu/tree_stall.h", i32 826, i32 3}
!301 = !{ptr @.str.73, !302, !"<string literal>", i1 false, i1 false}
!302 = !{!"../kernel/rcu/tree_stall.h", i32 832, i32 4}
!303 = !{ptr @show_rcu_gp_kthreads._entry.72, !302, !"_entry", i1 false, i1 false}
!304 = !{ptr @show_rcu_gp_kthreads._entry_ptr.74, !302, !"_entry_ptr", i1 false, i1 false}
!305 = !{ptr @.str.76, !306, !"<string literal>", i1 false, i1 false}
!306 = !{!"../kernel/rcu/tree_stall.h", i32 842, i32 2}
!307 = !{ptr @show_rcu_gp_kthreads._entry.75, !306, !"_entry", i1 false, i1 false}
!308 = !{ptr @show_rcu_gp_kthreads._entry_ptr.77, !306, !"_entry_ptr", i1 false, i1 false}
!309 = !{ptr @__ksymtab_show_rcu_gp_kthreads, !310, !"__ksymtab_show_rcu_gp_kthreads", i1 false, i1 false}
!310 = !{!"../kernel/rcu/tree_stall.h", i32 845, i32 1}
!311 = !{ptr @.str.78, !312, !"<string literal>", i1 false, i1 false}
!312 = !{!"../kernel/rcu/tree_stall.h", i32 919, i32 3}
!313 = !{ptr @.str.79, !312, !"<string literal>", i1 false, i1 false}
!314 = !{ptr @rcu_fwd_progress_check._entry, !312, !"_entry", i1 false, i1 false}
!315 = !{ptr @rcu_fwd_progress_check._entry_ptr, !312, !"_entry_ptr", i1 false, i1 false}
!316 = !{ptr @.str.81, !317, !"<string literal>", i1 false, i1 false}
!317 = !{!"../kernel/rcu/tree_stall.h", i32 923, i32 3}
!318 = !{ptr @rcu_fwd_progress_check._entry.80, !317, !"_entry", i1 false, i1 false}
!319 = !{ptr @rcu_fwd_progress_check._entry_ptr.82, !317, !"_entry_ptr", i1 false, i1 false}
!320 = !{ptr @.str.84, !321, !"<string literal>", i1 false, i1 false}
!321 = !{!"../kernel/rcu/tree_stall.h", i32 935, i32 4}
!322 = !{ptr @rcu_fwd_progress_check._entry.83, !321, !"_entry", i1 false, i1 false}
!323 = !{ptr @rcu_fwd_progress_check._entry_ptr.85, !321, !"_entry_ptr", i1 false, i1 false}
!324 = !{ptr @.str.87, !325, !"<string literal>", i1 false, i1 false}
!325 = !{!"../kernel/rcu/tree_stall.h", i32 936, i32 3}
!326 = !{ptr @rcu_fwd_progress_check._entry.86, !325, !"_entry", i1 false, i1 false}
!327 = !{ptr @rcu_fwd_progress_check._entry_ptr.88, !325, !"_entry_ptr", i1 false, i1 false}
!328 = !{ptr @.str.90, !329, !"<string literal>", i1 false, i1 false}
!329 = !{!"../kernel/rcu/tree_stall.h", i32 943, i32 3}
!330 = !{ptr @rcu_fwd_progress_check._entry.89, !329, !"_entry", i1 false, i1 false}
!331 = !{ptr @rcu_fwd_progress_check._entry_ptr.91, !329, !"_entry_ptr", i1 false, i1 false}
!332 = !{ptr @__ksymtab_rcu_fwd_progress_check, !333, !"__ksymtab_rcu_fwd_progress_check", i1 false, i1 false}
!333 = !{!"../kernel/rcu/tree_stall.h", i32 945, i32 1}
!334 = !{ptr @__param_sysrq_rcu, !335, !"__param_sysrq_rcu", i1 false, i1 false}
!335 = !{!"../kernel/rcu/tree_stall.h", i32 949, i32 1}
!336 = !{ptr @__UNIQUE_ID_sysrq_rcutype1264, !335, !"__UNIQUE_ID_sysrq_rcutype1264", i1 false, i1 false}
!337 = !{ptr @__initcall__kmod_tree__1265_970_rcu_sysrq_initearly, !338, !"__initcall__kmod_tree__1265_970_rcu_sysrq_initearly", i1 false, i1 false}
!338 = !{!"../kernel/rcu/tree_stall.h", i32 970, i32 1}
!339 = distinct !{null, !340, !"__warned", i1 false, i1 false}
!340 = !{!"../kernel/rcu/tree_exp.h", i32 823, i32 2}
!341 = !{ptr @.str.92, !340, !"<string literal>", i1 false, i1 false}
!342 = !{ptr @.str.93, !340, !"<string literal>", i1 false, i1 false}
!343 = !{ptr @synchronize_rcu_expedited.__key, !344, !"__key", i1 false, i1 false}
!344 = !{!"../kernel/rcu/tree_exp.h", i32 850, i32 3}
!345 = !{ptr @.str.94, !344, !"<string literal>", i1 false, i1 false}
!346 = !{ptr @__ksymtab_synchronize_rcu_expedited, !347, !"__ksymtab_synchronize_rcu_expedited", i1 false, i1 false}
!347 = !{!"../kernel/rcu/tree_exp.h", i32 866, i32 1}
!348 = !{ptr @__setup_rcu_nocb_setup, !349, !"__setup_rcu_nocb_setup", i1 false, i1 false}
!349 = !{!"../kernel/rcu/tree_nocb.h", i32 78, i32 1}
!350 = !{ptr @__setup_parse_rcu_nocb_poll, !351, !"__setup_parse_rcu_nocb_poll", i1 false, i1 false}
!351 = !{!"../kernel/rcu/tree_nocb.h", i32 85, i32 1}
!352 = !{ptr @__param_nocb_nobypass_lim_per_jiffy, !353, !"__param_nocb_nobypass_lim_per_jiffy", i1 false, i1 false}
!353 = !{!"../kernel/rcu/tree_nocb.h", i32 93, i32 1}
!354 = !{ptr @__UNIQUE_ID_nocb_nobypass_lim_per_jiffytype1386, !353, !"__UNIQUE_ID_nocb_nobypass_lim_per_jiffytype1386", i1 false, i1 false}
!355 = !{ptr @__ksymtab_rcu_nocb_flush_deferred_wakeup, !356, !"__ksymtab_rcu_nocb_flush_deferred_wakeup", i1 false, i1 false}
!356 = !{!"../kernel/rcu/tree_nocb.h", i32 957, i32 1}
!357 = !{ptr @.str.95, !358, !"<string literal>", i1 false, i1 false}
!358 = !{!"../kernel/rcu/tree_nocb.h", i32 1065, i32 4}
!359 = !{ptr @.str.96, !358, !"<string literal>", i1 false, i1 false}
!360 = !{ptr @.str.97, !358, !"<string literal>", i1 false, i1 false}
!361 = !{ptr @rcu_nocb_cpu_deoffload._entry, !358, !"_entry", i1 false, i1 false}
!362 = !{ptr @rcu_nocb_cpu_deoffload._entry_ptr, !358, !"_entry_ptr", i1 false, i1 false}
!363 = !{ptr @__ksymtab_rcu_nocb_cpu_deoffload, !364, !"__ksymtab_rcu_nocb_cpu_deoffload", i1 false, i1 false}
!364 = !{!"../kernel/rcu/tree_nocb.h", i32 1074, i32 1}
!365 = !{ptr @.str.98, !366, !"<string literal>", i1 false, i1 false}
!366 = !{!"../kernel/rcu/tree_nocb.h", i32 1154, i32 4}
!367 = !{ptr @.str.99, !366, !"<string literal>", i1 false, i1 false}
!368 = !{ptr @rcu_nocb_cpu_offload._entry, !366, !"_entry", i1 false, i1 false}
!369 = !{ptr @rcu_nocb_cpu_offload._entry_ptr, !366, !"_entry_ptr", i1 false, i1 false}
!370 = !{ptr @__ksymtab_rcu_nocb_cpu_offload, !371, !"__ksymtab_rcu_nocb_cpu_offload", i1 false, i1 false}
!371 = !{!"../kernel/rcu/tree_nocb.h", i32 1163, i32 1}
!372 = !{ptr @.str.100, !373, !"<string literal>", i1 false, i1 false}
!373 = !{!"../kernel/rcu/tree_nocb.h", i32 1179, i32 5}
!374 = !{ptr @.str.101, !373, !"<string literal>", i1 false, i1 false}
!375 = !{ptr @rcu_init_nohz._entry, !373, !"_entry", i1 false, i1 false}
!376 = !{ptr @rcu_init_nohz._entry_ptr, !373, !"_entry_ptr", i1 false, i1 false}
!377 = !{ptr @.str.103, !378, !"<string literal>", i1 false, i1 false}
!378 = !{!"../kernel/rcu/tree_nocb.h", i32 1195, i32 3}
!379 = !{ptr @rcu_init_nohz._entry.102, !378, !"_entry", i1 false, i1 false}
!380 = !{ptr @rcu_init_nohz._entry_ptr.104, !378, !"_entry_ptr", i1 false, i1 false}
!381 = !{ptr @.str.106, !382, !"<string literal>", i1 false, i1 false}
!382 = !{!"../kernel/rcu/tree_nocb.h", i32 1200, i32 3}
!383 = !{ptr @rcu_init_nohz._entry.105, !382, !"_entry", i1 false, i1 false}
!384 = !{ptr @rcu_init_nohz._entry_ptr.107, !382, !"_entry_ptr", i1 false, i1 false}
!385 = !{ptr @.str.109, !386, !"<string literal>", i1 false, i1 false}
!386 = !{!"../kernel/rcu/tree_nocb.h", i32 1202, i32 3}
!387 = !{ptr @rcu_init_nohz._entry.108, !386, !"_entry", i1 false, i1 false}
!388 = !{ptr @rcu_init_nohz._entry_ptr.110, !386, !"_entry_ptr", i1 false, i1 false}
!389 = !{ptr @.str.112, !390, !"<string literal>", i1 false, i1 false}
!390 = !{!"../kernel/rcu/tree_nocb.h", i32 1205, i32 3}
!391 = !{ptr @rcu_init_nohz._entry.111, !390, !"_entry", i1 false, i1 false}
!392 = !{ptr @rcu_init_nohz._entry_ptr.113, !390, !"_entry_ptr", i1 false, i1 false}
!393 = !{ptr @__param_rcu_nocb_gp_stride, !394, !"__param_rcu_nocb_gp_stride", i1 false, i1 false}
!394 = !{!"../kernel/rcu/tree_nocb.h", i32 1286, i32 1}
!395 = !{ptr @__UNIQUE_ID_rcu_nocb_gp_stridetype1516, !394, !"__UNIQUE_ID_rcu_nocb_gp_stridetype1516", i1 false, i1 false}
!396 = !{ptr @__ksymtab_rcu_bind_current_to_nocb, !397, !"__ksymtab_rcu_bind_current_to_nocb", i1 false, i1 false}
!397 = !{!"../kernel/rcu/tree_nocb.h", i32 1354, i32 1}
!398 = !{ptr @__ksymtab_rcu_read_unlock_strict, !399, !"__ksymtab_rcu_read_unlock_strict", i1 false, i1 false}
!399 = !{!"../kernel/rcu/tree_plugin.h", i32 825, i32 1}
!400 = !{ptr @__ksymtab_rcu_all_qs, !401, !"__ksymtab_rcu_all_qs", i1 false, i1 false}
!401 = !{!"../kernel/rcu/tree_plugin.h", i32 882, i32 1}
!402 = !{ptr @.str.114, !403, !"<string literal>", i1 false, i1 false}
!403 = !{!"../kernel/rcu/tree_plugin.h", i32 889, i32 24}
!404 = !{ptr @rcu_note_context_switch.___tp_str, !403, !"___tp_str", i1 false, i1 false}
!405 = !{ptr @.str.116, !406, !"<string literal>", i1 false, i1 false}
!406 = !{!"../kernel/rcu/tree_plugin.h", i32 899, i32 24}
!407 = !{ptr @rcu_note_context_switch.___tp_str.115, !406, !"___tp_str", i1 false, i1 false}
!408 = !{ptr @__ksymtab_rcu_note_context_switch, !409, !"__ksymtab_rcu_note_context_switch", i1 false, i1 false}
!409 = !{!"../kernel/rcu/tree_plugin.h", i32 901, i32 1}
!410 = !{ptr @rcu_fanout_exact, !411, !"rcu_fanout_exact", i1 false, i1 false}
!411 = !{!"../kernel/rcu/tree.c", i32 106, i32 13}
!412 = !{ptr @__pcpu_unique_rcu_data, !3, !"__pcpu_unique_rcu_data", i1 false, i1 false}
!413 = !{ptr @dump_tree, !414, !"dump_tree", i1 false, i1 false}
!414 = !{!"../kernel/rcu/tree.c", i32 98, i32 13}
!415 = !{ptr @rcu_scheduler_active, !416, !"rcu_scheduler_active", i1 false, i1 false}
!416 = !{!"../kernel/rcu/tree.c", i32 128, i32 5}
!417 = !{ptr @rcu_scheduler_fully_active, !418, !"rcu_scheduler_fully_active", i1 false, i1 false}
!418 = !{!"../kernel/rcu/tree.c", i32 143, i32 12}
!419 = !{ptr @gp_preinit_delay, !420, !"gp_preinit_delay", i1 false, i1 false}
!420 = !{!"../kernel/rcu/tree.c", i32 162, i32 12}
!421 = !{ptr @gp_init_delay, !422, !"gp_init_delay", i1 false, i1 false}
!422 = !{!"../kernel/rcu/tree.c", i32 164, i32 12}
!423 = !{ptr @gp_cleanup_delay, !424, !"gp_cleanup_delay", i1 false, i1 false}
!424 = !{!"../kernel/rcu/tree.c", i32 166, i32 12}
!425 = !{ptr @rcu_unlock_delay, !426, !"rcu_unlock_delay", i1 false, i1 false}
!426 = !{!"../kernel/rcu/tree.c", i32 170, i32 12}
!427 = !{ptr @rcu_kick_kthreads, !428, !"rcu_kick_kthreads", i1 false, i1 false}
!428 = !{!"../kernel/rcu/tree.c", i32 473, i32 13}
!429 = !{ptr @jiffies_to_sched_qs, !430, !"jiffies_to_sched_qs", i1 false, i1 false}
!430 = !{!"../kernel/rcu/tree.c", i32 487, i32 14}
!431 = !{ptr @sleep_duration, !432, !"sleep_duration", i1 false, i1 false}
!432 = !{!"../kernel/rcu/tree.c", i32 1703, i32 22}
!433 = !{ptr @__pcpu_unique_krc, !164, !"__pcpu_unique_krc", i1 false, i1 false}
!434 = !{ptr @rcu_gp_wq, !435, !"rcu_gp_wq", i1 false, i1 false}
!435 = !{!"../kernel/rcu/tree.c", i32 4703, i32 26}
!436 = !{ptr @rcu_par_gp_wq, !437, !"rcu_par_gp_wq", i1 false, i1 false}
!437 = !{!"../kernel/rcu/tree.c", i32 4704, i32 26}
!438 = !{ptr @sysctl_panic_on_rcu_stall, !439, !"sysctl_panic_on_rcu_stall", i1 false, i1 false}
!439 = !{!"../kernel/rcu/tree_stall.h", i32 17, i32 5}
!440 = !{ptr @sysctl_max_rcu_stall_to_panic, !441, !"sysctl_max_rcu_stall_to_panic", i1 false, i1 false}
!441 = !{!"../kernel/rcu/tree_stall.h", i32 18, i32 5}
!442 = !{ptr @sysrq_rcu, !443, !"sysrq_rcu", i1 false, i1 false}
!443 = !{!"../kernel/rcu/tree_stall.h", i32 948, i32 13}
!444 = !{ptr @rcu_nocb_mask, !445, !"rcu_nocb_mask", i1 false, i1 false}
!445 = !{!"../kernel/rcu/tree_nocb.h", i32 17, i32 22}
!446 = distinct !{null, !447, !"rcu_nocb_poll", i1 false, i1 false}
!447 = !{!"../kernel/rcu/tree_nocb.h", i32 18, i32 27}
!448 = distinct !{null, !449, !"rcu_nocb_is_setup", i1 false, i1 false}
!449 = !{!"../kernel/rcu/tree_nocb.h", i32 64, i32 13}
!450 = !{ptr @rcu_name, !451, !"rcu_name", i1 false, i1 false}
!451 = !{!"../kernel/rcu/tree.h", i32 397, i32 13}
!452 = !{ptr @__param_str_dump_tree, !5, !"__param_str_dump_tree", i1 false, i1 false}
!453 = !{ptr @__param_str_use_softirq, !8, !"__param_str_use_softirq", i1 false, i1 false}
!454 = !{ptr @use_softirq, !455, !"use_softirq", i1 false, i1 false}
!455 = !{!"../kernel/rcu/tree.c", i32 101, i32 13}
!456 = !{ptr @__param_str_rcu_fanout_exact, !11, !"__param_str_rcu_fanout_exact", i1 false, i1 false}
!457 = !{ptr @__param_str_rcu_fanout_leaf, !14, !"__param_str_rcu_fanout_leaf", i1 false, i1 false}
!458 = !{ptr @rcu_fanout_leaf, !459, !"rcu_fanout_leaf", i1 false, i1 false}
!459 = !{!"../kernel/rcu/tree.c", i32 109, i32 12}
!460 = !{ptr @__param_str_kthread_prio, !25, !"__param_str_kthread_prio", i1 false, i1 false}
!461 = !{ptr @kthread_prio, !462, !"kthread_prio", i1 false, i1 false}
!462 = !{!"../kernel/rcu/tree.c", i32 157, i32 12}
!463 = !{ptr @__param_str_gp_preinit_delay, !28, !"__param_str_gp_preinit_delay", i1 false, i1 false}
!464 = !{ptr @__param_str_gp_init_delay, !31, !"__param_str_gp_init_delay", i1 false, i1 false}
!465 = !{ptr @__param_str_gp_cleanup_delay, !34, !"__param_str_gp_cleanup_delay", i1 false, i1 false}
!466 = !{ptr @__param_str_rcu_unlock_delay, !37, !"__param_str_rcu_unlock_delay", i1 false, i1 false}
!467 = !{ptr @__param_str_rcu_min_cached_objs, !40, !"__param_str_rcu_min_cached_objs", i1 false, i1 false}
!468 = !{ptr @rcu_min_cached_objs, !469, !"rcu_min_cached_objs", i1 false, i1 false}
!469 = !{!"../kernel/rcu/tree.c", i32 181, i32 12}
!470 = !{ptr @__param_str_rcu_delay_page_cache_fill_msec, !43, !"__param_str_rcu_delay_page_cache_fill_msec", i1 false, i1 false}
!471 = !{ptr @rcu_delay_page_cache_fill_msec, !472, !"rcu_delay_page_cache_fill_msec", i1 false, i1 false}
!472 = !{!"../kernel/rcu/tree.c", i32 192, i32 12}
!473 = !{ptr @__param_str_blimit, !53, !"__param_str_blimit", i1 false, i1 false}
!474 = !{ptr @blimit, !475, !"blimit", i1 false, i1 false}
!475 = !{!"../kernel/rcu/tree.c", i32 456, i32 13}
!476 = !{ptr @__param_str_qhimark, !56, !"__param_str_qhimark", i1 false, i1 false}
!477 = !{ptr @qhimark, !478, !"qhimark", i1 false, i1 false}
!478 = !{!"../kernel/rcu/tree.c", i32 458, i32 13}
!479 = !{ptr @__param_str_qlowmark, !59, !"__param_str_qlowmark", i1 false, i1 false}
!480 = !{ptr @qlowmark, !481, !"qlowmark", i1 false, i1 false}
!481 = !{!"../kernel/rcu/tree.c", i32 460, i32 13}
!482 = !{ptr @__param_str_qovld, !62, !"__param_str_qovld", i1 false, i1 false}
!483 = !{ptr @qovld, !484, !"qovld", i1 false, i1 false}
!484 = !{!"../kernel/rcu/tree.c", i32 463, i32 13}
!485 = !{ptr @__param_str_rcu_divisor, !65, !"__param_str_rcu_divisor", i1 false, i1 false}
!486 = !{ptr @rcu_divisor, !487, !"rcu_divisor", i1 false, i1 false}
!487 = !{!"../kernel/rcu/tree.c", i32 474, i32 12}
!488 = !{ptr @__param_str_rcu_resched_ns, !68, !"__param_str_rcu_resched_ns", i1 false, i1 false}
!489 = !{ptr @rcu_resched_ns, !490, !"rcu_resched_ns", i1 false, i1 false}
!490 = !{!"../kernel/rcu/tree.c", i32 478, i32 13}
!491 = !{ptr @__param_str_jiffies_till_sched_qs, !71, !"__param_str_jiffies_till_sched_qs", i1 false, i1 false}
!492 = !{ptr @jiffies_till_sched_qs, !493, !"jiffies_till_sched_qs", i1 false, i1 false}
!493 = !{!"../kernel/rcu/tree.c", i32 485, i32 14}
!494 = !{ptr @__param_str_jiffies_to_sched_qs, !74, !"__param_str_jiffies_to_sched_qs", i1 false, i1 false}
!495 = !{ptr @__param_str_jiffies_till_first_fqs, !77, !"__param_str_jiffies_till_first_fqs", i1 false, i1 false}
!496 = !{ptr @first_fqs_jiffies_ops, !497, !"first_fqs_jiffies_ops", i1 false, i1 false}
!497 = !{!"../kernel/rcu/tree.c", i32 538, i32 38}
!498 = !{ptr @jiffies_till_first_fqs, !499, !"jiffies_till_first_fqs", i1 false, i1 false}
!499 = !{!"../kernel/rcu/tree.c", i32 471, i32 14}
!500 = !{ptr @__param_str_jiffies_till_next_fqs, !79, !"__param_str_jiffies_till_next_fqs", i1 false, i1 false}
!501 = !{ptr @next_fqs_jiffies_ops, !502, !"next_fqs_jiffies_ops", i1 false, i1 false}
!502 = !{!"../kernel/rcu/tree.c", i32 543, i32 38}
!503 = !{ptr @jiffies_till_next_fqs, !504, !"jiffies_till_next_fqs", i1 false, i1 false}
!504 = !{!"../kernel/rcu/tree.c", i32 472, i32 14}
!505 = !{ptr @__param_str_rcu_kick_kthreads, !81, !"__param_str_rcu_kick_kthreads", i1 false, i1 false}
!506 = !{ptr @.str.117, !507, !"<string literal>", i1 false, i1 false}
!507 = !{!"../kernel/rcu/tree.c", i32 89, i32 19}
!508 = !{ptr @.str.118, !507, !"<string literal>", i1 false, i1 false}
!509 = !{ptr @.str.119, !510, !"<string literal>", i1 false, i1 false}
!510 = !{!"../kernel/rcu/tree.c", i32 92, i32 15}
!511 = !{ptr @.str.120, !510, !"<string literal>", i1 false, i1 false}
!512 = !{ptr @.str.121, !513, !"<string literal>", i1 false, i1 false}
!513 = !{!"../kernel/rcu/tree.c", i32 93, i32 20}
!514 = !{ptr @.str.122, !513, !"<string literal>", i1 false, i1 false}
!515 = !{ptr @.str.123, !516, !"<string literal>", i1 false, i1 false}
!516 = !{!"../kernel/rcu/tree.c", i32 94, i32 14}
!517 = !{ptr @rcu_state, !518, !"rcu_state", i1 false, i1 false}
!518 = !{!"../kernel/rcu/tree.c", i32 85, i32 25}
!519 = distinct !{null, !520, !"__already_done", i1 false, i1 false}
!520 = !{!"../kernel/rcu/tree.c", i32 613, i32 2}
!521 = distinct !{null, !522, !"__already_done", i1 false, i1 false}
!522 = !{!"../kernel/rcu/tree.c", i32 615, i32 2}
!523 = distinct !{null, !524, !"__already_done", i1 false, i1 false}
!524 = !{!"../kernel/rcu/tree.c", i32 623, i32 2}
!525 = !{ptr @.str.126, !526, !"<string literal>", i1 false, i1 false}
!526 = !{!"../kernel/rcu/tree.c", i32 625, i32 20}
!527 = !{ptr @rcu_eqs_enter.___tp_str, !526, !"___tp_str", i1 false, i1 false}
!528 = distinct !{null, !529, !"__already_done", i1 false, i1 false}
!529 = !{!"../kernel/rcu/tree.c", i32 626, i32 2}
!530 = distinct !{null, !531, !"__already_done", i1 false, i1 false}
!531 = !{!"../include/trace/events/rcu.h", i32 480, i32 1}
!532 = !{ptr @.str.128, !531, !"<string literal>", i1 false, i1 false}
!533 = distinct !{null, !531, !"__warned", i1 false, i1 false}
!534 = !{ptr @.str.129, !531, !"<string literal>", i1 false, i1 false}
!535 = distinct !{null, !536, !"__already_done", i1 false, i1 false}
!536 = !{!"../kernel/rcu/tree.c", i32 281, i32 2}
!537 = distinct !{null, !538, !"__already_done", i1 false, i1 false}
!538 = !{!"../kernel/rcu/tree.c", i32 853, i32 2}
!539 = distinct !{null, !540, !"__already_done", i1 false, i1 false}
!540 = !{!"../kernel/rcu/tree.c", i32 856, i32 2}
!541 = !{ptr @.str.131, !542, !"<string literal>", i1 false, i1 false}
!542 = !{!"../kernel/rcu/tree.c", i32 871, i32 20}
!543 = !{ptr @rcu_eqs_exit.___tp_str, !542, !"___tp_str", i1 false, i1 false}
!544 = distinct !{null, !545, !"__already_done", i1 false, i1 false}
!545 = !{!"../kernel/rcu/tree.c", i32 872, i32 2}
!546 = distinct !{null, !547, !"__already_done", i1 false, i1 false}
!547 = !{!"../kernel/rcu/tree.c", i32 874, i32 2}
!548 = distinct !{null, !549, !"__already_done", i1 false, i1 false}
!549 = !{!"../kernel/rcu/tree.c", i32 301, i32 2}
!550 = distinct !{null, !551, !"__already_done", i1 false, i1 false}
!551 = !{!"../include/trace/events/rcu.h", i32 69, i32 1}
!552 = distinct !{null, !551, !"__warned", i1 false, i1 false}
!553 = distinct !{null, !554, !"__already_done", i1 false, i1 false}
!554 = !{!"../include/trace/events/rcu.h", i32 27, i32 1}
!555 = distinct !{null, !554, !"__warned", i1 false, i1 false}
!556 = distinct !{null, !557, !"__already_done", i1 false, i1 false}
!557 = !{!"../kernel/rcu/tree.c", i32 431, i32 2}
!558 = distinct !{null, !559, !"__warned", i1 false, i1 false}
!559 = !{!"../kernel/rcu/tree.c", i32 434, i32 2}
!560 = !{ptr @.str.134, !559, !"<string literal>", i1 false, i1 false}
!561 = distinct !{null, !562, !"__warned", i1 false, i1 false}
!562 = !{!"../kernel/rcu/tree.c", i32 436, i32 2}
!563 = !{ptr @.str.136, !562, !"<string literal>", i1 false, i1 false}
!564 = distinct !{null, !565, !"__already_done", i1 false, i1 false}
!565 = !{!"../kernel/rcu/tree.c", i32 447, i32 2}
!566 = !{ptr @__call_rcu.doublefrees, !567, !"doublefrees", i1 false, i1 false}
!567 = !{!"../kernel/rcu/tree.c", i32 3002, i32 18}
!568 = distinct !{null, !569, !"__already_done", i1 false, i1 false}
!569 = !{!"../kernel/rcu/tree.c", i32 3008, i32 2}
!570 = !{ptr @.str.138, !571, !"<string literal>", i1 false, i1 false}
!571 = !{!"../kernel/rcu/tree.c", i32 3017, i32 4}
!572 = !{ptr @.str.139, !571, !"<string literal>", i1 false, i1 false}
!573 = !{ptr @__call_rcu._entry, !571, !"_entry", i1 false, i1 false}
!574 = !{ptr @__call_rcu._entry_ptr, !571, !"_entry_ptr", i1 false, i1 false}
!575 = distinct !{null, !576, !"__already_done", i1 false, i1 false}
!576 = !{!"../kernel/rcu/tree.c", i32 3032, i32 3}
!577 = distinct !{null, !578, !"__already_done", i1 false, i1 false}
!578 = !{!"../kernel/rcu/tree.c", i32 3033, i32 3}
!579 = !{ptr @.str.142, !580, !"<string literal>", i1 false, i1 false}
!580 = !{!"../kernel/rcu/tree.c", i32 3053, i32 38}
!581 = !{ptr @__call_rcu.___tp_str, !580, !"___tp_str", i1 false, i1 false}
!582 = distinct !{null, !583, !"__already_done", i1 false, i1 false}
!583 = !{!"../kernel/rcu/tree.c", i32 2995, i32 2}
!584 = distinct !{null, !585, !"__already_done", i1 false, i1 false}
!585 = !{!"../kernel/rcu/tree_nocb.h", i32 388, i32 2}
!586 = distinct !{null, !587, !"__already_done", i1 false, i1 false}
!587 = !{!"../kernel/rcu/tree_nocb.h", i32 408, i32 3}
!588 = !{ptr @.str.144, !589, !"<string literal>", i1 false, i1 false}
!589 = !{!"../kernel/rcu/tree_nocb.h", i32 436, i32 10}
!590 = !{ptr @rcu_nocb_try_bypass.___tp_str, !589, !"___tp_str", i1 false, i1 false}
!591 = distinct !{null, !592, !"__already_done", i1 false, i1 false}
!592 = !{!"../kernel/rcu/tree_nocb.h", i32 437, i32 3}
!593 = distinct !{null, !594, !"__already_done", i1 false, i1 false}
!594 = !{!"../kernel/rcu/tree_nocb.h", i32 438, i32 3}
!595 = !{ptr @rcu_nocb_try_bypass.___tp_str.147, !596, !"___tp_str", i1 false, i1 false}
!596 = !{!"../kernel/rcu/tree_nocb.h", i32 451, i32 11}
!597 = distinct !{null, !598, !"__already_done", i1 false, i1 false}
!598 = !{!"../kernel/rcu/tree_nocb.h", i32 452, i32 4}
!599 = !{ptr @.str.150, !600, !"<string literal>", i1 false, i1 false}
!600 = !{!"../kernel/rcu/tree_nocb.h", i32 473, i32 49}
!601 = !{ptr @rcu_nocb_try_bypass.___tp_str.149, !600, !"___tp_str", i1 false, i1 false}
!602 = !{ptr @.str.152, !603, !"<string literal>", i1 false, i1 false}
!603 = !{!"../kernel/rcu/tree_nocb.h", i32 484, i32 10}
!604 = !{ptr @rcu_nocb_try_bypass.___tp_str.151, !603, !"___tp_str", i1 false, i1 false}
!605 = !{ptr @.str.154, !606, !"<string literal>", i1 false, i1 false}
!606 = !{!"../kernel/rcu/tree_nocb.h", i32 488, i32 10}
!607 = !{ptr @rcu_nocb_try_bypass.___tp_str.153, !606, !"___tp_str", i1 false, i1 false}
!608 = distinct !{null, !609, !"__already_done", i1 false, i1 false}
!609 = !{!"../include/trace/events/rcu.h", i32 284, i32 1}
!610 = distinct !{null, !609, !"__warned", i1 false, i1 false}
!611 = distinct !{null, !612, !"__already_done", i1 false, i1 false}
!612 = !{!"../kernel/rcu/tree.c", i32 1604, i32 3}
!613 = distinct !{null, !614, !"__already_done", i1 false, i1 false}
!614 = !{!"../kernel/rcu/tree.c", i32 1605, i32 2}
!615 = distinct !{null, !616, !"__already_done", i1 false, i1 false}
!616 = !{!"../kernel/rcu/tree_nocb.h", i32 193, i32 2}
!617 = distinct !{null, !618, !"__already_done", i1 false, i1 false}
!618 = !{!"../kernel/rcu/tree_nocb.h", i32 183, i32 3}
!619 = distinct !{null, !620, !"__already_done", i1 false, i1 false}
!620 = !{!"../kernel/rcu/tree_nocb.h", i32 126, i32 2}
!621 = distinct !{null, !622, !"__already_done", i1 false, i1 false}
!622 = !{!"../kernel/rcu/tree_nocb.h", i32 127, i32 9}
!623 = distinct !{null, !624, !"__already_done", i1 false, i1 false}
!624 = !{!"../kernel/rcu/tree_nocb.h", i32 103, i32 2}
!625 = distinct !{null, !626, !"__already_done", i1 false, i1 false}
!626 = !{!"../kernel/rcu/tree_nocb.h", i32 107, i32 2}
!627 = distinct !{null, !628, !"__already_done", i1 false, i1 false}
!628 = !{!"../kernel/rcu/tree_nocb.h", i32 147, i32 2}
!629 = distinct !{null, !630, !"__already_done", i1 false, i1 false}
!630 = !{!"../include/trace/events/rcu.h", i32 571, i32 1}
!631 = distinct !{null, !630, !"__warned", i1 false, i1 false}
!632 = distinct !{null, !633, !"__already_done", i1 false, i1 false}
!633 = !{!"../include/trace/events/rcu.h", i32 512, i32 1}
!634 = distinct !{null, !633, !"__warned", i1 false, i1 false}
!635 = distinct !{null, !636, !"__already_done", i1 false, i1 false}
!636 = !{!"../include/trace/events/rcu.h", i32 537, i32 1}
!637 = distinct !{null, !636, !"__warned", i1 false, i1 false}
!638 = distinct !{null, !639, !"__already_done", i1 false, i1 false}
!639 = !{!"../kernel/rcu/tree.c", i32 1689, i32 2}
!640 = !{ptr @.str.158, !641, !"<string literal>", i1 false, i1 false}
!641 = !{!"../kernel/rcu/tree.c", i32 1644, i32 55}
!642 = !{ptr @__note_gp_changes.___tp_str, !641, !"___tp_str", i1 false, i1 false}
!643 = !{ptr @.str.160, !644, !"<string literal>", i1 false, i1 false}
!644 = !{!"../kernel/rcu/tree.c", i32 1660, i32 55}
!645 = !{ptr @__note_gp_changes.___tp_str.159, !644, !"___tp_str", i1 false, i1 false}
!646 = !{ptr @.str.161, !647, !"<string literal>", i1 false, i1 false}
!647 = !{!"../kernel/rcu/tree.c", i32 1509, i32 38}
!648 = !{ptr @rcu_accelerate_cbs.___tp_str, !647, !"___tp_str", i1 false, i1 false}
!649 = !{ptr @.str.163, !650, !"<string literal>", i1 false, i1 false}
!650 = !{!"../kernel/rcu/tree.c", i32 1527, i32 54}
!651 = !{ptr @rcu_accelerate_cbs.___tp_str.162, !650, !"___tp_str", i1 false, i1 false}
!652 = !{ptr @.str.165, !653, !"<string literal>", i1 false, i1 false}
!653 = !{!"../kernel/rcu/tree.c", i32 1529, i32 54}
!654 = !{ptr @rcu_accelerate_cbs.___tp_str.164, !653, !"___tp_str", i1 false, i1 false}
!655 = !{ptr @.str.167, !656, !"<string literal>", i1 false, i1 false}
!656 = !{!"../kernel/rcu/tree.c", i32 1531, i32 38}
!657 = !{ptr @rcu_accelerate_cbs.___tp_str.166, !656, !"___tp_str", i1 false, i1 false}
!658 = distinct !{null, !659, !"__warned", i1 false, i1 false}
!659 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!660 = !{ptr @.str.168, !659, !"<string literal>", i1 false, i1 false}
!661 = !{ptr @.str.169, !659, !"<string literal>", i1 false, i1 false}
!662 = distinct !{null, !663, !"__warned", i1 false, i1 false}
!663 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!664 = !{ptr @.str.170, !663, !"<string literal>", i1 false, i1 false}
!665 = distinct !{null, !666, !"__already_done", i1 false, i1 false}
!666 = !{!"../kernel/rcu/tree.c", i32 1558, i32 2}
!667 = !{ptr @.str.171, !668, !"<string literal>", i1 false, i1 false}
!668 = !{!"../kernel/rcu/tree.c", i32 1386, i32 48}
!669 = !{ptr @rcu_start_this_gp.___tp_str, !668, !"___tp_str", i1 false, i1 false}
!670 = !{ptr @.str.173, !671, !"<string literal>", i1 false, i1 false}
!671 = !{!"../kernel/rcu/tree.c", i32 1395, i32 8}
!672 = !{ptr @rcu_start_this_gp.___tp_str.172, !671, !"___tp_str", i1 false, i1 false}
!673 = !{ptr @.str.175, !674, !"<string literal>", i1 false, i1 false}
!674 = !{!"../kernel/rcu/tree.c", i32 1407, i32 8}
!675 = !{ptr @rcu_start_this_gp.___tp_str.174, !674, !"___tp_str", i1 false, i1 false}
!676 = distinct !{null, !677, !"__already_done", i1 false, i1 false}
!677 = !{!"../kernel/rcu/tree.c", i32 1411, i32 4}
!678 = !{ptr @.str.177, !679, !"<string literal>", i1 false, i1 false}
!679 = !{!"../kernel/rcu/tree.c", i32 1418, i32 43}
!680 = !{ptr @rcu_start_this_gp.___tp_str.176, !679, !"___tp_str", i1 false, i1 false}
!681 = !{ptr @.str.179, !682, !"<string literal>", i1 false, i1 false}
!682 = !{!"../kernel/rcu/tree.c", i32 1421, i32 42}
!683 = !{ptr @rcu_start_this_gp.___tp_str.178, !682, !"___tp_str", i1 false, i1 false}
!684 = !{ptr @.str.181, !685, !"<string literal>", i1 false, i1 false}
!685 = !{!"../kernel/rcu/tree.c", i32 1425, i32 43}
!686 = !{ptr @rcu_start_this_gp.___tp_str.180, !685, !"___tp_str", i1 false, i1 false}
!687 = !{ptr @.str.183, !688, !"<string literal>", i1 false, i1 false}
!688 = !{!"../kernel/rcu/tree.c", i32 1428, i32 70}
!689 = !{ptr @rcu_start_this_gp.___tp_str.182, !688, !"___tp_str", i1 false, i1 false}
!690 = distinct !{null, !691, !"__already_done", i1 false, i1 false}
!691 = !{!"../kernel/rcu/tree.c", i32 1437, i32 3}
!692 = distinct !{null, !693, !"__already_done", i1 false, i1 false}
!693 = !{!"../include/trace/events/rcu.h", i32 107, i32 1}
!694 = distinct !{null, !693, !"__warned", i1 false, i1 false}
!695 = distinct !{null, !696, !"__already_done", i1 false, i1 false}
!696 = !{!"../kernel/rcu/tree.c", i32 3916, i32 2}
!697 = distinct !{null, !698, !"__already_done", i1 false, i1 false}
!698 = !{!"../kernel/rcu/tree_stall.h", i32 637, i32 2}
!699 = !{ptr @check_cpu_stall.___rfd_beenhere, !700, !"___rfd_beenhere", i1 false, i1 false}
!700 = !{!"../kernel/rcu/tree_stall.h", i32 690, i32 4}
!701 = !{ptr @check_cpu_stall.___rfd_beenhere.185, !702, !"___rfd_beenhere", i1 false, i1 false}
!702 = !{!"../kernel/rcu/tree_stall.h", i32 708, i32 4}
!703 = distinct !{null, !704, !"__already_done", i1 false, i1 false}
!704 = !{!"../kernel/rcu/tree_stall.h", i32 171, i32 3}
!705 = !{ptr @.str.186, !704, !"<string literal>", i1 false, i1 false}
!706 = !{ptr @rcu_stall_kick_kthreads.___rfd_beenhere, !707, !"___rfd_beenhere", i1 false, i1 false}
!707 = !{!"../kernel/rcu/tree_stall.h", i32 173, i32 3}
!708 = distinct !{null, !709, !"__already_done", i1 false, i1 false}
!709 = !{!"../kernel/rcu/tree_stall.h", i32 578, i32 2}
!710 = !{ptr @.str.187, !711, !"<string literal>", i1 false, i1 false}
!711 = !{!"../kernel/rcu/tree_stall.h", i32 590, i32 42}
!712 = !{ptr @print_cpu_stall.___tp_str, !711, !"___tp_str", i1 false, i1 false}
!713 = !{ptr @.str.188, !714, !"<string literal>", i1 false, i1 false}
!714 = !{!"../kernel/rcu/tree_stall.h", i32 591, i32 2}
!715 = !{ptr @.str.189, !714, !"<string literal>", i1 false, i1 false}
!716 = !{ptr @print_cpu_stall._entry, !714, !"_entry", i1 false, i1 false}
!717 = !{ptr @print_cpu_stall._entry_ptr, !714, !"_entry_ptr", i1 false, i1 false}
!718 = distinct !{null, !719, !"__already_done", i1 false, i1 false}
!719 = !{!"../kernel/rcu/tree_stall.h", i32 594, i32 2}
!720 = !{ptr @.str.192, !721, !"<string literal>", i1 false, i1 false}
!721 = !{!"../kernel/rcu/tree_stall.h", i32 597, i32 2}
!722 = !{ptr @print_cpu_stall._entry.191, !721, !"_entry", i1 false, i1 false}
!723 = !{ptr @print_cpu_stall._entry_ptr.193, !721, !"_entry_ptr", i1 false, i1 false}
!724 = distinct !{null, !725, !"__already_done", i1 false, i1 false}
!725 = !{!"../kernel/rcu/tree_stall.h", i32 611, i32 2}
!726 = distinct !{null, !727, !"__already_done", i1 false, i1 false}
!727 = !{!"../include/trace/events/rcu.h", i32 444, i32 1}
!728 = distinct !{null, !727, !"__warned", i1 false, i1 false}
!729 = !{ptr @.str.195, !730, !"<string literal>", i1 false, i1 false}
!730 = !{!"../kernel/rcu/tree_stall.h", i32 409, i32 17}
!731 = !{ptr @.str.196, !732, !"<string literal>", i1 false, i1 false}
!732 = !{!"../kernel/rcu/tree_stall.h", i32 411, i32 17}
!733 = !{ptr @.str.197, !734, !"<string literal>", i1 false, i1 false}
!734 = !{!"../kernel/rcu/tree_stall.h", i32 417, i32 2}
!735 = !{ptr @.str.198, !734, !"<string literal>", i1 false, i1 false}
!736 = !{ptr @print_cpu_stall_info._entry, !734, !"_entry", i1 false, i1 false}
!737 = !{ptr @print_cpu_stall_info._entry_ptr, !734, !"_entry_ptr", i1 false, i1 false}
!738 = !{ptr @.str.199, !734, !"<string literal>", i1 false, i1 false}
!739 = !{ptr @.str.200, !734, !"<string literal>", i1 false, i1 false}
!740 = !{ptr @.str.201, !734, !"<string literal>", i1 false, i1 false}
!741 = !{ptr @.str.202, !734, !"<string literal>", i1 false, i1 false}
!742 = !{ptr @.str.203, !734, !"<string literal>", i1 false, i1 false}
!743 = !{ptr @.str.204, !734, !"<string literal>", i1 false, i1 false}
!744 = !{ptr @.str.205, !745, !"<string literal>", i1 false, i1 false}
!745 = !{!"../kernel/rcu/tree_stall.h", i32 486, i32 3}
!746 = !{ptr @.str.206, !745, !"<string literal>", i1 false, i1 false}
!747 = !{ptr @rcu_check_gp_kthread_expired_fqs_timer._entry, !745, !"_entry", i1 false, i1 false}
!748 = !{ptr @rcu_check_gp_kthread_expired_fqs_timer._entry_ptr, !745, !"_entry_ptr", i1 false, i1 false}
!749 = !{ptr @.str.208, !750, !"<string literal>", i1 false, i1 false}
!750 = !{!"../kernel/rcu/tree_stall.h", i32 492, i32 3}
!751 = !{ptr @rcu_check_gp_kthread_expired_fqs_timer._entry.207, !750, !"_entry", i1 false, i1 false}
!752 = !{ptr @rcu_check_gp_kthread_expired_fqs_timer._entry_ptr.209, !750, !"_entry_ptr", i1 false, i1 false}
!753 = !{ptr @.str.210, !754, !"<string literal>", i1 false, i1 false}
!754 = !{!"../kernel/rcu/tree_stall.h", i32 442, i32 3}
!755 = !{ptr @.str.211, !754, !"<string literal>", i1 false, i1 false}
!756 = !{ptr @rcu_check_gp_kthread_starvation._entry, !754, !"_entry", i1 false, i1 false}
!757 = !{ptr @rcu_check_gp_kthread_starvation._entry_ptr, !754, !"_entry_ptr", i1 false, i1 false}
!758 = !{ptr @.str.213, !759, !"<string literal>", i1 false, i1 false}
!759 = !{!"../kernel/rcu/tree_stall.h", i32 450, i32 4}
!760 = !{ptr @rcu_check_gp_kthread_starvation._entry.212, !759, !"_entry", i1 false, i1 false}
!761 = !{ptr @rcu_check_gp_kthread_starvation._entry_ptr.214, !759, !"_entry_ptr", i1 false, i1 false}
!762 = !{ptr @.str.216, !763, !"<string literal>", i1 false, i1 false}
!763 = !{!"../kernel/rcu/tree_stall.h", i32 451, i32 4}
!764 = !{ptr @rcu_check_gp_kthread_starvation._entry.215, !763, !"_entry", i1 false, i1 false}
!765 = !{ptr @rcu_check_gp_kthread_starvation._entry_ptr.217, !763, !"_entry_ptr", i1 false, i1 false}
!766 = !{ptr @.str.219, !767, !"<string literal>", i1 false, i1 false}
!767 = !{!"../kernel/rcu/tree_stall.h", i32 455, i32 6}
!768 = !{ptr @rcu_check_gp_kthread_starvation._entry.218, !767, !"_entry", i1 false, i1 false}
!769 = !{ptr @rcu_check_gp_kthread_starvation._entry_ptr.220, !767, !"_entry_ptr", i1 false, i1 false}
!770 = !{ptr @.str.222, !771, !"<string literal>", i1 false, i1 false}
!771 = !{!"../kernel/rcu/tree_stall.h", i32 457, i32 6}
!772 = !{ptr @rcu_check_gp_kthread_starvation._entry.221, !771, !"_entry", i1 false, i1 false}
!773 = !{ptr @rcu_check_gp_kthread_starvation._entry_ptr.223, !771, !"_entry_ptr", i1 false, i1 false}
!774 = distinct !{null, !775, !"__already_done", i1 false, i1 false}
!775 = !{!"../kernel/rcu/tree_stall.h", i32 339, i32 3}
!776 = !{ptr @.str.224, !777, !"<string literal>", i1 false, i1 false}
!777 = !{!"../kernel/rcu/tree_stall.h", i32 342, i32 6}
!778 = !{ptr @.str.225, !777, !"<string literal>", i1 false, i1 false}
!779 = !{ptr @rcu_dump_cpu_stacks._entry, !777, !"_entry", i1 false, i1 false}
!780 = !{ptr @rcu_dump_cpu_stacks._entry_ptr, !777, !"_entry_ptr", i1 false, i1 false}
!781 = distinct !{null, !782, !"__already_done", i1 false, i1 false}
!782 = !{!"../kernel/rcu/tree_stall.h", i32 346, i32 3}
!783 = !{ptr @panic_on_rcu_stall.cpu_stall, !784, !"cpu_stall", i1 false, i1 false}
!784 = !{!"../kernel/rcu/tree_stall.h", i32 112, i32 13}
!785 = !{ptr @.str.227, !786, !"<string literal>", i1 false, i1 false}
!786 = !{!"../kernel/rcu/tree_stall.h", i32 118, i32 9}
!787 = distinct !{null, !788, !"__already_done", i1 false, i1 false}
!788 = !{!"../kernel/rcu/tree_stall.h", i32 507, i32 2}
!789 = !{ptr @.str.228, !790, !"<string literal>", i1 false, i1 false}
!790 = !{!"../kernel/rcu/tree_stall.h", i32 519, i32 42}
!791 = !{ptr @print_other_cpu_stall.___tp_str, !790, !"___tp_str", i1 false, i1 false}
!792 = !{ptr @.str.229, !793, !"<string literal>", i1 false, i1 false}
!793 = !{!"../kernel/rcu/tree_stall.h", i32 520, i32 2}
!794 = !{ptr @.str.230, !793, !"<string literal>", i1 false, i1 false}
!795 = !{ptr @print_other_cpu_stall._entry, !793, !"_entry", i1 false, i1 false}
!796 = !{ptr @print_other_cpu_stall._entry_ptr, !793, !"_entry_ptr", i1 false, i1 false}
!797 = distinct !{null, !798, !"__already_done", i1 false, i1 false}
!798 = !{!"../kernel/rcu/tree_stall.h", i32 524, i32 4}
!799 = distinct !{null, !800, !"__already_done", i1 false, i1 false}
!800 = !{!"../kernel/rcu/tree_stall.h", i32 531, i32 3}
!801 = !{ptr @.str.234, !802, !"<string literal>", i1 false, i1 false}
!802 = !{!"../kernel/rcu/tree_stall.h", i32 536, i32 2}
!803 = !{ptr @print_other_cpu_stall._entry.233, !802, !"_entry", i1 false, i1 false}
!804 = !{ptr @print_other_cpu_stall._entry_ptr.235, !802, !"_entry_ptr", i1 false, i1 false}
!805 = !{ptr @.str.237, !806, !"<string literal>", i1 false, i1 false}
!806 = !{!"../kernel/rcu/tree_stall.h", i32 547, i32 4}
!807 = !{ptr @print_other_cpu_stall._entry.236, !806, !"_entry", i1 false, i1 false}
!808 = !{ptr @print_other_cpu_stall._entry_ptr.238, !806, !"_entry_ptr", i1 false, i1 false}
!809 = !{ptr @.str.240, !810, !"<string literal>", i1 false, i1 false}
!810 = !{!"../kernel/rcu/tree_stall.h", i32 551, i32 4}
!811 = !{ptr @print_other_cpu_stall._entry.239, !810, !"_entry", i1 false, i1 false}
!812 = !{ptr @print_other_cpu_stall._entry_ptr.241, !810, !"_entry_ptr", i1 false, i1 false}
!813 = distinct !{null, !814, !"__already_done", i1 false, i1 false}
!814 = !{!"../kernel/rcu/tree_stall.h", i32 320, i32 2}
!815 = distinct !{null, !816, !"__already_done", i1 false, i1 false}
!816 = !{!"../include/trace/events/rcu.h", i32 810, i32 1}
!817 = distinct !{null, !816, !"__warned", i1 false, i1 false}
!818 = distinct !{null, !819, !"__already_done", i1 false, i1 false}
!819 = !{!"../kernel/rcu/rcu.h", i32 59, i32 2}
!820 = !{ptr @.str.242, !819, !"<string literal>", i1 false, i1 false}
!821 = !{ptr @init_completion.__key, !822, !"__key", i1 false, i1 false}
!822 = !{!"../include/linux/completion.h", i32 87, i32 2}
!823 = !{ptr @.str.243, !822, !"<string literal>", i1 false, i1 false}
!824 = !{ptr @.str.244, !825, !"<string literal>", i1 false, i1 false}
!825 = !{!"../kernel/rcu/tree.c", i32 3994, i32 20}
!826 = !{ptr @rcu_barrier_func.___tp_str, !825, !"___tp_str", i1 false, i1 false}
!827 = distinct !{null, !828, !"__already_done", i1 false, i1 false}
!828 = !{!"../kernel/rcu/tree.c", i32 3998, i32 2}
!829 = !{ptr @.str.246, !830, !"<string literal>", i1 false, i1 false}
!830 = !{!"../kernel/rcu/tree.c", i32 4003, i32 21}
!831 = !{ptr @rcu_barrier_func.___tp_str.245, !830, !"___tp_str", i1 false, i1 false}
!832 = !{ptr @.str.247, !833, !"<string literal>", i1 false, i1 false}
!833 = !{!"../kernel/rcu/tree.c", i32 3979, i32 21}
!834 = !{ptr @rcu_barrier_callback.___tp_str, !833, !"___tp_str", i1 false, i1 false}
!835 = !{ptr @.str.249, !836, !"<string literal>", i1 false, i1 false}
!836 = !{!"../kernel/rcu/tree.c", i32 3982, i32 21}
!837 = !{ptr @rcu_barrier_callback.___tp_str.248, !836, !"___tp_str", i1 false, i1 false}
!838 = distinct !{null, !839, !"__already_done", i1 false, i1 false}
!839 = !{!"../kernel/rcu/rcu.h", i32 72, i32 2}
!840 = distinct !{null, !841, !"__already_done", i1 false, i1 false}
!841 = !{!"../kernel/rcu/tree.c", i32 2196, i32 4}
!842 = distinct !{null, !843, !"__already_done", i1 false, i1 false}
!843 = !{!"../kernel/rcu/tree.c", i32 2199, i32 3}
!844 = distinct !{null, !845, !"__already_done", i1 false, i1 false}
!845 = !{!"../kernel/rcu/tree.c", i32 2200, i32 3}
!846 = distinct !{null, !847, !"__already_done", i1 false, i1 false}
!847 = !{!"../kernel/rcu/tree.c", i32 2210, i32 4}
!848 = distinct !{null, !849, !"__already_done", i1 false, i1 false}
!849 = !{!"../kernel/rcu/tree.c", i32 2221, i32 3}
!850 = distinct !{null, !851, !"__already_done", i1 false, i1 false}
!851 = !{!"../include/trace/events/rcu.h", i32 368, i32 1}
!852 = distinct !{null, !851, !"__warned", i1 false, i1 false}
!853 = distinct !{null, !854, !"__already_done", i1 false, i1 false}
!854 = !{!"../kernel/rcu/tree.c", i32 2158, i32 2}
!855 = distinct !{null, !856, !"__already_done", i1 false, i1 false}
!856 = !{!"../kernel/rcu/tree.c", i32 2161, i32 2}
!857 = !{ptr @.str.255, !858, !"<string literal>", i1 false, i1 false}
!858 = !{!"../kernel/rcu/tree.c", i32 4460, i32 3}
!859 = !{ptr @.str.256, !858, !"<string literal>", i1 false, i1 false}
!860 = !{ptr @rcu_spawn_gp_kthread._entry, !858, !"_entry", i1 false, i1 false}
!861 = !{ptr @rcu_spawn_gp_kthread._entry_ptr, !858, !"_entry_ptr", i1 false, i1 false}
!862 = !{ptr @.str.257, !863, !"<string literal>", i1 false, i1 false}
!863 = !{!"../kernel/rcu/tree.c", i32 4464, i32 6}
!864 = distinct !{null, !865, !"__already_done", i1 false, i1 false}
!865 = !{!"../kernel/rcu/tree.c", i32 4465, i32 6}
!866 = !{ptr @.str.258, !865, !"<string literal>", i1 false, i1 false}
!867 = distinct !{null, !868, !"__already_done", i1 false, i1 false}
!868 = !{!"../kernel/rcu/tree.c", i32 4477, i32 2}
!869 = !{ptr @.str.260, !870, !"<string literal>", i1 false, i1 false}
!870 = !{!"../kernel/rcu/tree.c", i32 2118, i32 13}
!871 = !{ptr @rcu_gp_kthread.___tp_str, !870, !"___tp_str", i1 false, i1 false}
!872 = !{ptr @.str.262, !873, !"<string literal>", i1 false, i1 false}
!873 = !{!"../kernel/rcu/tree.c", i32 2132, i32 13}
!874 = !{ptr @rcu_gp_kthread.___tp_str.261, !873, !"___tp_str", i1 false, i1 false}
!875 = !{ptr @.str.263, !876, !"<string literal>", i1 false, i1 false}
!876 = !{!"../kernel/rcu/tree.c", i32 1722, i32 3}
!877 = !{ptr @.str.264, !876, !"<string literal>", i1 false, i1 false}
!878 = !{ptr @rcu_gp_torture_wait._entry, !876, !"_entry", i1 false, i1 false}
!879 = !{ptr @rcu_gp_torture_wait._entry_ptr, !876, !"_entry_ptr", i1 false, i1 false}
!880 = !{ptr @.str.266, !881, !"<string literal>", i1 false, i1 false}
!881 = !{!"../kernel/rcu/tree.c", i32 1724, i32 3}
!882 = !{ptr @rcu_gp_torture_wait._entry.265, !881, !"_entry", i1 false, i1 false}
!883 = !{ptr @rcu_gp_torture_wait._entry_ptr.267, !881, !"_entry_ptr", i1 false, i1 false}
!884 = distinct !{null, !885, !"__already_done", i1 false, i1 false}
!885 = !{!"../kernel/rcu/tree.c", i32 1753, i32 3}
!886 = distinct !{null, !887, !"__already_done", i1 false, i1 false}
!887 = !{!"../kernel/rcu/tree.c", i32 1758, i32 6}
!888 = distinct !{null, !889, !"__already_done", i1 false, i1 false}
!889 = !{!"../kernel/rcu/tree.c", i32 1763, i32 3}
!890 = !{ptr @.str.270, !891, !"<string literal>", i1 false, i1 false}
!891 = !{!"../kernel/rcu/tree.c", i32 1772, i32 59}
!892 = !{ptr @rcu_gp_init.___tp_str, !891, !"___tp_str", i1 false, i1 false}
!893 = distinct !{null, !894, !"__already_done", i1 false, i1 false}
!894 = !{!"../kernel/rcu/tree.c", i32 1773, i32 2}
!895 = distinct !{null, !896, !"__already_done", i1 false, i1 false}
!896 = !{!"../kernel/rcu/tree.c", i32 1799, i32 4}
!897 = distinct !{null, !898, !"__already_done", i1 false, i1 false}
!898 = !{!"../kernel/rcu/tree.c", i32 1835, i32 3}
!899 = distinct !{null, !900, !"__already_done", i1 false, i1 false}
!900 = !{!"../kernel/rcu/tree.c", i32 1872, i32 4}
!901 = distinct !{null, !902, !"__already_done", i1 false, i1 false}
!902 = !{!"../kernel/rcu/tree.c", i32 4115, i32 2}
!903 = distinct !{null, !904, !"__already_done", i1 false, i1 false}
!904 = !{!"../kernel/rcu/tree.c", i32 4124, i32 3}
!905 = distinct !{null, !906, !"__already_done", i1 false, i1 false}
!906 = !{!"../kernel/rcu/tree.c", i32 2418, i32 6}
!907 = distinct !{null, !908, !"__already_done", i1 false, i1 false}
!908 = !{!"../kernel/rcu/tree.c", i32 2419, i32 6}
!909 = distinct !{null, !910, !"__already_done", i1 false, i1 false}
!910 = !{!"../kernel/rcu/tree.c", i32 2429, i32 3}
!911 = distinct !{null, !912, !"__already_done", i1 false, i1 false}
!912 = !{!"../kernel/rcu/tree.c", i32 2431, i32 4}
!913 = distinct !{null, !914, !"__already_done", i1 false, i1 false}
!914 = !{!"../kernel/rcu/tree.c", i32 2435, i32 3}
!915 = distinct !{null, !916, !"__already_done", i1 false, i1 false}
!916 = !{!"../kernel/rcu/tree_plugin.h", i32 948, i32 2}
!917 = !{ptr @.str.280, !916, !"<string literal>", i1 false, i1 false}
!918 = distinct !{null, !919, !"__already_done", i1 false, i1 false}
!919 = !{!"../include/trace/events/rcu.h", i32 147, i32 1}
!920 = distinct !{null, !919, !"__warned", i1 false, i1 false}
!921 = !{ptr @.str.281, !922, !"<string literal>", i1 false, i1 false}
!922 = !{!"../kernel/rcu/tree.c", i32 1961, i32 12}
!923 = !{ptr @rcu_gp_fqs_loop.___tp_str, !922, !"___tp_str", i1 false, i1 false}
!924 = !{ptr @.str.283, !925, !"<string literal>", i1 false, i1 false}
!925 = !{!"../kernel/rcu/tree.c", i32 1976, i32 13}
!926 = !{ptr @rcu_gp_fqs_loop.___tp_str.282, !925, !"___tp_str", i1 false, i1 false}
!927 = !{ptr @.str.285, !928, !"<string literal>", i1 false, i1 false}
!928 = !{!"../kernel/rcu/tree.c", i32 1984, i32 13}
!929 = !{ptr @rcu_gp_fqs_loop.___tp_str.284, !928, !"___tp_str", i1 false, i1 false}
!930 = !{ptr @.str.287, !931, !"<string literal>", i1 false, i1 false}
!931 = !{!"../kernel/rcu/tree.c", i32 1995, i32 13}
!932 = !{ptr @rcu_gp_fqs_loop.___tp_str.286, !931, !"___tp_str", i1 false, i1 false}
!933 = distinct !{null, !934, !"__already_done", i1 false, i1 false}
!934 = !{!"../kernel/rcu/tree.c", i32 1929, i32 3}
!935 = distinct !{null, !936, !"__already_done", i1 false, i1 false}
!936 = !{!"../kernel/rcu/tree.c", i32 2657, i32 4}
!937 = distinct !{null, !938, !"__already_done", i1 false, i1 false}
!938 = !{!"../kernel/rcu/tree.c", i32 2660, i32 3}
!939 = distinct !{null, !940, !"__already_done", i1 false, i1 false}
!940 = !{!"../kernel/rcu/tree.c", i32 2672, i32 4}
!941 = distinct !{null, !942, !"__already_done", i1 false, i1 false}
!942 = !{!"../kernel/rcu/tree_plugin.h", i32 1241, i32 2}
!943 = !{ptr @.str.290, !944, !"<string literal>", i1 false, i1 false}
!944 = !{!"../kernel/rcu/tree.c", i32 1213, i32 56}
!945 = !{ptr @dyntick_save_progress_counter.___tp_str, !944, !"___tp_str", i1 false, i1 false}
!946 = distinct !{null, !947, !"__already_done", i1 false, i1 false}
!947 = !{!"../include/trace/events/rcu.h", i32 411, i32 1}
!948 = distinct !{null, !947, !"__warned", i1 false, i1 false}
!949 = !{ptr @rcu_implicit_dynticks_qs.___tp_str, !950, !"___tp_str", i1 false, i1 false}
!950 = !{!"../kernel/rcu/tree.c", i32 1240, i32 56}
!951 = distinct !{null, !952, !"__already_done", i1 false, i1 false}
!952 = !{!"../kernel/rcu/tree.c", i32 1263, i32 6}
!953 = !{ptr @.str.291, !954, !"<string literal>", i1 false, i1 false}
!954 = !{!"../kernel/rcu/tree.c", i32 1267, i32 3}
!955 = !{ptr @.str.292, !954, !"<string literal>", i1 false, i1 false}
!956 = !{ptr @rcu_implicit_dynticks_qs._entry, !954, !"_entry", i1 false, i1 false}
!957 = !{ptr @rcu_implicit_dynticks_qs._entry_ptr, !954, !"_entry_ptr", i1 false, i1 false}
!958 = !{ptr @.str.294, !959, !"<string literal>", i1 false, i1 false}
!959 = !{!"../kernel/rcu/tree.c", i32 1271, i32 4}
!960 = !{ptr @rcu_implicit_dynticks_qs._entry.293, !959, !"_entry", i1 false, i1 false}
!961 = !{ptr @rcu_implicit_dynticks_qs._entry_ptr.295, !959, !"_entry_ptr", i1 false, i1 false}
!962 = !{ptr @.str.297, !963, !"<string literal>", i1 false, i1 false}
!963 = !{!"../kernel/rcu/tree.c", i32 1274, i32 3}
!964 = !{ptr @rcu_implicit_dynticks_qs._entry.296, !963, !"_entry", i1 false, i1 false}
!965 = !{ptr @rcu_implicit_dynticks_qs._entry_ptr.298, !963, !"_entry_ptr", i1 false, i1 false}
!966 = !{ptr @.str.299, !963, !"<string literal>", i1 false, i1 false}
!967 = distinct !{null, !968, !"__already_done", i1 false, i1 false}
!968 = !{!"../kernel/rcu/tree.c", i32 2036, i32 2}
!969 = distinct !{null, !970, !"__already_done", i1 false, i1 false}
!970 = !{!"../kernel/rcu/tree.c", i32 2051, i32 7}
!971 = distinct !{null, !972, !"__already_done", i1 false, i1 false}
!972 = !{!"../kernel/rcu/tree.c", i32 2053, i32 3}
!973 = distinct !{null, !974, !"__already_done", i1 false, i1 false}
!974 = !{!"../kernel/rcu/tree.c", i32 2062, i32 4}
!975 = distinct !{null, !976, !"__already_done", i1 false, i1 false}
!976 = !{!"../kernel/rcu/tree.c", i32 2067, i32 3}
!977 = !{ptr @.str.304, !978, !"<string literal>", i1 false, i1 false}
!978 = !{!"../kernel/rcu/tree.c", i32 2077, i32 59}
!979 = !{ptr @rcu_gp_cleanup.___tp_str, !978, !"___tp_str", i1 false, i1 false}
!980 = !{ptr @.str.306, !981, !"<string literal>", i1 false, i1 false}
!981 = !{!"../kernel/rcu/tree.c", i32 2085, i32 7}
!982 = !{ptr @rcu_gp_cleanup.___tp_str.305, !981, !"___tp_str", i1 false, i1 false}
!983 = !{ptr @rcu_gp_cleanup.___tp_str.307, !984, !"___tp_str", i1 false, i1 false}
!984 = !{!"../kernel/rcu/tree.c", i32 2095, i32 12}
!985 = distinct !{null, !986, !"__already_done", i1 false, i1 false}
!986 = !{!"../kernel/rcu/tree.c", i32 2100, i32 2}
!987 = distinct !{null, !988, !"__already_done", i1 false, i1 false}
!988 = !{!"../kernel/rcu/tree_plugin.h", i32 989, i32 2}
!989 = !{ptr @rcu_future_gp_cleanup.___tp_str, !990, !"___tp_str", i1 false, i1 false}
!990 = !{!"../kernel/rcu/tree.c", i32 1454, i32 17}
!991 = !{ptr @.str.310, !992, !"<string literal>", i1 false, i1 false}
!992 = !{!"../kernel/rcu/tree.c", i32 1454, i32 38}
!993 = !{ptr @rcu_future_gp_cleanup.___tp_str.309, !992, !"___tp_str", i1 false, i1 false}
!994 = distinct !{null, !995, !"__already_done", i1 false, i1 false}
!995 = !{!"../kernel/rcu/tree.c", i32 2899, i32 2}
!996 = !{ptr @.str.311, !995, !"<string literal>", i1 false, i1 false}
!997 = !{ptr @__func__.rcu_spawn_core_kthreads, !995, !"<string literal>", i1 false, i1 false}
!998 = !{ptr @.str.312, !999, !"<string literal>", i1 false, i1 false}
!999 = !{!"../kernel/rcu/tree.c", i32 2883, i32 18}
!1000 = !{ptr @rcu_cpu_thread_spec, !1001, !"rcu_cpu_thread_spec", i1 false, i1 false}
!1001 = !{!"../kernel/rcu/tree.c", i32 2879, i32 34}
!1002 = !{ptr @.str.313, !1003, !"<string literal>", i1 false, i1 false}
!1003 = !{!"../kernel/rcu/tree.c", i32 2855, i32 24}
!1004 = !{ptr @rcu_cpu_kthread.___tp_str, !1003, !"___tp_str", i1 false, i1 false}
!1005 = !{ptr @.str.315, !1006, !"<string literal>", i1 false, i1 false}
!1006 = !{!"../kernel/rcu/tree.c", i32 2867, i32 26}
!1007 = !{ptr @rcu_cpu_kthread.___tp_str.314, !1006, !"___tp_str", i1 false, i1 false}
!1008 = !{ptr @.str.317, !1009, !"<string literal>", i1 false, i1 false}
!1009 = !{!"../kernel/rcu/tree.c", i32 2873, i32 24}
!1010 = !{ptr @rcu_cpu_kthread.___tp_str.316, !1009, !"___tp_str", i1 false, i1 false}
!1011 = !{ptr @.str.319, !1012, !"<string literal>", i1 false, i1 false}
!1012 = !{!"../kernel/rcu/tree.c", i32 2875, i32 24}
!1013 = !{ptr @rcu_cpu_kthread.___tp_str.318, !1012, !"___tp_str", i1 false, i1 false}
!1014 = !{ptr @.str.320, !1015, !"<string literal>", i1 false, i1 false}
!1015 = !{!"../kernel/rcu/tree.c", i32 2750, i32 24}
!1016 = !{ptr @rcu_core.___tp_str, !1015, !"___tp_str", i1 false, i1 false}
!1017 = distinct !{null, !1018, !"__already_done", i1 false, i1 false}
!1018 = !{!"../kernel/rcu/tree.c", i32 2751, i32 2}
!1019 = !{ptr @.str.322, !1020, !"<string literal>", i1 false, i1 false}
!1020 = !{!"../kernel/rcu/tree.c", i32 2786, i32 24}
!1021 = !{ptr @rcu_core.___tp_str.321, !1020, !"___tp_str", i1 false, i1 false}
!1022 = distinct !{null, !1023, !"__already_done", i1 false, i1 false}
!1023 = !{!"../kernel/rcu/tree.c", i32 2492, i32 2}
!1024 = !{ptr @.str.323, !1025, !"<string literal>", i1 false, i1 false}
!1025 = !{!"../kernel/rcu/tree.c", i32 2509, i32 38}
!1026 = !{ptr @rcu_do_batch.___tp_str, !1025, !"___tp_str", i1 false, i1 false}
!1027 = distinct !{null, !1028, !"__already_done", i1 false, i1 false}
!1028 = !{!"../kernel/rcu/tree.c", i32 2550, i32 4}
!1029 = distinct !{null, !1030, !"__already_done", i1 false, i1 false}
!1030 = !{!"../kernel/rcu/tree.c", i32 2552, i32 4}
!1031 = distinct !{null, !1032, !"__already_done", i1 false, i1 false}
!1032 = !{!"../kernel/rcu/tree.c", i32 2583, i32 2}
!1033 = distinct !{null, !1034, !"__already_done", i1 false, i1 false}
!1034 = !{!"../kernel/rcu/tree.c", i32 2584, i32 2}
!1035 = distinct !{null, !1036, !"__already_done", i1 false, i1 false}
!1036 = !{!"../kernel/rcu/tree.c", i32 2586, i32 2}
!1037 = distinct !{null, !1038, !"__already_done", i1 false, i1 false}
!1038 = !{!"../kernel/rcu/tree.c", i32 2587, i32 2}
!1039 = distinct !{null, !1040, !"__already_done", i1 false, i1 false}
!1040 = !{!"../include/trace/events/rcu.h", i32 604, i32 1}
!1041 = distinct !{null, !1040, !"__warned", i1 false, i1 false}
!1042 = distinct !{null, !1043, !"__already_done", i1 false, i1 false}
!1043 = !{!"../include/trace/events/rcu.h", i32 721, i32 1}
!1044 = distinct !{null, !1043, !"__warned", i1 false, i1 false}
!1045 = distinct !{null, !1046, !"__already_done", i1 false, i1 false}
!1046 = !{!"../include/trace/events/rcu.h", i32 631, i32 1}
!1047 = distinct !{null, !1046, !"__warned", i1 false, i1 false}
!1048 = !{ptr @.str.330, !1049, !"<string literal>", i1 false, i1 false}
!1049 = !{!"../kernel/rcu/tree.c", i32 510, i32 2}
!1050 = !{ptr @.str.331, !1049, !"<string literal>", i1 false, i1 false}
!1051 = !{ptr @adjust_jiffies_till_sched_qs._entry, !1049, !"_entry", i1 false, i1 false}
!1052 = !{ptr @adjust_jiffies_till_sched_qs._entry_ptr, !1049, !"_entry_ptr", i1 false, i1 false}
!1053 = !{ptr @.str.332, !1054, !"<string literal>", i1 false, i1 false}
!1054 = !{!"../kernel/rcu/tree.c", i32 4719, i32 3}
!1055 = !{ptr @.str.333, !1054, !"<string literal>", i1 false, i1 false}
!1056 = !{ptr @kfree_rcu_batch_init._entry, !1054, !"_entry", i1 false, i1 false}
!1057 = !{ptr @kfree_rcu_batch_init._entry_ptr, !1054, !"_entry_ptr", i1 false, i1 false}
!1058 = !{ptr @kfree_rcu_batch_init.__key, !1059, !"__key", i1 false, i1 false}
!1059 = !{!"../kernel/rcu/tree.c", i32 4727, i32 4}
!1060 = !{ptr @.str.334, !1059, !"<string literal>", i1 false, i1 false}
!1061 = !{ptr @kfree_rcu_batch_init.__key.335, !1062, !"__key", i1 false, i1 false}
!1062 = !{!"../kernel/rcu/tree.c", i32 4731, i32 3}
!1063 = !{ptr @.str.336, !1062, !"<string literal>", i1 false, i1 false}
!1064 = !{ptr @kfree_rcu_batch_init.__key.337, !1062, !"__key", i1 false, i1 false}
!1065 = !{ptr @.str.338, !1062, !"<string literal>", i1 false, i1 false}
!1066 = !{ptr @kfree_rcu_batch_init.__key.339, !1067, !"__key", i1 false, i1 false}
!1067 = !{!"../kernel/rcu/tree.c", i32 4732, i32 3}
!1068 = !{ptr @.str.340, !1067, !"<string literal>", i1 false, i1 false}
!1069 = !{ptr @kfree_rcu_batch_init.__key.341, !1067, !"__key", i1 false, i1 false}
!1070 = !{ptr @.str.342, !1067, !"<string literal>", i1 false, i1 false}
!1071 = !{ptr @.str.344, !1072, !"<string literal>", i1 false, i1 false}
!1072 = !{!"../kernel/rcu/tree.c", i32 4736, i32 3}
!1073 = !{ptr @kfree_rcu_batch_init._entry.343, !1072, !"_entry", i1 false, i1 false}
!1074 = !{ptr @kfree_rcu_batch_init._entry_ptr.345, !1072, !"_entry_ptr", i1 false, i1 false}
!1075 = distinct !{null, !1076, !"__already_done", i1 false, i1 false}
!1076 = !{!"../kernel/rcu/tree.c", i32 3355, i32 8}
!1077 = distinct !{null, !1078, !"__already_done", i1 false, i1 false}
!1078 = !{!"../include/trace/events/rcu.h", i32 688, i32 1}
!1079 = distinct !{null, !1078, !"__warned", i1 false, i1 false}
!1080 = distinct !{null, !1081, !"__already_done", i1 false, i1 false}
!1081 = !{!"../include/trace/events/rcu.h", i32 660, i32 1}
!1082 = distinct !{null, !1081, !"__warned", i1 false, i1 false}
!1083 = !{ptr @kfree_rcu_shrinker, !1084, !"kfree_rcu_shrinker", i1 false, i1 false}
!1084 = !{!"../kernel/rcu/tree.c", i32 3672, i32 24}
!1085 = !{ptr @.str.346, !1086, !"<string literal>", i1 false, i1 false}
!1086 = !{!"../kernel/rcu/tree.c", i32 4510, i32 36}
!1087 = !{ptr @.str.347, !1086, !"<string literal>", i1 false, i1 false}
!1088 = !{ptr @rcu_init_one.buf, !1089, !"buf", i1 false, i1 false}
!1089 = !{!"../kernel/rcu/tree.c", i32 4510, i32 28}
!1090 = !{ptr @.str.348, !1091, !"<string literal>", i1 false, i1 false}
!1091 = !{!"../kernel/rcu/tree.c", i32 4511, i32 36}
!1092 = !{ptr @.str.349, !1091, !"<string literal>", i1 false, i1 false}
!1093 = !{ptr @rcu_init_one.fqs, !1094, !"fqs", i1 false, i1 false}
!1094 = !{!"../kernel/rcu/tree.c", i32 4511, i32 28}
!1095 = !{ptr @rcu_init_one.rcu_node_class, !1096, !"rcu_node_class", i1 false, i1 false}
!1096 = !{!"../kernel/rcu/tree.c", i32 4512, i32 31}
!1097 = !{ptr @rcu_init_one.rcu_fqs_class, !1098, !"rcu_fqs_class", i1 false, i1 false}
!1098 = !{!"../kernel/rcu/tree.c", i32 4513, i32 31}
!1099 = !{ptr @.str.350, !1100, !"<string literal>", i1 false, i1 false}
!1100 = !{!"../kernel/rcu/tree.c", i32 4525, i32 9}
!1101 = !{ptr @rcu_init_one.__key, !1102, !"__key", i1 false, i1 false}
!1102 = !{!"../kernel/rcu/tree.c", i32 4540, i32 4}
!1103 = !{ptr @.str.351, !1102, !"<string literal>", i1 false, i1 false}
!1104 = !{ptr @rcu_init_one.__key.352, !1105, !"__key", i1 false, i1 false}
!1105 = !{!"../kernel/rcu/tree.c", i32 4543, i32 4}
!1106 = !{ptr @.str.353, !1105, !"<string literal>", i1 false, i1 false}
!1107 = !{ptr @rcu_init_one.__key.354, !1108, !"__key", i1 false, i1 false}
!1108 = !{!"../kernel/rcu/tree.c", i32 4568, i32 4}
!1109 = !{ptr @.str.355, !1108, !"<string literal>", i1 false, i1 false}
!1110 = !{ptr @rcu_init_one.__key.356, !1111, !"__key", i1 false, i1 false}
!1111 = !{!"../kernel/rcu/tree.c", i32 4569, i32 4}
!1112 = !{ptr @.str.357, !1111, !"<string literal>", i1 false, i1 false}
!1113 = !{ptr @rcu_init_one.__key.358, !1114, !"__key", i1 false, i1 false}
!1114 = !{!"../kernel/rcu/tree.c", i32 4570, i32 4}
!1115 = !{ptr @.str.359, !1114, !"<string literal>", i1 false, i1 false}
!1116 = !{ptr @rcu_init_one.__key.360, !1117, !"__key", i1 false, i1 false}
!1117 = !{!"../kernel/rcu/tree.c", i32 4571, i32 4}
!1118 = !{ptr @.str.361, !1117, !"<string literal>", i1 false, i1 false}
!1119 = !{ptr @rcu_init_one.__key.362, !1120, !"__key", i1 false, i1 false}
!1120 = !{!"../kernel/rcu/tree.c", i32 4572, i32 4}
!1121 = !{ptr @.str.363, !1120, !"<string literal>", i1 false, i1 false}
!1122 = !{ptr @rcu_init_one.__key.364, !1123, !"__key", i1 false, i1 false}
!1123 = !{!"../kernel/rcu/tree.c", i32 4576, i32 2}
!1124 = !{ptr @.str.365, !1123, !"<string literal>", i1 false, i1 false}
!1125 = !{ptr @rcu_init_one.__key.366, !1126, !"__key", i1 false, i1 false}
!1126 = !{!"../kernel/rcu/tree.c", i32 4577, i32 2}
!1127 = !{ptr @.str.367, !1126, !"<string literal>", i1 false, i1 false}
!1128 = !{ptr @rcu_init_one_nocb.__key, !1129, !"__key", i1 false, i1 false}
!1129 = !{!"../kernel/rcu/tree_nocb.h", i32 214, i32 2}
!1130 = !{ptr @.str.368, !1129, !"<string literal>", i1 false, i1 false}
!1131 = !{ptr @rcu_init_one_nocb.__key.369, !1132, !"__key", i1 false, i1 false}
!1132 = !{!"../kernel/rcu/tree_nocb.h", i32 215, i32 2}
!1133 = !{ptr @.str.370, !1132, !"<string literal>", i1 false, i1 false}
!1134 = !{ptr @rcu_boot_init_percpu_data.__key, !1135, !"__key", i1 false, i1 false}
!1135 = !{!"../kernel/rcu/tree.c", i32 4140, i32 2}
!1136 = !{ptr @.str.371, !1135, !"<string literal>", i1 false, i1 false}
!1137 = distinct !{null, !1138, !"__already_done", i1 false, i1 false}
!1138 = !{!"../kernel/rcu/tree.c", i32 4141, i32 2}
!1139 = distinct !{null, !1140, !"__already_done", i1 false, i1 false}
!1140 = !{!"../kernel/rcu/tree.c", i32 4142, i32 2}
!1141 = !{ptr @rcu_boot_init_nocb_percpu_data.__key, !1142, !"__key", i1 false, i1 false}
!1142 = !{!"../kernel/rcu/tree_nocb.h", i32 1221, i32 2}
!1143 = !{ptr @.str.373, !1142, !"<string literal>", i1 false, i1 false}
!1144 = !{ptr @rcu_boot_init_nocb_percpu_data.__key.374, !1145, !"__key", i1 false, i1 false}
!1145 = !{!"../kernel/rcu/tree_nocb.h", i32 1222, i32 2}
!1146 = !{ptr @.str.375, !1145, !"<string literal>", i1 false, i1 false}
!1147 = !{ptr @rcu_boot_init_nocb_percpu_data.__key.376, !1148, !"__key", i1 false, i1 false}
!1148 = !{!"../kernel/rcu/tree_nocb.h", i32 1223, i32 2}
!1149 = !{ptr @.str.377, !1148, !"<string literal>", i1 false, i1 false}
!1150 = !{ptr @rcu_boot_init_nocb_percpu_data.__key.378, !1151, !"__key", i1 false, i1 false}
!1151 = !{!"../kernel/rcu/tree_nocb.h", i32 1224, i32 2}
!1152 = !{ptr @.str.379, !1151, !"<string literal>", i1 false, i1 false}
!1153 = !{ptr @rcu_boot_init_nocb_percpu_data.__key.380, !1154, !"__key", i1 false, i1 false}
!1154 = !{!"../kernel/rcu/tree_nocb.h", i32 1225, i32 2}
!1155 = !{ptr @.str.381, !1154, !"<string literal>", i1 false, i1 false}
!1156 = !{ptr @rcu_boot_init_nocb_percpu_data.__key.382, !1157, !"__key", i1 false, i1 false}
!1157 = !{!"../kernel/rcu/tree_nocb.h", i32 1226, i32 2}
!1158 = !{ptr @.str.383, !1157, !"<string literal>", i1 false, i1 false}
!1159 = !{ptr @rcu_boot_init_nocb_percpu_data.__key.384, !1160, !"__key", i1 false, i1 false}
!1160 = !{!"../kernel/rcu/tree_nocb.h", i32 1227, i32 2}
!1161 = !{ptr @.str.385, !1160, !"<string literal>", i1 false, i1 false}
!1162 = distinct !{null, !1163, !"__already_done", i1 false, i1 false}
!1163 = !{!"../kernel/rcu/tree_nocb.h", i32 928, i32 2}
!1164 = !{ptr @.str.386, !1165, !"<string literal>", i1 false, i1 false}
!1165 = !{!"../kernel/rcu/tree_nocb.h", i32 929, i32 48}
!1166 = !{ptr @do_nocb_deferred_wakeup_timer.___tp_str, !1165, !"___tp_str", i1 false, i1 false}
!1167 = !{ptr @.str.387, !1168, !"<string literal>", i1 false, i1 false}
!1168 = !{!"../kernel/rcu/tree_nocb.h", i32 917, i32 48}
!1169 = !{ptr @do_nocb_deferred_wakeup_common.___tp_str, !1168, !"___tp_str", i1 false, i1 false}
!1170 = !{ptr @.str.388, !1171, !"<string literal>", i1 false, i1 false}
!1171 = !{!"../kernel/rcu/tree_nocb.h", i32 236, i32 9}
!1172 = !{ptr @__wake_nocb_gp.___tp_str, !1171, !"___tp_str", i1 false, i1 false}
!1173 = !{ptr @.str.390, !1174, !"<string literal>", i1 false, i1 false}
!1174 = !{!"../kernel/rcu/tree_nocb.h", i32 251, i32 49}
!1175 = !{ptr @__wake_nocb_gp.___tp_str.389, !1174, !"___tp_str", i1 false, i1 false}
!1176 = !{ptr @.str.391, !1177, !"<string literal>", i1 false, i1 false}
!1177 = !{!"../kernel/rcu/tree.c", i32 4690, i32 2}
!1178 = !{ptr @.str.392, !1177, !"<string literal>", i1 false, i1 false}
!1179 = !{ptr @rcu_dump_rcu_node_tree._entry, !1177, !"_entry", i1 false, i1 false}
!1180 = !{ptr @rcu_dump_rcu_node_tree._entry_ptr, !1177, !"_entry_ptr", i1 false, i1 false}
!1181 = !{ptr @.str.394, !1182, !"<string literal>", i1 false, i1 false}
!1182 = !{!"../kernel/rcu/tree.c", i32 4691, i32 2}
!1183 = !{ptr @rcu_dump_rcu_node_tree._entry.393, !1182, !"_entry", i1 false, i1 false}
!1184 = !{ptr @rcu_dump_rcu_node_tree._entry_ptr.395, !1182, !"_entry_ptr", i1 false, i1 false}
!1185 = !{ptr @rcu_dump_rcu_node_tree._entry.396, !1186, !"_entry", i1 false, i1 false}
!1186 = !{!"../kernel/rcu/tree.c", i32 4694, i32 4}
!1187 = !{ptr @rcu_dump_rcu_node_tree._entry_ptr.397, !1186, !"_entry_ptr", i1 false, i1 false}
!1188 = !{ptr @rcu_dump_rcu_node_tree._entry.398, !1189, !"_entry", i1 false, i1 false}
!1189 = !{!"../kernel/rcu/tree.c", i32 4695, i32 4}
!1190 = !{ptr @rcu_dump_rcu_node_tree._entry_ptr.399, !1189, !"_entry_ptr", i1 false, i1 false}
!1191 = !{ptr @.str.401, !1192, !"<string literal>", i1 false, i1 false}
!1192 = !{!"../kernel/rcu/tree.c", i32 4698, i32 3}
!1193 = !{ptr @rcu_dump_rcu_node_tree._entry.400, !1192, !"_entry", i1 false, i1 false}
!1194 = !{ptr @rcu_dump_rcu_node_tree._entry_ptr.402, !1192, !"_entry_ptr", i1 false, i1 false}
!1195 = !{ptr @rcu_dump_rcu_node_tree._entry.403, !1196, !"_entry", i1 false, i1 false}
!1196 = !{!"../kernel/rcu/tree.c", i32 4700, i32 2}
!1197 = !{ptr @rcu_dump_rcu_node_tree._entry_ptr.404, !1196, !"_entry_ptr", i1 false, i1 false}
!1198 = !{ptr @qovld_calc, !1199, !"qovld_calc", i1 false, i1 false}
!1199 = !{!"../kernel/rcu/tree.c", i32 464, i32 13}
!1200 = !{ptr @rcu_panic_block, !1201, !"rcu_panic_block", i1 false, i1 false}
!1201 = !{!"../kernel/rcu/tree_stall.h", i32 98, i32 30}
!1202 = distinct !{null, !1203, !"__already_done", i1 false, i1 false}
!1203 = !{!"../kernel/rcu/tree_stall.h", i32 192, i32 7}
!1204 = distinct !{null, !1205, !"__already_done", i1 false, i1 false}
!1205 = !{!"../kernel/rcu/tree_stall.h", i32 196, i32 2}
!1206 = !{ptr @.str.406, !1207, !"<string literal>", i1 false, i1 false}
!1207 = !{!"../kernel/rcu/tree_stall.h", i32 368, i32 10}
!1208 = !{ptr @.str.407, !1209, !"<string literal>", i1 false, i1 false}
!1209 = !{!"../kernel/rcu/tree_stall.h", i32 351, i32 18}
!1210 = !{ptr @.str.408, !1211, !"<string literal>", i1 false, i1 false}
!1211 = !{!"../kernel/rcu/tree_stall.h", i32 352, i32 22}
!1212 = !{ptr @.str.409, !1213, !"<string literal>", i1 false, i1 false}
!1213 = !{!"../kernel/rcu/tree_stall.h", i32 353, i32 22}
!1214 = !{ptr @.str.410, !1215, !"<string literal>", i1 false, i1 false}
!1215 = !{!"../kernel/rcu/tree_stall.h", i32 354, i32 19}
!1216 = !{ptr @.str.411, !1217, !"<string literal>", i1 false, i1 false}
!1217 = !{!"../kernel/rcu/tree_stall.h", i32 355, i32 18}
!1218 = !{ptr @.str.412, !1219, !"<string literal>", i1 false, i1 false}
!1219 = !{!"../kernel/rcu/tree_stall.h", i32 356, i32 22}
!1220 = !{ptr @.str.413, !1221, !"<string literal>", i1 false, i1 false}
!1221 = !{!"../kernel/rcu/tree_stall.h", i32 357, i32 23}
!1222 = !{ptr @.str.414, !1223, !"<string literal>", i1 false, i1 false}
!1223 = !{!"../kernel/rcu/tree_stall.h", i32 358, i32 21}
!1224 = !{ptr @.str.415, !1225, !"<string literal>", i1 false, i1 false}
!1225 = !{!"../kernel/rcu/tree_stall.h", i32 359, i32 21}
!1226 = !{ptr @gp_state_names, !1227, !"gp_state_names", i1 false, i1 false}
!1227 = !{!"../kernel/rcu/tree_stall.h", i32 350, i32 27}
!1228 = !{ptr @rcu_check_gp_start_stall.warned, !1229, !"warned", i1 false, i1 false}
!1229 = !{!"../kernel/rcu/tree_stall.h", i32 857, i32 18}
!1230 = distinct !{null, !1231, !"__already_done", i1 false, i1 false}
!1231 = !{!"../kernel/rcu/tree_stall.h", i32 878, i32 3}
!1232 = distinct !{null, !1233, !"__already_done", i1 false, i1 false}
!1233 = !{!"../kernel/rcu/tree_stall.h", i32 894, i32 4}
!1234 = distinct !{null, !1235, !"__already_done", i1 false, i1 false}
!1235 = !{!"../kernel/rcu/tree_stall.h", i32 895, i32 3}
!1236 = distinct !{null, !1237, !"__already_done", i1 false, i1 false}
!1237 = !{!"../kernel/rcu/tree_stall.h", i32 900, i32 3}
!1238 = distinct !{null, !1239, !"__already_done", i1 false, i1 false}
!1239 = !{!"../kernel/rcu/tree_stall.h", i32 901, i32 2}
!1240 = !{ptr @__param_str_sysrq_rcu, !335, !"__param_str_sysrq_rcu", i1 false, i1 false}
!1241 = !{ptr @.str.420, !1242, !"<string literal>", i1 false, i1 false}
!1242 = !{!"../kernel/rcu/tree_stall.h", i32 959, i32 14}
!1243 = !{ptr @.str.421, !1244, !"<string literal>", i1 false, i1 false}
!1244 = !{!"../kernel/rcu/tree_stall.h", i32 960, i32 16}
!1245 = !{ptr @sysrq_rcudump_op, !1246, !"sysrq_rcudump_op", i1 false, i1 false}
!1246 = !{!"../kernel/rcu/tree_stall.h", i32 957, i32 34}
!1247 = distinct !{null, !1248, !"__already_done", i1 false, i1 false}
!1248 = !{!"../kernel/rcu/tree_exp.h", i32 239, i32 3}
!1249 = distinct !{null, !1250, !"__already_done", i1 false, i1 false}
!1250 = !{!"../kernel/rcu/tree_exp.h", i32 243, i32 2}
!1251 = distinct !{null, !1252, !"__already_done", i1 false, i1 false}
!1252 = !{!"../kernel/rcu/tree_exp.h", i32 194, i32 5}
!1253 = distinct !{null, !1254, !"__already_done", i1 false, i1 false}
!1254 = !{!"../kernel/rcu/tree_exp.h", i32 198, i32 4}
!1255 = distinct !{null, !1256, !"__already_done", i1 false, i1 false}
!1256 = !{!"../kernel/rcu/tree_exp.h", i32 206, i32 3}
!1257 = distinct !{null, !1258, !"__already_done", i1 false, i1 false}
!1258 = !{!"../kernel/rcu/tree_exp.h", i32 209, i32 3}
!1259 = distinct !{null, !1260, !"__already_done", i1 false, i1 false}
!1260 = !{!"../kernel/rcu/tree_exp.h", i32 781, i32 2}
!1261 = !{ptr @.str.426, !1262, !"<string literal>", i1 false, i1 false}
!1262 = !{!"../kernel/rcu/tree_exp.h", i32 52, i32 48}
!1263 = !{ptr @rcu_exp_gp_seq_snap.___tp_str, !1262, !"___tp_str", i1 false, i1 false}
!1264 = distinct !{null, !1265, !"__already_done", i1 false, i1 false}
!1265 = !{!"../include/trace/events/rcu.h", i32 192, i32 1}
!1266 = distinct !{null, !1265, !"__warned", i1 false, i1 false}
!1267 = !{ptr @.str.427, !1268, !"<string literal>", i1 false, i1 false}
!1268 = !{!"../kernel/rcu/tree_exp.h", i32 312, i32 9}
!1269 = !{ptr @exp_funnel_lock.___tp_str, !1268, !"___tp_str", i1 false, i1 false}
!1270 = !{ptr @.str.429, !1271, !"<string literal>", i1 false, i1 false}
!1271 = !{!"../kernel/rcu/tree_exp.h", i32 320, i32 32}
!1272 = !{ptr @exp_funnel_lock.___tp_str.428, !1271, !"___tp_str", i1 false, i1 false}
!1273 = !{ptr @exp_funnel_lock.___tp_str.430, !1274, !"___tp_str", i1 false, i1 false}
!1274 = !{!"../kernel/rcu/tree_exp.h", i32 329, i32 48}
!1275 = distinct !{null, !1276, !"__already_done", i1 false, i1 false}
!1276 = !{!"../include/trace/events/rcu.h", i32 224, i32 1}
!1277 = distinct !{null, !1276, !"__warned", i1 false, i1 false}
!1278 = !{ptr @.str.431, !1279, !"<string literal>", i1 false, i1 false}
!1279 = !{!"../kernel/rcu/tree_exp.h", i32 429, i32 70}
!1280 = !{ptr @sync_rcu_exp_select_cpus.___tp_str, !1279, !"___tp_str", i1 false, i1 false}
!1281 = !{ptr @.str.433, !1282, !"<string literal>", i1 false, i1 false}
!1282 = !{!"../kernel/rcu/tree_exp.h", i32 431, i32 70}
!1283 = !{ptr @sync_rcu_exp_select_cpus.___tp_str.432, !1282, !"___tp_str", i1 false, i1 false}
!1284 = !{ptr @sync_rcu_exp_select_cpus.__key, !1285, !"__key", i1 false, i1 false}
!1285 = !{!"../kernel/rcu/tree_exp.h", i32 445, i32 3}
!1286 = !{ptr @.str.434, !1285, !"<string literal>", i1 false, i1 false}
!1287 = distinct !{null, !1288, !"__already_done", i1 false, i1 false}
!1288 = !{!"../kernel/rcu/tree_exp.h", i32 138, i32 3}
!1289 = distinct !{null, !1290, !"__already_done", i1 false, i1 false}
!1290 = !{!"../kernel/rcu/tree_exp.h", i32 140, i32 3}
!1291 = distinct !{null, !1292, !"__already_done", i1 false, i1 false}
!1292 = !{!"../kernel/rcu/tree_exp.h", i32 95, i32 4}
!1293 = distinct !{null, !1294, !"__already_done", i1 false, i1 false}
!1294 = !{!"../kernel/rcu/tree_exp.h", i32 102, i32 3}
!1295 = distinct !{null, !1296, !"__already_done", i1 false, i1 false}
!1296 = !{!"../kernel/rcu/tree_exp.h", i32 117, i32 4}
!1297 = distinct !{null, !1298, !"__already_done", i1 false, i1 false}
!1298 = !{!"../kernel/rcu/tree_exp.h", i32 352, i32 2}
!1299 = distinct !{null, !1300, !"__already_done", i1 false, i1 false}
!1300 = !{!"../kernel/rcu/tree_exp.h", i32 377, i32 2}
!1301 = distinct !{null, !1302, !"__already_done", i1 false, i1 false}
!1302 = !{!"../kernel/rcu/tree_exp.h", i32 380, i32 2}
!1303 = distinct !{null, !1304, !"__already_done", i1 false, i1 false}
!1304 = !{!"../kernel/rcu/tree_exp.h", i32 405, i32 4}
!1305 = !{ptr @.str.441, !1306, !"<string literal>", i1 false, i1 false}
!1306 = !{!"../kernel/rcu/tree_exp.h", i32 406, i32 72}
!1307 = !{ptr @sync_rcu_exp_select_node_cpus.___tp_str, !1306, !"___tp_str", i1 false, i1 false}
!1308 = distinct !{null, !1309, !"__already_done", i1 false, i1 false}
!1309 = !{!"../kernel/rcu/tree_exp.h", i32 413, i32 3}
!1310 = !{ptr @rcu_exp_wait_wake.___tp_str, !1311, !"___tp_str", i1 false, i1 false}
!1311 = !{!"../kernel/rcu/tree_exp.h", i32 594, i32 48}
!1312 = !{ptr @.str.444, !1313, !"<string literal>", i1 false, i1 false}
!1313 = !{!"../kernel/rcu/tree_exp.h", i32 607, i32 48}
!1314 = !{ptr @rcu_exp_wait_wake.___tp_str.443, !1313, !"___tp_str", i1 false, i1 false}
!1315 = !{ptr @.str.445, !1316, !"<string literal>", i1 false, i1 false}
!1316 = !{!"../kernel/rcu/tree_exp.h", i32 498, i32 70}
!1317 = !{ptr @synchronize_rcu_expedited_wait.___tp_str, !1316, !"___tp_str", i1 false, i1 false}
!1318 = distinct !{null, !1319, !"__already_done", i1 false, i1 false}
!1319 = !{!"../kernel/rcu/tree_exp.h", i32 505, i32 4}
!1320 = !{ptr @.str.447, !1321, !"<string literal>", i1 false, i1 false}
!1321 = !{!"../kernel/rcu/tree_exp.h", i32 527, i32 43}
!1322 = !{ptr @synchronize_rcu_expedited_wait.___tp_str.446, !1321, !"___tp_str", i1 false, i1 false}
!1323 = !{ptr @.str.448, !1324, !"<string literal>", i1 false, i1 false}
!1324 = !{!"../kernel/rcu/tree_exp.h", i32 528, i32 3}
!1325 = !{ptr @.str.449, !1324, !"<string literal>", i1 false, i1 false}
!1326 = !{ptr @synchronize_rcu_expedited_wait._entry, !1324, !"_entry", i1 false, i1 false}
!1327 = !{ptr @synchronize_rcu_expedited_wait._entry_ptr, !1324, !"_entry_ptr", i1 false, i1 false}
!1328 = distinct !{null, !1329, !"__already_done", i1 false, i1 false}
!1329 = !{!"../kernel/rcu/tree_exp.h", i32 533, i32 4}
!1330 = !{ptr @.str.452, !1331, !"<string literal>", i1 false, i1 false}
!1331 = !{!"../kernel/rcu/tree_exp.h", i32 541, i32 5}
!1332 = !{ptr @synchronize_rcu_expedited_wait._entry.451, !1331, !"_entry", i1 false, i1 false}
!1333 = !{ptr @synchronize_rcu_expedited_wait._entry_ptr.453, !1331, !"_entry_ptr", i1 false, i1 false}
!1334 = !{ptr @.str.455, !1335, !"<string literal>", i1 false, i1 false}
!1335 = !{!"../kernel/rcu/tree_exp.h", i32 547, i32 3}
!1336 = !{ptr @synchronize_rcu_expedited_wait._entry.454, !1335, !"_entry", i1 false, i1 false}
!1337 = !{ptr @synchronize_rcu_expedited_wait._entry_ptr.456, !1335, !"_entry_ptr", i1 false, i1 false}
!1338 = !{ptr @.str.457, !1335, !"<string literal>", i1 false, i1 false}
!1339 = !{ptr @.str.459, !1340, !"<string literal>", i1 false, i1 false}
!1340 = !{!"../kernel/rcu/tree_exp.h", i32 552, i32 4}
!1341 = !{ptr @synchronize_rcu_expedited_wait._entry.458, !1340, !"_entry", i1 false, i1 false}
!1342 = !{ptr @synchronize_rcu_expedited_wait._entry_ptr.460, !1340, !"_entry_ptr", i1 false, i1 false}
!1343 = !{ptr @.str.462, !1344, !"<string literal>", i1 false, i1 false}
!1344 = !{!"../kernel/rcu/tree_exp.h", i32 558, i32 5}
!1345 = !{ptr @synchronize_rcu_expedited_wait._entry.461, !1344, !"_entry", i1 false, i1 false}
!1346 = !{ptr @synchronize_rcu_expedited_wait._entry_ptr.463, !1344, !"_entry_ptr", i1 false, i1 false}
!1347 = !{ptr @synchronize_rcu_expedited_wait._entry.464, !1348, !"_entry", i1 false, i1 false}
!1348 = !{!"../kernel/rcu/tree_exp.h", i32 563, i32 4}
!1349 = !{ptr @synchronize_rcu_expedited_wait._entry_ptr.465, !1348, !"_entry_ptr", i1 false, i1 false}
!1350 = distinct !{null, !1351, !"__already_done", i1 false, i1 false}
!1351 = !{!"../kernel/rcu/tree_exp.h", i32 566, i32 4}
!1352 = distinct !{null, !1353, !"__already_done", i1 false, i1 false}
!1353 = !{!"../kernel/rcu/tree_exp.h", i32 168, i32 2}
!1354 = !{ptr @.str.467, !1355, !"<string literal>", i1 false, i1 false}
!1355 = !{!"../kernel/rcu/tree_exp.h", i32 266, i32 49}
!1356 = !{ptr @sync_exp_work_done.___tp_str, !1355, !"___tp_str", i1 false, i1 false}
!1357 = !{ptr @__setup_str_rcu_nocb_setup, !349, !"__setup_str_rcu_nocb_setup", i1 false, i1 false}
!1358 = !{ptr @.str.468, !1359, !"<string literal>", i1 false, i1 false}
!1359 = !{!"../kernel/rcu/tree_nocb.h", i32 71, i32 4}
!1360 = !{ptr @.str.469, !1359, !"<string literal>", i1 false, i1 false}
!1361 = !{ptr @rcu_nocb_setup._entry, !1359, !"_entry", i1 false, i1 false}
!1362 = !{ptr @rcu_nocb_setup._entry_ptr, !1359, !"_entry_ptr", i1 false, i1 false}
!1363 = !{ptr @__setup_str_parse_rcu_nocb_poll, !351, !"__setup_str_parse_rcu_nocb_poll", i1 false, i1 false}
!1364 = !{ptr @__param_str_nocb_nobypass_lim_per_jiffy, !353, !"__param_str_nocb_nobypass_lim_per_jiffy", i1 false, i1 false}
!1365 = !{ptr @nocb_nobypass_lim_per_jiffy, !1366, !"nocb_nobypass_lim_per_jiffy", i1 false, i1 false}
!1366 = !{!"../kernel/rcu/tree_nocb.h", i32 92, i32 12}
!1367 = distinct !{null, !1368, !"__already_done", i1 false, i1 false}
!1368 = !{!"../kernel/rcu/tree_nocb.h", i32 157, i32 2}
!1369 = distinct !{null, !1370, !"__already_done", i1 false, i1 false}
!1370 = !{!"../kernel/rcu/tree_nocb.h", i32 170, i32 3}
!1371 = distinct !{null, !1372, !"__already_done", i1 false, i1 false}
!1372 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!1373 = !{ptr @.str.470, !1372, !"<string literal>", i1 false, i1 false}
!1374 = distinct !{null, !1375, !"__already_done", i1 false, i1 false}
!1375 = !{!"../kernel/rcu/tree_nocb.h", i32 314, i32 2}
!1376 = !{ptr @.str.471, !1377, !"<string literal>", i1 false, i1 false}
!1377 = !{!"../kernel/rcu/tree_nocb.h", i32 515, i32 9}
!1378 = !{ptr @__call_rcu_nocb_wake.___tp_str, !1377, !"___tp_str", i1 false, i1 false}
!1379 = !{ptr @.str.473, !1380, !"<string literal>", i1 false, i1 false}
!1380 = !{!"../kernel/rcu/tree_nocb.h", i32 527, i32 10}
!1381 = !{ptr @__call_rcu_nocb_wake.___tp_str.472, !1380, !"___tp_str", i1 false, i1 false}
!1382 = !{ptr @.str.475, !1383, !"<string literal>", i1 false, i1 false}
!1383 = !{!"../kernel/rcu/tree_nocb.h", i32 531, i32 9}
!1384 = !{ptr @__call_rcu_nocb_wake.___tp_str.474, !1383, !"___tp_str", i1 false, i1 false}
!1385 = !{ptr @.str.477, !1386, !"<string literal>", i1 false, i1 false}
!1386 = !{!"../kernel/rcu/tree_nocb.h", i32 549, i32 9}
!1387 = !{ptr @__call_rcu_nocb_wake.___tp_str.476, !1386, !"___tp_str", i1 false, i1 false}
!1388 = !{ptr @.str.479, !1389, !"<string literal>", i1 false, i1 false}
!1389 = !{!"../kernel/rcu/tree_nocb.h", i32 552, i32 50}
!1390 = !{ptr @__call_rcu_nocb_wake.___tp_str.478, !1389, !"___tp_str", i1 false, i1 false}
!1391 = !{ptr @__call_rcu_nocb_wake.___tp_str.480, !1392, !"___tp_str", i1 false, i1 false}
!1392 = !{!"../kernel/rcu/tree_nocb.h", i32 556, i32 49}
!1393 = distinct !{null, !1394, !"__already_done", i1 false, i1 false}
!1394 = !{!"../kernel/rcu/tree_nocb.h", i32 999, i32 2}
!1395 = !{ptr @.str.481, !1396, !"<string literal>", i1 false, i1 false}
!1396 = !{!"../kernel/rcu/tree_nocb.h", i32 1001, i32 2}
!1397 = !{ptr @.str.482, !1396, !"<string literal>", i1 false, i1 false}
!1398 = !{ptr @rcu_nocb_rdp_deoffload._entry, !1396, !"_entry", i1 false, i1 false}
!1399 = !{ptr @rcu_nocb_rdp_deoffload._entry_ptr, !1396, !"_entry_ptr", i1 false, i1 false}
!1400 = distinct !{null, !1401, !"__already_done", i1 false, i1 false}
!1401 = !{!"../kernel/rcu/tree_nocb.h", i32 1013, i32 2}
!1402 = distinct !{null, !1403, !"__already_done", i1 false, i1 false}
!1403 = !{!"../kernel/rcu/tree_nocb.h", i32 1046, i32 2}
!1404 = distinct !{null, !1405, !"__already_done", i1 false, i1 false}
!1405 = !{!"../kernel/rcu/tree_nocb.h", i32 1083, i32 2}
!1406 = !{ptr @.str.485, !1407, !"<string literal>", i1 false, i1 false}
!1407 = !{!"../kernel/rcu/tree_nocb.h", i32 1091, i32 2}
!1408 = !{ptr @.str.486, !1407, !"<string literal>", i1 false, i1 false}
!1409 = !{ptr @rcu_nocb_rdp_offload._entry, !1407, !"_entry", i1 false, i1 false}
!1410 = !{ptr @rcu_nocb_rdp_offload._entry_ptr, !1407, !"_entry_ptr", i1 false, i1 false}
!1411 = !{ptr @.str.487, !1412, !"<string literal>", i1 false, i1 false}
!1412 = !{!"../kernel/rcu/tree_nocb.h", i32 1252, i32 7}
!1413 = distinct !{null, !1414, !"__already_done", i1 false, i1 false}
!1414 = !{!"../kernel/rcu/tree_nocb.h", i32 1254, i32 7}
!1415 = !{ptr @.str.488, !1414, !"<string literal>", i1 false, i1 false}
!1416 = !{ptr @__func__.rcu_spawn_cpu_nocb_kthread, !1414, !"<string literal>", i1 false, i1 false}
!1417 = !{ptr @.str.489, !1418, !"<string literal>", i1 false, i1 false}
!1418 = !{!"../kernel/rcu/tree_nocb.h", i32 1260, i32 6}
!1419 = distinct !{null, !1420, !"__already_done", i1 false, i1 false}
!1420 = !{!"../kernel/rcu/tree_nocb.h", i32 1262, i32 6}
!1421 = !{ptr @.str.491, !1420, !"<string literal>", i1 false, i1 false}
!1422 = distinct !{null, !1423, !"__already_done", i1 false, i1 false}
!1423 = !{!"../kernel/rcu/tree_nocb.h", i32 633, i32 2}
!1424 = distinct !{null, !1425, !"__warned", i1 false, i1 false}
!1425 = !{!"../kernel/rcu/tree_nocb.h", i32 648, i32 2}
!1426 = !{ptr @.str.492, !1427, !"<string literal>", i1 false, i1 false}
!1427 = !{!"../kernel/rcu/tree_nocb.h", i32 653, i32 49}
!1428 = !{ptr @nocb_gp_wait.___tp_str, !1427, !"___tp_str", i1 false, i1 false}
!1429 = !{ptr @.str.494, !1430, !"<string literal>", i1 false, i1 false}
!1430 = !{!"../kernel/rcu/tree_nocb.h", i32 676, i32 10}
!1431 = !{ptr @nocb_gp_wait.___tp_str.493, !1430, !"___tp_str", i1 false, i1 false}
!1432 = distinct !{null, !1433, !"__already_done", i1 false, i1 false}
!1433 = !{!"../kernel/rcu/tree_nocb.h", i32 691, i32 4}
!1434 = distinct !{null, !1435, !"__already_done", i1 false, i1 false}
!1435 = !{!"../kernel/rcu/tree_nocb.h", i32 694, i32 3}
!1436 = !{ptr @.str.498, !1437, !"<string literal>", i1 false, i1 false}
!1437 = !{!"../kernel/rcu/tree_nocb.h", i32 703, i32 10}
!1438 = !{ptr @nocb_gp_wait.___tp_str.497, !1437, !"___tp_str", i1 false, i1 false}
!1439 = !{ptr @.str.500, !1440, !"<string literal>", i1 false, i1 false}
!1440 = !{!"../kernel/rcu/tree_nocb.h", i32 731, i32 8}
!1441 = !{ptr @nocb_gp_wait.___tp_str.499, !1440, !"___tp_str", i1 false, i1 false}
!1442 = !{ptr @.str.502, !1443, !"<string literal>", i1 false, i1 false}
!1443 = !{!"../kernel/rcu/tree_nocb.h", i32 736, i32 45}
!1444 = !{ptr @nocb_gp_wait.___tp_str.501, !1443, !"___tp_str", i1 false, i1 false}
!1445 = !{ptr @.str.504, !1446, !"<string literal>", i1 false, i1 false}
!1446 = !{!"../kernel/rcu/tree_nocb.h", i32 740, i32 44}
!1447 = !{ptr @nocb_gp_wait.___tp_str.503, !1446, !"___tp_str", i1 false, i1 false}
!1448 = !{ptr @.str.506, !1449, !"<string literal>", i1 false, i1 false}
!1449 = !{!"../kernel/rcu/tree_nocb.h", i32 743, i32 44}
!1450 = !{ptr @nocb_gp_wait.___tp_str.505, !1449, !"___tp_str", i1 false, i1 false}
!1451 = !{ptr @.str.508, !1452, !"<string literal>", i1 false, i1 false}
!1452 = !{!"../kernel/rcu/tree_nocb.h", i32 746, i32 47}
!1453 = !{ptr @nocb_gp_wait.___tp_str.507, !1452, !"___tp_str", i1 false, i1 false}
!1454 = !{ptr @.str.510, !1455, !"<string literal>", i1 false, i1 false}
!1455 = !{!"../kernel/rcu/tree_nocb.h", i32 751, i32 47}
!1456 = !{ptr @nocb_gp_wait.___tp_str.509, !1455, !"___tp_str", i1 false, i1 false}
!1457 = distinct !{null, !1458, !"__already_done", i1 false, i1 false}
!1458 = !{!"../kernel/rcu/tree_nocb.h", i32 599, i32 2}
!1459 = distinct !{null, !1460, !"__already_done", i1 false, i1 false}
!1460 = !{!"../kernel/rcu/tree_nocb.h", i32 359, i32 2}
!1461 = distinct !{null, !1462, !"__already_done", i1 false, i1 false}
!1462 = !{!"../kernel/rcu/tree_nocb.h", i32 137, i32 2}
!1463 = !{ptr @.str.511, !1464, !"<string literal>", i1 false, i1 false}
!1464 = !{!"../kernel/rcu/tree_nocb.h", i32 819, i32 50}
!1465 = !{ptr @nocb_cb_wait.___tp_str, !1464, !"___tp_str", i1 false, i1 false}
!1466 = distinct !{null, !1467, !"__already_done", i1 false, i1 false}
!1467 = !{!"../kernel/rcu/tree_nocb.h", i32 836, i32 2}
!1468 = distinct !{null, !1469, !"__already_done", i1 false, i1 false}
!1469 = !{!"../kernel/rcu/tree_nocb.h", i32 842, i32 3}
!1470 = distinct !{null, !1471, !"__already_done", i1 false, i1 false}
!1471 = !{!"../kernel/rcu/tree_nocb.h", i32 859, i32 3}
!1472 = !{ptr @.str.515, !1473, !"<string literal>", i1 false, i1 false}
!1473 = !{!"../kernel/rcu/tree_nocb.h", i32 868, i32 49}
!1474 = !{ptr @nocb_cb_wait.___tp_str.514, !1473, !"___tp_str", i1 false, i1 false}
!1475 = !{ptr @__param_str_rcu_nocb_gp_stride, !394, !"__param_str_rcu_nocb_gp_stride", i1 false, i1 false}
!1476 = !{ptr @rcu_nocb_gp_stride, !1477, !"rcu_nocb_gp_stride", i1 false, i1 false}
!1477 = !{!"../kernel/rcu/tree_nocb.h", i32 1285, i32 12}
!1478 = !{ptr @.str.516, !1479, !"<string literal>", i1 false, i1 false}
!1479 = !{!"../kernel/rcu/tree_nocb.h", i32 1324, i32 6}
!1480 = !{ptr @.str.517, !1479, !"<string literal>", i1 false, i1 false}
!1481 = !{ptr @rcu_organize_nocb_kthreads._entry, !1479, !"_entry", i1 false, i1 false}
!1482 = !{ptr @rcu_organize_nocb_kthreads._entry_ptr, !1479, !"_entry_ptr", i1 false, i1 false}
!1483 = !{ptr @.str.518, !1479, !"<string literal>", i1 false, i1 false}
!1484 = !{ptr @.str.520, !1485, !"<string literal>", i1 false, i1 false}
!1485 = !{!"../kernel/rcu/tree_nocb.h", i32 1328, i32 5}
!1486 = !{ptr @rcu_organize_nocb_kthreads._entry.519, !1485, !"_entry", i1 false, i1 false}
!1487 = !{ptr @rcu_organize_nocb_kthreads._entry_ptr.521, !1485, !"_entry_ptr", i1 false, i1 false}
!1488 = !{ptr @.str.523, !1489, !"<string literal>", i1 false, i1 false}
!1489 = !{!"../kernel/rcu/tree_nocb.h", i32 1335, i32 5}
!1490 = !{ptr @rcu_organize_nocb_kthreads._entry.522, !1489, !"_entry", i1 false, i1 false}
!1491 = !{ptr @rcu_organize_nocb_kthreads._entry_ptr.524, !1489, !"_entry_ptr", i1 false, i1 false}
!1492 = !{ptr @rcu_organize_nocb_kthreads._entry.525, !1493, !"_entry", i1 false, i1 false}
!1493 = !{!"../kernel/rcu/tree_nocb.h", i32 1342, i32 3}
!1494 = !{ptr @rcu_organize_nocb_kthreads._entry_ptr.526, !1493, !"_entry_ptr", i1 false, i1 false}
!1495 = !{ptr @.str.527, !1496, !"<string literal>", i1 false, i1 false}
!1496 = !{!"../kernel/rcu/tree_nocb.h", i32 1414, i32 16}
!1497 = !{ptr @.str.528, !1498, !"<string literal>", i1 false, i1 false}
!1498 = !{!"../kernel/rcu/tree_nocb.h", i32 1416, i32 2}
!1499 = !{ptr @.str.529, !1498, !"<string literal>", i1 false, i1 false}
!1500 = !{ptr @show_rcu_nocb_state._entry, !1498, !"_entry", i1 false, i1 false}
!1501 = !{ptr @show_rcu_nocb_state._entry_ptr, !1498, !"_entry_ptr", i1 false, i1 false}
!1502 = !{ptr @.str.530, !1498, !"<string literal>", i1 false, i1 false}
!1503 = !{ptr @.str.531, !1498, !"<string literal>", i1 false, i1 false}
!1504 = !{ptr @.str.532, !1498, !"<string literal>", i1 false, i1 false}
!1505 = !{ptr @.str.533, !1498, !"<string literal>", i1 false, i1 false}
!1506 = !{ptr @.str.534, !1498, !"<string literal>", i1 false, i1 false}
!1507 = !{ptr @.str.535, !1498, !"<string literal>", i1 false, i1 false}
!1508 = !{ptr @.str.536, !1498, !"<string literal>", i1 false, i1 false}
!1509 = !{ptr @.str.537, !1498, !"<string literal>", i1 false, i1 false}
!1510 = !{ptr @.str.538, !1498, !"<string literal>", i1 false, i1 false}
!1511 = !{ptr @.str.540, !1512, !"<string literal>", i1 false, i1 false}
!1512 = !{!"../kernel/rcu/tree_nocb.h", i32 1449, i32 2}
!1513 = !{ptr @show_rcu_nocb_state._entry.539, !1512, !"_entry", i1 false, i1 false}
!1514 = !{ptr @show_rcu_nocb_state._entry_ptr.541, !1512, !"_entry_ptr", i1 false, i1 false}
!1515 = !{ptr @.str.542, !1512, !"<string literal>", i1 false, i1 false}
!1516 = !{ptr @.str.543, !1517, !"<string literal>", i1 false, i1 false}
!1517 = !{!"../kernel/rcu/tree_nocb.h", i32 1377, i32 2}
!1518 = !{ptr @.str.544, !1517, !"<string literal>", i1 false, i1 false}
!1519 = !{ptr @show_rcu_nocb_gp_state._entry, !1517, !"_entry", i1 false, i1 false}
!1520 = !{ptr @show_rcu_nocb_gp_state._entry_ptr, !1517, !"_entry_ptr", i1 false, i1 false}
!1521 = !{ptr @.str.545, !1517, !"<string literal>", i1 false, i1 false}
!1522 = !{ptr @task_index_to_char.state_char, !1523, !"state_char", i1 false, i1 false}
!1523 = !{!"../include/linux/sched.h", i32 1638, i32 20}
!1524 = !{ptr @.str.546, !1525, !"<string literal>", i1 false, i1 false}
!1525 = !{!"../kernel/rcu/tree_nocb.h", i32 1360, i32 55}
!1526 = distinct !{null, !1527, !"__warned", i1 false, i1 false}
!1527 = !{!"../kernel/rcu/tree_plugin.h", i32 27, i32 2}
!1528 = !{ptr @.str.547, !1527, !"<string literal>", i1 false, i1 false}
!1529 = distinct !{null, !1530, !"__already_done", i1 false, i1 false}
!1530 = !{!"../kernel/rcu/tree.c", i32 2291, i32 2}
!1531 = distinct !{null, !1532, !"__already_done", i1 false, i1 false}
!1532 = !{!"../kernel/rcu/tree.c", i32 2304, i32 3}
!1533 = distinct !{null, !1534, !"__already_done", i1 false, i1 false}
!1534 = !{!"../kernel/rcu/tree.c", i32 2310, i32 3}
!1535 = !{ptr @.str.550, !1536, !"<string literal>", i1 false, i1 false}
!1536 = !{!"../kernel/rcu/tree_plugin.h", i32 832, i32 2}
!1537 = !{ptr @.str.551, !1536, !"<string literal>", i1 false, i1 false}
!1538 = !{ptr @rcu_bootup_announce._entry, !1536, !"_entry", i1 false, i1 false}
!1539 = !{ptr @rcu_bootup_announce._entry_ptr, !1536, !"_entry_ptr", i1 false, i1 false}
!1540 = !{ptr @.str.552, !1541, !"<string literal>", i1 false, i1 false}
!1541 = !{!"../kernel/rcu/tree_plugin.h", i32 47, i32 3}
!1542 = !{ptr @.str.553, !1541, !"<string literal>", i1 false, i1 false}
!1543 = !{ptr @rcu_bootup_announce_oddness._entry, !1541, !"_entry", i1 false, i1 false}
!1544 = !{ptr @rcu_bootup_announce_oddness._entry_ptr, !1541, !"_entry_ptr", i1 false, i1 false}
!1545 = !{ptr @.str.555, !1546, !"<string literal>", i1 false, i1 false}
!1546 = !{!"../kernel/rcu/tree_plugin.h", i32 53, i32 3}
!1547 = !{ptr @rcu_bootup_announce_oddness._entry.554, !1546, !"_entry", i1 false, i1 false}
!1548 = !{ptr @rcu_bootup_announce_oddness._entry_ptr.556, !1546, !"_entry_ptr", i1 false, i1 false}
!1549 = !{ptr @.str.558, !1550, !"<string literal>", i1 false, i1 false}
!1550 = !{!"../kernel/rcu/tree_plugin.h", i32 55, i32 3}
!1551 = !{ptr @rcu_bootup_announce_oddness._entry.557, !1550, !"_entry", i1 false, i1 false}
!1552 = !{ptr @rcu_bootup_announce_oddness._entry_ptr.559, !1550, !"_entry_ptr", i1 false, i1 false}
!1553 = !{ptr @.str.561, !1554, !"<string literal>", i1 false, i1 false}
!1554 = !{!"../kernel/rcu/tree_plugin.h", i32 57, i32 3}
!1555 = !{ptr @rcu_bootup_announce_oddness._entry.560, !1554, !"_entry", i1 false, i1 false}
!1556 = !{ptr @rcu_bootup_announce_oddness._entry_ptr.562, !1554, !"_entry_ptr", i1 false, i1 false}
!1557 = !{ptr @.str.564, !1558, !"<string literal>", i1 false, i1 false}
!1558 = !{!"../kernel/rcu/tree_plugin.h", i32 61, i32 3}
!1559 = !{ptr @rcu_bootup_announce_oddness._entry.563, !1558, !"_entry", i1 false, i1 false}
!1560 = !{ptr @rcu_bootup_announce_oddness._entry_ptr.565, !1558, !"_entry_ptr", i1 false, i1 false}
!1561 = !{ptr @.str.567, !1562, !"<string literal>", i1 false, i1 false}
!1562 = !{!"../kernel/rcu/tree_plugin.h", i32 64, i32 3}
!1563 = !{ptr @rcu_bootup_announce_oddness._entry.566, !1562, !"_entry", i1 false, i1 false}
!1564 = !{ptr @rcu_bootup_announce_oddness._entry_ptr.568, !1562, !"_entry_ptr", i1 false, i1 false}
!1565 = !{ptr @.str.570, !1566, !"<string literal>", i1 false, i1 false}
!1566 = !{!"../kernel/rcu/tree_plugin.h", i32 67, i32 3}
!1567 = !{ptr @rcu_bootup_announce_oddness._entry.569, !1566, !"_entry", i1 false, i1 false}
!1568 = !{ptr @rcu_bootup_announce_oddness._entry_ptr.571, !1566, !"_entry_ptr", i1 false, i1 false}
!1569 = !{ptr @.str.573, !1570, !"<string literal>", i1 false, i1 false}
!1570 = !{!"../kernel/rcu/tree_plugin.h", i32 73, i32 3}
!1571 = !{ptr @rcu_bootup_announce_oddness._entry.572, !1570, !"_entry", i1 false, i1 false}
!1572 = !{ptr @rcu_bootup_announce_oddness._entry_ptr.574, !1570, !"_entry_ptr", i1 false, i1 false}
!1573 = !{ptr @.str.576, !1574, !"<string literal>", i1 false, i1 false}
!1574 = !{!"../kernel/rcu/tree_plugin.h", i32 75, i32 3}
!1575 = !{ptr @rcu_bootup_announce_oddness._entry.575, !1574, !"_entry", i1 false, i1 false}
!1576 = !{ptr @rcu_bootup_announce_oddness._entry_ptr.577, !1574, !"_entry_ptr", i1 false, i1 false}
!1577 = !{ptr @.str.579, !1578, !"<string literal>", i1 false, i1 false}
!1578 = !{!"../kernel/rcu/tree_plugin.h", i32 77, i32 3}
!1579 = !{ptr @rcu_bootup_announce_oddness._entry.578, !1578, !"_entry", i1 false, i1 false}
!1580 = !{ptr @rcu_bootup_announce_oddness._entry_ptr.580, !1578, !"_entry_ptr", i1 false, i1 false}
!1581 = !{ptr @.str.582, !1582, !"<string literal>", i1 false, i1 false}
!1582 = !{!"../kernel/rcu/tree_plugin.h", i32 79, i32 3}
!1583 = !{ptr @rcu_bootup_announce_oddness._entry.581, !1582, !"_entry", i1 false, i1 false}
!1584 = !{ptr @rcu_bootup_announce_oddness._entry_ptr.583, !1582, !"_entry_ptr", i1 false, i1 false}
!1585 = !{ptr @.str.585, !1586, !"<string literal>", i1 false, i1 false}
!1586 = !{!"../kernel/rcu/tree_plugin.h", i32 81, i32 3}
!1587 = !{ptr @rcu_bootup_announce_oddness._entry.584, !1586, !"_entry", i1 false, i1 false}
!1588 = !{ptr @rcu_bootup_announce_oddness._entry_ptr.586, !1586, !"_entry_ptr", i1 false, i1 false}
!1589 = !{ptr @.str.588, !1590, !"<string literal>", i1 false, i1 false}
!1590 = !{!"../kernel/rcu/tree_plugin.h", i32 83, i32 3}
!1591 = !{ptr @rcu_bootup_announce_oddness._entry.587, !1590, !"_entry", i1 false, i1 false}
!1592 = !{ptr @rcu_bootup_announce_oddness._entry_ptr.589, !1590, !"_entry_ptr", i1 false, i1 false}
!1593 = !{ptr @.str.591, !1594, !"<string literal>", i1 false, i1 false}
!1594 = !{!"../kernel/rcu/tree_plugin.h", i32 85, i32 3}
!1595 = !{ptr @rcu_bootup_announce_oddness._entry.590, !1594, !"_entry", i1 false, i1 false}
!1596 = !{ptr @rcu_bootup_announce_oddness._entry_ptr.592, !1594, !"_entry_ptr", i1 false, i1 false}
!1597 = !{ptr @.str.594, !1598, !"<string literal>", i1 false, i1 false}
!1598 = !{!"../kernel/rcu/tree_plugin.h", i32 87, i32 3}
!1599 = !{ptr @rcu_bootup_announce_oddness._entry.593, !1598, !"_entry", i1 false, i1 false}
!1600 = !{ptr @rcu_bootup_announce_oddness._entry_ptr.595, !1598, !"_entry_ptr", i1 false, i1 false}
!1601 = !{ptr @.str.597, !1602, !"<string literal>", i1 false, i1 false}
!1602 = !{!"../kernel/rcu/tree_plugin.h", i32 89, i32 3}
!1603 = !{ptr @rcu_bootup_announce_oddness._entry.596, !1602, !"_entry", i1 false, i1 false}
!1604 = !{ptr @rcu_bootup_announce_oddness._entry_ptr.598, !1602, !"_entry_ptr", i1 false, i1 false}
!1605 = !{ptr @.str.600, !1606, !"<string literal>", i1 false, i1 false}
!1606 = !{!"../kernel/rcu/tree_plugin.h", i32 91, i32 3}
!1607 = !{ptr @rcu_bootup_announce_oddness._entry.599, !1606, !"_entry", i1 false, i1 false}
!1608 = !{ptr @rcu_bootup_announce_oddness._entry_ptr.601, !1606, !"_entry_ptr", i1 false, i1 false}
!1609 = !{ptr @.str.603, !1610, !"<string literal>", i1 false, i1 false}
!1610 = !{!"../kernel/rcu/tree_plugin.h", i32 93, i32 3}
!1611 = !{ptr @rcu_bootup_announce_oddness._entry.602, !1610, !"_entry", i1 false, i1 false}
!1612 = !{ptr @rcu_bootup_announce_oddness._entry_ptr.604, !1610, !"_entry_ptr", i1 false, i1 false}
!1613 = !{ptr @.str.606, !1614, !"<string literal>", i1 false, i1 false}
!1614 = !{!"../kernel/rcu/tree_plugin.h", i32 95, i32 3}
!1615 = !{ptr @rcu_bootup_announce_oddness._entry.605, !1614, !"_entry", i1 false, i1 false}
!1616 = !{ptr @rcu_bootup_announce_oddness._entry_ptr.607, !1614, !"_entry_ptr", i1 false, i1 false}
!1617 = !{ptr @.str.609, !1618, !"<string literal>", i1 false, i1 false}
!1618 = !{!"../kernel/rcu/tree_plugin.h", i32 97, i32 3}
!1619 = !{ptr @rcu_bootup_announce_oddness._entry.608, !1618, !"_entry", i1 false, i1 false}
!1620 = !{ptr @rcu_bootup_announce_oddness._entry_ptr.610, !1618, !"_entry_ptr", i1 false, i1 false}
!1621 = !{ptr @.str.612, !1622, !"<string literal>", i1 false, i1 false}
!1622 = !{!"../kernel/rcu/tree_plugin.h", i32 99, i32 3}
!1623 = !{ptr @rcu_bootup_announce_oddness._entry.611, !1622, !"_entry", i1 false, i1 false}
!1624 = !{ptr @rcu_bootup_announce_oddness._entry_ptr.613, !1622, !"_entry_ptr", i1 false, i1 false}
!1625 = distinct !{null, !1626, !"__warned", i1 false, i1 false}
!1626 = !{!"../kernel/rcu/tree_plugin.h", i32 844, i32 2}
!1627 = !{ptr @.str.614, !1626, !"<string literal>", i1 false, i1 false}
!1628 = !{ptr @.str.615, !1629, !"<string literal>", i1 false, i1 false}
!1629 = !{!"../kernel/rcu/tree_plugin.h", i32 847, i32 25}
!1630 = !{ptr @rcu_qs.___tp_str, !1629, !"___tp_str", i1 false, i1 false}
!1631 = !{ptr @.str.617, !1632, !"<string literal>", i1 false, i1 false}
!1632 = !{!"../kernel/rcu/tree_plugin.h", i32 848, i32 45}
!1633 = !{ptr @rcu_qs.___tp_str.616, !1632, !"___tp_str", i1 false, i1 false}
!1634 = !{!"sp"}
!1635 = !{i32 1, !"wchar_size", i32 2}
!1636 = !{i32 1, !"min_enum_size", i32 4}
!1637 = !{i32 8, !"branch-target-enforcement", i32 0}
!1638 = !{i32 8, !"sign-return-address", i32 0}
!1639 = !{i32 8, !"sign-return-address-all", i32 0}
!1640 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!1641 = !{i32 7, !"uwtable", i32 1}
!1642 = !{i32 7, !"frame-pointer", i32 2}
!1643 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!1644 = !{i8 0, i8 2}
!1645 = !{!"branch_weights", i32 1, i32 2000}
!1646 = !{!"branch_weights", i32 2000, i32 1}
!1647 = !{i64 2156461791}
!1648 = !{i64 2156465237}
!1649 = !{i64 760143}
!1650 = !{i64 2156488542}
!1651 = !{i64 2148444625}
!1652 = !{i64 2156490099}
!1653 = !{i64 2156492843}
!1654 = !{i64 2148450341}
!1655 = !{i64 2148365650, i64 2148365682, i64 2148365711, i64 2148365745, i64 2148365776, i64 2148365799}
!1656 = !{i64 2148450570}
!1657 = !{i64 2157373586}
!1658 = !{i64 2157378520}
!1659 = !{i64 2157400202}
!1660 = !{i64 2157405096}
!1661 = !{i64 2157102570}
!1662 = !{i64 2157107504}
!1663 = !{i64 2157129186}
!1664 = !{i64 2157134080}
!1665 = !{i64 2148846745, i64 2148846750, i64 2148846763, i64 2148846807, i64 2148846841, i64 2148846862}
!1666 = !{i64 2156158246}
!1667 = !{i64 2156158515}
!1668 = !{i64 2149390337}
!1669 = !{i64 2149391373}
!1670 = !{i64 2157650882}
!1671 = !{i64 2157655816}
!1672 = !{i64 2157677498}
!1673 = !{i64 2157682392}
!1674 = !{i64 2157917586}
!1675 = !{i64 2157922520}
!1676 = !{i64 2157944202}
!1677 = !{i64 2157949096}
!1678 = !{i64 757411, i64 757472}
!1679 = !{i64 760428}
!1680 = !{i64 2158204602}
!1681 = !{i64 2158209536}
!1682 = !{i64 2158231218}
!1683 = !{i64 2158236112}
!1684 = !{i64 2158267350}
!1685 = !{i64 2158494342}
!1686 = !{i64 2158499276}
!1687 = !{i64 2158520958}
!1688 = !{i64 2158525852}
!1689 = !{i64 2158545460}
!1690 = !{i64 2158545559}
!1691 = !{i64 2158547065}
!1692 = !{i64 2158559460}
!1693 = !{i64 2158573927}
!1694 = !{i64 2158577701}
!1695 = !{i64 2155951633}
!1696 = !{i64 2155951876}
!1697 = !{i64 2166496864}
!1698 = !{i64 2166501798}
!1699 = !{i64 2166523480}
!1700 = !{i64 2166528374}
!1701 = !{i64 2166573894}
!1702 = !{i64 2169177174}
!1703 = !{i64 2169182108}
!1704 = !{i64 2169203790}
!1705 = !{i64 2169208684}
!1706 = !{i64 2174880379}
!1707 = !{i64 2174885315}
!1708 = !{i64 2174907003}
!1709 = !{i64 2174911899}
!1710 = !{i64 2174930500}
!1711 = !{i64 2174933790}
!1712 = !{i64 2174936945}
!1713 = !{i64 2174943707}
!1714 = !{i64 874422, i64 874443, i64 874466, i64 874485, i64 874504}
!1715 = !{i64 2174944110}
!1716 = !{i64 2174067511}
!1717 = !{i64 2174072447}
!1718 = !{i64 2174094135}
!1719 = !{i64 2174099031}
!1720 = !{i64 2174336948}
!1721 = !{i64 2174341884}
!1722 = !{i64 2174363572}
!1723 = !{i64 2174368468}
!1724 = !{i64 2174613273}
!1725 = !{i64 2174618209}
!1726 = !{i64 2174639897}
!1727 = !{i64 2174644793}
!1728 = !{i64 2148624770}
!1729 = !{i64 871698, i64 871715, i64 871739, i64 871765, i64 871783}
!1730 = !{i64 2148625140}
!1731 = !{i64 2174948761}
!1732 = !{i64 2174949164}
!1733 = !{i64 2173490638}
!1734 = !{i64 2173495574}
!1735 = !{i64 2173517262}
!1736 = !{i64 2173522158}
!1737 = !{i64 2172877698}
!1738 = !{i64 2172882634}
!1739 = !{i64 2172904322}
!1740 = !{i64 2172909218}
!1741 = !{i64 2173761540}
!1742 = !{i64 2173766476}
!1743 = !{i64 2173788164}
!1744 = !{i64 2173793060}
!1745 = !{i64 2166806345}
!1746 = !{i64 2166811279}
!1747 = !{i64 2166832961}
!1748 = !{i64 2166837855}
!1749 = !{i64 2155934842}
!1750 = !{i64 2155935037}
!1751 = !{i64 2156728152}
!1752 = !{i64 2156733086}
!1753 = !{i64 2156754768}
!1754 = !{i64 2156759662}
!1755 = !{i64 2167647849}
!1756 = !{i64 2167652783}
!1757 = !{i64 2167674465}
!1758 = !{i64 2167679359}
!1759 = !{i64 2167926349}
!1760 = !{i64 2167931283}
!1761 = !{i64 2167952965}
!1762 = !{i64 2167957859}
!1763 = !{i64 2168252517}
!1764 = !{i64 2168257451}
!1765 = !{i64 2168279133}
!1766 = !{i64 2168284027}
!1767 = !{!"auto-init"}
!1768 = !{i64 2183059843}
!1769 = !{i64 2183064779}
!1770 = !{i64 2183086467}
!1771 = !{i64 2183091363}
!1772 = !{i64 2181202953}
!1773 = !{i64 2181202795}
!1774 = !{i64 2183119307}
!1775 = !{i64 2168396834}
!1776 = !{i64 2168400050}
!1777 = !{i64 2177494300}
!1778 = !{i64 2156371091}
!1779 = !{i64 2179938175}
!1780 = !{i64 2156363693}
!1781 = !{i64 2180873569}
!1782 = !{i64 2168403192}
!1783 = !{i64 2168631616}
!1784 = !{i64 2168636550}
!1785 = !{i64 2168658234}
!1786 = !{i64 2168663128}
!1787 = !{i64 2168900121}
!1788 = !{i64 2168905055}
!1789 = !{i64 2168926737}
!1790 = !{i64 2168931631}
!1791 = !{i64 2158862123}
!1792 = !{i64 2158867057}
!1793 = !{i64 2158888739}
!1794 = !{i64 2158893633}
!1795 = !{i64 2159147655}
!1796 = !{i64 2159152589}
!1797 = !{i64 2159174271}
!1798 = !{i64 2159179165}
!1799 = !{i64 2168942244}
!1800 = !{i64 2169224499}
!1801 = !{i64 757846}
!1802 = !{i64 757656}
!1803 = !{i64 2148453382}
!1804 = !{i64 2148368115, i64 2148368147, i64 2148368176, i64 2148368210, i64 2148368241, i64 2148368264}
!1805 = !{i64 2148453611}
!1806 = !{i64 2156365226}
!1807 = !{i64 2148364930, i64 2148364956, i64 2148364985, i64 2148365019, i64 2148365050, i64 2148365073}
!1808 = !{i64 2169732743}
!1809 = !{i64 2169737677}
!1810 = !{i64 2169759359}
!1811 = !{i64 2169764253}
!1812 = !{i64 2170003155}
!1813 = !{i64 2170008089}
!1814 = !{i64 2170029771}
!1815 = !{i64 2170034665}
!1816 = !{i64 2172610700}
!1817 = !{i64 2172615636}
!1818 = !{i64 2172637324}
!1819 = !{i64 2172642220}
!1820 = !{i64 2170274498}
!1821 = !{i64 2170279432}
!1822 = !{i64 2170301114}
!1823 = !{i64 2170306008}
!1824 = !{i64 2180861026}
!1825 = !{i64 2180867065}
!1826 = !{i64 2180835553}
!1827 = !{i64 2180868628}
!1828 = !{i64 2180868802}
!1829 = !{i64 2170542732}
!1830 = !{i64 2170547666}
!1831 = !{i64 2170569348}
!1832 = !{i64 2170574242}
!1833 = !{i64 2170591019}
!1834 = !{i64 2170595928}
!1835 = !{i64 2170832101}
!1836 = !{i64 2170837035}
!1837 = !{i64 2170858717}
!1838 = !{i64 2170863611}
!1839 = !{i64 2170872504}
!1840 = !{i64 2170875777}
!1841 = !{i64 2163474532}
!1842 = !{i64 2163479466}
!1843 = !{i64 2163501148}
!1844 = !{i64 2163506042}
!1845 = !{i64 2163749970}
!1846 = !{i64 2163754904}
!1847 = !{i64 2163776586}
!1848 = !{i64 2163781480}
!1849 = !{i64 2164017101}
!1850 = !{i64 2164022035}
!1851 = !{i64 2164043717}
!1852 = !{i64 2164048611}
!1853 = !{i64 2163206530}
!1854 = !{i64 2163211464}
!1855 = !{i64 2163233146}
!1856 = !{i64 2163238040}
!1857 = !{i64 2170879796}
!1858 = !{i64 2171115768}
!1859 = !{i64 2171120702}
!1860 = !{i64 2171142384}
!1861 = !{i64 2171147278}
!1862 = !{i64 2171156214}
!1863 = !{i64 2171390789}
!1864 = !{i64 2171395723}
!1865 = !{i64 2171417407}
!1866 = !{i64 2171422303}
!1867 = !{i64 2171657785}
!1868 = !{i64 2171662721}
!1869 = !{i64 2171684409}
!1870 = !{i64 2171689305}
!1871 = !{i64 2171924851}
!1872 = !{i64 2171929787}
!1873 = !{i64 2171951477}
!1874 = !{i64 2171956373}
!1875 = !{i64 2181967569}
!1876 = !{i64 2181972505}
!1877 = !{i64 2181994193}
!1878 = !{i64 2181999089}
!1879 = !{i64 2183124909}
!1880 = !{i64 2182234395}
!1881 = !{i64 2182239331}
!1882 = !{i64 2182261019}
!1883 = !{i64 2182265915}
!1884 = !{i64 2171983275}
!1885 = !{i64 2172212580}
!1886 = !{i64 2172217516}
!1887 = !{i64 2172239204}
!1888 = !{i64 2172244100}
!1889 = !{i64 2172340464}
!1890 = !{i64 2172340616}
!1891 = !{i64 2175196355}
!1892 = !{i64 2175201291}
!1893 = !{i64 2175222979}
!1894 = !{i64 2175227875}
!1895 = !{i64 2175464963}
!1896 = !{i64 2175469899}
!1897 = !{i64 2175491587}
!1898 = !{i64 2175496483}
!1899 = !{i64 2175732167}
!1900 = !{i64 2175737103}
!1901 = !{i64 2175758791}
!1902 = !{i64 2175763687}
!1903 = !{i32 0, i32 33}
!1904 = !{i64 2177455395}
!1905 = !{i64 2177456345}
!1906 = !{i64 2176031541}
!1907 = !{i64 2176298337}
!1908 = !{i64 2176303273}
!1909 = !{i64 2176324961}
!1910 = !{i64 2176329857}
!1911 = !{i64 2176589556}
!1912 = !{i64 2176594492}
!1913 = !{i64 2176616180}
!1914 = !{i64 2176621076}
!1915 = !{i64 2176860625}
!1916 = !{i64 2176865561}
!1917 = !{i64 2176887249}
!1918 = !{i64 2176892145}
!1919 = !{i64 2177128300}
!1920 = !{i64 2177133236}
!1921 = !{i64 2177154924}
!1922 = !{i64 2177159820}
!1923 = !{i64 2177395308}
!1924 = !{i64 2177400244}
!1925 = !{i64 2177421932}
!1926 = !{i64 2177426828}
!1927 = !{i64 2177500483}
!1928 = !{i64 2177728034}
!1929 = !{i64 2177732970}
!1930 = !{i64 2177754658}
!1931 = !{i64 2177759554}
!1932 = !{i64 2177999296}
!1933 = !{i64 2178004232}
!1934 = !{i64 2178025920}
!1935 = !{i64 2178030816}
!1936 = !{i64 2178266927}
!1937 = !{i64 2178271863}
!1938 = !{i64 2178293551}
!1939 = !{i64 2178298447}
!1940 = !{i64 2178537868}
!1941 = !{i64 2178542804}
!1942 = !{i64 2178564492}
!1943 = !{i64 2178569388}
!1944 = !{i64 2177494148}
!1945 = !{i64 2180815398}
!1946 = !{i64 2149626355}
!1947 = !{i64 2164826936}
!1948 = !{i64 2164831870}
!1949 = !{i64 2164853552}
!1950 = !{i64 2164858446}
!1951 = !{i64 2165094055}
!1952 = !{i64 2165098989}
!1953 = !{i64 2165120671}
!1954 = !{i64 2165125565}
!1955 = !{i64 2184353419}
!1956 = !{i64 2184384894}
!1957 = !{i64 2184385037}
!1958 = !{i64 2184404168}
!1959 = !{i64 2184437294}
!1960 = !{i64 2184476713}
!1961 = !{i64 2184480165}
!1962 = !{i64 2156208695}
!1963 = !{i64 2156208948}
!1964 = !{i64 2156175000}
!1965 = !{i64 2156175223}
!1966 = !{i64 2156191371}
!1967 = !{i64 2156191578}
!1968 = !{i64 2156045641}
!1969 = !{i64 2156045870}
!1970 = !{i64 2159706203}
!1971 = !{i64 2159711137}
!1972 = !{i64 2159732819}
!1973 = !{i64 2159737713}
!1974 = !{i64 2182501223}
!1975 = !{i64 2182506159}
!1976 = !{i64 2182527847}
!1977 = !{i64 2182532743}
!1978 = !{i64 2181158850}
!1979 = !{i64 2181163786}
!1980 = !{i64 2181185474}
!1981 = !{i64 2181190370}
!1982 = !{i64 2181200284}
!1983 = !{i64 2181200506}
!1984 = !{i64 2148367395, i64 2148367421, i64 2148367450, i64 2148367484, i64 2148367515, i64 2148367538}
!1985 = !{i64 2181696673}
!1986 = !{i64 2181701609}
!1987 = !{i64 2181723297}
!1988 = !{i64 2181728193}
!1989 = !{i64 2182769051}
!1990 = !{i64 2182773987}
!1991 = !{i64 2182795675}
!1992 = !{i64 2182800571}
!1993 = !{i64 2159992602}
!1994 = !{i64 2159997536}
!1995 = !{i64 2160019218}
!1996 = !{i64 2160024112}
!1997 = !{i64 2149381778}
!1998 = !{i64 2159437061}
!1999 = !{i64 2159441995}
!2000 = !{i64 2159463677}
!2001 = !{i64 2159468571}
!2002 = !{i64 2149382044}
!2003 = !{i64 2155970220}
!2004 = !{i64 2155970543}
!2005 = !{i64 2156137093}
!2006 = !{i64 2156137314}
!2007 = !{i64 2173239870}
!2008 = !{i64 2173148757}
!2009 = !{i64 2173153693}
!2010 = !{i64 2173175381}
!2011 = !{i64 2173180277}
!2012 = !{i64 2156339866}
!2013 = !{i64 2156340103}
!2014 = !{i64 2156102904}
!2015 = !{i64 2156103239}
!2016 = !{i64 2160038567}
!2017 = !{i64 2160038912}
!2018 = !{i64 2162959220}
!2019 = !{i64 2162962666}
!2020 = !{i64 2160278553}
!2021 = !{i64 2160283487}
!2022 = !{i64 2160305169}
!2023 = !{i64 2160310063}
!2024 = !{i64 2160548697}
!2025 = !{i64 2160553631}
!2026 = !{i64 2160575313}
!2027 = !{i64 2160580207}
!2028 = !{i64 2172355668}
!2029 = !{i64 2160815955}
!2030 = !{i64 2160820889}
!2031 = !{i64 2160842571}
!2032 = !{i64 2160847465}
!2033 = !{i64 2160858537}
!2034 = !{i64 2160864333}
!2035 = !{i64 2161091428}
!2036 = !{i64 2161096362}
!2037 = !{i64 2161118044}
!2038 = !{i64 2161122938}
!2039 = !{i64 2169457885}
!2040 = !{i64 2169462819}
!2041 = !{i64 2169484501}
!2042 = !{i64 2169489395}
!2043 = !{i64 2161358370}
!2044 = !{i64 2161363304}
!2045 = !{i64 2161384986}
!2046 = !{i64 2161389880}
!2047 = !{i64 2161635185}
!2048 = !{i64 2161640119}
!2049 = !{i64 2161661801}
!2050 = !{i64 2161666695}
!2051 = !{i64 2161697103}
!2052 = !{i64 2161700549}
!2053 = !{i64 2161997124}
!2054 = !{i64 2166868613}
!2055 = !{i64 2166872059}
!2056 = !{i64 2167099444}
!2057 = !{i64 2167104378}
!2058 = !{i64 2167126060}
!2059 = !{i64 2167130954}
!2060 = !{ptr @dyntick_save_progress_counter, ptr @rcu_implicit_dynticks_qs}
!2061 = !{i64 2167368954}
!2062 = !{i64 2167373888}
!2063 = !{i64 2167395570}
!2064 = !{i64 2167400464}
!2065 = !{i64 2161951326}
!2066 = !{i64 2161956260}
!2067 = !{i64 2161977942}
!2068 = !{i64 2161982836}
!2069 = !{i64 2162031851}
!2070 = !{i64 2162035297}
!2071 = !{i64 2162062656}
!2072 = !{i64 2162066102}
!2073 = !{i64 2162299175}
!2074 = !{i64 2162304109}
!2075 = !{i64 2162325791}
!2076 = !{i64 2162330685}
!2077 = !{i64 2162577925}
!2078 = !{i64 2162582859}
!2079 = !{i64 2162604541}
!2080 = !{i64 2162609435}
!2081 = !{i64 2162639843}
!2082 = !{i64 2162643289}
!2083 = !{i64 2162883761}
!2084 = !{i64 2162888695}
!2085 = !{i64 2162910377}
!2086 = !{i64 2162915271}
!2087 = !{i64 2165375224}
!2088 = !{i64 2165380158}
!2089 = !{i64 2165401840}
!2090 = !{i64 2165406734}
!2091 = !{i64 2165642115}
!2092 = !{i64 2165647049}
!2093 = !{i64 2165668731}
!2094 = !{i64 2165673625}
!2095 = !{i64 2155988994}
!2096 = !{i64 2155989287}
!2097 = !{i64 2158602275}
!2098 = !{i64 2156120837}
!2099 = !{i64 2156121072}
!2100 = !{!"branch_weights", i32 1, i32 4001}
!2101 = !{i64 2165925000}
!2102 = !{i64 2165929934}
!2103 = !{i64 2165951618}
!2104 = !{i64 2165956512}
!2105 = !{i64 2165986850}
!2106 = !{i64 2165990296}
!2107 = !{i64 2166217125}
!2108 = !{i64 2166222059}
!2109 = !{i64 2166243743}
!2110 = !{i64 2166248637}
!2111 = !{i64 2156229773}
!2112 = !{i64 2156230008}
!2113 = !{i64 2156304555}
!2114 = !{i64 2156304834}
!2115 = !{i64 2156246583}
!2116 = !{i64 2156246808}
!2117 = !{i64 2168339097}
!2118 = !{i64 2168342543}
!2119 = !{i64 2168365560}
!2120 = !{i64 2168369006}
!2121 = !{i64 2156286316}
!2122 = !{i64 2156286583}
!2123 = !{i64 2156264189}
!2124 = !{i64 2156264444}
!2125 = !{i64 2149250575}
!2126 = !{i64 2149250928}
!2127 = !{i64 2179889946}
!2128 = !{i64 2179894882}
!2129 = !{i64 2179916570}
!2130 = !{i64 2179921466}
!2131 = !{i64 2184715965}
!2132 = !{i64 2184720901}
!2133 = !{i64 2184742589}
!2134 = !{i64 2184747485}
!2135 = !{i64 2179080139}
!2136 = !{i64 2179085075}
!2137 = !{i64 2179106763}
!2138 = !{i64 2179111659}
!2139 = !{i64 2179347353}
!2140 = !{i64 2179352289}
!2141 = !{i64 2179373977}
!2142 = !{i64 2179378873}
!2143 = !{i64 2179387771}
!2144 = !{i64 2179618746}
!2145 = !{i64 2179623682}
!2146 = !{i64 2179645370}
!2147 = !{i64 2179650266}
!2148 = !{i64 2156010816}
!2149 = !{i64 2156011065}
!2150 = !{i64 2156028565}
!2151 = !{i64 2156028840}
!2152 = !{i64 2180185796}
!2153 = !{i64 2180190732}
!2154 = !{i64 2180212420}
!2155 = !{i64 2180217316}
!2156 = !{i64 2180228700}
!2157 = !{i64 2180228867}
!2158 = !{i64 2180229041}
!2159 = !{i64 2180456396}
!2160 = !{i64 2180461332}
!2161 = !{i64 2180483020}
!2162 = !{i64 2180487916}
!2163 = !{i64 2180723859}
!2164 = !{i64 2180728795}
!2165 = !{i64 2180750483}
!2166 = !{i64 2180755379}
!2167 = !{i64 2178812073}
!2168 = !{i64 2178817009}
!2169 = !{i64 2178838697}
!2170 = !{i64 2178843593}
!2171 = !{i64 2181429747}
!2172 = !{i64 2181434683}
!2173 = !{i64 2181456371}
!2174 = !{i64 2181461267}
!2175 = !{i64 2183402355}
!2176 = !{i64 2183407291}
!2177 = !{i64 2183428979}
!2178 = !{i64 2183433875}
!2179 = !{i64 2183446238}
!2180 = !{i64 2183494794}
!2181 = !{i64 2183498246}
!2182 = !{i64 2183509016}
!2183 = !{i64 2183742113}
!2184 = !{i64 2183747049}
!2185 = !{i64 2183768739}
!2186 = !{i64 2183773635}
!2187 = !{i64 2184010179}
!2188 = !{i64 2184015115}
!2189 = !{i64 2184036803}
!2190 = !{i64 2184041699}
!2191 = !{i64 2184076331}
!2192 = !{i64 2184079783}
