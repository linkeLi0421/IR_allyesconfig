; ModuleID = '/llk/IR_all_yes/kernel/rcu/update.c_pt.bc'
source_filename = "../kernel/rcu/update.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+rcu_read_lock_sched_held\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_read_lock_sched_held\09\09\09\09"
module asm "\09.long\09__crc_rcu_read_lock_sched_held\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_read_lock_sched_held:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_read_lock_sched_held\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_read_lock_sched_held:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_gp_is_normal\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_gp_is_normal\09\09\09\09"
module asm "\09.long\09__crc_rcu_gp_is_normal\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_gp_is_normal:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_gp_is_normal\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_gp_is_normal:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_gp_is_expedited\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_gp_is_expedited\09\09\09\09"
module asm "\09.long\09__crc_rcu_gp_is_expedited\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_gp_is_expedited:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_gp_is_expedited\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_gp_is_expedited:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_expedite_gp\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_expedite_gp\09\09\09\09"
module asm "\09.long\09__crc_rcu_expedite_gp\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_expedite_gp:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_expedite_gp\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_expedite_gp:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_unexpedite_gp\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_unexpedite_gp\09\09\09\09"
module asm "\09.long\09__crc_rcu_unexpedite_gp\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_unexpedite_gp:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_unexpedite_gp\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_unexpedite_gp:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_inkernel_boot_has_ended\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_inkernel_boot_has_ended\09\09\09\09"
module asm "\09.long\09__crc_rcu_inkernel_boot_has_ended\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_inkernel_boot_has_ended:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_inkernel_boot_has_ended\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_inkernel_boot_has_ended:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_lock_map\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_lock_map\09\09\09\09"
module asm "\09.long\09__crc_rcu_lock_map\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_lock_map:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_lock_map\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_lock_map:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_bh_lock_map\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_bh_lock_map\09\09\09\09"
module asm "\09.long\09__crc_rcu_bh_lock_map\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_bh_lock_map:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_bh_lock_map\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_bh_lock_map:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_sched_lock_map\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_sched_lock_map\09\09\09\09"
module asm "\09.long\09__crc_rcu_sched_lock_map\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_sched_lock_map:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_sched_lock_map\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_sched_lock_map:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_callback_map\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_callback_map\09\09\09\09"
module asm "\09.long\09__crc_rcu_callback_map\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_callback_map:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_callback_map\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_callback_map:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+debug_lockdep_rcu_enabled\22, \22a\22\09"
module asm "\09.weak\09__crc_debug_lockdep_rcu_enabled\09\09\09\09"
module asm "\09.long\09__crc_debug_lockdep_rcu_enabled\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_debug_lockdep_rcu_enabled:\09\09\09\09\09"
module asm "\09.asciz \09\22debug_lockdep_rcu_enabled\22\09\09\09\09\09"
module asm "__kstrtabns_debug_lockdep_rcu_enabled:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_read_lock_held\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_read_lock_held\09\09\09\09"
module asm "\09.long\09__crc_rcu_read_lock_held\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_read_lock_held:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_read_lock_held\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_read_lock_held:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_read_lock_bh_held\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_read_lock_bh_held\09\09\09\09"
module asm "\09.long\09__crc_rcu_read_lock_bh_held\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_read_lock_bh_held:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_read_lock_bh_held\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_read_lock_bh_held:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_read_lock_any_held\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_read_lock_any_held\09\09\09\09"
module asm "\09.long\09__crc_rcu_read_lock_any_held\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_read_lock_any_held:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_read_lock_any_held\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_read_lock_any_held:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+wakeme_after_rcu\22, \22a\22\09"
module asm "\09.weak\09__crc_wakeme_after_rcu\09\09\09\09"
module asm "\09.long\09__crc_wakeme_after_rcu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_wakeme_after_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22wakeme_after_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_wakeme_after_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__wait_rcu_gp\22, \22a\22\09"
module asm "\09.weak\09__crc___wait_rcu_gp\09\09\09\09"
module asm "\09.long\09__crc___wait_rcu_gp\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___wait_rcu_gp:\09\09\09\09\09"
module asm "\09.asciz \09\22__wait_rcu_gp\22\09\09\09\09\09"
module asm "__kstrtabns___wait_rcu_gp:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+init_rcu_head\22, \22a\22\09"
module asm "\09.weak\09__crc_init_rcu_head\09\09\09\09"
module asm "\09.long\09__crc_init_rcu_head\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_init_rcu_head:\09\09\09\09\09"
module asm "\09.asciz \09\22init_rcu_head\22\09\09\09\09\09"
module asm "__kstrtabns_init_rcu_head:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+destroy_rcu_head\22, \22a\22\09"
module asm "\09.weak\09__crc_destroy_rcu_head\09\09\09\09"
module asm "\09.long\09__crc_destroy_rcu_head\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_destroy_rcu_head:\09\09\09\09\09"
module asm "\09.asciz \09\22destroy_rcu_head\22\09\09\09\09\09"
module asm "__kstrtabns_destroy_rcu_head:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+init_rcu_head_on_stack\22, \22a\22\09"
module asm "\09.weak\09__crc_init_rcu_head_on_stack\09\09\09\09"
module asm "\09.long\09__crc_init_rcu_head_on_stack\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_init_rcu_head_on_stack:\09\09\09\09\09"
module asm "\09.asciz \09\22init_rcu_head_on_stack\22\09\09\09\09\09"
module asm "__kstrtabns_init_rcu_head_on_stack:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+destroy_rcu_head_on_stack\22, \22a\22\09"
module asm "\09.weak\09__crc_destroy_rcu_head_on_stack\09\09\09\09"
module asm "\09.long\09__crc_destroy_rcu_head_on_stack\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_destroy_rcu_head_on_stack:\09\09\09\09\09"
module asm "\09.asciz \09\22destroy_rcu_head_on_stack\22\09\09\09\09\09"
module asm "__kstrtabns_destroy_rcu_head_on_stack:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcuhead_debug_descr\22, \22a\22\09"
module asm "\09.weak\09__crc_rcuhead_debug_descr\09\09\09\09"
module asm "\09.long\09__crc_rcuhead_debug_descr\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcuhead_debug_descr:\09\09\09\09\09"
module asm "\09.asciz \09\22rcuhead_debug_descr\22\09\09\09\09\09"
module asm "__kstrtabns_rcuhead_debug_descr:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+do_trace_rcu_torture_read\22, \22a\22\09"
module asm "\09.weak\09__crc_do_trace_rcu_torture_read\09\09\09\09"
module asm "\09.long\09__crc_do_trace_rcu_torture_read\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_do_trace_rcu_torture_read:\09\09\09\09\09"
module asm "\09.asciz \09\22do_trace_rcu_torture_read\22\09\09\09\09\09"
module asm "__kstrtabns_do_trace_rcu_torture_read:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcutorture_sched_setaffinity\22, \22a\22\09"
module asm "\09.weak\09__crc_rcutorture_sched_setaffinity\09\09\09\09"
module asm "\09.long\09__crc_rcutorture_sched_setaffinity\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcutorture_sched_setaffinity:\09\09\09\09\09"
module asm "\09.asciz \09\22rcutorture_sched_setaffinity\22\09\09\09\09\09"
module asm "__kstrtabns_rcutorture_sched_setaffinity:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_cpu_stall_suppress\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_cpu_stall_suppress\09\09\09\09"
module asm "\09.long\09__crc_rcu_cpu_stall_suppress\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_cpu_stall_suppress:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_cpu_stall_suppress\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_cpu_stall_suppress:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_cpu_stall_suppress_at_boot\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_cpu_stall_suppress_at_boot\09\09\09\09"
module asm "\09.long\09__crc_rcu_cpu_stall_suppress_at_boot\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_cpu_stall_suppress_at_boot:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_cpu_stall_suppress_at_boot\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_cpu_stall_suppress_at_boot:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+call_rcu_tasks\22, \22a\22\09"
module asm "\09.weak\09__crc_call_rcu_tasks\09\09\09\09"
module asm "\09.long\09__crc_call_rcu_tasks\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_call_rcu_tasks:\09\09\09\09\09"
module asm "\09.asciz \09\22call_rcu_tasks\22\09\09\09\09\09"
module asm "__kstrtabns_call_rcu_tasks:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+synchronize_rcu_tasks\22, \22a\22\09"
module asm "\09.weak\09__crc_synchronize_rcu_tasks\09\09\09\09"
module asm "\09.long\09__crc_synchronize_rcu_tasks\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_synchronize_rcu_tasks:\09\09\09\09\09"
module asm "\09.asciz \09\22synchronize_rcu_tasks\22\09\09\09\09\09"
module asm "__kstrtabns_synchronize_rcu_tasks:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_barrier_tasks\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_barrier_tasks\09\09\09\09"
module asm "\09.long\09__crc_rcu_barrier_tasks\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_barrier_tasks:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_barrier_tasks\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_barrier_tasks:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+show_rcu_tasks_classic_gp_kthread\22, \22a\22\09"
module asm "\09.weak\09__crc_show_rcu_tasks_classic_gp_kthread\09\09\09\09"
module asm "\09.long\09__crc_show_rcu_tasks_classic_gp_kthread\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_show_rcu_tasks_classic_gp_kthread:\09\09\09\09\09"
module asm "\09.asciz \09\22show_rcu_tasks_classic_gp_kthread\22\09\09\09\09\09"
module asm "__kstrtabns_show_rcu_tasks_classic_gp_kthread:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+call_rcu_tasks_rude\22, \22a\22\09"
module asm "\09.weak\09__crc_call_rcu_tasks_rude\09\09\09\09"
module asm "\09.long\09__crc_call_rcu_tasks_rude\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_call_rcu_tasks_rude:\09\09\09\09\09"
module asm "\09.asciz \09\22call_rcu_tasks_rude\22\09\09\09\09\09"
module asm "__kstrtabns_call_rcu_tasks_rude:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+synchronize_rcu_tasks_rude\22, \22a\22\09"
module asm "\09.weak\09__crc_synchronize_rcu_tasks_rude\09\09\09\09"
module asm "\09.long\09__crc_synchronize_rcu_tasks_rude\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_synchronize_rcu_tasks_rude:\09\09\09\09\09"
module asm "\09.asciz \09\22synchronize_rcu_tasks_rude\22\09\09\09\09\09"
module asm "__kstrtabns_synchronize_rcu_tasks_rude:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_barrier_tasks_rude\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_barrier_tasks_rude\09\09\09\09"
module asm "\09.long\09__crc_rcu_barrier_tasks_rude\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_barrier_tasks_rude:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_barrier_tasks_rude\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_barrier_tasks_rude:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+show_rcu_tasks_rude_gp_kthread\22, \22a\22\09"
module asm "\09.weak\09__crc_show_rcu_tasks_rude_gp_kthread\09\09\09\09"
module asm "\09.long\09__crc_show_rcu_tasks_rude_gp_kthread\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_show_rcu_tasks_rude_gp_kthread:\09\09\09\09\09"
module asm "\09.asciz \09\22show_rcu_tasks_rude_gp_kthread\22\09\09\09\09\09"
module asm "__kstrtabns_show_rcu_tasks_rude_gp_kthread:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_trace_lock_map\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_trace_lock_map\09\09\09\09"
module asm "\09.long\09__crc_rcu_trace_lock_map\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_trace_lock_map:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_trace_lock_map\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_trace_lock_map:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_read_unlock_trace_special\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_read_unlock_trace_special\09\09\09\09"
module asm "\09.long\09__crc_rcu_read_unlock_trace_special\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_read_unlock_trace_special:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_read_unlock_trace_special\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_read_unlock_trace_special:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+call_rcu_tasks_trace\22, \22a\22\09"
module asm "\09.weak\09__crc_call_rcu_tasks_trace\09\09\09\09"
module asm "\09.long\09__crc_call_rcu_tasks_trace\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_call_rcu_tasks_trace:\09\09\09\09\09"
module asm "\09.asciz \09\22call_rcu_tasks_trace\22\09\09\09\09\09"
module asm "__kstrtabns_call_rcu_tasks_trace:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+synchronize_rcu_tasks_trace\22, \22a\22\09"
module asm "\09.weak\09__crc_synchronize_rcu_tasks_trace\09\09\09\09"
module asm "\09.long\09__crc_synchronize_rcu_tasks_trace\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_synchronize_rcu_tasks_trace:\09\09\09\09\09"
module asm "\09.asciz \09\22synchronize_rcu_tasks_trace\22\09\09\09\09\09"
module asm "__kstrtabns_synchronize_rcu_tasks_trace:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rcu_barrier_tasks_trace\22, \22a\22\09"
module asm "\09.weak\09__crc_rcu_barrier_tasks_trace\09\09\09\09"
module asm "\09.long\09__crc_rcu_barrier_tasks_trace\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rcu_barrier_tasks_trace:\09\09\09\09\09"
module asm "\09.asciz \09\22rcu_barrier_tasks_trace\22\09\09\09\09\09"
module asm "__kstrtabns_rcu_barrier_tasks_trace:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+show_rcu_tasks_trace_gp_kthread\22, \22a\22\09"
module asm "\09.weak\09__crc_show_rcu_tasks_trace_gp_kthread\09\09\09\09"
module asm "\09.long\09__crc_show_rcu_tasks_trace_gp_kthread\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_show_rcu_tasks_trace_gp_kthread:\09\09\09\09\09"
module asm "\09.asciz \09\22show_rcu_tasks_trace_gp_kthread\22\09\09\09\09\09"
module asm "__kstrtabns_show_rcu_tasks_trace_gp_kthread:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_event_fields = type { ptr, %union.anon.0 }
%union.anon.0 = type { %struct.anon }
%struct.anon = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.1, %struct.trace_event, ptr, ptr, %union.anon.4, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.1 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.4 = type { ptr }
%union.anon.99 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.100 = type { %struct.bpf_raw_event_map }
%union.anon.101 = type { %struct.bpf_raw_event_map }
%union.anon.102 = type { %struct.bpf_raw_event_map }
%union.anon.103 = type { %struct.bpf_raw_event_map }
%union.anon.104 = type { %struct.bpf_raw_event_map }
%union.anon.105 = type { %struct.bpf_raw_event_map }
%union.anon.106 = type { %struct.bpf_raw_event_map }
%union.anon.107 = type { %struct.bpf_raw_event_map }
%union.anon.108 = type { %struct.bpf_raw_event_map }
%union.anon.109 = type { %struct.bpf_raw_event_map }
%union.anon.110 = type { %struct.bpf_raw_event_map }
%union.anon.111 = type { %struct.bpf_raw_event_map }
%union.anon.112 = type { %struct.bpf_raw_event_map }
%union.anon.113 = type { %struct.bpf_raw_event_map }
%union.anon.114 = type { %struct.bpf_raw_event_map }
%union.anon.115 = type { %struct.bpf_raw_event_map }
%union.anon.116 = type { %struct.bpf_raw_event_map }
%union.anon.117 = type { %struct.bpf_raw_event_map }
%union.anon.118 = type { %struct.bpf_raw_event_map }
%union.anon.119 = type { %struct.bpf_raw_event_map }
%union.anon.120 = type { %struct.bpf_raw_event_map }
%union.anon.121 = type { %struct.bpf_raw_event_map }
%struct.kernel_param_ops = type { i32, ptr, ptr, ptr }
%struct.kernel_param = type { ptr, ptr, ptr, i16, i8, i8, %union.anon.74 }
%union.anon.74 = type { ptr }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.lock_class_key = type { %union.anon.3 }
%union.anon.3 = type { %struct.hlist_node }
%struct.debug_obj_descr = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.rcu_tasks_percpu = type { %struct.rcu_segcblist, %struct.raw_spinlock, i32, i32, %struct.work_struct, %struct.irq_work, %struct.callback_head, i32, ptr }
%struct.rcu_segcblist = type { ptr, [4 x ptr], [4 x i32], %struct.atomic_t, [4 x i32], i8 }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.2 }
%union.anon.2 = type { i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.irq_work = type { %struct.__call_single_node, ptr, %struct.rcuwait }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.34 }
%struct.llist_node = type { ptr }
%union.anon.34 = type { i32 }
%struct.rcuwait = type { ptr }
%struct.callback_head = type { ptr, ptr }
%struct.rcu_tasks = type { %struct.wait_queue_head, %struct.raw_spinlock, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, %struct.mutex, %struct.atomic_t, %struct.completion, i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.spinlock = type { %union.anon.5 }
%union.anon.5 = type { %struct.raw_spinlock }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.srcu_struct = type { [3 x %struct.srcu_node], [3 x ptr], %struct.mutex, %struct.spinlock, %struct.mutex, i32, i32, i32, i32, i32, ptr, i32, %struct.mutex, %struct.completion, %struct.atomic_t, %struct.delayed_work, %struct.lockdep_map }
%struct.srcu_node = type { %struct.spinlock, [4 x i32], [4 x i32], i32, ptr, i32, i32 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.srcu_data = type { [2 x i32], [2 x i32], [112 x i8], %struct.spinlock, %struct.rcu_segcblist, i32, i32, i8, %struct.timer_list, %struct.work_struct, %struct.callback_head, ptr, i32, i32, ptr, [24 x i8] }
%struct.cpumask = type { [1 x i32] }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.63, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.rb_node = type { i32, ptr, ptr }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.36 }
%union.anon.36 = type { %struct.anon.37 }
%struct.anon.37 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.kuid_t = type { i32 }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.tlbflush_unmap_batch = type {}
%union.anon.63 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.rcu_tasks_test_desc = type { %struct.callback_head, ptr, i8 }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.trace_event_raw_rcu_utilization = type { %struct.trace_entry, ptr, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.trace_event_raw_rcu_grace_period = type { %struct.trace_entry, ptr, i32, ptr, [0 x i8] }
%struct.trace_event_raw_rcu_future_grace_period = type { %struct.trace_entry, ptr, i32, i32, i8, i32, i32, ptr, [0 x i8] }
%struct.trace_event_raw_rcu_grace_period_init = type { %struct.trace_entry, ptr, i32, i8, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rcu_exp_grace_period = type { %struct.trace_entry, ptr, i32, ptr, [0 x i8] }
%struct.trace_event_raw_rcu_exp_funnel_lock = type { %struct.trace_entry, ptr, i8, i32, i32, ptr, [0 x i8] }
%struct.trace_event_raw_rcu_nocb_wake = type { %struct.trace_entry, ptr, i32, ptr, [0 x i8] }
%struct.trace_event_raw_rcu_preempt_task = type { %struct.trace_entry, ptr, i32, i32, [0 x i8] }
%struct.trace_event_raw_rcu_unlock_preempted_task = type { %struct.trace_entry, ptr, i32, i32, [0 x i8] }
%struct.trace_event_raw_rcu_quiescent_state_report = type { %struct.trace_entry, ptr, i32, i32, i32, i8, i32, i32, i8, [0 x i8] }
%struct.trace_event_raw_rcu_fqs = type { %struct.trace_entry, ptr, i32, i32, ptr, [0 x i8] }
%struct.trace_event_raw_rcu_stall_warning = type { %struct.trace_entry, ptr, ptr, [0 x i8] }
%struct.trace_event_raw_rcu_dyntick = type { %struct.trace_entry, ptr, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rcu_callback = type { %struct.trace_entry, ptr, ptr, ptr, i32, [0 x i8] }
%struct.trace_event_raw_rcu_segcb_stats = type { %struct.trace_entry, ptr, [4 x i32], [4 x i32], [0 x i8] }
%struct.trace_event_raw_rcu_kvfree_callback = type { %struct.trace_entry, ptr, ptr, i32, i32, [0 x i8] }
%struct.trace_event_raw_rcu_batch_start = type { %struct.trace_entry, ptr, i32, i32, [0 x i8] }
%struct.trace_event_raw_rcu_invoke_callback = type { %struct.trace_entry, ptr, ptr, ptr, [0 x i8] }
%struct.trace_event_raw_rcu_invoke_kvfree_callback = type { %struct.trace_entry, ptr, ptr, i32, [0 x i8] }
%struct.trace_event_raw_rcu_invoke_kfree_bulk_callback = type { %struct.trace_entry, ptr, i32, ptr, [0 x i8] }
%struct.trace_event_raw_rcu_batch_end = type { %struct.trace_entry, ptr, i32, i8, i8, i8, i8, [0 x i8] }
%struct.trace_event_raw_rcu_torture_read = type { %struct.trace_entry, [8 x i8], ptr, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_rcu_barrier = type { %struct.trace_entry, ptr, ptr, i32, i32, i32, [0 x i8] }
%struct.rcu_synchronize = type { %struct.callback_head, %struct.completion }
%struct.anon.35 = type { i8, i8, i8, i8 }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }
%struct.rcu_cblist = type { ptr, ptr, i32 }
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, ptr, %struct.sigpending, %struct.hlist_head, i32, i32, ptr, i32, i32, ptr, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x ptr], ptr, i32, ptr, ptr, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.task_io_accounting, i64, [16 x %struct.rlimit], %struct.pacct_struct, ptr, i32, ptr, i8, i16, i16, ptr, %struct.mutex, %struct.rw_semaphore }
%struct.hlist_head = type { ptr }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.atomic64_t = type { i64 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i32, i32 }
%struct.pacct_struct = type { i32, i32, i32, i64, i64, i32, i32 }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.trc_stall_chk_rdr = type { i32, i32, i8 }

@__tpstrtab_rcu_utilization = internal constant [16 x i8] c"rcu_utilization\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_utilization = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_utilization }, align 4
@__tracepoint_rcu_utilization = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_utilization, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_utilization, ptr null, ptr @__traceiter_rcu_utilization, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_utilization = internal constant ptr @__tracepoint_rcu_utilization, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_grace_period = internal constant [17 x i8] c"rcu_grace_period\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_grace_period = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_grace_period }, align 4
@__tracepoint_rcu_grace_period = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_grace_period, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_grace_period, ptr null, ptr @__traceiter_rcu_grace_period, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_grace_period = internal constant ptr @__tracepoint_rcu_grace_period, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_future_grace_period = internal constant [24 x i8] c"rcu_future_grace_period\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_future_grace_period = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_future_grace_period }, align 4
@__tracepoint_rcu_future_grace_period = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_future_grace_period, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_future_grace_period, ptr null, ptr @__traceiter_rcu_future_grace_period, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_future_grace_period = internal constant ptr @__tracepoint_rcu_future_grace_period, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_grace_period_init = internal constant [22 x i8] c"rcu_grace_period_init\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_grace_period_init = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_grace_period_init }, align 4
@__tracepoint_rcu_grace_period_init = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_grace_period_init, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_grace_period_init, ptr null, ptr @__traceiter_rcu_grace_period_init, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_grace_period_init = internal constant ptr @__tracepoint_rcu_grace_period_init, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_exp_grace_period = internal constant [21 x i8] c"rcu_exp_grace_period\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_exp_grace_period = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_exp_grace_period }, align 4
@__tracepoint_rcu_exp_grace_period = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_exp_grace_period, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_exp_grace_period, ptr null, ptr @__traceiter_rcu_exp_grace_period, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_exp_grace_period = internal constant ptr @__tracepoint_rcu_exp_grace_period, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_exp_funnel_lock = internal constant [20 x i8] c"rcu_exp_funnel_lock\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_exp_funnel_lock = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_exp_funnel_lock }, align 4
@__tracepoint_rcu_exp_funnel_lock = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_exp_funnel_lock, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_exp_funnel_lock, ptr null, ptr @__traceiter_rcu_exp_funnel_lock, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_exp_funnel_lock = internal constant ptr @__tracepoint_rcu_exp_funnel_lock, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_nocb_wake = internal constant [14 x i8] c"rcu_nocb_wake\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_nocb_wake = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_nocb_wake }, align 4
@__tracepoint_rcu_nocb_wake = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_nocb_wake, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_nocb_wake, ptr null, ptr @__traceiter_rcu_nocb_wake, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_nocb_wake = internal constant ptr @__tracepoint_rcu_nocb_wake, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_preempt_task = internal constant [17 x i8] c"rcu_preempt_task\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_preempt_task = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_preempt_task }, align 4
@__tracepoint_rcu_preempt_task = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_preempt_task, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_preempt_task, ptr null, ptr @__traceiter_rcu_preempt_task, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_preempt_task = internal constant ptr @__tracepoint_rcu_preempt_task, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_unlock_preempted_task = internal constant [26 x i8] c"rcu_unlock_preempted_task\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_unlock_preempted_task = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_unlock_preempted_task }, align 4
@__tracepoint_rcu_unlock_preempted_task = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_unlock_preempted_task, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_unlock_preempted_task, ptr null, ptr @__traceiter_rcu_unlock_preempted_task, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_unlock_preempted_task = internal constant ptr @__tracepoint_rcu_unlock_preempted_task, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_quiescent_state_report = internal constant [27 x i8] c"rcu_quiescent_state_report\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_quiescent_state_report = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_quiescent_state_report }, align 4
@__tracepoint_rcu_quiescent_state_report = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_quiescent_state_report, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_quiescent_state_report, ptr null, ptr @__traceiter_rcu_quiescent_state_report, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_quiescent_state_report = internal constant ptr @__tracepoint_rcu_quiescent_state_report, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_fqs = internal constant [8 x i8] c"rcu_fqs\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_fqs = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_fqs }, align 4
@__tracepoint_rcu_fqs = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_fqs, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_fqs, ptr null, ptr @__traceiter_rcu_fqs, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_fqs = internal constant ptr @__tracepoint_rcu_fqs, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_stall_warning = internal constant [18 x i8] c"rcu_stall_warning\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_stall_warning = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_stall_warning }, align 4
@__tracepoint_rcu_stall_warning = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_stall_warning, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_stall_warning, ptr null, ptr @__traceiter_rcu_stall_warning, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_stall_warning = internal constant ptr @__tracepoint_rcu_stall_warning, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_dyntick = internal constant [12 x i8] c"rcu_dyntick\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_dyntick = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_dyntick }, align 4
@__tracepoint_rcu_dyntick = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_dyntick, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_dyntick, ptr null, ptr @__traceiter_rcu_dyntick, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_dyntick = internal constant ptr @__tracepoint_rcu_dyntick, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_callback = internal constant [13 x i8] c"rcu_callback\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_callback = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_callback }, align 4
@__tracepoint_rcu_callback = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_callback, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_callback, ptr null, ptr @__traceiter_rcu_callback, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_callback = internal constant ptr @__tracepoint_rcu_callback, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_segcb_stats = internal constant [16 x i8] c"rcu_segcb_stats\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_segcb_stats = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_segcb_stats }, align 4
@__tracepoint_rcu_segcb_stats = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_segcb_stats, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_segcb_stats, ptr null, ptr @__traceiter_rcu_segcb_stats, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_segcb_stats = internal constant ptr @__tracepoint_rcu_segcb_stats, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_kvfree_callback = internal constant [20 x i8] c"rcu_kvfree_callback\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_kvfree_callback = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_kvfree_callback }, align 4
@__tracepoint_rcu_kvfree_callback = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_kvfree_callback, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_kvfree_callback, ptr null, ptr @__traceiter_rcu_kvfree_callback, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_kvfree_callback = internal constant ptr @__tracepoint_rcu_kvfree_callback, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_batch_start = internal constant [16 x i8] c"rcu_batch_start\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_batch_start = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_batch_start }, align 4
@__tracepoint_rcu_batch_start = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_batch_start, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_batch_start, ptr null, ptr @__traceiter_rcu_batch_start, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_batch_start = internal constant ptr @__tracepoint_rcu_batch_start, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_invoke_callback = internal constant [20 x i8] c"rcu_invoke_callback\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_invoke_callback = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_invoke_callback }, align 4
@__tracepoint_rcu_invoke_callback = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_invoke_callback, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_invoke_callback, ptr null, ptr @__traceiter_rcu_invoke_callback, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_invoke_callback = internal constant ptr @__tracepoint_rcu_invoke_callback, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_invoke_kvfree_callback = internal constant [27 x i8] c"rcu_invoke_kvfree_callback\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_invoke_kvfree_callback = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_invoke_kvfree_callback }, align 4
@__tracepoint_rcu_invoke_kvfree_callback = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_invoke_kvfree_callback, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_invoke_kvfree_callback, ptr null, ptr @__traceiter_rcu_invoke_kvfree_callback, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_invoke_kvfree_callback = internal constant ptr @__tracepoint_rcu_invoke_kvfree_callback, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_invoke_kfree_bulk_callback = internal constant [31 x i8] c"rcu_invoke_kfree_bulk_callback\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_invoke_kfree_bulk_callback = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_invoke_kfree_bulk_callback }, align 4
@__tracepoint_rcu_invoke_kfree_bulk_callback = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_invoke_kfree_bulk_callback, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_invoke_kfree_bulk_callback, ptr null, ptr @__traceiter_rcu_invoke_kfree_bulk_callback, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_invoke_kfree_bulk_callback = internal constant ptr @__tracepoint_rcu_invoke_kfree_bulk_callback, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_batch_end = internal constant [14 x i8] c"rcu_batch_end\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_batch_end = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_batch_end }, align 4
@__tracepoint_rcu_batch_end = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_batch_end, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_batch_end, ptr null, ptr @__traceiter_rcu_batch_end, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_batch_end = internal constant ptr @__tracepoint_rcu_batch_end, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_torture_read = internal constant [17 x i8] c"rcu_torture_read\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_torture_read = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_torture_read }, align 4
@__tracepoint_rcu_torture_read = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_torture_read, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_torture_read, ptr null, ptr @__traceiter_rcu_torture_read, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_torture_read = internal constant ptr @__tracepoint_rcu_torture_read, section "__tracepoints_ptrs", align 4
@__tpstrtab_rcu_barrier = internal constant [12 x i8] c"rcu_barrier\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_rcu_barrier = dso_local global %struct.static_call_key { ptr @__traceiter_rcu_barrier }, align 4
@__tracepoint_rcu_barrier = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_rcu_barrier, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_rcu_barrier, ptr null, ptr @__traceiter_rcu_barrier, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_rcu_barrier = internal constant ptr @__tracepoint_rcu_barrier, section "__tracepoints_ptrs", align 4
@str__rcu__trace_system_name = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"rcu\00", [28 x i8] zeroinitializer }, align 32
@trace_event_fields_rcu_utilization = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.32, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_rcu_utilization = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_utilization, ptr @perf_trace_rcu_utilization, ptr @trace_event_reg, ptr @trace_event_fields_rcu_utilization, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_utilization, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_utilization, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_utilization = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_utilization, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_utilization = internal global { [13 x i8], [19 x i8] } { [13 x i8] c"\22%s\22, REC->s\00", [19 x i8] zeroinitializer }, align 32
@event_rcu_utilization = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_utilization, %union.anon.1 { ptr @__tracepoint_rcu_utilization }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_utilization }, ptr @print_fmt_rcu_utilization, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_utilization = internal global ptr @event_rcu_utilization, section "_ftrace_events", align 4
@trace_event_fields_rcu_grace_period = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.0 { %struct.anon { ptr @.str.36, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rcu_grace_period = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_grace_period, ptr @perf_trace_rcu_grace_period, ptr @trace_event_reg, ptr @trace_event_fields_rcu_grace_period, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_grace_period, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_grace_period, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_grace_period = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_grace_period, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_grace_period = internal global { [53 x i8], [43 x i8] } { [53 x i8] c"\22%s %ld %s\22, REC->rcuname, REC->gp_seq, REC->gpevent\00", [43 x i8] zeroinitializer }, align 32
@event_rcu_grace_period = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_grace_period, %union.anon.1 { ptr @__tracepoint_rcu_grace_period }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_grace_period }, ptr @print_fmt_rcu_grace_period, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_grace_period = internal global ptr @event_rcu_grace_period, section "_ftrace_events", align 4
@trace_event_fields_rcu_future_grace_period = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.0 { %struct.anon { ptr @.str.36, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.0 { %struct.anon { ptr @.str.39, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.40, %union.anon.0 { %struct.anon { ptr @.str.41, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.42, %union.anon.0 { %struct.anon { ptr @.str.43, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.42, %union.anon.0 { %struct.anon { ptr @.str.44, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rcu_future_grace_period = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_future_grace_period, ptr @perf_trace_rcu_future_grace_period, ptr @trace_event_reg, ptr @trace_event_fields_rcu_future_grace_period, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_future_grace_period, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_future_grace_period, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_future_grace_period = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_future_grace_period, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_future_grace_period = internal global { [131 x i8], [61 x i8] } { [131 x i8] c"\22%s %ld %ld %u %d %d %s\22, REC->rcuname, (long)REC->gp_seq, (long)REC->gp_seq_req, REC->level, REC->grplo, REC->grphi, REC->gpevent\00", [61 x i8] zeroinitializer }, align 32
@event_rcu_future_grace_period = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_future_grace_period, %union.anon.1 { ptr @__tracepoint_rcu_future_grace_period }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_future_grace_period }, ptr @print_fmt_rcu_future_grace_period, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_future_grace_period = internal global ptr @event_rcu_future_grace_period, section "_ftrace_events", align 4
@trace_event_fields_rcu_grace_period_init = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.0 { %struct.anon { ptr @.str.36, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.40, %union.anon.0 { %struct.anon { ptr @.str.41, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.42, %union.anon.0 { %struct.anon { ptr @.str.43, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.42, %union.anon.0 { %struct.anon { ptr @.str.44, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.46, %union.anon.0 { %struct.anon { ptr @.str.47, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_rcu_grace_period_init = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_grace_period_init, ptr @perf_trace_rcu_grace_period_init, ptr @trace_event_reg, ptr @trace_event_fields_rcu_grace_period_init, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_grace_period_init, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_grace_period_init, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_grace_period_init = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_grace_period_init, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_grace_period_init = internal global { [98 x i8], [62 x i8] } { [98 x i8] c"\22%s %ld %u %d %d %lx\22, REC->rcuname, REC->gp_seq, REC->level, REC->grplo, REC->grphi, REC->qsmask\00", [62 x i8] zeroinitializer }, align 32
@event_rcu_grace_period_init = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_grace_period_init, %union.anon.1 { ptr @__tracepoint_rcu_grace_period_init }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_grace_period_init }, ptr @print_fmt_rcu_grace_period_init, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_grace_period_init = internal global ptr @event_rcu_grace_period_init, section "_ftrace_events", align 4
@trace_event_fields_rcu_exp_grace_period = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.0 { %struct.anon { ptr @.str.49, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rcu_exp_grace_period = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_exp_grace_period, ptr @perf_trace_rcu_exp_grace_period, ptr @trace_event_reg, ptr @trace_event_fields_rcu_exp_grace_period, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_exp_grace_period, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_exp_grace_period, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_exp_grace_period = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_exp_grace_period, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_exp_grace_period = internal global { [52 x i8], [44 x i8] } { [52 x i8] c"\22%s %ld %s\22, REC->rcuname, REC->gpseq, REC->gpevent\00", [44 x i8] zeroinitializer }, align 32
@event_rcu_exp_grace_period = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_exp_grace_period, %union.anon.1 { ptr @__tracepoint_rcu_exp_grace_period }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_exp_grace_period }, ptr @print_fmt_rcu_exp_grace_period, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_exp_grace_period = internal global ptr @event_rcu_exp_grace_period, section "_ftrace_events", align 4
@trace_event_fields_rcu_exp_funnel_lock = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.40, %union.anon.0 { %struct.anon { ptr @.str.41, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.42, %union.anon.0 { %struct.anon { ptr @.str.43, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.42, %union.anon.0 { %struct.anon { ptr @.str.44, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_rcu_exp_funnel_lock = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_exp_funnel_lock, ptr @perf_trace_rcu_exp_funnel_lock, ptr @trace_event_reg, ptr @trace_event_fields_rcu_exp_funnel_lock, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_exp_funnel_lock, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_exp_funnel_lock, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_exp_funnel_lock = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_exp_funnel_lock, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_exp_funnel_lock = internal global { [81 x i8], [47 x i8] } { [81 x i8] c"\22%s %d %d %d %s\22, REC->rcuname, REC->level, REC->grplo, REC->grphi, REC->gpevent\00", [47 x i8] zeroinitializer }, align 32
@event_rcu_exp_funnel_lock = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_exp_funnel_lock, %union.anon.1 { ptr @__tracepoint_rcu_exp_funnel_lock }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_exp_funnel_lock }, ptr @print_fmt_rcu_exp_funnel_lock, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_exp_funnel_lock = internal global ptr @event_rcu_exp_funnel_lock, section "_ftrace_events", align 4
@trace_event_fields_rcu_nocb_wake = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.42, %union.anon.0 { %struct.anon { ptr @.str.51, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rcu_nocb_wake = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_nocb_wake, ptr @perf_trace_rcu_nocb_wake, ptr @trace_event_reg, ptr @trace_event_fields_rcu_nocb_wake, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_nocb_wake, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_nocb_wake, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_nocb_wake = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_nocb_wake, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_nocb_wake = internal global { [48 x i8], [48 x i8] } { [48 x i8] c"\22%s %d %s\22, REC->rcuname, REC->cpu, REC->reason\00", [48 x i8] zeroinitializer }, align 32
@event_rcu_nocb_wake = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_nocb_wake, %union.anon.1 { ptr @__tracepoint_rcu_nocb_wake }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_nocb_wake }, ptr @print_fmt_rcu_nocb_wake, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_nocb_wake = internal global ptr @event_rcu_nocb_wake, section "_ftrace_events", align 4
@trace_event_fields_rcu_preempt_task = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.0 { %struct.anon { ptr @.str.36, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.42, %union.anon.0 { %struct.anon { ptr @.str.54, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rcu_preempt_task = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_preempt_task, ptr @perf_trace_rcu_preempt_task, ptr @trace_event_reg, ptr @trace_event_fields_rcu_preempt_task, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_preempt_task, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_preempt_task, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_preempt_task = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_preempt_task, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_preempt_task = internal global { [49 x i8], [47 x i8] } { [49 x i8] c"\22%s %ld %d\22, REC->rcuname, REC->gp_seq, REC->pid\00", [47 x i8] zeroinitializer }, align 32
@event_rcu_preempt_task = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_preempt_task, %union.anon.1 { ptr @__tracepoint_rcu_preempt_task }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_preempt_task }, ptr @print_fmt_rcu_preempt_task, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_preempt_task = internal global ptr @event_rcu_preempt_task, section "_ftrace_events", align 4
@trace_event_fields_rcu_unlock_preempted_task = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.0 { %struct.anon { ptr @.str.36, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.42, %union.anon.0 { %struct.anon { ptr @.str.54, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rcu_unlock_preempted_task = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_unlock_preempted_task, ptr @perf_trace_rcu_unlock_preempted_task, ptr @trace_event_reg, ptr @trace_event_fields_rcu_unlock_preempted_task, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_unlock_preempted_task, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_unlock_preempted_task, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_unlock_preempted_task = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_unlock_preempted_task, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_unlock_preempted_task = internal global { [49 x i8], [47 x i8] } { [49 x i8] c"\22%s %ld %d\22, REC->rcuname, REC->gp_seq, REC->pid\00", [47 x i8] zeroinitializer }, align 32
@event_rcu_unlock_preempted_task = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_unlock_preempted_task, %union.anon.1 { ptr @__tracepoint_rcu_unlock_preempted_task }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_unlock_preempted_task }, ptr @print_fmt_rcu_unlock_preempted_task, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_unlock_preempted_task = internal global ptr @event_rcu_unlock_preempted_task, section "_ftrace_events", align 4
@trace_event_fields_rcu_quiescent_state_report = internal global { [9 x %struct.trace_event_fields], [40 x i8] } { [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.0 { %struct.anon { ptr @.str.36, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.46, %union.anon.0 { %struct.anon { ptr @.str.56, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.46, %union.anon.0 { %struct.anon { ptr @.str.47, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.40, %union.anon.0 { %struct.anon { ptr @.str.41, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.42, %union.anon.0 { %struct.anon { ptr @.str.43, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.42, %union.anon.0 { %struct.anon { ptr @.str.44, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.40, %union.anon.0 { %struct.anon { ptr @.str.57, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rcu_quiescent_state_report = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_quiescent_state_report, ptr @perf_trace_rcu_quiescent_state_report, ptr @trace_event_reg, ptr @trace_event_fields_rcu_quiescent_state_report, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_quiescent_state_report, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_quiescent_state_report, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_quiescent_state_report = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_quiescent_state_report, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_quiescent_state_report = internal global { [131 x i8], [61 x i8] } { [131 x i8] c"\22%s %ld %lx>%lx %u %d %d %u\22, REC->rcuname, REC->gp_seq, REC->mask, REC->qsmask, REC->level, REC->grplo, REC->grphi, REC->gp_tasks\00", [61 x i8] zeroinitializer }, align 32
@event_rcu_quiescent_state_report = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_quiescent_state_report, %union.anon.1 { ptr @__tracepoint_rcu_quiescent_state_report }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_quiescent_state_report }, ptr @print_fmt_rcu_quiescent_state_report, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_quiescent_state_report = internal global ptr @event_rcu_quiescent_state_report, section "_ftrace_events", align 4
@trace_event_fields_rcu_fqs = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.0 { %struct.anon { ptr @.str.36, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.42, %union.anon.0 { %struct.anon { ptr @.str.51, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.59, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rcu_fqs = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_fqs, ptr @perf_trace_rcu_fqs, ptr @trace_event_reg, ptr @trace_event_fields_rcu_fqs, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_fqs, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_fqs, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_fqs = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_fqs, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_fqs = internal global { [66 x i8], [62 x i8] } { [66 x i8] c"\22%s %ld %d %s\22, REC->rcuname, REC->gp_seq, REC->cpu, REC->qsevent\00", [62 x i8] zeroinitializer }, align 32
@event_rcu_fqs = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_fqs, %union.anon.1 { ptr @__tracepoint_rcu_fqs }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_fqs }, ptr @print_fmt_rcu_fqs, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_fqs = internal global ptr @event_rcu_fqs, section "_ftrace_events", align 4
@trace_event_fields_rcu_stall_warning = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.61, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_rcu_stall_warning = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_stall_warning, ptr @perf_trace_rcu_stall_warning, ptr @trace_event_reg, ptr @trace_event_fields_rcu_stall_warning, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_stall_warning, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_stall_warning, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_stall_warning = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_stall_warning, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_stall_warning = internal global { [32 x i8], [32 x i8] } { [32 x i8] c"\22%s %s\22, REC->rcuname, REC->msg\00", [32 x i8] zeroinitializer }, align 32
@event_rcu_stall_warning = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_stall_warning, %union.anon.1 { ptr @__tracepoint_rcu_stall_warning }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_stall_warning }, ptr @print_fmt_rcu_stall_warning, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_stall_warning = internal global ptr @event_rcu_stall_warning, section "_ftrace_events", align 4
@trace_event_fields_rcu_dyntick = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.63, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.0 { %struct.anon { ptr @.str.64, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.0 { %struct.anon { ptr @.str.65, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.42, %union.anon.0 { %struct.anon { ptr @.str.66, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rcu_dyntick = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_dyntick, ptr @perf_trace_rcu_dyntick, ptr @trace_event_reg, ptr @trace_event_fields_rcu_dyntick, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_dyntick, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_dyntick, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_dyntick = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_dyntick, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_dyntick = internal global { [90 x i8], [38 x i8] } { [90 x i8] c"\22%s %lx %lx %#3x\22, REC->polarity, REC->oldnesting, REC->newnesting, REC->dynticks & 0xfff\00", [38 x i8] zeroinitializer }, align 32
@event_rcu_dyntick = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_dyntick, %union.anon.1 { ptr @__tracepoint_rcu_dyntick }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_dyntick }, ptr @print_fmt_rcu_dyntick, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_dyntick = internal global ptr @event_rcu_dyntick, section "_ftrace_events", align 4
@trace_event_fields_rcu_callback = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.68, %union.anon.0 { %struct.anon { ptr @.str.69, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.68, %union.anon.0 { %struct.anon { ptr @.str.70, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.0 { %struct.anon { ptr @.str.71, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rcu_callback = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_callback, ptr @perf_trace_rcu_callback, ptr @trace_event_reg, ptr @trace_event_fields_rcu_callback, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_callback, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_callback, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_callback = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_callback, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_callback = internal global { [71 x i8], [57 x i8] } { [71 x i8] c"\22%s rhp=%p func=%ps %ld\22, REC->rcuname, REC->rhp, REC->func, REC->qlen\00", [57 x i8] zeroinitializer }, align 32
@event_rcu_callback = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_callback, %union.anon.1 { ptr @__tracepoint_rcu_callback }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_callback }, ptr @print_fmt_rcu_callback, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_callback = internal global ptr @event_rcu_callback, section "_ftrace_events", align 4
@trace_event_fields_rcu_segcb_stats = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.73, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.74, %union.anon.0 { %struct.anon { ptr @.str.36, i32 16, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.75, %union.anon.0 { %struct.anon { ptr @.str.76, i32 16, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rcu_segcb_stats = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_segcb_stats, ptr @perf_trace_rcu_segcb_stats, ptr @trace_event_reg, ptr @trace_event_fields_rcu_segcb_stats, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_segcb_stats, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_segcb_stats, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_segcb_stats = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_segcb_stats, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_segcb_stats = internal global { [253 x i8], [35 x i8] } { [253 x i8] c"\22%s seglen: (DONE=%ld, WAIT=%ld, NEXT_READY=%ld, NEXT=%ld) gp_seq: (DONE=%lu, WAIT=%lu, NEXT_READY=%lu, NEXT=%lu)\22, REC->ctx, REC->seglen[0], REC->seglen[1], REC->seglen[2], REC->seglen[3], REC->gp_seq[0], REC->gp_seq[1], REC->gp_seq[2], REC->gp_seq[3]\00", [35 x i8] zeroinitializer }, align 32
@event_rcu_segcb_stats = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_segcb_stats, %union.anon.1 { ptr @__tracepoint_rcu_segcb_stats }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_segcb_stats }, ptr @print_fmt_rcu_segcb_stats, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_segcb_stats = internal global ptr @event_rcu_segcb_stats, section "_ftrace_events", align 4
@trace_event_fields_rcu_kvfree_callback = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.68, %union.anon.0 { %struct.anon { ptr @.str.69, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.46, %union.anon.0 { %struct.anon { ptr @.str.78, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.0 { %struct.anon { ptr @.str.71, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_rcu_kvfree_callback = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_kvfree_callback, ptr @perf_trace_rcu_kvfree_callback, ptr @trace_event_reg, ptr @trace_event_fields_rcu_kvfree_callback, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_kvfree_callback, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_kvfree_callback, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_kvfree_callback = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_kvfree_callback, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_kvfree_callback = internal global { [73 x i8], [55 x i8] } { [73 x i8] c"\22%s rhp=%p func=%ld %ld\22, REC->rcuname, REC->rhp, REC->offset, REC->qlen\00", [55 x i8] zeroinitializer }, align 32
@event_rcu_kvfree_callback = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_kvfree_callback, %union.anon.1 { ptr @__tracepoint_rcu_kvfree_callback }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_kvfree_callback }, ptr @print_fmt_rcu_kvfree_callback, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_kvfree_callback = internal global ptr @event_rcu_kvfree_callback, section "_ftrace_events", align 4
@trace_event_fields_rcu_batch_start = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.0 { %struct.anon { ptr @.str.71, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.0 { %struct.anon { ptr @.str.80, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rcu_batch_start = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_batch_start, ptr @perf_trace_rcu_batch_start, ptr @trace_event_reg, ptr @trace_event_fields_rcu_batch_start, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_batch_start, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_batch_start, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_batch_start = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_batch_start, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_batch_start = internal global { [58 x i8], [38 x i8] } { [58 x i8] c"\22%s CBs=%ld bl=%ld\22, REC->rcuname, REC->qlen, REC->blimit\00", [38 x i8] zeroinitializer }, align 32
@event_rcu_batch_start = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_batch_start, %union.anon.1 { ptr @__tracepoint_rcu_batch_start }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_batch_start }, ptr @print_fmt_rcu_batch_start, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_batch_start = internal global ptr @event_rcu_batch_start, section "_ftrace_events", align 4
@trace_event_fields_rcu_invoke_callback = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.68, %union.anon.0 { %struct.anon { ptr @.str.69, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.68, %union.anon.0 { %struct.anon { ptr @.str.70, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rcu_invoke_callback = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_invoke_callback, ptr @perf_trace_rcu_invoke_callback, ptr @trace_event_reg, ptr @trace_event_fields_rcu_invoke_callback, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_invoke_callback, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_invoke_callback, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_invoke_callback = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_invoke_callback, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_invoke_callback = internal global { [56 x i8], [40 x i8] } { [56 x i8] c"\22%s rhp=%p func=%ps\22, REC->rcuname, REC->rhp, REC->func\00", [40 x i8] zeroinitializer }, align 32
@event_rcu_invoke_callback = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_invoke_callback, %union.anon.1 { ptr @__tracepoint_rcu_invoke_callback }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_invoke_callback }, ptr @print_fmt_rcu_invoke_callback, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_invoke_callback = internal global ptr @event_rcu_invoke_callback, section "_ftrace_events", align 4
@trace_event_fields_rcu_invoke_kvfree_callback = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.68, %union.anon.0 { %struct.anon { ptr @.str.69, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.46, %union.anon.0 { %struct.anon { ptr @.str.78, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rcu_invoke_kvfree_callback = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_invoke_kvfree_callback, ptr @perf_trace_rcu_invoke_kvfree_callback, ptr @trace_event_reg, ptr @trace_event_fields_rcu_invoke_kvfree_callback, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_invoke_kvfree_callback, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_invoke_kvfree_callback, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_invoke_kvfree_callback = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_invoke_kvfree_callback, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_invoke_kvfree_callback = internal global { [58 x i8], [38 x i8] } { [58 x i8] c"\22%s rhp=%p func=%ld\22, REC->rcuname, REC->rhp, REC->offset\00", [38 x i8] zeroinitializer }, align 32
@event_rcu_invoke_kvfree_callback = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_invoke_kvfree_callback, %union.anon.1 { ptr @__tracepoint_rcu_invoke_kvfree_callback }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_invoke_kvfree_callback }, ptr @print_fmt_rcu_invoke_kvfree_callback, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_invoke_kvfree_callback = internal global ptr @event_rcu_invoke_kvfree_callback, section "_ftrace_events", align 4
@trace_event_fields_rcu_invoke_kfree_bulk_callback = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.46, %union.anon.0 { %struct.anon { ptr @.str.84, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.85, %union.anon.0 { %struct.anon { ptr @.str.86, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_rcu_invoke_kfree_bulk_callback = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_invoke_kfree_bulk_callback, ptr @perf_trace_rcu_invoke_kfree_bulk_callback, ptr @trace_event_reg, ptr @trace_event_fields_rcu_invoke_kfree_bulk_callback, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_invoke_kfree_bulk_callback, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_invoke_kfree_bulk_callback, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_invoke_kfree_bulk_callback = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_invoke_kfree_bulk_callback, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_invoke_kfree_bulk_callback = internal global { [69 x i8], [59 x i8] } { [69 x i8] c"\22%s bulk=0x%p nr_records=%lu\22, REC->rcuname, REC->p, REC->nr_records\00", [59 x i8] zeroinitializer }, align 32
@event_rcu_invoke_kfree_bulk_callback = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_invoke_kfree_bulk_callback, %union.anon.1 { ptr @__tracepoint_rcu_invoke_kfree_bulk_callback }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_invoke_kfree_bulk_callback }, ptr @print_fmt_rcu_invoke_kfree_bulk_callback, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_invoke_kfree_bulk_callback = internal global ptr @event_rcu_invoke_kfree_bulk_callback, section "_ftrace_events", align 4
@trace_event_fields_rcu_batch_end = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.42, %union.anon.0 { %struct.anon { ptr @.str.88, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.89, %union.anon.0 { %struct.anon { ptr @.str.90, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.89, %union.anon.0 { %struct.anon { ptr @.str.91, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.89, %union.anon.0 { %struct.anon { ptr @.str.92, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.89, %union.anon.0 { %struct.anon { ptr @.str.93, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_rcu_batch_end = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_batch_end, ptr @perf_trace_rcu_batch_end, ptr @trace_event_reg, ptr @trace_event_fields_rcu_batch_end, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_batch_end, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_batch_end, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_batch_end = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_batch_end, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_batch_end = internal global { [159 x i8], [33 x i8] } { [159 x i8] c"\22%s CBs-invoked=%d idle=%c%c%c%c\22, REC->rcuname, REC->callbacks_invoked, REC->cb ? 'C' : '.', REC->nr ? 'S' : '.', REC->iit ? 'I' : '.', REC->risk ? 'R' : '.'\00", [33 x i8] zeroinitializer }, align 32
@event_rcu_batch_end = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_batch_end, %union.anon.1 { ptr @__tracepoint_rcu_batch_end }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_batch_end }, ptr @print_fmt_rcu_batch_end, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_batch_end = internal global ptr @event_rcu_batch_end, section "_ftrace_events", align 4
@trace_event_fields_rcu_torture_read = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.89, %union.anon.0 { %struct.anon { ptr @.str.95, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.0 { %struct.anon { ptr @.str.69, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.46, %union.anon.0 { %struct.anon { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.46, %union.anon.0 { %struct.anon { ptr @.str.98, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.46, %union.anon.0 { %struct.anon { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_rcu_torture_read = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_torture_read, ptr @perf_trace_rcu_torture_read, ptr @trace_event_reg, ptr @trace_event_fields_rcu_torture_read, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_torture_read, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_torture_read, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_torture_read = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_torture_read, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_torture_read = internal global { [100 x i8], [60 x i8] } { [100 x i8] c"\22%s torture read %p %luus c: %lu %lu\22, REC->rcutorturename, REC->rhp, REC->secs, REC->c_old, REC->c\00", [60 x i8] zeroinitializer }, align 32
@event_rcu_torture_read = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_torture_read, %union.anon.1 { ptr @__tracepoint_rcu_torture_read }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_torture_read }, ptr @print_fmt_rcu_torture_read, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_torture_read = internal global ptr @event_rcu_torture_read, section "_ftrace_events", align 4
@trace_event_fields_rcu_barrier = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.31, %union.anon.0 { %struct.anon { ptr @.str.32, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.42, %union.anon.0 { %struct.anon { ptr @.str.51, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.42, %union.anon.0 { %struct.anon { ptr @.str.101, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.46, %union.anon.0 { %struct.anon { ptr @.str.102, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_rcu_barrier = internal global %struct.trace_event_class { ptr @str__rcu__trace_system_name, ptr @trace_event_raw_event_rcu_barrier, ptr @perf_trace_rcu_barrier, ptr @trace_event_reg, ptr @trace_event_fields_rcu_barrier, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_rcu_barrier, i64 24), ptr getelementptr (i8, ptr @event_class_rcu_barrier, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_rcu_barrier = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_rcu_barrier, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_rcu_barrier = internal global { [87 x i8], [41 x i8] } { [87 x i8] c"\22%s %s cpu %d remaining %d # %lu\22, REC->rcuname, REC->s, REC->cpu, REC->cnt, REC->done\00", [41 x i8] zeroinitializer }, align 32
@event_rcu_barrier = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_rcu_barrier, %union.anon.1 { ptr @__tracepoint_rcu_barrier }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_rcu_barrier }, ptr @print_fmt_rcu_barrier, ptr null, %union.anon.4 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_rcu_barrier = internal global ptr @event_rcu_barrier, section "_ftrace_events", align 4
@__bpf_trace_tp_map_rcu_utilization = internal global %union.anon.99 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_utilization, ptr @__bpf_trace_rcu_utilization, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_grace_period = internal global %union.anon.100 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_grace_period, ptr @__bpf_trace_rcu_grace_period, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_future_grace_period = internal global %union.anon.101 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_future_grace_period, ptr @__bpf_trace_rcu_future_grace_period, i32 7, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_grace_period_init = internal global %union.anon.102 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_grace_period_init, ptr @__bpf_trace_rcu_grace_period_init, i32 6, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_exp_grace_period = internal global %union.anon.103 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_exp_grace_period, ptr @__bpf_trace_rcu_exp_grace_period, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_exp_funnel_lock = internal global %union.anon.104 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_exp_funnel_lock, ptr @__bpf_trace_rcu_exp_funnel_lock, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_nocb_wake = internal global %union.anon.105 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_nocb_wake, ptr @__bpf_trace_rcu_nocb_wake, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_preempt_task = internal global %union.anon.106 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_preempt_task, ptr @__bpf_trace_rcu_preempt_task, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_unlock_preempted_task = internal global %union.anon.107 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_unlock_preempted_task, ptr @__bpf_trace_rcu_unlock_preempted_task, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_quiescent_state_report = internal global %union.anon.108 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_quiescent_state_report, ptr @__bpf_trace_rcu_quiescent_state_report, i32 8, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_fqs = internal global %union.anon.109 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_fqs, ptr @__bpf_trace_rcu_fqs, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_stall_warning = internal global %union.anon.110 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_stall_warning, ptr @__bpf_trace_rcu_stall_warning, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_dyntick = internal global %union.anon.111 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_dyntick, ptr @__bpf_trace_rcu_dyntick, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_callback = internal global %union.anon.112 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_callback, ptr @__bpf_trace_rcu_callback, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_segcb_stats = internal global %union.anon.113 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_segcb_stats, ptr @__bpf_trace_rcu_segcb_stats, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_kvfree_callback = internal global %union.anon.114 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_kvfree_callback, ptr @__bpf_trace_rcu_kvfree_callback, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_batch_start = internal global %union.anon.115 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_batch_start, ptr @__bpf_trace_rcu_batch_start, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_invoke_callback = internal global %union.anon.116 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_invoke_callback, ptr @__bpf_trace_rcu_invoke_callback, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_invoke_kvfree_callback = internal global %union.anon.117 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_invoke_kvfree_callback, ptr @__bpf_trace_rcu_invoke_kvfree_callback, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_invoke_kfree_bulk_callback = internal global %union.anon.118 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_invoke_kfree_bulk_callback, ptr @__bpf_trace_rcu_invoke_kfree_bulk_callback, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_batch_end = internal global %union.anon.119 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_batch_end, ptr @__bpf_trace_rcu_batch_end, i32 6, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_torture_read = internal global %union.anon.120 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_torture_read, ptr @__bpf_trace_rcu_torture_read, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_rcu_barrier = internal global %union.anon.121 { %struct.bpf_raw_event_map { ptr @__tracepoint_rcu_barrier, ptr @__bpf_trace_rcu_barrier, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__param_str_rcu_expedited = internal constant [23 x i8] c"rcupdate.rcu_expedited\00", align 1
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 4
@rcu_expedited = external dso_local global i32, align 4
@__param_rcu_expedited = internal constant %struct.kernel_param { ptr @__param_str_rcu_expedited, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.74 { ptr @rcu_expedited } }, section "__param", align 4
@__UNIQUE_ID_rcu_expeditedtype389 = internal constant [34 x i8] c"update.parmtype=rcu_expedited:int\00", section ".modinfo", align 1
@__param_str_rcu_normal = internal constant [20 x i8] c"rcupdate.rcu_normal\00", align 1
@rcu_normal = external dso_local global i32, align 4
@__param_rcu_normal = internal constant %struct.kernel_param { ptr @__param_str_rcu_normal, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.74 { ptr @rcu_normal } }, section "__param", align 4
@__UNIQUE_ID_rcu_normaltype390 = internal constant [31 x i8] c"update.parmtype=rcu_normal:int\00", section ".modinfo", align 1
@__param_str_rcu_normal_after_boot = internal constant [31 x i8] c"rcupdate.rcu_normal_after_boot\00", align 1
@rcu_normal_after_boot = internal global { i32, [28 x i8] } zeroinitializer, align 32
@__param_rcu_normal_after_boot = internal constant %struct.kernel_param { ptr @__param_str_rcu_normal_after_boot, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.74 { ptr @rcu_normal_after_boot } }, section "__param", align 4
@__UNIQUE_ID_rcu_normal_after_boottype391 = internal constant [42 x i8] c"update.parmtype=rcu_normal_after_boot:int\00", section ".modinfo", align 1
@rcu_sched_lock_map = dso_local global { %struct.lockdep_map, [36 x i8] } { %struct.lockdep_map { ptr @rcu_sched_lock_key, [2 x ptr] zeroinitializer, ptr @.str.2, i8 1, i8 2, i8 0, i32 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@__kstrtab_rcu_read_lock_sched_held = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_read_lock_sched_held = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_read_lock_sched_held = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_read_lock_sched_held to i32), ptr @__kstrtab_rcu_read_lock_sched_held, ptr @__kstrtabns_rcu_read_lock_sched_held }, section "___ksymtab+rcu_read_lock_sched_held", align 4
@rcu_scheduler_active = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@__kstrtab_rcu_gp_is_normal = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_gp_is_normal = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_gp_is_normal = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_gp_is_normal to i32), ptr @__kstrtab_rcu_gp_is_normal, ptr @__kstrtabns_rcu_gp_is_normal }, section "___ksymtab_gpl+rcu_gp_is_normal", align 4
@rcu_expedited_nesting = internal global { %struct.atomic_t, [28 x i8] } { %struct.atomic_t { i32 1 }, [28 x i8] zeroinitializer }, align 32
@__kstrtab_rcu_gp_is_expedited = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_gp_is_expedited = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_gp_is_expedited = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_gp_is_expedited to i32), ptr @__kstrtab_rcu_gp_is_expedited, ptr @__kstrtabns_rcu_gp_is_expedited }, section "___ksymtab_gpl+rcu_gp_is_expedited", align 4
@__kstrtab_rcu_expedite_gp = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_expedite_gp = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_expedite_gp = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_expedite_gp to i32), ptr @__kstrtab_rcu_expedite_gp, ptr @__kstrtabns_rcu_expedite_gp }, section "___ksymtab_gpl+rcu_expedite_gp", align 4
@__kstrtab_rcu_unexpedite_gp = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_unexpedite_gp = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_unexpedite_gp = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_unexpedite_gp to i32), ptr @__kstrtab_rcu_unexpedite_gp, ptr @__kstrtabns_rcu_unexpedite_gp }, section "___ksymtab_gpl+rcu_unexpedite_gp", align 4
@rcu_boot_ended = internal unnamed_addr global i1 false, section ".data..read_mostly", align 1
@__kstrtab_rcu_inkernel_boot_has_ended = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_inkernel_boot_has_ended = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_inkernel_boot_has_ended = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_inkernel_boot_has_ended to i32), ptr @__kstrtab_rcu_inkernel_boot_has_ended, ptr @__kstrtabns_rcu_inkernel_boot_has_ended }, section "___ksymtab_gpl+rcu_inkernel_boot_has_ended", align 4
@__initcall__kmod_update__394_240_rcu_set_runtime_mode1 = internal global ptr @rcu_set_runtime_mode, section ".initcall1.init", align 4
@rcu_lock_key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"rcu_read_lock\00", [18 x i8] zeroinitializer }, align 32
@rcu_lock_map = dso_local global { %struct.lockdep_map, [36 x i8] } { %struct.lockdep_map { ptr @rcu_lock_key, [2 x ptr] zeroinitializer, ptr @.str, i8 1, i8 3, i8 0, i32 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@__kstrtab_rcu_lock_map = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_lock_map = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_lock_map = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_lock_map to i32), ptr @__kstrtab_rcu_lock_map, ptr @__kstrtabns_rcu_lock_map }, section "___ksymtab_gpl+rcu_lock_map", align 4
@rcu_bh_lock_key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.1 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"rcu_read_lock_bh\00", [47 x i8] zeroinitializer }, align 32
@rcu_bh_lock_map = dso_local global { %struct.lockdep_map, [36 x i8] } { %struct.lockdep_map { ptr @rcu_bh_lock_key, [2 x ptr] zeroinitializer, ptr @.str.1, i8 1, i8 3, i8 0, i32 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@__kstrtab_rcu_bh_lock_map = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_bh_lock_map = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_bh_lock_map = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_bh_lock_map to i32), ptr @__kstrtab_rcu_bh_lock_map, ptr @__kstrtabns_rcu_bh_lock_map }, section "___ksymtab_gpl+rcu_bh_lock_map", align 4
@rcu_sched_lock_key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.2 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rcu_read_lock_sched\00", [44 x i8] zeroinitializer }, align 32
@__kstrtab_rcu_sched_lock_map = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_sched_lock_map = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_sched_lock_map = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_sched_lock_map to i32), ptr @__kstrtab_rcu_sched_lock_map, ptr @__kstrtabns_rcu_sched_lock_map }, section "___ksymtab_gpl+rcu_sched_lock_map", align 4
@rcu_callback_key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.3 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"rcu_callback\00", [19 x i8] zeroinitializer }, align 32
@rcu_callback_map = dso_local global { %struct.lockdep_map, [36 x i8] } { %struct.lockdep_map { ptr @rcu_callback_key, [2 x ptr] zeroinitializer, ptr @.str.3, i8 0, i8 0, i8 0, i32 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@__kstrtab_rcu_callback_map = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_callback_map = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_callback_map = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_callback_map to i32), ptr @__kstrtab_rcu_callback_map, ptr @__kstrtabns_rcu_callback_map }, section "___ksymtab_gpl+rcu_callback_map", align 4
@debug_locks = external dso_local global i32, section ".data..read_mostly", align 4
@__kstrtab_debug_lockdep_rcu_enabled = external dso_local constant [0 x i8], align 1
@__kstrtabns_debug_lockdep_rcu_enabled = external dso_local constant [0 x i8], align 1
@__ksymtab_debug_lockdep_rcu_enabled = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @debug_lockdep_rcu_enabled to i32), ptr @__kstrtab_debug_lockdep_rcu_enabled, ptr @__kstrtabns_debug_lockdep_rcu_enabled }, section "___ksymtab_gpl+debug_lockdep_rcu_enabled", align 4
@__kstrtab_rcu_read_lock_held = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_read_lock_held = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_read_lock_held = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_read_lock_held to i32), ptr @__kstrtab_rcu_read_lock_held, ptr @__kstrtabns_rcu_read_lock_held }, section "___ksymtab_gpl+rcu_read_lock_held", align 4
@__kstrtab_rcu_read_lock_bh_held = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_read_lock_bh_held = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_read_lock_bh_held = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_read_lock_bh_held to i32), ptr @__kstrtab_rcu_read_lock_bh_held, ptr @__kstrtabns_rcu_read_lock_bh_held }, section "___ksymtab_gpl+rcu_read_lock_bh_held", align 4
@__kstrtab_rcu_read_lock_any_held = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_read_lock_any_held = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_read_lock_any_held = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_read_lock_any_held to i32), ptr @__kstrtab_rcu_read_lock_any_held, ptr @__kstrtabns_rcu_read_lock_any_held }, section "___ksymtab_gpl+rcu_read_lock_any_held", align 4
@__kstrtab_wakeme_after_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_wakeme_after_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_wakeme_after_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @wakeme_after_rcu to i32), ptr @__kstrtab_wakeme_after_rcu, ptr @__kstrtabns_wakeme_after_rcu }, section "___ksymtab_gpl+wakeme_after_rcu", align 4
@.str.4 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"kernel/rcu/update.c\00", [44 x i8] zeroinitializer }, align 32
@__kstrtab___wait_rcu_gp = external dso_local constant [0 x i8], align 1
@__kstrtabns___wait_rcu_gp = external dso_local constant [0 x i8], align 1
@__ksymtab___wait_rcu_gp = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__wait_rcu_gp to i32), ptr @__kstrtab___wait_rcu_gp, ptr @__kstrtabns___wait_rcu_gp }, section "___ksymtab_gpl+__wait_rcu_gp", align 4
@rcuhead_debug_descr = dso_local constant { %struct.debug_obj_descr, [32 x i8] } { %struct.debug_obj_descr { ptr @.str.5, ptr null, ptr @rcuhead_is_static_object, ptr null, ptr null, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@__kstrtab_init_rcu_head = external dso_local constant [0 x i8], align 1
@__kstrtabns_init_rcu_head = external dso_local constant [0 x i8], align 1
@__ksymtab_init_rcu_head = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @init_rcu_head to i32), ptr @__kstrtab_init_rcu_head, ptr @__kstrtabns_init_rcu_head }, section "___ksymtab_gpl+init_rcu_head", align 4
@__kstrtab_destroy_rcu_head = external dso_local constant [0 x i8], align 1
@__kstrtabns_destroy_rcu_head = external dso_local constant [0 x i8], align 1
@__ksymtab_destroy_rcu_head = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @destroy_rcu_head to i32), ptr @__kstrtab_destroy_rcu_head, ptr @__kstrtabns_destroy_rcu_head }, section "___ksymtab_gpl+destroy_rcu_head", align 4
@__kstrtab_init_rcu_head_on_stack = external dso_local constant [0 x i8], align 1
@__kstrtabns_init_rcu_head_on_stack = external dso_local constant [0 x i8], align 1
@__ksymtab_init_rcu_head_on_stack = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @init_rcu_head_on_stack to i32), ptr @__kstrtab_init_rcu_head_on_stack, ptr @__kstrtabns_init_rcu_head_on_stack }, section "___ksymtab_gpl+init_rcu_head_on_stack", align 4
@__kstrtab_destroy_rcu_head_on_stack = external dso_local constant [0 x i8], align 1
@__kstrtabns_destroy_rcu_head_on_stack = external dso_local constant [0 x i8], align 1
@__ksymtab_destroy_rcu_head_on_stack = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @destroy_rcu_head_on_stack to i32), ptr @__kstrtab_destroy_rcu_head_on_stack, ptr @__kstrtabns_destroy_rcu_head_on_stack }, section "___ksymtab_gpl+destroy_rcu_head_on_stack", align 4
@.str.5 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"rcu_head\00", [23 x i8] zeroinitializer }, align 32
@__kstrtab_rcuhead_debug_descr = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcuhead_debug_descr = external dso_local constant [0 x i8], align 1
@__ksymtab_rcuhead_debug_descr = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcuhead_debug_descr to i32), ptr @__kstrtab_rcuhead_debug_descr, ptr @__kstrtabns_rcuhead_debug_descr }, section "___ksymtab_gpl+rcuhead_debug_descr", align 4
@__kstrtab_do_trace_rcu_torture_read = external dso_local constant [0 x i8], align 1
@__kstrtabns_do_trace_rcu_torture_read = external dso_local constant [0 x i8], align 1
@__ksymtab_do_trace_rcu_torture_read = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @do_trace_rcu_torture_read to i32), ptr @__kstrtab_do_trace_rcu_torture_read, ptr @__kstrtabns_do_trace_rcu_torture_read }, section "___ksymtab_gpl+do_trace_rcu_torture_read", align 4
@rcutorture_sched_setaffinity.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.6 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"%s: sched_setaffinity() returned %d\0A\00", [59 x i8] zeroinitializer }, align 32
@__func__.rcutorture_sched_setaffinity = private unnamed_addr constant [29 x i8] c"rcutorture_sched_setaffinity\00", align 1
@__kstrtab_rcutorture_sched_setaffinity = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcutorture_sched_setaffinity = external dso_local constant [0 x i8], align 1
@__ksymtab_rcutorture_sched_setaffinity = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcutorture_sched_setaffinity to i32), ptr @__kstrtab_rcutorture_sched_setaffinity, ptr @__kstrtabns_rcutorture_sched_setaffinity }, section "___ksymtab_gpl+rcutorture_sched_setaffinity", align 4
@__param_str_rcu_cpu_stall_ftrace_dump = internal constant [35 x i8] c"rcupdate.rcu_cpu_stall_ftrace_dump\00", align 1
@rcu_cpu_stall_ftrace_dump = dso_local global i32 0, section ".data..read_mostly", align 4
@__param_rcu_cpu_stall_ftrace_dump = internal constant %struct.kernel_param { ptr @__param_str_rcu_cpu_stall_ftrace_dump, ptr null, ptr @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.74 { ptr @rcu_cpu_stall_ftrace_dump } }, section "__param", align 4
@__UNIQUE_ID_rcu_cpu_stall_ftrace_dumptype396 = internal constant [46 x i8] c"update.parmtype=rcu_cpu_stall_ftrace_dump:int\00", section ".modinfo", align 1
@rcu_cpu_stall_suppress = dso_local global i32 0, section ".data..read_mostly", align 4
@__kstrtab_rcu_cpu_stall_suppress = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_cpu_stall_suppress = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_cpu_stall_suppress = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_cpu_stall_suppress to i32), ptr @__kstrtab_rcu_cpu_stall_suppress, ptr @__kstrtabns_rcu_cpu_stall_suppress }, section "___ksymtab_gpl+rcu_cpu_stall_suppress", align 4
@__param_str_rcu_cpu_stall_suppress = internal constant [32 x i8] c"rcupdate.rcu_cpu_stall_suppress\00", align 1
@__param_rcu_cpu_stall_suppress = internal constant %struct.kernel_param { ptr @__param_str_rcu_cpu_stall_suppress, ptr null, ptr @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.74 { ptr @rcu_cpu_stall_suppress } }, section "__param", align 4
@__UNIQUE_ID_rcu_cpu_stall_suppresstype397 = internal constant [43 x i8] c"update.parmtype=rcu_cpu_stall_suppress:int\00", section ".modinfo", align 1
@rcu_cpu_stall_timeout = dso_local global i32 21, section ".data..read_mostly", align 4
@__param_str_rcu_cpu_stall_timeout = internal constant [31 x i8] c"rcupdate.rcu_cpu_stall_timeout\00", align 1
@__param_rcu_cpu_stall_timeout = internal constant %struct.kernel_param { ptr @__param_str_rcu_cpu_stall_timeout, ptr null, ptr @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.74 { ptr @rcu_cpu_stall_timeout } }, section "__param", align 4
@__UNIQUE_ID_rcu_cpu_stall_timeouttype398 = internal constant [42 x i8] c"update.parmtype=rcu_cpu_stall_timeout:int\00", section ".modinfo", align 1
@rcu_cpu_stall_suppress_at_boot = dso_local global i32 0, section ".data..read_mostly", align 4
@__kstrtab_rcu_cpu_stall_suppress_at_boot = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_cpu_stall_suppress_at_boot = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_cpu_stall_suppress_at_boot = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_cpu_stall_suppress_at_boot to i32), ptr @__kstrtab_rcu_cpu_stall_suppress_at_boot, ptr @__kstrtabns_rcu_cpu_stall_suppress_at_boot }, section "___ksymtab_gpl+rcu_cpu_stall_suppress_at_boot", align 4
@__param_str_rcu_cpu_stall_suppress_at_boot = internal constant [40 x i8] c"rcupdate.rcu_cpu_stall_suppress_at_boot\00", align 1
@__param_rcu_cpu_stall_suppress_at_boot = internal constant %struct.kernel_param { ptr @__param_str_rcu_cpu_stall_suppress_at_boot, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.74 { ptr @rcu_cpu_stall_suppress_at_boot } }, section "__param", align 4
@__UNIQUE_ID_rcu_cpu_stall_suppress_at_boottype399 = internal constant [51 x i8] c"update.parmtype=rcu_cpu_stall_suppress_at_boot:int\00", section ".modinfo", align 1
@__param_str_rcu_self_test = internal constant [23 x i8] c"rcupdate.rcu_self_test\00", align 1
@param_ops_bool = external dso_local constant %struct.kernel_param_ops, align 4
@rcu_self_test = internal global { i8, [31 x i8] } zeroinitializer, align 32
@__param_rcu_self_test = internal constant %struct.kernel_param { ptr @__param_str_rcu_self_test, ptr null, ptr @param_ops_bool, i16 292, i8 -1, i8 0, %union.anon.74 { ptr @rcu_self_test } }, section "__param", align 4
@__UNIQUE_ID_rcu_self_testtype400 = internal constant [35 x i8] c"update.parmtype=rcu_self_test:bool\00", section ".modinfo", align 1
@rcu_early_boot_tests._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.7, ptr @.str.8, ptr @.str.4, i32 551, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"\016Running RCU self tests\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"rcu_early_boot_tests\00", [43 x i8] zeroinitializer }, align 32
@rcu_early_boot_tests._entry_ptr = internal global ptr @rcu_early_boot_tests._entry, section ".printk_index", align 4
@__initcall__kmod_update__402_579_rcu_verify_early_boot_tests7 = internal global ptr @rcu_verify_early_boot_tests, section ".initcall7.init", align 4
@__param_str_rcu_task_ipi_delay = internal constant [28 x i8] c"rcupdate.rcu_task_ipi_delay\00", align 1
@rcu_task_ipi_delay = internal global i32 50, section ".data..read_mostly", align 4
@__param_rcu_task_ipi_delay = internal constant %struct.kernel_param { ptr @__param_str_rcu_task_ipi_delay, ptr null, ptr @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.74 { ptr @rcu_task_ipi_delay } }, section "__param", align 4
@__UNIQUE_ID_rcu_task_ipi_delaytype408 = internal constant [39 x i8] c"update.parmtype=rcu_task_ipi_delay:int\00", section ".modinfo", align 1
@__param_str_rcu_task_stall_timeout = internal constant [32 x i8] c"rcupdate.rcu_task_stall_timeout\00", align 1
@rcu_task_stall_timeout = internal global i32 60000, section ".data..read_mostly", align 4
@__param_rcu_task_stall_timeout = internal constant %struct.kernel_param { ptr @__param_str_rcu_task_stall_timeout, ptr null, ptr @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.74 { ptr @rcu_task_stall_timeout } }, section "__param", align 4
@__UNIQUE_ID_rcu_task_stall_timeouttype409 = internal constant [43 x i8] c"update.parmtype=rcu_task_stall_timeout:int\00", section ".modinfo", align 1
@__param_str_rcu_task_enqueue_lim = internal constant [30 x i8] c"rcupdate.rcu_task_enqueue_lim\00", align 1
@rcu_task_enqueue_lim = internal global i32 -1, section ".data..read_mostly", align 4
@__param_rcu_task_enqueue_lim = internal constant %struct.kernel_param { ptr @__param_str_rcu_task_enqueue_lim, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.74 { ptr @rcu_task_enqueue_lim } }, section "__param", align 4
@__UNIQUE_ID_rcu_task_enqueue_limtype410 = internal constant [41 x i8] c"update.parmtype=rcu_task_enqueue_lim:int\00", section ".modinfo", align 1
@__param_str_rcu_task_contend_lim = internal constant [30 x i8] c"rcupdate.rcu_task_contend_lim\00", align 1
@rcu_task_contend_lim = internal global i32 100, section ".data..read_mostly", align 4
@__param_rcu_task_contend_lim = internal constant %struct.kernel_param { ptr @__param_str_rcu_task_contend_lim, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.74 { ptr @rcu_task_contend_lim } }, section "__param", align 4
@__UNIQUE_ID_rcu_task_contend_limtype411 = internal constant [41 x i8] c"update.parmtype=rcu_task_contend_lim:int\00", section ".modinfo", align 1
@__param_str_rcu_task_collapse_lim = internal constant [31 x i8] c"rcupdate.rcu_task_collapse_lim\00", align 1
@rcu_task_collapse_lim = internal global i32 10, section ".data..read_mostly", align 4
@__param_rcu_task_collapse_lim = internal constant %struct.kernel_param { ptr @__param_str_rcu_task_collapse_lim, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.74 { ptr @rcu_task_collapse_lim } }, section "__param", align 4
@__UNIQUE_ID_rcu_task_collapse_limtype412 = internal constant [42 x i8] c"update.parmtype=rcu_task_collapse_lim:int\00", section ".modinfo", align 1
@.str.9 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"rcu_tasks__percpu.cbs_pcpu_lock\00", [32 x i8] zeroinitializer }, align 32
@rcu_tasks__percpu = weak dso_local global %struct.rcu_tasks_percpu { %struct.rcu_segcblist zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.9, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 0, i32 0, %struct.work_struct zeroinitializer, %struct.irq_work { %struct.__call_single_node zeroinitializer, ptr @call_rcu_tasks_iw_wakeup, %struct.rcuwait zeroinitializer }, %struct.callback_head zeroinitializer, i32 0, ptr null }, section ".data..percpu", align 4
@rcu_tasks = internal global { %struct.rcu_tasks, [72 x i8] } { %struct.rcu_tasks { %struct.wait_queue_head { %struct.spinlock { %union.anon.5 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.130, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, %struct.list_head { ptr getelementptr (i8, ptr @rcu_tasks, i64 44), ptr getelementptr (i8, ptr @rcu_tasks, i64 44) } }, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.131, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, ptr null, ptr @rcu_tasks_wait_gp, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @call_rcu_tasks, ptr @rcu_tasks__percpu, i32 3, i32 1, i32 1, i32 0, %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.132, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @rcu_tasks, i64 232), ptr getelementptr (i8, ptr @rcu_tasks, i64 232) }, ptr getelementptr (i8, ptr @rcu_tasks, i64 180), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.133, i8 0, i8 4, i8 0, i32 0, i32 0 } }, %struct.atomic_t zeroinitializer, %struct.completion zeroinitializer, i32 -200, ptr @.str.134, ptr @.str.135 }, [72 x i8] zeroinitializer }, align 32
@__kstrtab_call_rcu_tasks = external dso_local constant [0 x i8], align 1
@__kstrtabns_call_rcu_tasks = external dso_local constant [0 x i8], align 1
@__ksymtab_call_rcu_tasks = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @call_rcu_tasks to i32), ptr @__kstrtab_call_rcu_tasks, ptr @__kstrtabns_call_rcu_tasks }, section "___ksymtab_gpl+call_rcu_tasks", align 4
@__kstrtab_synchronize_rcu_tasks = external dso_local constant [0 x i8], align 1
@__kstrtabns_synchronize_rcu_tasks = external dso_local constant [0 x i8], align 1
@__ksymtab_synchronize_rcu_tasks = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @synchronize_rcu_tasks to i32), ptr @__kstrtab_synchronize_rcu_tasks, ptr @__kstrtabns_synchronize_rcu_tasks }, section "___ksymtab_gpl+synchronize_rcu_tasks", align 4
@__kstrtab_rcu_barrier_tasks = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_barrier_tasks = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_barrier_tasks = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_barrier_tasks to i32), ptr @__kstrtab_rcu_barrier_tasks, ptr @__kstrtabns_rcu_barrier_tasks }, section "___ksymtab_gpl+rcu_barrier_tasks", align 4
@.str.10 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@__kstrtab_show_rcu_tasks_classic_gp_kthread = external dso_local constant [0 x i8], align 1
@__kstrtabns_show_rcu_tasks_classic_gp_kthread = external dso_local constant [0 x i8], align 1
@__ksymtab_show_rcu_tasks_classic_gp_kthread = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @show_rcu_tasks_classic_gp_kthread to i32), ptr @__kstrtab_show_rcu_tasks_classic_gp_kthread, ptr @__kstrtabns_show_rcu_tasks_classic_gp_kthread }, section "___ksymtab_gpl+show_rcu_tasks_classic_gp_kthread", align 4
@tasks_rcu_exit_srcu = internal global { %struct.srcu_struct, [200 x i8] } { %struct.srcu_struct { [3 x %struct.srcu_node] zeroinitializer, [3 x ptr] zeroinitializer, %struct.mutex zeroinitializer, %struct.spinlock { %union.anon.5 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.156, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, %struct.mutex zeroinitializer, i32 0, i32 0, i32 -1, i32 0, i32 0, ptr @tasks_rcu_exit_srcu_srcu_data, i32 0, %struct.mutex zeroinitializer, %struct.completion zeroinitializer, %struct.atomic_t zeroinitializer, %struct.delayed_work { %struct.work_struct { %struct.atomic_t { i32 -48 }, %struct.list_head { ptr getelementptr (i8, ptr @tasks_rcu_exit_srcu, i64 700), ptr getelementptr (i8, ptr @tasks_rcu_exit_srcu, i64 700) }, ptr null, %struct.lockdep_map { ptr getelementptr (i8, ptr @tasks_rcu_exit_srcu, i64 696), [2 x ptr] zeroinitializer, ptr @.str.157, i8 0, i8 0, i8 0, i32 0, i32 0 } }, %struct.timer_list { %struct.hlist_node { ptr inttoptr (i32 768 to ptr), ptr null }, i32 0, ptr @delayed_work_timer_fn, i32 2097152, %struct.lockdep_map { ptr @.str.158, [2 x ptr] zeroinitializer, ptr @.str.158, i8 0, i8 0, i8 0, i32 0, i32 0 } }, ptr null, i32 0 }, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.159, i8 0, i8 0, i8 0, i32 0, i32 0 } }, [200 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"rcu_tasks_rude__percpu.cbs_pcpu_lock\00", [59 x i8] zeroinitializer }, align 32
@rcu_tasks_rude__percpu = weak dso_local global %struct.rcu_tasks_percpu { %struct.rcu_segcblist zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.11, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 0, i32 0, %struct.work_struct zeroinitializer, %struct.irq_work { %struct.__call_single_node zeroinitializer, ptr @call_rcu_tasks_iw_wakeup, %struct.rcuwait zeroinitializer }, %struct.callback_head zeroinitializer, i32 0, ptr null }, section ".data..percpu", align 4
@rcu_tasks_rude = internal global { %struct.rcu_tasks, [72 x i8] } { %struct.rcu_tasks { %struct.wait_queue_head { %struct.spinlock { %union.anon.5 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.160, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, %struct.list_head { ptr getelementptr (i8, ptr @rcu_tasks_rude, i64 44), ptr getelementptr (i8, ptr @rcu_tasks_rude, i64 44) } }, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.161, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, ptr null, ptr @rcu_tasks_rude_wait_gp, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @call_rcu_tasks_rude, ptr @rcu_tasks_rude__percpu, i32 3, i32 1, i32 1, i32 0, %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.162, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @rcu_tasks_rude, i64 232), ptr getelementptr (i8, ptr @rcu_tasks_rude, i64 232) }, ptr getelementptr (i8, ptr @rcu_tasks_rude, i64 180), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.163, i8 0, i8 4, i8 0, i32 0, i32 0 } }, %struct.atomic_t zeroinitializer, %struct.completion zeroinitializer, i32 -200, ptr @.str.164, ptr @.str.165 }, [72 x i8] zeroinitializer }, align 32
@__kstrtab_call_rcu_tasks_rude = external dso_local constant [0 x i8], align 1
@__kstrtabns_call_rcu_tasks_rude = external dso_local constant [0 x i8], align 1
@__ksymtab_call_rcu_tasks_rude = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @call_rcu_tasks_rude to i32), ptr @__kstrtab_call_rcu_tasks_rude, ptr @__kstrtabns_call_rcu_tasks_rude }, section "___ksymtab_gpl+call_rcu_tasks_rude", align 4
@__kstrtab_synchronize_rcu_tasks_rude = external dso_local constant [0 x i8], align 1
@__kstrtabns_synchronize_rcu_tasks_rude = external dso_local constant [0 x i8], align 1
@__ksymtab_synchronize_rcu_tasks_rude = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @synchronize_rcu_tasks_rude to i32), ptr @__kstrtab_synchronize_rcu_tasks_rude, ptr @__kstrtabns_synchronize_rcu_tasks_rude }, section "___ksymtab_gpl+synchronize_rcu_tasks_rude", align 4
@__kstrtab_rcu_barrier_tasks_rude = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_barrier_tasks_rude = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_barrier_tasks_rude = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_barrier_tasks_rude to i32), ptr @__kstrtab_rcu_barrier_tasks_rude, ptr @__kstrtabns_rcu_barrier_tasks_rude }, section "___ksymtab_gpl+rcu_barrier_tasks_rude", align 4
@__kstrtab_show_rcu_tasks_rude_gp_kthread = external dso_local constant [0 x i8], align 1
@__kstrtabns_show_rcu_tasks_rude_gp_kthread = external dso_local constant [0 x i8], align 1
@__ksymtab_show_rcu_tasks_rude_gp_kthread = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @show_rcu_tasks_rude_gp_kthread to i32), ptr @__kstrtab_show_rcu_tasks_rude_gp_kthread, ptr @__kstrtabns_show_rcu_tasks_rude_gp_kthread }, section "___ksymtab_gpl+show_rcu_tasks_rude_gp_kthread", align 4
@rcu_lock_trace_key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.12 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rcu_read_lock_trace\00", [44 x i8] zeroinitializer }, align 32
@rcu_trace_lock_map = dso_local global { %struct.lockdep_map, [36 x i8] } { %struct.lockdep_map { ptr @rcu_lock_trace_key, [2 x ptr] zeroinitializer, ptr @.str.12, i8 0, i8 0, i8 0, i32 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@__kstrtab_rcu_trace_lock_map = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_trace_lock_map = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_trace_lock_map = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_trace_lock_map to i32), ptr @__kstrtab_rcu_trace_lock_map, ptr @__kstrtabns_rcu_trace_lock_map }, section "___ksymtab_gpl+rcu_trace_lock_map", align 4
@.str.13 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"rcu_tasks_trace__percpu.cbs_pcpu_lock\00", [58 x i8] zeroinitializer }, align 32
@rcu_tasks_trace__percpu = weak dso_local global %struct.rcu_tasks_percpu { %struct.rcu_segcblist zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.13, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 0, i32 0, %struct.work_struct zeroinitializer, %struct.irq_work { %struct.__call_single_node zeroinitializer, ptr @call_rcu_tasks_iw_wakeup, %struct.rcuwait zeroinitializer }, %struct.callback_head zeroinitializer, i32 0, ptr null }, section ".data..percpu", align 4
@trc_n_readers_need_end = internal global { %struct.atomic_t, [28 x i8] } zeroinitializer, align 32
@rcu_tasks_trace_iw = internal global { %struct.irq_work, [16 x i8] } { %struct.irq_work { %struct.__call_single_node zeroinitializer, ptr @rcu_read_unlock_iw, %struct.rcuwait zeroinitializer }, [16 x i8] zeroinitializer }, align 32
@__kstrtab_rcu_read_unlock_trace_special = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_read_unlock_trace_special = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_read_unlock_trace_special = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_read_unlock_trace_special to i32), ptr @__kstrtab_rcu_read_unlock_trace_special, ptr @__kstrtabns_rcu_read_unlock_trace_special }, section "___ksymtab_gpl+rcu_read_unlock_trace_special", align 4
@rcu_tasks_trace = internal global { %struct.rcu_tasks, [72 x i8] } { %struct.rcu_tasks { %struct.wait_queue_head { %struct.spinlock { %union.anon.5 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.168, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, %struct.list_head { ptr getelementptr (i8, ptr @rcu_tasks_trace, i64 44), ptr getelementptr (i8, ptr @rcu_tasks_trace, i64 44) } }, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.169, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, ptr null, ptr @rcu_tasks_wait_gp, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @call_rcu_tasks_trace, ptr @rcu_tasks_trace__percpu, i32 3, i32 1, i32 1, i32 0, %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.170, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @rcu_tasks_trace, i64 232), ptr getelementptr (i8, ptr @rcu_tasks_trace, i64 232) }, ptr getelementptr (i8, ptr @rcu_tasks_trace, i64 180), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.171, i8 0, i8 4, i8 0, i32 0, i32 0 } }, %struct.atomic_t zeroinitializer, %struct.completion zeroinitializer, i32 -200, ptr @.str.172, ptr @.str.173 }, [72 x i8] zeroinitializer }, align 32
@__kstrtab_call_rcu_tasks_trace = external dso_local constant [0 x i8], align 1
@__kstrtabns_call_rcu_tasks_trace = external dso_local constant [0 x i8], align 1
@__ksymtab_call_rcu_tasks_trace = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @call_rcu_tasks_trace to i32), ptr @__kstrtab_call_rcu_tasks_trace, ptr @__kstrtabns_call_rcu_tasks_trace }, section "___ksymtab_gpl+call_rcu_tasks_trace", align 4
@synchronize_rcu_tasks_trace.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.14 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"kernel/rcu/tasks.h\00", [45 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [84 x i8], [44 x i8] } { [84 x i8] c"Illegal synchronize_rcu_tasks_trace() in RCU Tasks Trace read-side critical section\00", [44 x i8] zeroinitializer }, align 32
@__kstrtab_synchronize_rcu_tasks_trace = external dso_local constant [0 x i8], align 1
@__kstrtabns_synchronize_rcu_tasks_trace = external dso_local constant [0 x i8], align 1
@__ksymtab_synchronize_rcu_tasks_trace = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @synchronize_rcu_tasks_trace to i32), ptr @__kstrtab_synchronize_rcu_tasks_trace, ptr @__kstrtabns_synchronize_rcu_tasks_trace }, section "___ksymtab_gpl+synchronize_rcu_tasks_trace", align 4
@__kstrtab_rcu_barrier_tasks_trace = external dso_local constant [0 x i8], align 1
@__kstrtabns_rcu_barrier_tasks_trace = external dso_local constant [0 x i8], align 1
@__ksymtab_rcu_barrier_tasks_trace = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rcu_barrier_tasks_trace to i32), ptr @__kstrtab_rcu_barrier_tasks_trace, ptr @__kstrtabns_rcu_barrier_tasks_trace }, section "___ksymtab_gpl+rcu_barrier_tasks_trace", align 4
@.str.16 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"N%d h:%lu/%lu/%lu\00", [46 x i8] zeroinitializer }, align 32
@n_heavy_reader_ofl_updates = internal global { i32, [28 x i8] } zeroinitializer, align 32
@n_heavy_reader_updates = internal global { i32, [28 x i8] } zeroinitializer, align 32
@n_heavy_reader_attempts = internal global { i32, [28 x i8] } zeroinitializer, align 32
@__kstrtab_show_rcu_tasks_trace_gp_kthread = external dso_local constant [0 x i8], align 1
@__kstrtabns_show_rcu_tasks_trace_gp_kthread = external dso_local constant [0 x i8], align 1
@__ksymtab_show_rcu_tasks_trace_gp_kthread = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @show_rcu_tasks_trace_gp_kthread to i32), ptr @__kstrtab_show_rcu_tasks_trace_gp_kthread, ptr @__kstrtabns_show_rcu_tasks_trace_gp_kthread }, section "___ksymtab_gpl+show_rcu_tasks_trace_gp_kthread", align 4
@__initcall__kmod_update__545_1700_rcu_tasks_verify_self_tests7 = internal global ptr @rcu_tasks_verify_self_tests, section ".initcall7.init", align 4
@rcupdate_announce_bootup_oddness._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.17, ptr @.str.18, ptr @.str.4, i32 594, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\016\09No expedited grace period (rcu_normal).\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"rcupdate_announce_bootup_oddness\00", [63 x i8] zeroinitializer }, align 32
@rcupdate_announce_bootup_oddness._entry_ptr = internal global ptr @rcupdate_announce_bootup_oddness._entry, section ".printk_index", align 4
@rcupdate_announce_bootup_oddness._entry.19 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.20, ptr @.str.18, ptr @.str.4, i32 596, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"\016\09No expedited grace period (rcu_normal_after_boot).\0A\00", [41 x i8] zeroinitializer }, align 32
@rcupdate_announce_bootup_oddness._entry_ptr.21 = internal global ptr @rcupdate_announce_bootup_oddness._entry.19, section ".printk_index", align 4
@rcupdate_announce_bootup_oddness._entry.22 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.23, ptr @.str.18, ptr @.str.4, i32 598, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\016\09All grace periods are expedited (rcu_expedited).\0A\00", [43 x i8] zeroinitializer }, align 32
@rcupdate_announce_bootup_oddness._entry_ptr.24 = internal global ptr @rcupdate_announce_bootup_oddness._entry.22, section ".printk_index", align 4
@rcupdate_announce_bootup_oddness._entry.25 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.26, ptr @.str.18, ptr @.str.4, i32 600, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\016\09RCU CPU stall warnings suppressed (rcu_cpu_stall_suppress).\0A\00", [32 x i8] zeroinitializer }, align 32
@rcupdate_announce_bootup_oddness._entry_ptr.27 = internal global ptr @rcupdate_announce_bootup_oddness._entry.25, section ".printk_index", align 4
@rcupdate_announce_bootup_oddness._entry.28 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.29, ptr @.str.18, ptr @.str.4, i32 602, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\016\09RCU CPU stall warnings timeout set to %d (rcu_cpu_stall_timeout).\0A\00", [58 x i8] zeroinitializer }, align 32
@rcupdate_announce_bootup_oddness._entry_ptr.30 = internal global ptr @rcupdate_announce_bootup_oddness._entry.28, section ".printk_index", align 4
@__pcpu_unique_early_srcu_srcu_data = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@early_srcu_srcu_data = weak dso_local global %struct.srcu_data zeroinitializer, section ".data..percpu", align 128
@__pcpu_unique_tasks_rcu_exit_srcu_srcu_data = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@tasks_rcu_exit_srcu_srcu_data = weak dso_local global %struct.srcu_data zeroinitializer, section ".data..percpu", align 128
@__pcpu_unique_rcu_tasks__percpu = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@__pcpu_unique_rcu_tasks_rude__percpu = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@__pcpu_unique_trc_ipi_to_cpu = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@trc_ipi_to_cpu = weak dso_local global i8 0, section ".data..percpu", align 1
@__pcpu_unique_rcu_tasks_trace__percpu = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@.str.31 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"const char *\00", [19 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"s\00", [30 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%s\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"rcuname\00", [24 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"long\00", [27 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"gp_seq\00", [25 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"gpevent\00", [24 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"%s %ld %s\0A\00", [21 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"gp_seq_req\00", [21 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"u8\00", [29 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"level\00", [26 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"grplo\00", [26 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"grphi\00", [26 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%s %ld %ld %u %d %d %s\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unsigned long\00", [18 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"qsmask\00", [25 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"%s %ld %u %d %d %lx\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"gpseq\00", [26 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"%s %d %d %d %s\0A\00", [16 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"cpu\00", [28 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"reason\00", [25 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"%s %d %s\0A\00", [22 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"pid\00", [28 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"%s %ld %d\0A\00", [21 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"mask\00", [27 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"gp_tasks\00", [23 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"%s %ld %lx>%lx %u %d %d %u\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"qsevent\00", [24 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"%s %ld %d %s\0A\00", [18 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"msg\00", [28 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"%s %s\0A\00", [25 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"polarity\00", [23 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"oldnesting\00", [21 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"newnesting\00", [21 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"dynticks\00", [23 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"%s %lx %lx %#3x\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"void *\00", [25 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"rhp\00", [28 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"func\00", [27 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"qlen\00", [27 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%s rhp=%p func=%ps %ld\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ctx\00", [28 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"unsigned long[4]\00", [47 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"long[4]\00", [24 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"seglen\00", [25 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [114 x i8], [46 x i8] } { [114 x i8] c"%s seglen: (DONE=%ld, WAIT=%ld, NEXT_READY=%ld, NEXT=%ld) gp_seq: (DONE=%lu, WAIT=%lu, NEXT_READY=%lu, NEXT=%lu)\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"offset\00", [25 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%s rhp=%p func=%ld %ld\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"blimit\00", [25 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"%s CBs=%ld bl=%ld\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"%s rhp=%p func=%ps\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"%s rhp=%p func=%ld\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"nr_records\00", [21 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"void **\00", [24 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"p\00", [30 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"%s bulk=0x%p nr_records=%lu\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"callbacks_invoked\00", [46 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"char\00", [27 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"cb\00", [29 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"nr\00", [29 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"iit\00", [28 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"risk\00", [27 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"%s CBs-invoked=%d idle=%c%c%c%c\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"rcutorturename[8]\00", [46 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"struct callback_head *\00", [41 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"secs\00", [27 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"c_old\00", [26 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"c\00", [30 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"%s torture read %p %luus c: %lu %lu\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"cnt\00", [28 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"done\00", [27 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"%s %s cpu %d remaining %d # %lu\0A\00", [63 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@init_completion.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.104 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"&x->wait\00", [23 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"include/trace/events/rcu.h\00", [37 x i8] zeroinitializer }, align 32
@trace_rcu_torture_read.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.106 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.107 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@early_boot_test_call_rcu.head = internal global { %struct.callback_head, [24 x i8] } zeroinitializer, align 32
@early_boot_test_call_rcu.shead = internal global { %struct.callback_head, [24 x i8] } zeroinitializer, align 32
@early_srcu = internal global { %struct.srcu_struct, [200 x i8] } { %struct.srcu_struct { [3 x %struct.srcu_node] zeroinitializer, [3 x ptr] zeroinitializer, %struct.mutex zeroinitializer, %struct.spinlock { %union.anon.5 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.110, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, %struct.mutex zeroinitializer, i32 0, i32 0, i32 -1, i32 0, i32 0, ptr @early_srcu_srcu_data, i32 0, %struct.mutex zeroinitializer, %struct.completion zeroinitializer, %struct.atomic_t zeroinitializer, %struct.delayed_work { %struct.work_struct { %struct.atomic_t { i32 -48 }, %struct.list_head { ptr getelementptr (i8, ptr @early_srcu, i64 700), ptr getelementptr (i8, ptr @early_srcu, i64 700) }, ptr null, %struct.lockdep_map { ptr getelementptr (i8, ptr @early_srcu, i64 696), [2 x ptr] zeroinitializer, ptr @.str.111, i8 0, i8 0, i8 0, i32 0, i32 0 } }, %struct.timer_list { %struct.hlist_node { ptr inttoptr (i32 768 to ptr), ptr null }, i32 0, ptr @delayed_work_timer_fn, i32 2097152, %struct.lockdep_map { ptr @.str.112, [2 x ptr] zeroinitializer, ptr @.str.112, i8 0, i8 0, i8 0, i32 0, i32 0 } }, ptr null, i32 0 }, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.113, i8 0, i8 0, i8 0, i32 0, i32 0 } }, [200 x i8] zeroinitializer }, align 32
@early_srcu_cookie = internal global { i32, [28 x i8] } zeroinitializer, align 32
@early_boot_test_call_rcu.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_self_test_counter = internal global { i32, [28 x i8] } zeroinitializer, align 32
@test_callback._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.108, ptr @.str.109, ptr @.str.4, i32 523, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\016RCU test callback executed %d\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"test_callback\00", [18 x i8] zeroinitializer }, align 32
@test_callback._entry_ptr = internal global ptr @test_callback._entry, section ".printk_index", align 4
@.str.110 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"early_srcu.lock\00", [16 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"(early_srcu.work).work\00", [41 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"kernel/rcu/update.c:526\00", [40 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"early_srcu\00", [21 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@rcu_verify_early_boot_tests.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@rcu_task_cb_adjust = internal global { i1, [31 x i8] } zeroinitializer, align 32
@call_rcu_tasks_generic.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@lockdep_recursion = external dso_local global i32, section ".data..percpu", align 4
@hardirqs_enabled = external dso_local global i32, section ".data..percpu", align 4
@call_rcu_tasks_generic.__already_done.114 = internal unnamed_addr global i1 false, section ".data.once", align 1
@call_rcu_tasks_generic._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.115, ptr @.str.116, ptr @.str.14, i32 308, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\016Switching %s to per-CPU callback queuing.\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"call_rcu_tasks_generic\00", [41 x i8] zeroinitializer }, align 32
@call_rcu_tasks_generic._entry_ptr = internal global ptr @call_rcu_tasks_generic._entry, section ".printk_index", align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.117 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@cblist_init_generic._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.119, ptr @.str.120, ptr @.str.14, i32 225, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\016%s: Setting adjustable number of callback queues.\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"cblist_init_generic\00", [44 x i8] zeroinitializer }, align 32
@cblist_init_generic._entry_ptr = internal global ptr @cblist_init_generic._entry, section ".printk_index", align 4
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 4
@cblist_init_generic.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@cblist_init_generic.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.121 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"&ACCESS_PRIVATE(rtpcp, lock)\00", [35 x i8] zeroinitializer }, align 32
@cblist_init_generic.__key.122 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.123 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"(work_completion)(&rtpcp->rtp_work)\00", [60 x i8] zeroinitializer }, align 32
@cblist_init_generic.__already_done.124 = internal unnamed_addr global i1 false, section ".data.once", align 1
@cblist_init_generic._entry.125 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.126, ptr @.str.120, ptr @.str.14, i32 254, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\016%s: Setting shift to %d and lim to %d.\0A\00", [54 x i8] zeroinitializer }, align 32
@cblist_init_generic._entry_ptr.127 = internal global ptr @cblist_init_generic._entry.125, section ".printk_index", align 4
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@rcu_tasks_invoke_cbs.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_tasks_invoke_cbs.__already_done.128 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.129 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"rcu_tasks.cbs_wq.lock\00", [42 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"rcu_tasks.cbs_gbl_lock\00", [41 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"rcu_tasks.barrier_q_mutex.wait_lock\00", [60 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"rcu_tasks.barrier_q_mutex\00", [38 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"RCU Tasks\00", [22 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"rcu_tasks\00", [22 x i8] zeroinitializer }, align 32
@init_task = external dso_local global %struct.task_struct, align 128
@rcu_tasks_wait_gp.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.136 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"RCU-list traversed in non-reader section!\00", [54 x i8] zeroinitializer }, align 32
@synchronize_rcu_tasks_generic.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.137 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"synchronize_rcu_tasks called too soon\00", [58 x i8] zeroinitializer }, align 32
@rcu_barrier_tasks_generic.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_seq_start.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.138 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"kernel/rcu/rcu.h\00", [47 x i8] zeroinitializer }, align 32
@rcu_seq_end.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@show_rcu_tasks_generic_gp_kthread._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.139, ptr @.str.140, ptr @.str.14, i32 580, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\016%s: %s(%d) since %lu g:%lu i:%lu/%lu %c%c %s\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"show_rcu_tasks_generic_gp_kthread\00", [62 x i8] zeroinitializer }, align 32
@show_rcu_tasks_generic_gp_kthread._entry_ptr = internal global ptr @show_rcu_tasks_generic_gp_kthread._entry, section ".printk_index", align 4
@.str.141 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c".k\00", [29 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c".C\00", [29 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"???\00", [28 x i8] zeroinitializer }, align 32
@rcu_tasks_gp_state_names = internal constant { [12 x ptr], [48 x i8] } { [12 x ptr] [ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.155], [48 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"RTGS_INIT\00", [22 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"RTGS_WAIT_WAIT_CBS\00", [45 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"RTGS_WAIT_GP\00", [19 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"RTGS_PRE_WAIT_GP\00", [47 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"RTGS_SCAN_TASKLIST\00", [45 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"RTGS_POST_SCAN_TASKLIST\00", [40 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"RTGS_WAIT_SCAN_HOLDOUTS\00", [40 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"RTGS_SCAN_HOLDOUTS\00", [45 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"RTGS_POST_GP\00", [19 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"RTGS_WAIT_READERS\00", [46 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"RTGS_INVOKE_CBS\00", [16 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"RTGS_WAIT_CBS\00", [18 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"tasks_rcu_exit_srcu.lock\00", [39 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"(tasks_rcu_exit_srcu.work).work\00", [32 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"kernel/rcu/tasks.h:135\00", [41 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"tasks_rcu_exit_srcu\00", [44 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"rcu_tasks_rude.cbs_wq.lock\00", [37 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"rcu_tasks_rude.cbs_gbl_lock\00", [36 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"rcu_tasks_rude.barrier_q_mutex.wait_lock\00", [55 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"rcu_tasks_rude.barrier_q_mutex\00", [33 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"RCU Tasks Rude\00", [17 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"rcu_tasks_rude\00", [17 x i8] zeroinitializer }, align 32
@trc_wait = internal global { %struct.wait_queue_head, [44 x i8] } { %struct.wait_queue_head { %struct.spinlock { %union.anon.5 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.166, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, %struct.list_head { ptr getelementptr (i8, ptr @trc_wait, i64 44), ptr getelementptr (i8, ptr @trc_wait, i64 44) } }, [44 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"trc_wait.lock\00", [18 x i8] zeroinitializer }, align 32
@exit_tasks_rcu_finish_trace.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@exit_tasks_rcu_finish_trace.__already_done.167 = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.168 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"rcu_tasks_trace.cbs_wq.lock\00", [36 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"rcu_tasks_trace.cbs_gbl_lock\00", [35 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_tasks_trace.barrier_q_mutex.wait_lock\00", [54 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"rcu_tasks_trace.barrier_q_mutex\00", [32 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"RCU Tasks Trace\00", [16 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rcu_tasks_trace\00", [16 x i8] zeroinitializer }, align 32
@tests = internal global { [3 x %struct.rcu_tasks_test_desc], [48 x i8] } { [3 x %struct.rcu_tasks_test_desc] [%struct.rcu_tasks_test_desc { %struct.callback_head zeroinitializer, ptr @.str.176, i8 0 }, %struct.rcu_tasks_test_desc { %struct.callback_head zeroinitializer, ptr @.str.177, i8 0 }, %struct.rcu_tasks_test_desc { %struct.callback_head zeroinitializer, ptr @.str.178, i8 0 }], [48 x i8] zeroinitializer }, align 32
@rcu_tasks_verify_self_tests._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.174, ptr @.str.175, ptr @.str.14, i32 1690, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"\013%s has been failed.\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"rcu_tasks_verify_self_tests\00", [36 x i8] zeroinitializer }, align 32
@rcu_tasks_verify_self_tests._entry_ptr = internal global ptr @rcu_tasks_verify_self_tests._entry, section ".printk_index", align 4
@.str.176 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"call_rcu_tasks()\00", [47 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"call_rcu_tasks_rude()\00", [42 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"call_rcu_tasks_trace()\00", [41 x i8] zeroinitializer }, align 32
@check_holdout_task._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.179, ptr @.str.180, ptr @.str.14, i32 773, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\013INFO: rcu_tasks detected stalls on tasks:\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"check_holdout_task\00", [45 x i8] zeroinitializer }, align 32
@check_holdout_task._entry_ptr = internal global ptr @check_holdout_task._entry, section ".printk_index", align 4
@check_holdout_task._entry.181 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.182, ptr @.str.180, ptr @.str.14, i32 781, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"\011%p: %c%c nvcsw: %lu/%lu holdout: %d idle_cpu: %d/%d\0A\00", [41 x i8] zeroinitializer }, align 32
@check_holdout_task._entry_ptr.183 = internal global ptr @check_holdout_task._entry.181, section ".printk_index", align 4
@.str.184 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c".I\00", [29 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"%s_kthread\00", [21 x i8] zeroinitializer }, align 32
@rcu_spawn_tasks_kthread_generic.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.187 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"%s: Could not start %s grace-period kthread, OOM is now expected behavior\0A\00", [53 x i8] zeroinitializer }, align 32
@__func__.rcu_spawn_tasks_kthread_generic = private unnamed_addr constant [32 x i8] c"rcu_spawn_tasks_kthread_generic\00", align 1
@rcu_tasks_need_gpcb.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_tasks_need_gpcb._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.188, ptr @.str.189, ptr @.str.14, i32 423, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\016Starting switch %s to CPU-0 callback queuing.\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rcu_tasks_need_gpcb\00", [44 x i8] zeroinitializer }, align 32
@rcu_tasks_need_gpcb._entry_ptr = internal global ptr @rcu_tasks_need_gpcb._entry, section ".printk_index", align 4
@rcu_tasks_need_gpcb._entry.190 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.191, ptr @.str.189, ptr @.str.14, i32 432, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\016Completing switch %s to CPU-0 callback queuing.\0A\00", [45 x i8] zeroinitializer }, align 32
@rcu_tasks_need_gpcb._entry_ptr.192 = internal global ptr @rcu_tasks_need_gpcb._entry.190, section ".printk_index", align 4
@rcu_tasks_trace_pregp_step.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@trc_wait_for_one_reader.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@trc_wait_for_one_reader.__already_done.193 = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.194 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"%s():  smp_call_function_single() failed for CPU: %d\0A\00", [42 x i8] zeroinitializer }, align 32
@__func__.trc_wait_for_one_reader = private unnamed_addr constant [24 x i8] c"trc_wait_for_one_reader\00", align 1
@trc_inspect_reader.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@trc_inspect_reader.__already_done.195 = internal unnamed_addr global i1 false, section ".data.once", align 1
@trc_read_check_handler.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@check_all_holdout_tasks_trace._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.196, ptr @.str.197, ptr @.str.14, i32 1451, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\013INFO: rcu_tasks_trace detected stalls? (Late IPI?)\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.197 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"check_all_holdout_tasks_trace\00", [34 x i8] zeroinitializer }, align 32
@check_all_holdout_tasks_trace._entry_ptr = internal global ptr @check_all_holdout_tasks_trace._entry, section ".printk_index", align 4
@show_stalled_task_trace._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.198, ptr @.str.199, ptr @.str.14, i32 1393, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\013INFO: rcu_tasks_trace detected stalls on tasks:\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.199 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"show_stalled_task_trace\00", [40 x i8] zeroinitializer }, align 32
@show_stalled_task_trace._entry_ptr = internal global ptr @show_stalled_task_trace._entry, section ".printk_index", align 4
@show_stalled_task_trace._entry.200 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.201, ptr @.str.199, ptr @.str.14, i32 1400, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.201 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"\011P%d: %c\0A\00", [21 x i8] zeroinitializer }, align 32
@show_stalled_task_trace._entry_ptr.202 = internal global ptr @show_stalled_task_trace._entry.200, section ".printk_index", align 4
@.str.203 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c".i\00", [29 x i8] zeroinitializer }, align 32
@show_stalled_task_trace._entry.204 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.205, ptr @.str.199, ptr @.str.14, i32 1409, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.205 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\011P%d: %c%c%c nesting: %d%c cpu: %d\0A\00", [59 x i8] zeroinitializer }, align 32
@show_stalled_task_trace._entry_ptr.206 = internal global ptr @show_stalled_task_trace._entry.204, section ".printk_index", align 4
@.str.208 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c" N\00", [29 x i8] zeroinitializer }, align 32
@show_stalled_ipi_trace._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.209, ptr @.str.210, ptr @.str.14, i32 1420, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.209 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"\011\09IPI outstanding to CPU %d\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"show_stalled_ipi_trace\00", [41 x i8] zeroinitializer }, align 32
@show_stalled_ipi_trace._entry_ptr = internal global ptr @show_stalled_ipi_trace._entry, section ".printk_index", align 4
@rcu_tasks_trace_postgp.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rcu_tasks_trace_postgp.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_tasks_trace_postgp._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.211, ptr @.str.212, ptr @.str.14, i32 1505, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\013INFO: rcu_tasks_trace detected stalls? (Counter/taskslist mismatch?)\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"rcu_tasks_trace_postgp\00", [41 x i8] zeroinitializer }, align 32
@rcu_tasks_trace_postgp._entry_ptr = internal global ptr @rcu_tasks_trace_postgp._entry, section ".printk_index", align 4
@rcu_tasks_trace_postgp._entry.213 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.214, ptr @.str.212, ptr @.str.14, i32 1507, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"\013\09%d holdouts\0A\00", [16 x i8] zeroinitializer }, align 32
@rcu_tasks_trace_postgp._entry_ptr.215 = internal global ptr @rcu_tasks_trace_postgp._entry.213, section ".printk_index", align 4
@rcu_tasks_initiate_self_tests._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.216, ptr @.str.217, ptr @.str.14, i32 1666, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.216 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\016Running RCU-tasks wait API self tests\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.217 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"rcu_tasks_initiate_self_tests\00", [34 x i8] zeroinitializer }, align 32
@rcu_tasks_initiate_self_tests._entry_ptr = internal global ptr @rcu_tasks_initiate_self_tests._entry, section ".printk_index", align 4
@test_rcu_tasks_callback._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.218, ptr @.str.219, ptr @.str.14, i32 1659, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"\016Callback from %s invoked.\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.219 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"test_rcu_tasks_callback\00", [40 x i8] zeroinitializer }, align 32
@test_rcu_tasks_callback._entry_ptr = internal global ptr @test_rcu_tasks_callback._entry, section ".printk_index", align 4
@rcu_tasks_bootup_oddness._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.220, ptr @.str.221, ptr @.str.14, i32 552, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [77 x i8], [51 x i8] } { [77 x i8] c"\016\09Tasks-RCU CPU stall warnings timeout set to %d (rcu_task_stall_timeout).\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.221 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"rcu_tasks_bootup_oddness\00", [39 x i8] zeroinitializer }, align 32
@rcu_tasks_bootup_oddness._entry_ptr = internal global ptr @rcu_tasks_bootup_oddness._entry, section ".printk_index", align 4
@rcu_tasks_bootup_oddness._entry.222 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.223, ptr @.str.221, ptr @.str.14, i32 555, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.223 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\016\09Trampoline variant of Tasks RCU enabled.\0A\00", [51 x i8] zeroinitializer }, align 32
@rcu_tasks_bootup_oddness._entry_ptr.224 = internal global ptr @rcu_tasks_bootup_oddness._entry.222, section ".printk_index", align 4
@rcu_tasks_bootup_oddness._entry.225 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.226, ptr @.str.221, ptr @.str.14, i32 558, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\016\09Rude variant of Tasks RCU enabled.\0A\00", [57 x i8] zeroinitializer }, align 32
@rcu_tasks_bootup_oddness._entry_ptr.227 = internal global ptr @rcu_tasks_bootup_oddness._entry.225, section ".printk_index", align 4
@rcu_tasks_bootup_oddness._entry.228 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.229, ptr @.str.221, ptr @.str.14, i32 561, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\016\09Tracing variant of Tasks RCU enabled.\0A\00", [54 x i8] zeroinitializer }, align 32
@rcu_tasks_bootup_oddness._entry_ptr.230 = internal global ptr @rcu_tasks_bootup_oddness._entry.228, section ".printk_index", align 4
@___asan_gen_.231 = private unnamed_addr constant [28 x i8] c"str__rcu__trace_system_name\00", align 1
@___asan_gen_.232 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.233 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.232, i32 36, i32 1 }
@___asan_gen_.234 = private unnamed_addr constant [35 x i8] c"trace_event_fields_rcu_utilization\00", align 1
@___asan_gen_.237 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_rcu_utilization\00", align 1
@___asan_gen_.240 = private unnamed_addr constant [26 x i8] c"print_fmt_rcu_utilization\00", align 1
@___asan_gen_.243 = private unnamed_addr constant [22 x i8] c"event_rcu_utilization\00", align 1
@___asan_gen_.246 = private unnamed_addr constant [36 x i8] c"trace_event_fields_rcu_grace_period\00", align 1
@___asan_gen_.249 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_rcu_grace_period\00", align 1
@___asan_gen_.252 = private unnamed_addr constant [27 x i8] c"print_fmt_rcu_grace_period\00", align 1
@___asan_gen_.255 = private unnamed_addr constant [23 x i8] c"event_rcu_grace_period\00", align 1
@___asan_gen_.258 = private unnamed_addr constant [43 x i8] c"trace_event_fields_rcu_future_grace_period\00", align 1
@___asan_gen_.261 = private unnamed_addr constant [47 x i8] c"trace_event_type_funcs_rcu_future_grace_period\00", align 1
@___asan_gen_.264 = private unnamed_addr constant [34 x i8] c"print_fmt_rcu_future_grace_period\00", align 1
@___asan_gen_.267 = private unnamed_addr constant [30 x i8] c"event_rcu_future_grace_period\00", align 1
@___asan_gen_.270 = private unnamed_addr constant [41 x i8] c"trace_event_fields_rcu_grace_period_init\00", align 1
@___asan_gen_.273 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_rcu_grace_period_init\00", align 1
@___asan_gen_.276 = private unnamed_addr constant [32 x i8] c"print_fmt_rcu_grace_period_init\00", align 1
@___asan_gen_.279 = private unnamed_addr constant [28 x i8] c"event_rcu_grace_period_init\00", align 1
@___asan_gen_.282 = private unnamed_addr constant [40 x i8] c"trace_event_fields_rcu_exp_grace_period\00", align 1
@___asan_gen_.285 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_rcu_exp_grace_period\00", align 1
@___asan_gen_.288 = private unnamed_addr constant [31 x i8] c"print_fmt_rcu_exp_grace_period\00", align 1
@___asan_gen_.291 = private unnamed_addr constant [27 x i8] c"event_rcu_exp_grace_period\00", align 1
@___asan_gen_.294 = private unnamed_addr constant [39 x i8] c"trace_event_fields_rcu_exp_funnel_lock\00", align 1
@___asan_gen_.297 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_rcu_exp_funnel_lock\00", align 1
@___asan_gen_.300 = private unnamed_addr constant [30 x i8] c"print_fmt_rcu_exp_funnel_lock\00", align 1
@___asan_gen_.303 = private unnamed_addr constant [26 x i8] c"event_rcu_exp_funnel_lock\00", align 1
@___asan_gen_.306 = private unnamed_addr constant [33 x i8] c"trace_event_fields_rcu_nocb_wake\00", align 1
@___asan_gen_.309 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_rcu_nocb_wake\00", align 1
@___asan_gen_.312 = private unnamed_addr constant [24 x i8] c"print_fmt_rcu_nocb_wake\00", align 1
@___asan_gen_.315 = private unnamed_addr constant [20 x i8] c"event_rcu_nocb_wake\00", align 1
@___asan_gen_.318 = private unnamed_addr constant [36 x i8] c"trace_event_fields_rcu_preempt_task\00", align 1
@___asan_gen_.321 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_rcu_preempt_task\00", align 1
@___asan_gen_.324 = private unnamed_addr constant [27 x i8] c"print_fmt_rcu_preempt_task\00", align 1
@___asan_gen_.327 = private unnamed_addr constant [23 x i8] c"event_rcu_preempt_task\00", align 1
@___asan_gen_.330 = private unnamed_addr constant [45 x i8] c"trace_event_fields_rcu_unlock_preempted_task\00", align 1
@___asan_gen_.333 = private unnamed_addr constant [49 x i8] c"trace_event_type_funcs_rcu_unlock_preempted_task\00", align 1
@___asan_gen_.336 = private unnamed_addr constant [36 x i8] c"print_fmt_rcu_unlock_preempted_task\00", align 1
@___asan_gen_.339 = private unnamed_addr constant [32 x i8] c"event_rcu_unlock_preempted_task\00", align 1
@___asan_gen_.341 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 339, i32 1 }
@___asan_gen_.342 = private unnamed_addr constant [46 x i8] c"trace_event_fields_rcu_quiescent_state_report\00", align 1
@___asan_gen_.345 = private unnamed_addr constant [50 x i8] c"trace_event_type_funcs_rcu_quiescent_state_report\00", align 1
@___asan_gen_.348 = private unnamed_addr constant [37 x i8] c"print_fmt_rcu_quiescent_state_report\00", align 1
@___asan_gen_.351 = private unnamed_addr constant [33 x i8] c"event_rcu_quiescent_state_report\00", align 1
@___asan_gen_.354 = private unnamed_addr constant [27 x i8] c"trace_event_fields_rcu_fqs\00", align 1
@___asan_gen_.357 = private unnamed_addr constant [31 x i8] c"trace_event_type_funcs_rcu_fqs\00", align 1
@___asan_gen_.360 = private unnamed_addr constant [18 x i8] c"print_fmt_rcu_fqs\00", align 1
@___asan_gen_.363 = private unnamed_addr constant [14 x i8] c"event_rcu_fqs\00", align 1
@___asan_gen_.366 = private unnamed_addr constant [37 x i8] c"trace_event_fields_rcu_stall_warning\00", align 1
@___asan_gen_.369 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_rcu_stall_warning\00", align 1
@___asan_gen_.372 = private unnamed_addr constant [28 x i8] c"print_fmt_rcu_stall_warning\00", align 1
@___asan_gen_.375 = private unnamed_addr constant [24 x i8] c"event_rcu_stall_warning\00", align 1
@___asan_gen_.378 = private unnamed_addr constant [31 x i8] c"trace_event_fields_rcu_dyntick\00", align 1
@___asan_gen_.381 = private unnamed_addr constant [35 x i8] c"trace_event_type_funcs_rcu_dyntick\00", align 1
@___asan_gen_.384 = private unnamed_addr constant [22 x i8] c"print_fmt_rcu_dyntick\00", align 1
@___asan_gen_.387 = private unnamed_addr constant [18 x i8] c"event_rcu_dyntick\00", align 1
@___asan_gen_.390 = private unnamed_addr constant [32 x i8] c"trace_event_fields_rcu_callback\00", align 1
@___asan_gen_.393 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_rcu_callback\00", align 1
@___asan_gen_.396 = private unnamed_addr constant [23 x i8] c"print_fmt_rcu_callback\00", align 1
@___asan_gen_.399 = private unnamed_addr constant [19 x i8] c"event_rcu_callback\00", align 1
@___asan_gen_.402 = private unnamed_addr constant [35 x i8] c"trace_event_fields_rcu_segcb_stats\00", align 1
@___asan_gen_.405 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_rcu_segcb_stats\00", align 1
@___asan_gen_.408 = private unnamed_addr constant [26 x i8] c"print_fmt_rcu_segcb_stats\00", align 1
@___asan_gen_.411 = private unnamed_addr constant [22 x i8] c"event_rcu_segcb_stats\00", align 1
@___asan_gen_.414 = private unnamed_addr constant [39 x i8] c"trace_event_fields_rcu_kvfree_callback\00", align 1
@___asan_gen_.417 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_rcu_kvfree_callback\00", align 1
@___asan_gen_.420 = private unnamed_addr constant [30 x i8] c"print_fmt_rcu_kvfree_callback\00", align 1
@___asan_gen_.423 = private unnamed_addr constant [26 x i8] c"event_rcu_kvfree_callback\00", align 1
@___asan_gen_.426 = private unnamed_addr constant [35 x i8] c"trace_event_fields_rcu_batch_start\00", align 1
@___asan_gen_.429 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_rcu_batch_start\00", align 1
@___asan_gen_.432 = private unnamed_addr constant [26 x i8] c"print_fmt_rcu_batch_start\00", align 1
@___asan_gen_.435 = private unnamed_addr constant [22 x i8] c"event_rcu_batch_start\00", align 1
@___asan_gen_.438 = private unnamed_addr constant [39 x i8] c"trace_event_fields_rcu_invoke_callback\00", align 1
@___asan_gen_.441 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_rcu_invoke_callback\00", align 1
@___asan_gen_.444 = private unnamed_addr constant [30 x i8] c"print_fmt_rcu_invoke_callback\00", align 1
@___asan_gen_.447 = private unnamed_addr constant [26 x i8] c"event_rcu_invoke_callback\00", align 1
@___asan_gen_.450 = private unnamed_addr constant [46 x i8] c"trace_event_fields_rcu_invoke_kvfree_callback\00", align 1
@___asan_gen_.453 = private unnamed_addr constant [50 x i8] c"trace_event_type_funcs_rcu_invoke_kvfree_callback\00", align 1
@___asan_gen_.456 = private unnamed_addr constant [37 x i8] c"print_fmt_rcu_invoke_kvfree_callback\00", align 1
@___asan_gen_.459 = private unnamed_addr constant [33 x i8] c"event_rcu_invoke_kvfree_callback\00", align 1
@___asan_gen_.462 = private unnamed_addr constant [50 x i8] c"trace_event_fields_rcu_invoke_kfree_bulk_callback\00", align 1
@___asan_gen_.465 = private unnamed_addr constant [54 x i8] c"trace_event_type_funcs_rcu_invoke_kfree_bulk_callback\00", align 1
@___asan_gen_.468 = private unnamed_addr constant [41 x i8] c"print_fmt_rcu_invoke_kfree_bulk_callback\00", align 1
@___asan_gen_.471 = private unnamed_addr constant [37 x i8] c"event_rcu_invoke_kfree_bulk_callback\00", align 1
@___asan_gen_.474 = private unnamed_addr constant [33 x i8] c"trace_event_fields_rcu_batch_end\00", align 1
@___asan_gen_.477 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_rcu_batch_end\00", align 1
@___asan_gen_.480 = private unnamed_addr constant [24 x i8] c"print_fmt_rcu_batch_end\00", align 1
@___asan_gen_.483 = private unnamed_addr constant [20 x i8] c"event_rcu_batch_end\00", align 1
@___asan_gen_.486 = private unnamed_addr constant [36 x i8] c"trace_event_fields_rcu_torture_read\00", align 1
@___asan_gen_.489 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_rcu_torture_read\00", align 1
@___asan_gen_.492 = private unnamed_addr constant [27 x i8] c"print_fmt_rcu_torture_read\00", align 1
@___asan_gen_.495 = private unnamed_addr constant [23 x i8] c"event_rcu_torture_read\00", align 1
@___asan_gen_.498 = private unnamed_addr constant [31 x i8] c"trace_event_fields_rcu_barrier\00", align 1
@___asan_gen_.501 = private unnamed_addr constant [35 x i8] c"trace_event_type_funcs_rcu_barrier\00", align 1
@___asan_gen_.504 = private unnamed_addr constant [22 x i8] c"print_fmt_rcu_barrier\00", align 1
@___asan_gen_.507 = private unnamed_addr constant [18 x i8] c"event_rcu_barrier\00", align 1
@___asan_gen_.510 = private unnamed_addr constant [22 x i8] c"rcu_normal_after_boot\00", align 1
@___asan_gen_.512 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 59, i32 12 }
@___asan_gen_.513 = private unnamed_addr constant [19 x i8] c"rcu_sched_lock_map\00", align 1
@___asan_gen_.515 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 264, i32 20 }
@___asan_gen_.516 = private unnamed_addr constant [22 x i8] c"rcu_expedited_nesting\00", align 1
@___asan_gen_.518 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 147, i32 17 }
@___asan_gen_.519 = private unnamed_addr constant [13 x i8] c"rcu_lock_key\00", align 1
@___asan_gen_.521 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 245, i32 30 }
@___asan_gen_.524 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 247, i32 10 }
@___asan_gen_.525 = private unnamed_addr constant [13 x i8] c"rcu_lock_map\00", align 1
@___asan_gen_.527 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 246, i32 20 }
@___asan_gen_.528 = private unnamed_addr constant [16 x i8] c"rcu_bh_lock_key\00", align 1
@___asan_gen_.530 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 254, i32 30 }
@___asan_gen_.533 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 256, i32 10 }
@___asan_gen_.534 = private unnamed_addr constant [16 x i8] c"rcu_bh_lock_map\00", align 1
@___asan_gen_.536 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 255, i32 20 }
@___asan_gen_.537 = private unnamed_addr constant [19 x i8] c"rcu_sched_lock_key\00", align 1
@___asan_gen_.539 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 263, i32 30 }
@___asan_gen_.542 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 265, i32 10 }
@___asan_gen_.543 = private unnamed_addr constant [17 x i8] c"rcu_callback_key\00", align 1
@___asan_gen_.545 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 273, i32 30 }
@___asan_gen_.548 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 275, i32 2 }
@___asan_gen_.549 = private unnamed_addr constant [17 x i8] c"rcu_callback_map\00", align 1
@___asan_gen_.551 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 274, i32 20 }
@___asan_gen_.554 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 381, i32 4 }
@___asan_gen_.555 = private unnamed_addr constant [20 x i8] c"rcuhead_debug_descr\00", align 1
@___asan_gen_.557 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 461, i32 30 }
@___asan_gen_.560 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 462, i32 10 }
@___asan_gen_.563 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 488, i32 2 }
@___asan_gen_.564 = private unnamed_addr constant [14 x i8] c"rcu_self_test\00", align 1
@___asan_gen_.566 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 515, i32 13 }
@___asan_gen_.575 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 551, i32 2 }
@___asan_gen_.579 = private unnamed_addr constant [10 x i8] c"rcu_tasks\00", align 1
@___asan_gen_.584 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 900, i32 48 }
@___asan_gen_.585 = private unnamed_addr constant [20 x i8] c"tasks_rcu_exit_srcu\00", align 1
@___asan_gen_.591 = private unnamed_addr constant [15 x i8] c"rcu_tasks_rude\00", align 1
@___asan_gen_.594 = private unnamed_addr constant [19 x i8] c"rcu_lock_trace_key\00", align 1
@___asan_gen_.596 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1105, i32 30 }
@___asan_gen_.599 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1107, i32 2 }
@___asan_gen_.600 = private unnamed_addr constant [19 x i8] c"rcu_trace_lock_map\00", align 1
@___asan_gen_.602 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1106, i32 20 }
@___asan_gen_.606 = private unnamed_addr constant [23 x i8] c"trc_n_readers_need_end\00", align 1
@___asan_gen_.608 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1113, i32 17 }
@___asan_gen_.609 = private unnamed_addr constant [19 x i8] c"rcu_tasks_trace_iw\00", align 1
@___asan_gen_.611 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1137, i32 8 }
@___asan_gen_.612 = private unnamed_addr constant [16 x i8] c"rcu_tasks_trace\00", align 1
@___asan_gen_.620 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1562, i32 2 }
@___asan_gen_.623 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1607, i32 15 }
@___asan_gen_.624 = private unnamed_addr constant [27 x i8] c"n_heavy_reader_ofl_updates\00", align 1
@___asan_gen_.626 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1123, i32 22 }
@___asan_gen_.627 = private unnamed_addr constant [23 x i8] c"n_heavy_reader_updates\00", align 1
@___asan_gen_.629 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1122, i32 22 }
@___asan_gen_.630 = private unnamed_addr constant [24 x i8] c"n_heavy_reader_attempts\00", align 1
@___asan_gen_.632 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1121, i32 22 }
@___asan_gen_.641 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 594, i32 3 }
@___asan_gen_.647 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 596, i32 3 }
@___asan_gen_.653 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 598, i32 3 }
@___asan_gen_.659 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 600, i32 3 }
@___asan_gen_.665 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 602, i32 3 }
@___asan_gen_.674 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 27, i32 1 }
@___asan_gen_.689 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 69, i32 1 }
@___asan_gen_.710 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 107, i32 1 }
@___asan_gen_.719 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 147, i32 1 }
@___asan_gen_.722 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 192, i32 1 }
@___asan_gen_.725 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 224, i32 1 }
@___asan_gen_.734 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 284, i32 1 }
@___asan_gen_.740 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 312, i32 1 }
@___asan_gen_.749 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 368, i32 1 }
@___asan_gen_.755 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 411, i32 1 }
@___asan_gen_.761 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 444, i32 1 }
@___asan_gen_.776 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 480, i32 1 }
@___asan_gen_.791 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 512, i32 1 }
@___asan_gen_.806 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 537, i32 1 }
@___asan_gen_.812 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 571, i32 1 }
@___asan_gen_.818 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 604, i32 1 }
@___asan_gen_.821 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 631, i32 1 }
@___asan_gen_.824 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 660, i32 1 }
@___asan_gen_.836 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 688, i32 1 }
@___asan_gen_.857 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 721, i32 1 }
@___asan_gen_.884 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 810, i32 1 }
@___asan_gen_.889 = private unnamed_addr constant [30 x i8] c"../include/linux/completion.h\00", align 1
@___asan_gen_.890 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.889, i32 87, i32 2 }
@___asan_gen_.895 = private unnamed_addr constant [30 x i8] c"../include/trace/events/rcu.h\00", align 1
@___asan_gen_.896 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.895, i32 763, i32 1 }
@___asan_gen_.898 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.899 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.898, i32 108, i32 2 }
@___asan_gen_.900 = private unnamed_addr constant [5 x i8] c"head\00", align 1
@___asan_gen_.902 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 535, i32 25 }
@___asan_gen_.903 = private unnamed_addr constant [6 x i8] c"shead\00", align 1
@___asan_gen_.905 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 536, i32 25 }
@___asan_gen_.906 = private unnamed_addr constant [11 x i8] c"early_srcu\00", align 1
@___asan_gen_.909 = private unnamed_addr constant [18 x i8] c"early_srcu_cookie\00", align 1
@___asan_gen_.911 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 527, i32 22 }
@___asan_gen_.912 = private unnamed_addr constant [22 x i8] c"rcu_self_test_counter\00", align 1
@___asan_gen_.914 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 518, i32 12 }
@___asan_gen_.923 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 523, i32 2 }
@___asan_gen_.934 = private constant [23 x i8] c"../kernel/rcu/update.c\00", align 1
@___asan_gen_.935 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.934, i32 526, i32 1 }
@___asan_gen_.936 = private unnamed_addr constant [19 x i8] c"rcu_task_cb_adjust\00", align 1
@___asan_gen_.945 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 308, i32 4 }
@___asan_gen_.951 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.980, i32 695, i32 2 }
@___asan_gen_.960 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 225, i32 3 }
@___asan_gen_.966 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 244, i32 4 }
@___asan_gen_.967 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.972 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 248, i32 3 }
@___asan_gen_.978 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 254, i32 2 }
@___asan_gen_.980 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.981 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.980, i32 723, i32 2 }
@___asan_gen_.999 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 821, i32 1 }
@___asan_gen_.1002 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 611, i32 2 }
@___asan_gen_.1005 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 322, i32 2 }
@___asan_gen_.1007 = private unnamed_addr constant [20 x i8] c"../kernel/rcu/rcu.h\00", align 1
@___asan_gen_.1008 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1007, i32 59, i32 2 }
@___asan_gen_.1023 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 572, i32 2 }
@___asan_gen_.1026 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 207, i32 10 }
@___asan_gen_.1027 = private unnamed_addr constant [25 x i8] c"rcu_tasks_gp_state_names\00", align 1
@___asan_gen_.1029 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 170, i32 27 }
@___asan_gen_.1032 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 171, i32 2 }
@___asan_gen_.1035 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 172, i32 2 }
@___asan_gen_.1038 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 173, i32 2 }
@___asan_gen_.1041 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 174, i32 2 }
@___asan_gen_.1044 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 175, i32 2 }
@___asan_gen_.1047 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 176, i32 2 }
@___asan_gen_.1050 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 177, i32 2 }
@___asan_gen_.1053 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 178, i32 2 }
@___asan_gen_.1056 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 179, i32 2 }
@___asan_gen_.1059 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 180, i32 2 }
@___asan_gen_.1062 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 181, i32 2 }
@___asan_gen_.1065 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 182, i32 2 }
@___asan_gen_.1077 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 135, i32 1 }
@___asan_gen_.1095 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 958, i32 1 }
@___asan_gen_.1096 = private unnamed_addr constant [9 x i8] c"trc_wait\00", align 1
@___asan_gen_.1101 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1114, i32 8 }
@___asan_gen_.1119 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1126, i32 1 }
@___asan_gen_.1120 = private unnamed_addr constant [6 x i8] c"tests\00", align 1
@___asan_gen_.1122 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1636, i32 35 }
@___asan_gen_.1131 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1690, i32 4 }
@___asan_gen_.1134 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1638, i32 11 }
@___asan_gen_.1137 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1643, i32 11 }
@___asan_gen_.1140 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1648, i32 11 }
@___asan_gen_.1149 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 773, i32 3 }
@___asan_gen_.1158 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 777, i32 2 }
@___asan_gen_.1161 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 537, i32 6 }
@___asan_gen_.1164 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 538, i32 6 }
@___asan_gen_.1173 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 423, i32 4 }
@___asan_gen_.1179 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 432, i32 4 }
@___asan_gen_.1182 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1305, i32 4 }
@___asan_gen_.1191 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1451, i32 4 }
@___asan_gen_.1200 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1393, i32 3 }
@___asan_gen_.1209 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1398, i32 3 }
@___asan_gen_.1218 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1402, i32 3 }
@___asan_gen_.1227 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1420, i32 4 }
@___asan_gen_.1236 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1505, i32 4 }
@___asan_gen_.1242 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1507, i32 3 }
@___asan_gen_.1251 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1666, i32 2 }
@___asan_gen_.1260 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 1659, i32 2 }
@___asan_gen_.1269 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 552, i32 3 }
@___asan_gen_.1275 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 555, i32 2 }
@___asan_gen_.1281 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 558, i32 2 }
@___asan_gen_.1282 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.1285 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.1286 = private unnamed_addr constant [22 x i8] c"../kernel/rcu/tasks.h\00", align 1
@___asan_gen_.1287 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1286, i32 561, i32 2 }
@llvm.compiler.used = appending global [565 x ptr] [ptr @__UNIQUE_ID_rcu_cpu_stall_ftrace_dumptype396, ptr @__UNIQUE_ID_rcu_cpu_stall_suppress_at_boottype399, ptr @__UNIQUE_ID_rcu_cpu_stall_suppresstype397, ptr @__UNIQUE_ID_rcu_cpu_stall_timeouttype398, ptr @__UNIQUE_ID_rcu_expeditedtype389, ptr @__UNIQUE_ID_rcu_normal_after_boottype391, ptr @__UNIQUE_ID_rcu_normaltype390, ptr @__UNIQUE_ID_rcu_self_testtype400, ptr @__UNIQUE_ID_rcu_task_collapse_limtype412, ptr @__UNIQUE_ID_rcu_task_contend_limtype411, ptr @__UNIQUE_ID_rcu_task_enqueue_limtype410, ptr @__UNIQUE_ID_rcu_task_ipi_delaytype408, ptr @__UNIQUE_ID_rcu_task_stall_timeouttype409, ptr @__bpf_trace_tp_map_rcu_barrier, ptr @__bpf_trace_tp_map_rcu_batch_end, ptr @__bpf_trace_tp_map_rcu_batch_start, ptr @__bpf_trace_tp_map_rcu_callback, ptr @__bpf_trace_tp_map_rcu_dyntick, ptr @__bpf_trace_tp_map_rcu_exp_funnel_lock, ptr @__bpf_trace_tp_map_rcu_exp_grace_period, ptr @__bpf_trace_tp_map_rcu_fqs, ptr @__bpf_trace_tp_map_rcu_future_grace_period, ptr @__bpf_trace_tp_map_rcu_grace_period, ptr @__bpf_trace_tp_map_rcu_grace_period_init, ptr @__bpf_trace_tp_map_rcu_invoke_callback, ptr @__bpf_trace_tp_map_rcu_invoke_kfree_bulk_callback, ptr @__bpf_trace_tp_map_rcu_invoke_kvfree_callback, ptr @__bpf_trace_tp_map_rcu_kvfree_callback, ptr @__bpf_trace_tp_map_rcu_nocb_wake, ptr @__bpf_trace_tp_map_rcu_preempt_task, ptr @__bpf_trace_tp_map_rcu_quiescent_state_report, ptr @__bpf_trace_tp_map_rcu_segcb_stats, ptr @__bpf_trace_tp_map_rcu_stall_warning, ptr @__bpf_trace_tp_map_rcu_torture_read, ptr @__bpf_trace_tp_map_rcu_unlock_preempted_task, ptr @__bpf_trace_tp_map_rcu_utilization, ptr @__event_rcu_barrier, ptr @__event_rcu_batch_end, ptr @__event_rcu_batch_start, ptr @__event_rcu_callback, ptr @__event_rcu_dyntick, ptr @__event_rcu_exp_funnel_lock, ptr @__event_rcu_exp_grace_period, ptr @__event_rcu_fqs, ptr @__event_rcu_future_grace_period, ptr @__event_rcu_grace_period, ptr @__event_rcu_grace_period_init, ptr @__event_rcu_invoke_callback, ptr @__event_rcu_invoke_kfree_bulk_callback, ptr @__event_rcu_invoke_kvfree_callback, ptr @__event_rcu_kvfree_callback, ptr @__event_rcu_nocb_wake, ptr @__event_rcu_preempt_task, ptr @__event_rcu_quiescent_state_report, ptr @__event_rcu_segcb_stats, ptr @__event_rcu_stall_warning, ptr @__event_rcu_torture_read, ptr @__event_rcu_unlock_preempted_task, ptr @__event_rcu_utilization, ptr @__initcall__kmod_update__394_240_rcu_set_runtime_mode1, ptr @__initcall__kmod_update__402_579_rcu_verify_early_boot_tests7, ptr @__initcall__kmod_update__545_1700_rcu_tasks_verify_self_tests7, ptr @__ksymtab___wait_rcu_gp, ptr @__ksymtab_call_rcu_tasks, ptr @__ksymtab_call_rcu_tasks_rude, ptr @__ksymtab_call_rcu_tasks_trace, ptr @__ksymtab_debug_lockdep_rcu_enabled, ptr @__ksymtab_destroy_rcu_head, ptr @__ksymtab_destroy_rcu_head_on_stack, ptr @__ksymtab_do_trace_rcu_torture_read, ptr @__ksymtab_init_rcu_head, ptr @__ksymtab_init_rcu_head_on_stack, ptr @__ksymtab_rcu_barrier_tasks, ptr @__ksymtab_rcu_barrier_tasks_rude, ptr @__ksymtab_rcu_barrier_tasks_trace, ptr @__ksymtab_rcu_bh_lock_map, ptr @__ksymtab_rcu_callback_map, ptr @__ksymtab_rcu_cpu_stall_suppress, ptr @__ksymtab_rcu_cpu_stall_suppress_at_boot, ptr @__ksymtab_rcu_expedite_gp, ptr @__ksymtab_rcu_gp_is_expedited, ptr @__ksymtab_rcu_gp_is_normal, ptr @__ksymtab_rcu_inkernel_boot_has_ended, ptr @__ksymtab_rcu_lock_map, ptr @__ksymtab_rcu_read_lock_any_held, ptr @__ksymtab_rcu_read_lock_bh_held, ptr @__ksymtab_rcu_read_lock_held, ptr @__ksymtab_rcu_read_lock_sched_held, ptr @__ksymtab_rcu_read_unlock_trace_special, ptr @__ksymtab_rcu_sched_lock_map, ptr @__ksymtab_rcu_trace_lock_map, ptr @__ksymtab_rcu_unexpedite_gp, ptr @__ksymtab_rcuhead_debug_descr, ptr @__ksymtab_rcutorture_sched_setaffinity, ptr @__ksymtab_show_rcu_tasks_classic_gp_kthread, ptr @__ksymtab_show_rcu_tasks_rude_gp_kthread, ptr @__ksymtab_show_rcu_tasks_trace_gp_kthread, ptr @__ksymtab_synchronize_rcu_tasks, ptr @__ksymtab_synchronize_rcu_tasks_rude, ptr @__ksymtab_synchronize_rcu_tasks_trace, ptr @__ksymtab_wakeme_after_rcu, ptr @__param_rcu_cpu_stall_ftrace_dump, ptr @__param_rcu_cpu_stall_suppress, ptr @__param_rcu_cpu_stall_suppress_at_boot, ptr @__param_rcu_cpu_stall_timeout, ptr @__param_rcu_expedited, ptr @__param_rcu_normal, ptr @__param_rcu_normal_after_boot, ptr @__param_rcu_self_test, ptr @__param_rcu_task_collapse_lim, ptr @__param_rcu_task_contend_lim, ptr @__param_rcu_task_enqueue_lim, ptr @__param_rcu_task_ipi_delay, ptr @__param_rcu_task_stall_timeout, ptr @__tracepoint_ptr_rcu_barrier, ptr @__tracepoint_ptr_rcu_batch_end, ptr @__tracepoint_ptr_rcu_batch_start, ptr @__tracepoint_ptr_rcu_callback, ptr @__tracepoint_ptr_rcu_dyntick, ptr @__tracepoint_ptr_rcu_exp_funnel_lock, ptr @__tracepoint_ptr_rcu_exp_grace_period, ptr @__tracepoint_ptr_rcu_fqs, ptr @__tracepoint_ptr_rcu_future_grace_period, ptr @__tracepoint_ptr_rcu_grace_period, ptr @__tracepoint_ptr_rcu_grace_period_init, ptr @__tracepoint_ptr_rcu_invoke_callback, ptr @__tracepoint_ptr_rcu_invoke_kfree_bulk_callback, ptr @__tracepoint_ptr_rcu_invoke_kvfree_callback, ptr @__tracepoint_ptr_rcu_kvfree_callback, ptr @__tracepoint_ptr_rcu_nocb_wake, ptr @__tracepoint_ptr_rcu_preempt_task, ptr @__tracepoint_ptr_rcu_quiescent_state_report, ptr @__tracepoint_ptr_rcu_segcb_stats, ptr @__tracepoint_ptr_rcu_stall_warning, ptr @__tracepoint_ptr_rcu_torture_read, ptr @__tracepoint_ptr_rcu_unlock_preempted_task, ptr @__tracepoint_ptr_rcu_utilization, ptr @__tracepoint_rcu_barrier, ptr @__tracepoint_rcu_batch_end, ptr @__tracepoint_rcu_batch_start, ptr @__tracepoint_rcu_callback, ptr @__tracepoint_rcu_dyntick, ptr @__tracepoint_rcu_exp_funnel_lock, ptr @__tracepoint_rcu_exp_grace_period, ptr @__tracepoint_rcu_fqs, ptr @__tracepoint_rcu_future_grace_period, ptr @__tracepoint_rcu_grace_period, ptr @__tracepoint_rcu_grace_period_init, ptr @__tracepoint_rcu_invoke_callback, ptr @__tracepoint_rcu_invoke_kfree_bulk_callback, ptr @__tracepoint_rcu_invoke_kvfree_callback, ptr @__tracepoint_rcu_kvfree_callback, ptr @__tracepoint_rcu_nocb_wake, ptr @__tracepoint_rcu_preempt_task, ptr @__tracepoint_rcu_quiescent_state_report, ptr @__tracepoint_rcu_segcb_stats, ptr @__tracepoint_rcu_stall_warning, ptr @__tracepoint_rcu_torture_read, ptr @__tracepoint_rcu_unlock_preempted_task, ptr @__tracepoint_rcu_utilization, ptr @call_rcu_tasks_generic._entry, ptr @call_rcu_tasks_generic._entry_ptr, ptr @cblist_init_generic._entry, ptr @cblist_init_generic._entry.125, ptr @cblist_init_generic._entry_ptr, ptr @cblist_init_generic._entry_ptr.127, ptr @check_all_holdout_tasks_trace._entry, ptr @check_all_holdout_tasks_trace._entry_ptr, ptr @check_holdout_task._entry, ptr @check_holdout_task._entry.181, ptr @check_holdout_task._entry_ptr, ptr @check_holdout_task._entry_ptr.183, ptr @event_class_rcu_barrier, ptr @event_class_rcu_batch_end, ptr @event_class_rcu_batch_start, ptr @event_class_rcu_callback, ptr @event_class_rcu_dyntick, ptr @event_class_rcu_exp_funnel_lock, ptr @event_class_rcu_exp_grace_period, ptr @event_class_rcu_fqs, ptr @event_class_rcu_future_grace_period, ptr @event_class_rcu_grace_period, ptr @event_class_rcu_grace_period_init, ptr @event_class_rcu_invoke_callback, ptr @event_class_rcu_invoke_kfree_bulk_callback, ptr @event_class_rcu_invoke_kvfree_callback, ptr @event_class_rcu_kvfree_callback, ptr @event_class_rcu_nocb_wake, ptr @event_class_rcu_preempt_task, ptr @event_class_rcu_quiescent_state_report, ptr @event_class_rcu_segcb_stats, ptr @event_class_rcu_stall_warning, ptr @event_class_rcu_torture_read, ptr @event_class_rcu_unlock_preempted_task, ptr @event_class_rcu_utilization, ptr @event_rcu_barrier, ptr @event_rcu_batch_end, ptr @event_rcu_batch_start, ptr @event_rcu_callback, ptr @event_rcu_dyntick, ptr @event_rcu_exp_funnel_lock, ptr @event_rcu_exp_grace_period, ptr @event_rcu_fqs, ptr @event_rcu_future_grace_period, ptr @event_rcu_grace_period, ptr @event_rcu_grace_period_init, ptr @event_rcu_invoke_callback, ptr @event_rcu_invoke_kfree_bulk_callback, ptr @event_rcu_invoke_kvfree_callback, ptr @event_rcu_kvfree_callback, ptr @event_rcu_nocb_wake, ptr @event_rcu_preempt_task, ptr @event_rcu_quiescent_state_report, ptr @event_rcu_segcb_stats, ptr @event_rcu_stall_warning, ptr @event_rcu_torture_read, ptr @event_rcu_unlock_preempted_task, ptr @event_rcu_utilization, ptr @rcu_early_boot_tests._entry, ptr @rcu_early_boot_tests._entry_ptr, ptr @rcu_tasks_bootup_oddness._entry, ptr @rcu_tasks_bootup_oddness._entry.222, ptr @rcu_tasks_bootup_oddness._entry.225, ptr @rcu_tasks_bootup_oddness._entry.228, ptr @rcu_tasks_bootup_oddness._entry_ptr, ptr @rcu_tasks_bootup_oddness._entry_ptr.224, ptr @rcu_tasks_bootup_oddness._entry_ptr.227, ptr @rcu_tasks_bootup_oddness._entry_ptr.230, ptr @rcu_tasks_initiate_self_tests._entry, ptr @rcu_tasks_initiate_self_tests._entry_ptr, ptr @rcu_tasks_need_gpcb._entry, ptr @rcu_tasks_need_gpcb._entry.190, ptr @rcu_tasks_need_gpcb._entry_ptr, ptr @rcu_tasks_need_gpcb._entry_ptr.192, ptr @rcu_tasks_trace_postgp._entry, ptr @rcu_tasks_trace_postgp._entry.213, ptr @rcu_tasks_trace_postgp._entry_ptr, ptr @rcu_tasks_trace_postgp._entry_ptr.215, ptr @rcu_tasks_verify_self_tests._entry, ptr @rcu_tasks_verify_self_tests._entry_ptr, ptr @rcupdate_announce_bootup_oddness._entry, ptr @rcupdate_announce_bootup_oddness._entry.19, ptr @rcupdate_announce_bootup_oddness._entry.22, ptr @rcupdate_announce_bootup_oddness._entry.25, ptr @rcupdate_announce_bootup_oddness._entry.28, ptr @rcupdate_announce_bootup_oddness._entry_ptr, ptr @rcupdate_announce_bootup_oddness._entry_ptr.21, ptr @rcupdate_announce_bootup_oddness._entry_ptr.24, ptr @rcupdate_announce_bootup_oddness._entry_ptr.27, ptr @rcupdate_announce_bootup_oddness._entry_ptr.30, ptr @show_rcu_tasks_generic_gp_kthread._entry, ptr @show_rcu_tasks_generic_gp_kthread._entry_ptr, ptr @show_stalled_ipi_trace._entry, ptr @show_stalled_ipi_trace._entry_ptr, ptr @show_stalled_task_trace._entry, ptr @show_stalled_task_trace._entry.200, ptr @show_stalled_task_trace._entry.204, ptr @show_stalled_task_trace._entry_ptr, ptr @show_stalled_task_trace._entry_ptr.202, ptr @show_stalled_task_trace._entry_ptr.206, ptr @test_callback._entry, ptr @test_callback._entry_ptr, ptr @test_rcu_tasks_callback._entry, ptr @test_rcu_tasks_callback._entry_ptr, ptr @str__rcu__trace_system_name, ptr @trace_event_fields_rcu_utilization, ptr @trace_event_type_funcs_rcu_utilization, ptr @print_fmt_rcu_utilization, ptr @trace_event_fields_rcu_grace_period, ptr @trace_event_type_funcs_rcu_grace_period, ptr @print_fmt_rcu_grace_period, ptr @trace_event_fields_rcu_future_grace_period, ptr @trace_event_type_funcs_rcu_future_grace_period, ptr @print_fmt_rcu_future_grace_period, ptr @trace_event_fields_rcu_grace_period_init, ptr @trace_event_type_funcs_rcu_grace_period_init, ptr @print_fmt_rcu_grace_period_init, ptr @trace_event_fields_rcu_exp_grace_period, ptr @trace_event_type_funcs_rcu_exp_grace_period, ptr @print_fmt_rcu_exp_grace_period, ptr @trace_event_fields_rcu_exp_funnel_lock, ptr @trace_event_type_funcs_rcu_exp_funnel_lock, ptr @print_fmt_rcu_exp_funnel_lock, ptr @trace_event_fields_rcu_nocb_wake, ptr @trace_event_type_funcs_rcu_nocb_wake, ptr @print_fmt_rcu_nocb_wake, ptr @trace_event_fields_rcu_preempt_task, ptr @trace_event_type_funcs_rcu_preempt_task, ptr @print_fmt_rcu_preempt_task, ptr @trace_event_fields_rcu_unlock_preempted_task, ptr @trace_event_type_funcs_rcu_unlock_preempted_task, ptr @print_fmt_rcu_unlock_preempted_task, ptr @trace_event_fields_rcu_quiescent_state_report, ptr @trace_event_type_funcs_rcu_quiescent_state_report, ptr @print_fmt_rcu_quiescent_state_report, ptr @trace_event_fields_rcu_fqs, ptr @trace_event_type_funcs_rcu_fqs, ptr @print_fmt_rcu_fqs, ptr @trace_event_fields_rcu_stall_warning, ptr @trace_event_type_funcs_rcu_stall_warning, ptr @print_fmt_rcu_stall_warning, ptr @trace_event_fields_rcu_dyntick, ptr @trace_event_type_funcs_rcu_dyntick, ptr @print_fmt_rcu_dyntick, ptr @trace_event_fields_rcu_callback, ptr @trace_event_type_funcs_rcu_callback, ptr @print_fmt_rcu_callback, ptr @trace_event_fields_rcu_segcb_stats, ptr @trace_event_type_funcs_rcu_segcb_stats, ptr @print_fmt_rcu_segcb_stats, ptr @trace_event_fields_rcu_kvfree_callback, ptr @trace_event_type_funcs_rcu_kvfree_callback, ptr @print_fmt_rcu_kvfree_callback, ptr @trace_event_fields_rcu_batch_start, ptr @trace_event_type_funcs_rcu_batch_start, ptr @print_fmt_rcu_batch_start, ptr @trace_event_fields_rcu_invoke_callback, ptr @trace_event_type_funcs_rcu_invoke_callback, ptr @print_fmt_rcu_invoke_callback, ptr @trace_event_fields_rcu_invoke_kvfree_callback, ptr @trace_event_type_funcs_rcu_invoke_kvfree_callback, ptr @print_fmt_rcu_invoke_kvfree_callback, ptr @trace_event_fields_rcu_invoke_kfree_bulk_callback, ptr @trace_event_type_funcs_rcu_invoke_kfree_bulk_callback, ptr @print_fmt_rcu_invoke_kfree_bulk_callback, ptr @trace_event_fields_rcu_batch_end, ptr @trace_event_type_funcs_rcu_batch_end, ptr @print_fmt_rcu_batch_end, ptr @trace_event_fields_rcu_torture_read, ptr @trace_event_type_funcs_rcu_torture_read, ptr @print_fmt_rcu_torture_read, ptr @trace_event_fields_rcu_barrier, ptr @trace_event_type_funcs_rcu_barrier, ptr @print_fmt_rcu_barrier, ptr @rcu_normal_after_boot, ptr @rcu_sched_lock_map, ptr @rcu_expedited_nesting, ptr @rcu_lock_key, ptr @.str, ptr @rcu_lock_map, ptr @rcu_bh_lock_key, ptr @.str.1, ptr @rcu_bh_lock_map, ptr @rcu_sched_lock_key, ptr @.str.2, ptr @rcu_callback_key, ptr @.str.3, ptr @rcu_callback_map, ptr @.str.4, ptr @rcuhead_debug_descr, ptr @.str.5, ptr @.str.6, ptr @rcu_self_test, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @rcu_tasks, ptr @.str.10, ptr @tasks_rcu_exit_srcu, ptr @.str.11, ptr @rcu_tasks_rude, ptr @rcu_lock_trace_key, ptr @.str.12, ptr @rcu_trace_lock_map, ptr @.str.13, ptr @trc_n_readers_need_end, ptr @rcu_tasks_trace_iw, ptr @rcu_tasks_trace, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @n_heavy_reader_ofl_updates, ptr @n_heavy_reader_updates, ptr @n_heavy_reader_attempts, ptr @.str.17, ptr @.str.18, ptr @.str.20, ptr @.str.23, ptr @.str.26, ptr @.str.29, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @init_completion.__key, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @early_boot_test_call_rcu.head, ptr @early_boot_test_call_rcu.shead, ptr @early_srcu, ptr @early_srcu_cookie, ptr @rcu_self_test_counter, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @rcu_task_cb_adjust, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @cblist_init_generic.__key, ptr @.str.121, ptr @cblist_init_generic.__key.122, ptr @.str.123, ptr @.str.126, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @rcu_tasks_gp_state_names, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165, ptr @trc_wait, ptr @.str.166, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @tests, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @.str.182, ptr @.str.184, ptr @.str.186, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.191, ptr @.str.194, ptr @.str.196, ptr @.str.197, ptr @.str.198, ptr @.str.199, ptr @.str.201, ptr @.str.203, ptr @.str.205, ptr @.str.208, ptr @.str.209, ptr @.str.210, ptr @.str.211, ptr @.str.212, ptr @.str.214, ptr @.str.216, ptr @.str.217, ptr @.str.218, ptr @.str.219, ptr @.str.220, ptr @.str.221, ptr @.str.223, ptr @.str.226, ptr @.str.229], section "llvm.metadata"
@0 = internal global [353 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__rcu__trace_system_name to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.231 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_utilization to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.234 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_utilization to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.237 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_utilization to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.240 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_utilization to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.243 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_grace_period to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.246 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_grace_period to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_grace_period to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.252 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_grace_period to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.255 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_future_grace_period to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.258 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_future_grace_period to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.261 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_future_grace_period to i32), i32 131, i32 192, i32 ptrtoint (ptr @___asan_gen_.264 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_future_grace_period to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_grace_period_init to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.270 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.719 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_grace_period_init to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.719 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_grace_period_init to i32), i32 98, i32 160, i32 ptrtoint (ptr @___asan_gen_.276 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.719 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_grace_period_init to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.279 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.719 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_exp_grace_period to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_exp_grace_period to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_exp_grace_period to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.288 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_exp_grace_period to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.291 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_exp_funnel_lock to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.294 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_exp_funnel_lock to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_exp_funnel_lock to i32), i32 81, i32 128, i32 ptrtoint (ptr @___asan_gen_.300 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_exp_funnel_lock to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.303 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_nocb_wake to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_nocb_wake to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.309 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_nocb_wake to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.312 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_nocb_wake to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.315 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_preempt_task to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.318 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_preempt_task to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.321 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_preempt_task to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.324 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_preempt_task to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.327 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_unlock_preempted_task to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.330 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.341 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_unlock_preempted_task to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.333 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.341 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_unlock_preempted_task to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.341 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_unlock_preempted_task to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.341 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_quiescent_state_report to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.342 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_quiescent_state_report to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_quiescent_state_report to i32), i32 131, i32 192, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_quiescent_state_report to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_fqs to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_fqs to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.357 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_fqs to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.360 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_fqs to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_stall_warning to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.366 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_stall_warning to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.369 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_stall_warning to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_stall_warning to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.375 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_dyntick to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.378 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_dyntick to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_dyntick to i32), i32 90, i32 128, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_dyntick to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.387 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_callback to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_callback to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_callback to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.396 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_callback to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.399 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_segcb_stats to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.402 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_segcb_stats to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_segcb_stats to i32), i32 253, i32 288, i32 ptrtoint (ptr @___asan_gen_.408 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_segcb_stats to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_kvfree_callback to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_kvfree_callback to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_kvfree_callback to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.420 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_kvfree_callback to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.423 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_batch_start to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.426 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_batch_start to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_batch_start to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.432 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_batch_start to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_invoke_callback to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.438 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.821 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_invoke_callback to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.821 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_invoke_callback to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.821 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_invoke_callback to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.447 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.821 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_invoke_kvfree_callback to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.450 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_invoke_kvfree_callback to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_invoke_kvfree_callback to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.456 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_invoke_kvfree_callback to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_invoke_kfree_bulk_callback to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_invoke_kfree_bulk_callback to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.465 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_invoke_kfree_bulk_callback to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.468 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_invoke_kfree_bulk_callback to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_batch_end to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.474 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_batch_end to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.477 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_batch_end to i32), i32 159, i32 192, i32 ptrtoint (ptr @___asan_gen_.480 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_batch_end to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.483 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_torture_read to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.486 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_torture_read to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.489 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_torture_read to i32), i32 100, i32 160, i32 ptrtoint (ptr @___asan_gen_.492 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_torture_read to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.495 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_rcu_barrier to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.498 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.884 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_rcu_barrier to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.501 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.884 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_rcu_barrier to i32), i32 87, i32 128, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.884 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_rcu_barrier to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.507 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.884 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_normal_after_boot to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.510 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.512 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_sched_lock_map to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.513 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_expedited_nesting to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.516 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.518 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_lock_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.519 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.521 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.524 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_lock_map to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.525 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bh_lock_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.528 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.533 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_bh_lock_map to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.534 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_sched_lock_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.537 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.542 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_callback_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.543 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_callback_map to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcuhead_debug_descr to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.555 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.557 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.563 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_self_test to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.564 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.566 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_early_boot_tests._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_tasks to i32), i32 344, i32 416, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tasks_rcu_exit_srcu to i32), i32 824, i32 1024, i32 ptrtoint (ptr @___asan_gen_.585 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1077 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_tasks_rude to i32), i32 344, i32 416, i32 ptrtoint (ptr @___asan_gen_.591 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_lock_trace_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.594 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.599 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_trace_lock_map to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.600 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trc_n_readers_need_end to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.606 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_tasks_trace_iw to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.609 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_tasks_trace to i32), i32 344, i32 416, i32 ptrtoint (ptr @___asan_gen_.612 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.620 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.620 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.623 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @n_heavy_reader_ofl_updates to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.624 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @n_heavy_reader_updates to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.627 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.629 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @n_heavy_reader_attempts to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.630 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcupdate_announce_bootup_oddness._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.641 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.641 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.641 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcupdate_announce_bootup_oddness._entry.19 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcupdate_announce_bootup_oddness._entry.22 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcupdate_announce_bootup_oddness._entry.25 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.659 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.659 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcupdate_announce_bootup_oddness._entry.28 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.719 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.719 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.719 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 114, i32 160, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.821 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.884 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.884 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.884 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_completion.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.967 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.890 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.890 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.899 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @early_boot_test_call_rcu.head to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.900 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @early_boot_test_call_rcu.shead to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.903 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.905 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @early_srcu to i32), i32 824, i32 1024, i32 ptrtoint (ptr @___asan_gen_.906 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.935 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @early_srcu_cookie to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.909 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.911 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_self_test_counter to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.912 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.914 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_callback._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.923 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.923 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.923 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.935 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.935 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.935 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.935 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_task_cb_adjust to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.936 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @call_rcu_tasks_generic._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.951 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.951 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cblist_init_generic._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cblist_init_generic.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.967 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cblist_init_generic.__key.122 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.967 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cblist_init_generic._entry.125 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.978 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.978 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.981 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.999 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1002 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_rcu_tasks_generic_gp_kthread._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1023 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1023 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1023 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1023 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1023 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1026 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_tasks_gp_state_names to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1027 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1029 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1032 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1035 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1038 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1041 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1044 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1047 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1050 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1053 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1056 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1059 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1065 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1077 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1077 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1077 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1077 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trc_wait to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1096 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1101 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1101 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tests to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1120 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1122 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_tasks_verify_self_tests._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1134 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1137 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_holdout_task._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1149 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1149 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1149 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_holdout_task._entry.181 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1158 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1158 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.184 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1158 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1161 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_tasks_need_gpcb._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1173 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_tasks_need_gpcb._entry.190 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1179 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1179 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_all_holdout_tasks_trace._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_stalled_task_trace._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_stalled_task_trace._entry.200 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1209 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1209 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1209 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_stalled_task_trace._entry.204 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_stalled_ipi_trace._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1227 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1227 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1227 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_tasks_trace_postgp._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_tasks_trace_postgp._entry.213 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_tasks_initiate_self_tests._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_rcu_tasks_callback._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1260 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1260 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.219 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1260 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_tasks_bootup_oddness._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1269 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 77, i32 128, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1269 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1269 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_tasks_bootup_oddness._entry.222 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1275 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1275 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_tasks_bootup_oddness._entry.225 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rcu_tasks_bootup_oddness._entry.228 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_utilization(ptr nocapture readnone %__data, ptr noundef %s) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_utilization, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %s) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_grace_period(ptr nocapture readnone %__data, ptr noundef %rcuname, i32 noundef %gp_seq, ptr noundef %gpevent) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_grace_period, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rcuname, i32 noundef %gp_seq, ptr noundef %gpevent) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_future_grace_period(ptr nocapture readnone %__data, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %gp_seq_req, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, ptr noundef %gpevent) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_future_grace_period, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %gp_seq_req, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, ptr noundef %gpevent) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_grace_period_init(ptr nocapture readnone %__data, ptr noundef %rcuname, i32 noundef %gp_seq, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, i32 noundef %qsmask) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_grace_period_init, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rcuname, i32 noundef %gp_seq, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, i32 noundef %qsmask) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_exp_grace_period(ptr nocapture readnone %__data, ptr noundef %rcuname, i32 noundef %gpseq, ptr noundef %gpevent) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_exp_grace_period, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rcuname, i32 noundef %gpseq, ptr noundef %gpevent) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_exp_funnel_lock(ptr nocapture readnone %__data, ptr noundef %rcuname, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, ptr noundef %gpevent) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_exp_funnel_lock, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rcuname, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, ptr noundef %gpevent) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_nocb_wake(ptr nocapture readnone %__data, ptr noundef %rcuname, i32 noundef %cpu, ptr noundef %reason) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_nocb_wake, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rcuname, i32 noundef %cpu, ptr noundef %reason) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_preempt_task(ptr nocapture readnone %__data, ptr noundef %rcuname, i32 noundef %pid, i32 noundef %gp_seq) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_preempt_task, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rcuname, i32 noundef %pid, i32 noundef %gp_seq) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_unlock_preempted_task(ptr nocapture readnone %__data, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %pid) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_unlock_preempted_task, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %pid) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_quiescent_state_report(ptr nocapture readnone %__data, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %mask, i32 noundef %qsmask, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, i32 noundef %gp_tasks) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_quiescent_state_report, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %mask, i32 noundef %qsmask, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, i32 noundef %gp_tasks) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_fqs(ptr nocapture readnone %__data, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %cpu, ptr noundef %qsevent) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_fqs, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %cpu, ptr noundef %qsevent) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_stall_warning(ptr nocapture readnone %__data, ptr noundef %rcuname, ptr noundef %msg) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_stall_warning, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rcuname, ptr noundef %msg) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_dyntick(ptr nocapture readnone %__data, ptr noundef %polarity, i32 noundef %oldnesting, i32 noundef %newnesting, i32 noundef %dynticks) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_dyntick, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %polarity, i32 noundef %oldnesting, i32 noundef %newnesting, i32 noundef %dynticks) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_callback(ptr nocapture readnone %__data, ptr noundef %rcuname, ptr noundef %rhp, i32 noundef %qlen) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_callback, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rcuname, ptr noundef %rhp, i32 noundef %qlen) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_segcb_stats(ptr nocapture readnone %__data, ptr noundef %rs, ptr noundef %ctx) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_segcb_stats, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rs, ptr noundef %ctx) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_kvfree_callback(ptr nocapture readnone %__data, ptr noundef %rcuname, ptr noundef %rhp, i32 noundef %offset, i32 noundef %qlen) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_kvfree_callback, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rcuname, ptr noundef %rhp, i32 noundef %offset, i32 noundef %qlen) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_batch_start(ptr nocapture readnone %__data, ptr noundef %rcuname, i32 noundef %qlen, i32 noundef %blimit) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_batch_start, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rcuname, i32 noundef %qlen, i32 noundef %blimit) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_invoke_callback(ptr nocapture readnone %__data, ptr noundef %rcuname, ptr noundef %rhp) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_invoke_callback, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rcuname, ptr noundef %rhp) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_invoke_kvfree_callback(ptr nocapture readnone %__data, ptr noundef %rcuname, ptr noundef %rhp, i32 noundef %offset) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_invoke_kvfree_callback, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rcuname, ptr noundef %rhp, i32 noundef %offset) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_invoke_kfree_bulk_callback(ptr nocapture readnone %__data, ptr noundef %rcuname, i32 noundef %nr_records, ptr noundef %p) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_invoke_kfree_bulk_callback, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rcuname, i32 noundef %nr_records, ptr noundef %p) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_batch_end(ptr nocapture readnone %__data, ptr noundef %rcuname, i32 noundef %callbacks_invoked, i8 noundef zeroext %cb, i8 noundef zeroext %nr, i8 noundef zeroext %iit, i8 noundef zeroext %risk) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_batch_end, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rcuname, i32 noundef %callbacks_invoked, i8 noundef zeroext %cb, i8 noundef zeroext %nr, i8 noundef zeroext %iit, i8 noundef zeroext %risk) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_torture_read(ptr nocapture readnone %__data, ptr noundef %rcutorturename, ptr noundef %rhp, i32 noundef %secs, i32 noundef %c_old, i32 noundef %c) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_torture_read, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rcutorturename, ptr noundef %rhp, i32 noundef %secs, i32 noundef %c_old, i32 noundef %c) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_rcu_barrier(ptr nocapture readnone %__data, ptr noundef %rcuname, ptr noundef %s, i32 noundef %cpu, i32 noundef %cnt, i32 noundef %done) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_barrier, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %do.body2, %entry
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2 ], [ %0, %entry ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rcuname, ptr noundef %s, i32 noundef %cpu, i32 noundef %cnt, i32 noundef %done) #20
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %if.end, label %do.body2

if.end:                                           ; preds = %do.body2, %entry
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_utilization(ptr noundef %__data, ptr noundef %s) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 12) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %s6 = getelementptr inbounds %struct.trace_event_raw_rcu_utilization, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %s6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %s, ptr %s6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_utilization(ptr noundef %__data, ptr noundef %s) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 12, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %s17 = getelementptr inbounds %struct.trace_event_raw_rcu_utilization, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %s17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %s, ptr %s17, align 4
  %28 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rctx, align 4
  %30 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 12, i32 noundef %29, ptr noundef %__data, i64 noundef 1, ptr noundef %31, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_grace_period(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %gp_seq, ptr noundef %gpevent) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %rcuname6 = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %rcuname6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %rcuname, ptr %rcuname6, align 4
  %gp_seq7 = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %gp_seq7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %gp_seq, ptr %gp_seq7, align 4
  %gpevent8 = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %gpevent8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %gpevent, ptr %gpevent8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_grace_period(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %gp_seq, ptr noundef %gpevent) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rcuname17 = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %rcuname17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %rcuname, ptr %rcuname17, align 4
  %gp_seq18 = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %gp_seq18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %gp_seq, ptr %gp_seq18, align 4
  %gpevent19 = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %gpevent19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %gpevent, ptr %gpevent19, align 4
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_future_grace_period(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %gp_seq_req, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, ptr noundef %gpevent) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 36) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %rcuname6 = getelementptr inbounds %struct.trace_event_raw_rcu_future_grace_period, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %rcuname6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %rcuname, ptr %rcuname6, align 4
  %gp_seq7 = getelementptr inbounds %struct.trace_event_raw_rcu_future_grace_period, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %gp_seq7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %gp_seq, ptr %gp_seq7, align 4
  %gp_seq_req8 = getelementptr inbounds %struct.trace_event_raw_rcu_future_grace_period, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %gp_seq_req8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %gp_seq_req, ptr %gp_seq_req8, align 4
  %level9 = getelementptr inbounds %struct.trace_event_raw_rcu_future_grace_period, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %level9 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %level, ptr %level9, align 4
  %grplo10 = getelementptr inbounds %struct.trace_event_raw_rcu_future_grace_period, ptr %call3, i32 0, i32 5
  %7 = ptrtoint ptr %grplo10 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %grplo, ptr %grplo10, align 4
  %grphi11 = getelementptr inbounds %struct.trace_event_raw_rcu_future_grace_period, ptr %call3, i32 0, i32 6
  %8 = ptrtoint ptr %grphi11 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %grphi, ptr %grphi11, align 4
  %gpevent12 = getelementptr inbounds %struct.trace_event_raw_rcu_future_grace_period, ptr %call3, i32 0, i32 7
  %9 = ptrtoint ptr %gpevent12 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %gpevent, ptr %gpevent12, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_future_grace_period(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %gp_seq_req, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, ptr noundef %gpevent) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rcuname17 = getelementptr inbounds %struct.trace_event_raw_rcu_future_grace_period, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %rcuname17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %rcuname, ptr %rcuname17, align 4
  %gp_seq18 = getelementptr inbounds %struct.trace_event_raw_rcu_future_grace_period, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %gp_seq18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %gp_seq, ptr %gp_seq18, align 4
  %gp_seq_req19 = getelementptr inbounds %struct.trace_event_raw_rcu_future_grace_period, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %gp_seq_req19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %gp_seq_req, ptr %gp_seq_req19, align 4
  %level20 = getelementptr inbounds %struct.trace_event_raw_rcu_future_grace_period, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %level20 to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 %level, ptr %level20, align 4
  %grplo21 = getelementptr inbounds %struct.trace_event_raw_rcu_future_grace_period, ptr %call13, i32 0, i32 5
  %31 = ptrtoint ptr %grplo21 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %grplo, ptr %grplo21, align 4
  %grphi22 = getelementptr inbounds %struct.trace_event_raw_rcu_future_grace_period, ptr %call13, i32 0, i32 6
  %32 = ptrtoint ptr %grphi22 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %grphi, ptr %grphi22, align 4
  %gpevent23 = getelementptr inbounds %struct.trace_event_raw_rcu_future_grace_period, ptr %call13, i32 0, i32 7
  %33 = ptrtoint ptr %gpevent23 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %gpevent, ptr %gpevent23, align 4
  %34 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rctx, align 4
  %36 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %35, ptr noundef %__data, i64 noundef 1, ptr noundef %37, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_grace_period_init(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %gp_seq, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, i32 noundef %qsmask) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %rcuname6 = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period_init, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %rcuname6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %rcuname, ptr %rcuname6, align 4
  %gp_seq7 = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period_init, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %gp_seq7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %gp_seq, ptr %gp_seq7, align 4
  %level8 = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period_init, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %level8 to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %level, ptr %level8, align 4
  %grplo9 = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period_init, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %grplo9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %grplo, ptr %grplo9, align 4
  %grphi10 = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period_init, ptr %call3, i32 0, i32 5
  %7 = ptrtoint ptr %grphi10 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %grphi, ptr %grphi10, align 4
  %qsmask11 = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period_init, ptr %call3, i32 0, i32 6
  %8 = ptrtoint ptr %qsmask11 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %qsmask, ptr %qsmask11, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_grace_period_init(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %gp_seq, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, i32 noundef %qsmask) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rcuname17 = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period_init, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %rcuname17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %rcuname, ptr %rcuname17, align 4
  %gp_seq18 = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period_init, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %gp_seq18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %gp_seq, ptr %gp_seq18, align 4
  %level19 = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period_init, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %level19 to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 %level, ptr %level19, align 4
  %grplo20 = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period_init, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %grplo20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %grplo, ptr %grplo20, align 4
  %grphi21 = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period_init, ptr %call13, i32 0, i32 5
  %31 = ptrtoint ptr %grphi21 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %grphi, ptr %grphi21, align 4
  %qsmask22 = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period_init, ptr %call13, i32 0, i32 6
  %32 = ptrtoint ptr %qsmask22 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %qsmask, ptr %qsmask22, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_exp_grace_period(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %gpseq, ptr noundef %gpevent) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %rcuname6 = getelementptr inbounds %struct.trace_event_raw_rcu_exp_grace_period, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %rcuname6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %rcuname, ptr %rcuname6, align 4
  %gpseq7 = getelementptr inbounds %struct.trace_event_raw_rcu_exp_grace_period, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %gpseq7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %gpseq, ptr %gpseq7, align 4
  %gpevent8 = getelementptr inbounds %struct.trace_event_raw_rcu_exp_grace_period, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %gpevent8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %gpevent, ptr %gpevent8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_exp_grace_period(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %gpseq, ptr noundef %gpevent) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rcuname17 = getelementptr inbounds %struct.trace_event_raw_rcu_exp_grace_period, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %rcuname17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %rcuname, ptr %rcuname17, align 4
  %gpseq18 = getelementptr inbounds %struct.trace_event_raw_rcu_exp_grace_period, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %gpseq18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %gpseq, ptr %gpseq18, align 4
  %gpevent19 = getelementptr inbounds %struct.trace_event_raw_rcu_exp_grace_period, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %gpevent19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %gpevent, ptr %gpevent19, align 4
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_exp_funnel_lock(ptr noundef %__data, ptr noundef %rcuname, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, ptr noundef %gpevent) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %rcuname6 = getelementptr inbounds %struct.trace_event_raw_rcu_exp_funnel_lock, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %rcuname6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %rcuname, ptr %rcuname6, align 4
  %level7 = getelementptr inbounds %struct.trace_event_raw_rcu_exp_funnel_lock, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %level7 to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %level, ptr %level7, align 4
  %grplo8 = getelementptr inbounds %struct.trace_event_raw_rcu_exp_funnel_lock, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %grplo8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %grplo, ptr %grplo8, align 4
  %grphi9 = getelementptr inbounds %struct.trace_event_raw_rcu_exp_funnel_lock, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %grphi9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %grphi, ptr %grphi9, align 4
  %gpevent10 = getelementptr inbounds %struct.trace_event_raw_rcu_exp_funnel_lock, ptr %call3, i32 0, i32 5
  %7 = ptrtoint ptr %gpevent10 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %gpevent, ptr %gpevent10, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_exp_funnel_lock(ptr noundef %__data, ptr noundef %rcuname, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, ptr noundef %gpevent) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rcuname17 = getelementptr inbounds %struct.trace_event_raw_rcu_exp_funnel_lock, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %rcuname17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %rcuname, ptr %rcuname17, align 4
  %level18 = getelementptr inbounds %struct.trace_event_raw_rcu_exp_funnel_lock, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %level18 to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 %level, ptr %level18, align 4
  %grplo19 = getelementptr inbounds %struct.trace_event_raw_rcu_exp_funnel_lock, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %grplo19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %grplo, ptr %grplo19, align 4
  %grphi20 = getelementptr inbounds %struct.trace_event_raw_rcu_exp_funnel_lock, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %grphi20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %grphi, ptr %grphi20, align 4
  %gpevent21 = getelementptr inbounds %struct.trace_event_raw_rcu_exp_funnel_lock, ptr %call13, i32 0, i32 5
  %31 = ptrtoint ptr %gpevent21 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %gpevent, ptr %gpevent21, align 4
  %32 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rctx, align 4
  %34 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %33, ptr noundef %__data, i64 noundef 1, ptr noundef %35, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_nocb_wake(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %cpu, ptr noundef %reason) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %rcuname6 = getelementptr inbounds %struct.trace_event_raw_rcu_nocb_wake, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %rcuname6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %rcuname, ptr %rcuname6, align 4
  %cpu7 = getelementptr inbounds %struct.trace_event_raw_rcu_nocb_wake, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %cpu7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %cpu, ptr %cpu7, align 4
  %reason8 = getelementptr inbounds %struct.trace_event_raw_rcu_nocb_wake, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %reason8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %reason, ptr %reason8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_nocb_wake(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %cpu, ptr noundef %reason) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu4 = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu4 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu4, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true8, %entry
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %cleanup, label %if.end17

if.end17:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rcuname18 = getelementptr inbounds %struct.trace_event_raw_rcu_nocb_wake, ptr %call14, i32 0, i32 1
  %27 = ptrtoint ptr %rcuname18 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %rcuname, ptr %rcuname18, align 4
  %cpu19 = getelementptr inbounds %struct.trace_event_raw_rcu_nocb_wake, ptr %call14, i32 0, i32 2
  %28 = ptrtoint ptr %cpu19 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %cpu, ptr %cpu19, align 4
  %reason20 = getelementptr inbounds %struct.trace_event_raw_rcu_nocb_wake, ptr %call14, i32 0, i32 3
  %29 = ptrtoint ptr %reason20 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %reason, ptr %reason20, align 4
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 20, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end, %land.lhs.true8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_preempt_task(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %pid, i32 noundef %gp_seq) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %rcuname6 = getelementptr inbounds %struct.trace_event_raw_rcu_preempt_task, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %rcuname6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %rcuname, ptr %rcuname6, align 4
  %gp_seq7 = getelementptr inbounds %struct.trace_event_raw_rcu_preempt_task, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %gp_seq7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %gp_seq, ptr %gp_seq7, align 4
  %pid8 = getelementptr inbounds %struct.trace_event_raw_rcu_preempt_task, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %pid8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %pid, ptr %pid8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_preempt_task(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %pid, i32 noundef %gp_seq) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rcuname17 = getelementptr inbounds %struct.trace_event_raw_rcu_preempt_task, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %rcuname17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %rcuname, ptr %rcuname17, align 4
  %gp_seq18 = getelementptr inbounds %struct.trace_event_raw_rcu_preempt_task, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %gp_seq18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %gp_seq, ptr %gp_seq18, align 4
  %pid19 = getelementptr inbounds %struct.trace_event_raw_rcu_preempt_task, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %pid19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %pid, ptr %pid19, align 4
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_unlock_preempted_task(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %pid) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %rcuname6 = getelementptr inbounds %struct.trace_event_raw_rcu_unlock_preempted_task, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %rcuname6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %rcuname, ptr %rcuname6, align 4
  %gp_seq7 = getelementptr inbounds %struct.trace_event_raw_rcu_unlock_preempted_task, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %gp_seq7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %gp_seq, ptr %gp_seq7, align 4
  %pid8 = getelementptr inbounds %struct.trace_event_raw_rcu_unlock_preempted_task, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %pid8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %pid, ptr %pid8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_unlock_preempted_task(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %pid) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rcuname17 = getelementptr inbounds %struct.trace_event_raw_rcu_unlock_preempted_task, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %rcuname17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %rcuname, ptr %rcuname17, align 4
  %gp_seq18 = getelementptr inbounds %struct.trace_event_raw_rcu_unlock_preempted_task, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %gp_seq18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %gp_seq, ptr %gp_seq18, align 4
  %pid19 = getelementptr inbounds %struct.trace_event_raw_rcu_unlock_preempted_task, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %pid19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %pid, ptr %pid19, align 4
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_quiescent_state_report(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %mask, i32 noundef %qsmask, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, i32 noundef %gp_tasks) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 40) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %rcuname6 = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %rcuname6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %rcuname, ptr %rcuname6, align 4
  %gp_seq7 = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %gp_seq7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %gp_seq, ptr %gp_seq7, align 4
  %mask8 = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %mask8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %mask, ptr %mask8, align 4
  %qsmask9 = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %qsmask9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %qsmask, ptr %qsmask9, align 4
  %level10 = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %call3, i32 0, i32 5
  %7 = ptrtoint ptr %level10 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %level, ptr %level10, align 4
  %grplo11 = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %call3, i32 0, i32 6
  %8 = ptrtoint ptr %grplo11 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %grplo, ptr %grplo11, align 4
  %grphi12 = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %call3, i32 0, i32 7
  %9 = ptrtoint ptr %grphi12 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %grphi, ptr %grphi12, align 4
  %conv = trunc i32 %gp_tasks to i8
  %gp_tasks13 = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %call3, i32 0, i32 8
  %10 = ptrtoint ptr %gp_tasks13 to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 %conv, ptr %gp_tasks13, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_quiescent_state_report(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %mask, i32 noundef %qsmask, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, i32 noundef %gp_tasks) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rcuname17 = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %rcuname17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %rcuname, ptr %rcuname17, align 4
  %gp_seq18 = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %gp_seq18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %gp_seq, ptr %gp_seq18, align 4
  %mask19 = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %mask19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %mask, ptr %mask19, align 4
  %qsmask20 = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %qsmask20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %qsmask, ptr %qsmask20, align 4
  %level21 = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %call13, i32 0, i32 5
  %31 = ptrtoint ptr %level21 to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 %level, ptr %level21, align 4
  %grplo22 = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %call13, i32 0, i32 6
  %32 = ptrtoint ptr %grplo22 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %grplo, ptr %grplo22, align 4
  %grphi23 = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %call13, i32 0, i32 7
  %33 = ptrtoint ptr %grphi23 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %grphi, ptr %grphi23, align 4
  %conv = trunc i32 %gp_tasks to i8
  %gp_tasks24 = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %call13, i32 0, i32 8
  %34 = ptrtoint ptr %gp_tasks24 to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 %conv, ptr %gp_tasks24, align 4
  %35 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %rctx, align 4
  %37 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %36, ptr noundef %__data, i64 noundef 1, ptr noundef %38, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_fqs(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %cpu, ptr noundef %qsevent) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %rcuname6 = getelementptr inbounds %struct.trace_event_raw_rcu_fqs, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %rcuname6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %rcuname, ptr %rcuname6, align 4
  %gp_seq7 = getelementptr inbounds %struct.trace_event_raw_rcu_fqs, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %gp_seq7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %gp_seq, ptr %gp_seq7, align 4
  %cpu8 = getelementptr inbounds %struct.trace_event_raw_rcu_fqs, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %cpu8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %cpu, ptr %cpu8, align 4
  %qsevent9 = getelementptr inbounds %struct.trace_event_raw_rcu_fqs, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %qsevent9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %qsevent, ptr %qsevent9, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_fqs(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %cpu, ptr noundef %qsevent) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu4 = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu4 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu4, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true8, %entry
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %cleanup, label %if.end17

if.end17:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rcuname18 = getelementptr inbounds %struct.trace_event_raw_rcu_fqs, ptr %call14, i32 0, i32 1
  %27 = ptrtoint ptr %rcuname18 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %rcuname, ptr %rcuname18, align 4
  %gp_seq19 = getelementptr inbounds %struct.trace_event_raw_rcu_fqs, ptr %call14, i32 0, i32 2
  %28 = ptrtoint ptr %gp_seq19 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %gp_seq, ptr %gp_seq19, align 4
  %cpu20 = getelementptr inbounds %struct.trace_event_raw_rcu_fqs, ptr %call14, i32 0, i32 3
  %29 = ptrtoint ptr %cpu20 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %cpu, ptr %cpu20, align 4
  %qsevent21 = getelementptr inbounds %struct.trace_event_raw_rcu_fqs, ptr %call14, i32 0, i32 4
  %30 = ptrtoint ptr %qsevent21 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %qsevent, ptr %qsevent21, align 4
  %31 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rctx, align 4
  %33 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 28, i32 noundef %32, ptr noundef %__data, i64 noundef 1, ptr noundef %34, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end, %land.lhs.true8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_stall_warning(ptr noundef %__data, ptr noundef %rcuname, ptr noundef %msg) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %rcuname6 = getelementptr inbounds %struct.trace_event_raw_rcu_stall_warning, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %rcuname6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %rcuname, ptr %rcuname6, align 4
  %msg7 = getelementptr inbounds %struct.trace_event_raw_rcu_stall_warning, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %msg7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %msg, ptr %msg7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_stall_warning(ptr noundef %__data, ptr noundef %rcuname, ptr noundef %msg) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rcuname17 = getelementptr inbounds %struct.trace_event_raw_rcu_stall_warning, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %rcuname17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %rcuname, ptr %rcuname17, align 4
  %msg18 = getelementptr inbounds %struct.trace_event_raw_rcu_stall_warning, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %msg18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %msg, ptr %msg18, align 4
  %29 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rctx, align 4
  %31 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %30, ptr noundef %__data, i64 noundef 1, ptr noundef %32, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_dyntick(ptr noundef %__data, ptr noundef %polarity, i32 noundef %oldnesting, i32 noundef %newnesting, i32 noundef %dynticks) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %polarity6 = getelementptr inbounds %struct.trace_event_raw_rcu_dyntick, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %polarity6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %polarity, ptr %polarity6, align 4
  %oldnesting7 = getelementptr inbounds %struct.trace_event_raw_rcu_dyntick, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %oldnesting7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %oldnesting, ptr %oldnesting7, align 4
  %newnesting8 = getelementptr inbounds %struct.trace_event_raw_rcu_dyntick, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %newnesting8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %newnesting, ptr %newnesting8, align 4
  %dynticks9 = getelementptr inbounds %struct.trace_event_raw_rcu_dyntick, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %dynticks9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %dynticks, ptr %dynticks9, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_dyntick(ptr noundef %__data, ptr noundef %polarity, i32 noundef %oldnesting, i32 noundef %newnesting, i32 noundef %dynticks) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %polarity17 = getelementptr inbounds %struct.trace_event_raw_rcu_dyntick, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %polarity17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %polarity, ptr %polarity17, align 4
  %oldnesting18 = getelementptr inbounds %struct.trace_event_raw_rcu_dyntick, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %oldnesting18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %oldnesting, ptr %oldnesting18, align 4
  %newnesting19 = getelementptr inbounds %struct.trace_event_raw_rcu_dyntick, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %newnesting19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %newnesting, ptr %newnesting19, align 4
  %dynticks20 = getelementptr inbounds %struct.trace_event_raw_rcu_dyntick, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %dynticks20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %dynticks, ptr %dynticks20, align 4
  %31 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rctx, align 4
  %33 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %32, ptr noundef %__data, i64 noundef 1, ptr noundef %34, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_callback(ptr noundef %__data, ptr noundef %rcuname, ptr noundef %rhp, i32 noundef %qlen) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %rcuname6 = getelementptr inbounds %struct.trace_event_raw_rcu_callback, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %rcuname6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %rcuname, ptr %rcuname6, align 4
  %rhp7 = getelementptr inbounds %struct.trace_event_raw_rcu_callback, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %rhp7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %rhp, ptr %rhp7, align 4
  %func = getelementptr inbounds %struct.callback_head, ptr %rhp, i32 0, i32 1
  %5 = ptrtoint ptr %func to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %func, align 4
  %func8 = getelementptr inbounds %struct.trace_event_raw_rcu_callback, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %func8 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %6, ptr %func8, align 4
  %qlen9 = getelementptr inbounds %struct.trace_event_raw_rcu_callback, ptr %call3, i32 0, i32 4
  %8 = ptrtoint ptr %qlen9 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %qlen, ptr %qlen9, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_callback(ptr noundef %__data, ptr noundef %rcuname, ptr noundef %rhp, i32 noundef %qlen) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rcuname17 = getelementptr inbounds %struct.trace_event_raw_rcu_callback, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %rcuname17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %rcuname, ptr %rcuname17, align 4
  %rhp18 = getelementptr inbounds %struct.trace_event_raw_rcu_callback, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %rhp18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %rhp, ptr %rhp18, align 4
  %func = getelementptr inbounds %struct.callback_head, ptr %rhp, i32 0, i32 1
  %29 = ptrtoint ptr %func to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %func, align 4
  %func19 = getelementptr inbounds %struct.trace_event_raw_rcu_callback, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %func19 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %30, ptr %func19, align 4
  %qlen20 = getelementptr inbounds %struct.trace_event_raw_rcu_callback, ptr %call13, i32 0, i32 4
  %32 = ptrtoint ptr %qlen20 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %qlen, ptr %qlen20, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_segcb_stats(ptr noundef %__data, ptr nocapture noundef readonly %rs, ptr noundef %ctx) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 44) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %ctx6 = getelementptr inbounds %struct.trace_event_raw_rcu_segcb_stats, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %ctx6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %ctx, ptr %ctx6, align 4
  %seglen = getelementptr inbounds %struct.trace_event_raw_rcu_segcb_stats, ptr %call3, i32 0, i32 3
  %seglen7 = getelementptr inbounds %struct.rcu_segcblist, ptr %rs, i32 0, i32 4
  %4 = call ptr @memcpy(ptr %seglen, ptr %seglen7, i32 16)
  %gp_seq = getelementptr inbounds %struct.trace_event_raw_rcu_segcb_stats, ptr %call3, i32 0, i32 2
  %gp_seq10 = getelementptr inbounds %struct.rcu_segcblist, ptr %rs, i32 0, i32 2
  %5 = call ptr @memcpy(ptr %gp_seq, ptr %gp_seq10, i32 16)
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_segcb_stats(ptr noundef %__data, ptr nocapture noundef readonly %rs, ptr noundef %ctx) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %ctx17 = getelementptr inbounds %struct.trace_event_raw_rcu_segcb_stats, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %ctx17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %ctx, ptr %ctx17, align 4
  %seglen = getelementptr inbounds %struct.trace_event_raw_rcu_segcb_stats, ptr %call13, i32 0, i32 3
  %seglen18 = getelementptr inbounds %struct.rcu_segcblist, ptr %rs, i32 0, i32 4
  %28 = call ptr @memcpy(ptr %seglen, ptr %seglen18, i32 16)
  %gp_seq = getelementptr inbounds %struct.trace_event_raw_rcu_segcb_stats, ptr %call13, i32 0, i32 2
  %gp_seq21 = getelementptr inbounds %struct.rcu_segcblist, ptr %rs, i32 0, i32 2
  %29 = call ptr @memcpy(ptr %gp_seq, ptr %gp_seq21, i32 16)
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_kvfree_callback(ptr noundef %__data, ptr noundef %rcuname, ptr noundef %rhp, i32 noundef %offset, i32 noundef %qlen) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %rcuname6 = getelementptr inbounds %struct.trace_event_raw_rcu_kvfree_callback, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %rcuname6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %rcuname, ptr %rcuname6, align 4
  %rhp7 = getelementptr inbounds %struct.trace_event_raw_rcu_kvfree_callback, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %rhp7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %rhp, ptr %rhp7, align 4
  %offset8 = getelementptr inbounds %struct.trace_event_raw_rcu_kvfree_callback, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %offset8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %offset, ptr %offset8, align 4
  %qlen9 = getelementptr inbounds %struct.trace_event_raw_rcu_kvfree_callback, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %qlen9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %qlen, ptr %qlen9, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_kvfree_callback(ptr noundef %__data, ptr noundef %rcuname, ptr noundef %rhp, i32 noundef %offset, i32 noundef %qlen) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rcuname17 = getelementptr inbounds %struct.trace_event_raw_rcu_kvfree_callback, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %rcuname17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %rcuname, ptr %rcuname17, align 4
  %rhp18 = getelementptr inbounds %struct.trace_event_raw_rcu_kvfree_callback, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %rhp18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %rhp, ptr %rhp18, align 4
  %offset19 = getelementptr inbounds %struct.trace_event_raw_rcu_kvfree_callback, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %offset19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %offset, ptr %offset19, align 4
  %qlen20 = getelementptr inbounds %struct.trace_event_raw_rcu_kvfree_callback, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %qlen20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %qlen, ptr %qlen20, align 4
  %31 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rctx, align 4
  %33 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %32, ptr noundef %__data, i64 noundef 1, ptr noundef %34, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_batch_start(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %qlen, i32 noundef %blimit) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %rcuname6 = getelementptr inbounds %struct.trace_event_raw_rcu_batch_start, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %rcuname6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %rcuname, ptr %rcuname6, align 4
  %qlen7 = getelementptr inbounds %struct.trace_event_raw_rcu_batch_start, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %qlen7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %qlen, ptr %qlen7, align 4
  %blimit8 = getelementptr inbounds %struct.trace_event_raw_rcu_batch_start, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %blimit8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %blimit, ptr %blimit8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_batch_start(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %qlen, i32 noundef %blimit) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rcuname17 = getelementptr inbounds %struct.trace_event_raw_rcu_batch_start, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %rcuname17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %rcuname, ptr %rcuname17, align 4
  %qlen18 = getelementptr inbounds %struct.trace_event_raw_rcu_batch_start, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %qlen18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %qlen, ptr %qlen18, align 4
  %blimit19 = getelementptr inbounds %struct.trace_event_raw_rcu_batch_start, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %blimit19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %blimit, ptr %blimit19, align 4
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_invoke_callback(ptr noundef %__data, ptr noundef %rcuname, ptr noundef %rhp) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %rcuname6 = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_callback, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %rcuname6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %rcuname, ptr %rcuname6, align 4
  %rhp7 = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_callback, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %rhp7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %rhp, ptr %rhp7, align 4
  %func = getelementptr inbounds %struct.callback_head, ptr %rhp, i32 0, i32 1
  %5 = ptrtoint ptr %func to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %func, align 4
  %func8 = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_callback, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %func8 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %6, ptr %func8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_invoke_callback(ptr noundef %__data, ptr noundef %rcuname, ptr noundef %rhp) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rcuname17 = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_callback, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %rcuname17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %rcuname, ptr %rcuname17, align 4
  %rhp18 = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_callback, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %rhp18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %rhp, ptr %rhp18, align 4
  %func = getelementptr inbounds %struct.callback_head, ptr %rhp, i32 0, i32 1
  %29 = ptrtoint ptr %func to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %func, align 4
  %func19 = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_callback, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %func19 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %30, ptr %func19, align 4
  %32 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rctx, align 4
  %34 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %33, ptr noundef %__data, i64 noundef 1, ptr noundef %35, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_invoke_kvfree_callback(ptr noundef %__data, ptr noundef %rcuname, ptr noundef %rhp, i32 noundef %offset) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %rcuname6 = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_kvfree_callback, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %rcuname6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %rcuname, ptr %rcuname6, align 4
  %rhp7 = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_kvfree_callback, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %rhp7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %rhp, ptr %rhp7, align 4
  %offset8 = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_kvfree_callback, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %offset8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %offset, ptr %offset8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_invoke_kvfree_callback(ptr noundef %__data, ptr noundef %rcuname, ptr noundef %rhp, i32 noundef %offset) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rcuname17 = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_kvfree_callback, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %rcuname17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %rcuname, ptr %rcuname17, align 4
  %rhp18 = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_kvfree_callback, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %rhp18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %rhp, ptr %rhp18, align 4
  %offset19 = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_kvfree_callback, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %offset19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %offset, ptr %offset19, align 4
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_invoke_kfree_bulk_callback(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %nr_records, ptr noundef %p) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %rcuname6 = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_kfree_bulk_callback, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %rcuname6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %rcuname, ptr %rcuname6, align 4
  %nr_records7 = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_kfree_bulk_callback, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %nr_records7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %nr_records, ptr %nr_records7, align 4
  %p8 = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_kfree_bulk_callback, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %p8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %p, ptr %p8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_invoke_kfree_bulk_callback(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %nr_records, ptr noundef %p) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rcuname17 = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_kfree_bulk_callback, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %rcuname17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %rcuname, ptr %rcuname17, align 4
  %nr_records18 = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_kfree_bulk_callback, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %nr_records18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %nr_records, ptr %nr_records18, align 4
  %p19 = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_kfree_bulk_callback, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %p19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %p, ptr %p19, align 4
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_batch_end(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %callbacks_invoked, i8 noundef zeroext %cb, i8 noundef zeroext %nr, i8 noundef zeroext %iit, i8 noundef zeroext %risk) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %rcuname6 = getelementptr inbounds %struct.trace_event_raw_rcu_batch_end, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %rcuname6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %rcuname, ptr %rcuname6, align 4
  %callbacks_invoked7 = getelementptr inbounds %struct.trace_event_raw_rcu_batch_end, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %callbacks_invoked7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %callbacks_invoked, ptr %callbacks_invoked7, align 4
  %cb8 = getelementptr inbounds %struct.trace_event_raw_rcu_batch_end, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %cb8 to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %cb, ptr %cb8, align 4
  %nr9 = getelementptr inbounds %struct.trace_event_raw_rcu_batch_end, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %nr9 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %nr, ptr %nr9, align 1
  %iit10 = getelementptr inbounds %struct.trace_event_raw_rcu_batch_end, ptr %call3, i32 0, i32 5
  %7 = ptrtoint ptr %iit10 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %iit, ptr %iit10, align 2
  %risk11 = getelementptr inbounds %struct.trace_event_raw_rcu_batch_end, ptr %call3, i32 0, i32 6
  %8 = ptrtoint ptr %risk11 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %risk, ptr %risk11, align 1
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_batch_end(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %callbacks_invoked, i8 noundef zeroext %cb, i8 noundef zeroext %nr, i8 noundef zeroext %iit, i8 noundef zeroext %risk) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rcuname17 = getelementptr inbounds %struct.trace_event_raw_rcu_batch_end, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %rcuname17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %rcuname, ptr %rcuname17, align 4
  %callbacks_invoked18 = getelementptr inbounds %struct.trace_event_raw_rcu_batch_end, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %callbacks_invoked18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %callbacks_invoked, ptr %callbacks_invoked18, align 4
  %cb19 = getelementptr inbounds %struct.trace_event_raw_rcu_batch_end, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %cb19 to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 %cb, ptr %cb19, align 4
  %nr20 = getelementptr inbounds %struct.trace_event_raw_rcu_batch_end, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %nr20 to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 %nr, ptr %nr20, align 1
  %iit21 = getelementptr inbounds %struct.trace_event_raw_rcu_batch_end, ptr %call13, i32 0, i32 5
  %31 = ptrtoint ptr %iit21 to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 %iit, ptr %iit21, align 2
  %risk22 = getelementptr inbounds %struct.trace_event_raw_rcu_batch_end, ptr %call13, i32 0, i32 6
  %32 = ptrtoint ptr %risk22 to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 %risk, ptr %risk22, align 1
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_torture_read(ptr noundef %__data, ptr nocapture noundef readonly %rcutorturename, ptr noundef %rhp, i32 noundef %secs, i32 noundef %c_old, i32 noundef %c) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %rcutorturename6 = getelementptr inbounds %struct.trace_event_raw_rcu_torture_read, ptr %call3, i32 0, i32 1
  %call7 = call ptr @strncpy(ptr noundef %rcutorturename6, ptr noundef %rcutorturename, i32 noundef 8)
  %arrayidx = getelementptr %struct.trace_event_raw_rcu_torture_read, ptr %call3, i32 0, i32 1, i32 7
  %3 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %arrayidx, align 1
  %rhp9 = getelementptr inbounds %struct.trace_event_raw_rcu_torture_read, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %rhp9 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %rhp, ptr %rhp9, align 4
  %secs10 = getelementptr inbounds %struct.trace_event_raw_rcu_torture_read, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %secs10 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %secs, ptr %secs10, align 4
  %c_old11 = getelementptr inbounds %struct.trace_event_raw_rcu_torture_read, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %c_old11 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %c_old, ptr %c_old11, align 4
  %c12 = getelementptr inbounds %struct.trace_event_raw_rcu_torture_read, ptr %call3, i32 0, i32 5
  %7 = ptrtoint ptr %c12 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %c, ptr %c12, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_torture_read(ptr noundef %__data, ptr nocapture noundef readonly %rcutorturename, ptr noundef %rhp, i32 noundef %secs, i32 noundef %c_old, i32 noundef %c) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true7, %entry
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %cleanup, label %if.end16

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rcutorturename17 = getelementptr inbounds %struct.trace_event_raw_rcu_torture_read, ptr %call13, i32 0, i32 1
  %call18 = call ptr @strncpy(ptr noundef %rcutorturename17, ptr noundef %rcutorturename, i32 noundef 8)
  %arrayidx20 = getelementptr %struct.trace_event_raw_rcu_torture_read, ptr %call13, i32 0, i32 1, i32 7
  %27 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 0, ptr %arrayidx20, align 1
  %rhp21 = getelementptr inbounds %struct.trace_event_raw_rcu_torture_read, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %rhp21 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %rhp, ptr %rhp21, align 4
  %secs22 = getelementptr inbounds %struct.trace_event_raw_rcu_torture_read, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %secs22 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %secs, ptr %secs22, align 4
  %c_old23 = getelementptr inbounds %struct.trace_event_raw_rcu_torture_read, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %c_old23 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %c_old, ptr %c_old23, align 4
  %c24 = getelementptr inbounds %struct.trace_event_raw_rcu_torture_read, ptr %call13, i32 0, i32 5
  %31 = ptrtoint ptr %c24 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %c, ptr %c24, align 4
  %32 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rctx, align 4
  %34 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %33, ptr noundef %__data, i64 noundef 1, ptr noundef %35, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end, %land.lhs.true7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_rcu_barrier(ptr noundef %__data, ptr noundef %rcuname, ptr noundef %s, i32 noundef %cpu, i32 noundef %cnt, i32 noundef %done) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #20
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end, label %if.end.i, !prof !903

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end, !prof !904

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #20
  br i1 %call.i, label %cleanup, label %if.end

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit, %if.end.i, %entry
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #20
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %rcuname6 = getelementptr inbounds %struct.trace_event_raw_rcu_barrier, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %rcuname6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %rcuname, ptr %rcuname6, align 4
  %s7 = getelementptr inbounds %struct.trace_event_raw_rcu_barrier, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %s7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %s, ptr %s7, align 4
  %cpu8 = getelementptr inbounds %struct.trace_event_raw_rcu_barrier, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %cpu8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %cpu, ptr %cpu8, align 4
  %cnt9 = getelementptr inbounds %struct.trace_event_raw_rcu_barrier, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %cnt9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %cnt, ptr %cnt9, align 4
  %done10 = getelementptr inbounds %struct.trace_event_raw_rcu_barrier, ptr %call3, i32 0, i32 5
  %7 = ptrtoint ptr %done10 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %done, ptr %done10, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %trace_trigger_soft_disabled.exit
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_rcu_barrier(ptr noundef %__data, ptr noundef %rcuname, ptr noundef %s, i32 noundef %cpu, i32 noundef %cnt, i32 noundef %done) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #20
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !905
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #20
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !905
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu4 = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu4 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu4, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true8, %entry
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #20
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %cleanup, label %if.end17

if.end17:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #20
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !893) #20
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rcuname18 = getelementptr inbounds %struct.trace_event_raw_rcu_barrier, ptr %call14, i32 0, i32 1
  %27 = ptrtoint ptr %rcuname18 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %rcuname, ptr %rcuname18, align 4
  %s19 = getelementptr inbounds %struct.trace_event_raw_rcu_barrier, ptr %call14, i32 0, i32 2
  %28 = ptrtoint ptr %s19 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %s, ptr %s19, align 4
  %cpu20 = getelementptr inbounds %struct.trace_event_raw_rcu_barrier, ptr %call14, i32 0, i32 3
  %29 = ptrtoint ptr %cpu20 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %cpu, ptr %cpu20, align 4
  %cnt21 = getelementptr inbounds %struct.trace_event_raw_rcu_barrier, ptr %call14, i32 0, i32 4
  %30 = ptrtoint ptr %cnt21 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %cnt, ptr %cnt21, align 4
  %done22 = getelementptr inbounds %struct.trace_event_raw_rcu_barrier, ptr %call14, i32 0, i32 5
  %31 = ptrtoint ptr %done22 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %done, ptr %done22, align 4
  %32 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rctx, align 4
  %34 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 28, i32 noundef %33, ptr noundef %__data, i64 noundef 1, ptr noundef %35, ptr noundef %11, ptr noundef null) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end, %land.lhs.true8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_utilization(ptr noundef %__data, ptr noundef %s) #0 align 64 {
entry:
  %0 = ptrtoint ptr %s to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_grace_period(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %gp_seq, ptr noundef %gpevent) #0 align 64 {
entry:
  %0 = ptrtoint ptr %rcuname to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %gp_seq to i64
  %1 = ptrtoint ptr %gpevent to i32
  %conv8 = zext i32 %1 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_future_grace_period(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %gp_seq_req, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, ptr noundef %gpevent) #0 align 64 {
entry:
  %0 = ptrtoint ptr %rcuname to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %gp_seq to i64
  %conv8 = zext i32 %gp_seq_req to i64
  %conv12 = zext i8 %level to i64
  %conv16 = zext i32 %grplo to i64
  %conv20 = zext i32 %grphi to i64
  %1 = ptrtoint ptr %gpevent to i32
  %conv24 = zext i32 %1 to i64
  tail call void @bpf_trace_run7(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20, i64 noundef %conv24) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_grace_period_init(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %gp_seq, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, i32 noundef %qsmask) #0 align 64 {
entry:
  %0 = ptrtoint ptr %rcuname to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %gp_seq to i64
  %conv8 = zext i8 %level to i64
  %conv12 = zext i32 %grplo to i64
  %conv16 = zext i32 %grphi to i64
  %conv20 = zext i32 %qsmask to i64
  tail call void @bpf_trace_run6(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_exp_grace_period(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %gpseq, ptr noundef %gpevent) #0 align 64 {
entry:
  %0 = ptrtoint ptr %rcuname to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %gpseq to i64
  %1 = ptrtoint ptr %gpevent to i32
  %conv8 = zext i32 %1 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_exp_funnel_lock(ptr noundef %__data, ptr noundef %rcuname, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, ptr noundef %gpevent) #0 align 64 {
entry:
  %0 = ptrtoint ptr %rcuname to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i8 %level to i64
  %conv8 = zext i32 %grplo to i64
  %conv12 = zext i32 %grphi to i64
  %1 = ptrtoint ptr %gpevent to i32
  %conv16 = zext i32 %1 to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_nocb_wake(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %cpu, ptr noundef %reason) #0 align 64 {
entry:
  %0 = ptrtoint ptr %rcuname to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %cpu to i64
  %1 = ptrtoint ptr %reason to i32
  %conv8 = zext i32 %1 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_preempt_task(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %pid, i32 noundef %gp_seq) #0 align 64 {
entry:
  %0 = ptrtoint ptr %rcuname to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %pid to i64
  %conv8 = zext i32 %gp_seq to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_unlock_preempted_task(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %pid) #0 align 64 {
entry:
  %0 = ptrtoint ptr %rcuname to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %gp_seq to i64
  %conv8 = zext i32 %pid to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_quiescent_state_report(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %mask, i32 noundef %qsmask, i8 noundef zeroext %level, i32 noundef %grplo, i32 noundef %grphi, i32 noundef %gp_tasks) #0 align 64 {
entry:
  %0 = ptrtoint ptr %rcuname to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %gp_seq to i64
  %conv8 = zext i32 %mask to i64
  %conv12 = zext i32 %qsmask to i64
  %conv16 = zext i8 %level to i64
  %conv20 = zext i32 %grplo to i64
  %conv24 = zext i32 %grphi to i64
  %conv28 = zext i32 %gp_tasks to i64
  tail call void @bpf_trace_run8(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20, i64 noundef %conv24, i64 noundef %conv28) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_fqs(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %gp_seq, i32 noundef %cpu, ptr noundef %qsevent) #0 align 64 {
entry:
  %0 = ptrtoint ptr %rcuname to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %gp_seq to i64
  %conv8 = zext i32 %cpu to i64
  %1 = ptrtoint ptr %qsevent to i32
  %conv12 = zext i32 %1 to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_stall_warning(ptr noundef %__data, ptr noundef %rcuname, ptr noundef %msg) #0 align 64 {
entry:
  %0 = ptrtoint ptr %rcuname to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %msg to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_dyntick(ptr noundef %__data, ptr noundef %polarity, i32 noundef %oldnesting, i32 noundef %newnesting, i32 noundef %dynticks) #0 align 64 {
entry:
  %0 = ptrtoint ptr %polarity to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %oldnesting to i64
  %conv8 = zext i32 %newnesting to i64
  %conv12 = zext i32 %dynticks to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_callback(ptr noundef %__data, ptr noundef %rcuname, ptr noundef %rhp, i32 noundef %qlen) #0 align 64 {
entry:
  %0 = ptrtoint ptr %rcuname to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %rhp to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %qlen to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_segcb_stats(ptr noundef %__data, ptr noundef %rs, ptr noundef %ctx) #0 align 64 {
entry:
  %0 = ptrtoint ptr %rs to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %ctx to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_kvfree_callback(ptr noundef %__data, ptr noundef %rcuname, ptr noundef %rhp, i32 noundef %offset, i32 noundef %qlen) #0 align 64 {
entry:
  %0 = ptrtoint ptr %rcuname to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %rhp to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %offset to i64
  %conv12 = zext i32 %qlen to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_batch_start(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %qlen, i32 noundef %blimit) #0 align 64 {
entry:
  %0 = ptrtoint ptr %rcuname to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %qlen to i64
  %conv8 = zext i32 %blimit to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_invoke_callback(ptr noundef %__data, ptr noundef %rcuname, ptr noundef %rhp) #0 align 64 {
entry:
  %0 = ptrtoint ptr %rcuname to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %rhp to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_invoke_kvfree_callback(ptr noundef %__data, ptr noundef %rcuname, ptr noundef %rhp, i32 noundef %offset) #0 align 64 {
entry:
  %0 = ptrtoint ptr %rcuname to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %rhp to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %offset to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_invoke_kfree_bulk_callback(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %nr_records, ptr noundef %p) #0 align 64 {
entry:
  %0 = ptrtoint ptr %rcuname to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %nr_records to i64
  %1 = ptrtoint ptr %p to i32
  %conv8 = zext i32 %1 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_batch_end(ptr noundef %__data, ptr noundef %rcuname, i32 noundef %callbacks_invoked, i8 noundef zeroext %cb, i8 noundef zeroext %nr, i8 noundef zeroext %iit, i8 noundef zeroext %risk) #0 align 64 {
entry:
  %0 = ptrtoint ptr %rcuname to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %callbacks_invoked to i64
  %conv8 = zext i8 %cb to i64
  %conv12 = zext i8 %nr to i64
  %conv16 = zext i8 %iit to i64
  %conv20 = zext i8 %risk to i64
  tail call void @bpf_trace_run6(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_torture_read(ptr noundef %__data, ptr noundef %rcutorturename, ptr noundef %rhp, i32 noundef %secs, i32 noundef %c_old, i32 noundef %c) #0 align 64 {
entry:
  %0 = ptrtoint ptr %rcutorturename to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %rhp to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %secs to i64
  %conv12 = zext i32 %c_old to i64
  %conv16 = zext i32 %c to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_rcu_barrier(ptr noundef %__data, ptr noundef %rcuname, ptr noundef %s, i32 noundef %cpu, i32 noundef %cnt, i32 noundef %done) #0 align 64 {
entry:
  %0 = ptrtoint ptr %rcuname to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %s to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %cpu to i64
  %conv12 = zext i32 %cnt to i64
  %conv16 = zext i32 %done to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rcu_read_lock_sched_held() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @debug_lockdep_rcu_enabled() #20
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %cleanup, label %if.end.i

if.end.i:                                         ; preds = %entry
  %call1.i = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call1.i, label %if.end3.i, label %cleanup

if.end3.i:                                        ; preds = %if.end.i
  %call4.i = tail call zeroext i1 @rcu_lockdep_current_cpu_online() #20
  br i1 %call4.i, label %if.end, label %cleanup

if.end:                                           ; preds = %if.end3.i
  %call.i18 = tail call i32 @lock_is_held_type(ptr noundef nonnull @rcu_sched_lock_map, i32 noundef -1) #20
  %tobool2.not = icmp eq i32 %call.i18, 0
  br i1 %tobool2.not, label %lor.rhs, label %cleanup

lor.rhs:                                          ; preds = %if.end
  %0 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i, align 4
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %land.rhs, label %cleanup

land.rhs:                                         ; preds = %lor.rhs
  %4 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #20, !srcloc !906
  %and.i = lshr i32 %4, 7
  %and.i.lobit = and i32 %and.i, 1
  br label %cleanup

cleanup:                                          ; preds = %land.rhs, %lor.rhs, %if.end, %if.end3.i, %if.end.i, %entry
  %retval.0.in = phi i32 [ 1, %if.end ], [ 1, %lor.rhs ], [ %and.i.lobit, %land.rhs ], [ 1, %entry ], [ 0, %if.end.i ], [ 0, %if.end3.i ]
  ret i32 %retval.0.in
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @rcu_gp_is_normal() #3 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_normal to i32))
  %0 = load volatile i32, ptr @rcu_normal, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_scheduler_active to i32))
  %1 = load i32, ptr @rcu_scheduler_active, align 4
  %cmp = icmp ne i32 %1, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ]
  ret i1 %2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @rcu_gp_is_expedited() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_expedited to i32))
  %0 = load i32, ptr @rcu_expedited, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %entry
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @rcu_expedited_nesting, i32 noundef 4) #20
  %1 = load volatile i32, ptr @rcu_expedited_nesting, align 4
  %tobool1 = icmp ne i32 %1, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %tobool1, %lor.rhs ]
  ret i1 %2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_expedite_gp() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @rcu_expedited_nesting, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr nonnull @rcu_expedited_nesting, i32 1, i32 3, i32 1) #20
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @rcu_expedited_nesting, ptr nonnull @rcu_expedited_nesting, i32 1, ptr nonnull elementtype(i32) @rcu_expedited_nesting) #20, !srcloc !907
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_unexpedite_gp() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @rcu_expedited_nesting, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr nonnull @rcu_expedited_nesting, i32 1, i32 3, i32 1) #20
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @rcu_expedited_nesting, ptr nonnull @rcu_expedited_nesting, i32 1, ptr nonnull elementtype(i32) @rcu_expedited_nesting) #20, !srcloc !908
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_end_inkernel_boot() local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @rcu_expedited_nesting, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr nonnull @rcu_expedited_nesting, i32 1, i32 3, i32 1) #20
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @rcu_expedited_nesting, ptr nonnull @rcu_expedited_nesting, i32 1, ptr nonnull elementtype(i32) @rcu_expedited_nesting) #20, !srcloc !908
  %1 = load i32, ptr @rcu_normal_after_boot, align 4
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.end, label %do.body2

do.body2:                                         ; preds = %entry
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @rcu_normal to i32))
  store volatile i32 1, ptr @rcu_normal, align 4
  br label %if.end

if.end:                                           ; preds = %do.body2, %entry
  store i1 true, ptr @rcu_boot_ended, align 1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @rcu_inkernel_boot_has_ended() #4 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %.b1 = load i1, ptr @rcu_boot_ended, align 1
  ret i1 %.b1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_test_sync_prims() local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @synchronize_rcu() #20
  tail call void @synchronize_rcu_expedited() #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_rcu() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_rcu_expedited() local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @rcu_set_runtime_mode() #5 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @synchronize_rcu() #20
  tail call void @synchronize_rcu_expedited() #20
  call void @__asan_store4_noabort(i32 ptrtoint (ptr @rcu_scheduler_active to i32))
  store i32 2, ptr @rcu_scheduler_active, align 4
  tail call void @kfree_rcu_scheduler_running() #20
  tail call void @synchronize_rcu() #20
  tail call void @synchronize_rcu_expedited() #20
  ret i32 0
}

; Function Attrs: mustprogress nofree noinline noprofile nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local i32 @debug_lockdep_rcu_enabled() #6 section ".noinstr.text" align 64 {
entry:
  %0 = load i32, ptr @rcu_scheduler_active, align 4
  %cmp.not = icmp eq i32 %0, 0
  br i1 %cmp.not, label %land.end, label %do.end

do.end:                                           ; preds = %entry
  %1 = load volatile i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %do.end
  %call = tail call fastcc ptr @current_thread_info() #22
  %task = getelementptr inbounds %struct.thread_info, ptr %call, i32 0, i32 2
  %2 = load ptr, ptr %task, align 8
  %lockdep_recursion = getelementptr inbounds %struct.task_struct, ptr %2, i32 0, i32 143
  %3 = load i32, ptr %lockdep_recursion, align 4
  %cmp1 = icmp eq i32 %3, 0
  %phi.cast = zext i1 %cmp1 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.end, %entry
  %4 = phi i32 [ 0, %do.end ], [ 0, %entry ], [ %phi.cast, %land.rhs ]
  ret i32 %4
}

; Function Attrs: inlinehint mustprogress nofree nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc ptr @current_thread_info() unnamed_addr #7 align 64 {
entry:
  %0 = tail call i32 @llvm.read_register.i32(metadata !893)
  %and = and i32 %0, -16384
  %1 = inttoptr i32 %and to ptr
  ret ptr %1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rcu_read_lock_held() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @debug_lockdep_rcu_enabled() #20
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %cleanup, label %if.end.i

if.end.i:                                         ; preds = %entry
  %call1.i = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call1.i, label %if.end3.i, label %cleanup

if.end3.i:                                        ; preds = %if.end.i
  %call4.i = tail call zeroext i1 @rcu_lockdep_current_cpu_online() #20
  br i1 %call4.i, label %if.end, label %cleanup

if.end:                                           ; preds = %if.end3.i
  %call.i2 = tail call i32 @lock_is_held_type(ptr noundef nonnull @rcu_lock_map, i32 noundef -1) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.end3.i, %if.end.i, %entry
  %retval.0 = phi i32 [ %call.i2, %if.end ], [ 1, %entry ], [ 0, %if.end.i ], [ 0, %if.end3.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rcu_read_lock_bh_held() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @debug_lockdep_rcu_enabled() #20
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %cleanup, label %if.end.i

if.end.i:                                         ; preds = %entry
  %call1.i = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call1.i, label %if.end3.i, label %cleanup

if.end3.i:                                        ; preds = %if.end.i
  %call4.i = tail call zeroext i1 @rcu_lockdep_current_cpu_online() #20
  br i1 %call4.i, label %if.end, label %cleanup

if.end:                                           ; preds = %if.end3.i
  %0 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %3, 65280
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %lor.rhs, label %cleanup

lor.rhs:                                          ; preds = %if.end
  %4 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #20, !srcloc !906
  %and.i = lshr i32 %4, 7
  %and.i.lobit = and i32 %and.i, 1
  br label %cleanup

cleanup:                                          ; preds = %lor.rhs, %if.end, %if.end3.i, %if.end.i, %entry
  %retval.0 = phi i32 [ 1, %if.end ], [ %and.i.lobit, %lor.rhs ], [ 1, %entry ], [ 0, %if.end.i ], [ 0, %if.end3.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rcu_read_lock_any_held() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @debug_lockdep_rcu_enabled() #20
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %cleanup, label %if.end.i

if.end.i:                                         ; preds = %entry
  %call1.i = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call1.i, label %if.end3.i, label %cleanup

if.end3.i:                                        ; preds = %if.end.i
  %call4.i = tail call zeroext i1 @rcu_lockdep_current_cpu_online() #20
  br i1 %call4.i, label %if.end, label %cleanup

if.end:                                           ; preds = %if.end3.i
  %call.i25 = tail call i32 @lock_is_held_type(ptr noundef nonnull @rcu_lock_map, i32 noundef -1) #20
  %tobool2.not = icmp eq i32 %call.i25, 0
  br i1 %tobool2.not, label %lor.lhs.false, label %cleanup

lor.lhs.false:                                    ; preds = %if.end
  %call.i26 = tail call i32 @lock_is_held_type(ptr noundef nonnull @rcu_bh_lock_map, i32 noundef -1) #20
  %tobool4.not = icmp eq i32 %call.i26, 0
  br i1 %tobool4.not, label %lor.lhs.false5, label %cleanup

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %call.i27 = tail call i32 @lock_is_held_type(ptr noundef nonnull @rcu_sched_lock_map, i32 noundef -1) #20
  %tobool7.not = icmp eq i32 %call.i27, 0
  br i1 %tobool7.not, label %if.end9, label %cleanup

if.end9:                                          ; preds = %lor.lhs.false5
  %0 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i, align 4
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %land.rhs, label %cleanup

land.rhs:                                         ; preds = %if.end9
  %4 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #20, !srcloc !906
  %and.i = lshr i32 %4, 7
  %and.i.lobit = and i32 %and.i, 1
  br label %cleanup

cleanup:                                          ; preds = %land.rhs, %if.end9, %lor.lhs.false5, %lor.lhs.false, %if.end, %if.end3.i, %if.end.i, %entry
  %retval.0 = phi i32 [ 1, %lor.lhs.false5 ], [ 1, %lor.lhs.false ], [ 1, %if.end ], [ 1, %if.end9 ], [ %and.i.lobit, %land.rhs ], [ 1, %entry ], [ 0, %if.end.i ], [ 0, %if.end3.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @wakeme_after_rcu(ptr noundef %head) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %completion = getelementptr inbounds %struct.rcu_synchronize, ptr %head, i32 0, i32 1
  tail call void @complete(ptr noundef %completion) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @complete(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__wait_rcu_gp(i1 noundef zeroext %checktiny, i32 noundef %n, ptr nocapture noundef readonly %crcu_array, ptr noundef %rs_array) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp93 = icmp sgt i32 %n, 0
  br i1 %cmp93, label %for.body, label %for.end53

for.cond24.preheader:                             ; preds = %for.inc21
  br i1 %cmp93, label %for.body26, label %for.end53

for.body:                                         ; preds = %for.inc21, %entry
  %i.094 = phi i32 [ %inc22, %for.inc21 ], [ 0, %entry ]
  br i1 %checktiny, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %arrayidx = getelementptr ptr, ptr %crcu_array, i32 %i.094
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 4
  %cmp1 = icmp eq ptr %1, @call_rcu
  br i1 %cmp1, label %do.body, label %if.end

do.body:                                          ; preds = %land.lhs.true
  tail call void @__might_sleep(ptr noundef nonnull @.str.4, i32 noundef 381) #20
  br label %for.inc21

if.end:                                           ; preds = %land.lhs.true, %for.body
  %cmp690.not = icmp eq i32 %i.094, 0
  br i1 %cmp690.not, label %for.end, label %for.body7.lr.ph

for.body7.lr.ph:                                  ; preds = %if.end
  %arrayidx9 = getelementptr ptr, ptr %crcu_array, i32 %i.094
  %2 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx9, align 4
  br label %for.body7

for.body7:                                        ; preds = %for.inc, %for.body7.lr.ph
  %j.091 = phi i32 [ 0, %for.body7.lr.ph ], [ %inc, %for.inc ]
  %arrayidx8 = getelementptr ptr, ptr %crcu_array, i32 %j.091
  %4 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx8, align 4
  %cmp10 = icmp eq ptr %5, %3
  br i1 %cmp10, label %for.end, label %for.inc

for.inc:                                          ; preds = %for.body7
  %inc = add nuw nsw i32 %j.091, 1
  %exitcond.not = icmp eq i32 %inc, %i.094
  br i1 %exitcond.not, label %if.then14, label %for.body7

for.end:                                          ; preds = %for.body7, %if.end
  %j.0.lcssa = phi i32 [ 0, %if.end ], [ %j.091, %for.body7 ]
  %cmp13 = icmp eq i32 %j.0.lcssa, %i.094
  br i1 %cmp13, label %if.then14, label %for.inc21

if.then14:                                        ; preds = %for.end, %for.inc
  %arrayidx15 = getelementptr %struct.rcu_synchronize, ptr %rs_array, i32 %i.094
  tail call void @debug_object_init_on_stack(ptr noundef %arrayidx15, ptr noundef nonnull @rcuhead_debug_descr) #20
  %completion = getelementptr %struct.rcu_synchronize, ptr %rs_array, i32 %i.094, i32 1
  %6 = ptrtoint ptr %completion to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %completion, align 4
  %wait.i = getelementptr %struct.rcu_synchronize, ptr %rs_array, i32 %i.094, i32 1, i32 1
  tail call void @__init_swait_queue_head(ptr noundef %wait.i, ptr noundef nonnull @.str.104, ptr noundef nonnull @init_completion.__key) #20
  %arrayidx17 = getelementptr ptr, ptr %crcu_array, i32 %i.094
  %7 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx17, align 4
  tail call void %8(ptr noundef %arrayidx15, ptr noundef nonnull @wakeme_after_rcu) #20
  br label %for.inc21

for.inc21:                                        ; preds = %if.then14, %for.end, %do.body
  %inc22 = add nuw nsw i32 %i.094, 1
  %exitcond103.not = icmp eq i32 %inc22, %n
  br i1 %exitcond103.not, label %for.cond24.preheader, label %for.body

for.body26:                                       ; preds = %for.inc51, %for.cond24.preheader
  %i.1101 = phi i32 [ %inc52, %for.inc51 ], [ 0, %for.cond24.preheader ]
  br i1 %checktiny, label %land.lhs.true28, label %if.end32

land.lhs.true28:                                  ; preds = %for.body26
  %arrayidx29 = getelementptr ptr, ptr %crcu_array, i32 %i.1101
  %9 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx29, align 4
  %cmp30 = icmp eq ptr %10, @call_rcu
  br i1 %cmp30, label %for.inc51, label %if.end32

if.end32:                                         ; preds = %land.lhs.true28, %for.body26
  %cmp3496.not = icmp eq i32 %i.1101, 0
  br i1 %cmp3496.not, label %for.end43, label %for.body35.lr.ph

for.body35.lr.ph:                                 ; preds = %if.end32
  %arrayidx37 = getelementptr ptr, ptr %crcu_array, i32 %i.1101
  %11 = ptrtoint ptr %arrayidx37 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx37, align 4
  br label %for.body35

for.body35:                                       ; preds = %for.inc41, %for.body35.lr.ph
  %j.197 = phi i32 [ 0, %for.body35.lr.ph ], [ %inc42, %for.inc41 ]
  %arrayidx36 = getelementptr ptr, ptr %crcu_array, i32 %j.197
  %13 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx36, align 4
  %cmp38 = icmp eq ptr %14, %12
  br i1 %cmp38, label %for.end43, label %for.inc41

for.inc41:                                        ; preds = %for.body35
  %inc42 = add nuw nsw i32 %j.197, 1
  %exitcond104.not = icmp eq i32 %inc42, %i.1101
  br i1 %exitcond104.not, label %if.then45, label %for.body35

for.end43:                                        ; preds = %for.body35, %if.end32
  %j.1.lcssa = phi i32 [ 0, %if.end32 ], [ %j.197, %for.body35 ]
  %cmp44 = icmp eq i32 %j.1.lcssa, %i.1101
  br i1 %cmp44, label %if.then45, label %for.inc51

if.then45:                                        ; preds = %for.end43, %for.inc41
  %arrayidx46 = getelementptr %struct.rcu_synchronize, ptr %rs_array, i32 %i.1101
  %completion47 = getelementptr %struct.rcu_synchronize, ptr %rs_array, i32 %i.1101, i32 1
  tail call void @wait_for_completion(ptr noundef %completion47) #20
  tail call void @debug_object_free(ptr noundef %arrayidx46, ptr noundef nonnull @rcuhead_debug_descr) #20
  br label %for.inc51

for.inc51:                                        ; preds = %if.then45, %for.end43, %land.lhs.true28
  %inc52 = add nuw nsw i32 %i.1101, 1
  %exitcond105.not = icmp eq i32 %inc52, %n
  br i1 %exitcond105.not, label %for.end53, label %for.body26

for.end53:                                        ; preds = %for.inc51, %for.cond24.preheader, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @call_rcu(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @init_rcu_head_on_stack(ptr noundef %head) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @debug_object_init_on_stack(ptr noundef %head, ptr noundef nonnull @rcuhead_debug_descr) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @wait_for_completion(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @destroy_rcu_head_on_stack(ptr noundef %head) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @debug_object_free(ptr noundef %head, ptr noundef nonnull @rcuhead_debug_descr) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @init_rcu_head(ptr noundef %head) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @debug_object_init(ptr noundef %head, ptr noundef nonnull @rcuhead_debug_descr) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_object_init(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @destroy_rcu_head(ptr noundef %head) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @debug_object_free(ptr noundef %head, ptr noundef nonnull @rcuhead_debug_descr) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_object_free(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_object_init_on_stack(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal zeroext i1 @rcuhead_is_static_object(ptr nocapture noundef readnone %addr) #8 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  ret i1 true
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @do_trace_rcu_torture_read(ptr noundef %rcutorturename, ptr noundef %rhp, i32 noundef %secs, i32 noundef %c_old, i32 noundef %c) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @trace_rcu_torture_read(ptr noundef %rcutorturename, ptr noundef %rhp, i32 noundef %secs, i32 noundef %c_old, i32 noundef %c)
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_rcu_torture_read(ptr noundef %rcutorturename, ptr noundef %rhp, i32 noundef %secs, i32 noundef %c_old, i32 noundef %c) unnamed_addr #9 align 64 {
entry:
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_torture_read, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_rcu_torture_read, %do.body)) #20
          to label %if.end48 [label %do.body], !srcloc !909

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !903

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.107, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %do.body
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end69, label %if.end31

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !910
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_torture_read, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i, %if.end31
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i ], [ %13, %if.end31 ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %rcutorturename, ptr noundef %rhp, i32 noundef %secs, i32 noundef %c_old, i32 noundef %c) #20
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !911
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !911
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %cpu_online.exit85, label %land.rhs.i.i.i.i79

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %cpu_online.exit85, label %if.then.i.i.i.i80, !prof !903

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.107, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79, %if.end48
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %if.end69, label %if.then52

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !912
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_rcu_torture_read, i32 0, i32 7), align 4
  %call.i.i = tail call i32 @debug_lockdep_rcu_enabled() #20
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %do.end67, label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then52
  %call1.i.i = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call1.i.i, label %if.end3.i.i, label %land.lhs.true

if.end3.i.i:                                      ; preds = %if.end.i.i
  %call4.i.i = tail call zeroext i1 @rcu_lockdep_current_cpu_online() #20
  br i1 %call4.i.i, label %if.end.i, label %land.lhs.true

if.end.i:                                         ; preds = %if.end3.i.i
  %call.i18.i = tail call i32 @lock_is_held_type(ptr noundef nonnull @rcu_sched_lock_map, i32 noundef -1) #20
  %tobool2.not.i = icmp eq i32 %call.i18.i, 0
  br i1 %tobool2.not.i, label %lor.rhs.i, label %do.end67

lor.rhs.i:                                        ; preds = %if.end.i
  %38 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i86 to ptr
  %preempt_count.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i87, align 4
  %cmp.i = icmp eq i32 %41, 0
  br i1 %cmp.i, label %rcu_read_lock_sched_held.exit, label %do.end67

rcu_read_lock_sched_held.exit:                    ; preds = %lor.rhs.i
  %42 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #20, !srcloc !906
  %43 = and i32 %42, 128
  %tobool59.not = icmp eq i32 %43, 0
  br i1 %tobool59.not, label %land.lhs.true, label %do.end67

land.lhs.true:                                    ; preds = %rcu_read_lock_sched_held.exit, %if.end3.i.i, %if.end.i.i
  %call60 = tail call i32 @debug_lockdep_rcu_enabled()
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %do.end67, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_rcu_torture_read.__warned, align 1
  br i1 %.b72, label %do.end67, label %if.then64

if.then64:                                        ; preds = %land.lhs.true62
  store i1 true, ptr @trace_rcu_torture_read.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.105, i32 noundef 791, ptr noundef nonnull @.str.106) #20
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62, %land.lhs.true, %rcu_read_lock_sched_held.exit, %lor.rhs.i, %if.end.i, %if.then52
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !913
  %44 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i.i88 = and i32 %44, -16384
  %45 = inttoptr i32 %and.i.i.i.i88 to ptr
  %preempt_count.i.i.i89 = getelementptr inbounds %struct.thread_info, ptr %45, i32 0, i32 1
  %46 = ptrtoint ptr %preempt_count.i.i.i89 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %preempt_count.i.i.i89, align 4
  %sub.i.i = add i32 %47, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i89, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85, %cpu_online.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rcutorture_sched_setaffinity(i32 noundef %pid, ptr noundef %in_mask) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @sched_setaffinity(i32 noundef %pid, ptr noundef %in_mask) #20
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end28, label %land.rhs

land.rhs:                                         ; preds = %entry
  %.b40 = load i1, ptr @rcutorture_sched_setaffinity.__already_done, align 1
  br i1 %.b40, label %if.end28, label %if.then, !prof !903

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @rcutorture_sched_setaffinity.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.4, i32 noundef 488, i32 noundef 9, ptr noundef nonnull @.str.6, ptr noundef nonnull @__func__.rcutorture_sched_setaffinity, i32 noundef %call) #20
  br label %if.end28

if.end28:                                         ; preds = %if.then, %land.rhs, %entry
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sched_setaffinity(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_early_boot_tests() local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.7) #23
  %0 = load i8, ptr @rcu_self_test, align 1, !range !914
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @call_rcu(ptr noundef nonnull @early_boot_test_call_rcu.head, ptr noundef nonnull @test_callback) #20
  %call.i = tail call i32 @start_poll_synchronize_srcu(ptr noundef nonnull @early_srcu) #20
  store i32 %call.i, ptr @early_srcu_cookie, align 4
  tail call void @call_srcu(ptr noundef nonnull @early_srcu, ptr noundef nonnull @early_boot_test_call_rcu.shead, ptr noundef nonnull @test_callback) #20
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %1 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %1, i32 noundef 3264, i32 noundef 8) #24
  %tobool.not.i = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not.i, label %land.rhs.i, label %do.end45.i

land.rhs.i:                                       ; preds = %if.then
  %.b54.i = load i1, ptr @early_boot_test_call_rcu.__already_done, align 1
  br i1 %.b54.i, label %if.end, label %if.then.i, !prof !903

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @early_boot_test_call_rcu.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.4, i32 noundef 545, i32 noundef 9, ptr noundef null) #20
  br label %if.end

do.end45.i:                                       ; preds = %if.then
  tail call void @kvfree_call_rcu(ptr noundef nonnull %call7.i.i, ptr noundef null) #20
  br label %if.end

if.end:                                           ; preds = %do.end45.i, %if.then.i, %land.rhs.i, %entry
  tail call void @synchronize_rcu() #20
  tail call void @synchronize_rcu_expedited() #20
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #10

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rcu_verify_early_boot_tests() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i8, ptr @rcu_self_test, align 1, !range !914
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.end39, label %if.then

if.then:                                          ; preds = %entry
  tail call void @rcu_barrier() #20
  tail call void @srcu_barrier(ptr noundef nonnull @early_srcu) #20
  %1 = load i32, ptr @early_srcu_cookie, align 4
  %call = tail call zeroext i1 @poll_state_synchronize_srcu(ptr noundef nonnull @early_srcu, i32 noundef %1) #20
  br i1 %call, label %if.end39, label %land.rhs

land.rhs:                                         ; preds = %if.then
  %.b73 = load i1, ptr @rcu_verify_early_boot_tests.__already_done, align 1
  br i1 %.b73, label %if.end39, label %if.then10, !prof !903

if.then10:                                        ; preds = %land.rhs
  store i1 true, ptr @rcu_verify_early_boot_tests.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.4, i32 noundef 569, i32 noundef 9, ptr noundef null) #20
  br label %if.end39

if.end39:                                         ; preds = %if.then10, %land.rhs, %if.then, %entry
  %early_boot_test_counter.0 = phi i32 [ 0, %entry ], [ 2, %if.then ], [ 2, %if.then10 ], [ 2, %land.rhs ]
  %2 = load i32, ptr @rcu_self_test_counter, align 4
  %cmp.not = icmp eq i32 %2, %early_boot_test_counter.0
  br i1 %cmp.not, label %if.end67, label %do.end53

do.end53:                                         ; preds = %if.end39
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.4, i32 noundef 573, i32 noundef 9, ptr noundef null) #20
  br label %if.end67

if.end67:                                         ; preds = %do.end53, %if.end39
  %ret.0 = phi i32 [ -1, %do.end53 ], [ 0, %if.end39 ]
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @call_rcu_tasks_iw_wakeup(ptr nocapture noundef readonly %iwp) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %rtpp = getelementptr i8, ptr %iwp, i32 28
  %0 = ptrtoint ptr %rtpp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rtpp, align 4
  tail call void @__wake_up(ptr noundef %1, i32 noundef 3, i32 noundef 1, ptr noundef null) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @call_rcu_tasks(ptr noundef %rhp, ptr noundef %func) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @call_rcu_tasks_generic(ptr noundef %rhp, ptr noundef %func, ptr noundef nonnull @rcu_tasks)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @call_rcu_tasks_generic(ptr noundef %rhp, ptr noundef %func, ptr noundef %rtp) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %rhp to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %rhp, align 4
  %func1 = getelementptr inbounds %struct.callback_head, ptr %rhp, i32 0, i32 1
  %1 = ptrtoint ptr %func1 to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %func, ptr %func1, align 4
  %2 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #20, !srcloc !915
  %and.i = and i32 %2, 128
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.then, label %do.end11

if.then:                                          ; preds = %entry
  tail call void @trace_hardirqs_off() #20
  br label %do.end11

do.end11:                                         ; preds = %if.then, %entry
  %3 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %6, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !916
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #20
  %call.i = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i, label %rcu_read_lock.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.end11
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #20
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %rcu_read_lock.exit, label %land.lhs.true2.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %rcu_read_lock.exit, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true2.i
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.117, i32 noundef 696, ptr noundef nonnull @.str.118) #20
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i, %land.lhs.true.i, %do.end11
  %rtpcpu = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 18
  %7 = ptrtoint ptr %rtpcpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %rtpcpu, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i491 = and i32 %10, -16384
  %11 = inttoptr i32 %and.i491 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %cpu, align 4
  %percpu_enqueue_shift = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 19
  %14 = ptrtoint ptr %percpu_enqueue_shift to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %percpu_enqueue_shift, align 4
  %shr = lshr i32 %13, %15
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %shr
  %16 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx, align 4
  %add = add i32 %17, %9
  %18 = inttoptr i32 %add to ptr
  %lock = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %18, i32 0, i32 1
  %call22 = tail call i32 @_raw_spin_trylock(ptr noundef %lock) #20
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %do.body35, label %if.end61

do.body35:                                        ; preds = %rcu_read_lock.exit
  tail call void @_raw_spin_lock(ptr noundef %lock) #20
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %19 = load volatile i32, ptr @jiffies, align 128
  %rtp_jiffies = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %18, i32 0, i32 2
  %20 = ptrtoint ptr %rtp_jiffies to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %rtp_jiffies, align 4
  %cmp42.not = icmp eq i32 %21, %19
  br i1 %cmp42.not, label %if.end46, label %if.then44

if.then44:                                        ; preds = %do.body35
  %22 = ptrtoint ptr %rtp_jiffies to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %19, ptr %rtp_jiffies, align 4
  %rtp_n_lock_retries = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %18, i32 0, i32 3
  %23 = ptrtoint ptr %rtp_n_lock_retries to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 0, ptr %rtp_n_lock_retries, align 4
  br label %if.end46

if.end46:                                         ; preds = %if.then44, %do.body35
  %.b462 = load i1, ptr @rcu_task_cb_adjust, align 1
  br i1 %.b462, label %land.lhs.true, label %if.end61

land.lhs.true:                                    ; preds = %if.end46
  %rtp_n_lock_retries49 = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %18, i32 0, i32 3
  %24 = ptrtoint ptr %rtp_n_lock_retries49 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %rtp_n_lock_retries49, align 4
  %inc = add i32 %25, 1
  store i32 %inc, ptr %rtp_n_lock_retries49, align 4
  %26 = load i32, ptr @rcu_task_contend_lim, align 4
  %cmp50 = icmp ugt i32 %inc, %26
  br i1 %cmp50, label %do.end55, label %if.end61

do.end55:                                         ; preds = %land.lhs.true
  %percpu_enqueue_lim = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 20
  %27 = ptrtoint ptr %percpu_enqueue_lim to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %percpu_enqueue_lim, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %29 = load i32, ptr @nr_cpu_ids, align 4
  %cmp57.not = icmp ne i32 %28, %29
  br label %if.end61

if.end61:                                         ; preds = %do.end55, %land.lhs.true, %if.end46, %rcu_read_lock.exit
  %needadjust.0.off0 = phi i1 [ false, %rcu_read_lock.exit ], [ false, %land.lhs.true ], [ false, %if.end46 ], [ %cmp57.not, %do.end55 ]
  %flags1.i.i = getelementptr inbounds %struct.rcu_segcblist, ptr %18, i32 0, i32 5
  %30 = ptrtoint ptr %flags1.i.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load volatile i8, ptr %flags1.i.i, align 4
  %32 = and i8 %31, 1
  %tobool.i.i.not = icmp eq i8 %32, 0
  br i1 %tobool.i.i.not, label %do.body65, label %if.end186

do.body65:                                        ; preds = %if.end61
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %33 = load i32, ptr @debug_locks, align 4
  %tobool66.not = icmp eq i32 %33, 0
  br i1 %tobool66.not, label %if.end166, label %land.lhs.true67

land.lhs.true67:                                  ; preds = %do.body65
  %34 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %37, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !917
  %38 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %cpu, align 4
  %arrayidx88 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %39
  %40 = ptrtoint ptr %arrayidx88 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %arrayidx88, align 4
  %add89 = add i32 %41, ptrtoint (ptr @lockdep_recursion to i32)
  %42 = inttoptr i32 %add89 to ptr
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %42, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !918
  %45 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i471 = and i32 %45, -16384
  %46 = inttoptr i32 %and.i.i.i471 to ptr
  %preempt_count.i.i472 = getelementptr inbounds %struct.thread_info, ptr %46, i32 0, i32 1
  %47 = ptrtoint ptr %preempt_count.i.i472 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %preempt_count.i.i472, align 4
  %sub.i = add i32 %48, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i472, align 4
  %tobool96.not = icmp eq i32 %44, 0
  br i1 %tobool96.not, label %land.rhs, label %if.end166

land.rhs:                                         ; preds = %land.lhs.true67
  %49 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i473 = and i32 %49, -16384
  %50 = inttoptr i32 %and.i.i.i473 to ptr
  %preempt_count.i.i474 = getelementptr inbounds %struct.thread_info, ptr %50, i32 0, i32 1
  %51 = ptrtoint ptr %preempt_count.i.i474 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile i32, ptr %preempt_count.i.i474, align 4
  %add.i475 = add i32 %52, 1
  store volatile i32 %add.i475, ptr %preempt_count.i.i474, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !919
  %53 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %cpu, align 4
  %arrayidx120 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %54
  %55 = ptrtoint ptr %arrayidx120 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %arrayidx120, align 4
  %add121 = add i32 %56, ptrtoint (ptr @hardirqs_enabled to i32)
  %57 = inttoptr i32 %add121 to ptr
  %58 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %57, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !920
  %60 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i476 = and i32 %60, -16384
  %61 = inttoptr i32 %and.i.i.i476 to ptr
  %preempt_count.i.i477 = getelementptr inbounds %struct.thread_info, ptr %61, i32 0, i32 1
  %62 = ptrtoint ptr %preempt_count.i.i477 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %preempt_count.i.i477, align 4
  %sub.i478 = add i32 %63, -1
  store volatile i32 %sub.i478, ptr %preempt_count.i.i477, align 4
  %tobool128.not = icmp eq i32 %59, 0
  br i1 %tobool128.not, label %if.end166, label %land.rhs133

land.rhs133:                                      ; preds = %land.rhs
  %.b460464 = load i1, ptr @call_rcu_tasks_generic.__already_done, align 1
  br i1 %.b460464, label %if.end166, label %if.then140, !prof !903

if.then140:                                       ; preds = %land.rhs133
  store i1 true, ptr @call_rcu_tasks_generic.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.14, i32 noundef 295, i32 noundef 9, ptr noundef null) #20
  br label %if.end166

if.end166:                                        ; preds = %if.then140, %land.rhs133, %land.rhs, %land.lhs.true67, %do.body65
  tail call void @_raw_spin_unlock(ptr noundef %lock) #20
  tail call fastcc void @cblist_init_generic(ptr noundef %rtp)
  tail call void @_raw_spin_lock(ptr noundef %lock) #20
  br label %if.end186

if.end186:                                        ; preds = %if.end166, %if.end61
  %64 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile ptr, ptr %18, align 4
  %tobool.not.i492 = icmp eq ptr %65, null
  tail call void @rcu_segcblist_enqueue(ptr noundef %18, ptr noundef %rhp) #20
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %66 = load i32, ptr @debug_locks, align 4
  %tobool194.not = icmp eq i32 %66, 0
  br i1 %tobool194.not, label %if.end307, label %land.lhs.true195

land.lhs.true195:                                 ; preds = %if.end186
  %67 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i479 = and i32 %67, -16384
  %68 = inttoptr i32 %and.i.i.i479 to ptr
  %preempt_count.i.i480 = getelementptr inbounds %struct.thread_info, ptr %68, i32 0, i32 1
  %69 = ptrtoint ptr %preempt_count.i.i480 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %preempt_count.i.i480, align 4
  %add.i481 = add i32 %70, 1
  store volatile i32 %add.i481, ptr %preempt_count.i.i480, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !921
  %71 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %cpu, align 4
  %arrayidx219 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %72
  %73 = ptrtoint ptr %arrayidx219 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %arrayidx219, align 4
  %add220 = add i32 %74, ptrtoint (ptr @lockdep_recursion to i32)
  %75 = inttoptr i32 %add220 to ptr
  %76 = ptrtoint ptr %75 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %75, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !922
  %78 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i482 = and i32 %78, -16384
  %79 = inttoptr i32 %and.i.i.i482 to ptr
  %preempt_count.i.i483 = getelementptr inbounds %struct.thread_info, ptr %79, i32 0, i32 1
  %80 = ptrtoint ptr %preempt_count.i.i483 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load volatile i32, ptr %preempt_count.i.i483, align 4
  %sub.i484 = add i32 %81, -1
  store volatile i32 %sub.i484, ptr %preempt_count.i.i483, align 4
  %tobool227.not = icmp eq i32 %77, 0
  br i1 %tobool227.not, label %land.rhs228, label %if.end307

land.rhs228:                                      ; preds = %land.lhs.true195
  %82 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i485 = and i32 %82, -16384
  %83 = inttoptr i32 %and.i.i.i485 to ptr
  %preempt_count.i.i486 = getelementptr inbounds %struct.thread_info, ptr %83, i32 0, i32 1
  %84 = ptrtoint ptr %preempt_count.i.i486 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile i32, ptr %preempt_count.i.i486, align 4
  %add.i487 = add i32 %85, 1
  store volatile i32 %add.i487, ptr %preempt_count.i.i486, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !923
  %86 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %cpu, align 4
  %arrayidx252 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %87
  %88 = ptrtoint ptr %arrayidx252 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %arrayidx252, align 4
  %add253 = add i32 %89, ptrtoint (ptr @hardirqs_enabled to i32)
  %90 = inttoptr i32 %add253 to ptr
  %91 = ptrtoint ptr %90 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load volatile i32, ptr %90, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !924
  %93 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i488 = and i32 %93, -16384
  %94 = inttoptr i32 %and.i.i.i488 to ptr
  %preempt_count.i.i489 = getelementptr inbounds %struct.thread_info, ptr %94, i32 0, i32 1
  %95 = ptrtoint ptr %preempt_count.i.i489 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load volatile i32, ptr %preempt_count.i.i489, align 4
  %sub.i490 = add i32 %96, -1
  store volatile i32 %sub.i490, ptr %preempt_count.i.i489, align 4
  %tobool260.not = icmp eq i32 %92, 0
  br i1 %tobool260.not, label %if.end307, label %land.rhs269

land.rhs269:                                      ; preds = %land.rhs228
  %.b461463 = load i1, ptr @call_rcu_tasks_generic.__already_done.114, align 1
  br i1 %.b461463, label %if.end307, label %if.then280, !prof !903

if.then280:                                       ; preds = %land.rhs269
  store i1 true, ptr @call_rcu_tasks_generic.__already_done.114, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.14, i32 noundef 301, i32 noundef 9, ptr noundef null) #20
  br label %if.end307

if.end307:                                        ; preds = %if.then280, %land.rhs269, %land.rhs228, %land.lhs.true195, %if.end186
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %2) #20
  br i1 %needadjust.0.off0, label %do.body336, label %if.end414, !prof !904

do.body336:                                       ; preds = %if.end307
  %cbs_gbl_lock = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 1
  %call342 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %cbs_gbl_lock) #20
  %percpu_enqueue_lim345 = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 20
  %97 = ptrtoint ptr %percpu_enqueue_lim345 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %percpu_enqueue_lim345, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %99 = load i32, ptr @nr_cpu_ids, align 4
  %cmp346.not = icmp eq i32 %98, %99
  br i1 %cmp346.not, label %do.body405, label %cond.end360

cond.end360:                                      ; preds = %do.body336
  %tobool.not.i.i = icmp eq i32 %99, 0
  %100 = tail call i32 @llvm.ctlz.i32(i32 %99, i1 true) #20, !range !925
  %sub.i.op.i.op = sub nuw nsw i32 32, %100
  %add362 = select i1 %tobool.not.i.i, i32 0, i32 %sub.i.op.i.op
  %101 = ptrtoint ptr %percpu_enqueue_shift to i32
  call void @__asan_store4_noabort(i32 %101)
  store volatile i32 %add362, ptr %percpu_enqueue_shift, align 4
  %percpu_dequeue_lim = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 21
  %102 = ptrtoint ptr %percpu_dequeue_lim to i32
  call void @__asan_store4_noabort(i32 %102)
  store volatile i32 %99, ptr %percpu_dequeue_lim, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !926
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %103 = load i32, ptr @nr_cpu_ids, align 4
  %104 = ptrtoint ptr %percpu_enqueue_lim345 to i32
  call void @__asan_store4_noabort(i32 %104)
  store volatile i32 %103, ptr %percpu_enqueue_lim345, align 4
  %name = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 27
  %105 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %name, align 4
  %call403 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.115, ptr noundef %106) #23
  br label %do.body405

do.body405:                                       ; preds = %cond.end360, %do.body336
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %cbs_gbl_lock, i32 noundef %call342) #20
  br label %if.end414

if.end414:                                        ; preds = %do.body405, %if.end307
  %call.i494 = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i494, label %rcu_read_unlock.exit, label %land.lhs.true.i497

land.lhs.true.i497:                               ; preds = %if.end414
  %call1.i495 = tail call i32 @debug_lockdep_rcu_enabled() #20
  %tobool.not.i496 = icmp eq i32 %call1.i495, 0
  br i1 %tobool.not.i496, label %rcu_read_unlock.exit, label %land.lhs.true2.i499

land.lhs.true2.i499:                              ; preds = %land.lhs.true.i497
  %.b4.i498 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i498, label %rcu_read_unlock.exit, label %if.then.i500

if.then.i500:                                     ; preds = %land.lhs.true2.i499
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.117, i32 noundef 724, ptr noundef nonnull @.str.129) #20
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i500, %land.lhs.true2.i499, %land.lhs.true.i497, %if.end414
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !927
  %107 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i.i.i501 = and i32 %107, -16384
  %108 = inttoptr i32 %and.i.i.i.i.i501 to ptr
  %preempt_count.i.i.i.i502 = getelementptr inbounds %struct.thread_info, ptr %108, i32 0, i32 1
  %109 = ptrtoint ptr %preempt_count.i.i.i.i502 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load volatile i32, ptr %preempt_count.i.i.i.i502, align 4
  %sub.i.i.i = add i32 %110, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i502, align 4
  tail call void @rcu_read_unlock_strict() #20
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #20
  br i1 %tobool.not.i492, label %do.end420, label %if.end425

do.end420:                                        ; preds = %rcu_read_unlock.exit
  %kthread_ptr = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 10
  %111 = ptrtoint ptr %kthread_ptr to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load volatile ptr, ptr %kthread_ptr, align 4
  %tobool422.not = icmp eq ptr %112, null
  br i1 %tobool422.not, label %if.end425, label %if.then423

if.then423:                                       ; preds = %do.end420
  %rtp_irq_work = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %18, i32 0, i32 5
  %call424 = tail call zeroext i1 @irq_work_queue(ptr noundef %rtp_irq_work) #20
  br label %if.end425

if.end425:                                        ; preds = %if.then423, %do.end420, %rcu_read_unlock.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @synchronize_rcu_tasks() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %__crcu_array.i = alloca [1 x ptr], align 4
  %__rs_array.i = alloca [1 x %struct.rcu_synchronize], align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_scheduler_active to i32))
  %0 = load i32, ptr @rcu_scheduler_active, align 4
  %cmp.i = icmp eq i32 %0, 0
  br i1 %cmp.i, label %land.lhs.true.i, label %synchronize_rcu_tasks_generic.exit

land.lhs.true.i:                                  ; preds = %entry
  %call.i = tail call i32 @debug_lockdep_rcu_enabled() #20
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %synchronize_rcu_tasks_generic.exit, label %land.lhs.true1.i

land.lhs.true1.i:                                 ; preds = %land.lhs.true.i
  %.b6.i = load i1, ptr @synchronize_rcu_tasks_generic.__warned, align 1
  br i1 %.b6.i, label %synchronize_rcu_tasks_generic.exit, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true1.i
  store i1 true, ptr @synchronize_rcu_tasks_generic.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.14, i32 noundef 323, ptr noundef nonnull @.str.137) #20
  br label %synchronize_rcu_tasks_generic.exit

synchronize_rcu_tasks_generic.exit:               ; preds = %if.then.i, %land.lhs.true1.i, %land.lhs.true.i, %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__crcu_array.i) #20
  %1 = load ptr, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 17), align 4
  %2 = ptrtoint ptr %__crcu_array.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %1, ptr %__crcu_array.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__rs_array.i) #20
  %3 = call ptr @memset(ptr %__rs_array.i, i32 255, i32 64)
  call void @__wait_rcu_gp(i1 noundef zeroext false, i32 noundef 1, ptr noundef nonnull %__crcu_array.i, ptr noundef nonnull %__rs_array.i) #20
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__rs_array.i) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__crcu_array.i) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_barrier_tasks() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @rcu_barrier_tasks_generic(ptr noundef nonnull @rcu_tasks)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_barrier_tasks_generic(ptr noundef %rtp) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %barrier_q_seq = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 26
  %0 = ptrtoint ptr %barrier_q_seq to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %barrier_q_seq, align 4
  %add1.i = add i32 %1, 7
  %and.i = and i32 %add1.i, -4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !928
  %barrier_q_mutex = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 23
  tail call void @mutex_lock_nested(ptr noundef %barrier_q_mutex, i32 noundef 0) #20
  %2 = ptrtoint ptr %barrier_q_seq to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %barrier_q_seq, align 4
  %sub.i209 = sub i32 %3, %and.i
  %cmp.i = icmp sgt i32 %sub.i209, -1
  br i1 %cmp.i, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !929
  br label %cleanup

if.end:                                           ; preds = %entry
  %add.i210 = add i32 %3, 1
  %4 = ptrtoint ptr %barrier_q_seq to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile i32 %add.i210, ptr %barrier_q_seq, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !930
  %5 = ptrtoint ptr %barrier_q_seq to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %barrier_q_seq, align 4
  %and.i.i = and i32 %6, 3
  %cmp.not.i = icmp eq i32 %and.i.i, 1
  br i1 %cmp.not.i, label %rcu_seq_start.exit, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.end
  %.b49.i = load i1, ptr @rcu_seq_start.__already_done, align 1
  br i1 %.b49.i, label %rcu_seq_start.exit, label %if.then.i, !prof !903

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @rcu_seq_start.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.138, i32 noundef 59, i32 noundef 9, ptr noundef null) #20
  br label %rcu_seq_start.exit

rcu_seq_start.exit:                               ; preds = %if.then.i, %land.rhs.i, %if.end
  %barrier_q_completion = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 25
  %7 = ptrtoint ptr %barrier_q_completion to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %barrier_q_completion, align 4
  %wait.i = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 25, i32 1
  tail call void @__init_swait_queue_head(ptr noundef %wait.i, ptr noundef nonnull @.str.104, ptr noundef nonnull @init_completion.__key) #20
  %barrier_q_count = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 24
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %barrier_q_count, i32 noundef 4) #20
  %8 = ptrtoint ptr %barrier_q_count to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile i32 2, ptr %barrier_q_count, align 4
  %percpu_dequeue_lim = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 21
  %call8215 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #25
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %9 = load i32, ptr @nr_cpu_ids, align 4
  %cmp216 = icmp ult i32 %call8215, %9
  br i1 %cmp216, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %rcu_seq_start.exit
  %rtpcpu = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 18
  br label %for.body

for.body:                                         ; preds = %if.end140, %for.body.lr.ph
  %call8217 = phi i32 [ %call8215, %for.body.lr.ph ], [ %call8, %if.end140 ]
  %10 = ptrtoint ptr %percpu_dequeue_lim to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %percpu_dequeue_lim, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !931
  %cmp16.not = icmp slt i32 %call8217, %11
  br i1 %cmp16.not, label %do.body19, label %for.end

do.body19:                                        ; preds = %for.body
  %12 = ptrtoint ptr %rtpcpu to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %rtpcpu, align 4
  %14 = ptrtoint ptr %13 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call8217
  %15 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx, align 4
  %add = add i32 %16, %14
  %17 = inttoptr i32 %add to ptr
  %barrier_q_head = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %17, i32 0, i32 6
  %func = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %17, i32 0, i32 6, i32 1
  %18 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr @rcu_barrier_tasks_generic_cb, ptr %func, align 4
  %lock = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %17, i32 0, i32 1
  %call28 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #20
  %call37 = tail call zeroext i1 @rcu_segcblist_entrain(ptr noundef %17, ptr noundef %barrier_q_head) #20
  br i1 %call37, label %if.then38, label %do.body42

if.then38:                                        ; preds = %do.body19
  %call.i.i199 = tail call zeroext i1 @__kasan_check_write(ptr noundef %barrier_q_count, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %barrier_q_count, i32 1, i32 3, i32 1) #20
  %19 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %barrier_q_count, ptr %barrier_q_count, i32 1, ptr elementtype(i32) %barrier_q_count) #20, !srcloc !907
  br label %do.body42

do.body42:                                        ; preds = %if.then38, %do.body19
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %20 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %20, 0
  br i1 %tobool.not, label %if.end140, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body42
  %21 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i = and i32 %21, -16384
  %22 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %24, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !932
  %25 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i211 = and i32 %25, -16384
  %26 = inttoptr i32 %and.i211 to ptr
  %cpu62 = getelementptr inbounds %struct.thread_info, ptr %26, i32 0, i32 3
  %27 = ptrtoint ptr %cpu62 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cpu62, align 4
  %arrayidx63 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %28
  %29 = ptrtoint ptr %arrayidx63 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %arrayidx63, align 4
  %add64 = add i32 %30, ptrtoint (ptr @lockdep_recursion to i32)
  %31 = inttoptr i32 %add64 to ptr
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %31, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !933
  %34 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i200 = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i.i200 to ptr
  %preempt_count.i.i201 = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %preempt_count.i.i201 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %preempt_count.i.i201, align 4
  %sub.i = add i32 %37, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i201, align 4
  %tobool71.not = icmp eq i32 %33, 0
  br i1 %tobool71.not, label %land.rhs, label %if.end140

land.rhs:                                         ; preds = %land.lhs.true
  %38 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i202 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i202 to ptr
  %preempt_count.i.i203 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i203 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i203, align 4
  %add.i204 = add i32 %41, 1
  store volatile i32 %add.i204, ptr %preempt_count.i.i203, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !934
  %42 = ptrtoint ptr %cpu62 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %cpu62, align 4
  %arrayidx95 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %43
  %44 = ptrtoint ptr %arrayidx95 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %arrayidx95, align 4
  %add96 = add i32 %45, ptrtoint (ptr @hardirqs_enabled to i32)
  %46 = inttoptr i32 %add96 to ptr
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %46, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !935
  %49 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i205 = and i32 %49, -16384
  %50 = inttoptr i32 %and.i.i.i205 to ptr
  %preempt_count.i.i206 = getelementptr inbounds %struct.thread_info, ptr %50, i32 0, i32 1
  %51 = ptrtoint ptr %preempt_count.i.i206 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile i32, ptr %preempt_count.i.i206, align 4
  %sub.i207 = add i32 %52, -1
  store volatile i32 %sub.i207, ptr %preempt_count.i.i206, align 4
  %tobool103.not = icmp eq i32 %48, 0
  br i1 %tobool103.not, label %if.end140, label %land.rhs107

land.rhs107:                                      ; preds = %land.rhs
  %.b195 = load i1, ptr @rcu_barrier_tasks_generic.__already_done, align 1
  br i1 %.b195, label %if.end140, label %if.then114, !prof !903

if.then114:                                       ; preds = %land.rhs107
  store i1 true, ptr @rcu_barrier_tasks_generic.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.14, i32 noundef 367, i32 noundef 9, ptr noundef null) #20
  br label %if.end140

if.end140:                                        ; preds = %if.then114, %land.rhs107, %land.rhs, %land.lhs.true, %do.body42
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call28) #20
  %call8 = tail call i32 @cpumask_next(i32 noundef %call8217, ptr noundef nonnull @__cpu_possible_mask) #25
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %53 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call8, %53
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %if.end140, %for.body, %rcu_seq_start.exit
  %call.i.i208 = tail call zeroext i1 @__kasan_check_write(ptr noundef %barrier_q_count, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !936
  tail call void @llvm.prefetch.p0(ptr %barrier_q_count, i32 1, i32 3, i32 1) #20
  %54 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %barrier_q_count, ptr %barrier_q_count, i32 2, ptr elementtype(i32) %barrier_q_count) #20, !srcloc !937
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %54, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !938
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %cmp.i.i, label %if.then163, label %if.end165

if.then163:                                       ; preds = %for.end
  tail call void @complete(ptr noundef %barrier_q_completion) #20
  br label %if.end165

if.end165:                                        ; preds = %if.then163, %for.end
  tail call void @wait_for_completion(ptr noundef %barrier_q_completion) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !939
  %55 = ptrtoint ptr %barrier_q_seq to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %barrier_q_seq, align 4
  %and.i.i212 = and i32 %56, 3
  %tobool.not.i = icmp eq i32 %and.i.i212, 0
  br i1 %tobool.not.i, label %land.rhs.i213, label %rcu_seq_end.exit

land.rhs.i213:                                    ; preds = %if.end165
  %.b55.i = load i1, ptr @rcu_seq_end.__already_done, align 1
  br i1 %.b55.i, label %rcu_seq_end.exit, label %if.then.i214, !prof !903

if.then.i214:                                     ; preds = %land.rhs.i213
  store i1 true, ptr @rcu_seq_end.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.138, i32 noundef 72, i32 noundef 9, ptr noundef null) #20
  br label %rcu_seq_end.exit

rcu_seq_end.exit:                                 ; preds = %if.then.i214, %land.rhs.i213, %if.end165
  %57 = ptrtoint ptr %barrier_q_seq to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %barrier_q_seq, align 4
  %or.i.i = or i32 %58, 3
  %add.i.i = add i32 %or.i.i, 1
  store volatile i32 %add.i.i, ptr %barrier_q_seq, align 4
  br label %cleanup

cleanup:                                          ; preds = %rcu_seq_end.exit, %do.end
  tail call void @mutex_unlock(ptr noundef %barrier_q_mutex) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @show_rcu_tasks_classic_gp_kthread() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %i.i.i = alloca i32, align 4
  %0 = load ptr, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 18), align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__per_cpu_offset to i32))
  %1 = load i32, ptr @__per_cpu_offset, align 4
  %2 = load ptr, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 28), align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i.i.i)
  %3 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 2), align 4
  %4 = ptrtoint ptr %i.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %i.i.i, align 4
  %i.i.i.0.i.i.i.0.i.i.0.i.i.0.i.0.i.0.i.0..i.i = load volatile i32, ptr %i.i.i, align 4
  %cmp.i.i = icmp ugt i32 %i.i.i.0.i.i.i.0.i.i.0.i.i.0.i.0.i.0.i.0..i.i, 11
  br i1 %cmp.i.i, label %show_rcu_tasks_generic_gp_kthread.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %entry
  %arrayidx.i.i = getelementptr [12 x ptr], ptr @rcu_tasks_gp_state_names, i32 0, i32 %i.i.i.0.i.i.i.0.i.i.0.i.i.0.i.0.i.0.i.0..i.i
  %5 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i.i, align 4
  br label %show_rcu_tasks_generic_gp_kthread.exit

show_rcu_tasks_generic_gp_kthread.exit:           ; preds = %if.end.i.i, %entry
  %retval.0.i.i = phi ptr [ %6, %if.end.i.i ], [ @.str.143, %entry ]
  %7 = ptrtoint ptr %0 to i32
  %add.i = add i32 %1, %7
  %8 = inttoptr i32 %add.i to ptr
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i.i.i)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %9 = load volatile i32, ptr @jiffies, align 128
  %10 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 5), align 4
  %sub.i = sub i32 %9, %10
  %11 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 7), align 4
  %12 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 9), align 4
  %13 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 8), align 4
  %14 = load ptr, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 10), align 4
  %tobool.i = icmp ne ptr %14, null
  %lnot.ext.i = zext i1 %tobool.i to i32
  %arrayidx.i = getelementptr [3 x i8], ptr @.str.141, i32 0, i32 %lnot.ext.i
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %arrayidx.i, align 1
  %conv.i = zext i8 %16 to i32
  %17 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile ptr, ptr %8, align 4
  %tobool.not.i.i = icmp ne ptr %18, null
  %lnot.ext35.i = zext i1 %tobool.not.i.i to i32
  %arrayidx36.i = getelementptr [3 x i8], ptr @.str.142, i32 0, i32 %lnot.ext35.i
  %19 = ptrtoint ptr %arrayidx36.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %arrayidx36.i, align 1
  %conv37.i = zext i8 %20 to i32
  %call38.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.139, ptr noundef %2, ptr noundef %retval.0.i.i, i32 noundef %3, i32 noundef %sub.i, i32 noundef %11, i32 noundef %12, i32 noundef %13, i32 noundef %conv.i, i32 noundef %conv37.i, ptr noundef nonnull @.str.10) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @exit_tasks_rcu_start() local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !940
  %call = tail call i32 @__srcu_read_lock(ptr noundef nonnull @tasks_rcu_exit_srcu) #20
  %conv = trunc i32 %call to i8
  %4 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task, align 8
  %rcu_tasks_idx = getelementptr inbounds %struct.task_struct, ptr %7, i32 0, i32 41
  %8 = ptrtoint ptr %rcu_tasks_idx to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %conv, ptr %rcu_tasks_idx, align 1
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !941
  %9 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i4 = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i4 to ptr
  %preempt_count.i.i5 = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i5 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i5, align 4
  %sub.i = add i32 %12, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i5, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__srcu_read_lock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @exit_tasks_rcu_finish() local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %5, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !942
  %rcu_tasks_idx = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 41
  %6 = ptrtoint ptr %rcu_tasks_idx to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %rcu_tasks_idx, align 1
  %conv = zext i8 %7 to i32
  tail call void @__srcu_read_unlock(ptr noundef nonnull @tasks_rcu_exit_srcu, i32 noundef %conv) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !943
  %8 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i5 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i5 to ptr
  %preempt_count.i.i6 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i6 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i6, align 4
  %sub.i = add i32 %11, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i6, align 4
  %trc_reader_checked.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 47
  %12 = ptrtoint ptr %trc_reader_checked.i to i32
  call void @__asan_store1_noabort(i32 %12)
  store volatile i8 1, ptr %trc_reader_checked.i, align 64
  %trc_reader_nesting.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 44
  %13 = ptrtoint ptr %trc_reader_nesting.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %trc_reader_nesting.i, align 4
  %tobool.not.i = icmp eq i32 %14, 0
  br i1 %tobool.not.i, label %if.end38.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %entry
  %.b127.i = load i1, ptr @exit_tasks_rcu_finish_trace.__already_done, align 1
  br i1 %.b127.i, label %if.end38.i, label %if.then.i, !prof !903

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @exit_tasks_rcu_finish_trace.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.14, i32 noundef 1517, i32 noundef 9, ptr noundef null) #20
  br label %if.end38.i

if.end38.i:                                       ; preds = %if.then.i, %land.rhs.i, %entry
  %15 = ptrtoint ptr %trc_reader_nesting.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile i32 0, ptr %trc_reader_nesting.i, align 4
  %trc_reader_special.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 46
  %need_qs.i = getelementptr inbounds %struct.anon.35, ptr %trc_reader_special.i, i32 0, i32 1
  %16 = ptrtoint ptr %need_qs.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load volatile i8, ptr %need_qs.i, align 1
  %tobool61.not.i = icmp eq i8 %17, 0
  br i1 %tobool61.not.i, label %exit_tasks_rcu_finish_trace.exit, label %land.rhs68.i

land.rhs68.i:                                     ; preds = %if.end38.i
  %.b125126.i = load i1, ptr @exit_tasks_rcu_finish_trace.__already_done.167, align 1
  br i1 %.b125126.i, label %if.then115.i, label %if.then79.i, !prof !903

if.then79.i:                                      ; preds = %land.rhs68.i
  store i1 true, ptr @exit_tasks_rcu_finish_trace.__already_done.167, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.14, i32 noundef 1519, i32 noundef 9, ptr noundef null) #20
  br label %if.then115.i

if.then115.i:                                     ; preds = %if.then79.i, %land.rhs68.i
  %18 = ptrtoint ptr %need_qs.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load volatile i8, ptr %need_qs.i, align 1
  %need_mb.i.i = getelementptr inbounds %struct.anon.35, ptr %trc_reader_special.i, i32 0, i32 3
  %20 = ptrtoint ptr %need_mb.i.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %need_mb.i.i, align 1
  %tobool.not.i.i = icmp eq i8 %21, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %do.end6.i.i

do.end6.i.i:                                      ; preds = %if.then115.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !944
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %do.end6.i.i, %if.then115.i
  %tobool9.not.i.i = icmp eq i8 %19, 0
  br i1 %tobool9.not.i.i, label %if.end36.critedge.i.i, label %do.body15.i.i

do.body15.i.i:                                    ; preds = %if.end.i.i
  %22 = ptrtoint ptr %need_qs.i to i32
  call void @__asan_store1_noabort(i32 %22)
  store volatile i8 0, ptr %need_qs.i, align 1
  %23 = ptrtoint ptr %trc_reader_nesting.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile i32 0, ptr %trc_reader_nesting.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @trc_n_readers_need_end, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !936
  tail call void @llvm.prefetch.p0(ptr nonnull @trc_n_readers_need_end, i32 1, i32 3, i32 1) #20
  %24 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @trc_n_readers_need_end, ptr nonnull @trc_n_readers_need_end, i32 1, ptr nonnull elementtype(i32) @trc_n_readers_need_end) #20, !srcloc !937
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32 } %24, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !938
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %if.then34.i.i, label %exit_tasks_rcu_finish_trace.exit

if.then34.i.i:                                    ; preds = %do.body15.i.i
  %call35.i.i = tail call zeroext i1 @irq_work_queue(ptr noundef nonnull @rcu_tasks_trace_iw) #20
  br label %exit_tasks_rcu_finish_trace.exit

if.end36.critedge.i.i:                            ; preds = %if.end.i.i
  %25 = ptrtoint ptr %trc_reader_nesting.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile i32 0, ptr %trc_reader_nesting.i, align 4
  br label %exit_tasks_rcu_finish_trace.exit

exit_tasks_rcu_finish_trace.exit:                 ; preds = %if.end36.critedge.i.i, %if.then34.i.i, %do.body15.i.i, %if.end38.i
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__srcu_read_unlock(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @call_rcu_tasks_rude(ptr noundef %rhp, ptr noundef %func) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @call_rcu_tasks_generic(ptr noundef %rhp, ptr noundef %func, ptr noundef nonnull @rcu_tasks_rude)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @synchronize_rcu_tasks_rude() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %__crcu_array.i = alloca [1 x ptr], align 4
  %__rs_array.i = alloca [1 x %struct.rcu_synchronize], align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_scheduler_active to i32))
  %0 = load i32, ptr @rcu_scheduler_active, align 4
  %cmp.i = icmp eq i32 %0, 0
  br i1 %cmp.i, label %land.lhs.true.i, label %synchronize_rcu_tasks_generic.exit

land.lhs.true.i:                                  ; preds = %entry
  %call.i = tail call i32 @debug_lockdep_rcu_enabled() #20
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %synchronize_rcu_tasks_generic.exit, label %land.lhs.true1.i

land.lhs.true1.i:                                 ; preds = %land.lhs.true.i
  %.b6.i = load i1, ptr @synchronize_rcu_tasks_generic.__warned, align 1
  br i1 %.b6.i, label %synchronize_rcu_tasks_generic.exit, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true1.i
  store i1 true, ptr @synchronize_rcu_tasks_generic.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.14, i32 noundef 323, ptr noundef nonnull @.str.137) #20
  br label %synchronize_rcu_tasks_generic.exit

synchronize_rcu_tasks_generic.exit:               ; preds = %if.then.i, %land.lhs.true1.i, %land.lhs.true.i, %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__crcu_array.i) #20
  %1 = load ptr, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_rude, i32 0, i32 17), align 4
  %2 = ptrtoint ptr %__crcu_array.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %1, ptr %__crcu_array.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__rs_array.i) #20
  %3 = call ptr @memset(ptr %__rs_array.i, i32 255, i32 64)
  call void @__wait_rcu_gp(i1 noundef zeroext false, i32 noundef 1, ptr noundef nonnull %__crcu_array.i, ptr noundef nonnull %__rs_array.i) #20
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__rs_array.i) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__crcu_array.i) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_barrier_tasks_rude() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @rcu_barrier_tasks_generic(ptr noundef nonnull @rcu_tasks_rude)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @show_rcu_tasks_rude_gp_kthread() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %i.i.i = alloca i32, align 4
  %0 = load ptr, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_rude, i32 0, i32 18), align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__per_cpu_offset to i32))
  %1 = load i32, ptr @__per_cpu_offset, align 4
  %2 = load ptr, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_rude, i32 0, i32 28), align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i.i.i)
  %3 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_rude, i32 0, i32 2), align 4
  %4 = ptrtoint ptr %i.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %i.i.i, align 4
  %i.i.i.0.i.i.i.0.i.i.0.i.i.0.i.0.i.0.i.0..i.i = load volatile i32, ptr %i.i.i, align 4
  %cmp.i.i = icmp ugt i32 %i.i.i.0.i.i.i.0.i.i.0.i.i.0.i.0.i.0.i.0..i.i, 11
  br i1 %cmp.i.i, label %show_rcu_tasks_generic_gp_kthread.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %entry
  %arrayidx.i.i = getelementptr [12 x ptr], ptr @rcu_tasks_gp_state_names, i32 0, i32 %i.i.i.0.i.i.i.0.i.i.0.i.i.0.i.0.i.0.i.0..i.i
  %5 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i.i, align 4
  br label %show_rcu_tasks_generic_gp_kthread.exit

show_rcu_tasks_generic_gp_kthread.exit:           ; preds = %if.end.i.i, %entry
  %retval.0.i.i = phi ptr [ %6, %if.end.i.i ], [ @.str.143, %entry ]
  %7 = ptrtoint ptr %0 to i32
  %add.i = add i32 %1, %7
  %8 = inttoptr i32 %add.i to ptr
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i.i.i)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %9 = load volatile i32, ptr @jiffies, align 128
  %10 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_rude, i32 0, i32 5), align 4
  %sub.i = sub i32 %9, %10
  %11 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_rude, i32 0, i32 7), align 4
  %12 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_rude, i32 0, i32 9), align 4
  %13 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_rude, i32 0, i32 8), align 4
  %14 = load ptr, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_rude, i32 0, i32 10), align 4
  %tobool.i = icmp ne ptr %14, null
  %lnot.ext.i = zext i1 %tobool.i to i32
  %arrayidx.i = getelementptr [3 x i8], ptr @.str.141, i32 0, i32 %lnot.ext.i
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %arrayidx.i, align 1
  %conv.i = zext i8 %16 to i32
  %17 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile ptr, ptr %8, align 4
  %tobool.not.i.i = icmp ne ptr %18, null
  %lnot.ext35.i = zext i1 %tobool.not.i.i to i32
  %arrayidx36.i = getelementptr [3 x i8], ptr @.str.142, i32 0, i32 %lnot.ext35.i
  %19 = ptrtoint ptr %arrayidx36.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %arrayidx36.i, align 1
  %conv37.i = zext i8 %20 to i32
  %call38.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.139, ptr noundef %2, ptr noundef %retval.0.i.i, i32 noundef %3, i32 noundef %sub.i, i32 noundef %11, i32 noundef %12, i32 noundef %13, i32 noundef %conv.i, i32 noundef %conv37.i, ptr noundef nonnull @.str.10) #23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_read_unlock_trace_special(ptr noundef %t) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %trc_reader_special = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 46
  %need_qs = getelementptr inbounds %struct.anon.35, ptr %trc_reader_special, i32 0, i32 1
  %0 = ptrtoint ptr %need_qs to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load volatile i8, ptr %need_qs, align 1
  %need_mb = getelementptr inbounds %struct.anon.35, ptr %trc_reader_special, i32 0, i32 3
  %2 = ptrtoint ptr %need_mb to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %need_mb, align 1
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.end, label %do.end6

do.end6:                                          ; preds = %entry
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !944
  br label %if.end

if.end:                                           ; preds = %do.end6, %entry
  %tobool9.not = icmp eq i8 %1, 0
  br i1 %tobool9.not, label %if.end36.critedge, label %do.body15

do.body15:                                        ; preds = %if.end
  %4 = ptrtoint ptr %need_qs to i32
  call void @__asan_store1_noabort(i32 %4)
  store volatile i8 0, ptr %need_qs, align 1
  %trc_reader_nesting.c41 = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 44
  %5 = ptrtoint ptr %trc_reader_nesting.c41 to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile i32 0, ptr %trc_reader_nesting.c41, align 4
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @trc_n_readers_need_end, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !936
  tail call void @llvm.prefetch.p0(ptr nonnull @trc_n_readers_need_end, i32 1, i32 3, i32 1) #20
  %6 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @trc_n_readers_need_end, ptr nonnull @trc_n_readers_need_end, i32 1, ptr nonnull elementtype(i32) @trc_n_readers_need_end) #20, !srcloc !937
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %6, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !938
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.i.i, label %if.then34, label %if.end36

if.then34:                                        ; preds = %do.body15
  %call35 = tail call zeroext i1 @irq_work_queue(ptr noundef nonnull @rcu_tasks_trace_iw) #20
  br label %if.end36

if.end36.critedge:                                ; preds = %if.end
  %trc_reader_nesting.c = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 44
  %7 = ptrtoint ptr %trc_reader_nesting.c to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile i32 0, ptr %trc_reader_nesting.c, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.end36.critedge, %if.then34, %do.body15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @irq_work_queue(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @call_rcu_tasks_trace(ptr noundef %rhp, ptr noundef %func) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @call_rcu_tasks_generic(ptr noundef %rhp, ptr noundef %func, ptr noundef nonnull @rcu_tasks_trace)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @synchronize_rcu_tasks_trace() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %__crcu_array.i = alloca [1 x ptr], align 4
  %__rs_array.i = alloca [1 x %struct.rcu_synchronize], align 4
  %call.i = tail call i32 @lock_is_held_type(ptr noundef nonnull @rcu_trace_lock_map, i32 noundef -1) #20
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %do.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @debug_lockdep_rcu_enabled()
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %do.end, label %land.lhs.true3

land.lhs.true3:                                   ; preds = %land.lhs.true
  %.b5 = load i1, ptr @synchronize_rcu_tasks_trace.__warned, align 1
  br i1 %.b5, label %do.end, label %if.then

if.then:                                          ; preds = %land.lhs.true3
  store i1 true, ptr @synchronize_rcu_tasks_trace.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.14, i32 noundef 1562, ptr noundef nonnull @.str.15) #20
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true3, %land.lhs.true, %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_scheduler_active to i32))
  %0 = load i32, ptr @rcu_scheduler_active, align 4
  %cmp.i = icmp eq i32 %0, 0
  br i1 %cmp.i, label %land.lhs.true.i, label %synchronize_rcu_tasks_generic.exit

land.lhs.true.i:                                  ; preds = %do.end
  %call.i6 = tail call i32 @debug_lockdep_rcu_enabled() #20
  %tobool.not.i = icmp eq i32 %call.i6, 0
  br i1 %tobool.not.i, label %synchronize_rcu_tasks_generic.exit, label %land.lhs.true1.i

land.lhs.true1.i:                                 ; preds = %land.lhs.true.i
  %.b6.i = load i1, ptr @synchronize_rcu_tasks_generic.__warned, align 1
  br i1 %.b6.i, label %synchronize_rcu_tasks_generic.exit, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true1.i
  store i1 true, ptr @synchronize_rcu_tasks_generic.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.14, i32 noundef 323, ptr noundef nonnull @.str.137) #20
  br label %synchronize_rcu_tasks_generic.exit

synchronize_rcu_tasks_generic.exit:               ; preds = %if.then.i, %land.lhs.true1.i, %land.lhs.true.i, %do.end
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__crcu_array.i) #20
  %1 = load ptr, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_trace, i32 0, i32 17), align 4
  %2 = ptrtoint ptr %__crcu_array.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %1, ptr %__crcu_array.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__rs_array.i) #20
  %3 = call ptr @memset(ptr %__rs_array.i, i32 255, i32 64)
  call void @__wait_rcu_gp(i1 noundef zeroext false, i32 noundef 1, ptr noundef nonnull %__crcu_array.i, ptr noundef nonnull %__rs_array.i) #20
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__rs_array.i) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__crcu_array.i) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_barrier_tasks_trace() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @rcu_barrier_tasks_generic(ptr noundef nonnull @rcu_tasks_trace)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @show_rcu_tasks_trace_gp_kthread() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %i.i.i = alloca i32, align 4
  %buf = alloca [64 x i8], align 1
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %buf) #20
  %0 = call ptr @memset(ptr %buf, i32 255, i32 64)
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @trc_n_readers_need_end, i32 noundef 4) #20
  %1 = load volatile i32, ptr @trc_n_readers_need_end, align 4
  %2 = load i32, ptr @n_heavy_reader_ofl_updates, align 4
  %3 = load i32, ptr @n_heavy_reader_updates, align 4
  %4 = load i32, ptr @n_heavy_reader_attempts, align 4
  %call8 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %buf, ptr noundef nonnull @.str.16, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4)
  %5 = load ptr, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_trace, i32 0, i32 18), align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__per_cpu_offset to i32))
  %6 = load i32, ptr @__per_cpu_offset, align 4
  %7 = load ptr, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_trace, i32 0, i32 28), align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i.i.i)
  %8 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_trace, i32 0, i32 2), align 4
  %9 = ptrtoint ptr %i.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %i.i.i, align 4
  %i.i.i.0.i.i.i.0.i.i.0.i.i.0.i.0.i.0.i.0..i.i = load volatile i32, ptr %i.i.i, align 4
  %cmp.i.i = icmp ugt i32 %i.i.i.0.i.i.i.0.i.i.0.i.i.0.i.0.i.0.i.0..i.i, 11
  br i1 %cmp.i.i, label %show_rcu_tasks_generic_gp_kthread.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %entry
  %arrayidx.i.i = getelementptr [12 x ptr], ptr @rcu_tasks_gp_state_names, i32 0, i32 %i.i.i.0.i.i.i.0.i.i.0.i.i.0.i.0.i.0.i.0..i.i
  %10 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx.i.i, align 4
  br label %show_rcu_tasks_generic_gp_kthread.exit

show_rcu_tasks_generic_gp_kthread.exit:           ; preds = %if.end.i.i, %entry
  %retval.0.i.i = phi ptr [ %11, %if.end.i.i ], [ @.str.143, %entry ]
  %12 = ptrtoint ptr %5 to i32
  %add.i = add i32 %6, %12
  %13 = inttoptr i32 %add.i to ptr
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i.i.i)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %14 = load volatile i32, ptr @jiffies, align 128
  %15 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_trace, i32 0, i32 5), align 4
  %sub.i = sub i32 %14, %15
  %16 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_trace, i32 0, i32 7), align 4
  %17 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_trace, i32 0, i32 9), align 4
  %18 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_trace, i32 0, i32 8), align 4
  %19 = load ptr, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_trace, i32 0, i32 10), align 4
  %tobool.i = icmp ne ptr %19, null
  %lnot.ext.i = zext i1 %tobool.i to i32
  %arrayidx.i = getelementptr [3 x i8], ptr @.str.141, i32 0, i32 %lnot.ext.i
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %arrayidx.i, align 1
  %conv.i = zext i8 %21 to i32
  %22 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile ptr, ptr %13, align 4
  %tobool.not.i.i = icmp ne ptr %23, null
  %lnot.ext35.i = zext i1 %tobool.not.i.i to i32
  %arrayidx36.i = getelementptr [3 x i8], ptr @.str.142, i32 0, i32 %lnot.ext35.i
  %24 = ptrtoint ptr %arrayidx36.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %arrayidx36.i, align 1
  %conv37.i = zext i8 %25 to i32
  %call38.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.139, ptr noundef %7, ptr noundef %retval.0.i.i, i32 noundef %8, i32 noundef %sub.i, i32 noundef %16, i32 noundef %17, i32 noundef %18, i32 noundef %conv.i, i32 noundef %conv37.i, ptr noundef nonnull %buf) #23
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %buf) #20
  ret void
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #11

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @show_rcu_tasks_gp_kthreads() local_unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %i.i.i.i1 = alloca i32, align 4
  %i.i.i.i = alloca i32, align 4
  %0 = load ptr, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 18), align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__per_cpu_offset to i32))
  %1 = load i32, ptr @__per_cpu_offset, align 4
  %2 = load ptr, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 28), align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i.i.i.i)
  %3 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 2), align 4
  %4 = ptrtoint ptr %i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %i.i.i.i, align 4
  %i.i.i.i.0.i.i.i.i.0.i.i.i.0.i.i.i.0.i.i.0.i.i.0.i.0.i.0.i.0..i.i.i = load volatile i32, ptr %i.i.i.i, align 4
  %cmp.i.i.i = icmp ugt i32 %i.i.i.i.0.i.i.i.i.0.i.i.i.0.i.i.i.0.i.i.0.i.i.0.i.0.i.0.i.0..i.i.i, 11
  br i1 %cmp.i.i.i, label %show_rcu_tasks_classic_gp_kthread.exit, label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %entry
  %arrayidx.i.i.i = getelementptr [12 x ptr], ptr @rcu_tasks_gp_state_names, i32 0, i32 %i.i.i.i.0.i.i.i.i.0.i.i.i.0.i.i.i.0.i.i.0.i.i.0.i.0.i.0.i.0..i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i.i.i, align 4
  br label %show_rcu_tasks_classic_gp_kthread.exit

show_rcu_tasks_classic_gp_kthread.exit:           ; preds = %if.end.i.i.i, %entry
  %retval.0.i.i.i = phi ptr [ %6, %if.end.i.i.i ], [ @.str.143, %entry ]
  %7 = ptrtoint ptr %0 to i32
  %add.i.i = add i32 %1, %7
  %8 = inttoptr i32 %add.i.i to ptr
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i.i.i.i)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %9 = load volatile i32, ptr @jiffies, align 128
  %10 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 5), align 4
  %sub.i.i = sub i32 %9, %10
  %11 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 7), align 4
  %12 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 9), align 4
  %13 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 8), align 4
  %14 = load ptr, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 10), align 4
  %tobool.i.i = icmp ne ptr %14, null
  %lnot.ext.i.i = zext i1 %tobool.i.i to i32
  %arrayidx.i.i = getelementptr [3 x i8], ptr @.str.141, i32 0, i32 %lnot.ext.i.i
  %15 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %arrayidx.i.i, align 1
  %conv.i.i = zext i8 %16 to i32
  %17 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile ptr, ptr %8, align 4
  %tobool.not.i.i.i = icmp ne ptr %18, null
  %lnot.ext35.i.i = zext i1 %tobool.not.i.i.i to i32
  %arrayidx36.i.i = getelementptr [3 x i8], ptr @.str.142, i32 0, i32 %lnot.ext35.i.i
  %19 = ptrtoint ptr %arrayidx36.i.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %arrayidx36.i.i, align 1
  %conv37.i.i = zext i8 %20 to i32
  %call38.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.139, ptr noundef %2, ptr noundef %retval.0.i.i.i, i32 noundef %3, i32 noundef %sub.i.i, i32 noundef %11, i32 noundef %12, i32 noundef %13, i32 noundef %conv.i.i, i32 noundef %conv37.i.i, ptr noundef nonnull @.str.10) #23
  %21 = load ptr, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_rude, i32 0, i32 18), align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__per_cpu_offset to i32))
  %22 = load i32, ptr @__per_cpu_offset, align 4
  %23 = load ptr, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_rude, i32 0, i32 28), align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i.i.i.i1)
  %24 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_rude, i32 0, i32 2), align 4
  %25 = ptrtoint ptr %i.i.i.i1 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %i.i.i.i1, align 4
  %i.i.i.i1.0.i.i.i.i1.0.i.i.i.0.i.i.i.0.i.i.0.i.i.0.i.0.i.0.i.0..i.i.i2 = load volatile i32, ptr %i.i.i.i1, align 4
  %cmp.i.i.i3 = icmp ugt i32 %i.i.i.i1.0.i.i.i.i1.0.i.i.i.0.i.i.i.0.i.i.0.i.i.0.i.0.i.0.i.0..i.i.i2, 11
  br i1 %cmp.i.i.i3, label %show_rcu_tasks_rude_gp_kthread.exit, label %if.end.i.i.i5

if.end.i.i.i5:                                    ; preds = %show_rcu_tasks_classic_gp_kthread.exit
  %arrayidx.i.i.i4 = getelementptr [12 x ptr], ptr @rcu_tasks_gp_state_names, i32 0, i32 %i.i.i.i1.0.i.i.i.i1.0.i.i.i.0.i.i.i.0.i.i.0.i.i.0.i.0.i.0.i.0..i.i.i2
  %26 = ptrtoint ptr %arrayidx.i.i.i4 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx.i.i.i4, align 4
  br label %show_rcu_tasks_rude_gp_kthread.exit

show_rcu_tasks_rude_gp_kthread.exit:              ; preds = %if.end.i.i.i5, %show_rcu_tasks_classic_gp_kthread.exit
  %retval.0.i.i.i6 = phi ptr [ %27, %if.end.i.i.i5 ], [ @.str.143, %show_rcu_tasks_classic_gp_kthread.exit ]
  %28 = ptrtoint ptr %21 to i32
  %add.i.i7 = add i32 %22, %28
  %29 = inttoptr i32 %add.i.i7 to ptr
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i.i.i.i1)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %30 = load volatile i32, ptr @jiffies, align 128
  %31 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_rude, i32 0, i32 5), align 4
  %sub.i.i8 = sub i32 %30, %31
  %32 = load volatile i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_rude, i32 0, i32 7), align 4
  %33 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_rude, i32 0, i32 9), align 4
  %34 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_rude, i32 0, i32 8), align 4
  %35 = load ptr, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_rude, i32 0, i32 10), align 4
  %tobool.i.i9 = icmp ne ptr %35, null
  %lnot.ext.i.i10 = zext i1 %tobool.i.i9 to i32
  %arrayidx.i.i11 = getelementptr [3 x i8], ptr @.str.141, i32 0, i32 %lnot.ext.i.i10
  %36 = ptrtoint ptr %arrayidx.i.i11 to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %arrayidx.i.i11, align 1
  %conv.i.i12 = zext i8 %37 to i32
  %38 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile ptr, ptr %29, align 4
  %tobool.not.i.i.i13 = icmp ne ptr %39, null
  %lnot.ext35.i.i14 = zext i1 %tobool.not.i.i.i13 to i32
  %arrayidx36.i.i15 = getelementptr [3 x i8], ptr @.str.142, i32 0, i32 %lnot.ext35.i.i14
  %40 = ptrtoint ptr %arrayidx36.i.i15 to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %arrayidx36.i.i15, align 1
  %conv37.i.i16 = zext i8 %41 to i32
  %call38.i.i17 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.139, ptr noundef %23, ptr noundef %retval.0.i.i.i6, i32 noundef %24, i32 noundef %sub.i.i8, i32 noundef %32, i32 noundef %33, i32 noundef %34, i32 noundef %conv.i.i12, i32 noundef %conv37.i.i16, ptr noundef nonnull @.str.10) #23
  tail call void @show_rcu_tasks_trace_gp_kthread()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rcu_tasks_verify_self_tests() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i8, ptr getelementptr inbounds ([3 x %struct.rcu_tasks_test_desc], ptr @tests, i32 0, i32 0, i32 2), align 4, !range !914
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %do.end, label %for.inc

do.end:                                           ; preds = %entry
  %1 = load ptr, ptr getelementptr inbounds ([3 x %struct.rcu_tasks_test_desc], ptr @tests, i32 0, i32 0, i32 1), align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.174, ptr noundef %1) #23
  br label %for.inc

for.inc:                                          ; preds = %do.end, %entry
  %ret.1 = phi i32 [ 0, %entry ], [ -1, %do.end ]
  %2 = load i8, ptr getelementptr inbounds ([3 x %struct.rcu_tasks_test_desc], ptr @tests, i32 0, i32 1, i32 2), align 4, !range !914
  %tobool.not.1 = icmp eq i8 %2, 0
  br i1 %tobool.not.1, label %do.end.1, label %for.inc.1

do.end.1:                                         ; preds = %for.inc
  %3 = load ptr, ptr getelementptr inbounds ([3 x %struct.rcu_tasks_test_desc], ptr @tests, i32 0, i32 1, i32 1), align 4
  %call.1 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.174, ptr noundef %3) #23
  br label %for.inc.1

for.inc.1:                                        ; preds = %do.end.1, %for.inc
  %ret.1.1 = phi i32 [ %ret.1, %for.inc ], [ -1, %do.end.1 ]
  %4 = load i8, ptr getelementptr inbounds ([3 x %struct.rcu_tasks_test_desc], ptr @tests, i32 0, i32 2, i32 2), align 4, !range !914
  %tobool.not.2 = icmp eq i8 %4, 0
  br i1 %tobool.not.2, label %for.inc.2.thread, label %for.inc.2

for.inc.2.thread:                                 ; preds = %for.inc.1
  %5 = load ptr, ptr getelementptr inbounds ([3 x %struct.rcu_tasks_test_desc], ptr @tests, i32 0, i32 2, i32 1), align 4
  %call.2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.174, ptr noundef %5) #23
  br label %do.end11

for.inc.2:                                        ; preds = %for.inc.1
  %tobool2.not = icmp eq i32 %ret.1.1, 0
  br i1 %tobool2.not, label %if.end25, label %do.end11

do.end11:                                         ; preds = %for.inc.2, %for.inc.2.thread
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.14, i32 noundef 1696, i32 noundef 9, ptr noundef null) #20
  br label %if.end25

if.end25:                                         ; preds = %do.end11, %for.inc.2
  %ret.1.237 = phi i32 [ -1, %do.end11 ], [ 0, %for.inc.2 ]
  ret i32 %ret.1.237
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @rcu_init_tasks_generic() local_unnamed_addr #5 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %__crcu_array.i.i1.i = alloca [1 x ptr], align 4
  %__rs_array.i.i2.i = alloca [1 x %struct.rcu_synchronize], align 4
  %__crcu_array.i.i.i = alloca [1 x ptr], align 4
  %__rs_array.i.i.i = alloca [1 x %struct.rcu_synchronize], align 4
  tail call fastcc void @rcu_spawn_tasks_kthread() #26
  tail call fastcc void @rcu_spawn_tasks_rude_kthread() #26
  tail call fastcc void @rcu_spawn_tasks_trace_kthread() #26
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.216) #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_scheduler_active to i32))
  %0 = load i32, ptr @rcu_scheduler_active, align 4
  %cmp.i.i.i = icmp eq i32 %0, 0
  br i1 %cmp.i.i.i, label %land.lhs.true.i.i.i, label %synchronize_rcu_tasks.exit.i

land.lhs.true.i.i.i:                              ; preds = %entry
  %call.i.i.i = tail call i32 @debug_lockdep_rcu_enabled() #20
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %synchronize_rcu_tasks.exit.i, label %land.lhs.true1.i.i.i

land.lhs.true1.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  %.b6.i.i.i = load i1, ptr @synchronize_rcu_tasks_generic.__warned, align 1
  br i1 %.b6.i.i.i, label %synchronize_rcu_tasks.exit.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true1.i.i.i
  store i1 true, ptr @synchronize_rcu_tasks_generic.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.14, i32 noundef 323, ptr noundef nonnull @.str.137) #20
  br label %synchronize_rcu_tasks.exit.i

synchronize_rcu_tasks.exit.i:                     ; preds = %if.then.i.i.i, %land.lhs.true1.i.i.i, %land.lhs.true.i.i.i, %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__crcu_array.i.i.i) #20
  %1 = load ptr, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 17), align 4
  %2 = ptrtoint ptr %__crcu_array.i.i.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %1, ptr %__crcu_array.i.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__rs_array.i.i.i) #20
  %3 = call ptr @memset(ptr %__rs_array.i.i.i, i32 255, i32 64)
  call void @__wait_rcu_gp(i1 noundef zeroext false, i32 noundef 1, ptr noundef nonnull %__crcu_array.i.i.i, ptr noundef nonnull %__rs_array.i.i.i) #20
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__rs_array.i.i.i) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__crcu_array.i.i.i) #20
  call fastcc void @call_rcu_tasks_generic(ptr noundef nonnull @tests, ptr noundef nonnull @test_rcu_tasks_callback, ptr noundef nonnull @rcu_tasks) #20
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_scheduler_active to i32))
  %4 = load i32, ptr @rcu_scheduler_active, align 4
  %cmp.i.i3.i = icmp eq i32 %4, 0
  br i1 %cmp.i.i3.i, label %land.lhs.true.i.i6.i, label %rcu_tasks_initiate_self_tests.exit

land.lhs.true.i.i6.i:                             ; preds = %synchronize_rcu_tasks.exit.i
  %call.i.i4.i = call i32 @debug_lockdep_rcu_enabled() #20
  %tobool.not.i.i5.i = icmp eq i32 %call.i.i4.i, 0
  br i1 %tobool.not.i.i5.i, label %rcu_tasks_initiate_self_tests.exit, label %land.lhs.true1.i.i8.i

land.lhs.true1.i.i8.i:                            ; preds = %land.lhs.true.i.i6.i
  %.b6.i.i7.i = load i1, ptr @synchronize_rcu_tasks_generic.__warned, align 1
  br i1 %.b6.i.i7.i, label %rcu_tasks_initiate_self_tests.exit, label %if.then.i.i9.i

if.then.i.i9.i:                                   ; preds = %land.lhs.true1.i.i8.i
  store i1 true, ptr @synchronize_rcu_tasks_generic.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.14, i32 noundef 323, ptr noundef nonnull @.str.137) #20
  br label %rcu_tasks_initiate_self_tests.exit

rcu_tasks_initiate_self_tests.exit:               ; preds = %if.then.i.i9.i, %land.lhs.true1.i.i8.i, %land.lhs.true.i.i6.i, %synchronize_rcu_tasks.exit.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__crcu_array.i.i1.i) #20
  %5 = load ptr, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_rude, i32 0, i32 17), align 4
  %6 = ptrtoint ptr %__crcu_array.i.i1.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %5, ptr %__crcu_array.i.i1.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %__rs_array.i.i2.i) #20
  %7 = call ptr @memset(ptr %__rs_array.i.i2.i, i32 255, i32 64)
  call void @__wait_rcu_gp(i1 noundef zeroext false, i32 noundef 1, ptr noundef nonnull %__crcu_array.i.i1.i, ptr noundef nonnull %__rs_array.i.i2.i) #20
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %__rs_array.i.i2.i) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__crcu_array.i.i1.i) #20
  call fastcc void @call_rcu_tasks_generic(ptr noundef getelementptr inbounds ([3 x %struct.rcu_tasks_test_desc], ptr @tests, i32 0, i32 1), ptr noundef nonnull @test_rcu_tasks_callback, ptr noundef nonnull @rcu_tasks_rude) #20
  call void @synchronize_rcu_tasks_trace() #20
  call fastcc void @call_rcu_tasks_generic(ptr noundef getelementptr inbounds ([3 x %struct.rcu_tasks_test_desc], ptr @tests, i32 0, i32 2), ptr noundef nonnull @test_rcu_tasks_callback, ptr noundef nonnull @rcu_tasks_trace) #20
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_spawn_tasks_kthread() unnamed_addr #5 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @cblist_init_generic(ptr noundef nonnull @rcu_tasks)
  store i32 10, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 3), align 4
  store i32 10, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 4), align 4
  store ptr @rcu_tasks_pregp_step, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 12), align 4
  store ptr @rcu_tasks_pertask, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 13), align 4
  store ptr @rcu_tasks_postscan, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 14), align 4
  store ptr @check_all_holdout_tasks, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 15), align 4
  store ptr @rcu_tasks_postgp, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks, i32 0, i32 16), align 4
  tail call fastcc void @rcu_spawn_tasks_kthread_generic(ptr noundef nonnull @rcu_tasks) #26
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_spawn_tasks_rude_kthread() unnamed_addr #5 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @cblist_init_generic(ptr noundef nonnull @rcu_tasks_rude)
  store i32 10, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_rude, i32 0, i32 3), align 4
  tail call fastcc void @rcu_spawn_tasks_kthread_generic(ptr noundef nonnull @rcu_tasks_rude) #26
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_spawn_tasks_trace_kthread() unnamed_addr #5 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @cblist_init_generic(ptr noundef nonnull @rcu_tasks_trace)
  store i32 10, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_trace, i32 0, i32 3), align 4
  store i32 10, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_trace, i32 0, i32 4), align 4
  store ptr @rcu_tasks_trace_pregp_step, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_trace, i32 0, i32 12), align 4
  store ptr @rcu_tasks_trace_pertask, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_trace, i32 0, i32 13), align 4
  store ptr @rcu_tasks_trace_postscan, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_trace, i32 0, i32 14), align 4
  store ptr @check_all_holdout_tasks_trace, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_trace, i32 0, i32 15), align 4
  store ptr @rcu_tasks_trace_postgp, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_trace, i32 0, i32 16), align 4
  tail call fastcc void @rcu_spawn_tasks_kthread_generic(ptr noundef nonnull @rcu_tasks_trace) #26
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @rcupdate_announce_bootup_oddness() local_unnamed_addr #5 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_normal to i32))
  %0 = load i32, ptr @rcu_normal, align 4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.else, label %if.end15.sink.split

if.else:                                          ; preds = %entry
  %1 = load i32, ptr @rcu_normal_after_boot, align 4
  %tobool1.not = icmp eq i32 %1, 0
  br i1 %tobool1.not, label %if.else7, label %if.end15.sink.split

if.else7:                                         ; preds = %if.else
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @rcu_expedited to i32))
  %2 = load i32, ptr @rcu_expedited, align 4
  %tobool8.not = icmp eq i32 %2, 0
  br i1 %tobool8.not, label %if.end15, label %if.end15.sink.split

if.end15.sink.split:                              ; preds = %if.else7, %if.else, %entry
  %.str.20.sink = phi ptr [ @.str.17, %entry ], [ @.str.20, %if.else ], [ @.str.23, %if.else7 ]
  %call6 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull %.str.20.sink) #23
  br label %if.end15

if.end15:                                         ; preds = %if.end15.sink.split, %if.else7
  %3 = load i32, ptr @rcu_cpu_stall_suppress, align 4
  %tobool16.not = icmp eq i32 %3, 0
  br i1 %tobool16.not, label %if.end22, label %do.end19

do.end19:                                         ; preds = %if.end15
  %call21 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.26) #23
  br label %if.end22

if.end22:                                         ; preds = %do.end19, %if.end15
  %4 = load i32, ptr @rcu_cpu_stall_timeout, align 4
  %cmp.not = icmp eq i32 %4, 21
  br i1 %cmp.not, label %if.end28, label %do.end25

do.end25:                                         ; preds = %if.end22
  %call27 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.29, i32 noundef %4) #23
  br label %if.end28

if.end28:                                         ; preds = %do.end25, %if.end22
  tail call fastcc void @rcu_tasks_bootup_oddness() #26
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_tasks_bootup_oddness() unnamed_addr #5 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @rcu_task_stall_timeout, align 4
  %cmp.not = icmp eq i32 %0, 60000
  br i1 %cmp.not, label %do.end2, label %do.end

do.end:                                           ; preds = %entry
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.220, i32 noundef %0) #23
  br label %do.end2

do.end2:                                          ; preds = %do.end, %entry
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.223) #23
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.226) #23
  %call12 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.229) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_utilization(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %s1 = getelementptr inbounds %struct.trace_event_raw_rcu_utilization, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %s1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s1, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.33, ptr noundef %3) #20
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_grace_period(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rcuname = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rcuname to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rcuname, align 4
  %gp_seq = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gp_seq, align 4
  %gpevent = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %gpevent to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %gpevent, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.38, ptr noundef %3, i32 noundef %5, ptr noundef %7) #20
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_future_grace_period(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rcuname = getelementptr inbounds %struct.trace_event_raw_rcu_future_grace_period, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rcuname to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rcuname, align 4
  %gp_seq = getelementptr inbounds %struct.trace_event_raw_rcu_future_grace_period, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gp_seq, align 4
  %gp_seq_req = getelementptr inbounds %struct.trace_event_raw_rcu_future_grace_period, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %gp_seq_req to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gp_seq_req, align 4
  %level = getelementptr inbounds %struct.trace_event_raw_rcu_future_grace_period, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %level to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %level, align 4
  %conv = zext i8 %9 to i32
  %grplo = getelementptr inbounds %struct.trace_event_raw_rcu_future_grace_period, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %grplo to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %grplo, align 4
  %grphi = getelementptr inbounds %struct.trace_event_raw_rcu_future_grace_period, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %grphi to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %grphi, align 4
  %gpevent = getelementptr inbounds %struct.trace_event_raw_rcu_future_grace_period, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %gpevent to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %gpevent, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.45, ptr noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %conv, i32 noundef %11, i32 noundef %13, ptr noundef %15) #20
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_grace_period_init(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rcuname = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period_init, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rcuname to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rcuname, align 4
  %gp_seq = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period_init, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gp_seq, align 4
  %level = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period_init, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %level to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %level, align 4
  %conv = zext i8 %7 to i32
  %grplo = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period_init, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %grplo to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %grplo, align 4
  %grphi = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period_init, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %grphi to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %grphi, align 4
  %qsmask = getelementptr inbounds %struct.trace_event_raw_rcu_grace_period_init, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %qsmask to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %qsmask, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.48, ptr noundef %3, i32 noundef %5, i32 noundef %conv, i32 noundef %9, i32 noundef %11, i32 noundef %13) #20
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_exp_grace_period(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rcuname = getelementptr inbounds %struct.trace_event_raw_rcu_exp_grace_period, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rcuname to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rcuname, align 4
  %gpseq = getelementptr inbounds %struct.trace_event_raw_rcu_exp_grace_period, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %gpseq to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gpseq, align 4
  %gpevent = getelementptr inbounds %struct.trace_event_raw_rcu_exp_grace_period, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %gpevent to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %gpevent, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.38, ptr noundef %3, i32 noundef %5, ptr noundef %7) #20
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_exp_funnel_lock(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rcuname = getelementptr inbounds %struct.trace_event_raw_rcu_exp_funnel_lock, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rcuname to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rcuname, align 4
  %level = getelementptr inbounds %struct.trace_event_raw_rcu_exp_funnel_lock, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %level to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %level, align 4
  %conv = zext i8 %5 to i32
  %grplo = getelementptr inbounds %struct.trace_event_raw_rcu_exp_funnel_lock, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %grplo to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %grplo, align 4
  %grphi = getelementptr inbounds %struct.trace_event_raw_rcu_exp_funnel_lock, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %grphi to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %grphi, align 4
  %gpevent = getelementptr inbounds %struct.trace_event_raw_rcu_exp_funnel_lock, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %gpevent to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %gpevent, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.50, ptr noundef %3, i32 noundef %conv, i32 noundef %7, i32 noundef %9, ptr noundef %11) #20
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_nocb_wake(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rcuname = getelementptr inbounds %struct.trace_event_raw_rcu_nocb_wake, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rcuname to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rcuname, align 4
  %cpu = getelementptr inbounds %struct.trace_event_raw_rcu_nocb_wake, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cpu, align 4
  %reason = getelementptr inbounds %struct.trace_event_raw_rcu_nocb_wake, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %reason to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %reason, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.53, ptr noundef %3, i32 noundef %5, ptr noundef %7) #20
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_preempt_task(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rcuname = getelementptr inbounds %struct.trace_event_raw_rcu_preempt_task, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rcuname to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rcuname, align 4
  %gp_seq = getelementptr inbounds %struct.trace_event_raw_rcu_preempt_task, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gp_seq, align 4
  %pid = getelementptr inbounds %struct.trace_event_raw_rcu_preempt_task, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pid, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.55, ptr noundef %3, i32 noundef %5, i32 noundef %7) #20
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_unlock_preempted_task(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rcuname = getelementptr inbounds %struct.trace_event_raw_rcu_unlock_preempted_task, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rcuname to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rcuname, align 4
  %gp_seq = getelementptr inbounds %struct.trace_event_raw_rcu_unlock_preempted_task, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gp_seq, align 4
  %pid = getelementptr inbounds %struct.trace_event_raw_rcu_unlock_preempted_task, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pid, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.55, ptr noundef %3, i32 noundef %5, i32 noundef %7) #20
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_quiescent_state_report(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rcuname = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rcuname to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rcuname, align 4
  %gp_seq = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gp_seq, align 4
  %mask = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %mask to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %mask, align 4
  %qsmask = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %qsmask to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %qsmask, align 4
  %level = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %level to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %level, align 4
  %conv = zext i8 %11 to i32
  %grplo = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %grplo to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %grplo, align 4
  %grphi = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %grphi to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %grphi, align 4
  %gp_tasks = getelementptr inbounds %struct.trace_event_raw_rcu_quiescent_state_report, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %gp_tasks to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %gp_tasks, align 4
  %conv1 = zext i8 %17 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.58, ptr noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %conv, i32 noundef %13, i32 noundef %15, i32 noundef %conv1) #20
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_fqs(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rcuname = getelementptr inbounds %struct.trace_event_raw_rcu_fqs, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rcuname to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rcuname, align 4
  %gp_seq = getelementptr inbounds %struct.trace_event_raw_rcu_fqs, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %gp_seq, align 4
  %cpu = getelementptr inbounds %struct.trace_event_raw_rcu_fqs, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu, align 4
  %qsevent = getelementptr inbounds %struct.trace_event_raw_rcu_fqs, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %qsevent to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %qsevent, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.60, ptr noundef %3, i32 noundef %5, i32 noundef %7, ptr noundef %9) #20
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_stall_warning(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rcuname = getelementptr inbounds %struct.trace_event_raw_rcu_stall_warning, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rcuname to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rcuname, align 4
  %msg = getelementptr inbounds %struct.trace_event_raw_rcu_stall_warning, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %msg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %msg, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.62, ptr noundef %3, ptr noundef %5) #20
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_dyntick(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %polarity = getelementptr inbounds %struct.trace_event_raw_rcu_dyntick, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %polarity to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %polarity, align 4
  %oldnesting = getelementptr inbounds %struct.trace_event_raw_rcu_dyntick, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %oldnesting to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %oldnesting, align 4
  %newnesting = getelementptr inbounds %struct.trace_event_raw_rcu_dyntick, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %newnesting to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %newnesting, align 4
  %dynticks = getelementptr inbounds %struct.trace_event_raw_rcu_dyntick, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %dynticks to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %dynticks, align 4
  %and = and i32 %9, 4095
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.67, ptr noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %and) #20
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_callback(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rcuname = getelementptr inbounds %struct.trace_event_raw_rcu_callback, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rcuname to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rcuname, align 4
  %rhp = getelementptr inbounds %struct.trace_event_raw_rcu_callback, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %rhp to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rhp, align 4
  %func = getelementptr inbounds %struct.trace_event_raw_rcu_callback, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %func to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %func, align 4
  %qlen = getelementptr inbounds %struct.trace_event_raw_rcu_callback, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %qlen to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %qlen, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.72, ptr noundef %3, ptr noundef %5, ptr noundef %7, i32 noundef %9) #20
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_segcb_stats(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %ctx = getelementptr inbounds %struct.trace_event_raw_rcu_segcb_stats, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ctx, align 4
  %seglen = getelementptr inbounds %struct.trace_event_raw_rcu_segcb_stats, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %seglen to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %seglen, align 4
  %arrayidx2 = getelementptr %struct.trace_event_raw_rcu_segcb_stats, ptr %1, i32 0, i32 3, i32 1
  %6 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx2, align 4
  %arrayidx4 = getelementptr %struct.trace_event_raw_rcu_segcb_stats, ptr %1, i32 0, i32 3, i32 2
  %8 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx4, align 4
  %arrayidx6 = getelementptr %struct.trace_event_raw_rcu_segcb_stats, ptr %1, i32 0, i32 3, i32 3
  %10 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx6, align 4
  %gp_seq = getelementptr inbounds %struct.trace_event_raw_rcu_segcb_stats, ptr %1, i32 0, i32 2
  %12 = ptrtoint ptr %gp_seq to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %gp_seq, align 4
  %arrayidx9 = getelementptr %struct.trace_event_raw_rcu_segcb_stats, ptr %1, i32 0, i32 2, i32 1
  %14 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx9, align 4
  %arrayidx11 = getelementptr %struct.trace_event_raw_rcu_segcb_stats, ptr %1, i32 0, i32 2, i32 2
  %16 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx11, align 4
  %arrayidx13 = getelementptr %struct.trace_event_raw_rcu_segcb_stats, ptr %1, i32 0, i32 2, i32 3
  %18 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx13, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.77, ptr noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19) #20
  %call14 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call14, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_kvfree_callback(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rcuname = getelementptr inbounds %struct.trace_event_raw_rcu_kvfree_callback, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rcuname to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rcuname, align 4
  %rhp = getelementptr inbounds %struct.trace_event_raw_rcu_kvfree_callback, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %rhp to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rhp, align 4
  %offset = getelementptr inbounds %struct.trace_event_raw_rcu_kvfree_callback, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %offset to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %offset, align 4
  %qlen = getelementptr inbounds %struct.trace_event_raw_rcu_kvfree_callback, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %qlen to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %qlen, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.79, ptr noundef %3, ptr noundef %5, i32 noundef %7, i32 noundef %9) #20
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_batch_start(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rcuname = getelementptr inbounds %struct.trace_event_raw_rcu_batch_start, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rcuname to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rcuname, align 4
  %qlen = getelementptr inbounds %struct.trace_event_raw_rcu_batch_start, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %qlen to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %qlen, align 4
  %blimit = getelementptr inbounds %struct.trace_event_raw_rcu_batch_start, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %blimit to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %blimit, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.81, ptr noundef %3, i32 noundef %5, i32 noundef %7) #20
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_invoke_callback(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rcuname = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_callback, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rcuname to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rcuname, align 4
  %rhp = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_callback, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %rhp to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rhp, align 4
  %func = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_callback, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %func to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %func, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.82, ptr noundef %3, ptr noundef %5, ptr noundef %7) #20
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_invoke_kvfree_callback(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rcuname = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_kvfree_callback, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rcuname to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rcuname, align 4
  %rhp = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_kvfree_callback, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %rhp to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rhp, align 4
  %offset = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_kvfree_callback, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %offset to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %offset, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.83, ptr noundef %3, ptr noundef %5, i32 noundef %7) #20
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_invoke_kfree_bulk_callback(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rcuname = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_kfree_bulk_callback, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rcuname to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rcuname, align 4
  %p1 = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_kfree_bulk_callback, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %p1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %p1, align 4
  %nr_records = getelementptr inbounds %struct.trace_event_raw_rcu_invoke_kfree_bulk_callback, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %nr_records to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nr_records, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.87, ptr noundef %3, ptr noundef %5, i32 noundef %7) #20
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_batch_end(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rcuname = getelementptr inbounds %struct.trace_event_raw_rcu_batch_end, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rcuname to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rcuname, align 4
  %callbacks_invoked = getelementptr inbounds %struct.trace_event_raw_rcu_batch_end, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %callbacks_invoked to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %callbacks_invoked, align 4
  %cb = getelementptr inbounds %struct.trace_event_raw_rcu_batch_end, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %cb to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %cb, align 4
  %tobool.not = icmp eq i8 %7, 0
  %cond = select i1 %tobool.not, i32 46, i32 67
  %nr = getelementptr inbounds %struct.trace_event_raw_rcu_batch_end, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %nr to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %nr, align 1
  %tobool2.not = icmp eq i8 %9, 0
  %cond3 = select i1 %tobool2.not, i32 46, i32 83
  %iit = getelementptr inbounds %struct.trace_event_raw_rcu_batch_end, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %iit to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %iit, align 2
  %tobool5.not = icmp eq i8 %11, 0
  %cond6 = select i1 %tobool5.not, i32 46, i32 73
  %risk = getelementptr inbounds %struct.trace_event_raw_rcu_batch_end, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %risk to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %risk, align 1
  %tobool8.not = icmp eq i8 %13, 0
  %cond9 = select i1 %tobool8.not, i32 46, i32 82
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.94, ptr noundef %3, i32 noundef %5, i32 noundef %cond, i32 noundef %cond3, i32 noundef %cond6, i32 noundef %cond9) #20
  %call10 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call10, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strncpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly, i32 noundef) local_unnamed_addr #12

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_torture_read(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rcutorturename = getelementptr inbounds %struct.trace_event_raw_rcu_torture_read, ptr %1, i32 0, i32 1
  %rhp = getelementptr inbounds %struct.trace_event_raw_rcu_torture_read, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %rhp to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rhp, align 4
  %secs = getelementptr inbounds %struct.trace_event_raw_rcu_torture_read, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %secs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %secs, align 4
  %c_old = getelementptr inbounds %struct.trace_event_raw_rcu_torture_read, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %c_old to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %c_old, align 4
  %c = getelementptr inbounds %struct.trace_event_raw_rcu_torture_read, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %c to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %c, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.100, ptr noundef %rcutorturename, ptr noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9) #20
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_rcu_barrier(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #20
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rcuname = getelementptr inbounds %struct.trace_event_raw_rcu_barrier, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rcuname to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rcuname, align 4
  %s1 = getelementptr inbounds %struct.trace_event_raw_rcu_barrier, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %s1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s1, align 4
  %cpu = getelementptr inbounds %struct.trace_event_raw_rcu_barrier, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu, align 4
  %cnt = getelementptr inbounds %struct.trace_event_raw_rcu_barrier, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %cnt to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cnt, align 4
  %done = getelementptr inbounds %struct.trace_event_raw_rcu_barrier, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %done to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %done, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.103, ptr noundef %3, ptr noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11) #20
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #13

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #13

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #14

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run1(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run3(ptr noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run7(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run6(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run5(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run8(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run4(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run2(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_lockdep_current_cpu_online() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #15

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree_rcu_scheduler_running() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_swait_queue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @test_callback(ptr nocapture noundef readnone %r) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @rcu_self_test_counter, align 4
  %inc = add i32 %0, 1
  store i32 %inc, ptr @rcu_self_test_counter, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.108, i32 noundef %inc) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @start_poll_synchronize_srcu(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @call_srcu(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree_call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @delayed_work_timer_fn(ptr noundef) #2

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #17

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_barrier() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @srcu_barrier(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @poll_state_synchronize_srcu(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_trylock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @cblist_init_generic(ptr noundef %rtp) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %cbs_gbl_lock = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 1
  %call = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %cbs_gbl_lock) #20
  %0 = load i32, ptr @rcu_task_enqueue_lim, align 4
  %cmp1 = icmp slt i32 %0, 0
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 1, ptr @rcu_task_enqueue_lim, align 4
  store i1 true, ptr @rcu_task_cb_adjust, align 1
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.119, ptr noundef nonnull @.str.120) #23
  br label %if.end11

if.else:                                          ; preds = %entry
  %cmp8 = icmp eq i32 %0, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.else
  store i32 1, ptr @rcu_task_enqueue_lim, align 4
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.else, %if.then
  %1 = load i32, ptr @rcu_task_enqueue_lim, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  %3 = tail call i32 @llvm.umin.i32(i32 %1, i32 %2)
  %div = udiv i32 %2, %3
  %4 = tail call i32 @llvm.ctlz.i32(i32 %div, i1 true) #20, !range !925
  %sub.i.op.i = xor i32 %4, 31
  %sub27 = add i32 %2, -1
  %shr = lshr i32 %sub27, %sub.i.op.i
  %cmp28.not = icmp uge i32 %shr, %3
  %inc = zext i1 %cmp28.not to i32
  %spec.select336 = add nuw nsw i32 %sub.i.op.i, %inc
  %percpu_enqueue_shift = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 19
  %5 = ptrtoint ptr %percpu_enqueue_shift to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile i32 %spec.select336, ptr %percpu_enqueue_shift, align 4
  %percpu_dequeue_lim = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 21
  %6 = ptrtoint ptr %percpu_dequeue_lim to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile i32 %3, ptr %percpu_dequeue_lim, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !945
  %percpu_enqueue_lim = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 20
  %7 = ptrtoint ptr %percpu_enqueue_lim to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile i32 %3, ptr %percpu_enqueue_lim, align 4
  %call71349 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #25
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %8 = load i32, ptr @nr_cpu_ids, align 4
  %cmp72350 = icmp ult i32 %call71349, %8
  br i1 %cmp72350, label %for.body.lr.ph, label %do.body273

for.body.lr.ph:                                   ; preds = %if.end11
  %rtpcpu = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 18
  br label %for.body

for.body:                                         ; preds = %if.end260, %for.body.lr.ph
  %call71351 = phi i32 [ %call71349, %for.body.lr.ph ], [ %call71, %if.end260 ]
  %9 = ptrtoint ptr %rtpcpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %rtpcpu, align 4
  %11 = ptrtoint ptr %10 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call71351
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx, align 4
  %add = add i32 %13, %11
  %14 = inttoptr i32 %add to ptr
  %tobool.not = icmp eq i32 %add, 0
  br i1 %tobool.not, label %land.rhs, label %if.end114

land.rhs:                                         ; preds = %for.body
  %.b335 = load i1, ptr @cblist_init_generic.__already_done, align 1
  br i1 %.b335, label %if.end114, label %if.then88, !prof !903

if.then88:                                        ; preds = %land.rhs
  store i1 true, ptr @cblist_init_generic.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.14, i32 noundef 242, i32 noundef 9, ptr noundef null) #20
  br label %if.end114

if.end114:                                        ; preds = %if.then88, %land.rhs, %for.body
  %tobool122.not = icmp eq i32 %call71351, 0
  br i1 %tobool122.not, label %do.body128, label %do.body124

do.body124:                                       ; preds = %if.end114
  %lock = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %14, i32 0, i32 1
  tail call void @__raw_spin_lock_init(ptr noundef %lock, ptr noundef nonnull @.str.121, ptr noundef nonnull @cblist_init_generic.__key, i16 noundef signext 2) #20
  br label %do.body128

do.body128:                                       ; preds = %do.body124, %if.end114
  %lock129 = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %14, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %lock129) #20
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %14, align 4
  %tobool.not.i = icmp eq ptr %16, null
  br i1 %tobool.not.i, label %if.then136, label %do.body139

if.then136:                                       ; preds = %do.body128
  tail call void @rcu_segcblist_init(ptr noundef %14) #20
  br label %do.body139

do.body139:                                       ; preds = %if.then136, %do.body128
  %rtp_work = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %14, i32 0, i32 4
  tail call void @__init_work(ptr noundef %rtp_work, i32 noundef 0) #20
  %17 = ptrtoint ptr %rtp_work to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 -64, ptr %rtp_work, align 4
  %lockdep_map = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %14, i32 0, i32 4, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.123, ptr noundef nonnull @cblist_init_generic.__key.122, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #20
  %entry143 = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %14, i32 0, i32 4, i32 1
  %18 = ptrtoint ptr %entry143 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %entry143, ptr %entry143, align 4
  %prev.i = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %14, i32 0, i32 4, i32 1, i32 1
  %19 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %entry143, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %14, i32 0, i32 4, i32 2
  %20 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr @rcu_tasks_invoke_cbs_wq, ptr %func, align 4
  %cpu147 = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %14, i32 0, i32 7
  %21 = ptrtoint ptr %cpu147 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %call71351, ptr %cpu147, align 4
  %rtpp = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %14, i32 0, i32 8
  %22 = ptrtoint ptr %rtpp to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %rtp, ptr %rtpp, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %23 = load i32, ptr @debug_locks, align 4
  %tobool151.not = icmp eq i32 %23, 0
  br i1 %tobool151.not, label %if.end260, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body139
  %24 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %27, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !946
  %28 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %28, -16384
  %29 = inttoptr i32 %and.i to ptr
  %cpu171 = getelementptr inbounds %struct.thread_info, ptr %29, i32 0, i32 3
  %30 = ptrtoint ptr %cpu171 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %cpu171, align 4
  %arrayidx172 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %31
  %32 = ptrtoint ptr %arrayidx172 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %arrayidx172, align 4
  %add173 = add i32 %33, ptrtoint (ptr @lockdep_recursion to i32)
  %34 = inttoptr i32 %add173 to ptr
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %34, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !947
  %37 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i340 = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i.i340 to ptr
  %preempt_count.i.i341 = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %preempt_count.i.i341 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %preempt_count.i.i341, align 4
  %sub.i = add i32 %40, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i341, align 4
  %tobool180.not = icmp eq i32 %36, 0
  br i1 %tobool180.not, label %land.rhs181, label %if.end260

land.rhs181:                                      ; preds = %land.lhs.true
  %41 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i342 = and i32 %41, -16384
  %42 = inttoptr i32 %and.i.i.i342 to ptr
  %preempt_count.i.i343 = getelementptr inbounds %struct.thread_info, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %preempt_count.i.i343 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %preempt_count.i.i343, align 4
  %add.i344 = add i32 %44, 1
  store volatile i32 %add.i344, ptr %preempt_count.i.i343, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !948
  %45 = ptrtoint ptr %cpu171 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %cpu171, align 4
  %arrayidx205 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %46
  %47 = ptrtoint ptr %arrayidx205 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx205, align 4
  %add206 = add i32 %48, ptrtoint (ptr @hardirqs_enabled to i32)
  %49 = inttoptr i32 %add206 to ptr
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %49, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !949
  %52 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i345 = and i32 %52, -16384
  %53 = inttoptr i32 %and.i.i.i345 to ptr
  %preempt_count.i.i346 = getelementptr inbounds %struct.thread_info, ptr %53, i32 0, i32 1
  %54 = ptrtoint ptr %preempt_count.i.i346 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %preempt_count.i.i346, align 4
  %sub.i347 = add i32 %55, -1
  store volatile i32 %sub.i347, ptr %preempt_count.i.i346, align 4
  %tobool213.not = icmp eq i32 %51, 0
  br i1 %tobool213.not, label %if.end260, label %land.rhs222

land.rhs222:                                      ; preds = %land.rhs181
  %.b333334 = load i1, ptr @cblist_init_generic.__already_done.124, align 1
  br i1 %.b333334, label %if.end260, label %if.then233, !prof !903

if.then233:                                       ; preds = %land.rhs222
  store i1 true, ptr @cblist_init_generic.__already_done.124, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.14, i32 noundef 251, i32 noundef 9, ptr noundef null) #20
  br label %if.end260

if.end260:                                        ; preds = %if.then233, %land.rhs222, %land.rhs181, %land.lhs.true, %do.body139
  tail call void @_raw_spin_unlock(ptr noundef %lock129) #20
  %call71 = tail call i32 @cpumask_next(i32 noundef %call71351, ptr noundef nonnull @__cpu_possible_mask) #25
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %56 = load i32, ptr @nr_cpu_ids, align 4
  %cmp72 = icmp ult i32 %call71, %56
  br i1 %cmp72, label %for.body, label %do.body273

do.body273:                                       ; preds = %if.end260, %if.end11
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %cbs_gbl_lock, i32 noundef %call) #20
  %57 = ptrtoint ptr %percpu_enqueue_shift to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %percpu_enqueue_shift, align 4
  %59 = ptrtoint ptr %percpu_enqueue_lim to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %percpu_enqueue_lim, align 4
  %call293 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.126, ptr noundef nonnull @.str.120, i32 noundef %58, i32 noundef %60) #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_segcblist_enqueue(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #9 align 64 {
entry:
  br label %__here

__here:                                           ; preds = %entry
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #18

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_segcblist_init(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_tasks_invoke_cbs_wq(ptr noundef %wp) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %wp, i32 -112
  %rtpp = getelementptr i8, ptr %wp, i32 72
  %0 = ptrtoint ptr %rtpp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rtpp, align 4
  tail call fastcc void @rcu_tasks_invoke_cbs(ptr noundef %1, ptr noundef %add.ptr)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_tasks_invoke_cbs(ptr noundef %rtp, ptr noundef %rtpcp) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %rcl = alloca %struct.rcu_cblist, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %rcl) #20
  %0 = getelementptr inbounds %struct.rcu_cblist, ptr %rcl, i32 0, i32 1
  %1 = getelementptr inbounds %struct.rcu_cblist, ptr %rcl, i32 0, i32 2
  %2 = ptrtoint ptr %rcl to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %rcl, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %rcl, ptr %0, align 4
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %1, align 4
  %cpu3 = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %rtpcp, i32 0, i32 7
  %5 = ptrtoint ptr %cpu3 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cpu3, align 4
  %mul = shl i32 %6, 1
  %add = or i32 %mul, 1
  %percpu_dequeue_lim = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 21
  %7 = ptrtoint ptr %percpu_dequeue_lim to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %percpu_dequeue_lim, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !950
  %cmp = icmp slt i32 %add, %8
  br i1 %cmp, label %do.body8, label %if.end38

do.body8:                                         ; preds = %entry
  %rtpcpu = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 18
  %9 = ptrtoint ptr %rtpcpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %rtpcpu, align 4
  %11 = ptrtoint ptr %10 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %add
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx, align 4
  %add13 = add i32 %13, %11
  %14 = inttoptr i32 %add13 to ptr
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %15 = load ptr, ptr @system_wq, align 4
  %rtp_work = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %14, i32 0, i32 4
  %call = call zeroext i1 @queue_work_on(i32 noundef %add, ptr noundef %15, ptr noundef %rtp_work) #20
  %inc = add i32 %mul, 2
  %16 = ptrtoint ptr %percpu_dequeue_lim to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %percpu_dequeue_lim, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !951
  %cmp24 = icmp slt i32 %inc, %17
  br i1 %cmp24, label %do.body26, label %if.end38

do.body26:                                        ; preds = %do.body8
  %18 = ptrtoint ptr %rtpcpu to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %rtpcpu, align 4
  %20 = ptrtoint ptr %19 to i32
  %arrayidx34 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %inc
  %21 = ptrtoint ptr %arrayidx34 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx34, align 4
  %add35 = add i32 %22, %20
  %23 = inttoptr i32 %add35 to ptr
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %24 = load ptr, ptr @system_wq, align 4
  %rtp_work36 = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %23, i32 0, i32 4
  %call37 = call zeroext i1 @queue_work_on(i32 noundef %inc, ptr noundef %24, ptr noundef %rtp_work36) #20
  br label %if.end38

if.end38:                                         ; preds = %do.body26, %do.body8, %entry
  %25 = ptrtoint ptr %rtpcp to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile ptr, ptr %rtpcp, align 4
  %tobool.not.i = icmp eq ptr %26, null
  br i1 %tobool.not.i, label %cleanup, label %do.body43

do.body43:                                        ; preds = %if.end38
  %lock = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %rtpcp, i32 0, i32 1
  %call46 = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #20
  %tasks_gp_seq = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 7
  %27 = ptrtoint ptr %tasks_gp_seq to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %tasks_gp_seq, align 4
  call void @rcu_segcblist_advance(ptr noundef %rtpcp, i32 noundef %28) #20
  call void @rcu_segcblist_extract_done_cbs(ptr noundef %rtpcp, ptr noundef nonnull %rcl) #20
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %29 = load i32, ptr @debug_locks, align 4
  %tobool.not = icmp eq i32 %29, 0
  br i1 %tobool.not, label %if.end156, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body43
  %30 = call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i = and i32 %30, -16384
  %31 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %33, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !952
  %34 = call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %34, -16384
  %35 = inttoptr i32 %and.i to ptr
  %cpu78 = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 3
  %36 = ptrtoint ptr %cpu78 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %cpu78, align 4
  %arrayidx79 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %37
  %38 = ptrtoint ptr %arrayidx79 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %arrayidx79, align 4
  %add80 = add i32 %39, ptrtoint (ptr @lockdep_recursion to i32)
  %40 = inttoptr i32 %add80 to ptr
  %41 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %40, align 4
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !953
  %43 = call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i384 = and i32 %43, -16384
  %44 = inttoptr i32 %and.i.i.i384 to ptr
  %preempt_count.i.i385 = getelementptr inbounds %struct.thread_info, ptr %44, i32 0, i32 1
  %45 = ptrtoint ptr %preempt_count.i.i385 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %preempt_count.i.i385, align 4
  %sub.i = add i32 %46, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i385, align 4
  %tobool87.not = icmp eq i32 %42, 0
  br i1 %tobool87.not, label %land.rhs, label %if.end156

land.rhs:                                         ; preds = %land.lhs.true
  %47 = call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i386 = and i32 %47, -16384
  %48 = inttoptr i32 %and.i.i.i386 to ptr
  %preempt_count.i.i387 = getelementptr inbounds %struct.thread_info, ptr %48, i32 0, i32 1
  %49 = ptrtoint ptr %preempt_count.i.i387 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %preempt_count.i.i387, align 4
  %add.i388 = add i32 %50, 1
  store volatile i32 %add.i388, ptr %preempt_count.i.i387, align 4
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !954
  %51 = ptrtoint ptr %cpu78 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %cpu78, align 4
  %arrayidx111 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %52
  %53 = ptrtoint ptr %arrayidx111 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %arrayidx111, align 4
  %add112 = add i32 %54, ptrtoint (ptr @hardirqs_enabled to i32)
  %55 = inttoptr i32 %add112 to ptr
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %55, align 4
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !955
  %58 = call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i389 = and i32 %58, -16384
  %59 = inttoptr i32 %and.i.i.i389 to ptr
  %preempt_count.i.i390 = getelementptr inbounds %struct.thread_info, ptr %59, i32 0, i32 1
  %60 = ptrtoint ptr %preempt_count.i.i390 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %preempt_count.i.i390, align 4
  %sub.i391 = add i32 %61, -1
  store volatile i32 %sub.i391, ptr %preempt_count.i.i390, align 4
  %tobool119.not = icmp eq i32 %57, 0
  br i1 %tobool119.not, label %if.end156, label %land.rhs123

land.rhs123:                                      ; preds = %land.rhs
  %.b377 = load i1, ptr @rcu_tasks_invoke_cbs.__already_done, align 1
  br i1 %.b377, label %if.end156, label %if.then130, !prof !903

if.then130:                                       ; preds = %land.rhs123
  store i1 true, ptr @rcu_tasks_invoke_cbs.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.14, i32 noundef 468, i32 noundef 9, ptr noundef null) #20
  br label %if.end156

if.end156:                                        ; preds = %if.then130, %land.rhs123, %land.rhs, %land.lhs.true, %do.body43
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call46) #20
  %62 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %1, align 4
  %call178 = call ptr @rcu_cblist_dequeue(ptr noundef nonnull %rcl) #20
  %tobool179.not406 = icmp eq ptr %call178, null
  br i1 %tobool179.not406, label %do.body184, label %for.body

for.body:                                         ; preds = %for.body, %if.end156
  %rhp.0407 = phi ptr [ %call182, %for.body ], [ %call178, %if.end156 ]
  call fastcc void @local_bh_disable()
  %func = getelementptr inbounds %struct.callback_head, ptr %rhp.0407, i32 0, i32 1
  %64 = ptrtoint ptr %func to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %func, align 4
  call void %65(ptr noundef nonnull %rhp.0407) #20
  call fastcc void @local_bh_enable()
  call void @__might_resched(ptr noundef nonnull @.str.14, i32 noundef 474, i32 noundef 0) #20
  %call.i = call i32 @__cond_resched() #20
  %call182 = call ptr @rcu_cblist_dequeue(ptr noundef nonnull %rcl) #20
  %tobool179.not = icmp eq ptr %call182, null
  br i1 %tobool179.not, label %do.body184, label %for.body

do.body184:                                       ; preds = %for.body, %if.end156
  %call191 = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #20
  %sub = sub i32 0, %63
  call void @rcu_segcblist_add_len(ptr noundef %rtpcp, i32 noundef %sub) #20
  %66 = ptrtoint ptr %tasks_gp_seq to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile i32, ptr %tasks_gp_seq, align 4
  %add1.i = add i32 %67, 7
  %and.i404 = and i32 %add1.i, -4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !928
  %call203 = call zeroext i1 @rcu_segcblist_accelerate(ptr noundef %rtpcp, i32 noundef %and.i404) #20
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %68 = load i32, ptr @debug_locks, align 4
  %tobool207.not = icmp eq i32 %68, 0
  br i1 %tobool207.not, label %if.end320, label %land.lhs.true208

land.lhs.true208:                                 ; preds = %do.body184
  %69 = call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i392 = and i32 %69, -16384
  %70 = inttoptr i32 %and.i.i.i392 to ptr
  %preempt_count.i.i393 = getelementptr inbounds %struct.thread_info, ptr %70, i32 0, i32 1
  %71 = ptrtoint ptr %preempt_count.i.i393 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load volatile i32, ptr %preempt_count.i.i393, align 4
  %add.i394 = add i32 %72, 1
  store volatile i32 %add.i394, ptr %preempt_count.i.i393, align 4
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !956
  %73 = call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i405 = and i32 %73, -16384
  %74 = inttoptr i32 %and.i405 to ptr
  %cpu231 = getelementptr inbounds %struct.thread_info, ptr %74, i32 0, i32 3
  %75 = ptrtoint ptr %cpu231 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %cpu231, align 4
  %arrayidx232 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %76
  %77 = ptrtoint ptr %arrayidx232 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %arrayidx232, align 4
  %add233 = add i32 %78, ptrtoint (ptr @lockdep_recursion to i32)
  %79 = inttoptr i32 %add233 to ptr
  %80 = ptrtoint ptr %79 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load volatile i32, ptr %79, align 4
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !957
  %82 = call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i395 = and i32 %82, -16384
  %83 = inttoptr i32 %and.i.i.i395 to ptr
  %preempt_count.i.i396 = getelementptr inbounds %struct.thread_info, ptr %83, i32 0, i32 1
  %84 = ptrtoint ptr %preempt_count.i.i396 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile i32, ptr %preempt_count.i.i396, align 4
  %sub.i397 = add i32 %85, -1
  store volatile i32 %sub.i397, ptr %preempt_count.i.i396, align 4
  %tobool240.not = icmp eq i32 %81, 0
  br i1 %tobool240.not, label %land.rhs241, label %if.end320

land.rhs241:                                      ; preds = %land.lhs.true208
  %86 = call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i398 = and i32 %86, -16384
  %87 = inttoptr i32 %and.i.i.i398 to ptr
  %preempt_count.i.i399 = getelementptr inbounds %struct.thread_info, ptr %87, i32 0, i32 1
  %88 = ptrtoint ptr %preempt_count.i.i399 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile i32, ptr %preempt_count.i.i399, align 4
  %add.i400 = add i32 %89, 1
  store volatile i32 %add.i400, ptr %preempt_count.i.i399, align 4
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !958
  %90 = ptrtoint ptr %cpu231 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %cpu231, align 4
  %arrayidx265 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %91
  %92 = ptrtoint ptr %arrayidx265 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %arrayidx265, align 4
  %add266 = add i32 %93, ptrtoint (ptr @hardirqs_enabled to i32)
  %94 = inttoptr i32 %add266 to ptr
  %95 = ptrtoint ptr %94 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load volatile i32, ptr %94, align 4
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !959
  %97 = call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i401 = and i32 %97, -16384
  %98 = inttoptr i32 %and.i.i.i401 to ptr
  %preempt_count.i.i402 = getelementptr inbounds %struct.thread_info, ptr %98, i32 0, i32 1
  %99 = ptrtoint ptr %preempt_count.i.i402 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load volatile i32, ptr %preempt_count.i.i402, align 4
  %sub.i403 = add i32 %100, -1
  store volatile i32 %sub.i403, ptr %preempt_count.i.i402, align 4
  %tobool273.not = icmp eq i32 %96, 0
  br i1 %tobool273.not, label %if.end320, label %land.rhs282

land.rhs282:                                      ; preds = %land.rhs241
  %.b375376 = load i1, ptr @rcu_tasks_invoke_cbs.__already_done.128, align 1
  br i1 %.b375376, label %if.end320, label %if.then293, !prof !903

if.then293:                                       ; preds = %land.rhs282
  store i1 true, ptr @rcu_tasks_invoke_cbs.__already_done.128, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.14, i32 noundef 479, i32 noundef 9, ptr noundef null) #20
  br label %if.end320

if.end320:                                        ; preds = %if.then293, %land.rhs282, %land.rhs241, %land.lhs.true208, %do.body184
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call191) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end320, %if.end38
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %rcl) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_segcblist_advance(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_segcblist_extract_done_cbs(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rcu_cblist_dequeue(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_bh_disable() #9 align 64 {
entry:
  br label %__here

__here:                                           ; preds = %entry
  tail call void @__local_bh_disable_ip(i32 noundef ptrtoint (ptr blockaddress(@local_bh_disable, %__here) to i32), i32 noundef 512) #20
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_bh_enable() #9 align 64 {
entry:
  br label %__here

__here:                                           ; preds = %entry
  tail call void @__local_bh_enable_ip(i32 noundef ptrtoint (ptr blockaddress(@local_bh_enable, %__here) to i32), i32 noundef 512) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_segcblist_add_len(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_segcblist_accelerate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__local_bh_disable_ip(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__local_bh_enable_ip(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #9 align 64 {
entry:
  br label %__here

__here:                                           ; preds = %entry
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_tasks_wait_gp(ptr noundef %rtp) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %holdouts = alloca %struct.list_head, align 4
  %firstreport = alloca i8, align 1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %holdouts) #20
  %0 = getelementptr inbounds %struct.list_head, ptr %holdouts, i32 0, i32 1
  %1 = ptrtoint ptr %holdouts to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %holdouts, ptr %holdouts, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %holdouts, ptr %0, align 4
  %gp_state.i = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 2
  %3 = ptrtoint ptr %gp_state.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 3, ptr %gp_state.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %4 = load volatile i32, ptr @jiffies, align 128
  %gp_jiffies.i = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 5
  %5 = ptrtoint ptr %gp_jiffies.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %gp_jiffies.i, align 4
  %pregp_func = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 12
  %6 = ptrtoint ptr %pregp_func to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pregp_func, align 4
  call void %7() #20
  %8 = ptrtoint ptr %gp_state.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 4, ptr %gp_state.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %9 = load volatile i32, ptr @jiffies, align 128
  %10 = ptrtoint ptr %gp_jiffies.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %gp_jiffies.i, align 4
  %11 = call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %14, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !916
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #20
  %call.i = call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i, label %rcu_read_lock.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = call i32 @debug_lockdep_rcu_enabled() #20
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %rcu_read_lock.exit, label %land.lhs.true2.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %rcu_read_lock.exit, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true2.i
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.117, i32 noundef 696, ptr noundef nonnull @.str.118) #20
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i, %land.lhs.true.i, %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.task_struct, ptr @init_task, i32 0, i32 50) to i32))
  %15 = load volatile ptr, ptr getelementptr inbounds (%struct.task_struct, ptr @init_task, i32 0, i32 50), align 16
  %add.ptr126 = getelementptr i8, ptr %15, i32 -1136
  %cmp.not127 = icmp eq ptr %add.ptr126, @init_task
  br i1 %cmp.not127, label %for.end32, label %do.body3.lr.ph

do.body3.lr.ph:                                   ; preds = %rcu_read_lock.exit
  %pertask_func = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 13
  br label %do.body3

for.cond.loopexit:                                ; preds = %for.body22, %do.end9
  %16 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %18, align 16
  %add.ptr = getelementptr i8, ptr %17, i32 -1136
  %cmp.not = icmp eq ptr %add.ptr, @init_task
  br i1 %cmp.not, label %for.end32, label %do.body3

do.body3:                                         ; preds = %for.cond.loopexit, %do.body3.lr.ph
  %18 = phi ptr [ %15, %do.body3.lr.ph ], [ %17, %for.cond.loopexit ]
  %call = call i32 @rcu_read_lock_any_held()
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %do.end9

land.lhs.true:                                    ; preds = %do.body3
  %call4 = call i32 @debug_lockdep_rcu_enabled()
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %do.end9, label %land.lhs.true6

land.lhs.true6:                                   ; preds = %land.lhs.true
  %.b99 = load i1, ptr @rcu_tasks_wait_gp.__warned, align 1
  br i1 %.b99, label %do.end9, label %if.then

if.then:                                          ; preds = %land.lhs.true6
  store i1 true, ptr @rcu_tasks_wait_gp.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.14, i32 noundef 611, ptr noundef nonnull @.str.136) #20
  br label %do.end9

do.end9:                                          ; preds = %if.then, %land.lhs.true6, %land.lhs.true, %do.body3
  %signal = getelementptr i8, ptr %18, i32 544
  %19 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %signal, align 16
  %thread_head = getelementptr inbounds %struct.signal_struct, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %thread_head to i32
  call void @__asan_load4_noabort(i32 %21)
  %.pn122 = load volatile ptr, ptr %thread_head, align 4
  %cmp21.not124 = icmp eq ptr %.pn122, %thread_head
  br i1 %cmp21.not124, label %for.cond.loopexit, label %for.body22

for.body22:                                       ; preds = %for.body22, %do.end9
  %.pn125 = phi ptr [ %.pn, %for.body22 ], [ %.pn122, %do.end9 ]
  %t.0 = getelementptr i8, ptr %.pn125, i32 -1404
  %22 = ptrtoint ptr %pertask_func to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pertask_func, align 4
  call void %23(ptr noundef %t.0, ptr noundef nonnull %holdouts) #20
  %24 = ptrtoint ptr %.pn125 to i32
  call void @__asan_load4_noabort(i32 %24)
  %.pn = load volatile ptr, ptr %.pn125, align 4
  %25 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %signal, align 16
  %thread_head20 = getelementptr inbounds %struct.signal_struct, ptr %26, i32 0, i32 3
  %cmp21.not = icmp eq ptr %.pn, %thread_head20
  br i1 %cmp21.not, label %for.cond.loopexit, label %for.body22

for.end32:                                        ; preds = %for.cond.loopexit, %rcu_read_lock.exit
  %call.i102 = call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i102, label %rcu_read_unlock.exit, label %land.lhs.true.i105

land.lhs.true.i105:                               ; preds = %for.end32
  %call1.i103 = call i32 @debug_lockdep_rcu_enabled() #20
  %tobool.not.i104 = icmp eq i32 %call1.i103, 0
  br i1 %tobool.not.i104, label %rcu_read_unlock.exit, label %land.lhs.true2.i107

land.lhs.true2.i107:                              ; preds = %land.lhs.true.i105
  %.b4.i106 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i106, label %rcu_read_unlock.exit, label %if.then.i108

if.then.i108:                                     ; preds = %land.lhs.true2.i107
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.117, i32 noundef 724, ptr noundef nonnull @.str.129) #20
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i108, %land.lhs.true2.i107, %land.lhs.true.i105, %for.end32
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !927
  %27 = call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i.i.i109 = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i.i.i.i109 to ptr
  %preempt_count.i.i.i.i110 = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %preempt_count.i.i.i.i110 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %preempt_count.i.i.i.i110, align 4
  %sub.i.i.i = add i32 %30, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i110, align 4
  call void @rcu_read_unlock_strict() #20
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #20
  %31 = ptrtoint ptr %gp_state.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 5, ptr %gp_state.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %32 = load volatile i32, ptr @jiffies, align 128
  %33 = ptrtoint ptr %gp_jiffies.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %gp_jiffies.i, align 4
  %postscan_func = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 14
  %34 = ptrtoint ptr %postscan_func to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %postscan_func, align 4
  call void %35(ptr noundef nonnull %holdouts) #20
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %36 = load volatile i32, ptr @jiffies, align 128
  %init_fract = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 4
  %37 = ptrtoint ptr %init_fract to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %init_fract, align 4
  %39 = ptrtoint ptr %holdouts to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile ptr, ptr %holdouts, align 4
  %cmp.i.not129 = icmp eq ptr %40, %holdouts
  br i1 %cmp.i.not129, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %rcu_read_unlock.exit
  %holdouts_func = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 15
  br label %while.body

while.body:                                       ; preds = %if.end69, %while.body.lr.ph
  %lastreport.0131 = phi i32 [ %36, %while.body.lr.ph ], [ %lastreport.1, %if.end69 ]
  %fract.0130 = phi i32 [ %38, %while.body.lr.ph ], [ %spec.select, %if.end69 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %firstreport) #20
  %41 = ptrtoint ptr %firstreport to i32
  call void @__asan_store1_noabort(i32 %41)
  store i8 -1, ptr %firstreport, align 1, !annotation !905
  %42 = ptrtoint ptr %gp_state.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 6, ptr %gp_state.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %43 = load volatile i32, ptr @jiffies, align 128
  %44 = ptrtoint ptr %gp_jiffies.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %gp_jiffies.i, align 4
  %call35 = call i32 @schedule_timeout_idle(i32 noundef %fract.0130) #20
  %cmp36 = icmp slt i32 %fract.0130, 100
  %inc = zext i1 %cmp36 to i32
  %spec.select = add i32 %fract.0130, %inc
  %45 = load volatile i32, ptr @rcu_task_stall_timeout, align 4
  %cmp43 = icmp sgt i32 %45, 0
  br i1 %cmp43, label %land.end, label %if.end47

land.end:                                         ; preds = %while.body
  %add = add i32 %45, %lastreport.0131
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %46 = load volatile i32, ptr @jiffies, align 128
  %sub = sub i32 %add, %46
  %cmp44 = icmp slt i32 %sub, 0
  br i1 %cmp44, label %if.then46, label %if.end47

if.then46:                                        ; preds = %land.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %47 = load volatile i32, ptr @jiffies, align 128
  br label %if.end47

if.end47:                                         ; preds = %if.then46, %land.end, %while.body
  %48 = phi i1 [ true, %if.then46 ], [ false, %land.end ], [ false, %while.body ]
  %lastreport.1 = phi i32 [ %47, %if.then46 ], [ %lastreport.0131, %land.end ], [ %lastreport.0131, %while.body ]
  %49 = ptrtoint ptr %firstreport to i32
  call void @__asan_store1_noabort(i32 %49)
  store i8 1, ptr %firstreport, align 1
  %50 = call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %50, -16384
  %51 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %51, i32 0, i32 2
  %52 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %task, align 8
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %53, i32 0, i32 1
  %54 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %stack.i.i, align 4
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %55, align 4
  %58 = and i32 %57, 256
  %tobool.not.i115 = icmp eq i32 %58, 0
  br i1 %tobool.not.i115, label %signal_pending.exit, label %do.end63, !prof !903

signal_pending.exit:                              ; preds = %if.end47
  %59 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %55, align 4
  %and1.i.i.i.i.i = and i32 %60, 1
  %tobool50.not = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool50.not, label %if.end69, label %do.end63, !prof !903

do.end63:                                         ; preds = %signal_pending.exit, %if.end47
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.14, i32 noundef 645, i32 noundef 9, ptr noundef null) #20
  br label %if.end69

if.end69:                                         ; preds = %do.end63, %signal_pending.exit
  %61 = ptrtoint ptr %gp_state.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 7, ptr %gp_state.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %62 = load volatile i32, ptr @jiffies, align 128
  %63 = ptrtoint ptr %gp_jiffies.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %62, ptr %gp_jiffies.i, align 4
  %64 = ptrtoint ptr %holdouts_func to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %holdouts_func, align 4
  call void %65(ptr noundef nonnull %holdouts, i1 noundef zeroext %48, ptr noundef nonnull %firstreport) #20
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %firstreport) #20
  %66 = ptrtoint ptr %holdouts to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile ptr, ptr %holdouts, align 4
  %cmp.i.not = icmp eq ptr %67, %holdouts
  br i1 %cmp.i.not, label %while.end, label %while.body

while.end:                                        ; preds = %if.end69, %rcu_read_unlock.exit
  %68 = ptrtoint ptr %gp_state.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 8, ptr %gp_state.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %69 = load volatile i32, ptr @jiffies, align 128
  %70 = ptrtoint ptr %gp_jiffies.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 %69, ptr %gp_jiffies.i, align 4
  %postgp_func = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 16
  %71 = ptrtoint ptr %postgp_func to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %postgp_func, align 4
  call void %72(ptr noundef %rtp) #20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %holdouts) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @schedule_timeout_idle(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_barrier_tasks_generic_cb(ptr nocapture noundef readonly %rhp) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %rtpp = getelementptr i8, ptr %rhp, i32 12
  %0 = ptrtoint ptr %rtpp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rtpp, align 4
  %barrier_q_count = getelementptr inbounds %struct.rcu_tasks, ptr %1, i32 0, i32 24
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %barrier_q_count, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !936
  tail call void @llvm.prefetch.p0(ptr %barrier_q_count, i32 1, i32 3, i32 1) #20
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %barrier_q_count, ptr %barrier_q_count, i32 1, ptr elementtype(i32) %barrier_q_count) #20, !srcloc !937
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %2, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !938
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.i.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %barrier_q_completion = getelementptr inbounds %struct.rcu_tasks, ptr %1, i32 0, i32 25
  tail call void @complete(ptr noundef %barrier_q_completion) #20
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_segcblist_entrain(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_tasks_rude_wait_gp(ptr nocapture noundef %rtp) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %call4.i.i = tail call i32 @__bitmap_weight(ptr noundef nonnull @__cpu_online_mask, i32 noundef %0) #20
  %n_ipis = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 8
  %1 = ptrtoint ptr %n_ipis to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %n_ipis, align 4
  %add = add i32 %2, %call4.i.i
  store i32 %add, ptr %n_ipis, align 4
  %call1 = tail call i32 @schedule_on_each_cpu(ptr noundef nonnull @rcu_tasks_be_rude) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @schedule_on_each_cpu(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal void @rcu_tasks_be_rude(ptr nocapture noundef %work) #8 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__bitmap_weight(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_read_unlock_iw(ptr nocapture noundef readnone %iwp) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__wake_up(ptr noundef nonnull @trc_wait, i32 noundef 3, i32 noundef 1, ptr noundef null) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_tasks_pregp_step() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @synchronize_rcu() #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_tasks_pertask(ptr noundef %t, ptr noundef %hop) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i20 = and i32 %0, -16384
  %1 = inttoptr i32 %and.i20 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cmp.not = icmp eq ptr %3, %t
  br i1 %cmp.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  %on_rq = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 12
  %4 = ptrtoint ptr %on_rq to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %on_rq, align 4
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %if.end, label %land.lhs.true1

land.lhs.true1:                                   ; preds = %do.end
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 3
  %6 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %7, 2
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true1
  %usage.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 2
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %usage.i, i32 1, i32 3, i32 1) #20
  %8 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage.i, ptr %usage.i, i32 1, ptr elementtype(i32) %usage.i) #20, !srcloc !960
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %8, 0
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end15.sink.split.i.i.i.i, label %if.else.i.i.i.i, !prof !904

if.else.i.i.i.i:                                  ; preds = %if.then
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %9 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  %.not.i.i.i.i = icmp sgt i32 %9, -1
  br i1 %.not.i.i.i.i, label %get_task_struct.exit, label %if.end15.sink.split.i.i.i.i, !prof !903

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i, %if.then
  %.sink.i.i.i.i = phi i32 [ 2, %if.then ], [ 1, %if.else.i.i.i.i ]
  tail call void @refcount_warn_saturate(ptr noundef %usage.i, i32 noundef %.sink.i.i.i.i) #20
  br label %get_task_struct.exit

get_task_struct.exit:                             ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i
  %nvcsw = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 90
  %10 = ptrtoint ptr %nvcsw to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %nvcsw, align 16
  %rcu_tasks_nvcsw = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 39
  %12 = ptrtoint ptr %rcu_tasks_nvcsw to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %rcu_tasks_nvcsw, align 32
  %rcu_tasks_holdout = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 40
  %13 = ptrtoint ptr %rcu_tasks_holdout to i32
  call void @__asan_store1_noabort(i32 %13)
  store volatile i8 1, ptr %rcu_tasks_holdout, align 4
  %rcu_tasks_holdout_list = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 43
  %14 = ptrtoint ptr %hop to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %hop, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %rcu_tasks_holdout_list, ptr noundef %hop, ptr noundef %15) #20
  br i1 %call.i.i, label %if.end.i.i, label %if.end

if.end.i.i:                                       ; preds = %get_task_struct.exit
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %rcu_tasks_holdout_list, ptr %prev1.i.i, align 4
  %17 = ptrtoint ptr %rcu_tasks_holdout_list to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %15, ptr %rcu_tasks_holdout_list, align 4
  %prev3.i.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 43, i32 1
  %18 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %hop, ptr %prev3.i.i, align 4
  %19 = ptrtoint ptr %hop to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %rcu_tasks_holdout_list, ptr %hop, align 4
  br label %if.end

if.end:                                           ; preds = %if.end.i.i, %get_task_struct.exit, %land.lhs.true1, %do.end, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_tasks_postscan(ptr nocapture noundef readnone %hop) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @synchronize_srcu(ptr noundef nonnull @tasks_rcu_exit_srcu) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @check_all_holdout_tasks(ptr noundef readonly %hop, i1 noundef zeroext %needreport, ptr nocapture noundef %firstreport) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hop to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hop, align 4
  %cmp.not18 = icmp eq ptr %1, %hop
  br i1 %cmp.not18, label %for.end, label %for.body

for.body:                                         ; preds = %check_holdout_task.exit, %entry
  %.pn.in19 = phi ptr [ %.pn, %check_holdout_task.exit ], [ %1, %entry ]
  %t.0 = getelementptr i8, ptr %.pn.in19, i32 -1068
  %2 = ptrtoint ptr %.pn.in19 to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn = load ptr, ptr %.pn.in19, align 4
  %rcu_tasks_holdout.i = getelementptr i8, ptr %.pn.in19, i32 -8
  %3 = ptrtoint ptr %rcu_tasks_holdout.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load volatile i8, ptr %rcu_tasks_holdout.i, align 4
  %tobool.not.i = icmp eq i8 %4, 0
  br i1 %tobool.not.i, label %do.body15.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %for.body
  %rcu_tasks_nvcsw.i = getelementptr i8, ptr %.pn.in19, i32 -12
  %5 = ptrtoint ptr %rcu_tasks_nvcsw.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %rcu_tasks_nvcsw.i, align 32
  %nvcsw.i = getelementptr i8, ptr %.pn.in19, i32 452
  %7 = ptrtoint ptr %nvcsw.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %nvcsw.i, align 16
  %cmp.not.i = icmp eq i32 %6, %8
  br i1 %cmp.not.i, label %do.end8.i, label %do.body15.i

do.end8.i:                                        ; preds = %lor.lhs.false.i
  %on_rq.i = getelementptr i8, ptr %.pn.in19, i32 -1016
  %9 = ptrtoint ptr %on_rq.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %on_rq.i, align 4
  %tobool10.not.i = icmp eq i32 %10, 0
  br i1 %tobool10.not.i, label %do.body15.i, label %if.end.i

do.body15.i:                                      ; preds = %do.end8.i, %lor.lhs.false.i, %for.body
  %11 = ptrtoint ptr %rcu_tasks_holdout.i to i32
  call void @__asan_store1_noabort(i32 %11)
  store volatile i8 0, ptr %rcu_tasks_holdout.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in19) #20
  br i1 %call.i.i.i, label %if.end.i.i.i, label %list_del_init.exit.i

if.end.i.i.i:                                     ; preds = %do.body15.i
  %prev.i.i.i = getelementptr i8, ptr %.pn.in19, i32 4
  %12 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %prev.i.i.i, align 4
  %14 = ptrtoint ptr %.pn.in19 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %.pn.in19, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %13, ptr %prev1.i.i.i.i, align 4
  %17 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %15, ptr %13, align 4
  br label %list_del_init.exit.i

list_del_init.exit.i:                             ; preds = %if.end.i.i.i, %do.body15.i
  %18 = ptrtoint ptr %.pn.in19 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %.pn.in19, ptr %.pn.in19, align 4
  %prev.i3.i.i = getelementptr i8, ptr %.pn.in19, i32 4
  %19 = ptrtoint ptr %prev.i3.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %.pn.in19, ptr %prev.i3.i.i, align 4
  %usage.i.i = getelementptr i8, ptr %.pn.in19, i32 -1060
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage.i.i, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !961
  tail call void @llvm.prefetch.p0(ptr %usage.i.i, i32 1, i32 3, i32 1) #20
  %20 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage.i.i, ptr %usage.i.i, i32 1, ptr elementtype(i32) %usage.i.i) #20, !srcloc !962
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %20, 0
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %list_del_init.exit.i
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %check_holdout_task.exit, label %if.then10.i.i.i.i.i, !prof !903

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  tail call void @refcount_warn_saturate(ptr noundef %usage.i.i, i32 noundef 3) #20
  br label %check_holdout_task.exit

if.then.i.i:                                      ; preds = %list_del_init.exit.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !963
  tail call void @__put_task_struct(ptr noundef %t.0) #20
  br label %check_holdout_task.exit

if.end.i:                                         ; preds = %do.end8.i
  tail call void @rcu_request_urgent_qs_task(ptr noundef %t.0) #20
  br i1 %needreport, label %if.end23.i, label %check_holdout_task.exit

if.end23.i:                                       ; preds = %if.end.i
  %21 = ptrtoint ptr %firstreport to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %firstreport, align 1, !range !914
  %tobool24.not.i = icmp eq i8 %22, 0
  br i1 %tobool24.not.i, label %if.end30.i, label %do.end28.i

do.end28.i:                                       ; preds = %if.end23.i
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.179) #23
  %23 = ptrtoint ptr %firstreport to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 0, ptr %firstreport, align 1
  br label %if.end30.i

if.end30.i:                                       ; preds = %do.end28.i, %if.end23.i
  %stack.i.i = getelementptr i8, ptr %.pn.in19, i32 -1064
  %24 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %stack.i.i, align 4
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %cpu.i.i, align 4
  %flags.i.i = getelementptr i8, ptr %.pn.in19, i32 -1056
  %28 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %flags.i.i, align 4
  %and.i.i = lshr i32 %29, 1
  %and.i.lobit.i = and i32 %and.i.i, 1
  %arrayidx.i = getelementptr [3 x i8], ptr @.str.184, i32 0, i32 %and.i.lobit.i
  %30 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %arrayidx.i, align 1
  %conv.i = zext i8 %31 to i32
  %32 = ptrtoint ptr %rcu_tasks_nvcsw.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rcu_tasks_nvcsw.i, align 32
  %34 = ptrtoint ptr %nvcsw.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %nvcsw.i, align 16
  %36 = ptrtoint ptr %rcu_tasks_holdout.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %rcu_tasks_holdout.i, align 4
  %conv45.i = zext i8 %37 to i32
  %rcu_tasks_idle_cpu.i = getelementptr i8, ptr %.pn.in19, i32 -4
  %38 = ptrtoint ptr %rcu_tasks_idle_cpu.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rcu_tasks_idle_cpu.i, align 8
  %call46.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.182, ptr noundef %t.0, i32 noundef %conv.i, i32 noundef 46, i32 noundef %33, i32 noundef %35, i32 noundef %conv45.i, i32 noundef %39, i32 noundef %27) #23
  tail call void @sched_show_task(ptr noundef %t.0) #20
  br label %check_holdout_task.exit

check_holdout_task.exit:                          ; preds = %if.end30.i, %if.end.i, %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i
  tail call void @__might_resched(ptr noundef nonnull @.str.14, i32 noundef 793, i32 noundef 0) #20
  %call.i17 = tail call i32 @__cond_resched() #20
  %cmp.not = icmp eq ptr %.pn, %hop
  br i1 %cmp.not, label %for.end, label %for.body

for.end:                                          ; preds = %check_holdout_task.exit, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_tasks_postgp(ptr nocapture noundef readnone %rtp) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @synchronize_rcu() #20
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_spawn_tasks_kthread_generic(ptr noundef %rtp) unnamed_addr #5 section ".init.text" align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %kname = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 28
  %0 = ptrtoint ptr %kname to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %kname, align 4
  %call = tail call ptr (ptr, ptr, i32, ptr, ...) @kthread_create_on_node(ptr noundef nonnull @rcu_tasks_kthread, ptr noundef %rtp, i32 noundef -1, ptr noundef nonnull @.str.186, ptr noundef %1) #20
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %land.rhs, label %do.end47

land.rhs:                                         ; preds = %entry
  %.b56 = load i1, ptr @rcu_spawn_tasks_kthread_generic.__already_done, align 1
  br i1 %.b56, label %cleanup, label %if.then10, !prof !903

if.then10:                                        ; preds = %land.rhs
  store i1 true, ptr @rcu_spawn_tasks_kthread_generic.__already_done, align 1
  %name = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 27
  %2 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %name, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.14, i32 noundef 538, i32 noundef 9, ptr noundef nonnull @.str.187, ptr noundef nonnull @__func__.rcu_spawn_tasks_kthread_generic, ptr noundef %3) #20
  br label %cleanup

do.end47:                                         ; preds = %entry
  %call2 = tail call i32 @wake_up_process(ptr noundef %call) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !964
  br label %cleanup

cleanup:                                          ; preds = %do.end47, %if.then10, %land.rhs
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_srcu(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_request_urgent_qs_task(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sched_show_task(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_task_struct(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kthread_create_on_node(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: noreturn nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rcu_tasks_kthread(ptr noundef %arg) #19 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %__wq_entry = alloca %struct.wait_queue_entry, align 4
  %0 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  tail call void @housekeeping_affine(ptr noundef %3, i32 noundef 2) #20
  %4 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task, align 8
  %kthread_ptr = getelementptr inbounds %struct.rcu_tasks, ptr %arg, i32 0, i32 10
  %6 = ptrtoint ptr %kthread_ptr to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %5, ptr %kthread_ptr, align 4
  %gp_state.i = getelementptr inbounds %struct.rcu_tasks, ptr %arg, i32 0, i32 2
  %gp_jiffies.i = getelementptr inbounds %struct.rcu_tasks, ptr %arg, i32 0, i32 5
  %gp_start = getelementptr inbounds %struct.rcu_tasks, ptr %arg, i32 0, i32 6
  %tasks_gp_seq = getelementptr inbounds %struct.rcu_tasks, ptr %arg, i32 0, i32 7
  %gp_func = getelementptr inbounds %struct.rcu_tasks, ptr %arg, i32 0, i32 11
  %rtpcpu = getelementptr inbounds %struct.rcu_tasks, ptr %arg, i32 0, i32 18
  %gp_sleep = getelementptr inbounds %struct.rcu_tasks, ptr %arg, i32 0, i32 3
  br label %for.cond

for.cond:                                         ; preds = %if.end29, %entry
  %7 = ptrtoint ptr %gp_state.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 11, ptr %gp_state.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %8 = load volatile i32, ptr @jiffies, align 128
  %9 = ptrtoint ptr %gp_jiffies.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %gp_jiffies.i, align 4
  call void @__might_sleep(ptr noundef nonnull @.str.14, i32 noundef 512) #20
  %call16 = call fastcc i32 @rcu_tasks_need_gpcb(ptr noundef %arg)
  %tobool.not = icmp eq i32 %call16, 0
  br i1 %tobool.not, label %if.then, label %do.end25

if.then:                                          ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry) #20
  %10 = call ptr @memset(ptr %__wq_entry, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry, i32 noundef 0) #20
  %call1860 = call i32 @prepare_to_wait_event(ptr noundef %arg, ptr noundef nonnull %__wq_entry, i32 noundef 1026) #20
  %call1961 = call fastcc i32 @rcu_tasks_need_gpcb(ptr noundef %arg)
  %tobool20.not62 = icmp eq i32 %call1961, 0
  br i1 %tobool20.not62, label %cleanup, label %for.end

cleanup:                                          ; preds = %cleanup, %if.then
  call void @schedule() #20
  %call18 = call i32 @prepare_to_wait_event(ptr noundef %arg, ptr noundef nonnull %__wq_entry, i32 noundef 1026) #20
  %call19 = call fastcc i32 @rcu_tasks_need_gpcb(ptr noundef %arg)
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %cleanup, label %for.end

for.end:                                          ; preds = %cleanup, %if.then
  %call19.lcssa = phi i32 [ %call1961, %if.then ], [ %call19, %cleanup ]
  call void @finish_wait(ptr noundef %arg, ptr noundef nonnull %__wq_entry) #20
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry) #20
  br label %do.end25

do.end25:                                         ; preds = %for.end, %for.cond
  %needgpcb.0 = phi i32 [ %call16, %for.cond ], [ %call19.lcssa, %for.end ]
  %and = and i32 %needgpcb.0, 2
  %tobool26.not = icmp eq i32 %and, 0
  br i1 %tobool26.not, label %if.end29, label %if.then27

if.then27:                                        ; preds = %do.end25
  %11 = ptrtoint ptr %gp_state.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 2, ptr %gp_state.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %12 = load volatile i32, ptr @jiffies, align 128
  %13 = ptrtoint ptr %gp_jiffies.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %gp_jiffies.i, align 4
  %14 = load volatile i32, ptr @jiffies, align 128
  %15 = ptrtoint ptr %gp_start to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %gp_start, align 4
  %16 = ptrtoint ptr %tasks_gp_seq to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %tasks_gp_seq, align 4
  %add.i = add i32 %17, 1
  store volatile i32 %add.i, ptr %tasks_gp_seq, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !930
  %18 = ptrtoint ptr %tasks_gp_seq to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %tasks_gp_seq, align 4
  %and.i.i = and i32 %19, 3
  %cmp.not.i = icmp eq i32 %and.i.i, 1
  br i1 %cmp.not.i, label %rcu_seq_start.exit, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.then27
  %.b49.i = load i1, ptr @rcu_seq_start.__already_done, align 1
  br i1 %.b49.i, label %rcu_seq_start.exit, label %if.then.i, !prof !903

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @rcu_seq_start.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.138, i32 noundef 59, i32 noundef 9, ptr noundef null) #20
  br label %rcu_seq_start.exit

rcu_seq_start.exit:                               ; preds = %if.then.i, %land.rhs.i, %if.then27
  %20 = ptrtoint ptr %gp_func to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %gp_func, align 4
  call void %21(ptr noundef %arg) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !939
  %22 = ptrtoint ptr %tasks_gp_seq to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %tasks_gp_seq, align 4
  %and.i.i53 = and i32 %23, 3
  %tobool.not.i = icmp eq i32 %and.i.i53, 0
  br i1 %tobool.not.i, label %land.rhs.i54, label %rcu_seq_end.exit

land.rhs.i54:                                     ; preds = %rcu_seq_start.exit
  %.b55.i = load i1, ptr @rcu_seq_end.__already_done, align 1
  br i1 %.b55.i, label %rcu_seq_end.exit, label %if.then.i55, !prof !903

if.then.i55:                                      ; preds = %land.rhs.i54
  store i1 true, ptr @rcu_seq_end.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.138, i32 noundef 72, i32 noundef 9, ptr noundef null) #20
  br label %rcu_seq_end.exit

rcu_seq_end.exit:                                 ; preds = %if.then.i55, %land.rhs.i54, %rcu_seq_start.exit
  %24 = ptrtoint ptr %tasks_gp_seq to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %tasks_gp_seq, align 4
  %or.i.i = or i32 %25, 3
  %add.i.i = add i32 %or.i.i, 1
  store volatile i32 %add.i.i, ptr %tasks_gp_seq, align 4
  br label %if.end29

if.end29:                                         ; preds = %rcu_seq_end.exit, %do.end25
  %26 = ptrtoint ptr %gp_state.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 10, ptr %gp_state.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %27 = load volatile i32, ptr @jiffies, align 128
  %28 = ptrtoint ptr %gp_jiffies.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %gp_jiffies.i, align 4
  %29 = ptrtoint ptr %rtpcpu to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %rtpcpu, align 4
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__per_cpu_offset to i32))
  %32 = load i32, ptr @__per_cpu_offset, align 4
  %add = add i32 %32, %31
  %33 = inttoptr i32 %add to ptr
  call fastcc void @rcu_tasks_invoke_cbs(ptr noundef %arg, ptr noundef %33)
  %34 = ptrtoint ptr %gp_sleep to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %gp_sleep, align 4
  %call35 = call i32 @schedule_timeout_idle(i32 noundef %35) #20
  br label %for.cond
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wake_up_process(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @housekeeping_affine(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @rcu_tasks_need_gpcb(ptr noundef %rtp) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %percpu_dequeue_lim = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 21
  %0 = ptrtoint ptr %percpu_dequeue_lim to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %percpu_dequeue_lim, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !965
  %cmp359 = icmp sgt i32 %1, 0
  br i1 %cmp359, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %rtpcpu = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 18
  %tasks_gp_seq = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 7
  br label %for.body

for.body:                                         ; preds = %cleanup, %for.body.lr.ph
  %cpu.0363 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %cleanup ]
  %ncbs.0362 = phi i32 [ 0, %for.body.lr.ph ], [ %ncbs.2, %cleanup ]
  %ncbsnz.0361 = phi i32 [ 0, %for.body.lr.ph ], [ %ncbsnz.2, %cleanup ]
  %needgpcb.0360 = phi i32 [ 0, %for.body.lr.ph ], [ %needgpcb.3, %cleanup ]
  %2 = ptrtoint ptr %rtpcpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rtpcpu, align 4
  %4 = ptrtoint ptr %3 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu.0363
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx, align 4
  %add = add i32 %6, %4
  %7 = inttoptr i32 %add to ptr
  %len.i = getelementptr inbounds %struct.rcu_segcblist, ptr %7, i32 0, i32 3
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %len.i, i32 noundef 4) #20
  %8 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %len.i, align 4
  %tobool.not = icmp eq i32 %9, 0
  br i1 %tobool.not, label %cleanup, label %do.body11

do.body11:                                        ; preds = %for.body
  %lock = getelementptr inbounds %struct.rcu_tasks_percpu, ptr %7, i32 0, i32 1
  %call14 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #20
  %call.i.i.i356 = tail call zeroext i1 @__kasan_check_read(ptr noundef %len.i, i32 noundef 4) #20
  %10 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %len.i, align 4
  %tobool24.not = icmp eq i32 %11, 0
  %add26 = add i32 %11, %ncbs.0362
  %cmp27.not = icmp eq i32 %cpu.0363, 0
  %12 = select i1 %tobool24.not, i1 true, i1 %cmp27.not
  %spec.select = select i1 %12, i32 0, i32 %11
  %ncbsnz.1 = add i32 %spec.select, %ncbsnz.0361
  %13 = ptrtoint ptr %tasks_gp_seq to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %tasks_gp_seq, align 4
  tail call void @rcu_segcblist_advance(ptr noundef %7, i32 noundef %14) #20
  %15 = ptrtoint ptr %tasks_gp_seq to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %tasks_gp_seq, align 4
  %add1.i = add i32 %16, 7
  %and.i = and i32 %add1.i, -4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !928
  %call38 = tail call zeroext i1 @rcu_segcblist_accelerate(ptr noundef %7, i32 noundef %and.i) #20
  %call40 = tail call zeroext i1 @rcu_segcblist_pend_cbs(ptr noundef %7) #20
  %or = or i32 %needgpcb.0360, 3
  %spec.select343 = select i1 %call40, i32 %or, i32 %needgpcb.0360
  %17 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile ptr, ptr %7, align 4
  %tobool.not.i = icmp ne ptr %18, null
  %or46 = zext i1 %tobool.not.i to i32
  %needgpcb.2 = or i32 %spec.select343, %or46
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %19 = load i32, ptr @debug_locks, align 4
  %tobool50.not = icmp eq i32 %19, 0
  br i1 %tobool50.not, label %if.end148, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body11
  %20 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %23, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !966
  %24 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i357 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i357 to ptr
  %cpu70 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu70 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu70, align 4
  %arrayidx71 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %27
  %28 = ptrtoint ptr %arrayidx71 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx71, align 4
  %add72 = add i32 %29, ptrtoint (ptr @lockdep_recursion to i32)
  %30 = inttoptr i32 %add72 to ptr
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %30, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !967
  %33 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i347 = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i347 to ptr
  %preempt_count.i.i348 = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i348 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i348, align 4
  %sub.i = add i32 %36, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i348, align 4
  %tobool79.not = icmp eq i32 %32, 0
  br i1 %tobool79.not, label %land.rhs, label %if.end148

land.rhs:                                         ; preds = %land.lhs.true
  %37 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i349 = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i.i349 to ptr
  %preempt_count.i.i350 = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %preempt_count.i.i350 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %preempt_count.i.i350, align 4
  %add.i351 = add i32 %40, 1
  store volatile i32 %add.i351, ptr %preempt_count.i.i350, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !968
  %41 = ptrtoint ptr %cpu70 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %cpu70, align 4
  %arrayidx103 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %42
  %43 = ptrtoint ptr %arrayidx103 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx103, align 4
  %add104 = add i32 %44, ptrtoint (ptr @hardirqs_enabled to i32)
  %45 = inttoptr i32 %add104 to ptr
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %45, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !969
  %48 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i352 = and i32 %48, -16384
  %49 = inttoptr i32 %and.i.i.i352 to ptr
  %preempt_count.i.i353 = getelementptr inbounds %struct.thread_info, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %preempt_count.i.i353 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %preempt_count.i.i353, align 4
  %sub.i354 = add i32 %51, -1
  store volatile i32 %sub.i354, ptr %preempt_count.i.i353, align 4
  %tobool111.not = icmp eq i32 %47, 0
  br i1 %tobool111.not, label %if.end148, label %land.rhs115

land.rhs115:                                      ; preds = %land.rhs
  %.b339342 = load i1, ptr @rcu_tasks_need_gpcb.__already_done, align 1
  br i1 %.b339342, label %if.end148, label %if.then122, !prof !903

if.then122:                                       ; preds = %land.rhs115
  store i1 true, ptr @rcu_tasks_need_gpcb.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.14, i32 noundef 407, i32 noundef 9, ptr noundef null) #20
  br label %if.end148

if.end148:                                        ; preds = %if.then122, %land.rhs115, %land.rhs, %land.lhs.true, %do.body11
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call14) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end148, %for.body
  %needgpcb.3 = phi i32 [ %needgpcb.2, %if.end148 ], [ %needgpcb.0360, %for.body ]
  %ncbsnz.2 = phi i32 [ %ncbsnz.1, %if.end148 ], [ %ncbsnz.0361, %for.body ]
  %ncbs.2 = phi i32 [ %add26, %if.end148 ], [ %ncbs.0362, %for.body ]
  %inc = add nuw nsw i32 %cpu.0363, 1
  %52 = ptrtoint ptr %percpu_dequeue_lim to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %percpu_dequeue_lim, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !965
  %cmp = icmp slt i32 %inc, %53
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %cleanup, %entry
  %needgpcb.0.lcssa = phi i32 [ 0, %entry ], [ %needgpcb.3, %cleanup ]
  %ncbsnz.0.lcssa = phi i32 [ 0, %entry ], [ %ncbsnz.2, %cleanup ]
  %ncbs.0.lcssa = phi i32 [ 0, %entry ], [ %ncbs.2, %cleanup ]
  %.b338340 = load i1, ptr @rcu_task_cb_adjust, align 1
  br i1 %.b338340, label %land.lhs.true171, label %if.end243

land.lhs.true171:                                 ; preds = %for.end
  %54 = load i32, ptr @rcu_task_collapse_lim, align 4
  %cmp172.not = icmp sgt i32 %ncbs.0.lcssa, %54
  br i1 %cmp172.not, label %if.end243, label %do.body175

do.body175:                                       ; preds = %land.lhs.true171
  %cbs_gbl_lock = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 1
  %call181 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %cbs_gbl_lock) #20
  %percpu_enqueue_lim = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 20
  %55 = ptrtoint ptr %percpu_enqueue_lim to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %percpu_enqueue_lim, align 4
  %cmp184 = icmp sgt i32 %56, 1
  br i1 %cmp184, label %cond.end198, label %do.body234

cond.end198:                                      ; preds = %do.body175
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %57 = load i32, ptr @nr_cpu_ids, align 4
  %tobool.not.i.i = icmp eq i32 %57, 0
  %58 = tail call i32 @llvm.ctlz.i32(i32 %57, i1 true) #20, !range !925
  %sub.i.op.i.op = sub nuw nsw i32 32, %58
  %add200 = select i1 %tobool.not.i.i, i32 0, i32 %sub.i.op.i.op
  %percpu_enqueue_shift = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 19
  %59 = ptrtoint ptr %percpu_enqueue_shift to i32
  call void @__asan_store4_noabort(i32 %59)
  store volatile i32 %add200, ptr %percpu_enqueue_shift, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !970
  %60 = ptrtoint ptr %percpu_enqueue_lim to i32
  call void @__asan_store4_noabort(i32 %60)
  store volatile i32 1, ptr %percpu_enqueue_lim, align 4
  %call227 = tail call i32 @get_state_synchronize_rcu() #20
  %percpu_dequeue_gpseq = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 22
  %61 = ptrtoint ptr %percpu_dequeue_gpseq to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %call227, ptr %percpu_dequeue_gpseq, align 4
  %name = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 27
  %62 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %name, align 4
  %call232 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.188, ptr noundef %63) #23
  br label %do.body234

do.body234:                                       ; preds = %cond.end198, %do.body175
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %cbs_gbl_lock, i32 noundef %call181) #20
  br label %if.end243

if.end243:                                        ; preds = %do.body234, %land.lhs.true171, %for.end
  %.b341 = load i1, ptr @rcu_task_cb_adjust, align 1
  %tobool247.not = icmp eq i32 %ncbsnz.0.lcssa, 0
  %or.cond = select i1 %.b341, i1 %tobool247.not, i1 false
  br i1 %or.cond, label %land.lhs.true248, label %if.end294

land.lhs.true248:                                 ; preds = %if.end243
  %percpu_dequeue_gpseq249 = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 22
  %64 = ptrtoint ptr %percpu_dequeue_gpseq249 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %percpu_dequeue_gpseq249, align 4
  %call250 = tail call zeroext i1 @poll_state_synchronize_rcu(i32 noundef %65) #20
  br i1 %call250, label %do.body253, label %if.end294

do.body253:                                       ; preds = %land.lhs.true248
  %cbs_gbl_lock259 = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 1
  %call260 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %cbs_gbl_lock259) #20
  %percpu_enqueue_lim263 = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 20
  %66 = ptrtoint ptr %percpu_enqueue_lim263 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %percpu_enqueue_lim263, align 4
  %68 = ptrtoint ptr %percpu_dequeue_lim to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %percpu_dequeue_lim, align 4
  %cmp265 = icmp slt i32 %67, %69
  br i1 %cmp265, label %do.body272, label %do.body285

do.body272:                                       ; preds = %do.body253
  %70 = ptrtoint ptr %percpu_dequeue_lim to i32
  call void @__asan_store4_noabort(i32 %70)
  store volatile i32 1, ptr %percpu_dequeue_lim, align 4
  %name282 = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 27
  %71 = ptrtoint ptr %name282 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %name282, align 4
  %call283 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.191, ptr noundef %72) #23
  br label %do.body285

do.body285:                                       ; preds = %do.body272, %do.body253
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %cbs_gbl_lock259, i32 noundef %call260) #20
  br label %if.end294

if.end294:                                        ; preds = %do.body285, %land.lhs.true248, %if.end243
  ret i32 %needgpcb.0.lcssa
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_wait_entry(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @prepare_to_wait_event(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_wait(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_segcblist_pend_cbs(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @get_state_synchronize_rcu() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @poll_state_synchronize_rcu(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_tasks_trace_pregp_step() #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @trc_n_readers_need_end, i32 noundef 4) #20
  store volatile i32 1, ptr @trc_n_readers_need_end, align 4
  %call46 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #25
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %cmp47 = icmp ult i32 %call46, %0
  br i1 %cmp47, label %for.body, label %for.end

for.body:                                         ; preds = %if.end33, %entry
  %call48 = phi i32 [ %call, %if.end33 ], [ %call46, %entry ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call48
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %arrayidx, align 4
  %add = add i32 %2, ptrtoint (ptr @trc_ipi_to_cpu to i32)
  %3 = inttoptr i32 %add to ptr
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %3, align 1, !range !914
  %tobool.not = icmp eq i8 %5, 0
  br i1 %tobool.not, label %if.end33, label %land.rhs

land.rhs:                                         ; preds = %for.body
  %.b45 = load i1, ptr @rcu_tasks_trace_pregp_step.__already_done, align 1
  br i1 %.b45, label %if.end33, label %if.then, !prof !903

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @rcu_tasks_trace_pregp_step.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.14, i32 noundef 1324, i32 noundef 9, ptr noundef null) #20
  br label %if.end33

if.end33:                                         ; preds = %if.then, %land.rhs, %for.body
  %call = tail call i32 @cpumask_next(i32 noundef %call48, ptr noundef nonnull @__cpu_possible_mask) #25
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %6 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call, %6
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %if.end33, %entry
  tail call void @cpus_read_lock() #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_tasks_trace_pertask(ptr noundef %t, ptr noundef %hop) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp = icmp eq ptr %t, null
  br i1 %cmp, label %return, label %do.body3, !prof !904

do.body3:                                         ; preds = %entry
  %trc_reader_special = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 46
  %need_qs = getelementptr inbounds %struct.anon.35, ptr %trc_reader_special, i32 0, i32 1
  %0 = ptrtoint ptr %need_qs to i32
  call void @__asan_store1_noabort(i32 %0)
  store volatile i8 0, ptr %need_qs, align 1
  %trc_reader_checked = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 47
  %1 = ptrtoint ptr %trc_reader_checked to i32
  call void @__asan_store1_noabort(i32 %1)
  store volatile i8 0, ptr %trc_reader_checked, align 64
  %trc_ipi_to_cpu = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 45
  %2 = ptrtoint ptr %trc_ipi_to_cpu to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %trc_ipi_to_cpu, align 8
  tail call fastcc void @trc_wait_for_one_reader(ptr noundef nonnull %t, ptr noundef %hop)
  br label %return

return:                                           ; preds = %do.body3, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_tasks_trace_postscan(ptr noundef %hop) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call4 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #25
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %cmp5 = icmp ult i32 %call4, %0
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %rcu_tasks_trace_pertask.exit, %entry
  %call6 = phi i32 [ %call, %rcu_tasks_trace_pertask.exit ], [ %call4, %entry ]
  %call1 = tail call ptr @idle_task(i32 noundef %call6) #20
  %cmp.i = icmp eq ptr %call1, null
  br i1 %cmp.i, label %rcu_tasks_trace_pertask.exit, label %do.body3.i, !prof !904

do.body3.i:                                       ; preds = %for.body
  %trc_reader_special.i = getelementptr inbounds %struct.task_struct, ptr %call1, i32 0, i32 46
  %need_qs.i = getelementptr inbounds %struct.anon.35, ptr %trc_reader_special.i, i32 0, i32 1
  %1 = ptrtoint ptr %need_qs.i to i32
  call void @__asan_store1_noabort(i32 %1)
  store volatile i8 0, ptr %need_qs.i, align 1
  %trc_reader_checked.i = getelementptr inbounds %struct.task_struct, ptr %call1, i32 0, i32 47
  %2 = ptrtoint ptr %trc_reader_checked.i to i32
  call void @__asan_store1_noabort(i32 %2)
  store volatile i8 0, ptr %trc_reader_checked.i, align 64
  %trc_ipi_to_cpu.i = getelementptr inbounds %struct.task_struct, ptr %call1, i32 0, i32 45
  %3 = ptrtoint ptr %trc_ipi_to_cpu.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %trc_ipi_to_cpu.i, align 8
  tail call fastcc void @trc_wait_for_one_reader(ptr noundef nonnull %call1, ptr noundef %hop) #20
  br label %rcu_tasks_trace_pertask.exit

rcu_tasks_trace_pertask.exit:                     ; preds = %do.body3.i, %for.body
  %call = tail call i32 @cpumask_next(i32 noundef %call6, ptr noundef nonnull @__cpu_possible_mask) #25
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call, %4
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %rcu_tasks_trace_pertask.exit, %entry
  tail call void @cpus_read_unlock() #20
  tail call void @synchronize_rcu() #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @check_all_holdout_tasks_trace(ptr noundef %hop, i1 noundef zeroext %needreport, ptr nocapture noundef %firstreport) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @cpus_read_lock() #20
  %0 = ptrtoint ptr %hop to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %hop, align 4
  %cmp.not69 = icmp eq ptr %1, %hop
  br i1 %cmp.not69, label %for.end, label %do.end

do.end:                                           ; preds = %for.inc, %entry
  %.pn.in70 = phi ptr [ %.pn74, %for.inc ], [ %1, %entry ]
  %t.072 = getelementptr i8, ptr %.pn.in70, i32 -1092
  %2 = ptrtoint ptr %.pn.in70 to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn74 = load ptr, ptr %.pn.in70, align 4
  %trc_ipi_to_cpu = getelementptr i8, ptr %.pn.in70, i32 -12
  %3 = ptrtoint ptr %trc_ipi_to_cpu to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %trc_ipi_to_cpu, align 8
  %cmp7 = icmp eq i32 %4, -1
  br i1 %cmp7, label %do.end10, label %if.end

do.end10:                                         ; preds = %do.end
  %trc_reader_checked = getelementptr i8, ptr %.pn.in70, i32 -4
  %5 = ptrtoint ptr %trc_reader_checked to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load volatile i8, ptr %trc_reader_checked, align 64, !range !914
  %tobool.not = icmp eq i8 %6, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %do.end10
  tail call fastcc void @trc_wait_for_one_reader(ptr noundef %t.072, ptr noundef %hop)
  br label %if.end

if.end:                                           ; preds = %if.then, %do.end10, %do.end
  %7 = ptrtoint ptr %trc_ipi_to_cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %trc_ipi_to_cpu, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !971
  %cmp23 = icmp eq i32 %8, -1
  br i1 %cmp23, label %do.end27, label %if.else

do.end27:                                         ; preds = %if.end
  %trc_reader_checked29 = getelementptr i8, ptr %.pn.in70, i32 -4
  %9 = ptrtoint ptr %trc_reader_checked29 to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load volatile i8, ptr %trc_reader_checked29, align 64, !range !914
  %tobool30.not = icmp eq i8 %10, 0
  br i1 %tobool30.not, label %if.else, label %if.then33

if.then33:                                        ; preds = %do.end27
  tail call fastcc void @trc_del_holdout(ptr noundef %t.072)
  br label %for.inc

if.else:                                          ; preds = %do.end27, %if.end
  br i1 %needreport, label %if.then35, label %for.inc

if.then35:                                        ; preds = %if.else
  tail call fastcc void @show_stalled_task_trace(ptr noundef %t.072, ptr noundef %firstreport)
  br label %for.inc

for.inc:                                          ; preds = %if.then35, %if.else, %if.then33
  %cmp.not = icmp eq ptr %.pn74, %hop
  br i1 %cmp.not, label %for.end, label %do.end

for.end:                                          ; preds = %for.inc, %entry
  tail call void @cpus_read_unlock() #20
  br i1 %needreport, label %if.then44, label %if.end52

if.then44:                                        ; preds = %for.end
  %11 = ptrtoint ptr %firstreport to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %firstreport, align 1, !range !914
  %tobool45.not = icmp eq i8 %12, 0
  br i1 %tobool45.not, label %if.end51, label %do.end49

do.end49:                                         ; preds = %if.then44
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.196) #23
  br label %if.end51

if.end51:                                         ; preds = %do.end49, %if.then44
  %call10.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #25
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %13 = load i32, ptr @nr_cpu_ids, align 4
  %cmp11.i = icmp ult i32 %call10.i, %13
  br i1 %cmp11.i, label %do.body.i, label %if.end52

do.body.i:                                        ; preds = %if.end.i, %if.end51
  %call12.i = phi i32 [ %call.i, %if.end.i ], [ %call10.i, %if.end51 ]
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call12.i
  %14 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %15, ptrtoint (ptr @trc_ipi_to_cpu to i32)
  %16 = inttoptr i32 %add.i to ptr
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %16, align 1, !range !914
  %tobool.not.i = icmp eq i8 %18, 0
  br i1 %tobool.not.i, label %if.end.i, label %do.end4.i

do.end4.i:                                        ; preds = %do.body.i
  %call6.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.209, i32 noundef %call12.i) #23
  br label %if.end.i

if.end.i:                                         ; preds = %do.end4.i, %do.body.i
  %call.i = tail call i32 @cpumask_next(i32 noundef %call12.i, ptr noundef nonnull @__cpu_possible_mask) #25
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %19 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.i = icmp ult i32 %call.i, %19
  br i1 %cmp.i, label %do.body.i, label %if.end52

if.end52:                                         ; preds = %if.end.i, %if.end51, %for.end
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_tasks_trace_postgp(ptr nocapture noundef writeonly %rtp) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %firstreport = alloca i8, align 1
  %holdouts = alloca %struct.list_head, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 4
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %firstreport) #20
  %0 = ptrtoint ptr %firstreport to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %firstreport, align 1, !annotation !905
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %holdouts) #20
  %1 = getelementptr inbounds %struct.list_head, ptr %holdouts, i32 0, i32 1
  %2 = ptrtoint ptr %holdouts to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %holdouts, ptr %holdouts, align 4
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %holdouts, ptr %1, align 4
  %call284 = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #25
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp285 = icmp ult i32 %call284, %4
  br i1 %cmp285, label %for.body, label %do.end62

for.body:                                         ; preds = %if.end58, %entry
  %call286 = phi i32 [ %call, %if.end58 ], [ %call284, %entry ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call286
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx, align 4
  %add = add i32 %6, ptrtoint (ptr @trc_ipi_to_cpu to i32)
  %7 = inttoptr i32 %add to ptr
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load volatile i8, ptr %7, align 1, !range !914
  %tobool.not = icmp eq i8 %9, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !972
  br i1 %tobool.not, label %if.end58, label %land.rhs

land.rhs:                                         ; preds = %for.body
  %.b262 = load i1, ptr @rcu_tasks_trace_postgp.__already_done, align 1
  br i1 %.b262, label %if.then56, label %if.then, !prof !903

if.then:                                          ; preds = %land.rhs
  store i1 true, ptr @rcu_tasks_trace_postgp.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.14, i32 noundef 1475, i32 noundef 9, ptr noundef null) #20
  br label %if.then56

if.then56:                                        ; preds = %if.then, %land.rhs
  %call57 = call i32 @smp_call_function_single(i32 noundef %call286, ptr noundef nonnull @rcu_tasks_trace_empty_fn, ptr noundef null, i32 noundef 1) #20
  br label %if.end58

if.end58:                                         ; preds = %if.then56, %for.body
  %call = call i32 @cpumask_next(i32 noundef %call286, ptr noundef nonnull @__cpu_online_mask) #25
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %10 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call, %10
  br i1 %cmp, label %for.body, label %do.end62

do.end62:                                         ; preds = %if.end58, %entry
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !973
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull @trc_n_readers_need_end, i32 noundef 4) #20
  call void @llvm.prefetch.p0(ptr nonnull @trc_n_readers_need_end, i32 1, i32 3, i32 1) #20
  %11 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @trc_n_readers_need_end, ptr nonnull @trc_n_readers_need_end, i32 1, ptr nonnull elementtype(i32) @trc_n_readers_need_end) #20, !srcloc !908
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !974
  %gp_state.i = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 2
  %12 = ptrtoint ptr %gp_state.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 9, ptr %gp_state.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %13 = load volatile i32, ptr @jiffies, align 128
  %gp_jiffies.i = getelementptr inbounds %struct.rcu_tasks, ptr %rtp, i32 0, i32 5
  %14 = ptrtoint ptr %gp_jiffies.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %gp_jiffies.i, align 4
  br label %for.cond71

for.cond71:                                       ; preds = %show_stalled_ipi_trace.exit, %do.end62
  %15 = load volatile i32, ptr @rcu_task_stall_timeout, align 4
  call void @__might_sleep(ptr noundef nonnull @.str.14, i32 noundef 1489) #20
  %call.i.i265 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @trc_n_readers_need_end, i32 noundef 4) #20
  %16 = load volatile i32, ptr @trc_n_readers_need_end, align 4
  %cmp83 = icmp eq i32 %16, 0
  %tobool86.not = icmp eq i32 %15, 0
  %17 = select i1 %cmp83, i1 %tobool86.not, i1 false
  %__ret.0 = select i1 %17, i32 1, i32 %15
  %tobool91.not = icmp eq i32 %__ret.0, 0
  %18 = select i1 %cmp83, i1 true, i1 %tobool91.not
  br i1 %18, label %if.end126, label %if.then95

if.then95:                                        ; preds = %for.cond71
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry) #20
  %19 = call ptr @memset(ptr %__wq_entry, i32 255, i32 20)
  %20 = load volatile i32, ptr @rcu_task_stall_timeout, align 4
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry, i32 noundef 1) #20
  %call102287 = call i32 @prepare_to_wait_event(ptr noundef nonnull @trc_wait, ptr noundef nonnull %__wq_entry, i32 noundef 1026) #20
  %call.i.i266288 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @trc_n_readers_need_end, i32 noundef 4) #20
  %21 = load volatile i32, ptr @trc_n_readers_need_end, align 4
  %cmp105289 = icmp eq i32 %21, 0
  %tobool109.not290 = icmp eq i32 %20, 0
  %22 = select i1 %cmp105289, i1 %tobool109.not290, i1 false
  %__ret96.1291 = select i1 %22, i32 1, i32 %20
  %tobool115.not292 = icmp eq i32 %__ret96.1291, 0
  %23 = select i1 %cmp105289, i1 true, i1 %tobool115.not292
  br i1 %23, label %for.end124, label %cleanup

cleanup:                                          ; preds = %cleanup, %if.then95
  %__ret96.1293 = phi i32 [ %__ret96.1, %cleanup ], [ %__ret96.1291, %if.then95 ]
  %call123 = call i32 @schedule_timeout(i32 noundef %__ret96.1293) #20
  %call102 = call i32 @prepare_to_wait_event(ptr noundef nonnull @trc_wait, ptr noundef nonnull %__wq_entry, i32 noundef 1026) #20
  %call.i.i266 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @trc_n_readers_need_end, i32 noundef 4) #20
  %24 = load volatile i32, ptr @trc_n_readers_need_end, align 4
  %cmp105 = icmp eq i32 %24, 0
  %tobool109.not = icmp eq i32 %call123, 0
  %25 = select i1 %cmp105, i1 %tobool109.not, i1 false
  %__ret96.1 = select i1 %25, i32 1, i32 %call123
  %tobool115.not = icmp eq i32 %__ret96.1, 0
  %26 = select i1 %cmp105, i1 true, i1 %tobool115.not
  br i1 %26, label %for.end124, label %cleanup

for.end124:                                       ; preds = %cleanup, %if.then95
  %__ret96.1.lcssa = phi i32 [ %__ret96.1291, %if.then95 ], [ %__ret96.1, %cleanup ]
  call void @finish_wait(ptr noundef nonnull @trc_wait, ptr noundef nonnull %__wq_entry) #20
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry) #20
  br label %if.end126

if.end126:                                        ; preds = %for.end124, %for.cond71
  %__ret.1 = phi i32 [ %__ret.0, %for.cond71 ], [ %__ret96.1.lcssa, %for.end124 ]
  %tobool128.not = icmp eq i32 %__ret.1, 0
  br i1 %tobool128.not, label %if.end130, label %do.end231

if.end130:                                        ; preds = %if.end126
  %27 = call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i.i.i = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %30, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !916
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #20
  %call.i = call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i, label %rcu_read_lock.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end130
  %call1.i = call i32 @debug_lockdep_rcu_enabled() #20
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %rcu_read_lock.exit, label %land.lhs.true2.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %rcu_read_lock.exit, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true2.i
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.117, i32 noundef 696, ptr noundef nonnull @.str.118) #20
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i, %land.lhs.true.i, %if.end130
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.task_struct, ptr @init_task, i32 0, i32 50) to i32))
  %31 = load volatile ptr, ptr getelementptr inbounds (%struct.task_struct, ptr @init_task, i32 0, i32 50), align 16
  %add.ptr298 = getelementptr i8, ptr %31, i32 -1136
  %cmp138.not299 = icmp eq ptr %add.ptr298, @init_task
  br i1 %cmp138.not299, label %for.end182, label %do.body140

for.cond131.loopexit:                             ; preds = %for.inc, %do.end151
  %32 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile ptr, ptr %34, align 16
  %add.ptr = getelementptr i8, ptr %33, i32 -1136
  %cmp138.not = icmp eq ptr %add.ptr, @init_task
  br i1 %cmp138.not, label %for.end182, label %do.body140

do.body140:                                       ; preds = %for.cond131.loopexit, %rcu_read_lock.exit
  %34 = phi ptr [ %33, %for.cond131.loopexit ], [ %31, %rcu_read_lock.exit ]
  %call141 = call i32 @rcu_read_lock_any_held()
  %tobool142.not = icmp eq i32 %call141, 0
  br i1 %tobool142.not, label %land.lhs.true143, label %do.end151

land.lhs.true143:                                 ; preds = %do.body140
  %call144 = call i32 @debug_lockdep_rcu_enabled()
  %tobool145.not = icmp eq i32 %call144, 0
  br i1 %tobool145.not, label %do.end151, label %land.lhs.true146

land.lhs.true146:                                 ; preds = %land.lhs.true143
  %.b259261 = load i1, ptr @rcu_tasks_trace_postgp.__warned, align 1
  br i1 %.b259261, label %do.end151, label %if.then148

if.then148:                                       ; preds = %land.lhs.true146
  store i1 true, ptr @rcu_tasks_trace_postgp.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.14, i32 noundef 1494, ptr noundef nonnull @.str.136) #20
  br label %do.end151

do.end151:                                        ; preds = %if.then148, %land.lhs.true146, %land.lhs.true143, %do.body140
  %signal = getelementptr i8, ptr %34, i32 544
  %35 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %signal, align 16
  %thread_head = getelementptr inbounds %struct.signal_struct, ptr %36, i32 0, i32 3
  %37 = ptrtoint ptr %thread_head to i32
  call void @__asan_load4_noabort(i32 %37)
  %.pn260294 = load volatile ptr, ptr %thread_head, align 4
  %cmp163.not296 = icmp eq ptr %.pn260294, %thread_head
  br i1 %cmp163.not296, label %for.cond131.loopexit, label %do.end167

do.end167:                                        ; preds = %for.inc, %do.end151
  %.pn260297 = phi ptr [ %.pn260, %for.inc ], [ %.pn260294, %do.end151 ]
  %need_qs = getelementptr i8, ptr %.pn260297, i32 -319
  %38 = ptrtoint ptr %need_qs to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load volatile i8, ptr %need_qs, align 1
  %tobool169.not = icmp eq i8 %39, 0
  br i1 %tobool169.not, label %for.inc, label %if.then170

if.then170:                                       ; preds = %do.end167
  %trc_holdout_list.i = getelementptr i8, ptr %.pn260297, i32 -312
  %40 = ptrtoint ptr %trc_holdout_list.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile ptr, ptr %trc_holdout_list.i, align 4
  %cmp.i.not.i = icmp eq ptr %41, %trc_holdout_list.i
  br i1 %cmp.i.not.i, label %if.then.i268, label %for.inc

if.then.i268:                                     ; preds = %if.then170
  %usage.i.i = getelementptr i8, ptr %.pn260297, i32 -1396
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %usage.i.i, i32 noundef 4) #20
  call void @llvm.prefetch.p0(ptr %usage.i.i, i32 1, i32 3, i32 1) #20
  %42 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage.i.i, ptr %usage.i.i, i32 1, ptr elementtype(i32) %usage.i.i) #20, !srcloc !960
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %42, 0
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.end15.sink.split.i.i.i.i.i, label %if.else.i.i.i.i.i, !prof !904

if.else.i.i.i.i.i:                                ; preds = %if.then.i268
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %43 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  %.not.i.i.i.i.i = icmp sgt i32 %43, -1
  br i1 %.not.i.i.i.i.i, label %get_task_struct.exit.i, label %if.end15.sink.split.i.i.i.i.i, !prof !903

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i, %if.then.i268
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.then.i268 ], [ 1, %if.else.i.i.i.i.i ]
  call void @refcount_warn_saturate(ptr noundef %usage.i.i, i32 noundef %.sink.i.i.i.i.i) #20
  br label %get_task_struct.exit.i

get_task_struct.exit.i:                           ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i
  %44 = ptrtoint ptr %holdouts to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %holdouts, align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %trc_holdout_list.i, ptr noundef nonnull %holdouts, ptr noundef %45) #20
  br i1 %call.i.i.i, label %if.end.i.i.i, label %for.inc

if.end.i.i.i:                                     ; preds = %get_task_struct.exit.i
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %45, i32 0, i32 1
  %46 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %trc_holdout_list.i, ptr %prev1.i.i.i, align 4
  %47 = ptrtoint ptr %trc_holdout_list.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %45, ptr %trc_holdout_list.i, align 4
  %prev3.i.i.i = getelementptr i8, ptr %.pn260297, i32 -308
  %48 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %holdouts, ptr %prev3.i.i.i, align 4
  %49 = ptrtoint ptr %holdouts to i32
  call void @__asan_store4_noabort(i32 %49)
  store volatile ptr %trc_holdout_list.i, ptr %holdouts, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end.i.i.i, %get_task_struct.exit.i, %if.then170, %do.end167
  %50 = ptrtoint ptr %.pn260297 to i32
  call void @__asan_load4_noabort(i32 %50)
  %.pn260 = load volatile ptr, ptr %.pn260297, align 4
  %51 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %signal, align 16
  %thread_head162 = getelementptr inbounds %struct.signal_struct, ptr %52, i32 0, i32 3
  %cmp163.not = icmp eq ptr %.pn260, %thread_head162
  br i1 %cmp163.not, label %for.cond131.loopexit, label %do.end167

for.end182:                                       ; preds = %for.cond131.loopexit, %rcu_read_lock.exit
  %call.i269 = call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i269, label %rcu_read_unlock.exit, label %land.lhs.true.i272

land.lhs.true.i272:                               ; preds = %for.end182
  %call1.i270 = call i32 @debug_lockdep_rcu_enabled() #20
  %tobool.not.i271 = icmp eq i32 %call1.i270, 0
  br i1 %tobool.not.i271, label %rcu_read_unlock.exit, label %land.lhs.true2.i274

land.lhs.true2.i274:                              ; preds = %land.lhs.true.i272
  %.b4.i273 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i273, label %rcu_read_unlock.exit, label %if.then.i275

if.then.i275:                                     ; preds = %land.lhs.true2.i274
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.117, i32 noundef 724, ptr noundef nonnull @.str.129) #20
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i275, %land.lhs.true2.i274, %land.lhs.true.i272, %for.end182
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !927
  %53 = call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i.i.i.i.i276 = and i32 %53, -16384
  %54 = inttoptr i32 %and.i.i.i.i.i276 to ptr
  %preempt_count.i.i.i.i277 = getelementptr inbounds %struct.thread_info, ptr %54, i32 0, i32 1
  %55 = ptrtoint ptr %preempt_count.i.i.i.i277 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %preempt_count.i.i.i.i277, align 4
  %sub.i.i.i = add i32 %56, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i277, align 4
  call void @rcu_read_unlock_strict() #20
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #20
  %57 = ptrtoint ptr %firstreport to i32
  call void @__asan_store1_noabort(i32 %57)
  store i8 1, ptr %firstreport, align 1
  %58 = ptrtoint ptr %holdouts to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %holdouts, align 4
  %cmp193.not303 = icmp eq ptr %59, %holdouts
  br i1 %cmp193.not303, label %do.end217, label %do.end199

do.end199:                                        ; preds = %if.end205, %rcu_read_unlock.exit
  %.pn.in304 = phi ptr [ %.pn307, %if.end205 ], [ %59, %rcu_read_unlock.exit ]
  %t.1305 = getelementptr i8, ptr %.pn.in304, i32 -1092
  %60 = ptrtoint ptr %.pn.in304 to i32
  call void @__asan_load4_noabort(i32 %60)
  %.pn307 = load ptr, ptr %.pn.in304, align 4
  %need_qs202 = getelementptr i8, ptr %.pn.in304, i32 -7
  %61 = ptrtoint ptr %need_qs202 to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load volatile i8, ptr %need_qs202, align 1
  %tobool203.not = icmp eq i8 %62, 0
  br i1 %tobool203.not, label %if.end205, label %if.then204

if.then204:                                       ; preds = %do.end199
  call fastcc void @show_stalled_task_trace(ptr noundef %t.1305, ptr noundef nonnull %firstreport)
  br label %if.end205

if.end205:                                        ; preds = %if.then204, %do.end199
  call fastcc void @trc_del_holdout(ptr noundef %t.1305)
  %cmp193.not = icmp eq ptr %.pn307, %holdouts
  br i1 %cmp193.not, label %for.end212, label %do.end199

for.end212:                                       ; preds = %if.end205
  %63 = ptrtoint ptr %firstreport to i32
  call void @__asan_load1_noabort(i32 %63)
  %.pr = load i8, ptr %firstreport, align 1
  %tobool213.not = icmp eq i8 %.pr, 0
  br i1 %tobool213.not, label %if.end220, label %do.end217

do.end217:                                        ; preds = %for.end212, %rcu_read_unlock.exit
  %call219 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.211) #23
  br label %if.end220

if.end220:                                        ; preds = %do.end217, %for.end212
  %call10.i = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #25
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %64 = load i32, ptr @nr_cpu_ids, align 4
  %cmp11.i = icmp ult i32 %call10.i, %64
  br i1 %cmp11.i, label %do.body.i, label %show_stalled_ipi_trace.exit

do.body.i:                                        ; preds = %if.end.i, %if.end220
  %call12.i = phi i32 [ %call.i279, %if.end.i ], [ %call10.i, %if.end220 ]
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call12.i
  %65 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %66, ptrtoint (ptr @trc_ipi_to_cpu to i32)
  %67 = inttoptr i32 %add.i to ptr
  %68 = ptrtoint ptr %67 to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %67, align 1, !range !914
  %tobool.not.i278 = icmp eq i8 %69, 0
  br i1 %tobool.not.i278, label %if.end.i, label %do.end4.i

do.end4.i:                                        ; preds = %do.body.i
  %call6.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.209, i32 noundef %call12.i) #23
  br label %if.end.i

if.end.i:                                         ; preds = %do.end4.i, %do.body.i
  %call.i279 = call i32 @cpumask_next(i32 noundef %call12.i, ptr noundef nonnull @__cpu_possible_mask) #25
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %70 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.i = icmp ult i32 %call.i279, %70
  br i1 %cmp.i, label %do.body.i, label %show_stalled_ipi_trace.exit

show_stalled_ipi_trace.exit:                      ; preds = %if.end.i, %if.end220
  %call.i.i267 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @trc_n_readers_need_end, i32 noundef 4) #20
  %71 = load volatile i32, ptr @trc_n_readers_need_end, align 4
  %call226 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.214, i32 noundef %71) #23
  br label %for.cond71

do.end231:                                        ; preds = %if.end126
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !975
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %holdouts) #20
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %firstreport) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @cpus_read_lock() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trc_wait_for_one_reader(ptr noundef %t, ptr noundef %bhp) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %trc_ipi_to_cpu = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 45
  %0 = ptrtoint ptr %trc_ipi_to_cpu to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %trc_ipi_to_cpu, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !976
  %cmp.not = icmp eq i32 %1, -1
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %2 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task, align 8
  %cmp5 = icmp eq ptr %5, %t
  br i1 %cmp5, label %if.then6, label %if.end52

if.then6:                                         ; preds = %if.end
  %trc_reader_checked = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 47
  %6 = ptrtoint ptr %trc_reader_checked to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 1, ptr %trc_reader_checked, align 64
  %trc_reader_nesting = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 44
  %7 = ptrtoint ptr %trc_reader_nesting to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %trc_reader_nesting, align 4
  %tobool.not = icmp eq i32 %8, 0
  br i1 %tobool.not, label %cleanup, label %land.rhs

land.rhs:                                         ; preds = %if.then6
  %.b174 = load i1, ptr @trc_wait_for_one_reader.__already_done, align 1
  br i1 %.b174, label %cleanup, label %if.then18, !prof !903

if.then18:                                        ; preds = %land.rhs
  store i1 true, ptr @trc_wait_for_one_reader.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.14, i32 noundef 1270, i32 noundef 9, ptr noundef null) #20
  br label %cleanup

if.end52:                                         ; preds = %if.end
  %usage.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 2
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %usage.i, i32 1, i32 3, i32 1) #20
  %9 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage.i, ptr %usage.i, i32 1, ptr elementtype(i32) %usage.i) #20, !srcloc !960
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %9, 0
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end15.sink.split.i.i.i.i, label %if.else.i.i.i.i, !prof !904

if.else.i.i.i.i:                                  ; preds = %if.end52
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %10 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  %.not.i.i.i.i = icmp sgt i32 %10, -1
  br i1 %.not.i.i.i.i, label %get_task_struct.exit, label %if.end15.sink.split.i.i.i.i, !prof !903

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i, %if.end52
  %.sink.i.i.i.i = phi i32 [ 2, %if.end52 ], [ 1, %if.else.i.i.i.i ]
  tail call void @refcount_warn_saturate(ptr noundef %usage.i, i32 noundef %.sink.i.i.i.i) #20
  br label %get_task_struct.exit

get_task_struct.exit:                             ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i
  %call54 = tail call i32 @task_call_func(ptr noundef %t, ptr noundef nonnull @trc_inspect_reader, ptr noundef null) #20
  %tobool55.not = icmp eq i32 %call54, 0
  %call.i.i.i.i.i.i176 = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage.i, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20
  tail call void @llvm.prefetch.p0(ptr %usage.i, i32 1, i32 3, i32 1) #20
  %11 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage.i, ptr %usage.i, i32 1, ptr elementtype(i32) %usage.i) #20
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %11, 0
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %tobool55.not, label %if.then56, label %if.end57

if.then56:                                        ; preds = %get_task_struct.exit
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.then56
  %.not.i.i.i.i177 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i177, label %cleanup, label %if.then10.i.i.i.i, !prof !903

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  tail call void @refcount_warn_saturate(ptr noundef %usage.i, i32 noundef 3) #20
  br label %cleanup

if.then.i:                                        ; preds = %if.then56
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !963
  tail call void @__put_task_struct(ptr noundef %t) #20
  br label %cleanup

if.end57:                                         ; preds = %get_task_struct.exit
  br i1 %cmp.i.i.i.i, label %if.then.i185, label %if.end5.i.i.i.i183

if.end5.i.i.i.i183:                               ; preds = %if.end57
  %.not.i.i.i.i182 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i182, label %put_task_struct.exit186, label %if.then10.i.i.i.i184, !prof !903

if.then10.i.i.i.i184:                             ; preds = %if.end5.i.i.i.i183
  tail call void @refcount_warn_saturate(ptr noundef %usage.i, i32 noundef 3) #20
  br label %put_task_struct.exit186

if.then.i185:                                     ; preds = %if.end57
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !963
  tail call void @__put_task_struct(ptr noundef %t) #20
  br label %put_task_struct.exit186

put_task_struct.exit186:                          ; preds = %if.then.i185, %if.then10.i.i.i.i184, %if.end5.i.i.i.i183
  %trc_holdout_list.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 48
  %12 = ptrtoint ptr %trc_holdout_list.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %trc_holdout_list.i, align 4
  %cmp.i.not.i = icmp eq ptr %13, %trc_holdout_list.i
  br i1 %cmp.i.not.i, label %if.then.i188, label %trc_add_holdout.exit

if.then.i188:                                     ; preds = %put_task_struct.exit186
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %usage.i, i32 1, i32 3, i32 1) #20
  %14 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage.i, ptr %usage.i, i32 1, ptr elementtype(i32) %usage.i) #20, !srcloc !960
  %asmresult.i.i.i.i.i.i.i187 = extractvalue { i32, i32, i32 } %14, 0
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i187, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.end15.sink.split.i.i.i.i.i, label %if.else.i.i.i.i.i, !prof !904

if.else.i.i.i.i.i:                                ; preds = %if.then.i188
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i187, 1
  %15 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i187
  %.not.i.i.i.i.i = icmp sgt i32 %15, -1
  br i1 %.not.i.i.i.i.i, label %get_task_struct.exit.i, label %if.end15.sink.split.i.i.i.i.i, !prof !903

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i, %if.then.i188
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.then.i188 ], [ 1, %if.else.i.i.i.i.i ]
  tail call void @refcount_warn_saturate(ptr noundef %usage.i, i32 noundef %.sink.i.i.i.i.i) #20
  br label %get_task_struct.exit.i

get_task_struct.exit.i:                           ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i
  %16 = ptrtoint ptr %bhp to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %bhp, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %trc_holdout_list.i, ptr noundef %bhp, ptr noundef %17) #20
  br i1 %call.i.i.i, label %if.end.i.i.i, label %trc_add_holdout.exit

if.end.i.i.i:                                     ; preds = %get_task_struct.exit.i
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %trc_holdout_list.i, ptr %prev1.i.i.i, align 4
  %19 = ptrtoint ptr %trc_holdout_list.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %17, ptr %trc_holdout_list.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 48, i32 1
  %20 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %bhp, ptr %prev3.i.i.i, align 4
  %21 = ptrtoint ptr %bhp to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %trc_holdout_list.i, ptr %bhp, align 4
  br label %trc_add_holdout.exit

trc_add_holdout.exit:                             ; preds = %if.end.i.i.i, %get_task_struct.exit.i, %put_task_struct.exit186
  %call58 = tail call i32 @task_curr(ptr noundef %t) #20
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %cleanup, label %land.lhs.true

land.lhs.true:                                    ; preds = %trc_add_holdout.exit
  %22 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_trace, i32 0, i32 6), align 4
  %23 = load i32, ptr @rcu_task_ipi_delay, align 4
  %add = add i32 %23, %22
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %24 = load volatile i32, ptr @jiffies, align 128
  %add60.neg = xor i32 %24, -1
  %sub = add i32 %add, %add60.neg
  %cmp61 = icmp slt i32 %sub, 0
  br i1 %cmp61, label %if.then62, label %cleanup

if.then62:                                        ; preds = %land.lhs.true
  %stack.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 1
  %25 = ptrtoint ptr %stack.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %stack.i, align 4
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %26, i32 0, i32 3
  %27 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %cpu.i, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %28
  %29 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %arrayidx, align 4
  %add69 = add i32 %30, ptrtoint (ptr @trc_ipi_to_cpu to i32)
  %31 = inttoptr i32 %add69 to ptr
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %31, align 1, !range !914
  %tobool70.not = icmp eq i8 %33, 0
  br i1 %tobool70.not, label %lor.lhs.false, label %cleanup

lor.lhs.false:                                    ; preds = %if.then62
  %34 = ptrtoint ptr %trc_ipi_to_cpu to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %trc_ipi_to_cpu, align 8
  %cmp72 = icmp sgt i32 %35, -1
  br i1 %cmp72, label %cleanup, label %do.body75

do.body75:                                        ; preds = %lor.lhs.false
  %36 = ptrtoint ptr %31 to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 1, ptr %31, align 1
  %37 = ptrtoint ptr %trc_ipi_to_cpu to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %28, ptr %trc_ipi_to_cpu, align 8
  %38 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_trace, i32 0, i32 8), align 4
  %inc = add i32 %38, 1
  store i32 %inc, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_trace, i32 0, i32 8), align 4
  %call85 = tail call i32 @smp_call_function_single(i32 noundef %28, ptr noundef nonnull @trc_read_check_handler, ptr noundef %t, i32 noundef 0) #20
  %tobool86.not = icmp eq i32 %call85, 0
  br i1 %tobool86.not, label %cleanup, label %land.end94

land.end94:                                       ; preds = %do.body75
  %.b172173 = load i1, ptr @trc_wait_for_one_reader.__already_done.193, align 1
  br i1 %.b172173, label %if.end128, label %if.then101, !prof !903

if.then101:                                       ; preds = %land.end94
  store i1 true, ptr @trc_wait_for_one_reader.__already_done.193, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.14, i32 noundef 1306, i32 noundef 9, ptr noundef nonnull @.str.194, ptr noundef nonnull @__func__.trc_wait_for_one_reader, i32 noundef %28) #20
  br label %if.end128

if.end128:                                        ; preds = %if.then101, %land.end94
  %39 = load i32, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_trace, i32 0, i32 9), align 4
  %inc136 = add i32 %39, 1
  store i32 %inc136, ptr getelementptr inbounds (%struct.rcu_tasks, ptr @rcu_tasks_trace, i32 0, i32 9), align 4
  %40 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %arrayidx, align 4
  %add145 = add i32 %41, ptrtoint (ptr @trc_ipi_to_cpu to i32)
  %42 = inttoptr i32 %add145 to ptr
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 0, ptr %42, align 1
  %44 = ptrtoint ptr %trc_ipi_to_cpu to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 -1, ptr %trc_ipi_to_cpu, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end128, %do.body75, %lor.lhs.false, %if.then62, %land.lhs.true, %trc_add_holdout.exit, %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i, %if.then18, %land.rhs, %if.then6, %entry
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @task_call_func(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trc_inspect_reader(ptr noundef %t, ptr nocapture noundef readnone %arg) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %stack.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 1
  %0 = ptrtoint ptr %stack.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %stack.i, align 4
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %cpu.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %cpu_online.exit, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %entry
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %cpu_online.exit, label %if.then.i.i.i.i, !prof !903

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.107, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i, %entry
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %call4 = tail call i32 @task_curr(ptr noundef %t) #20
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.end70, label %if.then

if.then:                                          ; preds = %cpu_online.exit
  %and.i.i.i = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i
  %8 = and i32 %6, %7
  %tobool.i178.not = icmp eq i32 %8, 0
  br i1 %tobool.i178.not, label %land.rhs, label %land.lhs.true60.critedge

land.rhs:                                         ; preds = %if.then
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 3
  %9 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %10, 2
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %land.rhs16, label %if.then66

land.rhs16:                                       ; preds = %land.rhs
  %.b166 = load i1, ptr @trc_inspect_reader.__already_done, align 1
  br i1 %.b166, label %if.then66, label %if.then27, !prof !903

if.then27:                                        ; preds = %land.rhs16
  store i1 true, ptr @trc_inspect_reader.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.14, i32 noundef 1219, i32 noundef 9, ptr noundef null) #20
  br label %if.then66

land.lhs.true60.critedge:                         ; preds = %if.then
  %11 = load i32, ptr @n_heavy_reader_attempts, align 4
  %inc.c = add i32 %11, 1
  store i32 %inc.c, ptr @n_heavy_reader_attempts, align 4
  %trc_reader_nesting = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 44
  %call61 = tail call zeroext i1 @rcu_dynticks_zero_in_eqs(i32 noundef %3, ptr noundef %trc_reader_nesting) #20
  br i1 %call61, label %if.then73.thread, label %cleanup

if.then66:                                        ; preds = %if.then27, %land.rhs16, %land.rhs
  %12 = load i32, ptr @n_heavy_reader_attempts, align 4
  %inc.c168 = add i32 %12, 1
  store i32 %inc.c168, ptr @n_heavy_reader_attempts, align 4
  %13 = load i32, ptr @n_heavy_reader_updates, align 4
  %inc64.c176 = add i32 %13, 1
  store i32 %inc64.c176, ptr @n_heavy_reader_updates, align 4
  br label %if.then73.thread

if.then73.thread:                                 ; preds = %if.then66, %land.lhs.true60.critedge
  %n_heavy_reader_ofl_updates.sink187 = phi ptr [ @n_heavy_reader_ofl_updates, %if.then66 ], [ @n_heavy_reader_updates, %land.lhs.true60.critedge ]
  %14 = ptrtoint ptr %n_heavy_reader_ofl_updates.sink187 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %n_heavy_reader_ofl_updates.sink187, align 4
  %inc67 = add i32 %15, 1
  store i32 %inc67, ptr %n_heavy_reader_ofl_updates.sink187, align 4
  %trc_reader_checked180 = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 47
  %16 = ptrtoint ptr %trc_reader_checked180 to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 1, ptr %trc_reader_checked180, align 64
  br label %21

if.end70:                                         ; preds = %cpu_online.exit
  %trc_reader_nesting69 = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 44
  %17 = ptrtoint ptr %trc_reader_nesting69 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %trc_reader_nesting69, align 4
  %trc_reader_checked = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 47
  %nesting.0.lobit = lshr i32 %18, 31
  %19 = trunc i32 %nesting.0.lobit to i8
  %.not = xor i8 %19, 1
  %20 = ptrtoint ptr %trc_reader_checked to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %.not, ptr %trc_reader_checked, align 64
  %cmp72 = icmp slt i32 %18, 1
  br i1 %cmp72, label %if.then73, label %if.end75

if.then73:                                        ; preds = %if.end70
  %tobool74.not = icmp eq i32 %18, 0
  br i1 %tobool74.not, label %21, label %cleanup

21:                                               ; preds = %if.then73, %if.then73.thread
  br label %cleanup

if.end75:                                         ; preds = %if.end70
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @trc_n_readers_need_end, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr nonnull @trc_n_readers_need_end, i32 1, i32 3, i32 1) #20
  %22 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @trc_n_readers_need_end, ptr nonnull @trc_n_readers_need_end, i32 1, ptr nonnull elementtype(i32) @trc_n_readers_need_end) #20, !srcloc !907
  %trc_reader_special = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 46
  %need_qs = getelementptr inbounds %struct.anon.35, ptr %trc_reader_special, i32 0, i32 1
  %23 = ptrtoint ptr %need_qs to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load volatile i8, ptr %need_qs, align 1
  %tobool81.not = icmp eq i8 %24, 0
  br i1 %tobool81.not, label %if.end126, label %land.rhs88

land.rhs88:                                       ; preds = %if.end75
  %.b164165 = load i1, ptr @trc_inspect_reader.__already_done.195, align 1
  br i1 %.b164165, label %if.end126, label %if.then99, !prof !903

if.then99:                                        ; preds = %land.rhs88
  store i1 true, ptr @trc_inspect_reader.__already_done.195, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.14, i32 noundef 1252, i32 noundef 9, ptr noundef null) #20
  br label %if.end126

if.end126:                                        ; preds = %if.then99, %land.rhs88, %if.end75
  %25 = ptrtoint ptr %need_qs to i32
  call void @__asan_store1_noabort(i32 %25)
  store volatile i8 1, ptr %need_qs, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end126, %21, %if.then73, %land.lhs.true60.critedge
  %retval.0 = phi i32 [ 0, %if.end126 ], [ -22, %land.lhs.true60.critedge ], [ 0, %21 ], [ -22, %if.then73 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @task_curr(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @smp_call_function_single(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trc_read_check_handler(ptr noundef %t_in) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !893) #20
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cmp.not = icmp eq ptr %3, %t_in
  br i1 %cmp.not, label %do.end, label %do.end117, !prof !903

do.end:                                           ; preds = %entry
  %trc_reader_nesting = getelementptr inbounds %struct.task_struct, ptr %t_in, i32 0, i32 44
  %4 = ptrtoint ptr %trc_reader_nesting to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %trc_reader_nesting, align 4
  %tobool2.not = icmp eq i32 %5, 0
  br i1 %tobool2.not, label %do.body16, label %do.end24, !prof !903

do.body16:                                        ; preds = %do.end
  %trc_reader_checked = getelementptr inbounds %struct.task_struct, ptr %t_in, i32 0, i32 47
  %6 = ptrtoint ptr %trc_reader_checked to i32
  call void @__asan_store1_noabort(i32 %6)
  store volatile i8 1, ptr %trc_reader_checked, align 64
  br label %do.end117

do.end24:                                         ; preds = %do.end
  %7 = ptrtoint ptr %trc_reader_nesting to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %trc_reader_nesting, align 4
  %cmp27 = icmp slt i32 %8, 0
  br i1 %cmp27, label %do.end117, label %do.body40, !prof !904

do.body40:                                        ; preds = %do.end24
  %trc_reader_checked41 = getelementptr inbounds %struct.task_struct, ptr %t_in, i32 0, i32 47
  %9 = ptrtoint ptr %trc_reader_checked41 to i32
  call void @__asan_store1_noabort(i32 %9)
  store volatile i8 1, ptr %trc_reader_checked41, align 64
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @trc_n_readers_need_end, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr nonnull @trc_n_readers_need_end, i32 1, i32 3, i32 1) #20
  %10 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @trc_n_readers_need_end, ptr nonnull @trc_n_readers_need_end, i32 1, ptr nonnull elementtype(i32) @trc_n_readers_need_end) #20, !srcloc !907
  %trc_reader_special = getelementptr inbounds %struct.task_struct, ptr %t_in, i32 0, i32 46
  %need_qs = getelementptr inbounds %struct.anon.35, ptr %trc_reader_special, i32 0, i32 1
  %11 = ptrtoint ptr %need_qs to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load volatile i8, ptr %need_qs, align 1
  %tobool50.not = icmp eq i8 %12, 0
  br i1 %tobool50.not, label %if.end91, label %land.rhs

land.rhs:                                         ; preds = %do.body40
  %.b167 = load i1, ptr @trc_read_check_handler.__already_done, align 1
  br i1 %.b167, label %if.end91, label %if.then65, !prof !903

if.then65:                                        ; preds = %land.rhs
  store i1 true, ptr @trc_read_check_handler.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.14, i32 noundef 1200, i32 noundef 9, ptr noundef null) #20
  br label %if.end91

if.end91:                                         ; preds = %if.then65, %land.rhs, %do.body40
  %13 = ptrtoint ptr %need_qs to i32
  call void @__asan_store1_noabort(i32 %13)
  store volatile i8 1, ptr %need_qs, align 1
  br label %do.end117

do.end117:                                        ; preds = %if.end91, %do.end24, %do.body16, %entry
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !977
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %14 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %15
  %16 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx, align 4
  %add = add i32 %17, ptrtoint (ptr @trc_ipi_to_cpu to i32)
  %18 = inttoptr i32 %add to ptr
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_store1_noabort(i32 %19)
  store volatile i8 0, ptr %18, align 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !978
  %trc_ipi_to_cpu = getelementptr inbounds %struct.task_struct, ptr %t_in, i32 0, i32 45
  %20 = ptrtoint ptr %trc_ipi_to_cpu to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile i32 -1, ptr %trc_ipi_to_cpu, align 8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_dynticks_zero_in_eqs(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @idle_task(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @cpus_read_unlock() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trc_del_holdout(ptr noundef %t) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %trc_holdout_list = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 48
  %0 = ptrtoint ptr %trc_holdout_list to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %trc_holdout_list, align 4
  %cmp.i.not = icmp eq ptr %1, %trc_holdout_list
  br i1 %cmp.i.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %trc_holdout_list) #20
  br i1 %call.i.i, label %if.end.i.i, label %list_del_init.exit

if.end.i.i:                                       ; preds = %if.then
  %prev.i.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 48, i32 1
  %2 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prev.i.i, align 4
  %4 = ptrtoint ptr %trc_holdout_list to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %trc_holdout_list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %3, ptr %prev1.i.i.i, align 4
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %5, ptr %3, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %if.then
  %8 = ptrtoint ptr %trc_holdout_list to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %trc_holdout_list, ptr %trc_holdout_list, align 4
  %prev.i3.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 48, i32 1
  %9 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %trc_holdout_list, ptr %prev.i3.i, align 4
  %usage.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 2
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage.i, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !961
  tail call void @llvm.prefetch.p0(ptr %usage.i, i32 1, i32 3, i32 1) #20
  %10 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage.i, ptr %usage.i, i32 1, ptr elementtype(i32) %usage.i) #20, !srcloc !962
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %10, 0
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %list_del_init.exit
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end, label %if.then10.i.i.i.i, !prof !903

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  tail call void @refcount_warn_saturate(ptr noundef %usage.i, i32 noundef 3) #20
  br label %if.end

if.then.i:                                        ; preds = %list_del_init.exit
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !963
  tail call void @__put_task_struct(ptr noundef %t) #20
  br label %if.end

if.end:                                           ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @show_stalled_task_trace(ptr noundef %t, ptr nocapture noundef %firstreport) unnamed_addr #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %trc_rdr = alloca %struct.trc_stall_chk_rdr, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %trc_rdr) #20
  %0 = call ptr @memset(ptr %trc_rdr, i32 255, i32 12)
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 3
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 2
  %3 = ptrtoint ptr %firstreport to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %firstreport, align 1, !range !914
  %tobool.not = icmp eq i8 %4, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  %call1 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.198) #23
  %5 = ptrtoint ptr %firstreport to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 0, ptr %firstreport, align 1
  br label %if.end

if.end:                                           ; preds = %do.end, %entry
  %stack.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 1
  %6 = ptrtoint ptr %stack.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %stack.i, align 4
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %cpu.i, align 4
  %call3 = call i32 @task_call_func(ptr noundef %t, ptr noundef nonnull @trc_check_slow_task, ptr noundef nonnull %trc_rdr) #20
  %tobool4.not = icmp eq i32 %call3, 0
  %pid = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 68
  %10 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %pid, align 8
  br i1 %tobool4.not, label %do.end8, label %do.end14

do.end8:                                          ; preds = %if.end
  %and.i.lobit45 = lshr exact i32 %and.i, 1
  %arrayidx = getelementptr [3 x i8], ptr @.str.203, i32 0, i32 %and.i.lobit45
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx, align 1
  %conv = zext i8 %13 to i32
  %call11 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.201, i32 noundef %11, i32 noundef %conv) #23
  br label %if.end35

do.end14:                                         ; preds = %if.end
  %ipi_to_cpu = getelementptr inbounds %struct.trc_stall_chk_rdr, ptr %trc_rdr, i32 0, i32 1
  %14 = ptrtoint ptr %ipi_to_cpu to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %ipi_to_cpu, align 4
  %16 = xor i32 %15, -1
  %.lobit.not = lshr i32 %16, 31
  %arrayidx18 = getelementptr [3 x i8], ptr @.str.184, i32 0, i32 %.lobit.not
  %17 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %arrayidx18, align 1
  %conv19 = zext i8 %18 to i32
  %and.i.lobit = lshr exact i32 %and.i, 1
  %arrayidx22 = getelementptr [3 x i8], ptr @.str.203, i32 0, i32 %and.i.lobit
  %19 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %arrayidx22, align 1
  %conv23 = zext i8 %20 to i32
  %21 = ptrtoint ptr %trc_rdr to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %trc_rdr, align 4
  %needqs = getelementptr inbounds %struct.trc_stall_chk_rdr, ptr %trc_rdr, i32 0, i32 2
  %23 = ptrtoint ptr %needqs to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %needqs, align 4
  %tobool30 = icmp ne i8 %24, 0
  %lnot.ext = zext i1 %tobool30 to i32
  %arrayidx32 = getelementptr [3 x i8], ptr @.str.208, i32 0, i32 %lnot.ext
  %25 = ptrtoint ptr %arrayidx32 to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %arrayidx32, align 1
  %conv33 = zext i8 %26 to i32
  %call34 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.205, i32 noundef %11, i32 noundef %conv19, i32 noundef %conv23, i32 noundef 46, i32 noundef %22, i32 noundef %conv33, i32 noundef %9) #23
  br label %if.end35

if.end35:                                         ; preds = %do.end14, %do.end8
  call void @sched_show_task(ptr noundef %t) #20
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %trc_rdr) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trc_check_slow_task(ptr noundef %t, ptr nocapture noundef writeonly %arg) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @task_curr(ptr noundef %t) #20
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %do.end, label %cleanup

do.end:                                           ; preds = %entry
  %trc_reader_nesting = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 44
  %0 = ptrtoint ptr %trc_reader_nesting to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %trc_reader_nesting, align 4
  %2 = ptrtoint ptr %arg to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %1, ptr %arg, align 4
  %trc_ipi_to_cpu = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 45
  %3 = ptrtoint ptr %trc_ipi_to_cpu to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %trc_ipi_to_cpu, align 8
  %ipi_to_cpu = getelementptr inbounds %struct.trc_stall_chk_rdr, ptr %arg, i32 0, i32 1
  %5 = ptrtoint ptr %ipi_to_cpu to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %ipi_to_cpu, align 4
  %trc_reader_special = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 46
  %need_qs = getelementptr inbounds %struct.anon.35, ptr %trc_reader_special, i32 0, i32 1
  %6 = ptrtoint ptr %need_qs to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load volatile i8, ptr %need_qs, align 1
  %needqs = getelementptr inbounds %struct.trc_stall_chk_rdr, ptr %arg, i32 0, i32 2
  %8 = ptrtoint ptr %needqs to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %7, ptr %needqs, align 4
  br label %cleanup

cleanup:                                          ; preds = %do.end, %entry
  %retval.0 = phi i32 [ 1, %do.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal void @rcu_tasks_trace_empty_fn(ptr nocapture noundef %unused) #8 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @schedule_timeout(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @test_rcu_tasks_callback(ptr nocapture noundef %rhp) #0 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %name = getelementptr inbounds %struct.rcu_tasks_test_desc, ptr %rhp, i32 0, i32 1
  %0 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %name, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.218, ptr noundef %1) #23
  %notrun = getelementptr inbounds %struct.rcu_tasks_test_desc, ptr %rhp, i32 0, i32 2
  %2 = ptrtoint ptr %notrun to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 1, ptr %notrun, align 4
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #17

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #20

declare void @__asan_load1_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #21 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 353)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #21 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 353)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { mustprogress nofree noinline noprofile nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { inlinehint mustprogress nofree nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #14 = { nounwind readonly }
attributes #15 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #16 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #18 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { noreturn nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #20 = { nounwind }
attributes #21 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #22 = { nounwind readnone willreturn }
attributes #23 = { cold nounwind }
attributes #24 = { nounwind allocsize(2) }
attributes #25 = { nounwind readonly willreturn }
attributes #26 = { cold }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !7, !8, !10, !11, !12, !14, !15, !16, !18, !19, !20, !22, !23, !24, !26, !27, !28, !30, !31, !32, !34, !35, !36, !38, !39, !40, !42, !43, !44, !46, !47, !48, !50, !51, !52, !54, !55, !56, !58, !59, !60, !62, !63, !64, !66, !67, !68, !70, !71, !72, !74, !75, !76, !78, !79, !80, !82, !83, !84, !86, !87, !88, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !186, !187, !189, !190, !192, !193, !195, !197, !199, !201, !203, !205, !207, !209, !211, !213, !215, !217, !219, !221, !223, !225, !227, !229, !231, !233, !235, !237, !239, !241, !243, !245, !247, !249, !251, !253, !255, !257, !259, !261, !263, !264, !265, !267, !269, !270, !272, !274, !275, !277, !279, !280, !282, !284, !285, !287, !288, !290, !291, !292, !293, !295, !297, !298, !300, !301, !303, !304, !306, !307, !309, !310, !312, !313, !315, !317, !319, !321, !323, !325, !326, !328, !330, !332, !334, !336, !338, !340, !342, !343, !345, !347, !349, !350, !351, !353, !355, !357, !359, !361, !363, !364, !365, !366, !368, !369, !370, !372, !373, !374, !376, !377, !378, !380, !381, !382, !384, !386, !388, !390, !392, !394, !396, !398, !400, !402, !403, !405, !406, !407, !408, !410, !412, !414, !415, !417, !419, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !594, !596, !598, !599, !600, !601, !602, !603, !605, !606, !607, !608, !609, !610, !611, !613, !615, !617, !619, !620, !621, !622, !624, !625, !626, !627, !628, !629, !631, !633, !634, !636, !637, !639, !640, !642, !643, !645, !646, !648, !650, !652, !654, !655, !656, !657, !659, !660, !661, !663, !665, !666, !667, !668, !670, !672, !673, !675, !676, !678, !680, !681, !682, !684, !686, !688, !689, !690, !691, !692, !693, !694, !695, !696, !698, !699, !701, !702, !704, !706, !707, !709, !711, !712, !713, !714, !715, !716, !718, !720, !722, !724, !726, !728, !730, !732, !734, !736, !738, !740, !742, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !758, !760, !761, !763, !765, !766, !767, !768, !769, !770, !771, !772, !774, !775, !776, !777, !779, !781, !783, !785, !787, !788, !789, !790, !792, !793, !794, !795, !796, !798, !800, !801, !802, !804, !806, !807, !808, !809, !811, !812, !813, !815, !817, !819, !820, !821, !823, !825, !827, !829, !830, !831, !832, !834, !835, !836, !837, !839, !840, !841, !842, !844, !845, !846, !847, !848, !850, !851, !852, !853, !855, !857, !859, !860, !861, !862, !864, !865, !866, !868, !869, !870, !871, !873, !874, !875, !876, !878, !879, !880, !881, !883, !884, !885, !887, !888, !889, !891, !892}
!llvm.named.register.sp = !{!893}
!llvm.module.flags = !{!894, !895, !896, !897, !898, !899, !900, !901}
!llvm.ident = !{!902}

!0 = !{ptr @__tracepoint_rcu_utilization, !1, !"__tracepoint_rcu_utilization", i1 false, i1 false}
!1 = !{!"../include/trace/events/rcu.h", i32 27, i32 1}
!2 = !{ptr @__tracepoint_ptr_rcu_utilization, !1, !"__tracepoint_ptr_rcu_utilization", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_rcu_utilization, !1, !"__SCK__tp_func_rcu_utilization", i1 false, i1 false}
!4 = !{ptr @__tracepoint_rcu_grace_period, !5, !"__tracepoint_rcu_grace_period", i1 false, i1 false}
!5 = !{!"../include/trace/events/rcu.h", i32 69, i32 1}
!6 = !{ptr @__tracepoint_ptr_rcu_grace_period, !5, !"__tracepoint_ptr_rcu_grace_period", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_rcu_grace_period, !5, !"__SCK__tp_func_rcu_grace_period", i1 false, i1 false}
!8 = !{ptr @__tracepoint_rcu_future_grace_period, !9, !"__tracepoint_rcu_future_grace_period", i1 false, i1 false}
!9 = !{!"../include/trace/events/rcu.h", i32 107, i32 1}
!10 = !{ptr @__tracepoint_ptr_rcu_future_grace_period, !9, !"__tracepoint_ptr_rcu_future_grace_period", i1 false, i1 false}
!11 = !{ptr @__SCK__tp_func_rcu_future_grace_period, !9, !"__SCK__tp_func_rcu_future_grace_period", i1 false, i1 false}
!12 = !{ptr @__tracepoint_rcu_grace_period_init, !13, !"__tracepoint_rcu_grace_period_init", i1 false, i1 false}
!13 = !{!"../include/trace/events/rcu.h", i32 147, i32 1}
!14 = !{ptr @__tracepoint_ptr_rcu_grace_period_init, !13, !"__tracepoint_ptr_rcu_grace_period_init", i1 false, i1 false}
!15 = !{ptr @__SCK__tp_func_rcu_grace_period_init, !13, !"__SCK__tp_func_rcu_grace_period_init", i1 false, i1 false}
!16 = !{ptr @__tracepoint_rcu_exp_grace_period, !17, !"__tracepoint_rcu_exp_grace_period", i1 false, i1 false}
!17 = !{!"../include/trace/events/rcu.h", i32 192, i32 1}
!18 = !{ptr @__tracepoint_ptr_rcu_exp_grace_period, !17, !"__tracepoint_ptr_rcu_exp_grace_period", i1 false, i1 false}
!19 = !{ptr @__SCK__tp_func_rcu_exp_grace_period, !17, !"__SCK__tp_func_rcu_exp_grace_period", i1 false, i1 false}
!20 = !{ptr @__tracepoint_rcu_exp_funnel_lock, !21, !"__tracepoint_rcu_exp_funnel_lock", i1 false, i1 false}
!21 = !{!"../include/trace/events/rcu.h", i32 224, i32 1}
!22 = !{ptr @__tracepoint_ptr_rcu_exp_funnel_lock, !21, !"__tracepoint_ptr_rcu_exp_funnel_lock", i1 false, i1 false}
!23 = !{ptr @__SCK__tp_func_rcu_exp_funnel_lock, !21, !"__SCK__tp_func_rcu_exp_funnel_lock", i1 false, i1 false}
!24 = !{ptr @__tracepoint_rcu_nocb_wake, !25, !"__tracepoint_rcu_nocb_wake", i1 false, i1 false}
!25 = !{!"../include/trace/events/rcu.h", i32 284, i32 1}
!26 = !{ptr @__tracepoint_ptr_rcu_nocb_wake, !25, !"__tracepoint_ptr_rcu_nocb_wake", i1 false, i1 false}
!27 = !{ptr @__SCK__tp_func_rcu_nocb_wake, !25, !"__SCK__tp_func_rcu_nocb_wake", i1 false, i1 false}
!28 = !{ptr @__tracepoint_rcu_preempt_task, !29, !"__tracepoint_rcu_preempt_task", i1 false, i1 false}
!29 = !{!"../include/trace/events/rcu.h", i32 312, i32 1}
!30 = !{ptr @__tracepoint_ptr_rcu_preempt_task, !29, !"__tracepoint_ptr_rcu_preempt_task", i1 false, i1 false}
!31 = !{ptr @__SCK__tp_func_rcu_preempt_task, !29, !"__SCK__tp_func_rcu_preempt_task", i1 false, i1 false}
!32 = !{ptr @__tracepoint_rcu_unlock_preempted_task, !33, !"__tracepoint_rcu_unlock_preempted_task", i1 false, i1 false}
!33 = !{!"../include/trace/events/rcu.h", i32 339, i32 1}
!34 = !{ptr @__tracepoint_ptr_rcu_unlock_preempted_task, !33, !"__tracepoint_ptr_rcu_unlock_preempted_task", i1 false, i1 false}
!35 = !{ptr @__SCK__tp_func_rcu_unlock_preempted_task, !33, !"__SCK__tp_func_rcu_unlock_preempted_task", i1 false, i1 false}
!36 = !{ptr @__tracepoint_rcu_quiescent_state_report, !37, !"__tracepoint_rcu_quiescent_state_report", i1 false, i1 false}
!37 = !{!"../include/trace/events/rcu.h", i32 368, i32 1}
!38 = !{ptr @__tracepoint_ptr_rcu_quiescent_state_report, !37, !"__tracepoint_ptr_rcu_quiescent_state_report", i1 false, i1 false}
!39 = !{ptr @__SCK__tp_func_rcu_quiescent_state_report, !37, !"__SCK__tp_func_rcu_quiescent_state_report", i1 false, i1 false}
!40 = !{ptr @__tracepoint_rcu_fqs, !41, !"__tracepoint_rcu_fqs", i1 false, i1 false}
!41 = !{!"../include/trace/events/rcu.h", i32 411, i32 1}
!42 = !{ptr @__tracepoint_ptr_rcu_fqs, !41, !"__tracepoint_ptr_rcu_fqs", i1 false, i1 false}
!43 = !{ptr @__SCK__tp_func_rcu_fqs, !41, !"__SCK__tp_func_rcu_fqs", i1 false, i1 false}
!44 = !{ptr @__tracepoint_rcu_stall_warning, !45, !"__tracepoint_rcu_stall_warning", i1 false, i1 false}
!45 = !{!"../include/trace/events/rcu.h", i32 444, i32 1}
!46 = !{ptr @__tracepoint_ptr_rcu_stall_warning, !45, !"__tracepoint_ptr_rcu_stall_warning", i1 false, i1 false}
!47 = !{ptr @__SCK__tp_func_rcu_stall_warning, !45, !"__SCK__tp_func_rcu_stall_warning", i1 false, i1 false}
!48 = !{ptr @__tracepoint_rcu_dyntick, !49, !"__tracepoint_rcu_dyntick", i1 false, i1 false}
!49 = !{!"../include/trace/events/rcu.h", i32 480, i32 1}
!50 = !{ptr @__tracepoint_ptr_rcu_dyntick, !49, !"__tracepoint_ptr_rcu_dyntick", i1 false, i1 false}
!51 = !{ptr @__SCK__tp_func_rcu_dyntick, !49, !"__SCK__tp_func_rcu_dyntick", i1 false, i1 false}
!52 = !{ptr @__tracepoint_rcu_callback, !53, !"__tracepoint_rcu_callback", i1 false, i1 false}
!53 = !{!"../include/trace/events/rcu.h", i32 512, i32 1}
!54 = !{ptr @__tracepoint_ptr_rcu_callback, !53, !"__tracepoint_ptr_rcu_callback", i1 false, i1 false}
!55 = !{ptr @__SCK__tp_func_rcu_callback, !53, !"__SCK__tp_func_rcu_callback", i1 false, i1 false}
!56 = !{ptr @__tracepoint_rcu_segcb_stats, !57, !"__tracepoint_rcu_segcb_stats", i1 false, i1 false}
!57 = !{!"../include/trace/events/rcu.h", i32 537, i32 1}
!58 = !{ptr @__tracepoint_ptr_rcu_segcb_stats, !57, !"__tracepoint_ptr_rcu_segcb_stats", i1 false, i1 false}
!59 = !{ptr @__SCK__tp_func_rcu_segcb_stats, !57, !"__SCK__tp_func_rcu_segcb_stats", i1 false, i1 false}
!60 = !{ptr @__tracepoint_rcu_kvfree_callback, !61, !"__tracepoint_rcu_kvfree_callback", i1 false, i1 false}
!61 = !{!"../include/trace/events/rcu.h", i32 571, i32 1}
!62 = !{ptr @__tracepoint_ptr_rcu_kvfree_callback, !61, !"__tracepoint_ptr_rcu_kvfree_callback", i1 false, i1 false}
!63 = !{ptr @__SCK__tp_func_rcu_kvfree_callback, !61, !"__SCK__tp_func_rcu_kvfree_callback", i1 false, i1 false}
!64 = !{ptr @__tracepoint_rcu_batch_start, !65, !"__tracepoint_rcu_batch_start", i1 false, i1 false}
!65 = !{!"../include/trace/events/rcu.h", i32 604, i32 1}
!66 = !{ptr @__tracepoint_ptr_rcu_batch_start, !65, !"__tracepoint_ptr_rcu_batch_start", i1 false, i1 false}
!67 = !{ptr @__SCK__tp_func_rcu_batch_start, !65, !"__SCK__tp_func_rcu_batch_start", i1 false, i1 false}
!68 = !{ptr @__tracepoint_rcu_invoke_callback, !69, !"__tracepoint_rcu_invoke_callback", i1 false, i1 false}
!69 = !{!"../include/trace/events/rcu.h", i32 631, i32 1}
!70 = !{ptr @__tracepoint_ptr_rcu_invoke_callback, !69, !"__tracepoint_ptr_rcu_invoke_callback", i1 false, i1 false}
!71 = !{ptr @__SCK__tp_func_rcu_invoke_callback, !69, !"__SCK__tp_func_rcu_invoke_callback", i1 false, i1 false}
!72 = !{ptr @__tracepoint_rcu_invoke_kvfree_callback, !73, !"__tracepoint_rcu_invoke_kvfree_callback", i1 false, i1 false}
!73 = !{!"../include/trace/events/rcu.h", i32 660, i32 1}
!74 = !{ptr @__tracepoint_ptr_rcu_invoke_kvfree_callback, !73, !"__tracepoint_ptr_rcu_invoke_kvfree_callback", i1 false, i1 false}
!75 = !{ptr @__SCK__tp_func_rcu_invoke_kvfree_callback, !73, !"__SCK__tp_func_rcu_invoke_kvfree_callback", i1 false, i1 false}
!76 = !{ptr @__tracepoint_rcu_invoke_kfree_bulk_callback, !77, !"__tracepoint_rcu_invoke_kfree_bulk_callback", i1 false, i1 false}
!77 = !{!"../include/trace/events/rcu.h", i32 688, i32 1}
!78 = !{ptr @__tracepoint_ptr_rcu_invoke_kfree_bulk_callback, !77, !"__tracepoint_ptr_rcu_invoke_kfree_bulk_callback", i1 false, i1 false}
!79 = !{ptr @__SCK__tp_func_rcu_invoke_kfree_bulk_callback, !77, !"__SCK__tp_func_rcu_invoke_kfree_bulk_callback", i1 false, i1 false}
!80 = !{ptr @__tracepoint_rcu_batch_end, !81, !"__tracepoint_rcu_batch_end", i1 false, i1 false}
!81 = !{!"../include/trace/events/rcu.h", i32 721, i32 1}
!82 = !{ptr @__tracepoint_ptr_rcu_batch_end, !81, !"__tracepoint_ptr_rcu_batch_end", i1 false, i1 false}
!83 = !{ptr @__SCK__tp_func_rcu_batch_end, !81, !"__SCK__tp_func_rcu_batch_end", i1 false, i1 false}
!84 = !{ptr @__tracepoint_rcu_torture_read, !85, !"__tracepoint_rcu_torture_read", i1 false, i1 false}
!85 = !{!"../include/trace/events/rcu.h", i32 763, i32 1}
!86 = !{ptr @__tracepoint_ptr_rcu_torture_read, !85, !"__tracepoint_ptr_rcu_torture_read", i1 false, i1 false}
!87 = !{ptr @__SCK__tp_func_rcu_torture_read, !85, !"__SCK__tp_func_rcu_torture_read", i1 false, i1 false}
!88 = !{ptr @__tracepoint_rcu_barrier, !89, !"__tracepoint_rcu_barrier", i1 false, i1 false}
!89 = !{!"../include/trace/events/rcu.h", i32 810, i32 1}
!90 = !{ptr @__tracepoint_ptr_rcu_barrier, !89, !"__tracepoint_ptr_rcu_barrier", i1 false, i1 false}
!91 = !{ptr @__SCK__tp_func_rcu_barrier, !89, !"__SCK__tp_func_rcu_barrier", i1 false, i1 false}
!92 = !{ptr @event_class_rcu_utilization, !1, !"event_class_rcu_utilization", i1 false, i1 false}
!93 = !{ptr @event_rcu_utilization, !1, !"event_rcu_utilization", i1 false, i1 false}
!94 = !{ptr @__event_rcu_utilization, !1, !"__event_rcu_utilization", i1 false, i1 false}
!95 = !{ptr @event_class_rcu_grace_period, !5, !"event_class_rcu_grace_period", i1 false, i1 false}
!96 = !{ptr @event_rcu_grace_period, !5, !"event_rcu_grace_period", i1 false, i1 false}
!97 = !{ptr @__event_rcu_grace_period, !5, !"__event_rcu_grace_period", i1 false, i1 false}
!98 = !{ptr @event_class_rcu_future_grace_period, !9, !"event_class_rcu_future_grace_period", i1 false, i1 false}
!99 = !{ptr @event_rcu_future_grace_period, !9, !"event_rcu_future_grace_period", i1 false, i1 false}
!100 = !{ptr @__event_rcu_future_grace_period, !9, !"__event_rcu_future_grace_period", i1 false, i1 false}
!101 = !{ptr @event_class_rcu_grace_period_init, !13, !"event_class_rcu_grace_period_init", i1 false, i1 false}
!102 = !{ptr @event_rcu_grace_period_init, !13, !"event_rcu_grace_period_init", i1 false, i1 false}
!103 = !{ptr @__event_rcu_grace_period_init, !13, !"__event_rcu_grace_period_init", i1 false, i1 false}
!104 = !{ptr @event_class_rcu_exp_grace_period, !17, !"event_class_rcu_exp_grace_period", i1 false, i1 false}
!105 = !{ptr @event_rcu_exp_grace_period, !17, !"event_rcu_exp_grace_period", i1 false, i1 false}
!106 = !{ptr @__event_rcu_exp_grace_period, !17, !"__event_rcu_exp_grace_period", i1 false, i1 false}
!107 = !{ptr @event_class_rcu_exp_funnel_lock, !21, !"event_class_rcu_exp_funnel_lock", i1 false, i1 false}
!108 = !{ptr @event_rcu_exp_funnel_lock, !21, !"event_rcu_exp_funnel_lock", i1 false, i1 false}
!109 = !{ptr @__event_rcu_exp_funnel_lock, !21, !"__event_rcu_exp_funnel_lock", i1 false, i1 false}
!110 = !{ptr @event_class_rcu_nocb_wake, !25, !"event_class_rcu_nocb_wake", i1 false, i1 false}
!111 = !{ptr @event_rcu_nocb_wake, !25, !"event_rcu_nocb_wake", i1 false, i1 false}
!112 = !{ptr @__event_rcu_nocb_wake, !25, !"__event_rcu_nocb_wake", i1 false, i1 false}
!113 = !{ptr @event_class_rcu_preempt_task, !29, !"event_class_rcu_preempt_task", i1 false, i1 false}
!114 = !{ptr @event_rcu_preempt_task, !29, !"event_rcu_preempt_task", i1 false, i1 false}
!115 = !{ptr @__event_rcu_preempt_task, !29, !"__event_rcu_preempt_task", i1 false, i1 false}
!116 = !{ptr @event_class_rcu_unlock_preempted_task, !33, !"event_class_rcu_unlock_preempted_task", i1 false, i1 false}
!117 = !{ptr @event_rcu_unlock_preempted_task, !33, !"event_rcu_unlock_preempted_task", i1 false, i1 false}
!118 = !{ptr @__event_rcu_unlock_preempted_task, !33, !"__event_rcu_unlock_preempted_task", i1 false, i1 false}
!119 = !{ptr @event_class_rcu_quiescent_state_report, !37, !"event_class_rcu_quiescent_state_report", i1 false, i1 false}
!120 = !{ptr @event_rcu_quiescent_state_report, !37, !"event_rcu_quiescent_state_report", i1 false, i1 false}
!121 = !{ptr @__event_rcu_quiescent_state_report, !37, !"__event_rcu_quiescent_state_report", i1 false, i1 false}
!122 = !{ptr @event_class_rcu_fqs, !41, !"event_class_rcu_fqs", i1 false, i1 false}
!123 = !{ptr @event_rcu_fqs, !41, !"event_rcu_fqs", i1 false, i1 false}
!124 = !{ptr @__event_rcu_fqs, !41, !"__event_rcu_fqs", i1 false, i1 false}
!125 = !{ptr @event_class_rcu_stall_warning, !45, !"event_class_rcu_stall_warning", i1 false, i1 false}
!126 = !{ptr @event_rcu_stall_warning, !45, !"event_rcu_stall_warning", i1 false, i1 false}
!127 = !{ptr @__event_rcu_stall_warning, !45, !"__event_rcu_stall_warning", i1 false, i1 false}
!128 = !{ptr @event_class_rcu_dyntick, !49, !"event_class_rcu_dyntick", i1 false, i1 false}
!129 = !{ptr @event_rcu_dyntick, !49, !"event_rcu_dyntick", i1 false, i1 false}
!130 = !{ptr @__event_rcu_dyntick, !49, !"__event_rcu_dyntick", i1 false, i1 false}
!131 = !{ptr @event_class_rcu_callback, !53, !"event_class_rcu_callback", i1 false, i1 false}
!132 = !{ptr @event_rcu_callback, !53, !"event_rcu_callback", i1 false, i1 false}
!133 = !{ptr @__event_rcu_callback, !53, !"__event_rcu_callback", i1 false, i1 false}
!134 = !{ptr @event_class_rcu_segcb_stats, !57, !"event_class_rcu_segcb_stats", i1 false, i1 false}
!135 = !{ptr @event_rcu_segcb_stats, !57, !"event_rcu_segcb_stats", i1 false, i1 false}
!136 = !{ptr @__event_rcu_segcb_stats, !57, !"__event_rcu_segcb_stats", i1 false, i1 false}
!137 = !{ptr @event_class_rcu_kvfree_callback, !61, !"event_class_rcu_kvfree_callback", i1 false, i1 false}
!138 = !{ptr @event_rcu_kvfree_callback, !61, !"event_rcu_kvfree_callback", i1 false, i1 false}
!139 = !{ptr @__event_rcu_kvfree_callback, !61, !"__event_rcu_kvfree_callback", i1 false, i1 false}
!140 = !{ptr @event_class_rcu_batch_start, !65, !"event_class_rcu_batch_start", i1 false, i1 false}
!141 = !{ptr @event_rcu_batch_start, !65, !"event_rcu_batch_start", i1 false, i1 false}
!142 = !{ptr @__event_rcu_batch_start, !65, !"__event_rcu_batch_start", i1 false, i1 false}
!143 = !{ptr @event_class_rcu_invoke_callback, !69, !"event_class_rcu_invoke_callback", i1 false, i1 false}
!144 = !{ptr @event_rcu_invoke_callback, !69, !"event_rcu_invoke_callback", i1 false, i1 false}
!145 = !{ptr @__event_rcu_invoke_callback, !69, !"__event_rcu_invoke_callback", i1 false, i1 false}
!146 = !{ptr @event_class_rcu_invoke_kvfree_callback, !73, !"event_class_rcu_invoke_kvfree_callback", i1 false, i1 false}
!147 = !{ptr @event_rcu_invoke_kvfree_callback, !73, !"event_rcu_invoke_kvfree_callback", i1 false, i1 false}
!148 = !{ptr @__event_rcu_invoke_kvfree_callback, !73, !"__event_rcu_invoke_kvfree_callback", i1 false, i1 false}
!149 = !{ptr @event_class_rcu_invoke_kfree_bulk_callback, !77, !"event_class_rcu_invoke_kfree_bulk_callback", i1 false, i1 false}
!150 = !{ptr @event_rcu_invoke_kfree_bulk_callback, !77, !"event_rcu_invoke_kfree_bulk_callback", i1 false, i1 false}
!151 = !{ptr @__event_rcu_invoke_kfree_bulk_callback, !77, !"__event_rcu_invoke_kfree_bulk_callback", i1 false, i1 false}
!152 = !{ptr @event_class_rcu_batch_end, !81, !"event_class_rcu_batch_end", i1 false, i1 false}
!153 = !{ptr @event_rcu_batch_end, !81, !"event_rcu_batch_end", i1 false, i1 false}
!154 = !{ptr @__event_rcu_batch_end, !81, !"__event_rcu_batch_end", i1 false, i1 false}
!155 = !{ptr @event_class_rcu_torture_read, !85, !"event_class_rcu_torture_read", i1 false, i1 false}
!156 = !{ptr @event_rcu_torture_read, !85, !"event_rcu_torture_read", i1 false, i1 false}
!157 = !{ptr @__event_rcu_torture_read, !85, !"__event_rcu_torture_read", i1 false, i1 false}
!158 = !{ptr @event_class_rcu_barrier, !89, !"event_class_rcu_barrier", i1 false, i1 false}
!159 = !{ptr @event_rcu_barrier, !89, !"event_rcu_barrier", i1 false, i1 false}
!160 = !{ptr @__event_rcu_barrier, !89, !"__event_rcu_barrier", i1 false, i1 false}
!161 = !{ptr @__bpf_trace_tp_map_rcu_utilization, !1, !"__bpf_trace_tp_map_rcu_utilization", i1 false, i1 false}
!162 = !{ptr @__bpf_trace_tp_map_rcu_grace_period, !5, !"__bpf_trace_tp_map_rcu_grace_period", i1 false, i1 false}
!163 = !{ptr @__bpf_trace_tp_map_rcu_future_grace_period, !9, !"__bpf_trace_tp_map_rcu_future_grace_period", i1 false, i1 false}
!164 = !{ptr @__bpf_trace_tp_map_rcu_grace_period_init, !13, !"__bpf_trace_tp_map_rcu_grace_period_init", i1 false, i1 false}
!165 = !{ptr @__bpf_trace_tp_map_rcu_exp_grace_period, !17, !"__bpf_trace_tp_map_rcu_exp_grace_period", i1 false, i1 false}
!166 = !{ptr @__bpf_trace_tp_map_rcu_exp_funnel_lock, !21, !"__bpf_trace_tp_map_rcu_exp_funnel_lock", i1 false, i1 false}
!167 = !{ptr @__bpf_trace_tp_map_rcu_nocb_wake, !25, !"__bpf_trace_tp_map_rcu_nocb_wake", i1 false, i1 false}
!168 = !{ptr @__bpf_trace_tp_map_rcu_preempt_task, !29, !"__bpf_trace_tp_map_rcu_preempt_task", i1 false, i1 false}
!169 = !{ptr @__bpf_trace_tp_map_rcu_unlock_preempted_task, !33, !"__bpf_trace_tp_map_rcu_unlock_preempted_task", i1 false, i1 false}
!170 = !{ptr @__bpf_trace_tp_map_rcu_quiescent_state_report, !37, !"__bpf_trace_tp_map_rcu_quiescent_state_report", i1 false, i1 false}
!171 = !{ptr @__bpf_trace_tp_map_rcu_fqs, !41, !"__bpf_trace_tp_map_rcu_fqs", i1 false, i1 false}
!172 = !{ptr @__bpf_trace_tp_map_rcu_stall_warning, !45, !"__bpf_trace_tp_map_rcu_stall_warning", i1 false, i1 false}
!173 = !{ptr @__bpf_trace_tp_map_rcu_dyntick, !49, !"__bpf_trace_tp_map_rcu_dyntick", i1 false, i1 false}
!174 = !{ptr @__bpf_trace_tp_map_rcu_callback, !53, !"__bpf_trace_tp_map_rcu_callback", i1 false, i1 false}
!175 = !{ptr @__bpf_trace_tp_map_rcu_segcb_stats, !57, !"__bpf_trace_tp_map_rcu_segcb_stats", i1 false, i1 false}
!176 = !{ptr @__bpf_trace_tp_map_rcu_kvfree_callback, !61, !"__bpf_trace_tp_map_rcu_kvfree_callback", i1 false, i1 false}
!177 = !{ptr @__bpf_trace_tp_map_rcu_batch_start, !65, !"__bpf_trace_tp_map_rcu_batch_start", i1 false, i1 false}
!178 = !{ptr @__bpf_trace_tp_map_rcu_invoke_callback, !69, !"__bpf_trace_tp_map_rcu_invoke_callback", i1 false, i1 false}
!179 = !{ptr @__bpf_trace_tp_map_rcu_invoke_kvfree_callback, !73, !"__bpf_trace_tp_map_rcu_invoke_kvfree_callback", i1 false, i1 false}
!180 = !{ptr @__bpf_trace_tp_map_rcu_invoke_kfree_bulk_callback, !77, !"__bpf_trace_tp_map_rcu_invoke_kfree_bulk_callback", i1 false, i1 false}
!181 = !{ptr @__bpf_trace_tp_map_rcu_batch_end, !81, !"__bpf_trace_tp_map_rcu_batch_end", i1 false, i1 false}
!182 = !{ptr @__bpf_trace_tp_map_rcu_torture_read, !85, !"__bpf_trace_tp_map_rcu_torture_read", i1 false, i1 false}
!183 = !{ptr @__bpf_trace_tp_map_rcu_barrier, !89, !"__bpf_trace_tp_map_rcu_barrier", i1 false, i1 false}
!184 = !{ptr @__param_rcu_expedited, !185, !"__param_rcu_expedited", i1 false, i1 false}
!185 = !{!"../kernel/rcu/update.c", i32 57, i32 1}
!186 = !{ptr @__UNIQUE_ID_rcu_expeditedtype389, !185, !"__UNIQUE_ID_rcu_expeditedtype389", i1 false, i1 false}
!187 = !{ptr @__param_rcu_normal, !188, !"__param_rcu_normal", i1 false, i1 false}
!188 = !{!"../kernel/rcu/update.c", i32 58, i32 1}
!189 = !{ptr @__UNIQUE_ID_rcu_normaltype390, !188, !"__UNIQUE_ID_rcu_normaltype390", i1 false, i1 false}
!190 = !{ptr @__param_rcu_normal_after_boot, !191, !"__param_rcu_normal_after_boot", i1 false, i1 false}
!191 = !{!"../kernel/rcu/update.c", i32 61, i32 1}
!192 = !{ptr @__UNIQUE_ID_rcu_normal_after_boottype391, !191, !"__UNIQUE_ID_rcu_normal_after_boottype391", i1 false, i1 false}
!193 = !{ptr @__ksymtab_rcu_read_lock_sched_held, !194, !"__ksymtab_rcu_read_lock_sched_held", i1 false, i1 false}
!194 = !{!"../kernel/rcu/update.c", i32 127, i32 1}
!195 = !{ptr @__ksymtab_rcu_gp_is_normal, !196, !"__ksymtab_rcu_gp_is_normal", i1 false, i1 false}
!196 = !{!"../kernel/rcu/update.c", i32 145, i32 1}
!197 = !{ptr @__ksymtab_rcu_gp_is_expedited, !198, !"__ksymtab_rcu_gp_is_expedited", i1 false, i1 false}
!198 = !{!"../kernel/rcu/update.c", i32 160, i32 1}
!199 = !{ptr @__ksymtab_rcu_expedite_gp, !200, !"__ksymtab_rcu_expedite_gp", i1 false, i1 false}
!200 = !{!"../kernel/rcu/update.c", i32 173, i32 1}
!201 = !{ptr @__ksymtab_rcu_unexpedite_gp, !202, !"__ksymtab_rcu_unexpedite_gp", i1 false, i1 false}
!202 = !{!"../kernel/rcu/update.c", i32 188, i32 1}
!203 = !{ptr @__ksymtab_rcu_inkernel_boot_has_ended, !204, !"__ksymtab_rcu_inkernel_boot_has_ended", i1 false, i1 false}
!204 = !{!"../kernel/rcu/update.c", i32 210, i32 1}
!205 = !{ptr @__initcall__kmod_update__394_240_rcu_set_runtime_mode1, !206, !"__initcall__kmod_update__394_240_rcu_set_runtime_mode1", i1 false, i1 false}
!206 = !{!"../kernel/rcu/update.c", i32 240, i32 1}
!207 = !{ptr @.str, !208, !"<string literal>", i1 false, i1 false}
!208 = !{!"../kernel/rcu/update.c", i32 247, i32 10}
!209 = !{ptr @rcu_lock_map, !210, !"rcu_lock_map", i1 false, i1 false}
!210 = !{!"../kernel/rcu/update.c", i32 246, i32 20}
!211 = !{ptr @__ksymtab_rcu_lock_map, !212, !"__ksymtab_rcu_lock_map", i1 false, i1 false}
!212 = !{!"../kernel/rcu/update.c", i32 252, i32 1}
!213 = !{ptr @.str.1, !214, !"<string literal>", i1 false, i1 false}
!214 = !{!"../kernel/rcu/update.c", i32 256, i32 10}
!215 = !{ptr @rcu_bh_lock_map, !216, !"rcu_bh_lock_map", i1 false, i1 false}
!216 = !{!"../kernel/rcu/update.c", i32 255, i32 20}
!217 = !{ptr @__ksymtab_rcu_bh_lock_map, !218, !"__ksymtab_rcu_bh_lock_map", i1 false, i1 false}
!218 = !{!"../kernel/rcu/update.c", i32 261, i32 1}
!219 = !{ptr @.str.2, !220, !"<string literal>", i1 false, i1 false}
!220 = !{!"../kernel/rcu/update.c", i32 265, i32 10}
!221 = !{ptr @rcu_sched_lock_map, !222, !"rcu_sched_lock_map", i1 false, i1 false}
!222 = !{!"../kernel/rcu/update.c", i32 264, i32 20}
!223 = !{ptr @__ksymtab_rcu_sched_lock_map, !224, !"__ksymtab_rcu_sched_lock_map", i1 false, i1 false}
!224 = !{!"../kernel/rcu/update.c", i32 270, i32 1}
!225 = !{ptr @.str.3, !226, !"<string literal>", i1 false, i1 false}
!226 = !{!"../kernel/rcu/update.c", i32 275, i32 2}
!227 = !{ptr @rcu_callback_map, !228, !"rcu_callback_map", i1 false, i1 false}
!228 = !{!"../kernel/rcu/update.c", i32 274, i32 20}
!229 = !{ptr @__ksymtab_rcu_callback_map, !230, !"__ksymtab_rcu_callback_map", i1 false, i1 false}
!230 = !{!"../kernel/rcu/update.c", i32 276, i32 1}
!231 = !{ptr @__ksymtab_debug_lockdep_rcu_enabled, !232, !"__ksymtab_debug_lockdep_rcu_enabled", i1 false, i1 false}
!232 = !{!"../kernel/rcu/update.c", i32 283, i32 1}
!233 = !{ptr @__ksymtab_rcu_read_lock_held, !234, !"__ksymtab_rcu_read_lock_held", i1 false, i1 false}
!234 = !{!"../kernel/rcu/update.c", i32 313, i32 1}
!235 = !{ptr @__ksymtab_rcu_read_lock_bh_held, !236, !"__ksymtab_rcu_read_lock_bh_held", i1 false, i1 false}
!236 = !{!"../kernel/rcu/update.c", i32 338, i32 1}
!237 = !{ptr @__ksymtab_rcu_read_lock_any_held, !238, !"__ksymtab_rcu_read_lock_any_held", i1 false, i1 false}
!238 = !{!"../kernel/rcu/update.c", i32 352, i32 1}
!239 = !{ptr @__ksymtab_wakeme_after_rcu, !240, !"__ksymtab_wakeme_after_rcu", i1 false, i1 false}
!240 = !{!"../kernel/rcu/update.c", i32 369, i32 1}
!241 = !{ptr @.str.4, !242, !"<string literal>", i1 false, i1 false}
!242 = !{!"../kernel/rcu/update.c", i32 381, i32 4}
!243 = !{ptr @__ksymtab___wait_rcu_gp, !244, !"__ksymtab___wait_rcu_gp", i1 false, i1 false}
!244 = !{!"../kernel/rcu/update.c", i32 408, i32 1}
!245 = !{ptr @__ksymtab_init_rcu_head, !246, !"__ksymtab_init_rcu_head", i1 false, i1 false}
!246 = !{!"../kernel/rcu/update.c", i32 415, i32 1}
!247 = !{ptr @__ksymtab_destroy_rcu_head, !248, !"__ksymtab_destroy_rcu_head", i1 false, i1 false}
!248 = !{!"../kernel/rcu/update.c", i32 421, i32 1}
!249 = !{ptr @__ksymtab_init_rcu_head_on_stack, !250, !"__ksymtab_init_rcu_head_on_stack", i1 false, i1 false}
!250 = !{!"../kernel/rcu/update.c", i32 442, i32 1}
!251 = !{ptr @__ksymtab_destroy_rcu_head_on_stack, !252, !"__ksymtab_destroy_rcu_head_on_stack", i1 false, i1 false}
!252 = !{!"../kernel/rcu/update.c", i32 459, i32 1}
!253 = !{ptr @.str.5, !254, !"<string literal>", i1 false, i1 false}
!254 = !{!"../kernel/rcu/update.c", i32 462, i32 10}
!255 = !{ptr @rcuhead_debug_descr, !256, !"rcuhead_debug_descr", i1 false, i1 false}
!256 = !{!"../kernel/rcu/update.c", i32 461, i32 30}
!257 = !{ptr @__ksymtab_rcuhead_debug_descr, !258, !"__ksymtab_rcuhead_debug_descr", i1 false, i1 false}
!258 = !{!"../kernel/rcu/update.c", i32 465, i32 1}
!259 = !{ptr @__ksymtab_do_trace_rcu_torture_read, !260, !"__ksymtab_do_trace_rcu_torture_read", i1 false, i1 false}
!260 = !{!"../kernel/rcu/update.c", i32 475, i32 1}
!261 = distinct !{null, !262, !"__already_done", i1 false, i1 false}
!262 = !{!"../kernel/rcu/update.c", i32 488, i32 2}
!263 = !{ptr @.str.6, !262, !"<string literal>", i1 false, i1 false}
!264 = !{ptr @__func__.rcutorture_sched_setaffinity, !262, !"<string literal>", i1 false, i1 false}
!265 = !{ptr @__ksymtab_rcutorture_sched_setaffinity, !266, !"__ksymtab_rcutorture_sched_setaffinity", i1 false, i1 false}
!266 = !{!"../kernel/rcu/update.c", i32 491, i32 1}
!267 = !{ptr @__param_rcu_cpu_stall_ftrace_dump, !268, !"__param_rcu_cpu_stall_ftrace_dump", i1 false, i1 false}
!268 = !{!"../kernel/rcu/update.c", i32 496, i32 1}
!269 = !{ptr @__UNIQUE_ID_rcu_cpu_stall_ftrace_dumptype396, !268, !"__UNIQUE_ID_rcu_cpu_stall_ftrace_dumptype396", i1 false, i1 false}
!270 = !{ptr @__ksymtab_rcu_cpu_stall_suppress, !271, !"__ksymtab_rcu_cpu_stall_suppress", i1 false, i1 false}
!271 = !{!"../kernel/rcu/update.c", i32 498, i32 1}
!272 = !{ptr @__param_rcu_cpu_stall_suppress, !273, !"__param_rcu_cpu_stall_suppress", i1 false, i1 false}
!273 = !{!"../kernel/rcu/update.c", i32 499, i32 1}
!274 = !{ptr @__UNIQUE_ID_rcu_cpu_stall_suppresstype397, !273, !"__UNIQUE_ID_rcu_cpu_stall_suppresstype397", i1 false, i1 false}
!275 = !{ptr @rcu_cpu_stall_timeout, !276, !"rcu_cpu_stall_timeout", i1 false, i1 false}
!276 = !{!"../kernel/rcu/update.c", i32 500, i32 5}
!277 = !{ptr @__param_rcu_cpu_stall_timeout, !278, !"__param_rcu_cpu_stall_timeout", i1 false, i1 false}
!278 = !{!"../kernel/rcu/update.c", i32 501, i32 1}
!279 = !{ptr @__UNIQUE_ID_rcu_cpu_stall_timeouttype398, !278, !"__UNIQUE_ID_rcu_cpu_stall_timeouttype398", i1 false, i1 false}
!280 = !{ptr @__ksymtab_rcu_cpu_stall_suppress_at_boot, !281, !"__ksymtab_rcu_cpu_stall_suppress_at_boot", i1 false, i1 false}
!281 = !{!"../kernel/rcu/update.c", i32 507, i32 1}
!282 = !{ptr @__param_rcu_cpu_stall_suppress_at_boot, !283, !"__param_rcu_cpu_stall_suppress_at_boot", i1 false, i1 false}
!283 = !{!"../kernel/rcu/update.c", i32 508, i32 1}
!284 = !{ptr @__UNIQUE_ID_rcu_cpu_stall_suppress_at_boottype399, !283, !"__UNIQUE_ID_rcu_cpu_stall_suppress_at_boottype399", i1 false, i1 false}
!285 = !{ptr @__param_rcu_self_test, !286, !"__param_rcu_self_test", i1 false, i1 false}
!286 = !{!"../kernel/rcu/update.c", i32 516, i32 1}
!287 = !{ptr @__UNIQUE_ID_rcu_self_testtype400, !286, !"__UNIQUE_ID_rcu_self_testtype400", i1 false, i1 false}
!288 = !{ptr @.str.7, !289, !"<string literal>", i1 false, i1 false}
!289 = !{!"../kernel/rcu/update.c", i32 551, i32 2}
!290 = !{ptr @.str.8, !289, !"<string literal>", i1 false, i1 false}
!291 = !{ptr @rcu_early_boot_tests._entry, !289, !"_entry", i1 false, i1 false}
!292 = !{ptr @rcu_early_boot_tests._entry_ptr, !289, !"_entry_ptr", i1 false, i1 false}
!293 = !{ptr @__initcall__kmod_update__402_579_rcu_verify_early_boot_tests7, !294, !"__initcall__kmod_update__402_579_rcu_verify_early_boot_tests7", i1 false, i1 false}
!294 = !{!"../kernel/rcu/update.c", i32 579, i32 1}
!295 = !{ptr @__param_rcu_task_ipi_delay, !296, !"__param_rcu_task_ipi_delay", i1 false, i1 false}
!296 = !{!"../kernel/rcu/tasks.h", i32 140, i32 1}
!297 = !{ptr @__UNIQUE_ID_rcu_task_ipi_delaytype408, !296, !"__UNIQUE_ID_rcu_task_ipi_delaytype408", i1 false, i1 false}
!298 = !{ptr @__param_rcu_task_stall_timeout, !299, !"__param_rcu_task_stall_timeout", i1 false, i1 false}
!299 = !{!"../kernel/rcu/tasks.h", i32 145, i32 1}
!300 = !{ptr @__UNIQUE_ID_rcu_task_stall_timeouttype409, !299, !"__UNIQUE_ID_rcu_task_stall_timeouttype409", i1 false, i1 false}
!301 = !{ptr @__param_rcu_task_enqueue_lim, !302, !"__param_rcu_task_enqueue_lim", i1 false, i1 false}
!302 = !{!"../kernel/rcu/tasks.h", i32 148, i32 1}
!303 = !{ptr @__UNIQUE_ID_rcu_task_enqueue_limtype410, !302, !"__UNIQUE_ID_rcu_task_enqueue_limtype410", i1 false, i1 false}
!304 = !{ptr @__param_rcu_task_contend_lim, !305, !"__param_rcu_task_contend_lim", i1 false, i1 false}
!305 = !{!"../kernel/rcu/tasks.h", i32 152, i32 1}
!306 = !{ptr @__UNIQUE_ID_rcu_task_contend_limtype411, !305, !"__UNIQUE_ID_rcu_task_contend_limtype411", i1 false, i1 false}
!307 = !{ptr @__param_rcu_task_collapse_lim, !308, !"__param_rcu_task_collapse_lim", i1 false, i1 false}
!308 = !{!"../kernel/rcu/tasks.h", i32 154, i32 1}
!309 = !{ptr @__UNIQUE_ID_rcu_task_collapse_limtype412, !308, !"__UNIQUE_ID_rcu_task_collapse_limtype412", i1 false, i1 false}
!310 = !{ptr @.str.9, !311, !"<string literal>", i1 false, i1 false}
!311 = !{!"../kernel/rcu/tasks.h", i32 821, i32 1}
!312 = !{ptr @rcu_tasks__percpu, !311, !"rcu_tasks__percpu", i1 false, i1 false}
!313 = !{ptr @__ksymtab_call_rcu_tasks, !314, !"__ksymtab_call_rcu_tasks", i1 false, i1 false}
!314 = !{!"../kernel/rcu/tasks.h", i32 845, i32 1}
!315 = !{ptr @__ksymtab_synchronize_rcu_tasks, !316, !"__ksymtab_synchronize_rcu_tasks", i1 false, i1 false}
!316 = !{!"../kernel/rcu/tasks.h", i32 869, i32 1}
!317 = !{ptr @__ksymtab_rcu_barrier_tasks, !318, !"__ksymtab_rcu_barrier_tasks", i1 false, i1 false}
!318 = !{!"../kernel/rcu/tasks.h", i32 881, i32 1}
!319 = !{ptr @.str.10, !320, !"<string literal>", i1 false, i1 false}
!320 = !{!"../kernel/rcu/tasks.h", i32 900, i32 48}
!321 = !{ptr @__ksymtab_show_rcu_tasks_classic_gp_kthread, !322, !"__ksymtab_show_rcu_tasks_classic_gp_kthread", i1 false, i1 false}
!322 = !{!"../kernel/rcu/tasks.h", i32 902, i32 1}
!323 = !{ptr @.str.11, !324, !"<string literal>", i1 false, i1 false}
!324 = !{!"../kernel/rcu/tasks.h", i32 958, i32 1}
!325 = !{ptr @rcu_tasks_rude__percpu, !324, !"rcu_tasks_rude__percpu", i1 false, i1 false}
!326 = !{ptr @__ksymtab_call_rcu_tasks_rude, !327, !"__ksymtab_call_rcu_tasks_rude", i1 false, i1 false}
!327 = !{!"../kernel/rcu/tasks.h", i32 983, i32 1}
!328 = !{ptr @__ksymtab_synchronize_rcu_tasks_rude, !329, !"__ksymtab_synchronize_rcu_tasks_rude", i1 false, i1 false}
!329 = !{!"../kernel/rcu/tasks.h", i32 1007, i32 1}
!330 = !{ptr @__ksymtab_rcu_barrier_tasks_rude, !331, !"__ksymtab_rcu_barrier_tasks_rude", i1 false, i1 false}
!331 = !{!"../kernel/rcu/tasks.h", i32 1019, i32 1}
!332 = !{ptr @__ksymtab_show_rcu_tasks_rude_gp_kthread, !333, !"__ksymtab_show_rcu_tasks_rude_gp_kthread", i1 false, i1 false}
!333 = !{!"../kernel/rcu/tasks.h", i32 1034, i32 1}
!334 = !{ptr @.str.12, !335, !"<string literal>", i1 false, i1 false}
!335 = !{!"../kernel/rcu/tasks.h", i32 1107, i32 2}
!336 = !{ptr @rcu_trace_lock_map, !337, !"rcu_trace_lock_map", i1 false, i1 false}
!337 = !{!"../kernel/rcu/tasks.h", i32 1106, i32 20}
!338 = !{ptr @__ksymtab_rcu_trace_lock_map, !339, !"__ksymtab_rcu_trace_lock_map", i1 false, i1 false}
!339 = !{!"../kernel/rcu/tasks.h", i32 1108, i32 1}
!340 = !{ptr @.str.13, !341, !"<string literal>", i1 false, i1 false}
!341 = !{!"../kernel/rcu/tasks.h", i32 1126, i32 1}
!342 = !{ptr @rcu_tasks_trace__percpu, !341, !"rcu_tasks_trace__percpu", i1 false, i1 false}
!343 = !{ptr @__ksymtab_rcu_read_unlock_trace_special, !344, !"__ksymtab_rcu_read_unlock_trace_special", i1 false, i1 false}
!344 = !{!"../kernel/rcu/tasks.h", i32 1154, i32 1}
!345 = !{ptr @__ksymtab_call_rcu_tasks_trace, !346, !"__ksymtab_call_rcu_tasks_trace", i1 false, i1 false}
!346 = !{!"../kernel/rcu/tasks.h", i32 1541, i32 1}
!347 = distinct !{null, !348, !"__warned", i1 false, i1 false}
!348 = !{!"../kernel/rcu/tasks.h", i32 1562, i32 2}
!349 = !{ptr @.str.14, !348, !"<string literal>", i1 false, i1 false}
!350 = !{ptr @.str.15, !348, !"<string literal>", i1 false, i1 false}
!351 = !{ptr @__ksymtab_synchronize_rcu_tasks_trace, !352, !"__ksymtab_synchronize_rcu_tasks_trace", i1 false, i1 false}
!352 = !{!"../kernel/rcu/tasks.h", i32 1565, i32 1}
!353 = !{ptr @__ksymtab_rcu_barrier_tasks_trace, !354, !"__ksymtab_rcu_barrier_tasks_trace", i1 false, i1 false}
!354 = !{!"../kernel/rcu/tasks.h", i32 1577, i32 1}
!355 = !{ptr @.str.16, !356, !"<string literal>", i1 false, i1 false}
!356 = !{!"../kernel/rcu/tasks.h", i32 1607, i32 15}
!357 = !{ptr @__ksymtab_show_rcu_tasks_trace_gp_kthread, !358, !"__ksymtab_show_rcu_tasks_trace_gp_kthread", i1 false, i1 false}
!358 = !{!"../kernel/rcu/tasks.h", i32 1613, i32 1}
!359 = !{ptr @__initcall__kmod_update__545_1700_rcu_tasks_verify_self_tests7, !360, !"__initcall__kmod_update__545_1700_rcu_tasks_verify_self_tests7", i1 false, i1 false}
!360 = !{!"../kernel/rcu/tasks.h", i32 1700, i32 1}
!361 = !{ptr @.str.17, !362, !"<string literal>", i1 false, i1 false}
!362 = !{!"../kernel/rcu/update.c", i32 594, i32 3}
!363 = !{ptr @.str.18, !362, !"<string literal>", i1 false, i1 false}
!364 = !{ptr @rcupdate_announce_bootup_oddness._entry, !362, !"_entry", i1 false, i1 false}
!365 = !{ptr @rcupdate_announce_bootup_oddness._entry_ptr, !362, !"_entry_ptr", i1 false, i1 false}
!366 = !{ptr @.str.20, !367, !"<string literal>", i1 false, i1 false}
!367 = !{!"../kernel/rcu/update.c", i32 596, i32 3}
!368 = !{ptr @rcupdate_announce_bootup_oddness._entry.19, !367, !"_entry", i1 false, i1 false}
!369 = !{ptr @rcupdate_announce_bootup_oddness._entry_ptr.21, !367, !"_entry_ptr", i1 false, i1 false}
!370 = !{ptr @.str.23, !371, !"<string literal>", i1 false, i1 false}
!371 = !{!"../kernel/rcu/update.c", i32 598, i32 3}
!372 = !{ptr @rcupdate_announce_bootup_oddness._entry.22, !371, !"_entry", i1 false, i1 false}
!373 = !{ptr @rcupdate_announce_bootup_oddness._entry_ptr.24, !371, !"_entry_ptr", i1 false, i1 false}
!374 = !{ptr @.str.26, !375, !"<string literal>", i1 false, i1 false}
!375 = !{!"../kernel/rcu/update.c", i32 600, i32 3}
!376 = !{ptr @rcupdate_announce_bootup_oddness._entry.25, !375, !"_entry", i1 false, i1 false}
!377 = !{ptr @rcupdate_announce_bootup_oddness._entry_ptr.27, !375, !"_entry_ptr", i1 false, i1 false}
!378 = !{ptr @.str.29, !379, !"<string literal>", i1 false, i1 false}
!379 = !{!"../kernel/rcu/update.c", i32 602, i32 3}
!380 = !{ptr @rcupdate_announce_bootup_oddness._entry.28, !379, !"_entry", i1 false, i1 false}
!381 = !{ptr @rcupdate_announce_bootup_oddness._entry_ptr.30, !379, !"_entry_ptr", i1 false, i1 false}
!382 = distinct !{null, !383, !"rcu_boot_ended", i1 false, i1 false}
!383 = !{!"../kernel/rcu/update.c", i32 190, i32 13}
!384 = !{ptr @rcu_lock_key, !385, !"rcu_lock_key", i1 false, i1 false}
!385 = !{!"../kernel/rcu/update.c", i32 245, i32 30}
!386 = !{ptr @rcu_bh_lock_key, !387, !"rcu_bh_lock_key", i1 false, i1 false}
!387 = !{!"../kernel/rcu/update.c", i32 254, i32 30}
!388 = !{ptr @rcu_sched_lock_key, !389, !"rcu_sched_lock_key", i1 false, i1 false}
!389 = !{!"../kernel/rcu/update.c", i32 263, i32 30}
!390 = !{ptr @rcu_callback_key, !391, !"rcu_callback_key", i1 false, i1 false}
!391 = !{!"../kernel/rcu/update.c", i32 273, i32 30}
!392 = !{ptr @rcu_cpu_stall_ftrace_dump, !393, !"rcu_cpu_stall_ftrace_dump", i1 false, i1 false}
!393 = !{!"../kernel/rcu/update.c", i32 495, i32 5}
!394 = !{ptr @rcu_cpu_stall_suppress, !395, !"rcu_cpu_stall_suppress", i1 false, i1 false}
!395 = !{!"../kernel/rcu/update.c", i32 497, i32 5}
!396 = !{ptr @rcu_cpu_stall_suppress_at_boot, !397, !"rcu_cpu_stall_suppress_at_boot", i1 false, i1 false}
!397 = !{!"../kernel/rcu/update.c", i32 506, i32 5}
!398 = !{ptr @rcu_self_test, !399, !"rcu_self_test", i1 false, i1 false}
!399 = !{!"../kernel/rcu/update.c", i32 515, i32 13}
!400 = !{ptr @__pcpu_unique_early_srcu_srcu_data, !401, !"__pcpu_unique_early_srcu_srcu_data", i1 false, i1 false}
!401 = !{!"../kernel/rcu/update.c", i32 526, i32 1}
!402 = !{ptr @early_srcu_srcu_data, !401, !"early_srcu_srcu_data", i1 false, i1 false}
!403 = !{ptr @__pcpu_unique_tasks_rcu_exit_srcu_srcu_data, !404, !"__pcpu_unique_tasks_rcu_exit_srcu_srcu_data", i1 false, i1 false}
!404 = !{!"../kernel/rcu/tasks.h", i32 135, i32 1}
!405 = !{ptr @tasks_rcu_exit_srcu_srcu_data, !404, !"tasks_rcu_exit_srcu_srcu_data", i1 false, i1 false}
!406 = !{ptr @__pcpu_unique_rcu_tasks__percpu, !311, !"__pcpu_unique_rcu_tasks__percpu", i1 false, i1 false}
!407 = !{ptr @__pcpu_unique_rcu_tasks_rude__percpu, !324, !"__pcpu_unique_rcu_tasks_rude__percpu", i1 false, i1 false}
!408 = !{ptr @rcu_lock_trace_key, !409, !"rcu_lock_trace_key", i1 false, i1 false}
!409 = !{!"../kernel/rcu/tasks.h", i32 1105, i32 30}
!410 = !{ptr @trc_n_readers_need_end, !411, !"trc_n_readers_need_end", i1 false, i1 false}
!411 = !{!"../kernel/rcu/tasks.h", i32 1113, i32 17}
!412 = !{ptr @__pcpu_unique_trc_ipi_to_cpu, !413, !"__pcpu_unique_trc_ipi_to_cpu", i1 false, i1 false}
!413 = !{!"../kernel/rcu/tasks.h", i32 1117, i32 8}
!414 = !{ptr @trc_ipi_to_cpu, !413, !"trc_ipi_to_cpu", i1 false, i1 false}
!415 = !{ptr @n_heavy_reader_attempts, !416, !"n_heavy_reader_attempts", i1 false, i1 false}
!416 = !{!"../kernel/rcu/tasks.h", i32 1121, i32 22}
!417 = !{ptr @n_heavy_reader_updates, !418, !"n_heavy_reader_updates", i1 false, i1 false}
!418 = !{!"../kernel/rcu/tasks.h", i32 1122, i32 22}
!419 = !{ptr @n_heavy_reader_ofl_updates, !420, !"n_heavy_reader_ofl_updates", i1 false, i1 false}
!420 = !{!"../kernel/rcu/tasks.h", i32 1123, i32 22}
!421 = !{ptr @__pcpu_unique_rcu_tasks_trace__percpu, !341, !"__pcpu_unique_rcu_tasks_trace__percpu", i1 false, i1 false}
!422 = !{ptr @__tpstrtab_rcu_utilization, !1, !"__tpstrtab_rcu_utilization", i1 false, i1 false}
!423 = !{ptr @__tpstrtab_rcu_grace_period, !5, !"__tpstrtab_rcu_grace_period", i1 false, i1 false}
!424 = !{ptr @__tpstrtab_rcu_future_grace_period, !9, !"__tpstrtab_rcu_future_grace_period", i1 false, i1 false}
!425 = !{ptr @__tpstrtab_rcu_grace_period_init, !13, !"__tpstrtab_rcu_grace_period_init", i1 false, i1 false}
!426 = !{ptr @__tpstrtab_rcu_exp_grace_period, !17, !"__tpstrtab_rcu_exp_grace_period", i1 false, i1 false}
!427 = !{ptr @__tpstrtab_rcu_exp_funnel_lock, !21, !"__tpstrtab_rcu_exp_funnel_lock", i1 false, i1 false}
!428 = !{ptr @__tpstrtab_rcu_nocb_wake, !25, !"__tpstrtab_rcu_nocb_wake", i1 false, i1 false}
!429 = !{ptr @__tpstrtab_rcu_preempt_task, !29, !"__tpstrtab_rcu_preempt_task", i1 false, i1 false}
!430 = !{ptr @__tpstrtab_rcu_unlock_preempted_task, !33, !"__tpstrtab_rcu_unlock_preempted_task", i1 false, i1 false}
!431 = !{ptr @__tpstrtab_rcu_quiescent_state_report, !37, !"__tpstrtab_rcu_quiescent_state_report", i1 false, i1 false}
!432 = !{ptr @__tpstrtab_rcu_fqs, !41, !"__tpstrtab_rcu_fqs", i1 false, i1 false}
!433 = !{ptr @__tpstrtab_rcu_stall_warning, !45, !"__tpstrtab_rcu_stall_warning", i1 false, i1 false}
!434 = !{ptr @__tpstrtab_rcu_dyntick, !49, !"__tpstrtab_rcu_dyntick", i1 false, i1 false}
!435 = !{ptr @__tpstrtab_rcu_callback, !53, !"__tpstrtab_rcu_callback", i1 false, i1 false}
!436 = !{ptr @__tpstrtab_rcu_segcb_stats, !57, !"__tpstrtab_rcu_segcb_stats", i1 false, i1 false}
!437 = !{ptr @__tpstrtab_rcu_kvfree_callback, !61, !"__tpstrtab_rcu_kvfree_callback", i1 false, i1 false}
!438 = !{ptr @__tpstrtab_rcu_batch_start, !65, !"__tpstrtab_rcu_batch_start", i1 false, i1 false}
!439 = !{ptr @__tpstrtab_rcu_invoke_callback, !69, !"__tpstrtab_rcu_invoke_callback", i1 false, i1 false}
!440 = !{ptr @__tpstrtab_rcu_invoke_kvfree_callback, !73, !"__tpstrtab_rcu_invoke_kvfree_callback", i1 false, i1 false}
!441 = !{ptr @__tpstrtab_rcu_invoke_kfree_bulk_callback, !77, !"__tpstrtab_rcu_invoke_kfree_bulk_callback", i1 false, i1 false}
!442 = !{ptr @__tpstrtab_rcu_batch_end, !81, !"__tpstrtab_rcu_batch_end", i1 false, i1 false}
!443 = !{ptr @__tpstrtab_rcu_torture_read, !85, !"__tpstrtab_rcu_torture_read", i1 false, i1 false}
!444 = !{ptr @__tpstrtab_rcu_barrier, !89, !"__tpstrtab_rcu_barrier", i1 false, i1 false}
!445 = !{ptr @str__rcu__trace_system_name, !446, !"str__rcu__trace_system_name", i1 false, i1 false}
!446 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!447 = !{ptr @.str.31, !1, !"<string literal>", i1 false, i1 false}
!448 = !{ptr @.str.32, !1, !"<string literal>", i1 false, i1 false}
!449 = !{ptr @trace_event_fields_rcu_utilization, !1, !"trace_event_fields_rcu_utilization", i1 false, i1 false}
!450 = !{ptr @trace_event_type_funcs_rcu_utilization, !1, !"trace_event_type_funcs_rcu_utilization", i1 false, i1 false}
!451 = !{ptr @.str.33, !1, !"<string literal>", i1 false, i1 false}
!452 = !{ptr @print_fmt_rcu_utilization, !1, !"print_fmt_rcu_utilization", i1 false, i1 false}
!453 = !{ptr @.str.34, !5, !"<string literal>", i1 false, i1 false}
!454 = !{ptr @.str.35, !5, !"<string literal>", i1 false, i1 false}
!455 = !{ptr @.str.36, !5, !"<string literal>", i1 false, i1 false}
!456 = !{ptr @.str.37, !5, !"<string literal>", i1 false, i1 false}
!457 = !{ptr @trace_event_fields_rcu_grace_period, !5, !"trace_event_fields_rcu_grace_period", i1 false, i1 false}
!458 = !{ptr @trace_event_type_funcs_rcu_grace_period, !5, !"trace_event_type_funcs_rcu_grace_period", i1 false, i1 false}
!459 = !{ptr @.str.38, !5, !"<string literal>", i1 false, i1 false}
!460 = !{ptr @print_fmt_rcu_grace_period, !5, !"print_fmt_rcu_grace_period", i1 false, i1 false}
!461 = !{ptr @.str.39, !9, !"<string literal>", i1 false, i1 false}
!462 = !{ptr @.str.40, !9, !"<string literal>", i1 false, i1 false}
!463 = !{ptr @.str.41, !9, !"<string literal>", i1 false, i1 false}
!464 = !{ptr @.str.42, !9, !"<string literal>", i1 false, i1 false}
!465 = !{ptr @.str.43, !9, !"<string literal>", i1 false, i1 false}
!466 = !{ptr @.str.44, !9, !"<string literal>", i1 false, i1 false}
!467 = !{ptr @trace_event_fields_rcu_future_grace_period, !9, !"trace_event_fields_rcu_future_grace_period", i1 false, i1 false}
!468 = !{ptr @trace_event_type_funcs_rcu_future_grace_period, !9, !"trace_event_type_funcs_rcu_future_grace_period", i1 false, i1 false}
!469 = !{ptr @.str.45, !9, !"<string literal>", i1 false, i1 false}
!470 = !{ptr @print_fmt_rcu_future_grace_period, !9, !"print_fmt_rcu_future_grace_period", i1 false, i1 false}
!471 = !{ptr @.str.46, !13, !"<string literal>", i1 false, i1 false}
!472 = !{ptr @.str.47, !13, !"<string literal>", i1 false, i1 false}
!473 = !{ptr @trace_event_fields_rcu_grace_period_init, !13, !"trace_event_fields_rcu_grace_period_init", i1 false, i1 false}
!474 = !{ptr @trace_event_type_funcs_rcu_grace_period_init, !13, !"trace_event_type_funcs_rcu_grace_period_init", i1 false, i1 false}
!475 = !{ptr @.str.48, !13, !"<string literal>", i1 false, i1 false}
!476 = !{ptr @print_fmt_rcu_grace_period_init, !13, !"print_fmt_rcu_grace_period_init", i1 false, i1 false}
!477 = !{ptr @.str.49, !17, !"<string literal>", i1 false, i1 false}
!478 = !{ptr @trace_event_fields_rcu_exp_grace_period, !17, !"trace_event_fields_rcu_exp_grace_period", i1 false, i1 false}
!479 = !{ptr @trace_event_type_funcs_rcu_exp_grace_period, !17, !"trace_event_type_funcs_rcu_exp_grace_period", i1 false, i1 false}
!480 = !{ptr @print_fmt_rcu_exp_grace_period, !17, !"print_fmt_rcu_exp_grace_period", i1 false, i1 false}
!481 = !{ptr @trace_event_fields_rcu_exp_funnel_lock, !21, !"trace_event_fields_rcu_exp_funnel_lock", i1 false, i1 false}
!482 = !{ptr @trace_event_type_funcs_rcu_exp_funnel_lock, !21, !"trace_event_type_funcs_rcu_exp_funnel_lock", i1 false, i1 false}
!483 = !{ptr @.str.50, !21, !"<string literal>", i1 false, i1 false}
!484 = !{ptr @print_fmt_rcu_exp_funnel_lock, !21, !"print_fmt_rcu_exp_funnel_lock", i1 false, i1 false}
!485 = !{ptr @.str.51, !25, !"<string literal>", i1 false, i1 false}
!486 = !{ptr @.str.52, !25, !"<string literal>", i1 false, i1 false}
!487 = !{ptr @trace_event_fields_rcu_nocb_wake, !25, !"trace_event_fields_rcu_nocb_wake", i1 false, i1 false}
!488 = !{ptr @trace_event_type_funcs_rcu_nocb_wake, !25, !"trace_event_type_funcs_rcu_nocb_wake", i1 false, i1 false}
!489 = !{ptr @.str.53, !25, !"<string literal>", i1 false, i1 false}
!490 = !{ptr @print_fmt_rcu_nocb_wake, !25, !"print_fmt_rcu_nocb_wake", i1 false, i1 false}
!491 = !{ptr @.str.54, !29, !"<string literal>", i1 false, i1 false}
!492 = !{ptr @trace_event_fields_rcu_preempt_task, !29, !"trace_event_fields_rcu_preempt_task", i1 false, i1 false}
!493 = !{ptr @trace_event_type_funcs_rcu_preempt_task, !29, !"trace_event_type_funcs_rcu_preempt_task", i1 false, i1 false}
!494 = !{ptr @.str.55, !29, !"<string literal>", i1 false, i1 false}
!495 = !{ptr @print_fmt_rcu_preempt_task, !29, !"print_fmt_rcu_preempt_task", i1 false, i1 false}
!496 = !{ptr @trace_event_fields_rcu_unlock_preempted_task, !33, !"trace_event_fields_rcu_unlock_preempted_task", i1 false, i1 false}
!497 = !{ptr @trace_event_type_funcs_rcu_unlock_preempted_task, !33, !"trace_event_type_funcs_rcu_unlock_preempted_task", i1 false, i1 false}
!498 = !{ptr @print_fmt_rcu_unlock_preempted_task, !33, !"print_fmt_rcu_unlock_preempted_task", i1 false, i1 false}
!499 = !{ptr @.str.56, !37, !"<string literal>", i1 false, i1 false}
!500 = !{ptr @.str.57, !37, !"<string literal>", i1 false, i1 false}
!501 = !{ptr @trace_event_fields_rcu_quiescent_state_report, !37, !"trace_event_fields_rcu_quiescent_state_report", i1 false, i1 false}
!502 = !{ptr @trace_event_type_funcs_rcu_quiescent_state_report, !37, !"trace_event_type_funcs_rcu_quiescent_state_report", i1 false, i1 false}
!503 = !{ptr @.str.58, !37, !"<string literal>", i1 false, i1 false}
!504 = !{ptr @print_fmt_rcu_quiescent_state_report, !37, !"print_fmt_rcu_quiescent_state_report", i1 false, i1 false}
!505 = !{ptr @.str.59, !41, !"<string literal>", i1 false, i1 false}
!506 = !{ptr @trace_event_fields_rcu_fqs, !41, !"trace_event_fields_rcu_fqs", i1 false, i1 false}
!507 = !{ptr @trace_event_type_funcs_rcu_fqs, !41, !"trace_event_type_funcs_rcu_fqs", i1 false, i1 false}
!508 = !{ptr @.str.60, !41, !"<string literal>", i1 false, i1 false}
!509 = !{ptr @print_fmt_rcu_fqs, !41, !"print_fmt_rcu_fqs", i1 false, i1 false}
!510 = !{ptr @.str.61, !45, !"<string literal>", i1 false, i1 false}
!511 = !{ptr @trace_event_fields_rcu_stall_warning, !45, !"trace_event_fields_rcu_stall_warning", i1 false, i1 false}
!512 = !{ptr @trace_event_type_funcs_rcu_stall_warning, !45, !"trace_event_type_funcs_rcu_stall_warning", i1 false, i1 false}
!513 = !{ptr @.str.62, !45, !"<string literal>", i1 false, i1 false}
!514 = !{ptr @print_fmt_rcu_stall_warning, !45, !"print_fmt_rcu_stall_warning", i1 false, i1 false}
!515 = !{ptr @.str.63, !49, !"<string literal>", i1 false, i1 false}
!516 = !{ptr @.str.64, !49, !"<string literal>", i1 false, i1 false}
!517 = !{ptr @.str.65, !49, !"<string literal>", i1 false, i1 false}
!518 = !{ptr @.str.66, !49, !"<string literal>", i1 false, i1 false}
!519 = !{ptr @trace_event_fields_rcu_dyntick, !49, !"trace_event_fields_rcu_dyntick", i1 false, i1 false}
!520 = !{ptr @trace_event_type_funcs_rcu_dyntick, !49, !"trace_event_type_funcs_rcu_dyntick", i1 false, i1 false}
!521 = !{ptr @.str.67, !49, !"<string literal>", i1 false, i1 false}
!522 = !{ptr @print_fmt_rcu_dyntick, !49, !"print_fmt_rcu_dyntick", i1 false, i1 false}
!523 = !{ptr @.str.68, !53, !"<string literal>", i1 false, i1 false}
!524 = !{ptr @.str.69, !53, !"<string literal>", i1 false, i1 false}
!525 = !{ptr @.str.70, !53, !"<string literal>", i1 false, i1 false}
!526 = !{ptr @.str.71, !53, !"<string literal>", i1 false, i1 false}
!527 = !{ptr @trace_event_fields_rcu_callback, !53, !"trace_event_fields_rcu_callback", i1 false, i1 false}
!528 = !{ptr @trace_event_type_funcs_rcu_callback, !53, !"trace_event_type_funcs_rcu_callback", i1 false, i1 false}
!529 = !{ptr @.str.72, !53, !"<string literal>", i1 false, i1 false}
!530 = !{ptr @print_fmt_rcu_callback, !53, !"print_fmt_rcu_callback", i1 false, i1 false}
!531 = !{ptr @.str.73, !57, !"<string literal>", i1 false, i1 false}
!532 = !{ptr @.str.74, !57, !"<string literal>", i1 false, i1 false}
!533 = !{ptr @.str.75, !57, !"<string literal>", i1 false, i1 false}
!534 = !{ptr @.str.76, !57, !"<string literal>", i1 false, i1 false}
!535 = !{ptr @trace_event_fields_rcu_segcb_stats, !57, !"trace_event_fields_rcu_segcb_stats", i1 false, i1 false}
!536 = !{ptr @trace_event_type_funcs_rcu_segcb_stats, !57, !"trace_event_type_funcs_rcu_segcb_stats", i1 false, i1 false}
!537 = !{ptr @.str.77, !57, !"<string literal>", i1 false, i1 false}
!538 = !{ptr @print_fmt_rcu_segcb_stats, !57, !"print_fmt_rcu_segcb_stats", i1 false, i1 false}
!539 = !{ptr @.str.78, !61, !"<string literal>", i1 false, i1 false}
!540 = !{ptr @trace_event_fields_rcu_kvfree_callback, !61, !"trace_event_fields_rcu_kvfree_callback", i1 false, i1 false}
!541 = !{ptr @trace_event_type_funcs_rcu_kvfree_callback, !61, !"trace_event_type_funcs_rcu_kvfree_callback", i1 false, i1 false}
!542 = !{ptr @.str.79, !61, !"<string literal>", i1 false, i1 false}
!543 = !{ptr @print_fmt_rcu_kvfree_callback, !61, !"print_fmt_rcu_kvfree_callback", i1 false, i1 false}
!544 = !{ptr @.str.80, !65, !"<string literal>", i1 false, i1 false}
!545 = !{ptr @trace_event_fields_rcu_batch_start, !65, !"trace_event_fields_rcu_batch_start", i1 false, i1 false}
!546 = !{ptr @trace_event_type_funcs_rcu_batch_start, !65, !"trace_event_type_funcs_rcu_batch_start", i1 false, i1 false}
!547 = !{ptr @.str.81, !65, !"<string literal>", i1 false, i1 false}
!548 = !{ptr @print_fmt_rcu_batch_start, !65, !"print_fmt_rcu_batch_start", i1 false, i1 false}
!549 = !{ptr @trace_event_fields_rcu_invoke_callback, !69, !"trace_event_fields_rcu_invoke_callback", i1 false, i1 false}
!550 = !{ptr @trace_event_type_funcs_rcu_invoke_callback, !69, !"trace_event_type_funcs_rcu_invoke_callback", i1 false, i1 false}
!551 = !{ptr @.str.82, !69, !"<string literal>", i1 false, i1 false}
!552 = !{ptr @print_fmt_rcu_invoke_callback, !69, !"print_fmt_rcu_invoke_callback", i1 false, i1 false}
!553 = !{ptr @trace_event_fields_rcu_invoke_kvfree_callback, !73, !"trace_event_fields_rcu_invoke_kvfree_callback", i1 false, i1 false}
!554 = !{ptr @trace_event_type_funcs_rcu_invoke_kvfree_callback, !73, !"trace_event_type_funcs_rcu_invoke_kvfree_callback", i1 false, i1 false}
!555 = !{ptr @.str.83, !73, !"<string literal>", i1 false, i1 false}
!556 = !{ptr @print_fmt_rcu_invoke_kvfree_callback, !73, !"print_fmt_rcu_invoke_kvfree_callback", i1 false, i1 false}
!557 = !{ptr @.str.84, !77, !"<string literal>", i1 false, i1 false}
!558 = !{ptr @.str.85, !77, !"<string literal>", i1 false, i1 false}
!559 = !{ptr @.str.86, !77, !"<string literal>", i1 false, i1 false}
!560 = !{ptr @trace_event_fields_rcu_invoke_kfree_bulk_callback, !77, !"trace_event_fields_rcu_invoke_kfree_bulk_callback", i1 false, i1 false}
!561 = !{ptr @trace_event_type_funcs_rcu_invoke_kfree_bulk_callback, !77, !"trace_event_type_funcs_rcu_invoke_kfree_bulk_callback", i1 false, i1 false}
!562 = !{ptr @.str.87, !77, !"<string literal>", i1 false, i1 false}
!563 = !{ptr @print_fmt_rcu_invoke_kfree_bulk_callback, !77, !"print_fmt_rcu_invoke_kfree_bulk_callback", i1 false, i1 false}
!564 = !{ptr @.str.88, !81, !"<string literal>", i1 false, i1 false}
!565 = !{ptr @.str.89, !81, !"<string literal>", i1 false, i1 false}
!566 = !{ptr @.str.90, !81, !"<string literal>", i1 false, i1 false}
!567 = !{ptr @.str.91, !81, !"<string literal>", i1 false, i1 false}
!568 = !{ptr @.str.92, !81, !"<string literal>", i1 false, i1 false}
!569 = !{ptr @.str.93, !81, !"<string literal>", i1 false, i1 false}
!570 = !{ptr @trace_event_fields_rcu_batch_end, !81, !"trace_event_fields_rcu_batch_end", i1 false, i1 false}
!571 = !{ptr @trace_event_type_funcs_rcu_batch_end, !81, !"trace_event_type_funcs_rcu_batch_end", i1 false, i1 false}
!572 = !{ptr @.str.94, !81, !"<string literal>", i1 false, i1 false}
!573 = !{ptr @print_fmt_rcu_batch_end, !81, !"print_fmt_rcu_batch_end", i1 false, i1 false}
!574 = !{ptr @.str.95, !85, !"<string literal>", i1 false, i1 false}
!575 = !{ptr @.str.96, !85, !"<string literal>", i1 false, i1 false}
!576 = !{ptr @.str.97, !85, !"<string literal>", i1 false, i1 false}
!577 = !{ptr @.str.98, !85, !"<string literal>", i1 false, i1 false}
!578 = !{ptr @.str.99, !85, !"<string literal>", i1 false, i1 false}
!579 = !{ptr @trace_event_fields_rcu_torture_read, !85, !"trace_event_fields_rcu_torture_read", i1 false, i1 false}
!580 = !{ptr @trace_event_type_funcs_rcu_torture_read, !85, !"trace_event_type_funcs_rcu_torture_read", i1 false, i1 false}
!581 = !{ptr @.str.100, !85, !"<string literal>", i1 false, i1 false}
!582 = !{ptr @print_fmt_rcu_torture_read, !85, !"print_fmt_rcu_torture_read", i1 false, i1 false}
!583 = !{ptr @.str.101, !89, !"<string literal>", i1 false, i1 false}
!584 = !{ptr @.str.102, !89, !"<string literal>", i1 false, i1 false}
!585 = !{ptr @trace_event_fields_rcu_barrier, !89, !"trace_event_fields_rcu_barrier", i1 false, i1 false}
!586 = !{ptr @trace_event_type_funcs_rcu_barrier, !89, !"trace_event_type_funcs_rcu_barrier", i1 false, i1 false}
!587 = !{ptr @.str.103, !89, !"<string literal>", i1 false, i1 false}
!588 = !{ptr @print_fmt_rcu_barrier, !89, !"print_fmt_rcu_barrier", i1 false, i1 false}
!589 = !{ptr @__param_str_rcu_expedited, !185, !"__param_str_rcu_expedited", i1 false, i1 false}
!590 = !{ptr @__param_str_rcu_normal, !188, !"__param_str_rcu_normal", i1 false, i1 false}
!591 = !{ptr @__param_str_rcu_normal_after_boot, !191, !"__param_str_rcu_normal_after_boot", i1 false, i1 false}
!592 = !{ptr @rcu_normal_after_boot, !593, !"rcu_normal_after_boot", i1 false, i1 false}
!593 = !{!"../kernel/rcu/update.c", i32 59, i32 12}
!594 = !{ptr @rcu_expedited_nesting, !595, !"rcu_expedited_nesting", i1 false, i1 false}
!595 = !{!"../kernel/rcu/update.c", i32 147, i32 17}
!596 = !{ptr @init_completion.__key, !597, !"__key", i1 false, i1 false}
!597 = !{!"../include/linux/completion.h", i32 87, i32 2}
!598 = !{ptr @.str.104, !597, !"<string literal>", i1 false, i1 false}
!599 = distinct !{null, !85, !"__already_done", i1 false, i1 false}
!600 = !{ptr @.str.105, !85, !"<string literal>", i1 false, i1 false}
!601 = distinct !{null, !85, !"__warned", i1 false, i1 false}
!602 = !{ptr @.str.106, !85, !"<string literal>", i1 false, i1 false}
!603 = distinct !{null, !604, !"__already_done", i1 false, i1 false}
!604 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!605 = !{ptr @.str.107, !604, !"<string literal>", i1 false, i1 false}
!606 = !{ptr @__param_str_rcu_cpu_stall_ftrace_dump, !268, !"__param_str_rcu_cpu_stall_ftrace_dump", i1 false, i1 false}
!607 = !{ptr @__param_str_rcu_cpu_stall_suppress, !273, !"__param_str_rcu_cpu_stall_suppress", i1 false, i1 false}
!608 = !{ptr @__param_str_rcu_cpu_stall_timeout, !278, !"__param_str_rcu_cpu_stall_timeout", i1 false, i1 false}
!609 = !{ptr @__param_str_rcu_cpu_stall_suppress_at_boot, !283, !"__param_str_rcu_cpu_stall_suppress_at_boot", i1 false, i1 false}
!610 = !{ptr @__param_str_rcu_self_test, !286, !"__param_str_rcu_self_test", i1 false, i1 false}
!611 = !{ptr @early_boot_test_call_rcu.head, !612, !"head", i1 false, i1 false}
!612 = !{!"../kernel/rcu/update.c", i32 535, i32 25}
!613 = !{ptr @early_boot_test_call_rcu.shead, !614, !"shead", i1 false, i1 false}
!614 = !{!"../kernel/rcu/update.c", i32 536, i32 25}
!615 = distinct !{null, !616, !"__already_done", i1 false, i1 false}
!616 = !{!"../kernel/rcu/update.c", i32 545, i32 7}
!617 = !{ptr @.str.108, !618, !"<string literal>", i1 false, i1 false}
!618 = !{!"../kernel/rcu/update.c", i32 523, i32 2}
!619 = !{ptr @.str.109, !618, !"<string literal>", i1 false, i1 false}
!620 = !{ptr @test_callback._entry, !618, !"_entry", i1 false, i1 false}
!621 = !{ptr @test_callback._entry_ptr, !618, !"_entry_ptr", i1 false, i1 false}
!622 = !{ptr @rcu_self_test_counter, !623, !"rcu_self_test_counter", i1 false, i1 false}
!623 = !{!"../kernel/rcu/update.c", i32 518, i32 12}
!624 = !{ptr @.str.110, !401, !"<string literal>", i1 false, i1 false}
!625 = !{ptr @.str.111, !401, !"<string literal>", i1 false, i1 false}
!626 = !{ptr @.str.112, !401, !"<string literal>", i1 false, i1 false}
!627 = !{ptr @.str.113, !401, !"<string literal>", i1 false, i1 false}
!628 = !{ptr @early_srcu, !401, !"early_srcu", i1 false, i1 false}
!629 = !{ptr @early_srcu_cookie, !630, !"early_srcu_cookie", i1 false, i1 false}
!630 = !{!"../kernel/rcu/update.c", i32 527, i32 22}
!631 = distinct !{null, !632, !"__already_done", i1 false, i1 false}
!632 = !{!"../kernel/rcu/update.c", i32 569, i32 4}
!633 = !{ptr @__param_str_rcu_task_ipi_delay, !296, !"__param_str_rcu_task_ipi_delay", i1 false, i1 false}
!634 = !{ptr @rcu_task_ipi_delay, !635, !"rcu_task_ipi_delay", i1 false, i1 false}
!635 = !{!"../kernel/rcu/tasks.h", i32 139, i32 12}
!636 = !{ptr @__param_str_rcu_task_stall_timeout, !299, !"__param_str_rcu_task_stall_timeout", i1 false, i1 false}
!637 = !{ptr @rcu_task_stall_timeout, !638, !"rcu_task_stall_timeout", i1 false, i1 false}
!638 = !{!"../kernel/rcu/tasks.h", i32 144, i32 12}
!639 = !{ptr @__param_str_rcu_task_enqueue_lim, !302, !"__param_str_rcu_task_enqueue_lim", i1 false, i1 false}
!640 = !{ptr @rcu_task_enqueue_lim, !641, !"rcu_task_enqueue_lim", i1 false, i1 false}
!641 = !{!"../kernel/rcu/tasks.h", i32 147, i32 12}
!642 = !{ptr @__param_str_rcu_task_contend_lim, !305, !"__param_str_rcu_task_contend_lim", i1 false, i1 false}
!643 = !{ptr @rcu_task_contend_lim, !644, !"rcu_task_contend_lim", i1 false, i1 false}
!644 = !{!"../kernel/rcu/tasks.h", i32 151, i32 12}
!645 = !{ptr @__param_str_rcu_task_collapse_lim, !308, !"__param_str_rcu_task_collapse_lim", i1 false, i1 false}
!646 = !{ptr @rcu_task_collapse_lim, !647, !"rcu_task_collapse_lim", i1 false, i1 false}
!647 = !{!"../kernel/rcu/tasks.h", i32 153, i32 12}
!648 = distinct !{null, !649, !"__already_done", i1 false, i1 false}
!649 = !{!"../kernel/rcu/tasks.h", i32 295, i32 3}
!650 = distinct !{null, !651, !"__already_done", i1 false, i1 false}
!651 = !{!"../kernel/rcu/tasks.h", i32 301, i32 2}
!652 = !{ptr @.str.115, !653, !"<string literal>", i1 false, i1 false}
!653 = !{!"../kernel/rcu/tasks.h", i32 308, i32 4}
!654 = !{ptr @.str.116, !653, !"<string literal>", i1 false, i1 false}
!655 = !{ptr @call_rcu_tasks_generic._entry, !653, !"_entry", i1 false, i1 false}
!656 = !{ptr @call_rcu_tasks_generic._entry_ptr, !653, !"_entry_ptr", i1 false, i1 false}
!657 = distinct !{null, !658, !"__warned", i1 false, i1 false}
!658 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!659 = !{ptr @.str.117, !658, !"<string literal>", i1 false, i1 false}
!660 = !{ptr @.str.118, !658, !"<string literal>", i1 false, i1 false}
!661 = distinct !{null, !662, !"rcu_task_cb_adjust", i1 false, i1 false}
!662 = !{!"../kernel/rcu/tasks.h", i32 150, i32 13}
!663 = !{ptr @.str.119, !664, !"<string literal>", i1 false, i1 false}
!664 = !{!"../kernel/rcu/tasks.h", i32 225, i32 3}
!665 = !{ptr @.str.120, !664, !"<string literal>", i1 false, i1 false}
!666 = !{ptr @cblist_init_generic._entry, !664, !"_entry", i1 false, i1 false}
!667 = !{ptr @cblist_init_generic._entry_ptr, !664, !"_entry_ptr", i1 false, i1 false}
!668 = distinct !{null, !669, !"__already_done", i1 false, i1 false}
!669 = !{!"../kernel/rcu/tasks.h", i32 242, i32 3}
!670 = !{ptr @cblist_init_generic.__key, !671, !"__key", i1 false, i1 false}
!671 = !{!"../kernel/rcu/tasks.h", i32 244, i32 4}
!672 = !{ptr @.str.121, !671, !"<string literal>", i1 false, i1 false}
!673 = !{ptr @cblist_init_generic.__key.122, !674, !"__key", i1 false, i1 false}
!674 = !{!"../kernel/rcu/tasks.h", i32 248, i32 3}
!675 = !{ptr @.str.123, !674, !"<string literal>", i1 false, i1 false}
!676 = distinct !{null, !677, !"__already_done", i1 false, i1 false}
!677 = !{!"../kernel/rcu/tasks.h", i32 251, i32 3}
!678 = !{ptr @.str.126, !679, !"<string literal>", i1 false, i1 false}
!679 = !{!"../kernel/rcu/tasks.h", i32 254, i32 2}
!680 = !{ptr @cblist_init_generic._entry.125, !679, !"_entry", i1 false, i1 false}
!681 = !{ptr @cblist_init_generic._entry_ptr.127, !679, !"_entry_ptr", i1 false, i1 false}
!682 = distinct !{null, !683, !"__already_done", i1 false, i1 false}
!683 = !{!"../kernel/rcu/tasks.h", i32 468, i32 2}
!684 = distinct !{null, !685, !"__already_done", i1 false, i1 false}
!685 = !{!"../kernel/rcu/tasks.h", i32 479, i32 2}
!686 = distinct !{null, !687, !"__warned", i1 false, i1 false}
!687 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!688 = !{ptr @.str.129, !687, !"<string literal>", i1 false, i1 false}
!689 = !{ptr @.str.130, !311, !"<string literal>", i1 false, i1 false}
!690 = !{ptr @.str.131, !311, !"<string literal>", i1 false, i1 false}
!691 = !{ptr @.str.132, !311, !"<string literal>", i1 false, i1 false}
!692 = !{ptr @.str.133, !311, !"<string literal>", i1 false, i1 false}
!693 = !{ptr @.str.134, !311, !"<string literal>", i1 false, i1 false}
!694 = !{ptr @.str.135, !311, !"<string literal>", i1 false, i1 false}
!695 = !{ptr @rcu_tasks, !311, !"rcu_tasks", i1 false, i1 false}
!696 = distinct !{null, !697, !"__warned", i1 false, i1 false}
!697 = !{!"../kernel/rcu/tasks.h", i32 611, i32 2}
!698 = !{ptr @.str.136, !697, !"<string literal>", i1 false, i1 false}
!699 = distinct !{null, !700, !"__warned", i1 false, i1 false}
!700 = !{!"../kernel/rcu/tasks.h", i32 322, i32 2}
!701 = !{ptr @.str.137, !700, !"<string literal>", i1 false, i1 false}
!702 = distinct !{null, !703, !"__already_done", i1 false, i1 false}
!703 = !{!"../kernel/rcu/tasks.h", i32 367, i32 3}
!704 = distinct !{null, !705, !"__already_done", i1 false, i1 false}
!705 = !{!"../kernel/rcu/rcu.h", i32 59, i32 2}
!706 = !{ptr @.str.138, !705, !"<string literal>", i1 false, i1 false}
!707 = distinct !{null, !708, !"__already_done", i1 false, i1 false}
!708 = !{!"../kernel/rcu/rcu.h", i32 72, i32 2}
!709 = !{ptr @.str.139, !710, !"<string literal>", i1 false, i1 false}
!710 = !{!"../kernel/rcu/tasks.h", i32 572, i32 2}
!711 = !{ptr @.str.140, !710, !"<string literal>", i1 false, i1 false}
!712 = !{ptr @show_rcu_tasks_generic_gp_kthread._entry, !710, !"_entry", i1 false, i1 false}
!713 = !{ptr @show_rcu_tasks_generic_gp_kthread._entry_ptr, !710, !"_entry_ptr", i1 false, i1 false}
!714 = !{ptr @.str.141, !710, !"<string literal>", i1 false, i1 false}
!715 = !{ptr @.str.142, !710, !"<string literal>", i1 false, i1 false}
!716 = !{ptr @.str.143, !717, !"<string literal>", i1 false, i1 false}
!717 = !{!"../kernel/rcu/tasks.h", i32 207, i32 10}
!718 = !{ptr @.str.144, !719, !"<string literal>", i1 false, i1 false}
!719 = !{!"../kernel/rcu/tasks.h", i32 171, i32 2}
!720 = !{ptr @.str.145, !721, !"<string literal>", i1 false, i1 false}
!721 = !{!"../kernel/rcu/tasks.h", i32 172, i32 2}
!722 = !{ptr @.str.146, !723, !"<string literal>", i1 false, i1 false}
!723 = !{!"../kernel/rcu/tasks.h", i32 173, i32 2}
!724 = !{ptr @.str.147, !725, !"<string literal>", i1 false, i1 false}
!725 = !{!"../kernel/rcu/tasks.h", i32 174, i32 2}
!726 = !{ptr @.str.148, !727, !"<string literal>", i1 false, i1 false}
!727 = !{!"../kernel/rcu/tasks.h", i32 175, i32 2}
!728 = !{ptr @.str.149, !729, !"<string literal>", i1 false, i1 false}
!729 = !{!"../kernel/rcu/tasks.h", i32 176, i32 2}
!730 = !{ptr @.str.150, !731, !"<string literal>", i1 false, i1 false}
!731 = !{!"../kernel/rcu/tasks.h", i32 177, i32 2}
!732 = !{ptr @.str.151, !733, !"<string literal>", i1 false, i1 false}
!733 = !{!"../kernel/rcu/tasks.h", i32 178, i32 2}
!734 = !{ptr @.str.152, !735, !"<string literal>", i1 false, i1 false}
!735 = !{!"../kernel/rcu/tasks.h", i32 179, i32 2}
!736 = !{ptr @.str.153, !737, !"<string literal>", i1 false, i1 false}
!737 = !{!"../kernel/rcu/tasks.h", i32 180, i32 2}
!738 = !{ptr @.str.154, !739, !"<string literal>", i1 false, i1 false}
!739 = !{!"../kernel/rcu/tasks.h", i32 181, i32 2}
!740 = !{ptr @.str.155, !741, !"<string literal>", i1 false, i1 false}
!741 = !{!"../kernel/rcu/tasks.h", i32 182, i32 2}
!742 = !{ptr @rcu_tasks_gp_state_names, !743, !"rcu_tasks_gp_state_names", i1 false, i1 false}
!743 = !{!"../kernel/rcu/tasks.h", i32 170, i32 27}
!744 = !{ptr @.str.156, !404, !"<string literal>", i1 false, i1 false}
!745 = !{ptr @.str.157, !404, !"<string literal>", i1 false, i1 false}
!746 = !{ptr @.str.158, !404, !"<string literal>", i1 false, i1 false}
!747 = !{ptr @.str.159, !404, !"<string literal>", i1 false, i1 false}
!748 = !{ptr @tasks_rcu_exit_srcu, !404, !"tasks_rcu_exit_srcu", i1 false, i1 false}
!749 = !{ptr @.str.160, !324, !"<string literal>", i1 false, i1 false}
!750 = !{ptr @.str.161, !324, !"<string literal>", i1 false, i1 false}
!751 = !{ptr @.str.162, !324, !"<string literal>", i1 false, i1 false}
!752 = !{ptr @.str.163, !324, !"<string literal>", i1 false, i1 false}
!753 = !{ptr @.str.164, !324, !"<string literal>", i1 false, i1 false}
!754 = !{ptr @.str.165, !324, !"<string literal>", i1 false, i1 false}
!755 = !{ptr @rcu_tasks_rude, !324, !"rcu_tasks_rude", i1 false, i1 false}
!756 = !{ptr @rcu_tasks_trace_iw, !757, !"rcu_tasks_trace_iw", i1 false, i1 false}
!757 = !{!"../kernel/rcu/tasks.h", i32 1137, i32 8}
!758 = !{ptr @.str.166, !759, !"<string literal>", i1 false, i1 false}
!759 = !{!"../kernel/rcu/tasks.h", i32 1114, i32 8}
!760 = !{ptr @trc_wait, !759, !"trc_wait", i1 false, i1 false}
!761 = distinct !{null, !762, !"__already_done", i1 false, i1 false}
!762 = !{!"../kernel/rcu/tasks.h", i32 1517, i32 2}
!763 = distinct !{null, !764, !"__already_done", i1 false, i1 false}
!764 = !{!"../kernel/rcu/tasks.h", i32 1519, i32 6}
!765 = !{ptr @.str.168, !341, !"<string literal>", i1 false, i1 false}
!766 = !{ptr @.str.169, !341, !"<string literal>", i1 false, i1 false}
!767 = !{ptr @.str.170, !341, !"<string literal>", i1 false, i1 false}
!768 = !{ptr @.str.171, !341, !"<string literal>", i1 false, i1 false}
!769 = !{ptr @.str.172, !341, !"<string literal>", i1 false, i1 false}
!770 = !{ptr @.str.173, !341, !"<string literal>", i1 false, i1 false}
!771 = !{ptr @rcu_tasks_trace, !341, !"rcu_tasks_trace", i1 false, i1 false}
!772 = !{ptr @.str.174, !773, !"<string literal>", i1 false, i1 false}
!773 = !{!"../kernel/rcu/tasks.h", i32 1690, i32 4}
!774 = !{ptr @.str.175, !773, !"<string literal>", i1 false, i1 false}
!775 = !{ptr @rcu_tasks_verify_self_tests._entry, !773, !"_entry", i1 false, i1 false}
!776 = !{ptr @rcu_tasks_verify_self_tests._entry_ptr, !773, !"_entry_ptr", i1 false, i1 false}
!777 = !{ptr @.str.176, !778, !"<string literal>", i1 false, i1 false}
!778 = !{!"../kernel/rcu/tasks.h", i32 1638, i32 11}
!779 = !{ptr @.str.177, !780, !"<string literal>", i1 false, i1 false}
!780 = !{!"../kernel/rcu/tasks.h", i32 1643, i32 11}
!781 = !{ptr @.str.178, !782, !"<string literal>", i1 false, i1 false}
!782 = !{!"../kernel/rcu/tasks.h", i32 1648, i32 11}
!783 = !{ptr @tests, !784, !"tests", i1 false, i1 false}
!784 = !{!"../kernel/rcu/tasks.h", i32 1636, i32 35}
!785 = !{ptr @.str.179, !786, !"<string literal>", i1 false, i1 false}
!786 = !{!"../kernel/rcu/tasks.h", i32 773, i32 3}
!787 = !{ptr @.str.180, !786, !"<string literal>", i1 false, i1 false}
!788 = !{ptr @check_holdout_task._entry, !786, !"_entry", i1 false, i1 false}
!789 = !{ptr @check_holdout_task._entry_ptr, !786, !"_entry_ptr", i1 false, i1 false}
!790 = !{ptr @.str.182, !791, !"<string literal>", i1 false, i1 false}
!791 = !{!"../kernel/rcu/tasks.h", i32 777, i32 2}
!792 = !{ptr @check_holdout_task._entry.181, !791, !"_entry", i1 false, i1 false}
!793 = !{ptr @check_holdout_task._entry_ptr.183, !791, !"_entry_ptr", i1 false, i1 false}
!794 = !{ptr @.str.184, !791, !"<string literal>", i1 false, i1 false}
!795 = distinct !{null, !791, !"<string literal>", i1 false, i1 false}
!796 = !{ptr @.str.186, !797, !"<string literal>", i1 false, i1 false}
!797 = !{!"../kernel/rcu/tasks.h", i32 537, i32 6}
!798 = distinct !{null, !799, !"__already_done", i1 false, i1 false}
!799 = !{!"../kernel/rcu/tasks.h", i32 538, i32 6}
!800 = !{ptr @.str.187, !799, !"<string literal>", i1 false, i1 false}
!801 = !{ptr @__func__.rcu_spawn_tasks_kthread_generic, !799, !"<string literal>", i1 false, i1 false}
!802 = distinct !{null, !803, !"__already_done", i1 false, i1 false}
!803 = !{!"../kernel/rcu/tasks.h", i32 407, i32 3}
!804 = !{ptr @.str.188, !805, !"<string literal>", i1 false, i1 false}
!805 = !{!"../kernel/rcu/tasks.h", i32 423, i32 4}
!806 = !{ptr @.str.189, !805, !"<string literal>", i1 false, i1 false}
!807 = !{ptr @rcu_tasks_need_gpcb._entry, !805, !"_entry", i1 false, i1 false}
!808 = !{ptr @rcu_tasks_need_gpcb._entry_ptr, !805, !"_entry_ptr", i1 false, i1 false}
!809 = !{ptr @.str.191, !810, !"<string literal>", i1 false, i1 false}
!810 = !{!"../kernel/rcu/tasks.h", i32 432, i32 4}
!811 = !{ptr @rcu_tasks_need_gpcb._entry.190, !810, !"_entry", i1 false, i1 false}
!812 = !{ptr @rcu_tasks_need_gpcb._entry_ptr.192, !810, !"_entry_ptr", i1 false, i1 false}
!813 = distinct !{null, !814, !"__already_done", i1 false, i1 false}
!814 = !{!"../kernel/rcu/tasks.h", i32 1324, i32 3}
!815 = distinct !{null, !816, !"__already_done", i1 false, i1 false}
!816 = !{!"../kernel/rcu/tasks.h", i32 1270, i32 3}
!817 = distinct !{null, !818, !"__already_done", i1 false, i1 false}
!818 = !{!"../kernel/rcu/tasks.h", i32 1305, i32 4}
!819 = !{ptr @.str.194, !818, !"<string literal>", i1 false, i1 false}
!820 = !{ptr @__func__.trc_wait_for_one_reader, !818, !"<string literal>", i1 false, i1 false}
!821 = distinct !{null, !822, !"__already_done", i1 false, i1 false}
!822 = !{!"../kernel/rcu/tasks.h", i32 1219, i32 3}
!823 = distinct !{null, !824, !"__already_done", i1 false, i1 false}
!824 = !{!"../kernel/rcu/tasks.h", i32 1252, i32 2}
!825 = distinct !{null, !826, !"__already_done", i1 false, i1 false}
!826 = !{!"../kernel/rcu/tasks.h", i32 1200, i32 2}
!827 = !{ptr @.str.196, !828, !"<string literal>", i1 false, i1 false}
!828 = !{!"../kernel/rcu/tasks.h", i32 1451, i32 4}
!829 = !{ptr @.str.197, !828, !"<string literal>", i1 false, i1 false}
!830 = !{ptr @check_all_holdout_tasks_trace._entry, !828, !"_entry", i1 false, i1 false}
!831 = !{ptr @check_all_holdout_tasks_trace._entry_ptr, !828, !"_entry_ptr", i1 false, i1 false}
!832 = !{ptr @.str.198, !833, !"<string literal>", i1 false, i1 false}
!833 = !{!"../kernel/rcu/tasks.h", i32 1393, i32 3}
!834 = !{ptr @.str.199, !833, !"<string literal>", i1 false, i1 false}
!835 = !{ptr @show_stalled_task_trace._entry, !833, !"_entry", i1 false, i1 false}
!836 = !{ptr @show_stalled_task_trace._entry_ptr, !833, !"_entry_ptr", i1 false, i1 false}
!837 = !{ptr @.str.201, !838, !"<string literal>", i1 false, i1 false}
!838 = !{!"../kernel/rcu/tasks.h", i32 1398, i32 3}
!839 = !{ptr @show_stalled_task_trace._entry.200, !838, !"_entry", i1 false, i1 false}
!840 = !{ptr @show_stalled_task_trace._entry_ptr.202, !838, !"_entry_ptr", i1 false, i1 false}
!841 = !{ptr @.str.203, !838, !"<string literal>", i1 false, i1 false}
!842 = !{ptr @.str.205, !843, !"<string literal>", i1 false, i1 false}
!843 = !{!"../kernel/rcu/tasks.h", i32 1402, i32 3}
!844 = !{ptr @show_stalled_task_trace._entry.204, !843, !"_entry", i1 false, i1 false}
!845 = !{ptr @show_stalled_task_trace._entry_ptr.206, !843, !"_entry_ptr", i1 false, i1 false}
!846 = distinct !{null, !843, !"<string literal>", i1 false, i1 false}
!847 = !{ptr @.str.208, !843, !"<string literal>", i1 false, i1 false}
!848 = !{ptr @.str.209, !849, !"<string literal>", i1 false, i1 false}
!849 = !{!"../kernel/rcu/tasks.h", i32 1420, i32 4}
!850 = !{ptr @.str.210, !849, !"<string literal>", i1 false, i1 false}
!851 = !{ptr @show_stalled_ipi_trace._entry, !849, !"_entry", i1 false, i1 false}
!852 = !{ptr @show_stalled_ipi_trace._entry_ptr, !849, !"_entry_ptr", i1 false, i1 false}
!853 = distinct !{null, !854, !"__already_done", i1 false, i1 false}
!854 = !{!"../kernel/rcu/tasks.h", i32 1475, i32 7}
!855 = distinct !{null, !856, !"__warned", i1 false, i1 false}
!856 = !{!"../kernel/rcu/tasks.h", i32 1494, i32 3}
!857 = !{ptr @.str.211, !858, !"<string literal>", i1 false, i1 false}
!858 = !{!"../kernel/rcu/tasks.h", i32 1505, i32 4}
!859 = !{ptr @.str.212, !858, !"<string literal>", i1 false, i1 false}
!860 = !{ptr @rcu_tasks_trace_postgp._entry, !858, !"_entry", i1 false, i1 false}
!861 = !{ptr @rcu_tasks_trace_postgp._entry_ptr, !858, !"_entry_ptr", i1 false, i1 false}
!862 = !{ptr @.str.214, !863, !"<string literal>", i1 false, i1 false}
!863 = !{!"../kernel/rcu/tasks.h", i32 1507, i32 3}
!864 = !{ptr @rcu_tasks_trace_postgp._entry.213, !863, !"_entry", i1 false, i1 false}
!865 = !{ptr @rcu_tasks_trace_postgp._entry_ptr.215, !863, !"_entry_ptr", i1 false, i1 false}
!866 = !{ptr @.str.216, !867, !"<string literal>", i1 false, i1 false}
!867 = !{!"../kernel/rcu/tasks.h", i32 1666, i32 2}
!868 = !{ptr @.str.217, !867, !"<string literal>", i1 false, i1 false}
!869 = !{ptr @rcu_tasks_initiate_self_tests._entry, !867, !"_entry", i1 false, i1 false}
!870 = !{ptr @rcu_tasks_initiate_self_tests._entry_ptr, !867, !"_entry_ptr", i1 false, i1 false}
!871 = !{ptr @.str.218, !872, !"<string literal>", i1 false, i1 false}
!872 = !{!"../kernel/rcu/tasks.h", i32 1659, i32 2}
!873 = !{ptr @.str.219, !872, !"<string literal>", i1 false, i1 false}
!874 = !{ptr @test_rcu_tasks_callback._entry, !872, !"_entry", i1 false, i1 false}
!875 = !{ptr @test_rcu_tasks_callback._entry_ptr, !872, !"_entry_ptr", i1 false, i1 false}
!876 = !{ptr @.str.220, !877, !"<string literal>", i1 false, i1 false}
!877 = !{!"../kernel/rcu/tasks.h", i32 552, i32 3}
!878 = !{ptr @.str.221, !877, !"<string literal>", i1 false, i1 false}
!879 = !{ptr @rcu_tasks_bootup_oddness._entry, !877, !"_entry", i1 false, i1 false}
!880 = !{ptr @rcu_tasks_bootup_oddness._entry_ptr, !877, !"_entry_ptr", i1 false, i1 false}
!881 = !{ptr @.str.223, !882, !"<string literal>", i1 false, i1 false}
!882 = !{!"../kernel/rcu/tasks.h", i32 555, i32 2}
!883 = !{ptr @rcu_tasks_bootup_oddness._entry.222, !882, !"_entry", i1 false, i1 false}
!884 = !{ptr @rcu_tasks_bootup_oddness._entry_ptr.224, !882, !"_entry_ptr", i1 false, i1 false}
!885 = !{ptr @.str.226, !886, !"<string literal>", i1 false, i1 false}
!886 = !{!"../kernel/rcu/tasks.h", i32 558, i32 2}
!887 = !{ptr @rcu_tasks_bootup_oddness._entry.225, !886, !"_entry", i1 false, i1 false}
!888 = !{ptr @rcu_tasks_bootup_oddness._entry_ptr.227, !886, !"_entry_ptr", i1 false, i1 false}
!889 = !{ptr @.str.229, !890, !"<string literal>", i1 false, i1 false}
!890 = !{!"../kernel/rcu/tasks.h", i32 561, i32 2}
!891 = !{ptr @rcu_tasks_bootup_oddness._entry.228, !890, !"_entry", i1 false, i1 false}
!892 = !{ptr @rcu_tasks_bootup_oddness._entry_ptr.230, !890, !"_entry_ptr", i1 false, i1 false}
!893 = !{!"sp"}
!894 = !{i32 1, !"wchar_size", i32 2}
!895 = !{i32 1, !"min_enum_size", i32 4}
!896 = !{i32 8, !"branch-target-enforcement", i32 0}
!897 = !{i32 8, !"sign-return-address", i32 0}
!898 = !{i32 8, !"sign-return-address-all", i32 0}
!899 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!900 = !{i32 7, !"uwtable", i32 1}
!901 = !{i32 7, !"frame-pointer", i32 2}
!902 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!903 = !{!"branch_weights", i32 2000, i32 1}
!904 = !{!"branch_weights", i32 1, i32 2000}
!905 = !{!"auto-init"}
!906 = !{i64 621357}
!907 = !{i64 2148226144, i64 2148226170, i64 2148226199, i64 2148226233, i64 2148226264, i64 2148226287}
!908 = !{i64 2148228609, i64 2148228635, i64 2148228664, i64 2148228698, i64 2148228729, i64 2148228752}
!909 = !{i64 2148707959, i64 2148707964, i64 2148707977, i64 2148708021, i64 2148708055, i64 2148708076}
!910 = !{i64 2154961412}
!911 = !{i64 2154961677}
!912 = !{i64 2149404948}
!913 = !{i64 2149405984}
!914 = !{i8 0, i8 2}
!915 = !{i64 618625, i64 618686}
!916 = !{i64 2149396389}
!917 = !{i64 2157915899}
!918 = !{i64 2157920833}
!919 = !{i64 2157942515}
!920 = !{i64 2157947409}
!921 = !{i64 2158183020}
!922 = !{i64 2158187954}
!923 = !{i64 2158209636}
!924 = !{i64 2158214530}
!925 = !{i32 0, i32 33}
!926 = !{i64 2158231321}
!927 = !{i64 2149396655}
!928 = !{i64 2157122151}
!929 = !{i64 2158241592}
!930 = !{i64 2157114753}
!931 = !{i64 2158248175}
!932 = !{i64 2158476182}
!933 = !{i64 2158481116}
!934 = !{i64 2158502798}
!935 = !{i64 2158507692}
!936 = !{i64 2148314596}
!937 = !{i64 2148229329, i64 2148229361, i64 2148229390, i64 2148229424, i64 2148229455, i64 2148229478}
!938 = !{i64 2148314825}
!939 = !{i64 2157116286}
!940 = !{i64 2159495905}
!941 = !{i64 2159496046}
!942 = !{i64 2159496283}
!943 = !{i64 2159496380}
!944 = !{i64 2159522463}
!945 = !{i64 2157398282}
!946 = !{i64 2157630647}
!947 = !{i64 2157635581}
!948 = !{i64 2157657263}
!949 = !{i64 2157662157}
!950 = !{i64 2158816084}
!951 = !{i64 2158823142}
!952 = !{i64 2159051165}
!953 = !{i64 2159056099}
!954 = !{i64 2159077781}
!955 = !{i64 2159082675}
!956 = !{i64 2159318813}
!957 = !{i64 2159323747}
!958 = !{i64 2159345429}
!959 = !{i64 2159350323}
!960 = !{i64 2148227674, i64 2148227706, i64 2148227735, i64 2148227769, i64 2148227800, i64 2148227823}
!961 = !{i64 2148315675}
!962 = !{i64 2148230139, i64 2148230171, i64 2148230200, i64 2148230234, i64 2148230265, i64 2148230288}
!963 = !{i64 2149614139}
!964 = !{i64 2159366758}
!965 = !{i64 2158526826}
!966 = !{i64 2158754833}
!967 = !{i64 2158759767}
!968 = !{i64 2158781449}
!969 = !{i64 2158786343}
!970 = !{i64 2158800697}
!971 = !{i64 2159655916}
!972 = !{i64 2159706949}
!973 = !{i64 2159708276}
!974 = !{i64 2159708453}
!975 = !{i64 2159795619}
!976 = !{i64 2159602766}
!977 = !{i64 2159567631}
!978 = !{i64 2159583587}
