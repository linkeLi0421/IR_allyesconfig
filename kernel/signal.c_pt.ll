; ModuleID = '/llk/IR_all_yes/kernel/signal.c_pt.bc'
source_filename = "../kernel/signal.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+recalc_sigpending\22, \22a\22\09"
module asm "\09.weak\09__crc_recalc_sigpending\09\09\09\09"
module asm "\09.long\09__crc_recalc_sigpending\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_recalc_sigpending:\09\09\09\09\09"
module asm "\09.asciz \09\22recalc_sigpending\22\09\09\09\09\09"
module asm "__kstrtabns_recalc_sigpending:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+flush_signals\22, \22a\22\09"
module asm "\09.weak\09__crc_flush_signals\09\09\09\09"
module asm "\09.long\09__crc_flush_signals\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_flush_signals:\09\09\09\09\09"
module asm "\09.asciz \09\22flush_signals\22\09\09\09\09\09"
module asm "__kstrtabns_flush_signals:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+dequeue_signal\22, \22a\22\09"
module asm "\09.weak\09__crc_dequeue_signal\09\09\09\09"
module asm "\09.long\09__crc_dequeue_signal\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dequeue_signal:\09\09\09\09\09"
module asm "\09.asciz \09\22dequeue_signal\22\09\09\09\09\09"
module asm "__kstrtabns_dequeue_signal:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+kill_pid_usb_asyncio\22, \22a\22\09"
module asm "\09.weak\09__crc_kill_pid_usb_asyncio\09\09\09\09"
module asm "\09.long\09__crc_kill_pid_usb_asyncio\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_kill_pid_usb_asyncio:\09\09\09\09\09"
module asm "\09.asciz \09\22kill_pid_usb_asyncio\22\09\09\09\09\09"
module asm "__kstrtabns_kill_pid_usb_asyncio:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+send_sig_info\22, \22a\22\09"
module asm "\09.weak\09__crc_send_sig_info\09\09\09\09"
module asm "\09.long\09__crc_send_sig_info\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_send_sig_info:\09\09\09\09\09"
module asm "\09.asciz \09\22send_sig_info\22\09\09\09\09\09"
module asm "__kstrtabns_send_sig_info:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+send_sig\22, \22a\22\09"
module asm "\09.weak\09__crc_send_sig\09\09\09\09"
module asm "\09.long\09__crc_send_sig\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_send_sig:\09\09\09\09\09"
module asm "\09.asciz \09\22send_sig\22\09\09\09\09\09"
module asm "__kstrtabns_send_sig:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+force_sig\22, \22a\22\09"
module asm "\09.weak\09__crc_force_sig\09\09\09\09"
module asm "\09.long\09__crc_force_sig\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_force_sig:\09\09\09\09\09"
module asm "\09.asciz \09\22force_sig\22\09\09\09\09\09"
module asm "__kstrtabns_force_sig:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+send_sig_mceerr\22, \22a\22\09"
module asm "\09.weak\09__crc_send_sig_mceerr\09\09\09\09"
module asm "\09.long\09__crc_send_sig_mceerr\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_send_sig_mceerr:\09\09\09\09\09"
module asm "\09.asciz \09\22send_sig_mceerr\22\09\09\09\09\09"
module asm "__kstrtabns_send_sig_mceerr:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+kill_pgrp\22, \22a\22\09"
module asm "\09.weak\09__crc_kill_pgrp\09\09\09\09"
module asm "\09.long\09__crc_kill_pgrp\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_kill_pgrp:\09\09\09\09\09"
module asm "\09.asciz \09\22kill_pgrp\22\09\09\09\09\09"
module asm "__kstrtabns_kill_pgrp:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+kill_pid\22, \22a\22\09"
module asm "\09.weak\09__crc_kill_pid\09\09\09\09"
module asm "\09.long\09__crc_kill_pid\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_kill_pid:\09\09\09\09\09"
module asm "\09.asciz \09\22kill_pid\22\09\09\09\09\09"
module asm "__kstrtabns_kill_pid:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sigprocmask\22, \22a\22\09"
module asm "\09.weak\09__crc_sigprocmask\09\09\09\09"
module asm "\09.long\09__crc_sigprocmask\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sigprocmask:\09\09\09\09\09"
module asm "\09.asciz \09\22sigprocmask\22\09\09\09\09\09"
module asm "__kstrtabns_sigprocmask:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+kernel_sigaction\22, \22a\22\09"
module asm "\09.weak\09__crc_kernel_sigaction\09\09\09\09"
module asm "\09.long\09__crc_kernel_sigaction\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_kernel_sigaction:\09\09\09\09\09"
module asm "\09.asciz \09\22kernel_sigaction\22\09\09\09\09\09"
module asm "__kstrtabns_kernel_sigaction:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_event_fields = type { ptr, %union.anon.31 }
%union.anon.31 = type { %struct.anon.32 }
%struct.anon.32 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.33, %struct.trace_event, ptr, ptr, %union.anon.34, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.33 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.34 = type { ptr }
%union.anon.109 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.110 = type { %struct.bpf_raw_event_map }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.obs_kernel_param = type { ptr, ptr, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.syscall_metadata = type { ptr, i32, i32, ptr, ptr, %struct.list_head, ptr, ptr }
%struct.anon.111 = type { i8, i8 }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.13 }
%union.anon.13 = type { i32 }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t, %struct.lockdep_map }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.rcuwait = type { ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.spinlock = type { %union.anon.22 }
%union.anon.22 = type { %struct.raw_spinlock }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.99, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.11 }
%struct.llist_node = type { ptr }
%union.anon.11 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.rb_node = type { i32, ptr, ptr }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.87 }
%union.anon.87 = type { %struct.anon.88 }
%struct.anon.88 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.kuid_t = type { i32 }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.tlbflush_unmap_batch = type {}
%union.anon.99 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.trace_event_raw_signal_generate = type { %struct.trace_entry, i32, i32, i32, [16 x i8], i32, i32, i32, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.anon = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.3 }
%struct.anon.3 = type { i32, i32, i32, i32, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.trace_event_raw_signal_deliver = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.sigaction = type { ptr, i32, ptr, %struct.sigset_t }
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, ptr, %struct.sigpending, %struct.hlist_head, i32, i32, ptr, i32, i32, ptr, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x ptr], ptr, i32, ptr, ptr, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.task_io_accounting, i64, [16 x %struct.rlimit], %struct.pacct_struct, ptr, i32, ptr, i8, i16, i16, ptr, %struct.mutex, %struct.rw_semaphore }
%struct.hlist_head = type { ptr }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.atomic64_t = type { i64 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i32, i32 }
%struct.pacct_struct = type { i32, i32, i32, i64, i64, i32, i32 }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.sigqueue = type { %struct.list_head, i32, %struct.kernel_siginfo, ptr }
%struct.kernel_siginfo = type { %struct.anon }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.hrtimer_clock_base = type { ptr, i32, i32, %struct.seqcount_raw_spinlock, ptr, %struct.timerqueue_head, ptr, i64 }
%struct.seqcount_raw_spinlock = type { %struct.seqcount, ptr }
%struct.cred = type { %struct.atomic_t, %struct.atomic_t, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %union.anon.76 }
%struct.kgid_t = type { i32 }
%struct.kernel_cap_struct = type { [2 x i32] }
%union.anon.76 = type { %struct.callback_head }
%struct.anon.23 = type { [16 x i8], %struct.lockdep_map }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, ptr }
%struct.multiprocess_signals = type { %struct.sigset_t, %struct.hlist_node }
%struct.ksignal = type { %struct.k_sigaction, %struct.kernel_siginfo, i32 }
%struct.timespec64 = type { i64, i32 }
%struct.pid_namespace = type { %struct.idr, %struct.callback_head, i32, ptr, ptr, i32, ptr, ptr, ptr, ptr, i32, %struct.ns_common }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.sigaltstack = type { ptr, i32, i32 }
%struct.pt_regs = type { [18 x i32] }
%struct.old_sigaction = type { ptr, i32, i32, ptr }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }

@__tpstrtab_signal_generate = internal constant [16 x i8] c"signal_generate\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_signal_generate = dso_local global %struct.static_call_key { ptr @__traceiter_signal_generate }, align 4
@__tracepoint_signal_generate = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_signal_generate, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_signal_generate, ptr null, ptr @__traceiter_signal_generate, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_signal_generate = internal constant ptr @__tracepoint_signal_generate, section "__tracepoints_ptrs", align 4
@__tpstrtab_signal_deliver = internal constant [15 x i8] c"signal_deliver\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_signal_deliver = dso_local global %struct.static_call_key { ptr @__traceiter_signal_deliver }, align 4
@__tracepoint_signal_deliver = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_signal_deliver, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_signal_deliver, ptr null, ptr @__traceiter_signal_deliver, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_signal_deliver = internal constant ptr @__tracepoint_signal_deliver, section "__tracepoints_ptrs", align 4
@str__signal__trace_system_name = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"signal\00", [25 x i8] zeroinitializer }, align 32
@trace_event_fields_signal_generate = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.72, %union.anon.31 { %struct.anon.32 { ptr @.str.73, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.72, %union.anon.31 { %struct.anon.32 { ptr @.str.74, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.72, %union.anon.31 { %struct.anon.32 { ptr @.str.75, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.76, %union.anon.31 { %struct.anon.32 { ptr @.str.77, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.31 { %struct.anon.32 { ptr @.str.79, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.72, %union.anon.31 { %struct.anon.32 { ptr @.str.80, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.72, %union.anon.31 { %struct.anon.32 { ptr @.str.81, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_signal_generate = internal global %struct.trace_event_class { ptr @str__signal__trace_system_name, ptr @trace_event_raw_event_signal_generate, ptr @perf_trace_signal_generate, ptr @trace_event_reg, ptr @trace_event_fields_signal_generate, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_signal_generate, i64 24), ptr getelementptr (i8, ptr @event_class_signal_generate, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_signal_generate = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_signal_generate, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_signal_generate = internal global { [134 x i8], [58 x i8] } { [134 x i8] c"\22sig=%d errno=%d code=%d comm=%s pid=%d grp=%d res=%d\22, REC->sig, REC->errno, REC->code, REC->comm, REC->pid, REC->group, REC->result\00", [58 x i8] zeroinitializer }, align 32
@event_signal_generate = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_signal_generate, %union.anon.33 { ptr @__tracepoint_signal_generate }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_signal_generate }, ptr @print_fmt_signal_generate, ptr null, %union.anon.34 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_signal_generate = internal global ptr @event_signal_generate, section "_ftrace_events", align 4
@trace_event_fields_signal_deliver = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.72, %union.anon.31 { %struct.anon.32 { ptr @.str.73, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.72, %union.anon.31 { %struct.anon.32 { ptr @.str.74, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.72, %union.anon.31 { %struct.anon.32 { ptr @.str.75, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.83, %union.anon.31 { %struct.anon.32 { ptr @.str.84, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.83, %union.anon.31 { %struct.anon.32 { ptr @.str.85, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_signal_deliver = internal global %struct.trace_event_class { ptr @str__signal__trace_system_name, ptr @trace_event_raw_event_signal_deliver, ptr @perf_trace_signal_deliver, ptr @trace_event_reg, ptr @trace_event_fields_signal_deliver, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_signal_deliver, i64 24), ptr getelementptr (i8, ptr @event_class_signal_deliver, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_signal_deliver = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_signal_deliver, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_signal_deliver = internal global { [119 x i8], [41 x i8] } { [119 x i8] c"\22sig=%d errno=%d code=%d sa_handler=%lx sa_flags=%lx\22, REC->sig, REC->errno, REC->code, REC->sa_handler, REC->sa_flags\00", [41 x i8] zeroinitializer }, align 32
@event_signal_deliver = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_signal_deliver, %union.anon.33 { ptr @__tracepoint_signal_deliver }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_signal_deliver }, ptr @print_fmt_signal_deliver, ptr null, %union.anon.34 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_signal_deliver = internal global ptr @event_signal_deliver, section "_ftrace_events", align 4
@__bpf_trace_tp_map_signal_generate = internal global %union.anon.109 { %struct.bpf_raw_event_map { ptr @__tracepoint_signal_generate, ptr @__bpf_trace_signal_generate, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_signal_deliver = internal global %union.anon.110 { %struct.bpf_raw_event_map { ptr @__tracepoint_signal_deliver, ptr @__bpf_trace_signal_deliver, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__kstrtab_recalc_sigpending = external dso_local constant [0 x i8], align 1
@__kstrtabns_recalc_sigpending = external dso_local constant [0 x i8], align 1
@__ksymtab_recalc_sigpending = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @recalc_sigpending to i32), ptr @__kstrtab_recalc_sigpending, ptr @__kstrtabns_recalc_sigpending }, section "___ksymtab+recalc_sigpending", align 4
@__kstrtab_flush_signals = external dso_local constant [0 x i8], align 1
@__kstrtabns_flush_signals = external dso_local constant [0 x i8], align 1
@__ksymtab_flush_signals = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @flush_signals to i32), ptr @__kstrtab_flush_signals, ptr @__kstrtabns_flush_signals }, section "___ksymtab+flush_signals", align 4
@__kstrtab_dequeue_signal = external dso_local constant [0 x i8], align 1
@__kstrtabns_dequeue_signal = external dso_local constant [0 x i8], align 1
@__ksymtab_dequeue_signal = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dequeue_signal to i32), ptr @__kstrtab_dequeue_signal, ptr @__kstrtabns_dequeue_signal }, section "___ksymtab_gpl+dequeue_signal", align 4
@__setup_str_setup_print_fatal_signals = internal constant [21 x i8] c"print-fatal-signals=\00", section ".init.rodata", align 1
@__setup_setup_print_fatal_signals = internal global %struct.obs_kernel_param { ptr @__setup_str_setup_print_fatal_signals, ptr @setup_print_fatal_signals, i32 0 }, section ".init.setup", align 4
@__lock_task_sighand.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"kernel/signal.c\00", [16 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@lockdep_assert_task_sighand_held.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@lockdep_assert_task_sighand_held.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kill_pgrp_info.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.2 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"RCU-list traversed in non-reader section!\00", [54 x i8] zeroinitializer }, align 32
@__kstrtab_kill_pid_usb_asyncio = external dso_local constant [0 x i8], align 1
@__kstrtabns_kill_pid_usb_asyncio = external dso_local constant [0 x i8], align 1
@__ksymtab_kill_pid_usb_asyncio = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @kill_pid_usb_asyncio to i32), ptr @__kstrtab_kill_pid_usb_asyncio, ptr @__kstrtabns_kill_pid_usb_asyncio }, section "___ksymtab_gpl+kill_pid_usb_asyncio", align 4
@__kstrtab_send_sig_info = external dso_local constant [0 x i8], align 1
@__kstrtabns_send_sig_info = external dso_local constant [0 x i8], align 1
@__ksymtab_send_sig_info = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @send_sig_info to i32), ptr @__kstrtab_send_sig_info, ptr @__kstrtabns_send_sig_info }, section "___ksymtab+send_sig_info", align 4
@__kstrtab_send_sig = external dso_local constant [0 x i8], align 1
@__kstrtabns_send_sig = external dso_local constant [0 x i8], align 1
@__ksymtab_send_sig = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @send_sig to i32), ptr @__kstrtab_send_sig, ptr @__kstrtabns_send_sig }, section "___ksymtab+send_sig", align 4
@__kstrtab_force_sig = external dso_local constant [0 x i8], align 1
@__kstrtabns_force_sig = external dso_local constant [0 x i8], align 1
@__ksymtab_force_sig = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @force_sig to i32), ptr @__kstrtab_force_sig, ptr @__kstrtabns_force_sig }, section "___ksymtab+force_sig", align 4
@__kstrtab_send_sig_mceerr = external dso_local constant [0 x i8], align 1
@__kstrtabns_send_sig_mceerr = external dso_local constant [0 x i8], align 1
@__ksymtab_send_sig_mceerr = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @send_sig_mceerr to i32), ptr @__kstrtab_send_sig_mceerr, ptr @__kstrtabns_send_sig_mceerr }, section "___ksymtab+send_sig_mceerr", align 4
@tasklist_lock = external dso_local global %struct.rwlock_t, align 4
@__kstrtab_kill_pgrp = external dso_local constant [0 x i8], align 1
@__kstrtabns_kill_pgrp = external dso_local constant [0 x i8], align 1
@__ksymtab_kill_pgrp = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @kill_pgrp to i32), ptr @__kstrtab_kill_pgrp, ptr @__kstrtabns_kill_pgrp }, section "___ksymtab+kill_pgrp", align 4
@__kstrtab_kill_pid = external dso_local constant [0 x i8], align 1
@__kstrtabns_kill_pid = external dso_local constant [0 x i8], align 1
@__ksymtab_kill_pid = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @kill_pid to i32), ptr @__kstrtab_kill_pid, ptr @__kstrtabns_kill_pid }, section "___ksymtab+kill_pid", align 4
@do_notify_parent.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@do_notify_parent.__warned.3 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@print_fatal_signals = dso_local global i32 0, section ".data..read_mostly", align 4
@event_class_syscall_enter = external dso_local global %struct.trace_event_class, align 4
@.str.4 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"sys_enter_restart_syscall\00", [38 x i8] zeroinitializer }, align 32
@enter_syscall_print_funcs = external dso_local global %struct.trace_event_functions, align 4
@__syscall_meta__restart_syscall = internal global %struct.syscall_metadata { ptr @.str.6, i32 -1, i32 0, ptr null, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__restart_syscall, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__restart_syscall, i64 20) }, ptr @event_enter__restart_syscall, ptr @event_exit__restart_syscall }, align 4
@event_enter__restart_syscall = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.33 { ptr @.str.4 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__restart_syscall, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__restart_syscall = internal global ptr @event_enter__restart_syscall, section "_ftrace_events", align 4
@event_class_syscall_exit = external dso_local global %struct.trace_event_class, align 4
@.str.5 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"sys_exit_restart_syscall\00", [39 x i8] zeroinitializer }, align 32
@exit_syscall_print_funcs = external dso_local global %struct.trace_event_functions, align 4
@event_exit__restart_syscall = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.33 { ptr @.str.5 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__restart_syscall, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__restart_syscall = internal global ptr @event_exit__restart_syscall, section "_ftrace_events", align 4
@.str.6 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"sys_restart_syscall\00", [44 x i8] zeroinitializer }, align 32
@__p_syscall_meta__restart_syscall = internal global ptr @__syscall_meta__restart_syscall, section "__syscalls_metadata", align 4
@__kstrtab_sigprocmask = external dso_local constant [0 x i8], align 1
@__kstrtabns_sigprocmask = external dso_local constant [0 x i8], align 1
@__ksymtab_sigprocmask = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sigprocmask to i32), ptr @__kstrtab_sigprocmask, ptr @__kstrtabns_sigprocmask }, section "___ksymtab+sigprocmask", align 4
@.str.7 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"sys_enter_rt_sigprocmask\00", [39 x i8] zeroinitializer }, align 32
@__syscall_meta__rt_sigprocmask = internal global %struct.syscall_metadata { ptr @.str.9, i32 -1, i32 4, ptr @types__rt_sigprocmask, ptr @args__rt_sigprocmask, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__rt_sigprocmask, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__rt_sigprocmask, i64 20) }, ptr @event_enter__rt_sigprocmask, ptr @event_exit__rt_sigprocmask }, align 4
@event_enter__rt_sigprocmask = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.33 { ptr @.str.7 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__rt_sigprocmask, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__rt_sigprocmask = internal global ptr @event_enter__rt_sigprocmask, section "_ftrace_events", align 4
@.str.8 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"sys_exit_rt_sigprocmask\00", [40 x i8] zeroinitializer }, align 32
@event_exit__rt_sigprocmask = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.33 { ptr @.str.8 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__rt_sigprocmask, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__rt_sigprocmask = internal global ptr @event_exit__rt_sigprocmask, section "_ftrace_events", align 4
@.str.9 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"sys_rt_sigprocmask\00", [45 x i8] zeroinitializer }, align 32
@types__rt_sigprocmask = internal global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.72, ptr @.str.116, ptr @.str.116, ptr @.str.117], [16 x i8] zeroinitializer }, align 32
@args__rt_sigprocmask = internal global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121], [16 x i8] zeroinitializer }, align 32
@__p_syscall_meta__rt_sigprocmask = internal global ptr @__syscall_meta__rt_sigprocmask, section "__syscalls_metadata", align 4
@.str.10 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"sys_enter_rt_sigpending\00", [40 x i8] zeroinitializer }, align 32
@__syscall_meta__rt_sigpending = internal global %struct.syscall_metadata { ptr @.str.12, i32 -1, i32 2, ptr @types__rt_sigpending, ptr @args__rt_sigpending, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__rt_sigpending, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__rt_sigpending, i64 20) }, ptr @event_enter__rt_sigpending, ptr @event_exit__rt_sigpending }, align 4
@event_enter__rt_sigpending = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.33 { ptr @.str.10 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__rt_sigpending, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__rt_sigpending = internal global ptr @event_enter__rt_sigpending, section "_ftrace_events", align 4
@.str.11 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"sys_exit_rt_sigpending\00", [41 x i8] zeroinitializer }, align 32
@event_exit__rt_sigpending = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.33 { ptr @.str.11 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__rt_sigpending, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__rt_sigpending = internal global ptr @event_exit__rt_sigpending, section "_ftrace_events", align 4
@.str.12 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sys_rt_sigpending\00", [46 x i8] zeroinitializer }, align 32
@types__rt_sigpending = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.116, ptr @.str.117], [24 x i8] zeroinitializer }, align 32
@args__rt_sigpending = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.122, ptr @.str.121], [24 x i8] zeroinitializer }, align 32
@__p_syscall_meta__rt_sigpending = internal global ptr @__syscall_meta__rt_sigpending, section "__syscalls_metadata", align 4
@sig_sicodes = internal constant { [32 x %struct.anon.111], [32 x i8] } { [32 x %struct.anon.111] [%struct.anon.111 zeroinitializer, %struct.anon.111 zeroinitializer, %struct.anon.111 zeroinitializer, %struct.anon.111 zeroinitializer, %struct.anon.111 { i8 11, i8 3 }, %struct.anon.111 { i8 6, i8 3 }, %struct.anon.111 zeroinitializer, %struct.anon.111 { i8 5, i8 3 }, %struct.anon.111 { i8 15, i8 3 }, %struct.anon.111 zeroinitializer, %struct.anon.111 zeroinitializer, %struct.anon.111 { i8 9, i8 3 }, %struct.anon.111 zeroinitializer, %struct.anon.111 zeroinitializer, %struct.anon.111 zeroinitializer, %struct.anon.111 zeroinitializer, %struct.anon.111 zeroinitializer, %struct.anon.111 { i8 6, i8 9 }, %struct.anon.111 zeroinitializer, %struct.anon.111 zeroinitializer, %struct.anon.111 zeroinitializer, %struct.anon.111 zeroinitializer, %struct.anon.111 zeroinitializer, %struct.anon.111 zeroinitializer, %struct.anon.111 zeroinitializer, %struct.anon.111 zeroinitializer, %struct.anon.111 zeroinitializer, %struct.anon.111 zeroinitializer, %struct.anon.111 zeroinitializer, %struct.anon.111 { i8 6, i8 2 }, %struct.anon.111 zeroinitializer, %struct.anon.111 { i8 2, i8 11 }], [32 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"sys_enter_rt_sigtimedwait\00", [38 x i8] zeroinitializer }, align 32
@__syscall_meta__rt_sigtimedwait = internal global %struct.syscall_metadata { ptr @.str.15, i32 -1, i32 4, ptr @types__rt_sigtimedwait, ptr @args__rt_sigtimedwait, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__rt_sigtimedwait, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__rt_sigtimedwait, i64 20) }, ptr @event_enter__rt_sigtimedwait, ptr @event_exit__rt_sigtimedwait }, align 4
@event_enter__rt_sigtimedwait = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.33 { ptr @.str.13 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__rt_sigtimedwait, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__rt_sigtimedwait = internal global ptr @event_enter__rt_sigtimedwait, section "_ftrace_events", align 4
@.str.14 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"sys_exit_rt_sigtimedwait\00", [39 x i8] zeroinitializer }, align 32
@event_exit__rt_sigtimedwait = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.33 { ptr @.str.14 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__rt_sigtimedwait, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__rt_sigtimedwait = internal global ptr @event_exit__rt_sigtimedwait, section "_ftrace_events", align 4
@.str.15 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"sys_rt_sigtimedwait\00", [44 x i8] zeroinitializer }, align 32
@types__rt_sigtimedwait = internal global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.117], [16 x i8] zeroinitializer }, align 32
@args__rt_sigtimedwait = internal global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.121], [16 x i8] zeroinitializer }, align 32
@__p_syscall_meta__rt_sigtimedwait = internal global ptr @__syscall_meta__rt_sigtimedwait, section "__syscalls_metadata", align 4
@.str.16 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"sys_enter_rt_sigtimedwait_time32\00", [63 x i8] zeroinitializer }, align 32
@__syscall_meta__rt_sigtimedwait_time32 = internal global %struct.syscall_metadata { ptr @.str.18, i32 -1, i32 4, ptr @types__rt_sigtimedwait_time32, ptr @args__rt_sigtimedwait_time32, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__rt_sigtimedwait_time32, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__rt_sigtimedwait_time32, i64 20) }, ptr @event_enter__rt_sigtimedwait_time32, ptr @event_exit__rt_sigtimedwait_time32 }, align 4
@event_enter__rt_sigtimedwait_time32 = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.33 { ptr @.str.16 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__rt_sigtimedwait_time32, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__rt_sigtimedwait_time32 = internal global ptr @event_enter__rt_sigtimedwait_time32, section "_ftrace_events", align 4
@.str.17 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"sys_exit_rt_sigtimedwait_time32\00", [32 x i8] zeroinitializer }, align 32
@event_exit__rt_sigtimedwait_time32 = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.33 { ptr @.str.17 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__rt_sigtimedwait_time32, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__rt_sigtimedwait_time32 = internal global ptr @event_exit__rt_sigtimedwait_time32, section "_ftrace_events", align 4
@.str.18 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"sys_rt_sigtimedwait_time32\00", [37 x i8] zeroinitializer }, align 32
@types__rt_sigtimedwait_time32 = internal global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.123, ptr @.str.124, ptr @.str.129, ptr @.str.117], [16 x i8] zeroinitializer }, align 32
@args__rt_sigtimedwait_time32 = internal global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.121], [16 x i8] zeroinitializer }, align 32
@__p_syscall_meta__rt_sigtimedwait_time32 = internal global ptr @__syscall_meta__rt_sigtimedwait_time32, section "__syscalls_metadata", align 4
@.str.19 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sys_enter_kill\00", [17 x i8] zeroinitializer }, align 32
@__syscall_meta__kill = internal global %struct.syscall_metadata { ptr @.str.21, i32 -1, i32 2, ptr @types__kill, ptr @args__kill, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__kill, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__kill, i64 20) }, ptr @event_enter__kill, ptr @event_exit__kill }, align 4
@event_enter__kill = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.33 { ptr @.str.19 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__kill, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__kill = internal global ptr @event_enter__kill, section "_ftrace_events", align 4
@.str.20 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"sys_exit_kill\00", [18 x i8] zeroinitializer }, align 32
@event_exit__kill = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.33 { ptr @.str.20 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__kill, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__kill = internal global ptr @event_exit__kill, section "_ftrace_events", align 4
@.str.21 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"sys_kill\00", [23 x i8] zeroinitializer }, align 32
@types__kill = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.78, ptr @.str.72], [24 x i8] zeroinitializer }, align 32
@args__kill = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.79, ptr @.str.73], [24 x i8] zeroinitializer }, align 32
@__p_syscall_meta__kill = internal global ptr @__syscall_meta__kill, section "__syscalls_metadata", align 4
@.str.22 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"sys_enter_pidfd_send_signal\00", [36 x i8] zeroinitializer }, align 32
@__syscall_meta__pidfd_send_signal = internal global %struct.syscall_metadata { ptr @.str.24, i32 -1, i32 4, ptr @types__pidfd_send_signal, ptr @args__pidfd_send_signal, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__pidfd_send_signal, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__pidfd_send_signal, i64 20) }, ptr @event_enter__pidfd_send_signal, ptr @event_exit__pidfd_send_signal }, align 4
@event_enter__pidfd_send_signal = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.33 { ptr @.str.22 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__pidfd_send_signal, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__pidfd_send_signal = internal global ptr @event_enter__pidfd_send_signal, section "_ftrace_events", align 4
@.str.23 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"sys_exit_pidfd_send_signal\00", [37 x i8] zeroinitializer }, align 32
@event_exit__pidfd_send_signal = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.33 { ptr @.str.23 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__pidfd_send_signal, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__pidfd_send_signal = internal global ptr @event_exit__pidfd_send_signal, section "_ftrace_events", align 4
@.str.24 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"sys_pidfd_send_signal\00", [42 x i8] zeroinitializer }, align 32
@types__pidfd_send_signal = internal global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.72, ptr @.str.72, ptr @.str.124, ptr @.str.131], [16 x i8] zeroinitializer }, align 32
@args__pidfd_send_signal = internal global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.132, ptr @.str.73, ptr @.str.133, ptr @.str.134], [16 x i8] zeroinitializer }, align 32
@__p_syscall_meta__pidfd_send_signal = internal global ptr @__syscall_meta__pidfd_send_signal, section "__syscalls_metadata", align 4
@.str.25 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"sys_enter_tgkill\00", [47 x i8] zeroinitializer }, align 32
@__syscall_meta__tgkill = internal global %struct.syscall_metadata { ptr @.str.27, i32 -1, i32 3, ptr @types__tgkill, ptr @args__tgkill, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__tgkill, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__tgkill, i64 20) }, ptr @event_enter__tgkill, ptr @event_exit__tgkill }, align 4
@event_enter__tgkill = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.33 { ptr @.str.25 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__tgkill, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__tgkill = internal global ptr @event_enter__tgkill, section "_ftrace_events", align 4
@.str.26 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sys_exit_tgkill\00", [16 x i8] zeroinitializer }, align 32
@event_exit__tgkill = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.33 { ptr @.str.26 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__tgkill, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__tgkill = internal global ptr @event_exit__tgkill, section "_ftrace_events", align 4
@.str.27 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"sys_tgkill\00", [21 x i8] zeroinitializer }, align 32
@types__tgkill = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.78, ptr @.str.78, ptr @.str.72], [20 x i8] zeroinitializer }, align 32
@args__tgkill = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.135, ptr @.str.79, ptr @.str.73], [20 x i8] zeroinitializer }, align 32
@__p_syscall_meta__tgkill = internal global ptr @__syscall_meta__tgkill, section "__syscalls_metadata", align 4
@.str.28 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sys_enter_tkill\00", [16 x i8] zeroinitializer }, align 32
@__syscall_meta__tkill = internal global %struct.syscall_metadata { ptr @.str.30, i32 -1, i32 2, ptr @types__tkill, ptr @args__tkill, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__tkill, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__tkill, i64 20) }, ptr @event_enter__tkill, ptr @event_exit__tkill }, align 4
@event_enter__tkill = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.33 { ptr @.str.28 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__tkill, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__tkill = internal global ptr @event_enter__tkill, section "_ftrace_events", align 4
@.str.29 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sys_exit_tkill\00", [17 x i8] zeroinitializer }, align 32
@event_exit__tkill = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.33 { ptr @.str.29 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__tkill, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__tkill = internal global ptr @event_exit__tkill, section "_ftrace_events", align 4
@.str.30 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"sys_tkill\00", [22 x i8] zeroinitializer }, align 32
@types__tkill = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.78, ptr @.str.72], [24 x i8] zeroinitializer }, align 32
@args__tkill = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.79, ptr @.str.73], [24 x i8] zeroinitializer }, align 32
@__p_syscall_meta__tkill = internal global ptr @__syscall_meta__tkill, section "__syscalls_metadata", align 4
@.str.31 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"sys_enter_rt_sigqueueinfo\00", [38 x i8] zeroinitializer }, align 32
@__syscall_meta__rt_sigqueueinfo = internal global %struct.syscall_metadata { ptr @.str.33, i32 -1, i32 3, ptr @types__rt_sigqueueinfo, ptr @args__rt_sigqueueinfo, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__rt_sigqueueinfo, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__rt_sigqueueinfo, i64 20) }, ptr @event_enter__rt_sigqueueinfo, ptr @event_exit__rt_sigqueueinfo }, align 4
@event_enter__rt_sigqueueinfo = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.33 { ptr @.str.31 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__rt_sigqueueinfo, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__rt_sigqueueinfo = internal global ptr @event_enter__rt_sigqueueinfo, section "_ftrace_events", align 4
@.str.32 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"sys_exit_rt_sigqueueinfo\00", [39 x i8] zeroinitializer }, align 32
@event_exit__rt_sigqueueinfo = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.33 { ptr @.str.32 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__rt_sigqueueinfo, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__rt_sigqueueinfo = internal global ptr @event_exit__rt_sigqueueinfo, section "_ftrace_events", align 4
@.str.33 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"sys_rt_sigqueueinfo\00", [44 x i8] zeroinitializer }, align 32
@types__rt_sigqueueinfo = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.78, ptr @.str.72, ptr @.str.124], [20 x i8] zeroinitializer }, align 32
@args__rt_sigqueueinfo = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.79, ptr @.str.73, ptr @.str.127], [20 x i8] zeroinitializer }, align 32
@__p_syscall_meta__rt_sigqueueinfo = internal global ptr @__syscall_meta__rt_sigqueueinfo, section "__syscalls_metadata", align 4
@.str.34 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"sys_enter_rt_tgsigqueueinfo\00", [36 x i8] zeroinitializer }, align 32
@__syscall_meta__rt_tgsigqueueinfo = internal global %struct.syscall_metadata { ptr @.str.36, i32 -1, i32 4, ptr @types__rt_tgsigqueueinfo, ptr @args__rt_tgsigqueueinfo, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__rt_tgsigqueueinfo, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__rt_tgsigqueueinfo, i64 20) }, ptr @event_enter__rt_tgsigqueueinfo, ptr @event_exit__rt_tgsigqueueinfo }, align 4
@event_enter__rt_tgsigqueueinfo = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.33 { ptr @.str.34 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__rt_tgsigqueueinfo, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__rt_tgsigqueueinfo = internal global ptr @event_enter__rt_tgsigqueueinfo, section "_ftrace_events", align 4
@.str.35 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"sys_exit_rt_tgsigqueueinfo\00", [37 x i8] zeroinitializer }, align 32
@event_exit__rt_tgsigqueueinfo = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.33 { ptr @.str.35 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__rt_tgsigqueueinfo, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__rt_tgsigqueueinfo = internal global ptr @event_exit__rt_tgsigqueueinfo, section "_ftrace_events", align 4
@.str.36 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"sys_rt_tgsigqueueinfo\00", [42 x i8] zeroinitializer }, align 32
@types__rt_tgsigqueueinfo = internal global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.78, ptr @.str.78, ptr @.str.72, ptr @.str.124], [16 x i8] zeroinitializer }, align 32
@args__rt_tgsigqueueinfo = internal global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.135, ptr @.str.79, ptr @.str.73, ptr @.str.127], [16 x i8] zeroinitializer }, align 32
@__p_syscall_meta__rt_tgsigqueueinfo = internal global ptr @__syscall_meta__rt_tgsigqueueinfo, section "__syscalls_metadata", align 4
@__kstrtab_kernel_sigaction = external dso_local constant [0 x i8], align 1
@__kstrtabns_kernel_sigaction = external dso_local constant [0 x i8], align 1
@__ksymtab_kernel_sigaction = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @kernel_sigaction to i32), ptr @__kstrtab_kernel_sigaction, ptr @__kstrtabns_kernel_sigaction }, section "___ksymtab+kernel_sigaction", align 4
@do_sigaction.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.37 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"sys_enter_sigaltstack\00", [42 x i8] zeroinitializer }, align 32
@__syscall_meta__sigaltstack = internal global %struct.syscall_metadata { ptr @.str.39, i32 -1, i32 2, ptr @types__sigaltstack, ptr @args__sigaltstack, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__sigaltstack, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__sigaltstack, i64 20) }, ptr @event_enter__sigaltstack, ptr @event_exit__sigaltstack }, align 4
@event_enter__sigaltstack = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.33 { ptr @.str.37 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__sigaltstack, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__sigaltstack = internal global ptr @event_enter__sigaltstack, section "_ftrace_events", align 4
@.str.38 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"sys_exit_sigaltstack\00", [43 x i8] zeroinitializer }, align 32
@event_exit__sigaltstack = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.33 { ptr @.str.38 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__sigaltstack, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__sigaltstack = internal global ptr @event_exit__sigaltstack, section "_ftrace_events", align 4
@.str.39 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sys_sigaltstack\00", [16 x i8] zeroinitializer }, align 32
@types__sigaltstack = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.137, ptr @.str.138], [24 x i8] zeroinitializer }, align 32
@args__sigaltstack = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.139, ptr @.str.140], [24 x i8] zeroinitializer }, align 32
@__p_syscall_meta__sigaltstack = internal global ptr @__syscall_meta__sigaltstack, section "__syscalls_metadata", align 4
@.str.40 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"sys_enter_sigpending\00", [43 x i8] zeroinitializer }, align 32
@__syscall_meta__sigpending = internal global %struct.syscall_metadata { ptr @.str.42, i32 -1, i32 1, ptr @types__sigpending, ptr @args__sigpending, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__sigpending, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__sigpending, i64 20) }, ptr @event_enter__sigpending, ptr @event_exit__sigpending }, align 4
@event_enter__sigpending = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.33 { ptr @.str.40 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__sigpending, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__sigpending = internal global ptr @event_enter__sigpending, section "_ftrace_events", align 4
@.str.41 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"sys_exit_sigpending\00", [44 x i8] zeroinitializer }, align 32
@event_exit__sigpending = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.33 { ptr @.str.41 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__sigpending, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__sigpending = internal global ptr @event_exit__sigpending, section "_ftrace_events", align 4
@.str.42 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sys_sigpending\00", [17 x i8] zeroinitializer }, align 32
@types__sigpending = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.141], [28 x i8] zeroinitializer }, align 32
@args__sigpending = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.122], [28 x i8] zeroinitializer }, align 32
@__p_syscall_meta__sigpending = internal global ptr @__syscall_meta__sigpending, section "__syscalls_metadata", align 4
@.str.43 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"sys_enter_sigprocmask\00", [42 x i8] zeroinitializer }, align 32
@__syscall_meta__sigprocmask = internal global %struct.syscall_metadata { ptr @.str.45, i32 -1, i32 3, ptr @types__sigprocmask, ptr @args__sigprocmask, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__sigprocmask, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__sigprocmask, i64 20) }, ptr @event_enter__sigprocmask, ptr @event_exit__sigprocmask }, align 4
@event_enter__sigprocmask = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.33 { ptr @.str.43 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__sigprocmask, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__sigprocmask = internal global ptr @event_enter__sigprocmask, section "_ftrace_events", align 4
@.str.44 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"sys_exit_sigprocmask\00", [43 x i8] zeroinitializer }, align 32
@event_exit__sigprocmask = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.33 { ptr @.str.44 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__sigprocmask, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__sigprocmask = internal global ptr @event_exit__sigprocmask, section "_ftrace_events", align 4
@.str.45 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sys_sigprocmask\00", [16 x i8] zeroinitializer }, align 32
@types__sigprocmask = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.72, ptr @.str.141, ptr @.str.141], [20 x i8] zeroinitializer }, align 32
@args__sigprocmask = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.118, ptr @.str.119, ptr @.str.120], [20 x i8] zeroinitializer }, align 32
@__p_syscall_meta__sigprocmask = internal global ptr @__syscall_meta__sigprocmask, section "__syscalls_metadata", align 4
@.str.46 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"sys_enter_rt_sigaction\00", [41 x i8] zeroinitializer }, align 32
@__syscall_meta__rt_sigaction = internal global %struct.syscall_metadata { ptr @.str.48, i32 -1, i32 4, ptr @types__rt_sigaction, ptr @args__rt_sigaction, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__rt_sigaction, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__rt_sigaction, i64 20) }, ptr @event_enter__rt_sigaction, ptr @event_exit__rt_sigaction }, align 4
@event_enter__rt_sigaction = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.33 { ptr @.str.46 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__rt_sigaction, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__rt_sigaction = internal global ptr @event_enter__rt_sigaction, section "_ftrace_events", align 4
@.str.47 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"sys_exit_rt_sigaction\00", [42 x i8] zeroinitializer }, align 32
@event_exit__rt_sigaction = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.33 { ptr @.str.47 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__rt_sigaction, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__rt_sigaction = internal global ptr @event_exit__rt_sigaction, section "_ftrace_events", align 4
@.str.48 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"sys_rt_sigaction\00", [47 x i8] zeroinitializer }, align 32
@types__rt_sigaction = internal global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.72, ptr @.str.142, ptr @.str.143, ptr @.str.117], [16 x i8] zeroinitializer }, align 32
@args__rt_sigaction = internal global { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.73, ptr @.str.144, ptr @.str.145, ptr @.str.121], [16 x i8] zeroinitializer }, align 32
@__p_syscall_meta__rt_sigaction = internal global ptr @__syscall_meta__rt_sigaction, section "__syscalls_metadata", align 4
@.str.49 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"sys_enter_sigaction\00", [44 x i8] zeroinitializer }, align 32
@__syscall_meta__sigaction = internal global %struct.syscall_metadata { ptr @.str.51, i32 -1, i32 3, ptr @types__sigaction, ptr @args__sigaction, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__sigaction, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__sigaction, i64 20) }, ptr @event_enter__sigaction, ptr @event_exit__sigaction }, align 4
@event_enter__sigaction = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.33 { ptr @.str.49 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__sigaction, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__sigaction = internal global ptr @event_enter__sigaction, section "_ftrace_events", align 4
@.str.50 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"sys_exit_sigaction\00", [45 x i8] zeroinitializer }, align 32
@event_exit__sigaction = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.33 { ptr @.str.50 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__sigaction, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__sigaction = internal global ptr @event_exit__sigaction, section "_ftrace_events", align 4
@.str.51 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"sys_sigaction\00", [18 x i8] zeroinitializer }, align 32
@types__sigaction = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.72, ptr @.str.146, ptr @.str.147], [20 x i8] zeroinitializer }, align 32
@args__sigaction = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.73, ptr @.str.144, ptr @.str.145], [20 x i8] zeroinitializer }, align 32
@__p_syscall_meta__sigaction = internal global ptr @__syscall_meta__sigaction, section "__syscalls_metadata", align 4
@.str.52 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"sys_enter_sgetmask\00", [45 x i8] zeroinitializer }, align 32
@__syscall_meta__sgetmask = internal global %struct.syscall_metadata { ptr @.str.54, i32 -1, i32 0, ptr null, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__sgetmask, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__sgetmask, i64 20) }, ptr @event_enter__sgetmask, ptr @event_exit__sgetmask }, align 4
@event_enter__sgetmask = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.33 { ptr @.str.52 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__sgetmask, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__sgetmask = internal global ptr @event_enter__sgetmask, section "_ftrace_events", align 4
@.str.53 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sys_exit_sgetmask\00", [46 x i8] zeroinitializer }, align 32
@event_exit__sgetmask = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.33 { ptr @.str.53 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__sgetmask, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__sgetmask = internal global ptr @event_exit__sgetmask, section "_ftrace_events", align 4
@.str.54 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"sys_sgetmask\00", [19 x i8] zeroinitializer }, align 32
@__p_syscall_meta__sgetmask = internal global ptr @__syscall_meta__sgetmask, section "__syscalls_metadata", align 4
@.str.55 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"sys_enter_ssetmask\00", [45 x i8] zeroinitializer }, align 32
@__syscall_meta__ssetmask = internal global %struct.syscall_metadata { ptr @.str.57, i32 -1, i32 1, ptr @types__ssetmask, ptr @args__ssetmask, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__ssetmask, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__ssetmask, i64 20) }, ptr @event_enter__ssetmask, ptr @event_exit__ssetmask }, align 4
@event_enter__ssetmask = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.33 { ptr @.str.55 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__ssetmask, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__ssetmask = internal global ptr @event_enter__ssetmask, section "_ftrace_events", align 4
@.str.56 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sys_exit_ssetmask\00", [46 x i8] zeroinitializer }, align 32
@event_exit__ssetmask = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.33 { ptr @.str.56 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__ssetmask, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__ssetmask = internal global ptr @event_exit__ssetmask, section "_ftrace_events", align 4
@.str.57 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"sys_ssetmask\00", [19 x i8] zeroinitializer }, align 32
@types__ssetmask = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.72], [28 x i8] zeroinitializer }, align 32
@args__ssetmask = internal global { [1 x ptr], [28 x i8] } { [1 x ptr] [ptr @.str.148], [28 x i8] zeroinitializer }, align 32
@__p_syscall_meta__ssetmask = internal global ptr @__syscall_meta__ssetmask, section "__syscalls_metadata", align 4
@.str.58 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sys_enter_pause\00", [16 x i8] zeroinitializer }, align 32
@__syscall_meta__pause = internal global %struct.syscall_metadata { ptr @.str.60, i32 -1, i32 0, ptr null, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__pause, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__pause, i64 20) }, ptr @event_enter__pause, ptr @event_exit__pause }, align 4
@event_enter__pause = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.33 { ptr @.str.58 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__pause, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__pause = internal global ptr @event_enter__pause, section "_ftrace_events", align 4
@.str.59 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sys_exit_pause\00", [17 x i8] zeroinitializer }, align 32
@event_exit__pause = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.33 { ptr @.str.59 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__pause, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__pause = internal global ptr @event_exit__pause, section "_ftrace_events", align 4
@.str.60 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"sys_pause\00", [22 x i8] zeroinitializer }, align 32
@__p_syscall_meta__pause = internal global ptr @__syscall_meta__pause, section "__syscalls_metadata", align 4
@.str.61 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"sys_enter_rt_sigsuspend\00", [40 x i8] zeroinitializer }, align 32
@__syscall_meta__rt_sigsuspend = internal global %struct.syscall_metadata { ptr @.str.63, i32 -1, i32 2, ptr @types__rt_sigsuspend, ptr @args__rt_sigsuspend, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__rt_sigsuspend, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__rt_sigsuspend, i64 20) }, ptr @event_enter__rt_sigsuspend, ptr @event_exit__rt_sigsuspend }, align 4
@event_enter__rt_sigsuspend = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.33 { ptr @.str.61 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__rt_sigsuspend, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__rt_sigsuspend = internal global ptr @event_enter__rt_sigsuspend, section "_ftrace_events", align 4
@.str.62 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"sys_exit_rt_sigsuspend\00", [41 x i8] zeroinitializer }, align 32
@event_exit__rt_sigsuspend = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.33 { ptr @.str.62 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__rt_sigsuspend, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__rt_sigsuspend = internal global ptr @event_exit__rt_sigsuspend, section "_ftrace_events", align 4
@.str.63 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sys_rt_sigsuspend\00", [46 x i8] zeroinitializer }, align 32
@types__rt_sigsuspend = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.116, ptr @.str.117], [24 x i8] zeroinitializer }, align 32
@args__rt_sigsuspend = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.149, ptr @.str.121], [24 x i8] zeroinitializer }, align 32
@__p_syscall_meta__rt_sigsuspend = internal global ptr @__syscall_meta__rt_sigsuspend, section "__syscalls_metadata", align 4
@.str.64 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"sys_enter_sigsuspend\00", [43 x i8] zeroinitializer }, align 32
@__syscall_meta__sigsuspend = internal global %struct.syscall_metadata { ptr @.str.66, i32 -1, i32 3, ptr @types__sigsuspend, ptr @args__sigsuspend, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__sigsuspend, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__sigsuspend, i64 20) }, ptr @event_enter__sigsuspend, ptr @event_exit__sigsuspend }, align 4
@event_enter__sigsuspend = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.33 { ptr @.str.64 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__sigsuspend, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__sigsuspend = internal global ptr @event_enter__sigsuspend, section "_ftrace_events", align 4
@.str.65 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"sys_exit_sigsuspend\00", [44 x i8] zeroinitializer }, align 32
@event_exit__sigsuspend = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.33 { ptr @.str.65 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.34 zeroinitializer, ptr @__syscall_meta__sigsuspend, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__sigsuspend = internal global ptr @event_exit__sigsuspend, section "_ftrace_events", align 4
@.str.66 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sys_sigsuspend\00", [17 x i8] zeroinitializer }, align 32
@types__sigsuspend = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.72, ptr @.str.72, ptr @.str.150], [20 x i8] zeroinitializer }, align 32
@args__sigsuspend = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.151, ptr @.str.152, ptr @.str.153], [20 x i8] zeroinitializer }, align 32
@__p_syscall_meta__sigsuspend = internal global ptr @__syscall_meta__sigsuspend, section "__syscalls_metadata", align 4
@.str.67 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"sigqueue\00", [23 x i8] zeroinitializer }, align 32
@sigqueue_cachep = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@kdb_send_sig.kdb_prev_t = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@.str.68 = internal constant { [95 x i8], [33 x i8] } { [95 x i8] c"Can't do kill command now.\0AThe sigmask lock is held somewhere else in kernel, try again later\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [181 x i8], [43 x i8] } { [181 x i8] c"Process is not RUNNING, sending a signal from kdb risks deadlock\0Aon the run queue locks. The signal has _not_ been sent.\0AReissue the kill command if you want to risk the deadlock.\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"Fail to deliver Signal %d to process %d.\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"Signal %d is sent to process %d.\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"sig\00", [28 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"errno\00", [26 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"code\00", [27 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"char[TASK_COMM_LEN]\00", [44 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"comm\00", [27 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"pid_t\00", [26 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"pid\00", [28 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"group\00", [26 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"result\00", [25 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"sig=%d errno=%d code=%d comm=%s pid=%d grp=%d res=%d\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unsigned long\00", [18 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"sa_handler\00", [21 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"sa_flags\00", [23 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"sig=%d errno=%d code=%d sa_handler=%lx sa_flags=%lx\0A\00", [43 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@system_freezing_cnt = external dso_local global %struct.atomic_t, align 4
@send_signal.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.89 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.91 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@kill_ok_by_cred.__warned.92 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@kill_as_cred_perm.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__send_signal.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__sigqueue_alloc.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@print_dropped_signal.ratelimit_state = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.94, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"ratelimit_state.lock\00", [43 x i8] zeroinitializer }, align 32
@__func__.print_dropped_signal = private unnamed_addr constant [21 x i8] c"print_dropped_signal\00", align 1
@print_dropped_signal._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.95, ptr @__func__.print_dropped_signal, ptr @.str, i32 264, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"\016%s/%d: reached RLIMIT_SIGPENDING, dropped signal %d\0A\00", [41 x i8] zeroinitializer }, align 32
@print_dropped_signal._entry_ptr = internal global ptr @print_dropped_signal._entry, section ".printk_index", align 4
@prepare_signal.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@prepare_signal.__warned.96 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@ptrace_trap_notify.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.97 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"include/linux/sched/signal.h\00", [35 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"include/trace/events/signal.h\00", [34 x i8] zeroinitializer }, align 32
@trace_signal_generate.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.99 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/freezer.h\00", [40 x i8] zeroinitializer }, align 32
@do_notify_parent_cldstop.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@do_notify_parent_cldstop.__warned.103 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_signal_deliver.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@do_signal_stop.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@do_jobctl_trap.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@do_jobctl_trap.__already_done.105 = internal unnamed_addr global i1 false, section ".data.once", align 1
@ptrace_signal.__warned.106 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@print_fatal_signal._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.107, ptr @.str.108, ptr @.str, i32 1254, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\016potentially unexpected fatal signal %d.\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"print_fatal_signal\00", [45 x i8] zeroinitializer }, align 32
@print_fatal_signal._entry_ptr = internal global ptr @print_fatal_signal._entry, section ".printk_index", align 4
@cgroup_threadgroup_rwsem = external dso_local global %struct.percpu_rw_semaphore, align 4
@.str.109 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"include/linux/percpu-rwsem.h\00", [35 x i8] zeroinitializer }, align 32
@rcu_sync_is_idle.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.110 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcu_sync.h\00", [39 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"suspicious rcu_sync_is_idle() usage\00", [60 x i8] zeroinitializer }, align 32
@task_participate_group_stop.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@task_participate_group_stop.__already_done.112 = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.115 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/uaccess.h\00", [40 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"sigset_t *\00", [21 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"size_t\00", [25 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"how\00", [28 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"nset\00", [27 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"oset\00", [27 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"sigsetsize\00", [21 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"uset\00", [27 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"const sigset_t *\00", [47 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"siginfo_t *\00", [20 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"const struct __kernel_timespec *\00", [63 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"uthese\00", [25 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"uinfo\00", [26 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"uts\00", [28 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"const struct old_timespec32 *\00", [34 x i8] zeroinitializer }, align 32
@init_task = external dso_local global %struct.task_struct, align 128
@.str.131 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"pidfd\00", [26 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"info\00", [27 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"flags\00", [26 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"tgid\00", [27 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"const stack_t *\00", [16 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"stack_t *\00", [22 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"uss\00", [28 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"uoss\00", [27 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"old_sigset_t *\00", [17 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"const struct sigaction *\00", [39 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"struct sigaction *\00", [45 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"act\00", [28 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"oact\00", [27 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"const struct old_sigaction *\00", [35 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"struct old_sigaction *\00", [41 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"newmask\00", [24 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"unewset\00", [24 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"old_sigset_t\00", [19 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"unused1\00", [24 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"unused2\00", [24 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"mask\00", [27 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.154 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.155 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.156 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.157 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.158 = internal global [5 x i64] [i64 3, i64 8, i64 0, i64 9, i64 10]
@__sancov_gen_cov_switch_values.159 = internal global [4 x i64] [i64 2, i64 32, i64 4294967291, i64 4294967294]
@__sancov_gen_cov_switch_values.160 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.161 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.162 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.163 = internal global [5 x i64] [i64 3, i64 32, i64 4, i64 5, i64 6]
@__sancov_gen_cov_switch_values.164 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.165 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.166 = internal global [4 x i64] [i64 2, i64 32, i64 4294967291, i64 4294967294]
@__sancov_gen_cov_switch_values.167 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967295]
@__sancov_gen_cov_switch_values.168 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.169 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@___asan_gen_.170 = private unnamed_addr constant [31 x i8] c"str__signal__trace_system_name\00", align 1
@___asan_gen_.171 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.172 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.171, i32 36, i32 1 }
@___asan_gen_.173 = private unnamed_addr constant [35 x i8] c"trace_event_fields_signal_generate\00", align 1
@___asan_gen_.176 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_signal_generate\00", align 1
@___asan_gen_.179 = private unnamed_addr constant [26 x i8] c"print_fmt_signal_generate\00", align 1
@___asan_gen_.182 = private unnamed_addr constant [22 x i8] c"event_signal_generate\00", align 1
@___asan_gen_.185 = private unnamed_addr constant [34 x i8] c"trace_event_fields_signal_deliver\00", align 1
@___asan_gen_.188 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_signal_deliver\00", align 1
@___asan_gen_.191 = private unnamed_addr constant [25 x i8] c"print_fmt_signal_deliver\00", align 1
@___asan_gen_.194 = private unnamed_addr constant [21 x i8] c"event_signal_deliver\00", align 1
@___asan_gen_.202 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 1392, i32 13 }
@___asan_gen_.205 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 1462, i32 2 }
@___asan_gen_.209 = private unnamed_addr constant [29 x i8] c"event_enter__restart_syscall\00", align 1
@___asan_gen_.215 = private unnamed_addr constant [28 x i8] c"event_exit__restart_syscall\00", align 1
@___asan_gen_.220 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 3002, i32 1 }
@___asan_gen_.224 = private unnamed_addr constant [28 x i8] c"event_enter__rt_sigprocmask\00", align 1
@___asan_gen_.230 = private unnamed_addr constant [27 x i8] c"event_exit__rt_sigprocmask\00", align 1
@___asan_gen_.236 = private unnamed_addr constant [22 x i8] c"types__rt_sigprocmask\00", align 1
@___asan_gen_.239 = private unnamed_addr constant [21 x i8] c"args__rt_sigprocmask\00", align 1
@___asan_gen_.245 = private unnamed_addr constant [27 x i8] c"event_enter__rt_sigpending\00", align 1
@___asan_gen_.251 = private unnamed_addr constant [26 x i8] c"event_exit__rt_sigpending\00", align 1
@___asan_gen_.257 = private unnamed_addr constant [21 x i8] c"types__rt_sigpending\00", align 1
@___asan_gen_.260 = private unnamed_addr constant [20 x i8] c"args__rt_sigpending\00", align 1
@___asan_gen_.263 = private unnamed_addr constant [12 x i8] c"sig_sicodes\00", align 1
@___asan_gen_.265 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 3249, i32 3 }
@___asan_gen_.269 = private unnamed_addr constant [29 x i8] c"event_enter__rt_sigtimedwait\00", align 1
@___asan_gen_.275 = private unnamed_addr constant [28 x i8] c"event_exit__rt_sigtimedwait\00", align 1
@___asan_gen_.281 = private unnamed_addr constant [23 x i8] c"types__rt_sigtimedwait\00", align 1
@___asan_gen_.284 = private unnamed_addr constant [22 x i8] c"args__rt_sigtimedwait\00", align 1
@___asan_gen_.290 = private unnamed_addr constant [36 x i8] c"event_enter__rt_sigtimedwait_time32\00", align 1
@___asan_gen_.296 = private unnamed_addr constant [35 x i8] c"event_exit__rt_sigtimedwait_time32\00", align 1
@___asan_gen_.302 = private unnamed_addr constant [30 x i8] c"types__rt_sigtimedwait_time32\00", align 1
@___asan_gen_.305 = private unnamed_addr constant [29 x i8] c"args__rt_sigtimedwait_time32\00", align 1
@___asan_gen_.311 = private unnamed_addr constant [18 x i8] c"event_enter__kill\00", align 1
@___asan_gen_.317 = private unnamed_addr constant [17 x i8] c"event_exit__kill\00", align 1
@___asan_gen_.323 = private unnamed_addr constant [12 x i8] c"types__kill\00", align 1
@___asan_gen_.326 = private unnamed_addr constant [11 x i8] c"args__kill\00", align 1
@___asan_gen_.328 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 3773, i32 1 }
@___asan_gen_.332 = private unnamed_addr constant [31 x i8] c"event_enter__pidfd_send_signal\00", align 1
@___asan_gen_.338 = private unnamed_addr constant [30 x i8] c"event_exit__pidfd_send_signal\00", align 1
@___asan_gen_.344 = private unnamed_addr constant [25 x i8] c"types__pidfd_send_signal\00", align 1
@___asan_gen_.347 = private unnamed_addr constant [24 x i8] c"args__pidfd_send_signal\00", align 1
@___asan_gen_.353 = private unnamed_addr constant [20 x i8] c"event_enter__tgkill\00", align 1
@___asan_gen_.359 = private unnamed_addr constant [19 x i8] c"event_exit__tgkill\00", align 1
@___asan_gen_.365 = private unnamed_addr constant [14 x i8] c"types__tgkill\00", align 1
@___asan_gen_.368 = private unnamed_addr constant [13 x i8] c"args__tgkill\00", align 1
@___asan_gen_.374 = private unnamed_addr constant [19 x i8] c"event_enter__tkill\00", align 1
@___asan_gen_.380 = private unnamed_addr constant [18 x i8] c"event_exit__tkill\00", align 1
@___asan_gen_.386 = private unnamed_addr constant [13 x i8] c"types__tkill\00", align 1
@___asan_gen_.389 = private unnamed_addr constant [12 x i8] c"args__tkill\00", align 1
@___asan_gen_.391 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 3970, i32 1 }
@___asan_gen_.395 = private unnamed_addr constant [29 x i8] c"event_enter__rt_sigqueueinfo\00", align 1
@___asan_gen_.401 = private unnamed_addr constant [28 x i8] c"event_exit__rt_sigqueueinfo\00", align 1
@___asan_gen_.407 = private unnamed_addr constant [23 x i8] c"types__rt_sigqueueinfo\00", align 1
@___asan_gen_.410 = private unnamed_addr constant [22 x i8] c"args__rt_sigqueueinfo\00", align 1
@___asan_gen_.412 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 3998, i32 1 }
@___asan_gen_.416 = private unnamed_addr constant [31 x i8] c"event_enter__rt_tgsigqueueinfo\00", align 1
@___asan_gen_.422 = private unnamed_addr constant [30 x i8] c"event_exit__rt_tgsigqueueinfo\00", align 1
@___asan_gen_.428 = private unnamed_addr constant [25 x i8] c"types__rt_tgsigqueueinfo\00", align 1
@___asan_gen_.431 = private unnamed_addr constant [24 x i8] c"args__rt_tgsigqueueinfo\00", align 1
@___asan_gen_.433 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 4038, i32 1 }
@___asan_gen_.437 = private unnamed_addr constant [25 x i8] c"event_enter__sigaltstack\00", align 1
@___asan_gen_.443 = private unnamed_addr constant [24 x i8] c"event_exit__sigaltstack\00", align 1
@___asan_gen_.449 = private unnamed_addr constant [19 x i8] c"types__sigaltstack\00", align 1
@___asan_gen_.452 = private unnamed_addr constant [18 x i8] c"args__sigaltstack\00", align 1
@___asan_gen_.458 = private unnamed_addr constant [24 x i8] c"event_enter__sigpending\00", align 1
@___asan_gen_.464 = private unnamed_addr constant [23 x i8] c"event_exit__sigpending\00", align 1
@___asan_gen_.470 = private unnamed_addr constant [18 x i8] c"types__sigpending\00", align 1
@___asan_gen_.473 = private unnamed_addr constant [17 x i8] c"args__sigpending\00", align 1
@___asan_gen_.479 = private unnamed_addr constant [25 x i8] c"event_enter__sigprocmask\00", align 1
@___asan_gen_.485 = private unnamed_addr constant [24 x i8] c"event_exit__sigprocmask\00", align 1
@___asan_gen_.491 = private unnamed_addr constant [19 x i8] c"types__sigprocmask\00", align 1
@___asan_gen_.494 = private unnamed_addr constant [18 x i8] c"args__sigprocmask\00", align 1
@___asan_gen_.496 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 4364, i32 1 }
@___asan_gen_.500 = private unnamed_addr constant [26 x i8] c"event_enter__rt_sigaction\00", align 1
@___asan_gen_.506 = private unnamed_addr constant [25 x i8] c"event_exit__rt_sigaction\00", align 1
@___asan_gen_.512 = private unnamed_addr constant [20 x i8] c"types__rt_sigaction\00", align 1
@___asan_gen_.515 = private unnamed_addr constant [19 x i8] c"args__rt_sigaction\00", align 1
@___asan_gen_.521 = private unnamed_addr constant [23 x i8] c"event_enter__sigaction\00", align 1
@___asan_gen_.527 = private unnamed_addr constant [22 x i8] c"event_exit__sigaction\00", align 1
@___asan_gen_.533 = private unnamed_addr constant [17 x i8] c"types__sigaction\00", align 1
@___asan_gen_.536 = private unnamed_addr constant [16 x i8] c"args__sigaction\00", align 1
@___asan_gen_.542 = private unnamed_addr constant [22 x i8] c"event_enter__sgetmask\00", align 1
@___asan_gen_.548 = private unnamed_addr constant [21 x i8] c"event_exit__sgetmask\00", align 1
@___asan_gen_.553 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 4566, i32 1 }
@___asan_gen_.557 = private unnamed_addr constant [22 x i8] c"event_enter__ssetmask\00", align 1
@___asan_gen_.563 = private unnamed_addr constant [21 x i8] c"event_exit__ssetmask\00", align 1
@___asan_gen_.569 = private unnamed_addr constant [16 x i8] c"types__ssetmask\00", align 1
@___asan_gen_.572 = private unnamed_addr constant [15 x i8] c"args__ssetmask\00", align 1
@___asan_gen_.578 = private unnamed_addr constant [19 x i8] c"event_enter__pause\00", align 1
@___asan_gen_.584 = private unnamed_addr constant [18 x i8] c"event_exit__pause\00", align 1
@___asan_gen_.589 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 4605, i32 1 }
@___asan_gen_.593 = private unnamed_addr constant [27 x i8] c"event_enter__rt_sigsuspend\00", align 1
@___asan_gen_.599 = private unnamed_addr constant [26 x i8] c"event_exit__rt_sigsuspend\00", align 1
@___asan_gen_.605 = private unnamed_addr constant [21 x i8] c"types__rt_sigsuspend\00", align 1
@___asan_gen_.608 = private unnamed_addr constant [20 x i8] c"args__rt_sigsuspend\00", align 1
@___asan_gen_.614 = private unnamed_addr constant [24 x i8] c"event_enter__sigsuspend\00", align 1
@___asan_gen_.620 = private unnamed_addr constant [23 x i8] c"event_exit__sigsuspend\00", align 1
@___asan_gen_.626 = private unnamed_addr constant [18 x i8] c"types__sigsuspend\00", align 1
@___asan_gen_.629 = private unnamed_addr constant [17 x i8] c"args__sigsuspend\00", align 1
@___asan_gen_.634 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 4761, i32 20 }
@___asan_gen_.635 = private unnamed_addr constant [16 x i8] c"sigqueue_cachep\00", align 1
@___asan_gen_.637 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 63, i32 27 }
@___asan_gen_.638 = private unnamed_addr constant [11 x i8] c"kdb_prev_t\00", align 1
@___asan_gen_.640 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 4774, i32 29 }
@___asan_gen_.643 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 4777, i32 14 }
@___asan_gen_.646 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 4786, i32 14 }
@___asan_gen_.649 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 4797, i32 14 }
@___asan_gen_.652 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 4800, i32 14 }
@___asan_gen_.697 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.723, i32 96, i32 1 }
@___asan_gen_.703 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.705, i32 695, i32 2 }
@___asan_gen_.705 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.706 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.705, i32 723, i32 2 }
@___asan_gen_.707 = private unnamed_addr constant [16 x i8] c"ratelimit_state\00", align 1
@___asan_gen_.712 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 255, i32 9 }
@___asan_gen_.718 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 263, i32 2 }
@___asan_gen_.720 = private unnamed_addr constant [32 x i8] c"../include/linux/sched/signal.h\00", align 1
@___asan_gen_.721 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.720, i32 270, i32 2 }
@___asan_gen_.723 = private unnamed_addr constant [33 x i8] c"../include/trace/events/signal.h\00", align 1
@___asan_gen_.724 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.723, i32 50, i32 1 }
@___asan_gen_.726 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.727 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.726, i32 108, i32 2 }
@___asan_gen_.729 = private unnamed_addr constant [27 x i8] c"../include/linux/freezer.h\00", align 1
@___asan_gen_.730 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.729, i32 57, i32 2 }
@___asan_gen_.731 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.739 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 1254, i32 2 }
@___asan_gen_.741 = private unnamed_addr constant [32 x i8] c"../include/linux/percpu-rwsem.h\00", align 1
@___asan_gen_.742 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.741, i32 49, i32 2 }
@___asan_gen_.747 = private unnamed_addr constant [28 x i8] c"../include/linux/rcu_sync.h\00", align 1
@___asan_gen_.748 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.747, i32 34, i32 2 }
@___asan_gen_.750 = private unnamed_addr constant [27 x i8] c"../include/linux/uaccess.h\00", align 1
@___asan_gen_.751 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 156, i32 2 }
@___asan_gen_.769 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 3145, i32 1 }
@___asan_gen_.772 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 3217, i32 1 }
@___asan_gen_.790 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 3629, i32 1 }
@___asan_gen_.793 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 3662, i32 1 }
@___asan_gen_.805 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 3848, i32 1 }
@___asan_gen_.808 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 3954, i32 1 }
@___asan_gen_.820 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 4229, i32 1 }
@___asan_gen_.823 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 4325, i32 1 }
@___asan_gen_.835 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 4412, i32 1 }
@___asan_gen_.841 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 4484, i32 1 }
@___asan_gen_.844 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 4572, i32 1 }
@___asan_gen_.847 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 4635, i32 1 }
@___asan_gen_.857 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.858 = private constant [19 x i8] c"../kernel/signal.c\00", align 1
@___asan_gen_.859 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.858, i32 4672, i32 1 }
@llvm.compiler.used = appending global [339 x ptr] [ptr @__bpf_trace_tp_map_signal_deliver, ptr @__bpf_trace_tp_map_signal_generate, ptr @__event_enter__kill, ptr @__event_enter__pause, ptr @__event_enter__pidfd_send_signal, ptr @__event_enter__restart_syscall, ptr @__event_enter__rt_sigaction, ptr @__event_enter__rt_sigpending, ptr @__event_enter__rt_sigprocmask, ptr @__event_enter__rt_sigqueueinfo, ptr @__event_enter__rt_sigsuspend, ptr @__event_enter__rt_sigtimedwait, ptr @__event_enter__rt_sigtimedwait_time32, ptr @__event_enter__rt_tgsigqueueinfo, ptr @__event_enter__sgetmask, ptr @__event_enter__sigaction, ptr @__event_enter__sigaltstack, ptr @__event_enter__sigpending, ptr @__event_enter__sigprocmask, ptr @__event_enter__sigsuspend, ptr @__event_enter__ssetmask, ptr @__event_enter__tgkill, ptr @__event_enter__tkill, ptr @__event_exit__kill, ptr @__event_exit__pause, ptr @__event_exit__pidfd_send_signal, ptr @__event_exit__restart_syscall, ptr @__event_exit__rt_sigaction, ptr @__event_exit__rt_sigpending, ptr @__event_exit__rt_sigprocmask, ptr @__event_exit__rt_sigqueueinfo, ptr @__event_exit__rt_sigsuspend, ptr @__event_exit__rt_sigtimedwait, ptr @__event_exit__rt_sigtimedwait_time32, ptr @__event_exit__rt_tgsigqueueinfo, ptr @__event_exit__sgetmask, ptr @__event_exit__sigaction, ptr @__event_exit__sigaltstack, ptr @__event_exit__sigpending, ptr @__event_exit__sigprocmask, ptr @__event_exit__sigsuspend, ptr @__event_exit__ssetmask, ptr @__event_exit__tgkill, ptr @__event_exit__tkill, ptr @__event_signal_deliver, ptr @__event_signal_generate, ptr @__ksymtab_dequeue_signal, ptr @__ksymtab_flush_signals, ptr @__ksymtab_force_sig, ptr @__ksymtab_kernel_sigaction, ptr @__ksymtab_kill_pgrp, ptr @__ksymtab_kill_pid, ptr @__ksymtab_kill_pid_usb_asyncio, ptr @__ksymtab_recalc_sigpending, ptr @__ksymtab_send_sig, ptr @__ksymtab_send_sig_info, ptr @__ksymtab_send_sig_mceerr, ptr @__ksymtab_sigprocmask, ptr @__p_syscall_meta__kill, ptr @__p_syscall_meta__pause, ptr @__p_syscall_meta__pidfd_send_signal, ptr @__p_syscall_meta__restart_syscall, ptr @__p_syscall_meta__rt_sigaction, ptr @__p_syscall_meta__rt_sigpending, ptr @__p_syscall_meta__rt_sigprocmask, ptr @__p_syscall_meta__rt_sigqueueinfo, ptr @__p_syscall_meta__rt_sigsuspend, ptr @__p_syscall_meta__rt_sigtimedwait, ptr @__p_syscall_meta__rt_sigtimedwait_time32, ptr @__p_syscall_meta__rt_tgsigqueueinfo, ptr @__p_syscall_meta__sgetmask, ptr @__p_syscall_meta__sigaction, ptr @__p_syscall_meta__sigaltstack, ptr @__p_syscall_meta__sigpending, ptr @__p_syscall_meta__sigprocmask, ptr @__p_syscall_meta__sigsuspend, ptr @__p_syscall_meta__ssetmask, ptr @__p_syscall_meta__tgkill, ptr @__p_syscall_meta__tkill, ptr @__setup_setup_print_fatal_signals, ptr @__syscall_meta__kill, ptr @__syscall_meta__pause, ptr @__syscall_meta__pidfd_send_signal, ptr @__syscall_meta__restart_syscall, ptr @__syscall_meta__rt_sigaction, ptr @__syscall_meta__rt_sigpending, ptr @__syscall_meta__rt_sigprocmask, ptr @__syscall_meta__rt_sigqueueinfo, ptr @__syscall_meta__rt_sigsuspend, ptr @__syscall_meta__rt_sigtimedwait, ptr @__syscall_meta__rt_sigtimedwait_time32, ptr @__syscall_meta__rt_tgsigqueueinfo, ptr @__syscall_meta__sgetmask, ptr @__syscall_meta__sigaction, ptr @__syscall_meta__sigaltstack, ptr @__syscall_meta__sigpending, ptr @__syscall_meta__sigprocmask, ptr @__syscall_meta__sigsuspend, ptr @__syscall_meta__ssetmask, ptr @__syscall_meta__tgkill, ptr @__syscall_meta__tkill, ptr @__tracepoint_ptr_signal_deliver, ptr @__tracepoint_ptr_signal_generate, ptr @__tracepoint_signal_deliver, ptr @__tracepoint_signal_generate, ptr @event_class_signal_deliver, ptr @event_class_signal_generate, ptr @event_enter__kill, ptr @event_enter__pause, ptr @event_enter__pidfd_send_signal, ptr @event_enter__restart_syscall, ptr @event_enter__rt_sigaction, ptr @event_enter__rt_sigpending, ptr @event_enter__rt_sigprocmask, ptr @event_enter__rt_sigqueueinfo, ptr @event_enter__rt_sigsuspend, ptr @event_enter__rt_sigtimedwait, ptr @event_enter__rt_sigtimedwait_time32, ptr @event_enter__rt_tgsigqueueinfo, ptr @event_enter__sgetmask, ptr @event_enter__sigaction, ptr @event_enter__sigaltstack, ptr @event_enter__sigpending, ptr @event_enter__sigprocmask, ptr @event_enter__sigsuspend, ptr @event_enter__ssetmask, ptr @event_enter__tgkill, ptr @event_enter__tkill, ptr @event_exit__kill, ptr @event_exit__pause, ptr @event_exit__pidfd_send_signal, ptr @event_exit__restart_syscall, ptr @event_exit__rt_sigaction, ptr @event_exit__rt_sigpending, ptr @event_exit__rt_sigprocmask, ptr @event_exit__rt_sigqueueinfo, ptr @event_exit__rt_sigsuspend, ptr @event_exit__rt_sigtimedwait, ptr @event_exit__rt_sigtimedwait_time32, ptr @event_exit__rt_tgsigqueueinfo, ptr @event_exit__sgetmask, ptr @event_exit__sigaction, ptr @event_exit__sigaltstack, ptr @event_exit__sigpending, ptr @event_exit__sigprocmask, ptr @event_exit__sigsuspend, ptr @event_exit__ssetmask, ptr @event_exit__tgkill, ptr @event_exit__tkill, ptr @event_signal_deliver, ptr @event_signal_generate, ptr @print_dropped_signal._entry, ptr @print_dropped_signal._entry_ptr, ptr @print_fatal_signal._entry, ptr @print_fatal_signal._entry_ptr, ptr @str__signal__trace_system_name, ptr @trace_event_fields_signal_generate, ptr @trace_event_type_funcs_signal_generate, ptr @print_fmt_signal_generate, ptr @trace_event_fields_signal_deliver, ptr @trace_event_type_funcs_signal_deliver, ptr @print_fmt_signal_deliver, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @types__rt_sigprocmask, ptr @args__rt_sigprocmask, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @types__rt_sigpending, ptr @args__rt_sigpending, ptr @sig_sicodes, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @types__rt_sigtimedwait, ptr @args__rt_sigtimedwait, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @types__rt_sigtimedwait_time32, ptr @args__rt_sigtimedwait_time32, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @types__kill, ptr @args__kill, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @types__pidfd_send_signal, ptr @args__pidfd_send_signal, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @types__tgkill, ptr @args__tgkill, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @types__tkill, ptr @args__tkill, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @types__rt_sigqueueinfo, ptr @args__rt_sigqueueinfo, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @types__rt_tgsigqueueinfo, ptr @args__rt_tgsigqueueinfo, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @types__sigaltstack, ptr @args__sigaltstack, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @types__sigpending, ptr @args__sigpending, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @types__sigprocmask, ptr @args__sigprocmask, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @types__rt_sigaction, ptr @args__rt_sigaction, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @types__sigaction, ptr @args__sigaction, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @types__ssetmask, ptr @args__ssetmask, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @types__rt_sigsuspend, ptr @args__rt_sigsuspend, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @types__sigsuspend, ptr @args__sigsuspend, ptr @.str.67, ptr @sigqueue_cachep, ptr @kdb_send_sig.kdb_prev_t, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @print_dropped_signal.ratelimit_state, ptr @.str.94, ptr @.str.95, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.102, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153], section "llvm.metadata"
@0 = internal global [230 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__signal__trace_system_name to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.170 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.172 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_signal_generate to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.173 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_signal_generate to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.176 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_signal_generate to i32), i32 134, i32 192, i32 ptrtoint (ptr @___asan_gen_.179 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_signal_generate to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.182 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_signal_deliver to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_signal_deliver to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.188 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_signal_deliver to i32), i32 119, i32 160, i32 ptrtoint (ptr @___asan_gen_.191 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_signal_deliver to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.194 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__restart_syscall to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.209 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__restart_syscall to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__rt_sigprocmask to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.224 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__rt_sigprocmask to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.230 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__rt_sigprocmask to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.236 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__rt_sigprocmask to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.239 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__rt_sigpending to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.245 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__rt_sigpending to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.251 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__rt_sigpending to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.257 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__rt_sigpending to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.260 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sig_sicodes to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.263 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__rt_sigtimedwait to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.269 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__rt_sigtimedwait to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.275 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__rt_sigtimedwait to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.281 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__rt_sigtimedwait to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.284 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.793 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__rt_sigtimedwait_time32 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.290 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.793 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.793 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__rt_sigtimedwait_time32 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.296 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.793 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.793 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__rt_sigtimedwait_time32 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.302 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.793 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__rt_sigtimedwait_time32 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.793 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__kill to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.311 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__kill to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.317 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__kill to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.323 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__kill to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.326 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__pidfd_send_signal to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.332 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__pidfd_send_signal to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.338 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__pidfd_send_signal to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__pidfd_send_signal to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.347 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__tgkill to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__tgkill to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.359 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__tgkill to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__tgkill to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.368 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.391 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__tkill to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.391 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.391 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__tkill to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.380 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.391 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.391 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__tkill to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.386 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.391 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__tkill to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.389 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.391 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__rt_sigqueueinfo to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__rt_sigqueueinfo to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__rt_sigqueueinfo to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.407 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__rt_sigqueueinfo to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__rt_tgsigqueueinfo to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__rt_tgsigqueueinfo to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.422 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__rt_tgsigqueueinfo to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__rt_tgsigqueueinfo to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.431 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__sigaltstack to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__sigaltstack to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__sigaltstack to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__sigaltstack to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__sigpending to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__sigpending to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__sigpending to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__sigpending to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__sigprocmask to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__sigprocmask to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__sigprocmask to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__sigprocmask to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.494 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__rt_sigaction to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__rt_sigaction to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.506 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__rt_sigaction to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.512 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__rt_sigaction to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__sigaction to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.521 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__sigaction to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__sigaction to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.533 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__sigaction to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__sgetmask to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.542 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__sgetmask to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__ssetmask to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.557 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__ssetmask to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.563 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__ssetmask to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__ssetmask to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.572 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.589 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__pause to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.589 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.589 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__pause to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.589 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.589 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__rt_sigsuspend to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__rt_sigsuspend to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.599 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__rt_sigsuspend to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__rt_sigsuspend to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__sigsuspend to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__sigsuspend to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.620 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__sigsuspend to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__sigsuspend to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.629 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.634 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sigqueue_cachep to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.635 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @kdb_send_sig.kdb_prev_t to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.640 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 95, i32 128, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 181, i32 224, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.652 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_dropped_signal.ratelimit_state to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.707 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_dropped_signal._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.731 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.721 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fatal_signal._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.731 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.742 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.748 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.748 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.793 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.858 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

@sys_rt_sigprocmask = dso_local alias i32 (i32, ptr, ptr, i32), ptr @__se_sys_rt_sigprocmask
@sys_rt_sigpending = dso_local alias i32 (ptr, i32), ptr @__se_sys_rt_sigpending
@sys_rt_sigtimedwait = dso_local alias i32 (ptr, ptr, ptr, i32), ptr @__se_sys_rt_sigtimedwait
@sys_rt_sigtimedwait_time32 = dso_local alias i32 (ptr, ptr, ptr, i32), ptr @__se_sys_rt_sigtimedwait_time32
@sys_kill = dso_local alias i32 (i32, i32), ptr @__se_sys_kill
@sys_pidfd_send_signal = dso_local alias i32 (i32, i32, ptr, i32), ptr @__se_sys_pidfd_send_signal
@sys_tgkill = dso_local alias i32 (i32, i32, i32), ptr @__se_sys_tgkill
@sys_tkill = dso_local alias i32 (i32, i32), ptr @__se_sys_tkill
@sys_rt_sigqueueinfo = dso_local alias i32 (i32, i32, ptr), ptr @__se_sys_rt_sigqueueinfo
@sys_rt_tgsigqueueinfo = dso_local alias i32 (i32, i32, i32, ptr), ptr @__se_sys_rt_tgsigqueueinfo
@sys_sigaltstack = dso_local alias i32 (ptr, ptr), ptr @__se_sys_sigaltstack
@sys_sigpending = dso_local alias i32 (ptr), ptr @__se_sys_sigpending
@sys_sigprocmask = dso_local alias i32 (i32, ptr, ptr), ptr @__se_sys_sigprocmask
@sys_rt_sigaction = dso_local alias i32 (i32, ptr, ptr, i32), ptr @__se_sys_rt_sigaction
@sys_sigaction = dso_local alias i32 (i32, ptr, ptr), ptr @__se_sys_sigaction
@sys_ssetmask = dso_local alias i32 (i32), ptr @__se_sys_ssetmask
@sys_rt_sigsuspend = dso_local alias i32 (ptr, i32), ptr @__se_sys_rt_sigsuspend
@sys_sigsuspend = dso_local alias i32 (i32, i32, i32), ptr @__se_sys_sigsuspend

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_signal_generate(ptr nocapture readnone %__data, i32 noundef %sig, ptr noundef %info, ptr noundef %task, i32 noundef %group, i32 noundef %result) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_signal_generate, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %sig, ptr noundef %info, ptr noundef %task, i32 noundef %group, i32 noundef %result) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_signal_deliver(ptr nocapture readnone %__data, i32 noundef %sig, ptr noundef %info, ptr noundef %ka) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_signal_deliver, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %sig, ptr noundef %info, ptr noundef %ka) #15
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_signal_generate(ptr noundef %__data, i32 noundef %sig, ptr noundef %info, ptr nocapture noundef readonly %task, i32 noundef %group, i32 noundef %result) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !509

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !510

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 48) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %sig6 = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %sig6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %sig, ptr %sig6, align 4
  %magicptr = ptrtoint ptr %info to i32
  %4 = zext i32 %magicptr to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values)
  switch i32 %magicptr, label %if.else12 [
    i32 0, label %if.then7
    i32 1, label %if.then9
  ]

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %errno = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %errno to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %errno, align 4
  br label %do.end

if.then9:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %errno10 = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %call3, i32 0, i32 2
  %6 = ptrtoint ptr %errno10 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %errno10, align 4
  br label %do.end

if.else12:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %si_errno = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %7 = ptrtoint ptr %si_errno to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %si_errno, align 4
  %errno13 = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %errno13 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %errno13, align 4
  %si_code = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %10 = ptrtoint ptr %si_code to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %si_code, align 4
  br label %do.end

do.end:                                           ; preds = %if.else12, %if.then9, %if.then7
  %.sink = phi i32 [ 128, %if.then9 ], [ %11, %if.else12 ], [ 0, %if.then7 ]
  %code11 = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %code11 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %.sink, ptr %code11, align 4
  %comm = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %call3, i32 0, i32 4
  %comm17 = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 101
  %13 = call ptr @memcpy(ptr %comm, ptr %comm17, i32 16)
  %pid = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 68
  %14 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %pid, align 8
  %pid19 = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %call3, i32 0, i32 5
  %16 = ptrtoint ptr %pid19 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %pid19, align 4
  %group20 = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %call3, i32 0, i32 6
  %17 = ptrtoint ptr %group20 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %group, ptr %group20, align 4
  %result21 = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %call3, i32 0, i32 7
  %18 = ptrtoint ptr %result21 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %result, ptr %result21, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_signal_generate(ptr noundef %__data, i32 noundef %sig, ptr noundef %info, ptr nocapture noundef readonly %task, i32 noundef %group, i32 noundef %result) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !511
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !511
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !499) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %sig17 = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %sig17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %sig, ptr %sig17, align 4
  %magicptr = ptrtoint ptr %info to i32
  %28 = zext i32 %magicptr to i64
  call void @__sanitizer_cov_trace_switch(i64 %28, ptr @__sancov_gen_cov_switch_values.154)
  switch i32 %magicptr, label %if.else24 [
    i32 0, label %if.then19
    i32 1, label %if.then21
  ]

if.then19:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %errno = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %errno to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 0, ptr %errno, align 4
  br label %do.end30

if.then21:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %errno22 = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %call13, i32 0, i32 2
  %30 = ptrtoint ptr %errno22 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %errno22, align 4
  br label %do.end30

if.else24:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %si_errno = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %31 = ptrtoint ptr %si_errno to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %si_errno, align 4
  %errno25 = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %errno25 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %errno25, align 4
  %si_code = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %34 = ptrtoint ptr %si_code to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %si_code, align 4
  br label %do.end30

do.end30:                                         ; preds = %if.else24, %if.then21, %if.then19
  %.sink = phi i32 [ 128, %if.then21 ], [ %35, %if.else24 ], [ 0, %if.then19 ]
  %code23 = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %code23 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %.sink, ptr %code23, align 4
  %comm = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %call13, i32 0, i32 4
  %comm31 = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 101
  %37 = call ptr @memcpy(ptr %comm, ptr %comm31, i32 16)
  %pid = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 68
  %38 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %pid, align 8
  %pid33 = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %call13, i32 0, i32 5
  %40 = ptrtoint ptr %pid33 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %pid33, align 4
  %group34 = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %call13, i32 0, i32 6
  %41 = ptrtoint ptr %group34 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %group, ptr %group34, align 4
  %result35 = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %call13, i32 0, i32 7
  %42 = ptrtoint ptr %result35 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %result, ptr %result35, align 4
  %43 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %rctx, align 4
  %45 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %44, ptr noundef %__data, i64 noundef 1, ptr noundef %46, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %do.end30, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_signal_deliver(ptr noundef %__data, i32 noundef %sig, ptr noundef %info, ptr nocapture noundef readonly %ka) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #15
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !509

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !510

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #15
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #15
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %sig6 = getelementptr inbounds %struct.trace_event_raw_signal_deliver, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %sig6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %sig, ptr %sig6, align 4
  %magicptr = ptrtoint ptr %info to i32
  %4 = zext i32 %magicptr to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.155)
  switch i32 %magicptr, label %if.else12 [
    i32 0, label %if.then7
    i32 1, label %if.then9
  ]

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %errno = getelementptr inbounds %struct.trace_event_raw_signal_deliver, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %errno to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %errno, align 4
  br label %do.end

if.then9:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %errno10 = getelementptr inbounds %struct.trace_event_raw_signal_deliver, ptr %call3, i32 0, i32 2
  %6 = ptrtoint ptr %errno10 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %errno10, align 4
  br label %do.end

if.else12:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %si_errno = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %7 = ptrtoint ptr %si_errno to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %si_errno, align 4
  %errno13 = getelementptr inbounds %struct.trace_event_raw_signal_deliver, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %errno13 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %errno13, align 4
  %si_code = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %10 = ptrtoint ptr %si_code to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %si_code, align 4
  br label %do.end

do.end:                                           ; preds = %if.else12, %if.then9, %if.then7
  %.sink = phi i32 [ 128, %if.then9 ], [ %11, %if.else12 ], [ 0, %if.then7 ]
  %code11 = getelementptr inbounds %struct.trace_event_raw_signal_deliver, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %code11 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %.sink, ptr %code11, align 4
  %13 = ptrtoint ptr %ka to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ka, align 4
  %15 = ptrtoint ptr %14 to i32
  %sa_handler17 = getelementptr inbounds %struct.trace_event_raw_signal_deliver, ptr %call3, i32 0, i32 4
  %16 = ptrtoint ptr %sa_handler17 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %sa_handler17, align 4
  %sa_flags = getelementptr inbounds %struct.sigaction, ptr %ka, i32 0, i32 1
  %17 = ptrtoint ptr %sa_flags to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %sa_flags, align 4
  %sa_flags19 = getelementptr inbounds %struct.trace_event_raw_signal_deliver, ptr %call3, i32 0, i32 5
  %19 = ptrtoint ptr %sa_flags19 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %sa_flags19, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #15
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_signal_deliver(ptr noundef %__data, i32 noundef %sig, ptr noundef %info, ptr nocapture noundef readonly %ka) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #15
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !511
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #15
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !511
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #15
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #15
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #15
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !499) #15
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %sig17 = getelementptr inbounds %struct.trace_event_raw_signal_deliver, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %sig17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %sig, ptr %sig17, align 4
  %magicptr = ptrtoint ptr %info to i32
  %28 = zext i32 %magicptr to i64
  call void @__sanitizer_cov_trace_switch(i64 %28, ptr @__sancov_gen_cov_switch_values.156)
  switch i32 %magicptr, label %if.else24 [
    i32 0, label %if.then19
    i32 1, label %if.then21
  ]

if.then19:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %errno = getelementptr inbounds %struct.trace_event_raw_signal_deliver, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %errno to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 0, ptr %errno, align 4
  br label %do.end30

if.then21:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %errno22 = getelementptr inbounds %struct.trace_event_raw_signal_deliver, ptr %call13, i32 0, i32 2
  %30 = ptrtoint ptr %errno22 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %errno22, align 4
  br label %do.end30

if.else24:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %si_errno = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %31 = ptrtoint ptr %si_errno to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %si_errno, align 4
  %errno25 = getelementptr inbounds %struct.trace_event_raw_signal_deliver, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %errno25 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %errno25, align 4
  %si_code = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %34 = ptrtoint ptr %si_code to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %si_code, align 4
  br label %do.end30

do.end30:                                         ; preds = %if.else24, %if.then21, %if.then19
  %.sink = phi i32 [ 128, %if.then21 ], [ %35, %if.else24 ], [ 0, %if.then19 ]
  %code23 = getelementptr inbounds %struct.trace_event_raw_signal_deliver, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %code23 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %.sink, ptr %code23, align 4
  %37 = ptrtoint ptr %ka to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %ka, align 4
  %39 = ptrtoint ptr %38 to i32
  %sa_handler31 = getelementptr inbounds %struct.trace_event_raw_signal_deliver, ptr %call13, i32 0, i32 4
  %40 = ptrtoint ptr %sa_handler31 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %sa_handler31, align 4
  %sa_flags = getelementptr inbounds %struct.sigaction, ptr %ka, i32 0, i32 1
  %41 = ptrtoint ptr %sa_flags to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %sa_flags, align 4
  %sa_flags33 = getelementptr inbounds %struct.trace_event_raw_signal_deliver, ptr %call13, i32 0, i32 5
  %43 = ptrtoint ptr %sa_flags33 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %sa_flags33, align 4
  %44 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %rctx, align 4
  %46 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %45, ptr noundef %__data, i64 noundef 1, ptr noundef %47, ptr noundef %11, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %do.end30, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_signal_generate(ptr noundef %__data, i32 noundef %sig, ptr noundef %info, ptr noundef %task, i32 noundef %group, i32 noundef %result) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %conv = zext i32 %sig to i64
  %0 = ptrtoint ptr %info to i32
  %conv4 = zext i32 %0 to i64
  %1 = ptrtoint ptr %task to i32
  %conv8 = zext i32 %1 to i64
  %conv12 = zext i32 %group to i64
  %conv16 = zext i32 %result to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_signal_deliver(ptr noundef %__data, i32 noundef %sig, ptr noundef %info, ptr noundef %ka) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %conv = zext i32 %sig to i64
  %0 = ptrtoint ptr %info to i32
  %conv4 = zext i32 %0 to i64
  %1 = ptrtoint ptr %ka to i32
  %conv8 = zext i32 %1 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @recalc_sigpending_and_wake(ptr noundef %t) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %jobctl.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 61
  %0 = ptrtoint ptr %jobctl.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %jobctl.i, align 4
  %and.i = and i32 %1, 10092544
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %entry.if.then_crit_edge

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

lor.lhs.false.i:                                  ; preds = %entry
  %signal.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 116, i32 1
  %blocked.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 113
  %arrayidx.i.i = getelementptr %struct.task_struct, ptr %t, i32 0, i32 116, i32 1, i32 0, i32 1
  %2 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx.i.i, align 4
  %arrayidx2.i.i = getelementptr %struct.task_struct, ptr %t, i32 0, i32 113, i32 0, i32 1
  %4 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx2.i.i, align 4
  %neg.i.i = xor i32 %5, -1
  %and.i.i = and i32 %3, %neg.i.i
  %6 = ptrtoint ptr %signal.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %signal.i, align 4
  %8 = ptrtoint ptr %blocked.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %blocked.i, align 4
  %neg7.i.i = xor i32 %9, -1
  %and8.i.i = and i32 %7, %neg7.i.i
  %or.i.i = or i32 %and8.i.i, %and.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i)
  %cmp.i.not.i = icmp eq i32 %or.i.i, 0
  br i1 %cmp.i.not.i, label %lor.lhs.false1.i, label %lor.lhs.false.i.if.then_crit_edge

lor.lhs.false.i.if.then_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

lor.lhs.false1.i:                                 ; preds = %lor.lhs.false.i
  %signal2.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 111
  %10 = ptrtoint ptr %signal2.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %signal2.i, align 16
  %signal3.i = getelementptr inbounds %struct.signal_struct, ptr %11, i32 0, i32 6, i32 1
  %arrayidx.i14.i = getelementptr %struct.signal_struct, ptr %11, i32 0, i32 6, i32 1, i32 0, i32 1
  %12 = ptrtoint ptr %arrayidx.i14.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.i14.i, align 4
  %and.i17.i = and i32 %13, %neg.i.i
  %14 = ptrtoint ptr %signal3.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %signal3.i, align 4
  %and8.i19.i = and i32 %15, %neg7.i.i
  %or.i20.i = or i32 %and8.i19.i, %and.i17.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i20.i)
  %cmp.i21.not.i = icmp eq i32 %or.i20.i, 0
  br i1 %cmp.i21.not.i, label %lor.lhs.false6.i, label %lor.lhs.false1.i.if.then_crit_edge

lor.lhs.false1.i.if.then_crit_edge:               ; preds = %lor.lhs.false1.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

lor.lhs.false6.i:                                 ; preds = %lor.lhs.false1.i
  %frozen.i.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 65
  %16 = ptrtoint ptr %frozen.i.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %bf.load.i.i = load i16, ptr %frozen.i.i, align 8
  %17 = and i16 %bf.load.i.i, 512
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %17)
  %tobool.i.not.i = icmp eq i16 %17, 0
  br i1 %tobool.i.not.i, label %lor.lhs.false6.i.if.end_crit_edge, label %lor.lhs.false6.i.if.then_crit_edge

lor.lhs.false6.i.if.then_crit_edge:               ; preds = %lor.lhs.false6.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

lor.lhs.false6.i.if.end_crit_edge:                ; preds = %lor.lhs.false6.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %lor.lhs.false6.i.if.then_crit_edge, %lor.lhs.false1.i.if.then_crit_edge, %lor.lhs.false.i.if.then_crit_edge, %entry.if.then_crit_edge
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 1
  %18 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %stack.i.i, align 4
  tail call void @_set_bit(i32 noundef 0, ptr noundef %19) #15
  %20 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %stack.i.i, align 4
  tail call void @_set_bit(i32 noundef 0, ptr noundef %21) #15
  %call.i.i = tail call i32 @wake_up_state(ptr noundef %t, i32 noundef 1) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then.i.i:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @kick_process(ptr noundef %t) #15
  br label %if.end

if.end:                                           ; preds = %if.then.i.i, %if.then.if.end_crit_edge, %lor.lhs.false6.i.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @recalc_sigpending() #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %jobctl.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 61
  %4 = ptrtoint ptr %jobctl.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %jobctl.i, align 4
  %and.i6 = and i32 %5, 10092544
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i6)
  %tobool.not.i = icmp eq i32 %and.i6, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %entry.recalc_sigpending_tsk.exit.thread_crit_edge

entry.recalc_sigpending_tsk.exit.thread_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %recalc_sigpending_tsk.exit.thread

lor.lhs.false.i:                                  ; preds = %entry
  %signal.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 116, i32 1
  %blocked.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 113
  %arrayidx.i.i = getelementptr %struct.task_struct, ptr %3, i32 0, i32 116, i32 1, i32 0, i32 1
  %6 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.i.i, align 4
  %arrayidx2.i.i = getelementptr %struct.task_struct, ptr %3, i32 0, i32 113, i32 0, i32 1
  %8 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx2.i.i, align 4
  %neg.i.i = xor i32 %9, -1
  %and.i.i = and i32 %7, %neg.i.i
  %10 = ptrtoint ptr %signal.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %signal.i, align 4
  %12 = ptrtoint ptr %blocked.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %blocked.i, align 4
  %neg7.i.i = xor i32 %13, -1
  %and8.i.i = and i32 %11, %neg7.i.i
  %or.i.i = or i32 %and8.i.i, %and.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i)
  %cmp.i.not.i = icmp eq i32 %or.i.i, 0
  br i1 %cmp.i.not.i, label %lor.lhs.false1.i, label %lor.lhs.false.i.recalc_sigpending_tsk.exit.thread_crit_edge

lor.lhs.false.i.recalc_sigpending_tsk.exit.thread_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %recalc_sigpending_tsk.exit.thread

lor.lhs.false1.i:                                 ; preds = %lor.lhs.false.i
  %signal2.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 111
  %14 = ptrtoint ptr %signal2.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %signal2.i, align 16
  %signal3.i = getelementptr inbounds %struct.signal_struct, ptr %15, i32 0, i32 6, i32 1
  %arrayidx.i14.i = getelementptr %struct.signal_struct, ptr %15, i32 0, i32 6, i32 1, i32 0, i32 1
  %16 = ptrtoint ptr %arrayidx.i14.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx.i14.i, align 4
  %and.i17.i = and i32 %17, %neg.i.i
  %18 = ptrtoint ptr %signal3.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %signal3.i, align 4
  %and8.i19.i = and i32 %19, %neg7.i.i
  %or.i20.i = or i32 %and8.i19.i, %and.i17.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i20.i)
  %cmp.i21.not.i = icmp eq i32 %or.i20.i, 0
  br i1 %cmp.i21.not.i, label %lor.lhs.false6.i, label %lor.lhs.false1.i.recalc_sigpending_tsk.exit.thread_crit_edge

lor.lhs.false1.i.recalc_sigpending_tsk.exit.thread_crit_edge: ; preds = %lor.lhs.false1.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %recalc_sigpending_tsk.exit.thread

lor.lhs.false6.i:                                 ; preds = %lor.lhs.false1.i
  %frozen.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 65
  %20 = ptrtoint ptr %frozen.i.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %bf.load.i.i = load i16, ptr %frozen.i.i, align 8
  %21 = and i16 %bf.load.i.i, 512
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %21)
  %tobool.i.not.i = icmp eq i16 %21, 0
  br i1 %tobool.i.not.i, label %land.lhs.true, label %lor.lhs.false6.i.recalc_sigpending_tsk.exit.thread_crit_edge

lor.lhs.false6.i.recalc_sigpending_tsk.exit.thread_crit_edge: ; preds = %lor.lhs.false6.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %recalc_sigpending_tsk.exit.thread

recalc_sigpending_tsk.exit.thread:                ; preds = %lor.lhs.false6.i.recalc_sigpending_tsk.exit.thread_crit_edge, %lor.lhs.false1.i.recalc_sigpending_tsk.exit.thread_crit_edge, %lor.lhs.false.i.recalc_sigpending_tsk.exit.thread_crit_edge, %entry.recalc_sigpending_tsk.exit.thread_crit_edge
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 1
  %22 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %stack.i.i, align 4
  tail call void @_set_bit(i32 noundef 0, ptr noundef %23) #15
  br label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false6.i
  %24 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %task, align 8
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @system_freezing_cnt, i32 noundef 4) #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_freezing_cnt to i32))
  %26 = load volatile i32, ptr @system_freezing_cnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.not.i7 = icmp eq i32 %26, 0
  br i1 %tobool.not.i7, label %land.lhs.true.if.then_crit_edge, label %freezing.exit, !prof !509

land.lhs.true.if.then_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

freezing.exit:                                    ; preds = %land.lhs.true
  %call4.i = tail call zeroext i1 @freezing_slow_path(ptr noundef %25) #15
  br i1 %call4.i, label %freezing.exit.if.end_crit_edge, label %freezing.exit.if.then_crit_edge

freezing.exit.if.then_crit_edge:                  ; preds = %freezing.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

freezing.exit.if.end_crit_edge:                   ; preds = %freezing.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %freezing.exit.if.then_crit_edge, %land.lhs.true.if.then_crit_edge
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %1) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %freezing.exit.if.end_crit_edge, %recalc_sigpending_tsk.exit.thread
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @calculate_sigpending() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %sighand = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 112
  %4 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_lock_irq(ptr noundef %5) #15
  %6 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task, align 8
  %stack.i = getelementptr inbounds %struct.task_struct, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %stack.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %stack.i, align 4
  tail call void @_set_bit(i32 noundef 0, ptr noundef %9) #15
  tail call void @recalc_sigpending()
  %10 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %task, align 8
  %sighand5 = getelementptr inbounds %struct.task_struct, ptr %11, i32 0, i32 112
  %12 = ptrtoint ptr %sighand5 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %sighand5, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %13) #15
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @next_signal(ptr nocapture noundef readonly %pending, ptr nocapture noundef readonly %mask) local_unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %signal = getelementptr inbounds %struct.sigpending, ptr %pending, i32 0, i32 1
  %0 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %signal, align 4
  %2 = ptrtoint ptr %mask to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mask, align 4
  %neg = xor i32 %3, -1
  %and = and i32 %1, %neg
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %sw.bb, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %and4 = and i32 %and, 1073743064
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool5.not = icmp eq i32 %and4, 0
  %spec.select = select i1 %tobool5.not, i32 %and, i32 %and4
  %4 = tail call i32 @llvm.cttz.i32(i32 %spec.select, i1 false) #15, !range !512
  %add = add nuw nsw i32 %4, 1
  br label %cleanup

sw.bb:                                            ; preds = %entry
  %arrayidx = getelementptr %struct.sigpending, ptr %pending, i32 0, i32 1, i32 0, i32 1
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx, align 4
  %arrayidx22 = getelementptr i32, ptr %mask, i32 1
  %7 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx22, align 4
  %neg23 = xor i32 %8, -1
  %and24 = and i32 %6, %neg23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and24)
  %tobool25.not = icmp eq i32 %and24, 0
  br i1 %tobool25.not, label %sw.bb.cleanup_crit_edge, label %if.end27

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end27:                                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #17
  %9 = tail call i32 @llvm.cttz.i32(i32 %and24, i1 true) #15, !range !512
  %add32 = add nuw nsw i32 %9, 33
  br label %cleanup

cleanup:                                          ; preds = %if.end27, %sw.bb.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ %add, %if.then ], [ %add32, %if.end27 ], [ 0, %sw.bb.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @task_set_jobctl_pending(ptr nocapture noundef %task, i32 noundef %mask) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %mask, -4128768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.body7, label %do.body3, !prof !509

do.body3:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/signal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 287, 0\0A.popsection", ""() #15, !srcloc !513
  unreachable

do.body7:                                         ; preds = %entry
  %0 = and i32 %mask, 3801088
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %0)
  %1 = icmp eq i32 %0, 2097152
  br i1 %1, label %do.body21, label %do.end26, !prof !510

do.body21:                                        ; preds = %do.body7
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/signal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 288, 0\0A.popsection", ""() #15, !srcloc !514
  unreachable

do.end26:                                         ; preds = %do.body7
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 1
  %2 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %stack.i.i.i, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %3, align 4
  %and1.i.i.i.i.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool.not.i, label %do.end26.lor.end_crit_edge, label %fatal_signal_pending.exit

do.end26.lor.end_crit_edge:                       ; preds = %do.end26
  call void @__sanitizer_cov_trace_pc() #17
  br label %lor.end

fatal_signal_pending.exit:                        ; preds = %do.end26
  %signal.i.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 116, i32 1
  %6 = ptrtoint ptr %signal.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %signal.i.i, align 4
  %8 = and i32 %7, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool27.not = icmp eq i32 %8, 0
  br i1 %tobool27.not, label %fatal_signal_pending.exit.lor.end_crit_edge, label %fatal_signal_pending.exit.return_crit_edge, !prof !509

fatal_signal_pending.exit.return_crit_edge:       ; preds = %fatal_signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

fatal_signal_pending.exit.lor.end_crit_edge:      ; preds = %fatal_signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %lor.end

lor.end:                                          ; preds = %fatal_signal_pending.exit.lor.end_crit_edge, %do.end26.lor.end_crit_edge
  %flags = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 3
  %9 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %flags, align 4
  %and28 = and i32 %10, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28)
  %tobool29.not = icmp eq i32 %and28, 0
  br i1 %tobool29.not, label %if.end37, label %lor.end.return_crit_edge, !prof !509

lor.end.return_crit_edge:                         ; preds = %lor.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end37:                                         ; preds = %lor.end
  %and38 = and i32 %mask, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and38)
  %tobool39.not = icmp eq i32 %and38, 0
  br i1 %tobool39.not, label %if.end37.if.end42_crit_edge, label %if.then40

if.end37.if.end42_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end42

if.then40:                                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #17
  %jobctl = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 61
  %11 = ptrtoint ptr %jobctl to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %jobctl, align 4
  %and41 = and i32 %12, -65536
  store i32 %and41, ptr %jobctl, align 4
  br label %if.end42

if.end42:                                         ; preds = %if.then40, %if.end37.if.end42_crit_edge
  %jobctl43 = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 61
  %13 = ptrtoint ptr %jobctl43 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %jobctl43, align 4
  %or = or i32 %14, %mask
  store i32 %or, ptr %jobctl43, align 4
  br label %return

return:                                           ; preds = %if.end42, %lor.end.return_crit_edge, %fatal_signal_pending.exit.return_crit_edge
  %15 = phi i1 [ false, %lor.end.return_crit_edge ], [ true, %if.end42 ], [ false, %fatal_signal_pending.exit.return_crit_edge ]
  ret i1 %15
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @task_clear_jobctl_trapping(ptr noundef %task) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %jobctl = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 61
  %0 = ptrtoint ptr %jobctl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %jobctl, align 4
  %and = and i32 %1, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then, !prof !509

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %and4 = and i32 %1, -2097153
  %2 = ptrtoint ptr %jobctl to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %and4, ptr %jobctl, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !515
  tail call void @wake_up_bit(ptr noundef %jobctl, i32 noundef 21) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @wake_up_bit(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @task_clear_jobctl_pending(ptr noundef %task, i32 noundef %mask) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %mask, -1703937
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.end6, label %do.body3, !prof !509

do.body3:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/signal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 338, 0\0A.popsection", ""() #15, !srcloc !516
  unreachable

do.end6:                                          ; preds = %entry
  %and7 = and i32 %mask, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %tobool8.not = icmp eq i32 %and7, 0
  %or = or i32 %mask, 327680
  %spec.select = select i1 %tobool8.not, i32 %mask, i32 %or
  %neg = xor i32 %spec.select, -1
  %jobctl = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 61
  %0 = ptrtoint ptr %jobctl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %jobctl, align 4
  %and11 = and i32 %1, %neg
  store i32 %and11, ptr %jobctl, align 4
  %2 = and i32 %and11, 3801088
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %2)
  %.not = icmp eq i32 %2, 2097152
  br i1 %.not, label %if.then.i, label %do.end6.if.end16_crit_edge, !prof !517

do.end6.if.end16_crit_edge:                       ; preds = %do.end6
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end16

if.then.i:                                        ; preds = %do.end6
  call void @__sanitizer_cov_trace_pc() #17
  %and4.i = and i32 %and11, -2097153
  %3 = ptrtoint ptr %jobctl to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %and4.i, ptr %jobctl, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !515
  tail call void @wake_up_bit(ptr noundef %jobctl, i32 noundef 21) #15
  br label %if.end16

if.end16:                                         ; preds = %if.then.i, %do.end6.if.end16_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @task_join_group_stop(ptr nocapture noundef %task) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task1 = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task1, align 8
  %jobctl = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 61
  %4 = ptrtoint ptr %jobctl to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %jobctl, align 4
  %and = and i32 %5, 65535
  %signal = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 111
  %6 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %signal, align 16
  %group_stop_count = getelementptr inbounds %struct.signal_struct, ptr %7, i32 0, i32 11
  %8 = ptrtoint ptr %group_stop_count to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %group_stop_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not = icmp eq i32 %9, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %inc = add i32 %9, 1
  %10 = ptrtoint ptr %group_stop_count to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %inc, ptr %group_stop_count, align 4
  %or = or i32 %and, 262144
  br label %if.end8

if.else:                                          ; preds = %entry
  %flags = getelementptr inbounds %struct.signal_struct, ptr %7, i32 0, i32 12
  %11 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %flags, align 8
  %and5 = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %tobool6.not = icmp eq i32 %and5, 0
  br i1 %tobool6.not, label %if.else.cleanup_crit_edge, label %if.else.if.end8_crit_edge

if.else.if.end8_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end8

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end8:                                          ; preds = %if.else.if.end8_crit_edge, %if.then
  %mask.0 = phi i32 [ %or, %if.then ], [ %and, %if.else.if.end8_crit_edge ]
  %stack.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 1
  %13 = ptrtoint ptr %stack.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %stack.i.i.i.i, align 4
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %14, align 4
  %and1.i.i.i.i.i.i = and i32 %16, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and1.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.end8.lor.end.i_crit_edge, label %fatal_signal_pending.exit.i

if.end8.lor.end.i_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #17
  br label %lor.end.i

fatal_signal_pending.exit.i:                      ; preds = %if.end8
  %signal.i.i.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 116, i32 1
  %17 = ptrtoint ptr %signal.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %signal.i.i.i, align 4
  %19 = and i32 %18, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool27.not.i = icmp eq i32 %19, 0
  br i1 %tobool27.not.i, label %fatal_signal_pending.exit.i.lor.end.i_crit_edge, label %fatal_signal_pending.exit.i.cleanup_crit_edge, !prof !509

fatal_signal_pending.exit.i.cleanup_crit_edge:    ; preds = %fatal_signal_pending.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

fatal_signal_pending.exit.i.lor.end.i_crit_edge:  ; preds = %fatal_signal_pending.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %lor.end.i

lor.end.i:                                        ; preds = %fatal_signal_pending.exit.i.lor.end.i_crit_edge, %if.end8.lor.end.i_crit_edge
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 3
  %20 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flags.i, align 4
  %and28.i = and i32 %21, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28.i)
  %tobool29.not.i = icmp eq i32 %and28.i, 0
  br i1 %tobool29.not.i, label %if.end37.i, label %lor.end.i.cleanup_crit_edge, !prof !509

lor.end.i.cleanup_crit_edge:                      ; preds = %lor.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end37.i:                                       ; preds = %lor.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool39.not.i = icmp eq i32 %and, 0
  br i1 %tobool39.not.i, label %if.end37.i.if.end42.i_crit_edge, label %if.then40.i

if.end37.i.if.end42.i_crit_edge:                  ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end42.i

if.then40.i:                                      ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #17
  %jobctl.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 61
  %22 = ptrtoint ptr %jobctl.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %jobctl.i, align 4
  %and41.i = and i32 %23, -65536
  store i32 %and41.i, ptr %jobctl.i, align 4
  br label %if.end42.i

if.end42.i:                                       ; preds = %if.then40.i, %if.end37.i.if.end42.i_crit_edge
  %jobctl43.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 61
  %24 = ptrtoint ptr %jobctl43.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %jobctl43.i, align 4
  %or9 = or i32 %mask.0, %25
  %or.i = or i32 %or9, 131072
  store i32 %or.i, ptr %jobctl43.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end42.i, %lor.end.i.cleanup_crit_edge, %fatal_signal_pending.exit.i.cleanup_crit_edge, %if.else.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @flush_sigqueue(ptr noundef %queue) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %signal = getelementptr inbounds %struct.sigpending, ptr %queue, i32 0, i32 1
  %arrayidx.i = getelementptr %struct.sigpending, ptr %queue, i32 0, i32 1, i32 0, i32 1
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %arrayidx.i, align 4
  %1 = ptrtoint ptr %signal to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %signal, align 4
  %2 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %queue, align 4
  %cmp.i.not6 = icmp eq ptr %3, %queue
  br i1 %cmp.i.not6, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

while.body:                                       ; preds = %__sigqueue_free.exit.while.body_crit_edge, %entry.while.body_crit_edge
  %4 = phi ptr [ %20, %__sigqueue_free.exit.while.body_crit_edge ], [ %3, %entry.while.body_crit_edge ]
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %4) #15
  br i1 %call.i.i, label %if.end.i.i, label %while.body.list_del_init.exit_crit_edge

while.body.list_del_init.exit_crit_edge:          ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #17
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %prev.i.i, align 4
  %7 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %4, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %6, ptr %prev1.i.i.i, align 4
  %10 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %8, ptr %6, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %while.body.list_del_init.exit_crit_edge
  %11 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %4, ptr %4, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %12 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %4, ptr %prev.i3.i, align 4
  %flags.i = getelementptr inbounds %struct.sigqueue, ptr %4, i32 0, i32 1
  %13 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %list_del_init.exit.__sigqueue_free.exit_crit_edge

list_del_init.exit.__sigqueue_free.exit_crit_edge: ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %__sigqueue_free.exit

if.end.i:                                         ; preds = %list_del_init.exit
  %ucounts.i = getelementptr inbounds %struct.sigqueue, ptr %4, i32 0, i32 3
  %15 = ptrtoint ptr %ucounts.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ucounts.i, align 4
  %tobool1.not.i = icmp eq ptr %16, null
  br i1 %tobool1.not.i, label %if.end.i.if.end5.i_crit_edge, label %if.then2.i

if.end.i.if.end5.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end5.i

if.then2.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dec_rlimit_put_ucounts(ptr noundef nonnull %16, i32 noundef 14) #15
  %17 = ptrtoint ptr %ucounts.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %ucounts.i, align 4
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then2.i, %if.end.i.if.end5.i_crit_edge
  %18 = load ptr, ptr @sigqueue_cachep, align 4
  tail call void @kmem_cache_free(ptr noundef %18, ptr noundef %4) #15
  br label %__sigqueue_free.exit

__sigqueue_free.exit:                             ; preds = %if.end5.i, %list_del_init.exit.__sigqueue_free.exit_crit_edge
  %19 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile ptr, ptr %queue, align 4
  %cmp.i.not = icmp eq ptr %20, %queue
  br i1 %cmp.i.not, label %__sigqueue_free.exit.while.end_crit_edge, label %__sigqueue_free.exit.while.body_crit_edge

__sigqueue_free.exit.while.body_crit_edge:        ; preds = %__sigqueue_free.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body

__sigqueue_free.exit.while.end_crit_edge:         ; preds = %__sigqueue_free.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

while.end:                                        ; preds = %__sigqueue_free.exit.while.end_crit_edge, %entry.while.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__sigqueue_free(ptr noundef %q) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.sigqueue, ptr %q, i32 0, i32 1
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %and = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end:                                           ; preds = %entry
  %ucounts = getelementptr inbounds %struct.sigqueue, ptr %q, i32 0, i32 3
  %2 = ptrtoint ptr %ucounts to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ucounts, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %if.end.if.end5_crit_edge, label %if.then2

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end5

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dec_rlimit_put_ucounts(ptr noundef nonnull %3, i32 noundef 14) #15
  %4 = ptrtoint ptr %ucounts to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %ucounts, align 4
  br label %if.end5

if.end5:                                          ; preds = %if.then2, %if.end.if.end5_crit_edge
  %5 = load ptr, ptr @sigqueue_cachep, align 4
  tail call void @kmem_cache_free(ptr noundef %5, ptr noundef %q) #15
  br label %return

return:                                           ; preds = %if.end5, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @flush_signals(ptr noundef %t) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %sighand = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 112
  %0 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sighand, align 4
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %1) #15
  %stack.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 1
  %2 = ptrtoint ptr %stack.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %stack.i, align 4
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %3) #15
  %pending = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 116
  %signal.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 116, i32 1
  %arrayidx.i.i = getelementptr %struct.task_struct, ptr %t, i32 0, i32 116, i32 1, i32 0, i32 1
  %4 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %arrayidx.i.i, align 4
  %5 = ptrtoint ptr %signal.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %signal.i, align 4
  %6 = ptrtoint ptr %pending to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %pending, align 4
  %cmp.i.not6.i = icmp eq ptr %7, %pending
  br i1 %cmp.i.not6.i, label %entry.flush_sigqueue.exit_crit_edge, label %entry.while.body.i_crit_edge

entry.while.body.i_crit_edge:                     ; preds = %entry
  br label %while.body.i

entry.flush_sigqueue.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %flush_sigqueue.exit

while.body.i:                                     ; preds = %__sigqueue_free.exit.i.while.body.i_crit_edge, %entry.while.body.i_crit_edge
  %8 = phi ptr [ %24, %__sigqueue_free.exit.i.while.body.i_crit_edge ], [ %7, %entry.while.body.i_crit_edge ]
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %8) #15
  br i1 %call.i.i.i, label %if.end.i.i.i, label %while.body.i.list_del_init.exit.i_crit_edge

while.body.i.list_del_init.exit.i_crit_edge:      ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_del_init.exit.i

if.end.i.i.i:                                     ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #17
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %prev.i.i.i, align 4
  %11 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %8, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %10, ptr %prev1.i.i.i.i, align 4
  %14 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %12, ptr %10, align 4
  br label %list_del_init.exit.i

list_del_init.exit.i:                             ; preds = %if.end.i.i.i, %while.body.i.list_del_init.exit.i_crit_edge
  %15 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %8, ptr %8, align 4
  %prev.i3.i.i = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  %16 = ptrtoint ptr %prev.i3.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %8, ptr %prev.i3.i.i, align 4
  %flags.i.i = getelementptr inbounds %struct.sigqueue, ptr %8, i32 0, i32 1
  %17 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %18, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %list_del_init.exit.i.__sigqueue_free.exit.i_crit_edge

list_del_init.exit.i.__sigqueue_free.exit.i_crit_edge: ; preds = %list_del_init.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__sigqueue_free.exit.i

if.end.i.i:                                       ; preds = %list_del_init.exit.i
  %ucounts.i.i = getelementptr inbounds %struct.sigqueue, ptr %8, i32 0, i32 3
  %19 = ptrtoint ptr %ucounts.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %ucounts.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %20, null
  br i1 %tobool1.not.i.i, label %if.end.i.i.if.end5.i.i_crit_edge, label %if.then2.i.i

if.end.i.i.if.end5.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end5.i.i

if.then2.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dec_rlimit_put_ucounts(ptr noundef nonnull %20, i32 noundef 14) #15
  %21 = ptrtoint ptr %ucounts.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %ucounts.i.i, align 4
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then2.i.i, %if.end.i.i.if.end5.i.i_crit_edge
  %22 = load ptr, ptr @sigqueue_cachep, align 4
  tail call void @kmem_cache_free(ptr noundef %22, ptr noundef %8) #15
  br label %__sigqueue_free.exit.i

__sigqueue_free.exit.i:                           ; preds = %if.end5.i.i, %list_del_init.exit.i.__sigqueue_free.exit.i_crit_edge
  %23 = ptrtoint ptr %pending to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile ptr, ptr %pending, align 4
  %cmp.i.not.i = icmp eq ptr %24, %pending
  br i1 %cmp.i.not.i, label %__sigqueue_free.exit.i.flush_sigqueue.exit_crit_edge, label %__sigqueue_free.exit.i.while.body.i_crit_edge

__sigqueue_free.exit.i.while.body.i_crit_edge:    ; preds = %__sigqueue_free.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body.i

__sigqueue_free.exit.i.flush_sigqueue.exit_crit_edge: ; preds = %__sigqueue_free.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %flush_sigqueue.exit

flush_sigqueue.exit:                              ; preds = %__sigqueue_free.exit.i.flush_sigqueue.exit_crit_edge, %entry.flush_sigqueue.exit_crit_edge
  %signal = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 111
  %25 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %signal, align 16
  %shared_pending = getelementptr inbounds %struct.signal_struct, ptr %26, i32 0, i32 6
  %signal.i11 = getelementptr inbounds %struct.signal_struct, ptr %26, i32 0, i32 6, i32 1
  %arrayidx.i.i12 = getelementptr %struct.signal_struct, ptr %26, i32 0, i32 6, i32 1, i32 0, i32 1
  %27 = ptrtoint ptr %arrayidx.i.i12 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 0, ptr %arrayidx.i.i12, align 4
  %28 = ptrtoint ptr %signal.i11 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %signal.i11, align 4
  %29 = ptrtoint ptr %shared_pending to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile ptr, ptr %shared_pending, align 4
  %cmp.i.not6.i13 = icmp eq ptr %30, %shared_pending
  br i1 %cmp.i.not6.i13, label %flush_sigqueue.exit.flush_sigqueue.exit31_crit_edge, label %flush_sigqueue.exit.while.body.i15_crit_edge

flush_sigqueue.exit.while.body.i15_crit_edge:     ; preds = %flush_sigqueue.exit
  br label %while.body.i15

flush_sigqueue.exit.flush_sigqueue.exit31_crit_edge: ; preds = %flush_sigqueue.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %flush_sigqueue.exit31

while.body.i15:                                   ; preds = %__sigqueue_free.exit.i30.while.body.i15_crit_edge, %flush_sigqueue.exit.while.body.i15_crit_edge
  %31 = phi ptr [ %47, %__sigqueue_free.exit.i30.while.body.i15_crit_edge ], [ %30, %flush_sigqueue.exit.while.body.i15_crit_edge ]
  %call.i.i.i14 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %31) #15
  br i1 %call.i.i.i14, label %if.end.i.i.i18, label %while.body.i15.list_del_init.exit.i23_crit_edge

while.body.i15.list_del_init.exit.i23_crit_edge:  ; preds = %while.body.i15
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_del_init.exit.i23

if.end.i.i.i18:                                   ; preds = %while.body.i15
  call void @__sanitizer_cov_trace_pc() #17
  %prev.i.i.i16 = getelementptr inbounds %struct.list_head, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %prev.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %prev.i.i.i16, align 4
  %34 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %31, align 4
  %prev1.i.i.i.i17 = getelementptr inbounds %struct.list_head, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %prev1.i.i.i.i17 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %33, ptr %prev1.i.i.i.i17, align 4
  %37 = ptrtoint ptr %33 to i32
  call void @__asan_store4_noabort(i32 %37)
  store volatile ptr %35, ptr %33, align 4
  br label %list_del_init.exit.i23

list_del_init.exit.i23:                           ; preds = %if.end.i.i.i18, %while.body.i15.list_del_init.exit.i23_crit_edge
  %38 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %38)
  store volatile ptr %31, ptr %31, align 4
  %prev.i3.i.i19 = getelementptr inbounds %struct.list_head, ptr %31, i32 0, i32 1
  %39 = ptrtoint ptr %prev.i3.i.i19 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %31, ptr %prev.i3.i.i19, align 4
  %flags.i.i20 = getelementptr inbounds %struct.sigqueue, ptr %31, i32 0, i32 1
  %40 = ptrtoint ptr %flags.i.i20 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %flags.i.i20, align 4
  %and.i.i21 = and i32 %41, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i21)
  %tobool.not.i.i22 = icmp eq i32 %and.i.i21, 0
  br i1 %tobool.not.i.i22, label %if.end.i.i26, label %list_del_init.exit.i23.__sigqueue_free.exit.i30_crit_edge

list_del_init.exit.i23.__sigqueue_free.exit.i30_crit_edge: ; preds = %list_del_init.exit.i23
  call void @__sanitizer_cov_trace_pc() #17
  br label %__sigqueue_free.exit.i30

if.end.i.i26:                                     ; preds = %list_del_init.exit.i23
  %ucounts.i.i24 = getelementptr inbounds %struct.sigqueue, ptr %31, i32 0, i32 3
  %42 = ptrtoint ptr %ucounts.i.i24 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %ucounts.i.i24, align 4
  %tobool1.not.i.i25 = icmp eq ptr %43, null
  br i1 %tobool1.not.i.i25, label %if.end.i.i26.if.end5.i.i28_crit_edge, label %if.then2.i.i27

if.end.i.i26.if.end5.i.i28_crit_edge:             ; preds = %if.end.i.i26
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end5.i.i28

if.then2.i.i27:                                   ; preds = %if.end.i.i26
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dec_rlimit_put_ucounts(ptr noundef nonnull %43, i32 noundef 14) #15
  %44 = ptrtoint ptr %ucounts.i.i24 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr null, ptr %ucounts.i.i24, align 4
  br label %if.end5.i.i28

if.end5.i.i28:                                    ; preds = %if.then2.i.i27, %if.end.i.i26.if.end5.i.i28_crit_edge
  %45 = load ptr, ptr @sigqueue_cachep, align 4
  tail call void @kmem_cache_free(ptr noundef %45, ptr noundef %31) #15
  br label %__sigqueue_free.exit.i30

__sigqueue_free.exit.i30:                         ; preds = %if.end5.i.i28, %list_del_init.exit.i23.__sigqueue_free.exit.i30_crit_edge
  %46 = ptrtoint ptr %shared_pending to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile ptr, ptr %shared_pending, align 4
  %cmp.i.not.i29 = icmp eq ptr %47, %shared_pending
  br i1 %cmp.i.not.i29, label %__sigqueue_free.exit.i30.flush_sigqueue.exit31_crit_edge, label %__sigqueue_free.exit.i30.while.body.i15_crit_edge

__sigqueue_free.exit.i30.while.body.i15_crit_edge: ; preds = %__sigqueue_free.exit.i30
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body.i15

__sigqueue_free.exit.i30.flush_sigqueue.exit31_crit_edge: ; preds = %__sigqueue_free.exit.i30
  call void @__sanitizer_cov_trace_pc() #17
  br label %flush_sigqueue.exit31

flush_sigqueue.exit31:                            ; preds = %__sigqueue_free.exit.i30.flush_sigqueue.exit31_crit_edge, %flush_sigqueue.exit.flush_sigqueue.exit31_crit_edge
  %48 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %49, i32 noundef %call2) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @flush_itimer_signals() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %sighand = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 112
  %4 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sighand, align 4
  %call3 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %5) #15
  %pending = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 116
  tail call fastcc void @__flush_itimer_signals(ptr noundef %pending)
  %signal = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 111
  %6 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %signal, align 16
  %shared_pending = getelementptr inbounds %struct.signal_struct, ptr %7, i32 0, i32 6
  tail call fastcc void @__flush_itimer_signals(ptr noundef %shared_pending)
  %8 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %9, i32 noundef %call3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__flush_itimer_signals(ptr noundef %pending) unnamed_addr #0 align 64 {
entry:
  %signal = alloca %struct.sigset_t, align 8
  %retain = alloca %struct.sigset_t, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %signal) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %retain) #15
  %0 = getelementptr inbounds [2 x i32], ptr %retain, i32 0, i32 1
  %signal1 = getelementptr inbounds %struct.sigpending, ptr %pending, i32 0, i32 1
  %1 = ptrtoint ptr %signal1 to i32
  call void @__asan_loadN_noabort(i32 %1, i32 8)
  %2 = load i64, ptr %signal1, align 4
  %3 = ptrtoint ptr %signal to i32
  call void @__asan_store8_noabort(i32 %3)
  store i64 %2, ptr %signal, align 8
  %4 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %0, align 4
  %5 = ptrtoint ptr %retain to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %retain, align 4
  %6 = ptrtoint ptr %pending to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pending, align 4
  %cmp.not39 = icmp eq ptr %7, %pending
  br i1 %cmp.not39, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.body:                                         ; preds = %if.end.for.body_crit_edge, %entry.for.body_crit_edge
  %q.040 = phi ptr [ %n.042, %if.end.for.body_crit_edge ], [ %7, %entry.for.body_crit_edge ]
  %8 = ptrtoint ptr %q.040 to i32
  call void @__asan_load4_noabort(i32 %8)
  %n.042 = load ptr, ptr %q.040, align 4
  %info = getelementptr inbounds %struct.sigqueue, ptr %q.040, i32 0, i32 2
  %9 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %info, align 4
  %si_code = getelementptr inbounds %struct.sigqueue, ptr %q.040, i32 0, i32 2, i32 0, i32 2
  %11 = ptrtoint ptr %si_code to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %si_code, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %12)
  %cmp10.not = icmp eq i32 %12, -2
  %sub.i31 = add i32 %10, -1
  %rem.i32 = and i32 %sub.i31, 31
  %shl.i33 = shl nuw i32 1, %rem.i32
  br i1 %cmp10.not, label %if.else, label %if.then, !prof !510

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  %div3.i = lshr i32 %sub.i31, 5
  %arrayidx.i30 = getelementptr [2 x i32], ptr %retain, i32 0, i32 %div3.i
  %13 = ptrtoint ptr %arrayidx.i30 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i30, align 4
  %or.i = or i32 %14, %shl.i33
  store i32 %or.i, ptr %arrayidx.i30, align 4
  br label %if.end

if.else:                                          ; preds = %for.body
  %neg.i = xor i32 %shl.i33, -1
  %div3.i34 = lshr i32 %sub.i31, 5
  %arrayidx.i35 = getelementptr [2 x i32], ptr %signal, i32 0, i32 %div3.i34
  %15 = ptrtoint ptr %arrayidx.i35 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.i35, align 4
  %and.i = and i32 %16, %neg.i
  store i32 %and.i, ptr %arrayidx.i35, align 4
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %q.040) #15
  br i1 %call.i.i, label %if.end.i.i, label %if.else.list_del_init.exit_crit_edge

if.else.list_del_init.exit_crit_edge:             ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %q.040, i32 0, i32 1
  %17 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %prev.i.i, align 4
  %19 = ptrtoint ptr %q.040 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %q.040, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %18, ptr %prev1.i.i.i, align 4
  %22 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %20, ptr %18, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %if.else.list_del_init.exit_crit_edge
  %23 = ptrtoint ptr %q.040 to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %q.040, ptr %q.040, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %q.040, i32 0, i32 1
  %24 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %q.040, ptr %prev.i3.i, align 4
  tail call fastcc void @__sigqueue_free(ptr noundef %q.040)
  br label %if.end

if.end:                                           ; preds = %list_del_init.exit, %if.then
  %cmp.not = icmp eq ptr %n.042, %pending
  br i1 %cmp.not, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.end:                                          ; preds = %if.end.for.end_crit_edge, %entry.for.end_crit_edge
  %25 = getelementptr inbounds [2 x i32], ptr %signal, i32 0, i32 1
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %25, align 4
  %28 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %0, align 4
  %or.i37 = or i32 %29, %27
  %arrayidx4.i = getelementptr %struct.sigpending, ptr %pending, i32 0, i32 1, i32 0, i32 1
  %30 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %or.i37, ptr %arrayidx4.i, align 4
  %31 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %signal, align 8
  %33 = ptrtoint ptr %retain to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %retain, align 4
  %or9.i = or i32 %34, %32
  %35 = ptrtoint ptr %signal1 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %or9.i, ptr %signal1, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %retain) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %signal) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @ignore_signals(ptr noundef %t) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %sighand = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 112
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry
  %i.04 = phi i32 [ 0, %entry ], [ %inc, %for.body.for.body_crit_edge ]
  %0 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sighand, align 4
  %arrayidx = getelementptr %struct.sighand_struct, ptr %1, i32 0, i32 3, i32 %i.04
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 1 to ptr), ptr %arrayidx, align 4
  %inc = add nuw nsw i32 %i.04, 1
  %exitcond.not = icmp eq i32 %inc, 64
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @flush_signals(ptr noundef %t)
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @flush_signal_handlers(ptr nocapture noundef readonly %t, i32 noundef %force_default) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %sighand = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 112
  %0 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sighand, align 4
  %action = getelementptr inbounds %struct.sighand_struct, ptr %1, i32 0, i32 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %force_default)
  %tobool.not = icmp eq i32 %force_default, 0
  br label %for.body

for.body:                                         ; preds = %if.end.for.body_crit_edge, %entry
  %ka.014 = phi ptr [ %action, %entry ], [ %incdec.ptr, %if.end.for.body_crit_edge ]
  %i.013 = phi i32 [ 64, %entry ], [ %dec, %if.end.for.body_crit_edge ]
  br i1 %tobool.not, label %lor.lhs.false, label %for.body.if.then_crit_edge

for.body.if.then_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

lor.lhs.false:                                    ; preds = %for.body
  %2 = ptrtoint ptr %ka.014 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ka.014, align 4
  %cmp1.not = icmp eq ptr %3, inttoptr (i32 1 to ptr)
  br i1 %cmp1.not, label %lor.lhs.false.if.end_crit_edge, label %lor.lhs.false.if.then_crit_edge

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %for.body.if.then_crit_edge
  %4 = ptrtoint ptr %ka.014 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %ka.014, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false.if.end_crit_edge
  %sa_flags = getelementptr inbounds %struct.sigaction, ptr %ka.014, i32 0, i32 1
  %incdec.ptr = getelementptr %struct.k_sigaction, ptr %ka.014, i32 1
  %dec = add nsw i32 %i.013, -1
  %cmp.not = icmp eq i32 %dec, 0
  %5 = call ptr @memset(ptr %sa_flags, i32 0, i32 16)
  br i1 %cmp.not, label %for.end, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.end:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @unhandled_signal(ptr nocapture noundef readonly %tsk, i32 noundef %sig) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tgid.i.i = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 69
  %0 = ptrtoint ptr %tgid.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %tgid.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i.not = icmp eq i32 %1, 1
  br i1 %cmp.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %sighand = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 112
  %2 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sighand, align 4
  %sub = add i32 %sig, -1
  %arrayidx = getelementptr %struct.sighand_struct, ptr %3, i32 0, i32 3, i32 %sub
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  %switch = icmp ult ptr %5, inttoptr (i32 2 to ptr)
  br i1 %switch, label %if.end3, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end3:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %ptrace = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 4
  %6 = ptrtoint ptr %ptrace to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ptrace, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool4.not = icmp eq i32 %7, 0
  br label %cleanup

cleanup:                                          ; preds = %if.end3, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ %tobool4.not, %if.end3 ], [ true, %entry.cleanup_crit_edge ], [ false, %if.end.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dequeue_signal(ptr noundef %tsk, ptr nocapture noundef readonly %mask, ptr noundef %info, ptr nocapture noundef writeonly %type) #0 align 64 {
entry:
  %resched_timer = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %resched_timer) #15
  %0 = ptrtoint ptr %resched_timer to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 0, ptr %resched_timer, align 1
  %1 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %type, align 4
  %pending = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 116
  %call = call fastcc i32 @__dequeue_signal(ptr noundef %pending, ptr noundef %mask, ptr noundef %info, ptr noundef nonnull %resched_timer)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end15.thread_crit_edge

entry.if.end15.thread_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end15.thread

if.then:                                          ; preds = %entry
  %2 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 1, ptr %type, align 4
  %signal = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 111
  %3 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %signal, align 16
  %shared_pending = getelementptr inbounds %struct.signal_struct, ptr %4, i32 0, i32 6
  %call1 = call fastcc i32 @__dequeue_signal(ptr noundef %shared_pending, ptr noundef %mask, ptr noundef %info, ptr noundef nonnull %resched_timer)
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %call1)
  %cmp = icmp eq i32 %call1, 14
  br i1 %cmp, label %if.then4, label %if.end15, !prof !510

if.then4:                                         ; preds = %if.then
  %5 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %signal, align 16
  %real_timer = getelementptr inbounds %struct.signal_struct, ptr %6, i32 0, i32 17
  %state.i = getelementptr inbounds %struct.signal_struct, ptr %6, i32 0, i32 17, i32 4
  %7 = ptrtoint ptr %state.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load volatile i8, ptr %state.i, align 8
  %9 = and i8 %8, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.i.not = icmp eq i8 %9, 0
  br i1 %tobool.i.not, label %land.lhs.true, label %if.then4.if.end15.thread_crit_edge

if.then4.if.end15.thread_crit_edge:               ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end15.thread

land.lhs.true:                                    ; preds = %if.then4
  %it_real_incr = getelementptr inbounds %struct.signal_struct, ptr %6, i32 0, i32 18
  %10 = ptrtoint ptr %it_real_incr to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %it_real_incr, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %11)
  %cmp8.not = icmp eq i64 %11, 0
  br i1 %cmp8.not, label %land.lhs.true.if.end15.thread_crit_edge, label %if.then9

land.lhs.true.if.end15.thread_crit_edge:          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end15.thread

if.then9:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  %base = getelementptr inbounds %struct.signal_struct, ptr %6, i32 0, i32 17, i32 3
  %12 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %base, align 4
  %get_time = getelementptr inbounds %struct.hrtimer_clock_base, ptr %13, i32 0, i32 6
  %14 = ptrtoint ptr %get_time to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %get_time, align 4
  %call10 = tail call i64 %15() #15
  %16 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %signal, align 16
  %it_real_incr12 = getelementptr inbounds %struct.signal_struct, ptr %17, i32 0, i32 18
  %18 = ptrtoint ptr %it_real_incr12 to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %it_real_incr12, align 8
  %call13 = tail call i64 @hrtimer_forward(ptr noundef %real_timer, i64 noundef %call10, i64 noundef %19) #15
  %_softexpires.i.i.i = getelementptr inbounds %struct.signal_struct, ptr %6, i32 0, i32 17, i32 1
  %20 = ptrtoint ptr %_softexpires.i.i.i to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %_softexpires.i.i.i, align 8
  %expires.i.i.i = getelementptr inbounds %struct.signal_struct, ptr %6, i32 0, i32 17, i32 0, i32 1
  %22 = ptrtoint ptr %expires.i.i.i to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %expires.i.i.i, align 8
  %sub.i.i = sub i64 %23, %21
  tail call void @hrtimer_start_range_ns(ptr noundef %real_timer, i64 noundef %21, i64 noundef %sub.i.i, i32 noundef 0) #15
  br label %if.end15.thread

if.end15.thread:                                  ; preds = %if.then9, %land.lhs.true.if.end15.thread_crit_edge, %if.then4.if.end15.thread_crit_edge, %entry.if.end15.thread_crit_edge
  %signr.0.ph = phi i32 [ 14, %if.then4.if.end15.thread_crit_edge ], [ 14, %land.lhs.true.if.end15.thread_crit_edge ], [ 14, %if.then9 ], [ %call, %entry.if.end15.thread_crit_edge ]
  tail call void @recalc_sigpending()
  br label %if.end18

if.end15:                                         ; preds = %if.then
  tail call void @recalc_sigpending()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool16.not = icmp eq i32 %call1, 0
  br i1 %tobool16.not, label %if.end15.cleanup_crit_edge, label %if.end15.if.end18_crit_edge

if.end15.if.end18_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end18

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end18:                                         ; preds = %if.end15.if.end18_crit_edge, %if.end15.thread
  %signr.060 = phi i32 [ %signr.0.ph, %if.end15.thread ], [ %call1, %if.end15.if.end18_crit_edge ]
  %24 = add i32 %signr.060, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %24)
  %25 = icmp ult i32 %24, 31
  br i1 %25, label %land.rhs, label %if.end18.if.end31_crit_edge

if.end18.if.end31_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end31

land.rhs:                                         ; preds = %if.end18
  %shl = shl nuw nsw i32 1, %24
  %and = and i32 %shl, 3932160
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool22.not = icmp eq i32 %and, 0
  br i1 %tobool22.not, label %land.rhs.if.end31_crit_edge, label %if.then29, !prof !509

land.rhs.if.end31_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end31

if.then29:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  %26 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 2
  %28 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %task, align 8
  %jobctl = getelementptr inbounds %struct.task_struct, ptr %29, i32 0, i32 61
  %30 = ptrtoint ptr %jobctl to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %jobctl, align 4
  %or = or i32 %31, 65536
  store i32 %or, ptr %jobctl, align 4
  br label %if.end31

if.end31:                                         ; preds = %if.then29, %land.rhs.if.end31_crit_edge, %if.end18.if.end31_crit_edge
  %32 = ptrtoint ptr %resched_timer to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %resched_timer, align 1, !range !518
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %33)
  %tobool32.not = icmp eq i8 %33, 0
  br i1 %tobool32.not, label %if.end31.cleanup_crit_edge, label %if.then33

if.end31.cleanup_crit_edge:                       ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then33:                                        ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #17
  %sighand = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 112
  %34 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_unlock(ptr noundef %35) #15
  tail call void @posixtimer_rearm(ptr noundef %info) #15
  %36 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_lock(ptr noundef %37) #15
  %_sys_private = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 3
  %38 = ptrtoint ptr %_sys_private to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 0, ptr %_sys_private, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then33, %if.end31.cleanup_crit_edge, %if.end15.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end15.cleanup_crit_edge ], [ %signr.060, %if.then33 ], [ %signr.060, %if.end31.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %resched_timer) #15
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__dequeue_signal(ptr noundef %pending, ptr nocapture noundef readonly %mask, ptr nocapture noundef %info, ptr nocapture noundef writeonly %resched_timer) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %signal.i = getelementptr inbounds %struct.sigpending, ptr %pending, i32 0, i32 1
  %0 = ptrtoint ptr %signal.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %signal.i, align 4
  %2 = ptrtoint ptr %mask to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mask, align 4
  %neg.i = xor i32 %3, -1
  %and.i = and i32 %1, %neg.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %sw.bb.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %and4.i = and i32 %and.i, 1073743064
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  %spec.select.i = select i1 %tobool5.not.i, i32 %and.i, i32 %and4.i
  %4 = tail call i32 @llvm.cttz.i32(i32 %spec.select.i, i1 false) #15, !range !512
  %add.i = add nuw nsw i32 %4, 1
  br label %if.then

sw.bb.i:                                          ; preds = %entry
  %arrayidx.i = getelementptr %struct.sigpending, ptr %pending, i32 0, i32 1, i32 0, i32 1
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx.i, align 4
  %arrayidx22.i = getelementptr i32, ptr %mask, i32 1
  %7 = ptrtoint ptr %arrayidx22.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx22.i, align 4
  %neg23.i = xor i32 %8, -1
  %and24.i = and i32 %6, %neg23.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and24.i)
  %tobool25.not.i = icmp eq i32 %and24.i, 0
  br i1 %tobool25.not.i, label %sw.bb.i.if.end_crit_edge, label %if.end27.i

sw.bb.i.if.end_crit_edge:                         ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end27.i:                                       ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #17
  %9 = tail call i32 @llvm.cttz.i32(i32 %and24.i, i1 true) #15, !range !512
  %add32.i = add nuw nsw i32 %9, 33
  br label %if.then

if.then:                                          ; preds = %if.end27.i, %if.then.i
  %retval.0.i.ph = phi i32 [ %add32.i, %if.end27.i ], [ %add.i, %if.then.i ]
  %10 = ptrtoint ptr %pending to i32
  call void @__asan_load4_noabort(i32 %10)
  %q.048.i = load ptr, ptr %pending, align 4
  %cmp.not49.i = icmp eq ptr %q.048.i, %pending
  br i1 %cmp.not49.i, label %if.then.for.end.i_crit_edge, label %if.then.for.body.i_crit_edge

if.then.for.body.i_crit_edge:                     ; preds = %if.then
  br label %for.body.i

if.then.for.end.i_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then.for.body.i_crit_edge
  %q.051.i = phi ptr [ %q.0.i, %for.inc.i.for.body.i_crit_edge ], [ %q.048.i, %if.then.for.body.i_crit_edge ]
  %first.050.i = phi ptr [ %first.1.i, %for.inc.i.for.body.i_crit_edge ], [ null, %if.then.for.body.i_crit_edge ]
  %info4.i = getelementptr inbounds %struct.sigqueue, ptr %q.051.i, i32 0, i32 2
  %11 = ptrtoint ptr %info4.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %info4.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %retval.0.i.ph)
  %cmp5.i = icmp eq i32 %12, %retval.0.i.ph
  br i1 %cmp5.i, label %if.then.i5, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i

if.then.i5:                                       ; preds = %for.body.i
  %tobool.not.i4 = icmp eq ptr %first.050.i, null
  br i1 %tobool.not.i4, label %if.then.i5.for.inc.i_crit_edge, label %if.then.i5.still_pending.i_crit_edge

if.then.i5.still_pending.i_crit_edge:             ; preds = %if.then.i5
  call void @__sanitizer_cov_trace_pc() #17
  br label %still_pending.i

if.then.i5.for.inc.i_crit_edge:                   ; preds = %if.then.i5
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i5.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %first.1.i = phi ptr [ %first.050.i, %for.body.i.for.inc.i_crit_edge ], [ %q.051.i, %if.then.i5.for.inc.i_crit_edge ]
  %13 = ptrtoint ptr %q.051.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %q.0.i = load ptr, ptr %q.051.i, align 4
  %cmp.not.i = icmp eq ptr %q.0.i, %pending
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.then.for.end.i_crit_edge
  %first.0.lcssa.i = phi ptr [ null, %if.then.for.end.i_crit_edge ], [ %first.1.i, %for.inc.i.for.end.i_crit_edge ]
  %sub.i.i = add nsw i32 %retval.0.i.ph, -1
  %rem.i.i = and i32 %sub.i.i, 31
  %shl.i.i = shl nuw i32 1, %rem.i.i
  %neg.i.i = xor i32 %shl.i.i, -1
  %div3.i.i = lshr i32 %sub.i.i, 5
  %arrayidx.i.i = getelementptr [2 x i32], ptr %signal.i, i32 0, i32 %div3.i.i
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %15, %neg.i.i
  store i32 %and.i.i, ptr %arrayidx.i.i, align 4
  %tobool13.not.i = icmp eq ptr %first.0.lcssa.i, null
  br i1 %tobool13.not.i, label %if.else.i, label %for.end.i.still_pending.i_crit_edge

for.end.i.still_pending.i_crit_edge:              ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %still_pending.i

still_pending.i:                                  ; preds = %for.end.i.still_pending.i_crit_edge, %if.then.i5.still_pending.i_crit_edge
  %first.047.i = phi ptr [ %first.0.lcssa.i, %for.end.i.still_pending.i_crit_edge ], [ %first.050.i, %if.then.i5.still_pending.i_crit_edge ]
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %first.047.i) #15
  br i1 %call.i.i.i, label %if.end.i.i.i, label %still_pending.i.list_del_init.exit.i_crit_edge

still_pending.i.list_del_init.exit.i_crit_edge:   ; preds = %still_pending.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_del_init.exit.i

if.end.i.i.i:                                     ; preds = %still_pending.i
  call void @__sanitizer_cov_trace_pc() #17
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %first.047.i, i32 0, i32 1
  %16 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %prev.i.i.i, align 4
  %18 = ptrtoint ptr %first.047.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %first.047.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %17, ptr %prev1.i.i.i.i, align 4
  %21 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %19, ptr %17, align 4
  br label %list_del_init.exit.i

list_del_init.exit.i:                             ; preds = %if.end.i.i.i, %still_pending.i.list_del_init.exit.i_crit_edge
  %22 = ptrtoint ptr %first.047.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %first.047.i, ptr %first.047.i, align 4
  %prev.i3.i.i = getelementptr inbounds %struct.list_head, ptr %first.047.i, i32 0, i32 1
  %23 = ptrtoint ptr %prev.i3.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %first.047.i, ptr %prev.i3.i.i, align 4
  %info16.i = getelementptr inbounds %struct.sigqueue, ptr %first.047.i, i32 0, i32 2
  %24 = call ptr @memcpy(ptr %info, ptr %info16.i, i32 32)
  %flags.i = getelementptr inbounds %struct.sigqueue, ptr %first.047.i, i32 0, i32 1
  %25 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %flags.i, align 4
  %and.i7 = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i7)
  %tobool17.not.i = icmp eq i32 %and.i7, 0
  br i1 %tobool17.not.i, label %list_del_init.exit.i.land.end.i_crit_edge, label %land.lhs.true.i

list_del_init.exit.i.land.end.i_crit_edge:        ; preds = %list_del_init.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.end.i

land.lhs.true.i:                                  ; preds = %list_del_init.exit.i
  %si_code.i = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %27 = ptrtoint ptr %si_code.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %si_code.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %28)
  %cmp18.i = icmp eq i32 %28, -2
  br i1 %cmp18.i, label %land.rhs.i, label %land.lhs.true.i.land.end.i_crit_edge

land.lhs.true.i.land.end.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.end.i

land.rhs.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  %_sys_private.i = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 3
  %29 = ptrtoint ptr %_sys_private.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %_sys_private.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool19.i = icmp ne i32 %30, 0
  br label %land.end.i

land.end.i:                                       ; preds = %land.rhs.i, %land.lhs.true.i.land.end.i_crit_edge, %list_del_init.exit.i.land.end.i_crit_edge
  %31 = phi i1 [ false, %land.lhs.true.i.land.end.i_crit_edge ], [ false, %list_del_init.exit.i.land.end.i_crit_edge ], [ %tobool19.i, %land.rhs.i ]
  %frombool.i = zext i1 %31 to i8
  %32 = ptrtoint ptr %resched_timer to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 %frombool.i, ptr %resched_timer, align 1
  %33 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %flags.i, align 4
  %and.i45.i = and i32 %34, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i45.i)
  %tobool.not.i.i = icmp eq i32 %and.i45.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %land.end.i.if.end_crit_edge

land.end.i.if.end_crit_edge:                      ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end.i.i:                                       ; preds = %land.end.i
  %ucounts.i.i = getelementptr inbounds %struct.sigqueue, ptr %first.047.i, i32 0, i32 3
  %35 = ptrtoint ptr %ucounts.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %ucounts.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %36, null
  br i1 %tobool1.not.i.i, label %if.end.i.i.if.end5.i.i_crit_edge, label %if.then2.i.i

if.end.i.i.if.end5.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end5.i.i

if.then2.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dec_rlimit_put_ucounts(ptr noundef nonnull %36, i32 noundef 14) #15
  %37 = ptrtoint ptr %ucounts.i.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr null, ptr %ucounts.i.i, align 4
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then2.i.i, %if.end.i.i.if.end5.i.i_crit_edge
  %38 = load ptr, ptr @sigqueue_cachep, align 4
  tail call void @kmem_cache_free(ptr noundef %38, ptr noundef nonnull %first.047.i) #15
  br label %if.end

if.else.i:                                        ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %39 = getelementptr inbounds i8, ptr %info, i32 20
  %40 = call ptr @memset(ptr %39, i32 0, i32 12)
  %41 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %retval.0.i.ph, ptr %info, align 4
  %si_errno.i = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %42 = call ptr @memset(ptr %si_errno.i, i32 0, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.else.i, %if.end5.i.i, %land.end.i.if.end_crit_edge, %sw.bb.i.if.end_crit_edge
  %retval.0.i11 = phi i32 [ 0, %sw.bb.i.if.end_crit_edge ], [ %retval.0.i.ph, %land.end.i.if.end_crit_edge ], [ %retval.0.i.ph, %if.end5.i.i ], [ %retval.0.i.ph, %if.else.i ]
  ret i32 %retval.0.i11
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @hrtimer_forward(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @posixtimer_rearm(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @signal_wake_up_state(ptr noundef %t, i32 noundef %state) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %stack.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 1
  %0 = ptrtoint ptr %stack.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %stack.i, align 4
  tail call void @_set_bit(i32 noundef 0, ptr noundef %1) #15
  %or = or i32 %state, 1
  %call = tail call i32 @wake_up_state(ptr noundef %t, i32 noundef %or) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @kick_process(ptr noundef %t) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wake_up_state(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kick_process(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @setup_print_fatal_signals(ptr noundef %str) #6 section ".init.text" align 64 {
entry:
  %str.addr = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %str.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %str, ptr %str.addr, align 4
  %call = call i32 @get_option(ptr noundef nonnull %str.addr, ptr noundef nonnull @print_fatal_signals) #15
  ret i32 1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__group_send_sig_info(i32 noundef %sig, ptr noundef %info, ptr noundef %p) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @send_signal(i32 noundef %sig, ptr noundef %info, ptr noundef %p, i32 noundef 1)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @send_signal(i32 noundef %sig, ptr noundef %info, ptr noundef %t, i32 noundef %type) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %magicptr = ptrtoint ptr %info to i32
  %0 = zext i32 %magicptr to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.157)
  switch i32 %magicptr, label %if.else5 [
    i32 0, label %if.then
    i32 1, label %entry.if.end57_crit_edge
  ]

entry.if.end57_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end57

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %1 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task, align 8
  %call1 = tail call ptr @task_active_pid_ns(ptr noundef %t) #15
  %call.i85 = tail call i32 @__task_pid_nr_ns(ptr noundef %4, i32 noundef 0, ptr noundef %call1) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i85)
  %tobool.not = icmp eq i32 %call.i85, 0
  br label %if.end57

if.else5:                                         ; preds = %entry
  %5 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %info, align 4
  %si_code.i = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %7 = ptrtoint ptr %si_code.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %si_code.i, align 4
  %9 = add i32 %8, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 127, i32 %9)
  %10 = icmp ult i32 %9, 127
  br i1 %10, label %if.then.i.i, label %has_si_pid_and_uid.exit

if.then.i.i:                                      ; preds = %if.else5
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %6)
  %cmp2.i.i = icmp ult i32 %6, 32
  br i1 %cmp2.i.i, label %land.lhs.true3.i.i, label %if.then.i.i.if.else43.i.i_crit_edge

if.then.i.i.if.else43.i.i_crit_edge:              ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else43.i.i

land.lhs.true3.i.i:                               ; preds = %if.then.i.i
  %arrayidx.i.i = getelementptr [32 x %struct.anon.111], ptr @sig_sicodes, i32 0, i32 %6
  %11 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx.i.i, align 1
  %conv.i.i = zext i8 %12 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %conv.i.i)
  %cmp4.not.i.i = icmp ugt i32 %8, %conv.i.i
  br i1 %cmp4.not.i.i, label %land.lhs.true3.i.i.if.else43.i.i_crit_edge, label %if.then6.i.i

land.lhs.true3.i.i.if.else43.i.i_crit_edge:       ; preds = %land.lhs.true3.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else43.i.i

if.then6.i.i:                                     ; preds = %land.lhs.true3.i.i
  %layout8.i.i = getelementptr [32 x %struct.anon.111], ptr @sig_sicodes, i32 0, i32 %6, i32 1
  %13 = ptrtoint ptr %layout8.i.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %layout8.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %6)
  %cmp10.i.i = icmp eq i32 %6, 7
  %15 = and i32 %8, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %15)
  %16 = icmp eq i32 %15, 4
  %17 = and i1 %cmp10.i.i, %16
  br i1 %17, label %if.then6.i.i.if.end57_crit_edge, label %if.else.i.i

if.then6.i.i.if.end57_crit_edge:                  ; preds = %if.then6.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end57

if.else.i.i:                                      ; preds = %if.then6.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 11, i32 %6)
  %cmp19.i.i = icmp eq i32 %6, 11
  %18 = add nsw i32 %8, -3
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %18)
  %19 = icmp ult i32 %18, 2
  %or.cond.i = and i1 %cmp19.i.i, %19
  br i1 %or.cond.i, label %if.else.i.i.if.end57_crit_edge, label %if.else32.i.i

if.else.i.i.if.end57_crit_edge:                   ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end57

if.else32.i.i:                                    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %6)
  %cmp33.i.i = icmp eq i32 %6, 5
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %8)
  %cmp36.i.i = icmp eq i32 %8, 6
  %or.cond86.i.i = and i1 %cmp33.i.i, %cmp36.i.i
  br i1 %or.cond86.i.i, label %if.else32.i.i.if.end57_crit_edge, label %siginfo_layout.exit.i

if.else32.i.i.if.end57_crit_edge:                 ; preds = %if.else32.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end57

if.else43.i.i:                                    ; preds = %land.lhs.true3.i.i.if.else43.i.i_crit_edge, %if.then.i.i.if.else43.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %8)
  %cmp44.i.i = icmp ult i32 %8, 7
  br i1 %cmp44.i.i, label %if.else43.i.i.if.end57_crit_edge, label %if.else43.i.i.if.then7_crit_edge

if.else43.i.i.if.then7_crit_edge:                 ; preds = %if.else43.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then7

if.else43.i.i.if.end57_crit_edge:                 ; preds = %if.else43.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end57

siginfo_layout.exit.i:                            ; preds = %if.else32.i.i
  %20 = zext i8 %14 to i64
  call void @__sanitizer_cov_trace_switch(i64 %20, ptr @__sancov_gen_cov_switch_values.158)
  switch i8 %14, label %siginfo_layout.exit.i.if.end57_crit_edge [
    i8 0, label %siginfo_layout.exit.i.if.then7_crit_edge
    i8 9, label %siginfo_layout.exit.i.if.then7_crit_edge111
    i8 10, label %siginfo_layout.exit.i.if.then7_crit_edge112
  ]

siginfo_layout.exit.i.if.then7_crit_edge112:      ; preds = %siginfo_layout.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then7

siginfo_layout.exit.i.if.then7_crit_edge111:      ; preds = %siginfo_layout.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then7

siginfo_layout.exit.i.if.then7_crit_edge:         ; preds = %siginfo_layout.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then7

siginfo_layout.exit.i.if.end57_crit_edge:         ; preds = %siginfo_layout.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end57

has_si_pid_and_uid.exit:                          ; preds = %if.else5
  %21 = zext i32 %8 to i64
  call void @__sanitizer_cov_trace_switch(i64 %21, ptr @__sancov_gen_cov_switch_values.159)
  switch i32 %8, label %has_si_pid_and_uid.exit.if.then7_crit_edge [
    i32 -2, label %has_si_pid_and_uid.exit.if.end57_crit_edge
    i32 -5, label %has_si_pid_and_uid.exit.if.end57_crit_edge113
  ]

has_si_pid_and_uid.exit.if.end57_crit_edge113:    ; preds = %has_si_pid_and_uid.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end57

has_si_pid_and_uid.exit.if.end57_crit_edge:       ; preds = %has_si_pid_and_uid.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end57

has_si_pid_and_uid.exit.if.then7_crit_edge:       ; preds = %has_si_pid_and_uid.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then7

if.then7:                                         ; preds = %has_si_pid_and_uid.exit.if.then7_crit_edge, %siginfo_layout.exit.i.if.then7_crit_edge, %siginfo_layout.exit.i.if.then7_crit_edge111, %siginfo_layout.exit.i.if.then7_crit_edge112, %if.else43.i.i.if.then7_crit_edge
  %22 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %25, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i, label %if.then7.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.then7.rcu_read_lock.exit_crit_edge:            ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.then7
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.then7.rcu_read_lock.exit_crit_edge
  %26 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i74 = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i.i74 to ptr
  %preempt_count.i.i.i.i75 = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i.i75 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i.i75, align 4
  %add.i.i.i76 = add i32 %29, 1
  store volatile i32 %add.i.i.i76, ptr %preempt_count.i.i.i.i75, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i77 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i77, label %rcu_read_lock.exit.rcu_read_lock.exit84_crit_edge, label %land.lhs.true.i80

rcu_read_lock.exit.rcu_read_lock.exit84_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit84

land.lhs.true.i80:                                ; preds = %rcu_read_lock.exit
  %call1.i78 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i78)
  %tobool.not.i79 = icmp eq i32 %call1.i78, 0
  br i1 %tobool.not.i79, label %land.lhs.true.i80.rcu_read_lock.exit84_crit_edge, label %land.lhs.true2.i82

land.lhs.true.i80.rcu_read_lock.exit84_crit_edge: ; preds = %land.lhs.true.i80
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit84

land.lhs.true2.i82:                               ; preds = %land.lhs.true.i80
  %.b4.i81 = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i81, label %land.lhs.true2.i82.rcu_read_lock.exit84_crit_edge, label %if.then.i83

land.lhs.true2.i82.rcu_read_lock.exit84_crit_edge: ; preds = %land.lhs.true2.i82
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit84

if.then.i83:                                      ; preds = %land.lhs.true2.i82
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit84

rcu_read_lock.exit84:                             ; preds = %if.then.i83, %land.lhs.true2.i82.rcu_read_lock.exit84_crit_edge, %land.lhs.true.i80.rcu_read_lock.exit84_crit_edge, %rcu_read_lock.exit.rcu_read_lock.exit84_crit_edge
  %real_cred = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 98
  %30 = ptrtoint ptr %real_cred to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile ptr, ptr %real_cred, align 4
  %call9 = tail call i32 @rcu_read_lock_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %land.lhs.true, label %rcu_read_lock.exit84.do.end17_crit_edge

rcu_read_lock.exit84.do.end17_crit_edge:          ; preds = %rcu_read_lock.exit84
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end17

land.lhs.true:                                    ; preds = %rcu_read_lock.exit84
  %call11 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %land.lhs.true.do.end17_crit_edge, label %land.lhs.true13

land.lhs.true.do.end17_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end17

land.lhs.true13:                                  ; preds = %land.lhs.true
  %.b73 = load i1, ptr @send_signal.__warned, align 1
  br i1 %.b73, label %land.lhs.true13.do.end17_crit_edge, label %if.then15

land.lhs.true13.do.end17_crit_edge:               ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end17

if.then15:                                        ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @send_signal.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1232, ptr noundef nonnull @.str.1) #15
  br label %do.end17

do.end17:                                         ; preds = %if.then15, %land.lhs.true13.do.end17_crit_edge, %land.lhs.true.do.end17_crit_edge, %rcu_read_lock.exit84.do.end17_crit_edge
  %user_ns = getelementptr inbounds %struct.cred, ptr %31, i32 0, i32 25
  %32 = ptrtoint ptr %user_ns to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %user_ns, align 4
  %call.i86 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i86, label %do.end17.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i89

do.end17.rcu_read_unlock.exit_crit_edge:          ; preds = %do.end17
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true.i89:                                ; preds = %do.end17
  %call1.i87 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i87)
  %tobool.not.i88 = icmp eq i32 %call1.i87, 0
  br i1 %tobool.not.i88, label %land.lhs.true.i89.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i91

land.lhs.true.i89.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i89
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true2.i91:                               ; preds = %land.lhs.true.i89
  %.b4.i90 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i90, label %land.lhs.true2.i91.rcu_read_unlock.exit_crit_edge, label %if.then.i92

land.lhs.true2.i91.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i91
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

if.then.i92:                                      ; preds = %land.lhs.true2.i91
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 724, ptr noundef nonnull @.str.91) #15
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i92, %land.lhs.true2.i91.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i89.rcu_read_unlock.exit_crit_edge, %do.end17.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !520
  %34 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i93 = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i.i.i.i93 to ptr
  %preempt_count.i.i.i.i94 = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %preempt_count.i.i.i.i94 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %preempt_count.i.i.i.i94, align 4
  %sub.i.i.i = add i32 %37, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i94, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  %38 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i95 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i95 to ptr
  %task26 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 2
  %40 = ptrtoint ptr %task26 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %task26, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %41, i32 0, i32 99
  %42 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %cred, align 16
  %user_ns27 = getelementptr inbounds %struct.cred, ptr %43, i32 0, i32 25
  %44 = ptrtoint ptr %user_ns27 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %user_ns27, align 4
  %cmp28.not = icmp eq ptr %45, %33
  br i1 %cmp28.not, label %rcu_read_unlock.exit.if.end44_crit_edge, label %if.then29

rcu_read_unlock.exit.if.end44_crit_edge:          ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end44

if.then29:                                        ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #17
  %_uid = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 1
  %46 = ptrtoint ptr %_uid to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %_uid, align 4
  %call39 = tail call i32 @make_kuid(ptr noundef %45, i32 noundef %47) #15
  %.fca.0.insert = insertvalue [1 x i32] poison, i32 %call39, 0
  %call41 = tail call i32 @from_kuid_munged(ptr noundef %33, [1 x i32] %.fca.0.insert) #15
  %48 = ptrtoint ptr %_uid to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %call41, ptr %_uid, align 4
  br label %if.end44

if.end44:                                         ; preds = %if.then29, %rcu_read_unlock.exit.if.end44_crit_edge
  %call.i96 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i96, label %if.end44.rcu_read_unlock.exit106_crit_edge, label %land.lhs.true.i99

if.end44.rcu_read_unlock.exit106_crit_edge:       ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit106

land.lhs.true.i99:                                ; preds = %if.end44
  %call1.i97 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i97)
  %tobool.not.i98 = icmp eq i32 %call1.i97, 0
  br i1 %tobool.not.i98, label %land.lhs.true.i99.rcu_read_unlock.exit106_crit_edge, label %land.lhs.true2.i101

land.lhs.true.i99.rcu_read_unlock.exit106_crit_edge: ; preds = %land.lhs.true.i99
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit106

land.lhs.true2.i101:                              ; preds = %land.lhs.true.i99
  %.b4.i100 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i100, label %land.lhs.true2.i101.rcu_read_unlock.exit106_crit_edge, label %if.then.i102

land.lhs.true2.i101.rcu_read_unlock.exit106_crit_edge: ; preds = %land.lhs.true2.i101
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit106

if.then.i102:                                     ; preds = %land.lhs.true2.i101
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 724, ptr noundef nonnull @.str.91) #15
  br label %rcu_read_unlock.exit106

rcu_read_unlock.exit106:                          ; preds = %if.then.i102, %land.lhs.true2.i101.rcu_read_unlock.exit106_crit_edge, %land.lhs.true.i99.rcu_read_unlock.exit106_crit_edge, %if.end44.rcu_read_unlock.exit106_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !520
  %49 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i103 = and i32 %49, -16384
  %50 = inttoptr i32 %and.i.i.i.i.i103 to ptr
  %preempt_count.i.i.i.i104 = getelementptr inbounds %struct.thread_info, ptr %50, i32 0, i32 1
  %51 = ptrtoint ptr %preempt_count.i.i.i.i104 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile i32, ptr %preempt_count.i.i.i.i104, align 4
  %sub.i.i.i105 = add i32 %52, -1
  store volatile i32 %sub.i.i.i105, ptr %preempt_count.i.i.i.i104, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  %53 = ptrtoint ptr %si_code.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %si_code.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %54)
  %cmp45 = icmp eq i32 %54, 128
  %55 = ptrtoint ptr %task26 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %task26, align 8
  %call49 = tail call ptr @task_active_pid_ns(ptr noundef %t) #15
  %call.i107 = tail call i32 @__task_pid_nr_ns(ptr noundef %56, i32 noundef 0, ptr noundef %call49) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i107)
  %tobool51.not = icmp eq i32 %call.i107, 0
  br i1 %tobool51.not, label %if.then52, label %rcu_read_unlock.exit106.if.end57_crit_edge

rcu_read_unlock.exit106.if.end57_crit_edge:       ; preds = %rcu_read_unlock.exit106
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end57

if.then52:                                        ; preds = %rcu_read_unlock.exit106
  call void @__sanitizer_cov_trace_pc() #17
  %_sifields53 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3
  %57 = ptrtoint ptr %_sifields53 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 0, ptr %_sifields53, align 4
  br label %if.end57

if.end57:                                         ; preds = %if.then52, %rcu_read_unlock.exit106.if.end57_crit_edge, %has_si_pid_and_uid.exit.if.end57_crit_edge, %has_si_pid_and_uid.exit.if.end57_crit_edge113, %siginfo_layout.exit.i.if.end57_crit_edge, %if.else43.i.i.if.end57_crit_edge, %if.else32.i.i.if.end57_crit_edge, %if.else.i.i.if.end57_crit_edge, %if.then6.i.i.if.end57_crit_edge, %if.then, %entry.if.end57_crit_edge
  %force.1.off0 = phi i1 [ %tobool.not, %if.then ], [ false, %has_si_pid_and_uid.exit.if.end57_crit_edge ], [ true, %entry.if.end57_crit_edge ], [ %cmp45, %rcu_read_unlock.exit106.if.end57_crit_edge ], [ true, %if.then52 ], [ false, %siginfo_layout.exit.i.if.end57_crit_edge ], [ false, %if.then6.i.i.if.end57_crit_edge ], [ false, %if.else.i.i.if.end57_crit_edge ], [ false, %if.else43.i.i.if.end57_crit_edge ], [ false, %if.else32.i.i.if.end57_crit_edge ], [ false, %has_si_pid_and_uid.exit.if.end57_crit_edge113 ]
  %call59 = tail call fastcc i32 @__send_signal(i32 noundef %sig, ptr noundef %info, ptr noundef %t, i32 noundef %type, i1 noundef zeroext %force.1.off0)
  ret i32 %call59
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @do_send_sig_info(i32 noundef %sig, ptr noundef %info, ptr noundef %p, i32 noundef %type) local_unnamed_addr #0 align 64 {
entry:
  %flags = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flags) #15
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %flags, align 4, !annotation !511
  %call.i = call ptr @__lock_task_sighand(ptr noundef %p, ptr noundef nonnull %flags) #15
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %call1 = tail call fastcc i32 @send_signal(i32 noundef %sig, ptr noundef %info, ptr noundef %p, i32 noundef %type)
  %sighand.i = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 112
  %1 = ptrtoint ptr %sighand.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %sighand.i, align 4
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %2, i32 noundef %4) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %ret.0 = phi i32 [ %call1, %if.then ], [ -3, %entry.if.end_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flags) #15
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @force_sig_info(ptr noundef %info) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %call1 = tail call fastcc i32 @force_sig_info_to_task(ptr noundef %info, ptr noundef %3, i32 noundef 0)
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @force_sig_info_to_task(ptr noundef %info, ptr noundef %t, i32 noundef %handler) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %info, align 4
  %sighand = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 112
  %2 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sighand, align 4
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %3) #15
  %4 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sighand, align 4
  %sub = add i32 %1, -1
  %arrayidx = getelementptr %struct.sighand_struct, ptr %5, i32 0, i32 3, i32 %sub
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 4
  %blocked9 = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 113
  %div3.i = lshr i32 %sub, 5
  %arrayidx.i = getelementptr [2 x i32], ptr %blocked9, i32 0, i32 %div3.i
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx.i, align 4
  %rem.i = and i32 %sub, 31
  %10 = shl nuw i32 1, %rem.i
  %11 = and i32 %9, %10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.not = icmp eq i32 %11, 0
  %cmp7 = icmp ne ptr %7, inttoptr (i32 1 to ptr)
  %or.cond.not = select i1 %tobool.not, i1 %cmp7, i1 false
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %handler)
  %cmp13.not = icmp eq i32 %handler, 0
  %or.cond58 = and i1 %cmp13.not, %or.cond.not
  br i1 %or.cond58, label %entry.if.end25_crit_edge, label %if.then

entry.if.end25_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end25

if.then:                                          ; preds = %entry
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %handler)
  %cmp17 = icmp eq i32 %handler, 2
  br i1 %cmp17, label %if.then19, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then19:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  %sa_flags = getelementptr inbounds %struct.sigaction, ptr %arrayidx, i32 0, i32 1
  %13 = ptrtoint ptr %sa_flags to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sa_flags, align 4
  %or = or i32 %14, 8388608
  store i32 %or, ptr %sa_flags, align 4
  br label %if.end

if.end:                                           ; preds = %if.then19, %if.then.if.end_crit_edge
  br i1 %tobool.not, label %if.end.if.end25_crit_edge, label %if.then22

if.end.if.end25_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end25

if.then22:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %neg.i = xor i32 %10, -1
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.i, align 4
  %and.i64 = and i32 %16, %neg.i
  store i32 %and.i64, ptr %arrayidx.i, align 4
  tail call void @recalc_sigpending_and_wake(ptr noundef %t)
  br label %if.end25

if.end25:                                         ; preds = %if.then22, %if.end.if.end25_crit_edge, %entry.if.end25_crit_edge
  %17 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx, align 4
  %cmp28 = icmp eq ptr %18, null
  br i1 %cmp28, label %land.lhs.true, label %if.end25.if.end36_crit_edge

if.end25.if.end36_crit_edge:                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end36

land.lhs.true:                                    ; preds = %if.end25
  %ptrace = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 4
  %19 = ptrtoint ptr %ptrace to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %ptrace, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool30.not = icmp eq i32 %20, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %handler)
  %cmp32 = icmp eq i32 %handler, 2
  %or.cond59 = or i1 %cmp32, %tobool30.not
  br i1 %or.cond59, label %if.then34, label %land.lhs.true.if.end36_crit_edge

land.lhs.true.if.end36_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end36

if.then34:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  %signal = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 111
  %21 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %signal, align 16
  %flags35 = getelementptr inbounds %struct.signal_struct, ptr %22, i32 0, i32 12
  %23 = ptrtoint ptr %flags35 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %flags35, align 8
  %and = and i32 %24, -65
  store i32 %and, ptr %flags35, align 8
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %land.lhs.true.if.end36_crit_edge, %if.end25.if.end36_crit_edge
  %call37 = tail call fastcc i32 @send_signal(i32 noundef %1, ptr noundef %info, ptr noundef %t, i32 noundef 0)
  %25 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %26, i32 noundef %call2) #15
  ret i32 %call37
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @zap_other_threads(ptr noundef %p) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %signal = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 111
  %0 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %signal, align 16
  %group_stop_count = getelementptr inbounds %struct.signal_struct, ptr %1, i32 0, i32 11
  %2 = ptrtoint ptr %group_stop_count to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %group_stop_count, align 4
  %thread_group.i10 = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 80
  %3 = ptrtoint ptr %thread_group.i10 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %thread_group.i10, align 4
  %add.ptr.i11 = getelementptr i8, ptr %4, i32 -1396
  %cmp.not12 = icmp eq ptr %add.ptr.i11, %p
  br i1 %cmp.not12, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

while.body:                                       ; preds = %while.cond.backedge.while.body_crit_edge, %entry.while.body_crit_edge
  %add.ptr.i14 = phi ptr [ %add.ptr.i, %while.cond.backedge.while.body_crit_edge ], [ %add.ptr.i11, %entry.while.body_crit_edge ]
  %5 = phi ptr [ %17, %while.cond.backedge.while.body_crit_edge ], [ %4, %entry.while.body_crit_edge ]
  %count.013 = phi i32 [ %inc, %while.cond.backedge.while.body_crit_edge ], [ 0, %entry.while.body_crit_edge ]
  %jobctl.i = getelementptr i8, ptr %5, i32 -152
  %6 = ptrtoint ptr %jobctl.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %jobctl.i, align 4
  %and11.i = and i32 %7, -2031617
  store i32 %and11.i, ptr %jobctl.i, align 4
  %8 = and i32 %7, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %.not.i.not = icmp eq i32 %8, 0
  br i1 %.not.i.not, label %while.body.task_clear_jobctl_pending.exit_crit_edge, label %if.then.i.i, !prof !521

while.body.task_clear_jobctl_pending.exit_crit_edge: ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %task_clear_jobctl_pending.exit

if.then.i.i:                                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #17
  %and4.i.i = and i32 %7, -4128769
  %9 = ptrtoint ptr %jobctl.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %and4.i.i, ptr %jobctl.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !515
  tail call void @wake_up_bit(ptr noundef %jobctl.i, i32 noundef 21) #15
  br label %task_clear_jobctl_pending.exit

task_clear_jobctl_pending.exit:                   ; preds = %if.then.i.i, %while.body.task_clear_jobctl_pending.exit_crit_edge
  %inc = add i32 %count.013, 1
  %exit_state = getelementptr i8, ptr %5, i32 -168
  %10 = ptrtoint ptr %exit_state to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %exit_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.not = icmp eq i32 %11, 0
  br i1 %tobool.not, label %if.end, label %task_clear_jobctl_pending.exit.while.cond.backedge_crit_edge

task_clear_jobctl_pending.exit.while.cond.backedge_crit_edge: ; preds = %task_clear_jobctl_pending.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.cond.backedge

if.end:                                           ; preds = %task_clear_jobctl_pending.exit
  %signal1 = getelementptr i8, ptr %5, i32 324
  %12 = ptrtoint ptr %signal1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %signal1, align 4
  %or.i = or i32 %13, 256
  store i32 %or.i, ptr %signal1, align 4
  %stack.i.i.i = getelementptr i8, ptr %5, i32 -1392
  %14 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %stack.i.i.i, align 4
  tail call void @_set_bit(i32 noundef 0, ptr noundef %15) #15
  %call.i.i = tail call i32 @wake_up_state(ptr noundef %add.ptr.i14, i32 noundef 257) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i9, label %if.end.while.cond.backedge_crit_edge

if.end.while.cond.backedge_crit_edge:             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.cond.backedge

if.then.i.i9:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @kick_process(ptr noundef %add.ptr.i14) #15
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.then.i.i9, %if.end.while.cond.backedge_crit_edge, %task_clear_jobctl_pending.exit.while.cond.backedge_crit_edge
  %thread_group.i = getelementptr inbounds %struct.task_struct, ptr %add.ptr.i14, i32 0, i32 80
  %16 = ptrtoint ptr %thread_group.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %thread_group.i, align 4
  %add.ptr.i = getelementptr i8, ptr %17, i32 -1396
  %cmp.not = icmp eq ptr %add.ptr.i, %p
  br i1 %cmp.not, label %while.cond.backedge.while.end_crit_edge, label %while.cond.backedge.while.body_crit_edge

while.cond.backedge.while.body_crit_edge:         ; preds = %while.cond.backedge
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body

while.cond.backedge.while.end_crit_edge:          ; preds = %while.cond.backedge
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

while.end:                                        ; preds = %while.cond.backedge.while.end_crit_edge, %entry.while.end_crit_edge
  %count.0.lcssa = phi i32 [ 0, %entry.while.end_crit_edge ], [ %inc, %while.cond.backedge.while.end_crit_edge ]
  ret i32 %count.0.lcssa
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__lock_task_sighand(ptr noundef %tsk, ptr nocapture noundef %flags) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %sighand1 = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 112
  br label %for.cond

for.cond:                                         ; preds = %if.end39, %rcu_read_lock.exit
  %4 = ptrtoint ptr %sighand1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %sighand1, align 4
  %call = tail call i32 @rcu_read_lock_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %for.cond.do.end8_crit_edge

for.cond.do.end8_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end8

land.lhs.true:                                    ; preds = %for.cond
  %call3 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %land.lhs.true.do.end8_crit_edge, label %land.lhs.true5

land.lhs.true.do.end8_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end8

land.lhs.true5:                                   ; preds = %land.lhs.true
  %.b47 = load i1, ptr @__lock_task_sighand.__warned, align 1
  br i1 %.b47, label %land.lhs.true5.do.end8_crit_edge, label %if.then

land.lhs.true5.do.end8_crit_edge:                 ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end8

if.then:                                          ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @__lock_task_sighand.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1392, ptr noundef nonnull @.str.1) #15
  br label %do.end8

do.end8:                                          ; preds = %if.then, %land.lhs.true5.do.end8_crit_edge, %land.lhs.true.do.end8_crit_edge, %for.cond.do.end8_crit_edge
  %cmp = icmp eq ptr %5, null
  br i1 %cmp, label %do.end8.for.end_crit_edge, label %do.body15, !prof !510

do.end8.for.end_crit_edge:                        ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

do.body15:                                        ; preds = %do.end8
  %call19 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull %5) #15
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %call19, ptr %flags, align 4
  %7 = ptrtoint ptr %sighand1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile ptr, ptr %sighand1, align 4
  %cmp30 = icmp eq ptr %5, %8
  br i1 %cmp30, label %do.body15.for.end_crit_edge, label %if.end39, !prof !509

do.body15.for.end_crit_edge:                      ; preds = %do.body15
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

if.end39:                                         ; preds = %do.body15
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull %5, i32 noundef %call19) #15
  br label %for.cond

for.end:                                          ; preds = %do.body15.for.end_crit_edge, %do.end8.for.end_crit_edge
  %call.i48 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i48, label %for.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i51

for.end.rcu_read_unlock.exit_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true.i51:                                ; preds = %for.end
  %call1.i49 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i49)
  %tobool.not.i50 = icmp eq i32 %call1.i49, 0
  br i1 %tobool.not.i50, label %land.lhs.true.i51.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i53

land.lhs.true.i51.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i51
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true2.i53:                               ; preds = %land.lhs.true.i51
  %.b4.i52 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i52, label %land.lhs.true2.i53.rcu_read_unlock.exit_crit_edge, label %if.then.i54

land.lhs.true2.i53.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i53
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

if.then.i54:                                      ; preds = %land.lhs.true2.i53
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 724, ptr noundef nonnull @.str.91) #15
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i54, %land.lhs.true2.i53.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i51.rcu_read_unlock.exit_crit_edge, %for.end.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !520
  %9 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i55 = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i.i.i55 to ptr
  %preempt_count.i.i.i.i56 = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i.i.i56 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i.i.i56, align 4
  %sub.i.i.i = add i32 %12, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i56, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  ret ptr %5
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_read_unlock() unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %call = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call, label %entry.do.end_crit_edge, label %land.lhs.true

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true2

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %.b4 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4, label %land.lhs.true2.do.end_crit_edge, label %if.then

land.lhs.true2.do.end_crit_edge:                  ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end

if.then:                                          ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 724, ptr noundef nonnull @.str.91) #15
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true2.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !520
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %3, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lockdep_assert_task_sighand_held(ptr noundef %task) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %sighand1 = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 112
  %4 = ptrtoint ptr %sighand1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %sighand1, align 4
  %call = tail call i32 @rcu_read_lock_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end8_crit_edge

rcu_read_lock.exit.do.end8_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end8

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call3 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %land.lhs.true.do.end8_crit_edge, label %land.lhs.true5

land.lhs.true.do.end8_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end8

land.lhs.true5:                                   ; preds = %land.lhs.true
  %.b97 = load i1, ptr @lockdep_assert_task_sighand_held.__warned, align 1
  br i1 %.b97, label %land.lhs.true5.do.end8_crit_edge, label %if.then

land.lhs.true5.do.end8_crit_edge:                 ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end8

if.then:                                          ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @lockdep_assert_task_sighand_held.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1423, ptr noundef nonnull @.str.1) #15
  br label %do.end8

do.end8:                                          ; preds = %if.then, %land.lhs.true5.do.end8_crit_edge, %land.lhs.true.do.end8_crit_edge, %rcu_read_lock.exit.do.end8_crit_edge
  %tobool10.not = icmp eq ptr %5, null
  br i1 %tobool10.not, label %land.end48, label %do.body12

do.body12:                                        ; preds = %do.end8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %6 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool13.not = icmp eq i32 %6, 0
  br i1 %tobool13.not, label %do.body12.if.end90_crit_edge, label %land.rhs

do.body12.if.end90_crit_edge:                     ; preds = %do.body12
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end90

land.rhs:                                         ; preds = %do.body12
  %dep_map = getelementptr inbounds %struct.anon.23, ptr %5, i32 0, i32 1
  %call.i98 = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i98)
  %cmp.not = icmp eq i32 %call.i98, 0
  br i1 %cmp.not, label %land.rhs.if.end90.sink.split_crit_edge, label %land.rhs.if.end90_crit_edge, !prof !510

land.rhs.if.end90_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end90

land.rhs.if.end90.sink.split_crit_edge:           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end90.sink.split

land.end48:                                       ; preds = %do.end8
  %.b9596 = load i1, ptr @lockdep_assert_task_sighand_held.__already_done, align 1
  br i1 %.b9596, label %land.end48.if.end90_crit_edge, label %if.then55, !prof !509

land.end48.if.end90_crit_edge:                    ; preds = %land.end48
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end90

if.then55:                                        ; preds = %land.end48
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @lockdep_assert_task_sighand_held.__already_done, align 1
  br label %if.end90.sink.split

if.end90.sink.split:                              ; preds = %if.then55, %land.rhs.if.end90.sink.split_crit_edge
  %.sink = phi i32 [ 1427, %if.then55 ], [ 1425, %land.rhs.if.end90.sink.split_crit_edge ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef %.sink, i32 noundef 9, ptr noundef null) #15
  br label %if.end90

if.end90:                                         ; preds = %if.end90.sink.split, %land.end48.if.end90_crit_edge, %land.rhs.if.end90_crit_edge, %do.body12.if.end90_crit_edge
  %call.i99 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i99, label %if.end90.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i102

if.end90.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true.i102:                               ; preds = %if.end90
  %call1.i100 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i100)
  %tobool.not.i101 = icmp eq i32 %call1.i100, 0
  br i1 %tobool.not.i101, label %land.lhs.true.i102.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i104

land.lhs.true.i102.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i102
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true2.i104:                              ; preds = %land.lhs.true.i102
  %.b4.i103 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i103, label %land.lhs.true2.i104.rcu_read_unlock.exit_crit_edge, label %if.then.i105

land.lhs.true2.i104.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i104
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

if.then.i105:                                     ; preds = %land.lhs.true2.i104
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 724, ptr noundef nonnull @.str.91) #15
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i105, %land.lhs.true2.i104.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i102.rcu_read_unlock.exit_crit_edge, %if.end90.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !520
  %7 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i106 = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i.i.i106 to ptr
  %preempt_count.i.i.i.i107 = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i.i.i.i107 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i.i.i.i107, align 4
  %sub.i.i.i = add i32 %10, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i107, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @group_send_sig_info(i32 noundef %sig, ptr noundef %info, ptr noundef %p, i32 noundef %type) local_unnamed_addr #0 align 64 {
entry:
  %flags.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %call = tail call fastcc i32 @check_kill_permission(i32 noundef %sig, ptr noundef %info, ptr noundef %p)
  %call.i8 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i8, label %rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i11

rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true.i11:                                ; preds = %rcu_read_lock.exit
  %call1.i9 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i9)
  %tobool.not.i10 = icmp eq i32 %call1.i9, 0
  br i1 %tobool.not.i10, label %land.lhs.true.i11.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i13

land.lhs.true.i11.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i11
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true2.i13:                               ; preds = %land.lhs.true.i11
  %.b4.i12 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i12, label %land.lhs.true2.i13.rcu_read_unlock.exit_crit_edge, label %if.then.i14

land.lhs.true2.i13.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i13
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

if.then.i14:                                      ; preds = %land.lhs.true2.i13
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 724, ptr noundef nonnull @.str.91) #15
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i14, %land.lhs.true2.i13.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i11.rcu_read_unlock.exit_crit_edge, %rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !520
  %4 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i15 = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i.i.i15 to ptr
  %preempt_count.i.i.i.i16 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i.i.i16, align 4
  %sub.i.i.i = add i32 %7, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i16, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_unlock.exit.if.end_crit_edge

rcu_read_unlock.exit.if.end_crit_edge:            ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true:                                    ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sig)
  %tobool1.not = icmp eq i32 %sig, 0
  br i1 %tobool1.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flags.i) #15
  %8 = ptrtoint ptr %flags.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -1, ptr %flags.i, align 4, !annotation !511
  %call.i.i = call ptr @__lock_task_sighand(ptr noundef %p, ptr noundef nonnull %flags.i) #15
  %tobool.not.i17 = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i17, label %if.then.do_send_sig_info.exit_crit_edge, label %if.then.i19

if.then.do_send_sig_info.exit_crit_edge:          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %do_send_sig_info.exit

if.then.i19:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  %call1.i18 = tail call fastcc i32 @send_signal(i32 noundef %sig, ptr noundef %info, ptr noundef %p, i32 noundef %type) #15
  %sighand.i.i = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 112
  %9 = ptrtoint ptr %sighand.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %sighand.i.i, align 4
  %11 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %flags.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %10, i32 noundef %12) #15
  br label %do_send_sig_info.exit

do_send_sig_info.exit:                            ; preds = %if.then.i19, %if.then.do_send_sig_info.exit_crit_edge
  %ret.0.i = phi i32 [ %call1.i18, %if.then.i19 ], [ -3, %if.then.do_send_sig_info.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flags.i) #15
  br label %if.end

if.end:                                           ; preds = %do_send_sig_info.exit, %land.lhs.true.if.end_crit_edge, %rcu_read_unlock.exit.if.end_crit_edge
  %ret.0 = phi i32 [ %call, %rcu_read_unlock.exit.if.end_crit_edge ], [ %ret.0.i, %do_send_sig_info.exit ], [ 0, %land.lhs.true.if.end_crit_edge ]
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @check_kill_permission(i32 noundef %sig, ptr noundef %info, ptr noundef %t) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %sig)
  %cmp.i = icmp ugt i32 %sig, 64
  br i1 %cmp.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %cmp.i32 = icmp eq ptr %info, null
  br i1 %cmp.i32, label %if.end.if.end3_crit_edge, label %lor.rhs.i

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end3

lor.rhs.i:                                        ; preds = %if.end
  %cmp.i.not.i = icmp ugt ptr %info, inttoptr (i32 1 to ptr)
  br i1 %cmp.i.not.i, label %si_fromuser.exit, label %lor.rhs.i.cleanup_crit_edge

lor.rhs.i.cleanup_crit_edge:                      ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

si_fromuser.exit:                                 ; preds = %lor.rhs.i
  %si_code.i = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %0 = ptrtoint ptr %si_code.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %si_code.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp1.i = icmp slt i32 %1, 1
  br i1 %cmp1.i, label %si_fromuser.exit.if.end3_crit_edge, label %si_fromuser.exit.cleanup_crit_edge

si_fromuser.exit.cleanup_crit_edge:               ; preds = %si_fromuser.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

si_fromuser.exit.if.end3_crit_edge:               ; preds = %si_fromuser.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end3

if.end3:                                          ; preds = %si_fromuser.exit.if.end3_crit_edge, %if.end.if.end3_crit_edge
  %call4 = tail call i32 @audit_signal_info(i32 noundef %sig, ptr noundef %t) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.end7, label %if.end3.cleanup_crit_edge

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end7:                                          ; preds = %if.end3
  %2 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task, align 8
  %signal.i = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 111
  %6 = ptrtoint ptr %signal.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %signal.i, align 16
  %signal1.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 111
  %8 = ptrtoint ptr %signal1.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %signal1.i, align 16
  %cmp.i33 = icmp eq ptr %7, %9
  br i1 %cmp.i33, label %if.end7.if.end19_crit_edge, label %land.lhs.true

if.end7.if.end19_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end19

land.lhs.true:                                    ; preds = %if.end7
  %cred1.i = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 99
  %10 = ptrtoint ptr %cred1.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %cred1.i, align 16
  %real_cred.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 98
  %12 = ptrtoint ptr %real_cred.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %real_cred.i, align 4
  %call7.i = tail call i32 @rcu_read_lock_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %land.lhs.true.do.end13.i_crit_edge

land.lhs.true.do.end13.i_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end13.i

land.lhs.true.i:                                  ; preds = %land.lhs.true
  %call8.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %tobool9.not.i = icmp eq i32 %call8.i, 0
  br i1 %tobool9.not.i, label %land.lhs.true.i.do.end13.i_crit_edge, label %land.lhs.true10.i

land.lhs.true.i.do.end13.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end13.i

land.lhs.true10.i:                                ; preds = %land.lhs.true.i
  %.b48.i = load i1, ptr @kill_ok_by_cred.__warned.92, align 1
  br i1 %.b48.i, label %land.lhs.true10.i.do.end13.i_crit_edge, label %if.then.i

land.lhs.true10.i.do.end13.i_crit_edge:           ; preds = %land.lhs.true10.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end13.i

if.then.i:                                        ; preds = %land.lhs.true10.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @kill_ok_by_cred.__warned.92, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 818, ptr noundef nonnull @.str.1) #15
  br label %do.end13.i

do.end13.i:                                       ; preds = %if.then.i, %land.lhs.true10.i.do.end13.i_crit_edge, %land.lhs.true.i.do.end13.i_crit_edge, %land.lhs.true.do.end13.i_crit_edge
  %euid.i = getelementptr inbounds %struct.cred, ptr %11, i32 0, i32 8
  %suid.i = getelementptr inbounds %struct.cred, ptr %13, i32 0, i32 6
  %14 = ptrtoint ptr %euid.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %.unpack.i = load i32, ptr %euid.i, align 4
  %15 = ptrtoint ptr %suid.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %.unpack41.i = load i32, ptr %suid.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %.unpack.i, i32 %.unpack41.i)
  %cmp.i.i = icmp eq i32 %.unpack.i, %.unpack41.i
  br i1 %cmp.i.i, label %do.end13.i.if.end19_crit_edge, label %lor.lhs.false.i

do.end13.i.if.end19_crit_edge:                    ; preds = %do.end13.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end19

lor.lhs.false.i:                                  ; preds = %do.end13.i
  %uid.i = getelementptr inbounds %struct.cred, ptr %13, i32 0, i32 4
  %16 = ptrtoint ptr %uid.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %.unpack43.i = load i32, ptr %uid.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %.unpack.i, i32 %.unpack43.i)
  %cmp.i49.i = icmp eq i32 %.unpack.i, %.unpack43.i
  br i1 %cmp.i49.i, label %lor.lhs.false.i.if.end19_crit_edge, label %lor.lhs.false21.i

lor.lhs.false.i.if.end19_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end19

lor.lhs.false21.i:                                ; preds = %lor.lhs.false.i
  %uid22.i = getelementptr inbounds %struct.cred, ptr %11, i32 0, i32 4
  %17 = ptrtoint ptr %uid22.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %.unpack44.i = load i32, ptr %uid22.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %.unpack44.i, i32 %.unpack41.i)
  %cmp.i50.i = icmp eq i32 %.unpack44.i, %.unpack41.i
  call void @__sanitizer_cov_trace_cmp4(i32 %.unpack44.i, i32 %.unpack43.i)
  %cmp.i51.i = icmp eq i32 %.unpack44.i, %.unpack43.i
  %or.cond.i = select i1 %cmp.i50.i, i1 true, i1 %cmp.i51.i
  br i1 %or.cond.i, label %lor.lhs.false21.i.if.end19_crit_edge, label %kill_ok_by_cred.exit

lor.lhs.false21.i.if.end19_crit_edge:             ; preds = %lor.lhs.false21.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end19

kill_ok_by_cred.exit:                             ; preds = %lor.lhs.false21.i
  %user_ns.i = getelementptr inbounds %struct.cred, ptr %13, i32 0, i32 25
  %18 = ptrtoint ptr %user_ns.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %user_ns.i, align 4
  %call33.i = tail call zeroext i1 @ns_capable(ptr noundef %19, i32 noundef 5) #15
  br i1 %call33.i, label %kill_ok_by_cred.exit.if.end19_crit_edge, label %if.then11

kill_ok_by_cred.exit.if.end19_crit_edge:          ; preds = %kill_ok_by_cred.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end19

if.then11:                                        ; preds = %kill_ok_by_cred.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 18, i32 %sig)
  %cond = icmp eq i32 %sig, 18
  br i1 %cond, label %sw.bb, label %if.then11.cleanup_crit_edge

if.then11.cleanup_crit_edge:                      ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

sw.bb:                                            ; preds = %if.then11
  %20 = ptrtoint ptr %signal1.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %signal1.i, align 16
  %arrayidx.i = getelementptr %struct.signal_struct, ptr %21, i32 0, i32 22, i32 3
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx.i, align 4
  %tobool13.not = icmp eq ptr %23, null
  br i1 %tobool13.not, label %sw.bb.if.end19_crit_edge, label %lor.lhs.false

sw.bb.if.end19_crit_edge:                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end19

lor.lhs.false:                                    ; preds = %sw.bb
  %24 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %task, align 8
  %signal.i36 = getelementptr inbounds %struct.task_struct, ptr %25, i32 0, i32 111
  %26 = ptrtoint ptr %signal.i36 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %signal.i36, align 16
  %arrayidx.i37 = getelementptr %struct.signal_struct, ptr %27, i32 0, i32 22, i32 3
  %28 = ptrtoint ptr %arrayidx.i37 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx.i37, align 4
  %cmp = icmp eq ptr %23, %29
  br i1 %cmp, label %lor.lhs.false.if.end19_crit_edge, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

lor.lhs.false.if.end19_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end19

if.end19:                                         ; preds = %lor.lhs.false.if.end19_crit_edge, %sw.bb.if.end19_crit_edge, %kill_ok_by_cred.exit.if.end19_crit_edge, %lor.lhs.false21.i.if.end19_crit_edge, %lor.lhs.false.i.if.end19_crit_edge, %do.end13.i.if.end19_crit_edge, %if.end7.if.end19_crit_edge
  %call20 = tail call i32 @security_task_kill(ptr noundef %t, ptr noundef %info, i32 noundef %sig, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end19, %lor.lhs.false.cleanup_crit_edge, %if.then11.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %si_fromuser.exit.cleanup_crit_edge, %lor.rhs.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call20, %if.end19 ], [ -22, %entry.cleanup_crit_edge ], [ 0, %si_fromuser.exit.cleanup_crit_edge ], [ %call4, %if.end3.cleanup_crit_edge ], [ -1, %lor.lhs.false.cleanup_crit_edge ], [ -1, %if.then11.cleanup_crit_edge ], [ 0, %lor.rhs.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__kill_pgrp_info(i32 noundef %sig, ptr noundef %info, ptr noundef %pgrp) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp.not = icmp eq ptr %pgrp, null
  br i1 %cmp.not, label %entry.do.end36.thread_crit_edge, label %do.body2

entry.do.end36.thread_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end36.thread

do.body2:                                         ; preds = %entry
  %call = tail call i32 @rcu_read_lock_any_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %do.body2.do.end_crit_edge

do.body2.do.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end

land.lhs.true:                                    ; preds = %do.body2
  %call3 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true5

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end

land.lhs.true5:                                   ; preds = %land.lhs.true
  %.b50 = load i1, ptr @__kill_pgrp_info.__warned, align 1
  br i1 %.b50, label %land.lhs.true5.do.end_crit_edge, label %if.then7

land.lhs.true5.do.end_crit_edge:                  ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end

if.then7:                                         ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @__kill_pgrp_info.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1462, ptr noundef nonnull @.str.2) #15
  br label %do.end

do.end:                                           ; preds = %if.then7, %land.lhs.true5.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %do.body2.do.end_crit_edge
  %arrayidx = getelementptr %struct.pid, ptr %pgrp, i32 0, i32 3, i32 2
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %arrayidx, align 4
  %tobool13.not = icmp eq ptr %1, null
  %add.ptr = getelementptr i8, ptr %1, i32 -1380
  %tobool15.not5963 = icmp eq ptr %add.ptr, null
  %tobool15.not59 = or i1 %tobool13.not, %tobool15.not5963
  br i1 %tobool15.not59, label %do.end.do.end36.thread_crit_edge, label %do.end.for.body_crit_edge

do.end.for.body_crit_edge:                        ; preds = %do.end
  br label %for.body

do.end.do.end36.thread_crit_edge:                 ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end36.thread

for.body:                                         ; preds = %for.body.for.body_crit_edge, %do.end.for.body_crit_edge
  %p.061 = phi ptr [ %add.ptr30, %for.body.for.body_crit_edge ], [ %add.ptr, %do.end.for.body_crit_edge ]
  %success.060 = phi i32 [ %or, %for.body.for.body_crit_edge ], [ 0, %do.end.for.body_crit_edge ]
  %call16 = tail call i32 @group_send_sig_info(i32 noundef %sig, ptr noundef %info, ptr noundef nonnull %p.061, i32 noundef 2)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  %lnot.ext = zext i1 %tobool17.not to i32
  %or = or i32 %success.060, %lnot.ext
  %arrayidx23 = getelementptr %struct.task_struct, ptr %p.061, i32 0, i32 79, i32 2
  %2 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %arrayidx23, align 4
  %tobool26.not = icmp eq ptr %3, null
  %add.ptr30 = getelementptr i8, ptr %3, i32 -1380
  %tobool15.not67 = icmp eq ptr %add.ptr30, null
  %tobool15.not = or i1 %tobool26.not, %tobool15.not67
  br i1 %tobool15.not, label %do.end36, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

do.end36:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or)
  %phi.cmp = icmp eq i32 %or, 0
  br i1 %phi.cmp, label %do.end36.do.end36.thread_crit_edge, label %do.end36._crit_edge

do.end36._crit_edge:                              ; preds = %do.end36
  call void @__sanitizer_cov_trace_pc() #17
  br label %4

do.end36.do.end36.thread_crit_edge:               ; preds = %do.end36
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end36.thread

do.end36.thread:                                  ; preds = %do.end36.do.end36.thread_crit_edge, %do.end.do.end36.thread_crit_edge, %entry.do.end36.thread_crit_edge
  %retval1.157 = phi i32 [ %call16, %do.end36.do.end36.thread_crit_edge ], [ -3, %entry.do.end36.thread_crit_edge ], [ -3, %do.end.do.end36.thread_crit_edge ]
  br label %4

4:                                                ; preds = %do.end36.thread, %do.end36._crit_edge
  %5 = phi i32 [ %retval1.157, %do.end36.thread ], [ 0, %do.end36._crit_edge ]
  ret i32 %5
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_any_held() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @kill_pid_info(i32 noundef %sig, ptr noundef %info, ptr noundef %pid) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  br label %for.cond

for.cond:                                         ; preds = %rcu_read_unlock.exit.for.cond_crit_edge, %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i, label %for.cond.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

for.cond.rcu_read_lock.exit_crit_edge:            ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %for.cond
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %for.cond.rcu_read_lock.exit_crit_edge
  %call = tail call ptr @pid_task(ptr noundef %pid, i32 noundef 0) #15
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %rcu_read_lock.exit.if.end_crit_edge, label %if.then

rcu_read_lock.exit.if.end_crit_edge:              ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #17
  %call1 = tail call i32 @group_send_sig_info(i32 noundef %sig, ptr noundef %info, ptr noundef nonnull %call, i32 noundef 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %rcu_read_lock.exit.if.end_crit_edge
  %error.1 = phi i32 [ %call1, %if.then ], [ -3, %rcu_read_lock.exit.if.end_crit_edge ]
  %call.i10 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i10, label %if.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i13

if.end.rcu_read_unlock.exit_crit_edge:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true.i13:                                ; preds = %if.end
  %call1.i11 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i11)
  %tobool.not.i12 = icmp eq i32 %call1.i11, 0
  br i1 %tobool.not.i12, label %land.lhs.true.i13.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i15

land.lhs.true.i13.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i13
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true2.i15:                               ; preds = %land.lhs.true.i13
  %.b4.i14 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i14, label %land.lhs.true2.i15.rcu_read_unlock.exit_crit_edge, label %if.then.i16

land.lhs.true2.i15.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i15
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

if.then.i16:                                      ; preds = %land.lhs.true2.i15
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 724, ptr noundef nonnull @.str.91) #15
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i16, %land.lhs.true2.i15.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i13.rcu_read_unlock.exit_crit_edge, %if.end.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !520
  %4 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i17 = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i.i.i17 to ptr
  %preempt_count.i.i.i.i18 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i.i.i18 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i.i.i18, align 4
  %sub.i.i.i = add i32 %7, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i18, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 -3, i32 %error.1)
  %cmp = icmp ne i32 %error.1, -3
  %spec.select = select i1 %tobool.not, i1 true, i1 %cmp
  br i1 %spec.select, label %if.then5, label %rcu_read_unlock.exit.for.cond_crit_edge, !prof !509

rcu_read_unlock.exit.for.cond_crit_edge:          ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond

if.then5:                                         ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #17
  ret i32 %error.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pid_task(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @kill_pid_usb_asyncio(i32 noundef %sig, i32 noundef %errno, [1 x i32] %addr.coerce, ptr noundef %pid, ptr noundef %cred) #0 align 64 {
entry:
  %info = alloca %struct.kernel_siginfo, align 4
  %flags = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info) #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flags) #15
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %flags, align 4, !annotation !511
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %sig)
  %cmp.i = icmp ugt i32 %sig, 64
  br i1 %cmp.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3
  %2 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %3 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %addr.coerce.fca.0.extract = extractvalue [1 x i32] %addr.coerce, 0
  %4 = getelementptr inbounds i8, ptr %info, i32 16
  %5 = call ptr @memset(ptr %4, i32 0, i32 16)
  %6 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %sig, ptr %info, align 4
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %errno, ptr %3, align 4
  %8 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -4, ptr %2, align 4
  %9 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %addr.coerce.fca.0.extract, ptr %1, align 4
  %10 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %13, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i, label %if.end.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end.rcu_read_lock.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end.rcu_read_lock.exit_crit_edge
  %call1 = tail call ptr @pid_task(ptr noundef %pid, i32 noundef 0) #15
  %tobool2.not = icmp eq ptr %call1, null
  br i1 %tobool2.not, label %rcu_read_lock.exit.out_unlock_crit_edge, label %if.end4

rcu_read_lock.exit.out_unlock_crit_edge:          ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %out_unlock

if.end4:                                          ; preds = %rcu_read_lock.exit
  %real_cred.i = getelementptr inbounds %struct.task_struct, ptr %call1, i32 0, i32 98
  %14 = ptrtoint ptr %real_cred.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %real_cred.i, align 4
  %call.i35 = tail call i32 @rcu_read_lock_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i35)
  %tobool.not.i36 = icmp eq i32 %call.i35, 0
  br i1 %tobool.not.i36, label %land.lhs.true.i37, label %if.end4.do.end7.i_crit_edge

if.end4.do.end7.i_crit_edge:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end7.i

land.lhs.true.i37:                                ; preds = %if.end4
  %call2.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i37.do.end7.i_crit_edge, label %land.lhs.true4.i

land.lhs.true.i37.do.end7.i_crit_edge:            ; preds = %land.lhs.true.i37
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end7.i

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i37
  %.b39.i = load i1, ptr @kill_as_cred_perm.__warned, align 1
  br i1 %.b39.i, label %land.lhs.true4.i.do.end7.i_crit_edge, label %if.then.i38

land.lhs.true4.i.do.end7.i_crit_edge:             ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end7.i

if.then.i38:                                      ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @kill_as_cred_perm.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1504, ptr noundef nonnull @.str.1) #15
  br label %do.end7.i

do.end7.i:                                        ; preds = %if.then.i38, %land.lhs.true4.i.do.end7.i_crit_edge, %land.lhs.true.i37.do.end7.i_crit_edge, %if.end4.do.end7.i_crit_edge
  %euid.i = getelementptr inbounds %struct.cred, ptr %cred, i32 0, i32 8
  %suid.i = getelementptr inbounds %struct.cred, ptr %15, i32 0, i32 6
  %16 = ptrtoint ptr %euid.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %.unpack.i = load i32, ptr %euid.i, align 4
  %17 = ptrtoint ptr %suid.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %.unpack32.i = load i32, ptr %suid.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %.unpack.i, i32 %.unpack32.i)
  %cmp.i.i = icmp eq i32 %.unpack.i, %.unpack32.i
  br i1 %cmp.i.i, label %do.end7.i.if.end7_crit_edge, label %lor.lhs.false.i

do.end7.i.if.end7_crit_edge:                      ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end7

lor.lhs.false.i:                                  ; preds = %do.end7.i
  %uid.i = getelementptr inbounds %struct.cred, ptr %15, i32 0, i32 4
  %18 = ptrtoint ptr %uid.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %.unpack34.i = load i32, ptr %uid.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %.unpack.i, i32 %.unpack34.i)
  %cmp.i40.i = icmp eq i32 %.unpack.i, %.unpack34.i
  br i1 %cmp.i40.i, label %lor.lhs.false.i.if.end7_crit_edge, label %kill_as_cred_perm.exit

lor.lhs.false.i.if.end7_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end7

kill_as_cred_perm.exit:                           ; preds = %lor.lhs.false.i
  %uid16.i = getelementptr inbounds %struct.cred, ptr %cred, i32 0, i32 4
  %19 = ptrtoint ptr %uid16.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %.unpack35.i = load i32, ptr %uid16.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %.unpack35.i, i32 %.unpack32.i)
  %cmp.i41.i = icmp eq i32 %.unpack35.i, %.unpack32.i
  call void @__sanitizer_cov_trace_cmp4(i32 %.unpack35.i, i32 %.unpack34.i)
  %cmp.i42.i = icmp eq i32 %.unpack35.i, %.unpack34.i
  %spec.select.i = select i1 %cmp.i41.i, i1 true, i1 %cmp.i42.i
  br i1 %spec.select.i, label %kill_as_cred_perm.exit.if.end7_crit_edge, label %kill_as_cred_perm.exit.out_unlock_crit_edge

kill_as_cred_perm.exit.out_unlock_crit_edge:      ; preds = %kill_as_cred_perm.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %out_unlock

kill_as_cred_perm.exit.if.end7_crit_edge:         ; preds = %kill_as_cred_perm.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end7

if.end7:                                          ; preds = %kill_as_cred_perm.exit.if.end7_crit_edge, %lor.lhs.false.i.if.end7_crit_edge, %do.end7.i.if.end7_crit_edge
  %call8 = call i32 @security_task_kill(ptr noundef nonnull %call1, ptr noundef nonnull %info, i32 noundef %sig, ptr noundef %cred) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %if.end11, label %if.end7.out_unlock_crit_edge

if.end7.out_unlock_crit_edge:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #17
  br label %out_unlock

if.end11:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sig)
  %tobool12.not = icmp eq i32 %sig, 0
  br i1 %tobool12.not, label %if.end11.out_unlock_crit_edge, label %if.then13

if.end11.out_unlock_crit_edge:                    ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #17
  br label %out_unlock

if.then13:                                        ; preds = %if.end11
  %call.i39 = call ptr @__lock_task_sighand(ptr noundef nonnull %call1, ptr noundef nonnull %flags) #15
  %tobool15.not = icmp eq ptr %call.i39, null
  br i1 %tobool15.not, label %if.then13.out_unlock_crit_edge, label %if.then16

if.then13.out_unlock_crit_edge:                   ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #17
  br label %out_unlock

if.then16:                                        ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #17
  %call17 = call fastcc i32 @__send_signal(i32 noundef %sig, ptr noundef nonnull %info, ptr noundef nonnull %call1, i32 noundef 1, i1 noundef zeroext false)
  %sighand.i = getelementptr inbounds %struct.task_struct, ptr %call1, i32 0, i32 112
  %20 = ptrtoint ptr %sighand.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %sighand.i, align 4
  %22 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %flags, align 4
  call void @_raw_spin_unlock_irqrestore(ptr noundef %21, i32 noundef %23) #15
  br label %out_unlock

out_unlock:                                       ; preds = %if.then16, %if.then13.out_unlock_crit_edge, %if.end11.out_unlock_crit_edge, %if.end7.out_unlock_crit_edge, %kill_as_cred_perm.exit.out_unlock_crit_edge, %rcu_read_lock.exit.out_unlock_crit_edge
  %ret.0 = phi i32 [ %call8, %if.end7.out_unlock_crit_edge ], [ %call17, %if.then16 ], [ 0, %if.end11.out_unlock_crit_edge ], [ -3, %rcu_read_lock.exit.out_unlock_crit_edge ], [ -1, %kill_as_cred_perm.exit.out_unlock_crit_edge ], [ -3, %if.then13.out_unlock_crit_edge ]
  %call.i40 = call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i40, label %out_unlock.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i43

out_unlock.rcu_read_unlock.exit_crit_edge:        ; preds = %out_unlock
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true.i43:                                ; preds = %out_unlock
  %call1.i41 = call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i41)
  %tobool.not.i42 = icmp eq i32 %call1.i41, 0
  br i1 %tobool.not.i42, label %land.lhs.true.i43.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i45

land.lhs.true.i43.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i43
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true2.i45:                               ; preds = %land.lhs.true.i43
  %.b4.i44 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i44, label %land.lhs.true2.i45.rcu_read_unlock.exit_crit_edge, label %if.then.i46

land.lhs.true2.i45.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i45
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

if.then.i46:                                      ; preds = %land.lhs.true2.i45
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 724, ptr noundef nonnull @.str.91) #15
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i46, %land.lhs.true2.i45.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i43.rcu_read_unlock.exit_crit_edge, %out_unlock.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #15, !srcloc !520
  %24 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i47 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i.i.i47 to ptr
  %preempt_count.i.i.i.i48 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i.i.i48 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i.i.i48, align 4
  %sub.i.i.i = add i32 %27, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i48, align 4
  call void @rcu_read_unlock_strict() #15
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %rcu_read_unlock.exit ], [ -22, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flags) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info) #15
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_task_kill(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__send_signal(i32 noundef %sig, ptr noundef %info, ptr noundef %t, i32 noundef %type, i1 noundef zeroext %force) unnamed_addr #0 align 64 {
entry:
  %agg.tmp.sroa.0.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %sighand = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 112
  %0 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sighand, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i)
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %agg.tmp.sroa.0.0.copyload.i = load volatile i32, ptr %1, align 4
  %3 = ptrtoint ptr %agg.tmp.sroa.0.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile i32 %agg.tmp.sroa.0.0.copyload.i, ptr %agg.tmp.sroa.0.i, align 4
  %lock.sroa.0.0.extract.shift.i.i = lshr i32 %agg.tmp.sroa.0.0.copyload.i, 16
  %conv.i.i = and i32 %agg.tmp.sroa.0.0.copyload.i, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i.i, i32 %lock.sroa.0.0.extract.shift.i.i)
  %cmp.i.i.not = icmp eq i32 %conv.i.i, %lock.sroa.0.0.extract.shift.i.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i)
  br i1 %cmp.i.i.not, label %do.body4, label %do.end9, !prof !510

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/signal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1082, 0\0A.popsection", ""() #15, !srcloc !522
  unreachable

do.end9:                                          ; preds = %entry
  %call11 = tail call fastcc zeroext i1 @prepare_signal(i32 noundef %sig, ptr noundef %t, i1 noundef zeroext %force)
  br i1 %call11, label %if.end13, label %do.end9.ret130_crit_edge

do.end9.ret130_crit_edge:                         ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #17
  br label %ret130

if.end13:                                         ; preds = %do.end9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %type)
  %cmp.not = icmp eq i32 %type, 0
  br i1 %cmp.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #17
  %signal = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 111
  %4 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %signal, align 16
  %shared_pending = getelementptr inbounds %struct.signal_struct, ptr %5, i32 0, i32 6
  br label %cond.end

cond.false:                                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #17
  %pending14 = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 116
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %shared_pending, %cond.true ], [ %pending14, %cond.false ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sig)
  %cmp.i = icmp slt i32 %sig, 32
  br i1 %cmp.i, label %legacy_queue.exit, label %lor.lhs.false.thread

legacy_queue.exit:                                ; preds = %cond.end
  %signal.i = getelementptr inbounds %struct.sigpending, ptr %cond, i32 0, i32 1
  %sub.i.i = add i32 %sig, -1
  %div3.i.i = lshr i32 %sub.i.i, 5
  %arrayidx.i.i = getelementptr [2 x i32], ptr %signal.i, i32 0, i32 %div3.i.i
  %6 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.i.i, align 4
  %rem.i.i = and i32 %sub.i.i, 31
  %8 = shl nuw i32 1, %rem.i.i
  %9 = and i32 %7, %8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.i.not = icmp eq i32 %9, 0
  br i1 %tobool.i.not, label %if.end17, label %legacy_queue.exit.ret130_crit_edge

legacy_queue.exit.ret130_crit_edge:               ; preds = %legacy_queue.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %ret130

if.end17:                                         ; preds = %legacy_queue.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %sig)
  %cmp18 = icmp eq i32 %sig, 9
  br i1 %cmp18, label %if.end17.out_set_crit_edge, label %lor.lhs.false

if.end17.out_set_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #17
  br label %out_set

lor.lhs.false:                                    ; preds = %if.end17
  %flags = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 3
  %10 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags, align 4
  %and = and i32 %11, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool19.not = icmp eq i32 %and, 0
  br i1 %tobool19.not, label %if.then23.critedge, label %lor.lhs.false.out_set_crit_edge

lor.lhs.false.out_set_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %out_set

lor.lhs.false.thread:                             ; preds = %cond.end
  %flags219 = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 3
  %12 = ptrtoint ptr %flags219 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %flags219, align 4
  %and220 = and i32 %13, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and220)
  %tobool19.not221 = icmp eq i32 %and220, 0
  br i1 %tobool19.not221, label %lor.lhs.false.thread.if.end27_crit_edge, label %lor.lhs.false.thread.out_set_crit_edge

lor.lhs.false.thread.out_set_crit_edge:           ; preds = %lor.lhs.false.thread
  call void @__sanitizer_cov_trace_pc() #17
  br label %out_set

lor.lhs.false.thread.if.end27_crit_edge:          ; preds = %lor.lhs.false.thread
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end27

if.then23.critedge:                               ; preds = %lor.lhs.false
  %cmp.i205.not = icmp ugt ptr %info, inttoptr (i32 1 to ptr)
  br i1 %cmp.i205.not, label %lor.rhs, label %if.then23.critedge.if.end27_crit_edge

if.then23.critedge.if.end27_crit_edge:            ; preds = %if.then23.critedge
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end27

lor.rhs:                                          ; preds = %if.then23.critedge
  call void @__sanitizer_cov_trace_pc() #17
  %si_code = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %14 = ptrtoint ptr %si_code to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %si_code, align 4
  %16 = xor i32 %15, -1
  %.lobit.not = lshr i32 %16, 31
  br label %if.end27

if.end27:                                         ; preds = %lor.rhs, %if.then23.critedge.if.end27_crit_edge, %lor.lhs.false.thread.if.end27_crit_edge
  %override_rlimit.0 = phi i32 [ 0, %lor.lhs.false.thread.if.end27_crit_edge ], [ 1, %if.then23.critedge.if.end27_crit_edge ], [ %.lobit.not, %lor.rhs ]
  %call28 = tail call fastcc ptr @__sigqueue_alloc(i32 noundef %sig, ptr noundef %t, i32 noundef 2592, i32 noundef %override_rlimit.0, i32 noundef 0)
  %tobool29.not = icmp eq ptr %call28, null
  br i1 %tobool29.not, label %if.else81, label %if.then30

if.then30:                                        ; preds = %if.end27
  %prev.i = getelementptr inbounds %struct.list_head, ptr %cond, i32 0, i32 1
  %17 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call28, ptr noundef %18, ptr noundef %cond) #15
  br i1 %call.i.i, label %if.end.i.i, label %if.then30.list_add_tail.exit_crit_edge

if.then30.list_add_tail.exit_crit_edge:           ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #17
  %19 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %call28, ptr %prev.i, align 4
  %20 = ptrtoint ptr %call28 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %cond, ptr %call28, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %call28, i32 0, i32 1
  %21 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %18, ptr %prev3.i.i, align 4
  %22 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %call28, ptr %18, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %if.then30.list_add_tail.exit_crit_edge
  %23 = ptrtoint ptr %info to i32
  %24 = zext i32 %23 to i64
  call void @__sanitizer_cov_trace_switch(i64 %24, ptr @__sancov_gen_cov_switch_values.160)
  switch i32 %23, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb66
  ]

sw.bb:                                            ; preds = %list_add_tail.exit
  %info32 = getelementptr inbounds %struct.sigqueue, ptr %call28, i32 0, i32 2
  %25 = getelementptr inbounds %struct.sigqueue, ptr %call28, i32 0, i32 2, i32 0, i32 3
  %26 = call ptr @memset(ptr %25, i32 0, i32 20)
  %27 = ptrtoint ptr %info32 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %sig, ptr %info32, align 4
  %si_errno = getelementptr inbounds %struct.sigqueue, ptr %call28, i32 0, i32 2, i32 0, i32 1
  %28 = ptrtoint ptr %si_errno to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %si_errno, align 4
  %si_code36 = getelementptr inbounds %struct.sigqueue, ptr %call28, i32 0, i32 2, i32 0, i32 2
  %29 = ptrtoint ptr %si_code36 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 0, ptr %si_code36, align 4
  %30 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %30, -16384
  %31 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 2
  %32 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %task, align 8
  %call38 = tail call ptr @task_active_pid_ns(ptr noundef %t) #15
  %call.i206 = tail call i32 @__task_pid_nr_ns(ptr noundef %33, i32 noundef 1, ptr noundef %call38) #15
  %_sifields = getelementptr inbounds %struct.sigqueue, ptr %call28, i32 0, i32 2, i32 0, i32 3
  %34 = ptrtoint ptr %_sifields to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %call.i206, ptr %_sifields, align 4
  %35 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i = and i32 %35, -16384
  %36 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %36, i32 0, i32 1
  %37 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %38, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i, label %sw.bb.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

sw.bb.rcu_read_lock.exit_crit_edge:               ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %sw.bb
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %sw.bb.rcu_read_lock.exit_crit_edge
  %39 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i194 = and i32 %39, -16384
  %40 = inttoptr i32 %and.i.i.i.i.i194 to ptr
  %preempt_count.i.i.i.i195 = getelementptr inbounds %struct.thread_info, ptr %40, i32 0, i32 1
  %41 = ptrtoint ptr %preempt_count.i.i.i.i195 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %preempt_count.i.i.i.i195, align 4
  %add.i.i.i196 = add i32 %42, 1
  store volatile i32 %add.i.i.i196, ptr %preempt_count.i.i.i.i195, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i197 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i197, label %rcu_read_lock.exit.rcu_read_lock.exit204_crit_edge, label %land.lhs.true.i200

rcu_read_lock.exit.rcu_read_lock.exit204_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit204

land.lhs.true.i200:                               ; preds = %rcu_read_lock.exit
  %call1.i198 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i198)
  %tobool.not.i199 = icmp eq i32 %call1.i198, 0
  br i1 %tobool.not.i199, label %land.lhs.true.i200.rcu_read_lock.exit204_crit_edge, label %land.lhs.true2.i202

land.lhs.true.i200.rcu_read_lock.exit204_crit_edge: ; preds = %land.lhs.true.i200
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit204

land.lhs.true2.i202:                              ; preds = %land.lhs.true.i200
  %.b4.i201 = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i201, label %land.lhs.true2.i202.rcu_read_lock.exit204_crit_edge, label %if.then.i203

land.lhs.true2.i202.rcu_read_lock.exit204_crit_edge: ; preds = %land.lhs.true2.i202
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit204

if.then.i203:                                     ; preds = %land.lhs.true2.i202
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit204

rcu_read_lock.exit204:                            ; preds = %if.then.i203, %land.lhs.true2.i202.rcu_read_lock.exit204_crit_edge, %land.lhs.true.i200.rcu_read_lock.exit204_crit_edge, %rcu_read_lock.exit.rcu_read_lock.exit204_crit_edge
  %real_cred = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 98
  %43 = ptrtoint ptr %real_cred to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile ptr, ptr %real_cred, align 4
  %call45 = tail call i32 @rcu_read_lock_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call45)
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %land.lhs.true, label %rcu_read_lock.exit204.do.end54_crit_edge

rcu_read_lock.exit204.do.end54_crit_edge:         ; preds = %rcu_read_lock.exit204
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end54

land.lhs.true:                                    ; preds = %rcu_read_lock.exit204
  %call47 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call47)
  %tobool48.not = icmp eq i32 %call47, 0
  br i1 %tobool48.not, label %land.lhs.true.do.end54_crit_edge, label %land.lhs.true49

land.lhs.true.do.end54_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end54

land.lhs.true49:                                  ; preds = %land.lhs.true
  %.b191 = load i1, ptr @__send_signal.__warned, align 1
  br i1 %.b191, label %land.lhs.true49.do.end54_crit_edge, label %if.then51

land.lhs.true49.do.end54_crit_edge:               ; preds = %land.lhs.true49
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end54

if.then51:                                        ; preds = %land.lhs.true49
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @__send_signal.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 1133, ptr noundef nonnull @.str.1) #15
  br label %do.end54

do.end54:                                         ; preds = %if.then51, %land.lhs.true49.do.end54_crit_edge, %land.lhs.true.do.end54_crit_edge, %rcu_read_lock.exit204.do.end54_crit_edge
  %user_ns = getelementptr inbounds %struct.cred, ptr %44, i32 0, i32 25
  %45 = ptrtoint ptr %user_ns to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %user_ns, align 4
  tail call fastcc void @rcu_read_unlock()
  %47 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %48, i32 0, i32 99
  %49 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %cred, align 16
  %uid = getelementptr inbounds %struct.cred, ptr %50, i32 0, i32 4
  %51 = ptrtoint ptr %uid to i32
  call void @__asan_load4_noabort(i32 %51)
  %agg.tmp.sroa.0.0.copyload = load i32, ptr %uid, align 4
  %.fca.0.insert = insertvalue [1 x i32] poison, i32 %agg.tmp.sroa.0.0.copyload, 0
  %call63 = tail call i32 @from_kuid_munged(ptr noundef %46, [1 x i32] %.fca.0.insert) #15
  %_uid = getelementptr inbounds %struct.sigqueue, ptr %call28, i32 0, i32 2, i32 0, i32 3, i32 0, i32 1
  %52 = ptrtoint ptr %_uid to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %call63, ptr %_uid, align 4
  tail call fastcc void @rcu_read_unlock()
  br label %out_set

sw.bb66:                                          ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #17
  %info67 = getelementptr inbounds %struct.sigqueue, ptr %call28, i32 0, i32 2
  %53 = getelementptr inbounds %struct.sigqueue, ptr %call28, i32 0, i32 2, i32 0, i32 3, i32 0, i32 2
  %54 = call ptr @memset(ptr %53, i32 0, i32 12)
  %55 = ptrtoint ptr %info67 to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %sig, ptr %info67, align 4
  %si_errno71 = getelementptr inbounds %struct.sigqueue, ptr %call28, i32 0, i32 2, i32 0, i32 1
  %56 = ptrtoint ptr %si_errno71 to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 0, ptr %si_errno71, align 4
  %si_code73 = getelementptr inbounds %struct.sigqueue, ptr %call28, i32 0, i32 2, i32 0, i32 2
  %57 = ptrtoint ptr %si_code73 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 128, ptr %si_code73, align 4
  %_sifields75 = getelementptr inbounds %struct.sigqueue, ptr %call28, i32 0, i32 2, i32 0, i32 3
  %58 = ptrtoint ptr %_sifields75 to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 0, ptr %_sifields75, align 4
  %_uid79 = getelementptr inbounds %struct.sigqueue, ptr %call28, i32 0, i32 2, i32 0, i32 3, i32 0, i32 1
  %59 = ptrtoint ptr %_uid79 to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 0, ptr %_uid79, align 4
  br label %out_set

sw.default:                                       ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #17
  %info80 = getelementptr inbounds %struct.sigqueue, ptr %call28, i32 0, i32 2
  %60 = call ptr @memcpy(ptr %info80, ptr %info, i32 32)
  br label %out_set

if.else81:                                        ; preds = %if.end27
  %cmp.i207.not = icmp ugt ptr %info, inttoptr (i32 1 to ptr)
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %sig)
  %cmp85 = icmp sgt i32 %sig, 31
  %or.cond = and i1 %cmp85, %cmp.i207.not
  br i1 %or.cond, label %land.lhs.true86, label %if.else81.out_set_crit_edge

if.else81.out_set_crit_edge:                      ; preds = %if.else81
  call void @__sanitizer_cov_trace_pc() #17
  br label %out_set

land.lhs.true86:                                  ; preds = %if.else81
  %si_code87 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %61 = ptrtoint ptr %si_code87 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %si_code87, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %cmp88.not = icmp eq i32 %62, 0
  br i1 %cmp88.not, label %land.lhs.true86.out_set_crit_edge, label %land.lhs.true86.ret130_crit_edge

land.lhs.true86.ret130_crit_edge:                 ; preds = %land.lhs.true86
  call void @__sanitizer_cov_trace_pc() #17
  br label %ret130

land.lhs.true86.out_set_crit_edge:                ; preds = %land.lhs.true86
  call void @__sanitizer_cov_trace_pc() #17
  br label %out_set

out_set:                                          ; preds = %land.lhs.true86.out_set_crit_edge, %if.else81.out_set_crit_edge, %sw.default, %sw.bb66, %do.end54, %lor.lhs.false.thread.out_set_crit_edge, %lor.lhs.false.out_set_crit_edge, %if.end17.out_set_crit_edge
  %result.0 = phi i32 [ 0, %if.end17.out_set_crit_edge ], [ 0, %lor.lhs.false.out_set_crit_edge ], [ 0, %sw.default ], [ 0, %sw.bb66 ], [ 0, %do.end54 ], [ 4, %land.lhs.true86.out_set_crit_edge ], [ 4, %if.else81.out_set_crit_edge ], [ 0, %lor.lhs.false.thread.out_set_crit_edge ]
  %63 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %sighand, align 4
  %head.i.i = getelementptr inbounds %struct.sighand_struct, ptr %64, i32 0, i32 2, i32 1
  %65 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile ptr, ptr %head.i.i, align 4
  %cmp.i.i.not.i = icmp eq ptr %66, %head.i.i
  br i1 %cmp.i.i.not.i, label %out_set.signalfd_notify.exit_crit_edge, label %if.then.i209, !prof !509

out_set.signalfd_notify.exit_crit_edge:           ; preds = %out_set
  call void @__sanitizer_cov_trace_pc() #17
  br label %signalfd_notify.exit

if.then.i209:                                     ; preds = %out_set
  call void @__sanitizer_cov_trace_pc() #17
  %signalfd_wqh.i = getelementptr inbounds %struct.sighand_struct, ptr %64, i32 0, i32 2
  tail call void @__wake_up(ptr noundef %signalfd_wqh.i, i32 noundef 3, i32 noundef 1, ptr noundef null) #15
  br label %signalfd_notify.exit

signalfd_notify.exit:                             ; preds = %if.then.i209, %out_set.signalfd_notify.exit_crit_edge
  %signal93 = getelementptr inbounds %struct.sigpending, ptr %cond, i32 0, i32 1
  %sub.i = add i32 %sig, -1
  %rem.i = and i32 %sub.i, 31
  %shl.i = shl nuw i32 1, %rem.i
  %div3.i = lshr i32 %sub.i, 5
  %arrayidx.i = getelementptr [2 x i32], ptr %signal93, i32 0, i32 %div3.i
  %67 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %arrayidx.i, align 4
  %or.i = or i32 %68, %shl.i
  store i32 %or.i, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %type)
  %cmp94 = icmp ugt i32 %type, 1
  br i1 %cmp94, label %if.then95, label %signalfd_notify.exit.if.end129_crit_edge

signalfd_notify.exit.if.end129_crit_edge:         ; preds = %signalfd_notify.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end129

if.then95:                                        ; preds = %signalfd_notify.exit
  %signal96 = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 111
  %69 = ptrtoint ptr %signal96 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %signal96, align 16
  %multiprocess = getelementptr inbounds %struct.signal_struct, ptr %70, i32 0, i32 7
  %71 = ptrtoint ptr %multiprocess to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %multiprocess, align 4
  %tobool98.not = icmp eq ptr %72, null
  %add.ptr = getelementptr i8, ptr %72, i32 -8
  %tobool104.not224226 = icmp eq ptr %add.ptr, null
  %tobool104.not224 = or i1 %tobool98.not, %tobool104.not224226
  br i1 %tobool104.not224, label %if.then95.if.end129_crit_edge, label %for.body.lr.ph

if.then95.if.end129_crit_edge:                    ; preds = %if.then95
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end129

for.body.lr.ph:                                   ; preds = %if.then95
  call void @__sanitizer_cov_trace_const_cmp4(i32 18, i32 %sig)
  %cmp107 = icmp eq i32 %sig, 18
  %73 = add i32 %sig, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %73)
  %74 = icmp ult i32 %73, 31
  %shl = shl nuw nsw i32 1, %sub.i
  %and114 = and i32 %shl, 3932160
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and114)
  %tobool115.not = icmp ne i32 %and114, 0
  %brmerge = select i1 %74, i1 %tobool115.not, i1 false
  %brmerge228 = select i1 %cmp107, i1 true, i1 %brmerge
  %.mux = select i1 %cmp107, i32 -3932161, i32 -131073
  br label %for.body

for.body:                                         ; preds = %if.end118.for.body_crit_edge, %for.body.lr.ph
  %delayed.0225 = phi ptr [ %add.ptr, %for.body.lr.ph ], [ %add.ptr125, %if.end118.for.body_crit_edge ]
  br i1 %brmerge228, label %if.end118.sink.split, label %for.body.if.end118_crit_edge

for.body.if.end118_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end118

if.end118.sink.split:                             ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  %75 = ptrtoint ptr %delayed.0225 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %delayed.0225, align 4
  %and.i211 = and i32 %76, %.mux
  store i32 %and.i211, ptr %delayed.0225, align 4
  br label %if.end118

if.end118:                                        ; preds = %if.end118.sink.split, %for.body.if.end118_crit_edge
  %arrayidx.i216 = getelementptr [2 x i32], ptr %delayed.0225, i32 0, i32 %div3.i
  %77 = ptrtoint ptr %arrayidx.i216 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %arrayidx.i216, align 4
  %or.i217 = or i32 %78, %shl.i
  store i32 %or.i217, ptr %arrayidx.i216, align 4
  %node = getelementptr inbounds %struct.multiprocess_signals, ptr %delayed.0225, i32 0, i32 1
  %79 = ptrtoint ptr %node to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %node, align 4
  %tobool121.not = icmp eq ptr %80, null
  %add.ptr125 = getelementptr i8, ptr %80, i32 -8
  %tobool104.not229 = icmp eq ptr %add.ptr125, null
  %tobool104.not = or i1 %tobool121.not, %tobool104.not229
  br i1 %tobool104.not, label %if.end118.if.end129_crit_edge, label %if.end118.for.body_crit_edge

if.end118.for.body_crit_edge:                     ; preds = %if.end118
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

if.end118.if.end129_crit_edge:                    ; preds = %if.end118
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end129

if.end129:                                        ; preds = %if.end118.if.end129_crit_edge, %if.then95.if.end129_crit_edge, %signalfd_notify.exit.if.end129_crit_edge
  tail call fastcc void @complete_signal(i32 noundef %sig, ptr noundef %t, i32 noundef %type)
  br label %ret130

ret130:                                           ; preds = %if.end129, %land.lhs.true86.ret130_crit_edge, %legacy_queue.exit.ret130_crit_edge, %do.end9.ret130_crit_edge
  %result.1 = phi i32 [ 2, %legacy_queue.exit.ret130_crit_edge ], [ %result.0, %if.end129 ], [ 1, %do.end9.ret130_crit_edge ], [ 3, %land.lhs.true86.ret130_crit_edge ]
  %ret.0 = phi i32 [ 0, %legacy_queue.exit.ret130_crit_edge ], [ 0, %if.end129 ], [ 0, %do.end9.ret130_crit_edge ], [ -11, %land.lhs.true86.ret130_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %type)
  %cmp131 = icmp ne i32 %type, 0
  %conv = zext i1 %cmp131 to i32
  tail call fastcc void @trace_signal_generate(i32 noundef %sig, ptr noundef %info, ptr noundef %t, i32 noundef %conv, i32 noundef %result.1)
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @send_sig_info(i32 noundef %sig, ptr noundef %info, ptr noundef %p) #0 align 64 {
entry:
  %flags.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %sig)
  %cmp.i = icmp ugt i32 %sig, 64
  br i1 %cmp.i, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flags.i) #15
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %flags.i, align 4, !annotation !511
  %call.i.i = call ptr @__lock_task_sighand(ptr noundef %p, ptr noundef nonnull %flags.i) #15
  %tobool.not.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i, label %if.end.do_send_sig_info.exit_crit_edge, label %if.then.i

if.end.do_send_sig_info.exit_crit_edge:           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %do_send_sig_info.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %call1.i = tail call fastcc i32 @send_signal(i32 noundef %sig, ptr noundef %info, ptr noundef %p, i32 noundef 0) #15
  %sighand.i.i = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 112
  %1 = ptrtoint ptr %sighand.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %sighand.i.i, align 4
  %3 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %2, i32 noundef %4) #15
  br label %do_send_sig_info.exit

do_send_sig_info.exit:                            ; preds = %if.then.i, %if.end.do_send_sig_info.exit_crit_edge
  %ret.0.i = phi i32 [ %call1.i, %if.then.i ], [ -3, %if.end.do_send_sig_info.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flags.i) #15
  br label %return

return:                                           ; preds = %do_send_sig_info.exit, %entry.return_crit_edge
  %retval.0 = phi i32 [ %ret.0.i, %do_send_sig_info.exit ], [ -22, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @send_sig(i32 noundef %sig, ptr noundef %p, i32 noundef %priv) #0 align 64 {
entry:
  %flags.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %priv)
  %tobool.not = icmp eq i32 %priv, 0
  %cond = select i1 %tobool.not, ptr null, ptr inttoptr (i32 1 to ptr)
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %sig)
  %cmp.i.i = icmp ugt i32 %sig, 64
  br i1 %cmp.i.i, label %entry.send_sig_info.exit_crit_edge, label %if.end.i

entry.send_sig_info.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %send_sig_info.exit

if.end.i:                                         ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flags.i.i) #15
  %0 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %flags.i.i, align 4, !annotation !511
  %call.i.i.i = call ptr @__lock_task_sighand(ptr noundef %p, ptr noundef nonnull %flags.i.i) #15
  %tobool.not.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i, label %if.end.i.do_send_sig_info.exit.i_crit_edge, label %if.then.i.i

if.end.i.do_send_sig_info.exit.i_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do_send_sig_info.exit.i

if.then.i.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %call1.i.i = tail call fastcc i32 @send_signal(i32 noundef %sig, ptr noundef %cond, ptr noundef %p, i32 noundef 0) #15
  %sighand.i.i.i = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 112
  %1 = ptrtoint ptr %sighand.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %sighand.i.i.i, align 4
  %3 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags.i.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %2, i32 noundef %4) #15
  br label %do_send_sig_info.exit.i

do_send_sig_info.exit.i:                          ; preds = %if.then.i.i, %if.end.i.do_send_sig_info.exit.i_crit_edge
  %ret.0.i.i = phi i32 [ %call1.i.i, %if.then.i.i ], [ -3, %if.end.i.do_send_sig_info.exit.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flags.i.i) #15
  br label %send_sig_info.exit

send_sig_info.exit:                               ; preds = %do_send_sig_info.exit.i, %entry.send_sig_info.exit_crit_edge
  %retval.0.i = phi i32 [ %ret.0.i.i, %do_send_sig_info.exit.i ], [ -22, %entry.send_sig_info.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @force_sig(i32 noundef %sig) #0 align 64 {
entry:
  %info = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info) #15
  %0 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %1 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %2 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3
  %3 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 1
  %4 = getelementptr inbounds i8, ptr %info, i32 20
  %5 = call ptr @memset(ptr %4, i32 0, i32 12)
  %6 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %sig, ptr %info, align 4
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %0, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 128, ptr %1, align 4
  %9 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %2, align 4
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %3, align 4
  %11 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task.i, align 8
  %call1.i = call fastcc i32 @force_sig_info_to_task(ptr noundef nonnull %info, ptr noundef %14, i32 noundef 0) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @force_fatal_sig(i32 noundef %sig) local_unnamed_addr #0 align 64 {
entry:
  %info = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info) #15
  %0 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %1 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %2 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3
  %3 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 1
  %4 = getelementptr inbounds i8, ptr %info, i32 20
  %5 = call ptr @memset(ptr %4, i32 0, i32 12)
  %6 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %sig, ptr %info, align 4
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %0, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 128, ptr %1, align 4
  %9 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %2, align 4
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %3, align 4
  %11 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task, align 8
  %call2 = call fastcc i32 @force_sig_info_to_task(ptr noundef nonnull %info, ptr noundef %14, i32 noundef 1)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @force_exit_sig(i32 noundef %sig) local_unnamed_addr #0 align 64 {
entry:
  %info = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info) #15
  %0 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %1 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %2 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3
  %3 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 1
  %4 = getelementptr inbounds i8, ptr %info, i32 20
  %5 = call ptr @memset(ptr %4, i32 0, i32 12)
  %6 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %sig, ptr %info, align 4
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %0, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 128, ptr %1, align 4
  %9 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %2, align 4
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %3, align 4
  %11 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task, align 8
  %call2 = call fastcc i32 @force_sig_info_to_task(ptr noundef nonnull %info, ptr noundef %14, i32 noundef 2)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @force_sigsegv(i32 noundef %sig) local_unnamed_addr #0 align 64 {
entry:
  %info.i1 = alloca %struct.kernel_siginfo, align 4
  %info.i = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 11, i32 %sig)
  %cmp = icmp eq i32 %sig, 11
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info.i) #15
  %0 = getelementptr inbounds %struct.anon, ptr %info.i, i32 0, i32 1
  %1 = getelementptr inbounds %struct.anon, ptr %info.i, i32 0, i32 2
  %2 = getelementptr inbounds %struct.anon, ptr %info.i, i32 0, i32 3
  %3 = getelementptr inbounds %struct.anon, ptr %info.i, i32 0, i32 3, i32 0, i32 1
  %4 = getelementptr inbounds i8, ptr %info.i, i32 20
  %5 = call ptr @memset(ptr %4, i32 0, i32 12)
  %6 = ptrtoint ptr %info.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 11, ptr %info.i, align 4
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %0, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 128, ptr %1, align 4
  %9 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %2, align 4
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %3, align 4
  %11 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task.i, align 8
  %call2.i = call fastcc i32 @force_sig_info_to_task(ptr noundef nonnull %info.i, ptr noundef %14, i32 noundef 1) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info.i) #15
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info.i1) #15
  %15 = getelementptr inbounds %struct.anon, ptr %info.i1, i32 0, i32 1
  %16 = getelementptr inbounds %struct.anon, ptr %info.i1, i32 0, i32 2
  %17 = getelementptr inbounds %struct.anon, ptr %info.i1, i32 0, i32 3
  %18 = getelementptr inbounds %struct.anon, ptr %info.i1, i32 0, i32 3, i32 0, i32 1
  %19 = getelementptr inbounds i8, ptr %info.i1, i32 20
  %20 = call ptr @memset(ptr %19, i32 0, i32 12)
  %21 = ptrtoint ptr %info.i1 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 11, ptr %info.i1, align 4
  %22 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 0, ptr %15, align 4
  %23 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 128, ptr %16, align 4
  %24 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 0, ptr %17, align 4
  %25 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %18, align 4
  %26 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 2
  %28 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %task.i.i, align 8
  %call1.i.i = call fastcc i32 @force_sig_info_to_task(ptr noundef nonnull %info.i1, ptr noundef %29, i32 noundef 0) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info.i1) #15
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @force_sig_fault_to_task(i32 noundef %sig, i32 noundef %code, ptr noundef %addr, ptr noundef %t) local_unnamed_addr #0 align 64 {
entry:
  %info = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info) #15
  %0 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %1 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %2 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3
  %3 = getelementptr inbounds i8, ptr %info, i32 16
  %4 = call ptr @memset(ptr %3, i32 0, i32 16)
  %5 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %sig, ptr %info, align 4
  %6 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %0, align 4
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %code, ptr %1, align 4
  %8 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %addr, ptr %2, align 4
  %call = call fastcc i32 @force_sig_info_to_task(ptr noundef nonnull %info, ptr noundef %t, i32 noundef 0)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info) #15
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @force_sig_fault(i32 noundef %sig, i32 noundef %code, ptr noundef %addr) local_unnamed_addr #0 align 64 {
entry:
  %info.i = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info.i) #15
  %4 = getelementptr inbounds %struct.anon, ptr %info.i, i32 0, i32 1
  %5 = getelementptr inbounds %struct.anon, ptr %info.i, i32 0, i32 2
  %6 = getelementptr inbounds %struct.anon, ptr %info.i, i32 0, i32 3
  %7 = getelementptr inbounds i8, ptr %info.i, i32 16
  %8 = call ptr @memset(ptr %7, i32 0, i32 16)
  %9 = ptrtoint ptr %info.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %sig, ptr %info.i, align 4
  %10 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %4, align 4
  %11 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %code, ptr %5, align 4
  %12 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %addr, ptr %6, align 4
  %call.i = call fastcc i32 @force_sig_info_to_task(ptr noundef nonnull %info.i, ptr noundef %3, i32 noundef 0) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info.i) #15
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @send_sig_fault(i32 noundef %sig, i32 noundef %code, ptr noundef %addr, ptr noundef %t) local_unnamed_addr #0 align 64 {
entry:
  %flags.i.i = alloca i32, align 4
  %info = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info) #15
  %0 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %1 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %2 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3
  %3 = getelementptr inbounds i8, ptr %info, i32 16
  %4 = call ptr @memset(ptr %3, i32 0, i32 16)
  %5 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %sig, ptr %info, align 4
  %6 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %0, align 4
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %code, ptr %1, align 4
  %8 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %addr, ptr %2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %sig)
  %cmp.i.i = icmp ugt i32 %sig, 64
  br i1 %cmp.i.i, label %entry.send_sig_info.exit_crit_edge, label %if.end.i

entry.send_sig_info.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %send_sig_info.exit

if.end.i:                                         ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flags.i.i) #15
  %9 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %flags.i.i, align 4, !annotation !511
  %call.i.i.i = call ptr @__lock_task_sighand(ptr noundef %t, ptr noundef nonnull %flags.i.i) #15
  %tobool.not.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i, label %if.end.i.do_send_sig_info.exit.i_crit_edge, label %if.then.i.i

if.end.i.do_send_sig_info.exit.i_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do_send_sig_info.exit.i

if.then.i.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %call1.i.i = call fastcc i32 @send_signal(i32 noundef %sig, ptr noundef nonnull %info, ptr noundef %t, i32 noundef 0) #15
  %sighand.i.i.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 112
  %10 = ptrtoint ptr %sighand.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sighand.i.i.i, align 4
  %12 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %flags.i.i, align 4
  call void @_raw_spin_unlock_irqrestore(ptr noundef %11, i32 noundef %13) #15
  br label %do_send_sig_info.exit.i

do_send_sig_info.exit.i:                          ; preds = %if.then.i.i, %if.end.i.do_send_sig_info.exit.i_crit_edge
  %ret.0.i.i = phi i32 [ %call1.i.i, %if.then.i.i ], [ -3, %if.end.i.do_send_sig_info.exit.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flags.i.i) #15
  br label %send_sig_info.exit

send_sig_info.exit:                               ; preds = %do_send_sig_info.exit.i, %entry.send_sig_info.exit_crit_edge
  %retval.0.i = phi i32 [ %ret.0.i.i, %do_send_sig_info.exit.i ], [ -22, %entry.send_sig_info.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info) #15
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @force_sig_mceerr(i32 noundef %code, ptr noundef %addr, i16 noundef signext %lsb) local_unnamed_addr #0 align 64 {
entry:
  %info = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info) #15
  %0 = add i32 %code, -6
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %0)
  %1 = icmp ult i32 %0, -2
  br i1 %1, label %do.end, label %entry.if.end_crit_edge, !prof !510

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1754, i32 noundef 9, ptr noundef null) #15
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %2 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 1
  %3 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3
  %4 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %5 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %6 = getelementptr inbounds i8, ptr %info, i32 16
  %7 = call ptr @memset(ptr %6, i32 0, i32 16)
  %8 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 7, ptr %info, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %5, align 4
  %10 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %code, ptr %4, align 4
  %11 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %addr, ptr %3, align 4
  %12 = ptrtoint ptr %2 to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %lsb, ptr %2, align 4
  %13 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task.i, align 8
  %call1.i = call fastcc i32 @force_sig_info_to_task(ptr noundef nonnull %info, ptr noundef %16, i32 noundef 0) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info) #15
  ret i32 %call1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @send_sig_mceerr(i32 noundef %code, ptr noundef %addr, i16 noundef signext %lsb, ptr noundef %t) #0 align 64 {
entry:
  %flags.i.i = alloca i32, align 4
  %info = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info) #15
  %0 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %1 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %2 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3
  %3 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 1
  %4 = add i32 %code, -6
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %4)
  %5 = icmp ult i32 %4, -2
  br i1 %5, label %do.end, label %entry.if.end_crit_edge, !prof !510

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1768, i32 noundef 9, ptr noundef null) #15
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %6 = getelementptr inbounds i8, ptr %info, i32 16
  %7 = call ptr @memset(ptr %6, i32 0, i32 16)
  %8 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 7, ptr %info, align 4
  %9 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %0, align 4
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %code, ptr %1, align 4
  %11 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %addr, ptr %2, align 4
  %12 = ptrtoint ptr %3 to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %lsb, ptr %3, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flags.i.i) #15
  %13 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 -1, ptr %flags.i.i, align 4, !annotation !511
  %call.i.i.i = call ptr @__lock_task_sighand(ptr noundef %t, ptr noundef nonnull %flags.i.i) #15
  %tobool.not.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i, label %if.end.send_sig_info.exit_crit_edge, label %if.then.i.i

if.end.send_sig_info.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %send_sig_info.exit

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %call1.i.i = call fastcc i32 @send_signal(i32 noundef 7, ptr noundef nonnull %info, ptr noundef %t, i32 noundef 0) #15
  %sighand.i.i.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 112
  %14 = ptrtoint ptr %sighand.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %sighand.i.i.i, align 4
  %16 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %flags.i.i, align 4
  call void @_raw_spin_unlock_irqrestore(ptr noundef %15, i32 noundef %17) #15
  br label %send_sig_info.exit

send_sig_info.exit:                               ; preds = %if.then.i.i, %if.end.send_sig_info.exit_crit_edge
  %ret.0.i.i = phi i32 [ %call1.i.i, %if.then.i.i ], [ -3, %if.end.send_sig_info.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flags.i.i) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info) #15
  ret i32 %ret.0.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @force_sig_bnderr(ptr noundef %addr, ptr noundef %lower, ptr noundef %upper) local_unnamed_addr #0 align 64 {
entry:
  %info = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info) #15
  %0 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %1 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %2 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3
  %3 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 2
  %4 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 3
  %5 = getelementptr inbounds i8, ptr %info, i32 16
  %6 = call ptr @memset(ptr %5, i32 0, i32 16)
  %7 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 11, ptr %info, align 4
  %8 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %0, align 4
  %9 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 3, ptr %1, align 4
  %10 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %addr, ptr %2, align 4
  %11 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %lower, ptr %3, align 4
  %12 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %upper, ptr %4, align 4
  %13 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task.i, align 8
  %call1.i = call fastcc i32 @force_sig_info_to_task(ptr noundef nonnull %info, ptr noundef %16, i32 noundef 0) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info) #15
  ret i32 %call1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @force_sig_pkuerr(ptr noundef %addr, i32 noundef %pkey) local_unnamed_addr #0 align 64 {
entry:
  %info = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info) #15
  %0 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %1 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %2 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3
  %3 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 2
  %4 = getelementptr inbounds i8, ptr %info, i32 16
  %5 = call ptr @memset(ptr %4, i32 0, i32 16)
  %6 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 11, ptr %info, align 4
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %0, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 4, ptr %1, align 4
  %9 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %addr, ptr %2, align 4
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %pkey, ptr %3, align 4
  %11 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task.i, align 8
  %call1.i = call fastcc i32 @force_sig_info_to_task(ptr noundef nonnull %info, ptr noundef %14, i32 noundef 0) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info) #15
  ret i32 %call1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @force_sig_perf(ptr noundef %addr, i32 noundef %type, i64 noundef %sig_data) local_unnamed_addr #0 align 64 {
entry:
  %info = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info) #15
  %0 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %1 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %2 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3
  %3 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 1
  %4 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 2
  %5 = getelementptr inbounds i8, ptr %info, i32 24
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_storeN_noabort(i32 %6, i32 8)
  store i64 0, ptr %5, align 4
  %7 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 5, ptr %info, align 4
  %8 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %0, align 4
  %9 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 6, ptr %1, align 4
  %10 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %addr, ptr %2, align 4
  %conv = trunc i64 %sig_data to i32
  %11 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %conv, ptr %3, align 4
  %12 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %type, ptr %4, align 4
  %13 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task.i, align 8
  %call1.i = call fastcc i32 @force_sig_info_to_task(ptr noundef nonnull %info, ptr noundef %16, i32 noundef 0) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info) #15
  ret i32 %call1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @force_sig_seccomp(i32 noundef %syscall, i32 noundef %reason, i1 noundef zeroext %force_coredump) local_unnamed_addr #0 align 64 {
entry:
  %info = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info) #15
  %0 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %1 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %2 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3
  %3 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 1
  %4 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 2
  %5 = getelementptr inbounds i8, ptr %info, i32 24
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_storeN_noabort(i32 %6, i32 8)
  store i64 0, ptr %5, align 4
  %7 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 31, ptr %info, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 1, ptr %1, align 4
  %9 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %task, align 8
  %stack = getelementptr inbounds %struct.task_struct, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %stack to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %stack, align 4
  %arrayidx = getelementptr i8, ptr %14, i32 16364
  %15 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx, align 4
  %17 = inttoptr i32 %16 to ptr
  %18 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %17, ptr %2, align 4
  %19 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %reason, ptr %0, align 4
  %20 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 1073741864, ptr %4, align 4
  %21 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %syscall, ptr %3, align 4
  %22 = load ptr, ptr %task, align 8
  %cond = select i1 %force_coredump, i32 2, i32 0
  %call9 = call fastcc i32 @force_sig_info_to_task(ptr noundef nonnull %info, ptr noundef %22, i32 noundef %cond)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info) #15
  ret i32 %call9
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @force_sig_ptrace_errno_trap(i32 noundef %errno, ptr noundef %addr) local_unnamed_addr #0 align 64 {
entry:
  %info = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info) #15
  %0 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %1 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %2 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3
  %3 = getelementptr inbounds i8, ptr %info, i32 16
  %4 = call ptr @memset(ptr %3, i32 0, i32 16)
  %5 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 5, ptr %info, align 4
  %6 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %errno, ptr %0, align 4
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 4, ptr %1, align 4
  %8 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %addr, ptr %2, align 4
  %9 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %task.i, align 8
  %call1.i = call fastcc i32 @force_sig_info_to_task(ptr noundef nonnull %info, ptr noundef %12, i32 noundef 0) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info) #15
  ret i32 %call1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @force_sig_fault_trapno(i32 noundef %sig, i32 noundef %code, ptr noundef %addr, i32 noundef %trapno) local_unnamed_addr #0 align 64 {
entry:
  %info = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info) #15
  %0 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %1 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %2 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3
  %3 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 1
  %4 = getelementptr inbounds i8, ptr %info, i32 20
  %5 = call ptr @memset(ptr %4, i32 0, i32 12)
  %6 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %sig, ptr %info, align 4
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %0, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %code, ptr %1, align 4
  %9 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %addr, ptr %2, align 4
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %trapno, ptr %3, align 4
  %11 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task.i, align 8
  %call1.i = call fastcc i32 @force_sig_info_to_task(ptr noundef nonnull %info, ptr noundef %14, i32 noundef 0) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info) #15
  ret i32 %call1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @send_sig_fault_trapno(i32 noundef %sig, i32 noundef %code, ptr noundef %addr, i32 noundef %trapno, ptr noundef %t) local_unnamed_addr #0 align 64 {
entry:
  %flags.i.i = alloca i32, align 4
  %info = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info) #15
  %0 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %1 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %2 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3
  %3 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 1
  %4 = getelementptr inbounds i8, ptr %info, i32 20
  %5 = call ptr @memset(ptr %4, i32 0, i32 12)
  %6 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %sig, ptr %info, align 4
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %0, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %code, ptr %1, align 4
  %9 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %addr, ptr %2, align 4
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %trapno, ptr %3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %sig)
  %cmp.i.i = icmp ugt i32 %sig, 64
  br i1 %cmp.i.i, label %entry.send_sig_info.exit_crit_edge, label %if.end.i

entry.send_sig_info.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %send_sig_info.exit

if.end.i:                                         ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flags.i.i) #15
  %11 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 -1, ptr %flags.i.i, align 4, !annotation !511
  %call.i.i.i = call ptr @__lock_task_sighand(ptr noundef %t, ptr noundef nonnull %flags.i.i) #15
  %tobool.not.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i, label %if.end.i.do_send_sig_info.exit.i_crit_edge, label %if.then.i.i

if.end.i.do_send_sig_info.exit.i_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do_send_sig_info.exit.i

if.then.i.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %call1.i.i = call fastcc i32 @send_signal(i32 noundef %sig, ptr noundef nonnull %info, ptr noundef %t, i32 noundef 0) #15
  %sighand.i.i.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 112
  %12 = ptrtoint ptr %sighand.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %sighand.i.i.i, align 4
  %14 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags.i.i, align 4
  call void @_raw_spin_unlock_irqrestore(ptr noundef %13, i32 noundef %15) #15
  br label %do_send_sig_info.exit.i

do_send_sig_info.exit.i:                          ; preds = %if.then.i.i, %if.end.i.do_send_sig_info.exit.i_crit_edge
  %ret.0.i.i = phi i32 [ %call1.i.i, %if.then.i.i ], [ -3, %if.end.i.do_send_sig_info.exit.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flags.i.i) #15
  br label %send_sig_info.exit

send_sig_info.exit:                               ; preds = %do_send_sig_info.exit.i, %entry.send_sig_info.exit_crit_edge
  %retval.0.i = phi i32 [ %ret.0.i.i, %do_send_sig_info.exit.i ], [ -22, %entry.send_sig_info.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info) #15
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @kill_pgrp(ptr noundef %pid, i32 noundef %sig, i32 noundef %priv) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @_raw_read_lock(ptr noundef nonnull @tasklist_lock) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %priv)
  %tobool.not = icmp eq i32 %priv, 0
  %cond = select i1 %tobool.not, ptr null, ptr inttoptr (i32 1 to ptr)
  %call = tail call i32 @__kill_pgrp_info(i32 noundef %sig, ptr noundef %cond, ptr noundef %pid)
  tail call void @_raw_read_unlock(ptr noundef nonnull @tasklist_lock) #15
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_read_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_read_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @kill_pid(ptr noundef %pid, i32 noundef %sig, i32 noundef %priv) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %priv)
  %tobool.not = icmp eq i32 %priv, 0
  %cond = select i1 %tobool.not, ptr null, ptr inttoptr (i32 1 to ptr)
  %call = tail call i32 @kill_pid_info(i32 noundef %sig, ptr noundef %cond, ptr noundef %pid)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @sigqueue_alloc() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %call1 = tail call fastcc ptr @__sigqueue_alloc(i32 noundef -1, ptr noundef %3, i32 noundef 3264, i32 noundef 0, i32 noundef 1)
  ret ptr %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__sigqueue_alloc(i32 noundef %sig, ptr noundef %t, i32 noundef %gfp_flags, i32 noundef %override_rlimit, i32 noundef %sigqueue_flags) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %4 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i44 = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i.i.i44 to ptr
  %preempt_count.i.i.i.i45 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i.i.i45 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i.i.i45, align 4
  %add.i.i.i46 = add i32 %7, 1
  store volatile i32 %add.i.i.i46, ptr %preempt_count.i.i.i.i45, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i47 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i47, label %rcu_read_lock.exit.rcu_read_lock.exit54_crit_edge, label %land.lhs.true.i50

rcu_read_lock.exit.rcu_read_lock.exit54_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit54

land.lhs.true.i50:                                ; preds = %rcu_read_lock.exit
  %call1.i48 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i48)
  %tobool.not.i49 = icmp eq i32 %call1.i48, 0
  br i1 %tobool.not.i49, label %land.lhs.true.i50.rcu_read_lock.exit54_crit_edge, label %land.lhs.true2.i52

land.lhs.true.i50.rcu_read_lock.exit54_crit_edge: ; preds = %land.lhs.true.i50
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit54

land.lhs.true2.i52:                               ; preds = %land.lhs.true.i50
  %.b4.i51 = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i51, label %land.lhs.true2.i52.rcu_read_lock.exit54_crit_edge, label %if.then.i53

land.lhs.true2.i52.rcu_read_lock.exit54_crit_edge: ; preds = %land.lhs.true2.i52
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit54

if.then.i53:                                      ; preds = %land.lhs.true2.i52
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit54

rcu_read_lock.exit54:                             ; preds = %if.then.i53, %land.lhs.true2.i52.rcu_read_lock.exit54_crit_edge, %land.lhs.true.i50.rcu_read_lock.exit54_crit_edge, %rcu_read_lock.exit.rcu_read_lock.exit54_crit_edge
  %real_cred = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 98
  %8 = ptrtoint ptr %real_cred to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile ptr, ptr %real_cred, align 4
  %call = tail call i32 @rcu_read_lock_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit54.do.end7_crit_edge

rcu_read_lock.exit54.do.end7_crit_edge:           ; preds = %rcu_read_lock.exit54
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit54
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b43 = load i1, ptr @__sigqueue_alloc.__warned, align 1
  br i1 %.b43, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @__sigqueue_alloc.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 428, ptr noundef nonnull @.str.1) #15
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit54.do.end7_crit_edge
  %ucounts9 = getelementptr inbounds %struct.cred, ptr %9, i32 0, i32 26
  %10 = ptrtoint ptr %ucounts9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ucounts9, align 4
  %call.i55 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i55, label %do.end7.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i58

do.end7.rcu_read_unlock.exit_crit_edge:           ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true.i58:                                ; preds = %do.end7
  %call1.i56 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i56)
  %tobool.not.i57 = icmp eq i32 %call1.i56, 0
  br i1 %tobool.not.i57, label %land.lhs.true.i58.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i60

land.lhs.true.i58.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i58
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true2.i60:                               ; preds = %land.lhs.true.i58
  %.b4.i59 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i59, label %land.lhs.true2.i60.rcu_read_unlock.exit_crit_edge, label %if.then.i61

land.lhs.true2.i60.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i60
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

if.then.i61:                                      ; preds = %land.lhs.true2.i60
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 724, ptr noundef nonnull @.str.91) #15
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i61, %land.lhs.true2.i60.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i58.rcu_read_unlock.exit_crit_edge, %do.end7.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !520
  %12 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i62 = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i.i.i62 to ptr
  %preempt_count.i.i.i.i63 = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %preempt_count.i.i.i.i63 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %preempt_count.i.i.i.i63, align 4
  %sub.i.i.i = add i32 %15, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i63, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  %call11 = tail call i32 @inc_rlimit_get_ucounts(ptr noundef %11, i32 noundef 14) #15
  %call.i64 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i64, label %rcu_read_unlock.exit.rcu_read_unlock.exit74_crit_edge, label %land.lhs.true.i67

rcu_read_unlock.exit.rcu_read_unlock.exit74_crit_edge: ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit74

land.lhs.true.i67:                                ; preds = %rcu_read_unlock.exit
  %call1.i65 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i65)
  %tobool.not.i66 = icmp eq i32 %call1.i65, 0
  br i1 %tobool.not.i66, label %land.lhs.true.i67.rcu_read_unlock.exit74_crit_edge, label %land.lhs.true2.i69

land.lhs.true.i67.rcu_read_unlock.exit74_crit_edge: ; preds = %land.lhs.true.i67
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit74

land.lhs.true2.i69:                               ; preds = %land.lhs.true.i67
  %.b4.i68 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i68, label %land.lhs.true2.i69.rcu_read_unlock.exit74_crit_edge, label %if.then.i70

land.lhs.true2.i69.rcu_read_unlock.exit74_crit_edge: ; preds = %land.lhs.true2.i69
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit74

if.then.i70:                                      ; preds = %land.lhs.true2.i69
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 724, ptr noundef nonnull @.str.91) #15
  br label %rcu_read_unlock.exit74

rcu_read_unlock.exit74:                           ; preds = %if.then.i70, %land.lhs.true2.i69.rcu_read_unlock.exit74_crit_edge, %land.lhs.true.i67.rcu_read_unlock.exit74_crit_edge, %rcu_read_unlock.exit.rcu_read_unlock.exit74_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !520
  %16 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i71 = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i.i.i.i71 to ptr
  %preempt_count.i.i.i.i72 = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %preempt_count.i.i.i.i72 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %preempt_count.i.i.i.i72, align 4
  %sub.i.i.i73 = add i32 %19, -1
  store volatile i32 %sub.i.i.i73, ptr %preempt_count.i.i.i.i72, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %rcu_read_unlock.exit74.cleanup_crit_edge, label %if.end14

rcu_read_unlock.exit74.cleanup_crit_edge:         ; preds = %rcu_read_unlock.exit74
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end14:                                         ; preds = %rcu_read_unlock.exit74
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %override_rlimit)
  %tobool15.not = icmp eq i32 %override_rlimit, 0
  br i1 %tobool15.not, label %lor.lhs.false, label %if.end14.if.end21_crit_edge

if.end14.if.end21_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end21

lor.lhs.false:                                    ; preds = %if.end14
  %signal.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 111
  %20 = ptrtoint ptr %signal.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %signal.i, align 16
  %arrayidx.i = getelementptr %struct.signal_struct, ptr %21, i32 0, i32 51, i32 11
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %call11, i32 %23)
  %cmp.not = icmp ugt i32 %call11, %23
  br i1 %cmp.not, label %if.end21.thread, label %lor.lhs.false.if.end21_crit_edge, !prof !510

lor.lhs.false.if.end21_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end21

if.end21.thread:                                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @print_dropped_signal(i32 noundef %sig)
  br label %if.then29

if.end21:                                         ; preds = %lor.lhs.false.if.end21_crit_edge, %if.end14.if.end21_crit_edge
  %24 = load ptr, ptr @sigqueue_cachep, align 4
  %call20 = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %24, i32 noundef %gfp_flags) #15
  %cmp22 = icmp eq ptr %call20, null
  br i1 %cmp22, label %if.end21.if.then29_crit_edge, label %if.else30, !prof !510

if.end21.if.then29_crit_edge:                     ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then29

if.then29:                                        ; preds = %if.end21.if.then29_crit_edge, %if.end21.thread
  tail call void @dec_rlimit_put_ucounts(ptr noundef %11, i32 noundef 14) #15
  br label %cleanup

if.else30:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #17
  %25 = ptrtoint ptr %call20 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %call20, ptr %call20, align 8
  %prev.i = getelementptr inbounds %struct.list_head, ptr %call20, i32 0, i32 1
  %26 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %call20, ptr %prev.i, align 4
  %flags = getelementptr inbounds %struct.sigqueue, ptr %call20, i32 0, i32 1
  %27 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %sigqueue_flags, ptr %flags, align 8
  %ucounts31 = getelementptr inbounds %struct.sigqueue, ptr %call20, i32 0, i32 3
  %28 = ptrtoint ptr %ucounts31 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %11, ptr %ucounts31, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.else30, %if.then29, %rcu_read_unlock.exit74.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %rcu_read_unlock.exit74.cleanup_crit_edge ], [ %call20, %if.else30 ], [ null, %if.then29 ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sigqueue_free(ptr noundef %q) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %flags1 = getelementptr inbounds %struct.sigqueue, ptr %q, i32 0, i32 1
  %0 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags1, align 4
  %and = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.body5, label %do.body12, !prof !510

do.body5:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/signal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1931, 0\0A.popsection", ""() #15, !srcloc !523
  unreachable

do.body12:                                        ; preds = %entry
  %2 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task, align 8
  %sighand = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 112
  %6 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sighand, align 4
  %call14 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %7) #15
  %8 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags1, align 4
  %and20 = and i32 %9, -2
  store i32 %and20, ptr %flags1, align 4
  %10 = ptrtoint ptr %q to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %q, align 4
  %cmp.i.not = icmp ne ptr %11, %q
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %7, i32 noundef %call14) #15
  %tobool25.not34 = icmp eq ptr %q, null
  %tobool25.not = or i1 %tobool25.not34, %cmp.i.not
  br i1 %tobool25.not, label %do.body12.if.end27_crit_edge, label %if.then26

do.body12.if.end27_crit_edge:                     ; preds = %do.body12
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end27

if.then26:                                        ; preds = %do.body12
  %12 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %flags1, align 4
  %and.i33 = and i32 %13, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i33)
  %tobool.not.i = icmp eq i32 %and.i33, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then26.if.end27_crit_edge

if.then26.if.end27_crit_edge:                     ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end27

if.end.i:                                         ; preds = %if.then26
  %ucounts.i = getelementptr inbounds %struct.sigqueue, ptr %q, i32 0, i32 3
  %14 = ptrtoint ptr %ucounts.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ucounts.i, align 4
  %tobool1.not.i = icmp eq ptr %15, null
  br i1 %tobool1.not.i, label %if.end.i.if.end5.i_crit_edge, label %if.then2.i

if.end.i.if.end5.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end5.i

if.then2.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dec_rlimit_put_ucounts(ptr noundef nonnull %15, i32 noundef 14) #15
  %16 = ptrtoint ptr %ucounts.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %ucounts.i, align 4
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then2.i, %if.end.i.if.end5.i_crit_edge
  %17 = load ptr, ptr @sigqueue_cachep, align 4
  tail call void @kmem_cache_free(ptr noundef %17, ptr noundef nonnull %q) #15
  br label %if.end27

if.end27:                                         ; preds = %if.end5.i, %if.then26.if.end27_crit_edge, %do.body12.if.end27_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @send_sigqueue(ptr noundef %q, ptr noundef %pid, i32 noundef %type) local_unnamed_addr #0 align 64 {
entry:
  %flags = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %info = getelementptr inbounds %struct.sigqueue, ptr %q, i32 0, i32 2
  %0 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %info, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flags) #15
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %flags, align 4, !annotation !511
  %flags1 = getelementptr inbounds %struct.sigqueue, ptr %q, i32 0, i32 1
  %3 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags1, align 4
  %and = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.body5, label %do.end10, !prof !510

do.body5:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/signal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1959, 0\0A.popsection", ""() #15, !srcloc !524
  unreachable

do.end10:                                         ; preds = %entry
  %5 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %8, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i, label %do.end10.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

do.end10.rcu_read_lock.exit_crit_edge:            ; preds = %do.end10
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %do.end10
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %do.end10.rcu_read_lock.exit_crit_edge
  %call = tail call ptr @pid_task(ptr noundef %pid, i32 noundef %type) #15
  %tobool11.not = icmp eq ptr %call, null
  br i1 %tobool11.not, label %rcu_read_lock.exit.ret66_crit_edge, label %lor.lhs.false

rcu_read_lock.exit.ret66_crit_edge:               ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %ret66

lor.lhs.false:                                    ; preds = %rcu_read_lock.exit
  %call.i90 = call ptr @__lock_task_sighand(ptr noundef nonnull %call, ptr noundef nonnull %flags) #15
  %tobool13.not = icmp eq ptr %call.i90, null
  br i1 %tobool13.not, label %lor.lhs.false.ret66_crit_edge, label %if.end21, !prof !510

lor.lhs.false.ret66_crit_edge:                    ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %ret66

if.end21:                                         ; preds = %lor.lhs.false
  %call22 = tail call fastcc zeroext i1 @prepare_signal(i32 noundef %1, ptr noundef nonnull %call, i1 noundef zeroext false)
  br i1 %call22, label %if.end24, label %if.end21.out_crit_edge

if.end21.out_crit_edge:                           ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

if.end24:                                         ; preds = %if.end21
  %9 = ptrtoint ptr %q to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile ptr, ptr %q, align 4
  %cmp.i.not = icmp eq ptr %10, %q
  br i1 %cmp.i.not, label %if.end55, label %do.body36, !prof !509

do.body36:                                        ; preds = %if.end24
  %si_code = getelementptr inbounds %struct.sigqueue, ptr %q, i32 0, i32 2, i32 0, i32 2
  %11 = ptrtoint ptr %si_code to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %si_code, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %12)
  %cmp.not = icmp eq i32 %12, -2
  br i1 %cmp.not, label %do.end53, label %do.body45, !prof !509

do.body45:                                        ; preds = %do.body36
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/signal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1978, 0\0A.popsection", ""() #15, !srcloc !525
  unreachable

do.end53:                                         ; preds = %do.body36
  call void @__sanitizer_cov_trace_pc() #17
  %_overrun = getelementptr inbounds %struct.sigqueue, ptr %q, i32 0, i32 2, i32 0, i32 3, i32 0, i32 1
  %13 = ptrtoint ptr %_overrun to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %_overrun, align 4
  %inc = add i32 %14, 1
  store i32 %inc, ptr %_overrun, align 4
  br label %out

if.end55:                                         ; preds = %if.end24
  %_overrun58 = getelementptr inbounds %struct.sigqueue, ptr %q, i32 0, i32 2, i32 0, i32 3, i32 0, i32 1
  %15 = ptrtoint ptr %_overrun58 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 0, ptr %_overrun58, align 4
  %sighand.i = getelementptr inbounds %struct.task_struct, ptr %call, i32 0, i32 112
  %16 = ptrtoint ptr %sighand.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %sighand.i, align 4
  %head.i.i = getelementptr inbounds %struct.sighand_struct, ptr %17, i32 0, i32 2, i32 1
  %18 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %head.i.i, align 4
  %cmp.i.i.not.i = icmp eq ptr %19, %head.i.i
  br i1 %cmp.i.i.not.i, label %if.end55.signalfd_notify.exit_crit_edge, label %if.then.i91, !prof !509

if.end55.signalfd_notify.exit_crit_edge:          ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #17
  br label %signalfd_notify.exit

if.then.i91:                                      ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #17
  %signalfd_wqh.i = getelementptr inbounds %struct.sighand_struct, ptr %17, i32 0, i32 2
  tail call void @__wake_up(ptr noundef %signalfd_wqh.i, i32 noundef 3, i32 noundef 1, ptr noundef null) #15
  br label %signalfd_notify.exit

signalfd_notify.exit:                             ; preds = %if.then.i91, %if.end55.signalfd_notify.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %type)
  %cmp59.not = icmp eq i32 %type, 0
  br i1 %cmp59.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %signalfd_notify.exit
  call void @__sanitizer_cov_trace_pc() #17
  %signal = getelementptr inbounds %struct.task_struct, ptr %call, i32 0, i32 111
  %20 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %signal, align 16
  %shared_pending = getelementptr inbounds %struct.signal_struct, ptr %21, i32 0, i32 6
  br label %cond.end

cond.false:                                       ; preds = %signalfd_notify.exit
  call void @__sanitizer_cov_trace_pc() #17
  %pending60 = getelementptr inbounds %struct.task_struct, ptr %call, i32 0, i32 116
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %shared_pending, %cond.true ], [ %pending60, %cond.false ]
  %prev.i = getelementptr inbounds %struct.list_head, ptr %cond, i32 0, i32 1
  %22 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %q, ptr noundef %23, ptr noundef %cond) #15
  br i1 %call.i.i, label %if.end.i.i, label %cond.end.list_add_tail.exit_crit_edge

cond.end.list_add_tail.exit_crit_edge:            ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #17
  %24 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %q, ptr %prev.i, align 4
  %25 = ptrtoint ptr %q to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %cond, ptr %q, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %q, i32 0, i32 1
  %26 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %23, ptr %prev3.i.i, align 4
  %27 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %q, ptr %23, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %cond.end.list_add_tail.exit_crit_edge
  %signal63 = getelementptr inbounds %struct.sigpending, ptr %cond, i32 0, i32 1
  %sub.i = add i32 %1, -1
  %rem.i = and i32 %sub.i, 31
  %shl.i = shl nuw i32 1, %rem.i
  %div3.i = lshr i32 %sub.i, 5
  %arrayidx.i = getelementptr [2 x i32], ptr %signal63, i32 0, i32 %div3.i
  %28 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx.i, align 4
  %or.i = or i32 %29, %shl.i
  store i32 %or.i, ptr %arrayidx.i, align 4
  tail call fastcc void @complete_signal(i32 noundef %1, ptr noundef nonnull %call, i32 noundef %type)
  br label %out

out:                                              ; preds = %list_add_tail.exit, %do.end53, %if.end21.out_crit_edge
  %ret.0 = phi i32 [ 0, %do.end53 ], [ 0, %list_add_tail.exit ], [ 1, %if.end21.out_crit_edge ]
  %result.0 = phi i32 [ 2, %do.end53 ], [ 0, %list_add_tail.exit ], [ 1, %if.end21.out_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %type)
  %cmp65 = icmp ne i32 %type, 0
  %conv = zext i1 %cmp65 to i32
  tail call fastcc void @trace_signal_generate(i32 noundef %1, ptr noundef %info, ptr noundef nonnull %call, i32 noundef %conv, i32 noundef %result.0)
  %sighand.i92 = getelementptr inbounds %struct.task_struct, ptr %call, i32 0, i32 112
  %30 = ptrtoint ptr %sighand.i92 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %sighand.i92, align 4
  %32 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %flags, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %31, i32 noundef %33) #15
  br label %ret66

ret66:                                            ; preds = %out, %lor.lhs.false.ret66_crit_edge, %rcu_read_lock.exit.ret66_crit_edge
  %ret.1 = phi i32 [ %ret.0, %out ], [ -1, %lor.lhs.false.ret66_crit_edge ], [ -1, %rcu_read_lock.exit.ret66_crit_edge ]
  %call.i93 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i93, label %ret66.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i96

ret66.rcu_read_unlock.exit_crit_edge:             ; preds = %ret66
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true.i96:                                ; preds = %ret66
  %call1.i94 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i94)
  %tobool.not.i95 = icmp eq i32 %call1.i94, 0
  br i1 %tobool.not.i95, label %land.lhs.true.i96.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i98

land.lhs.true.i96.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i96
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true2.i98:                               ; preds = %land.lhs.true.i96
  %.b4.i97 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i97, label %land.lhs.true2.i98.rcu_read_unlock.exit_crit_edge, label %if.then.i99

land.lhs.true2.i98.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i98
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

if.then.i99:                                      ; preds = %land.lhs.true2.i98
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 724, ptr noundef nonnull @.str.91) #15
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i99, %land.lhs.true2.i98.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i96.rcu_read_unlock.exit_crit_edge, %ret66.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !520
  %34 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i100 = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i.i.i.i100 to ptr
  %preempt_count.i.i.i.i101 = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %preempt_count.i.i.i.i101 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %preempt_count.i.i.i.i101, align 4
  %sub.i.i.i = add i32 %37, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i101, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flags) #15
  ret i32 %ret.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @prepare_signal(i32 noundef %sig, ptr nocapture noundef readonly %p, i1 noundef zeroext %force) unnamed_addr #0 align 64 {
entry:
  %flush = alloca %struct.sigset_t, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %signal1 = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 111
  %0 = ptrtoint ptr %signal1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %signal1, align 16
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %flush) #15
  %2 = getelementptr inbounds [2 x i32], ptr %flush, i32 0, i32 1
  %flags = getelementptr inbounds %struct.signal_struct, ptr %1, i32 0, i32 12
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags, align 8
  %and = and i32 %4, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %core_state = getelementptr inbounds %struct.signal_struct, ptr %1, i32 0, i32 13
  %5 = ptrtoint ptr %core_state to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %core_state, align 4
  %tobool2.not = icmp eq ptr %6, null
  br i1 %tobool2.not, label %if.then.if.end105_crit_edge, label %if.then3

if.then.if.end105_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  %.pre = add i32 %sig, -1
  br label %if.end105

if.then3:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %sig)
  %cmp = icmp eq i32 %sig, 9
  br label %cleanup

if.else:                                          ; preds = %entry
  %7 = add i32 %sig, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %7)
  %8 = icmp ult i32 %7, 31
  br i1 %8, label %land.lhs.true6, label %if.else.if.end105_crit_edge

if.else.if.end105_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end105

land.lhs.true6:                                   ; preds = %if.else
  %shl = shl nuw nsw i32 1, %7
  %and7 = and i32 %shl, 3932160
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %tobool8.not = icmp eq i32 %and7, 0
  br i1 %tobool8.not, label %if.else35, label %if.then9

if.then9:                                         ; preds = %land.lhs.true6
  %9 = ptrtoint ptr %flush to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 131072, ptr %flush, align 4
  %10 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %2, align 4
  %shared_pending = getelementptr inbounds %struct.signal_struct, ptr %1, i32 0, i32 6
  call fastcc void @flush_sigqueue_mask(ptr noundef nonnull %flush, ptr noundef %shared_pending)
  %call = tail call i32 @rcu_read_lock_any_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool10.not = icmp eq i32 %call, 0
  br i1 %tobool10.not, label %land.lhs.true11, label %if.then9.do.end_crit_edge

if.then9.do.end_crit_edge:                        ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end

land.lhs.true11:                                  ; preds = %if.then9
  %call12 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %land.lhs.true11.do.end_crit_edge, label %land.lhs.true14

land.lhs.true11.do.end_crit_edge:                 ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end

land.lhs.true14:                                  ; preds = %land.lhs.true11
  %.b145 = load i1, ptr @prepare_signal.__warned, align 1
  br i1 %.b145, label %land.lhs.true14.do.end_crit_edge, label %if.then16

land.lhs.true14.do.end_crit_edge:                 ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end

if.then16:                                        ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @prepare_signal.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 921, ptr noundef nonnull @.str.2) #15
  br label %do.end

do.end:                                           ; preds = %if.then16, %land.lhs.true14.do.end_crit_edge, %land.lhs.true11.do.end_crit_edge, %if.then9.do.end_crit_edge
  %11 = ptrtoint ptr %signal1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %signal1, align 16
  %thread_head = getelementptr inbounds %struct.signal_struct, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %thread_head to i32
  call void @__asan_load4_noabort(i32 %13)
  %.pn144153 = load volatile ptr, ptr %thread_head, align 4
  %cmp25.not155 = icmp eq ptr %.pn144153, %thread_head
  br i1 %cmp25.not155, label %do.end.if.end105_crit_edge, label %do.end.for.body_crit_edge

do.end.for.body_crit_edge:                        ; preds = %do.end
  br label %for.body

do.end.if.end105_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end105

for.body:                                         ; preds = %for.body.for.body_crit_edge, %do.end.for.body_crit_edge
  %.pn144156 = phi ptr [ %.pn144, %for.body.for.body_crit_edge ], [ %.pn144153, %do.end.for.body_crit_edge ]
  %pending = getelementptr i8, ptr %.pn144156, i32 308
  call fastcc void @flush_sigqueue_mask(ptr noundef nonnull %flush, ptr noundef %pending)
  %14 = ptrtoint ptr %.pn144156 to i32
  call void @__asan_load4_noabort(i32 %14)
  %.pn144 = load volatile ptr, ptr %.pn144156, align 4
  %15 = ptrtoint ptr %signal1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %signal1, align 16
  %thread_head24 = getelementptr inbounds %struct.signal_struct, ptr %16, i32 0, i32 3
  %cmp25.not = icmp eq ptr %.pn144, %thread_head24
  br i1 %cmp25.not, label %for.body.if.end105_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.body.if.end105_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end105

if.else35:                                        ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_const_cmp4(i32 18, i32 %sig)
  %cmp36 = icmp eq i32 %sig, 18
  br i1 %cmp36, label %if.then37, label %if.else35.if.end105_crit_edge

if.else35.if.end105_crit_edge:                    ; preds = %if.else35
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end105

if.then37:                                        ; preds = %if.else35
  %17 = ptrtoint ptr %flush to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 3932160, ptr %flush, align 4
  %18 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 0, ptr %2, align 4
  %shared_pending38 = getelementptr inbounds %struct.signal_struct, ptr %1, i32 0, i32 6
  call fastcc void @flush_sigqueue_mask(ptr noundef nonnull %flush, ptr noundef %shared_pending38)
  %call40 = tail call i32 @rcu_read_lock_any_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call40)
  %tobool41.not = icmp eq i32 %call40, 0
  br i1 %tobool41.not, label %land.lhs.true42, label %if.then37.do.end50_crit_edge

if.then37.do.end50_crit_edge:                     ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end50

land.lhs.true42:                                  ; preds = %if.then37
  %call43 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call43)
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %land.lhs.true42.do.end50_crit_edge, label %land.lhs.true45

land.lhs.true42.do.end50_crit_edge:               ; preds = %land.lhs.true42
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end50

land.lhs.true45:                                  ; preds = %land.lhs.true42
  %.b142143 = load i1, ptr @prepare_signal.__warned.96, align 1
  br i1 %.b142143, label %land.lhs.true45.do.end50_crit_edge, label %if.then47

land.lhs.true45.do.end50_crit_edge:               ; preds = %land.lhs.true45
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end50

if.then47:                                        ; preds = %land.lhs.true45
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @prepare_signal.__warned.96, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 930, ptr noundef nonnull @.str.2) #15
  br label %do.end50

do.end50:                                         ; preds = %if.then47, %land.lhs.true45.do.end50_crit_edge, %land.lhs.true42.do.end50_crit_edge, %if.then37.do.end50_crit_edge
  %19 = ptrtoint ptr %signal1 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %signal1, align 16
  %thread_head57 = getelementptr inbounds %struct.signal_struct, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %thread_head57 to i32
  call void @__asan_load4_noabort(i32 %21)
  %.pn157 = load volatile ptr, ptr %thread_head57, align 4
  %cmp65.not160 = icmp eq ptr %.pn157, %thread_head57
  br i1 %cmp65.not160, label %do.end50.for.end87_crit_edge, label %do.end50.for.body66_crit_edge

do.end50.for.body66_crit_edge:                    ; preds = %do.end50
  br label %for.body66

do.end50.for.end87_crit_edge:                     ; preds = %do.end50
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end87

for.body66:                                       ; preds = %for.inc77.for.body66_crit_edge, %do.end50.for.body66_crit_edge
  %.pn161 = phi ptr [ %.pn, %for.inc77.for.body66_crit_edge ], [ %.pn157, %do.end50.for.body66_crit_edge ]
  %t.1162 = getelementptr i8, ptr %.pn161, i32 -1404
  %pending67 = getelementptr i8, ptr %.pn161, i32 308
  call fastcc void @flush_sigqueue_mask(ptr noundef nonnull %flush, ptr noundef %pending67)
  %jobctl.i = getelementptr i8, ptr %.pn161, i32 -160
  %22 = ptrtoint ptr %jobctl.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %jobctl.i, align 4
  %and11.i = and i32 %23, -458753
  store i32 %and11.i, ptr %jobctl.i, align 4
  %24 = and i32 %23, 3670016
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %24)
  %.not.i = icmp eq i32 %24, 2097152
  br i1 %.not.i, label %if.then.i.i, label %for.body66.task_clear_jobctl_pending.exit_crit_edge, !prof !517

for.body66.task_clear_jobctl_pending.exit_crit_edge: ; preds = %for.body66
  call void @__sanitizer_cov_trace_pc() #17
  br label %task_clear_jobctl_pending.exit

if.then.i.i:                                      ; preds = %for.body66
  call void @__sanitizer_cov_trace_pc() #17
  %and4.i.i = and i32 %23, -2555905
  %25 = ptrtoint ptr %jobctl.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %and4.i.i, ptr %jobctl.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !515
  tail call void @wake_up_bit(ptr noundef %jobctl.i, i32 noundef 21) #15
  br label %task_clear_jobctl_pending.exit

task_clear_jobctl_pending.exit:                   ; preds = %if.then.i.i, %for.body66.task_clear_jobctl_pending.exit_crit_edge
  %ptrace = getelementptr i8, ptr %.pn161, i32 -1388
  %26 = ptrtoint ptr %ptrace to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %ptrace, align 16
  %and68 = and i32 %27, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and68)
  %tobool69.not = icmp eq i32 %and68, 0
  br i1 %tobool69.not, label %if.then73, label %if.else75, !prof !509

if.then73:                                        ; preds = %task_clear_jobctl_pending.exit
  call void @__sanitizer_cov_trace_pc() #17
  %call74 = tail call i32 @wake_up_state(ptr noundef %t.1162, i32 noundef 4) #15
  br label %for.inc77

if.else75:                                        ; preds = %task_clear_jobctl_pending.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @ptrace_trap_notify(ptr noundef %t.1162)
  br label %for.inc77

for.inc77:                                        ; preds = %if.else75, %if.then73
  %28 = ptrtoint ptr %.pn161 to i32
  call void @__asan_load4_noabort(i32 %28)
  %.pn = load volatile ptr, ptr %.pn161, align 4
  %29 = ptrtoint ptr %signal1 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %signal1, align 16
  %thread_head64 = getelementptr inbounds %struct.signal_struct, ptr %30, i32 0, i32 3
  %cmp65.not = icmp eq ptr %.pn, %thread_head64
  br i1 %cmp65.not, label %for.inc77.for.end87_crit_edge, label %for.inc77.for.body66_crit_edge

for.inc77.for.body66_crit_edge:                   ; preds = %for.inc77
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body66

for.inc77.for.end87_crit_edge:                    ; preds = %for.inc77
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end87

for.end87:                                        ; preds = %for.inc77.for.end87_crit_edge, %do.end50.for.end87_crit_edge
  %31 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %flags, align 8
  %and89 = and i32 %32, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and89)
  %tobool90.not = icmp eq i32 %and89, 0
  br i1 %tobool90.not, label %if.end97, label %for.end87.if.then99_crit_edge

for.end87.if.then99_crit_edge:                    ; preds = %for.end87
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then99

if.end97:                                         ; preds = %for.end87
  %group_stop_count = getelementptr inbounds %struct.signal_struct, ptr %1, i32 0, i32 11
  %33 = ptrtoint ptr %group_stop_count to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %group_stop_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool93.not = icmp eq i32 %34, 0
  br i1 %tobool93.not, label %if.end97.if.end105_crit_edge, label %if.end97.if.then99_crit_edge

if.end97.if.then99_crit_edge:                     ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then99

if.end97.if.end105_crit_edge:                     ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end105

if.then99:                                        ; preds = %if.end97.if.then99_crit_edge, %for.end87.if.then99_crit_edge
  %why.0152 = phi i32 [ 18, %if.end97.if.then99_crit_edge ], [ 34, %for.end87.if.then99_crit_edge ]
  %and.i = and i32 %32, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then99.signal_set_stop_flags.exit_crit_edge, label %do.end.i, !prof !509

if.then99.signal_set_stop_flags.exit_crit_edge:   ; preds = %if.then99
  call void @__sanitizer_cov_trace_pc() #17
  br label %signal_set_stop_flags.exit

do.end.i:                                         ; preds = %if.then99
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 270, i32 noundef 9, ptr noundef null) #15
  br label %signal_set_stop_flags.exit

signal_set_stop_flags.exit:                       ; preds = %do.end.i, %if.then99.signal_set_stop_flags.exit_crit_edge
  %35 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %flags, align 8
  %and22.i = and i32 %36, -52
  %or.i = or i32 %and22.i, %why.0152
  store i32 %or.i, ptr %flags, align 8
  %group_stop_count101 = getelementptr inbounds %struct.signal_struct, ptr %1, i32 0, i32 11
  %37 = ptrtoint ptr %group_stop_count101 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 0, ptr %group_stop_count101, align 4
  %group_exit_code = getelementptr inbounds %struct.signal_struct, ptr %1, i32 0, i32 8
  %38 = ptrtoint ptr %group_exit_code to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 0, ptr %group_exit_code, align 8
  br label %if.end105

if.end105:                                        ; preds = %signal_set_stop_flags.exit, %if.end97.if.end105_crit_edge, %if.else35.if.end105_crit_edge, %for.body.if.end105_crit_edge, %do.end.if.end105_crit_edge, %if.else.if.end105_crit_edge, %if.then.if.end105_crit_edge
  %sub.i.i.pre-phi = phi i32 [ %.pre, %if.then.if.end105_crit_edge ], [ %7, %do.end.if.end105_crit_edge ], [ %7, %if.else.if.end105_crit_edge ], [ %7, %if.end97.if.end105_crit_edge ], [ %7, %signal_set_stop_flags.exit ], [ %7, %if.else35.if.end105_crit_edge ], [ %7, %for.body.if.end105_crit_edge ]
  %blocked.i = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 113
  %div3.i.i = lshr i32 %sub.i.i.pre-phi, 5
  %arrayidx.i.i = getelementptr [2 x i32], ptr %blocked.i, i32 0, i32 %div3.i.i
  %39 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx.i.i, align 4
  %rem.i.i = and i32 %sub.i.i.pre-phi, 31
  %41 = shl nuw i32 1, %rem.i.i
  %42 = and i32 %40, %41
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool.not.i148 = icmp eq i32 %42, 0
  br i1 %tobool.not.i148, label %lor.lhs.false.i, label %if.end105.cleanup_crit_edge

if.end105.cleanup_crit_edge:                      ; preds = %if.end105
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

lor.lhs.false.i:                                  ; preds = %if.end105
  %real_blocked.i = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 114
  %arrayidx.i16.i = getelementptr [2 x i32], ptr %real_blocked.i, i32 0, i32 %div3.i.i
  %43 = ptrtoint ptr %arrayidx.i16.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx.i16.i, align 4
  %45 = and i32 %44, %41
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool2.not.i = icmp eq i32 %45, 0
  br i1 %tobool2.not.i, label %if.end.i, label %lor.lhs.false.i.cleanup_crit_edge

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end.i:                                         ; preds = %lor.lhs.false.i
  %ptrace.i = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 4
  %46 = ptrtoint ptr %ptrace.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %ptrace.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool3.not.i = icmp eq i32 %47, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %sig)
  %cmp.not.i = icmp eq i32 %sig, 9
  %or.cond.i = or i1 %cmp.not.i, %tobool3.not.i
  br i1 %or.cond.i, label %if.end5.i, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5.i:                                        ; preds = %if.end.i
  %sighand.i.i.i = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 112
  %48 = ptrtoint ptr %sighand.i.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %sighand.i.i.i, align 4
  %arrayidx.i.i.i = getelementptr %struct.sighand_struct, ptr %49, i32 0, i32 3, i32 %sub.i.i.pre-phi
  %50 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %arrayidx.i.i.i, align 4
  %tgid.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 69
  %52 = ptrtoint ptr %tgid.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %tgid.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %53)
  %cmp.i.i.i = icmp eq i32 %53, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %sub.i.i.pre-phi)
  %54 = icmp ult i32 %sub.i.i.pre-phi, 31
  %55 = and i1 %54, %cmp.i.i.i
  br i1 %55, label %land.rhs3.i.i, label %if.end5.i.if.end.i.i_crit_edge

if.end5.i.if.end.i.i_crit_edge:                   ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i

land.rhs3.i.i:                                    ; preds = %if.end5.i
  %shl.i.i = shl nuw nsw i32 1, %sub.i.i.pre-phi
  %and.i20.i = and i32 %shl.i.i, 262400
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i20.i)
  %tobool4.not.i.i = icmp eq i32 %and.i20.i, 0
  br i1 %tobool4.not.i.i, label %land.rhs3.i.i.if.end.i.i_crit_edge, label %land.rhs3.i.i.cleanup_crit_edge, !prof !509

land.rhs3.i.i.cleanup_crit_edge:                  ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

land.rhs3.i.i.if.end.i.i_crit_edge:               ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %land.rhs3.i.i.if.end.i.i_crit_edge, %if.end5.i.if.end.i.i_crit_edge
  %56 = ptrtoint ptr %signal1 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %signal1, align 16
  %flags.i.i = getelementptr inbounds %struct.signal_struct, ptr %57, i32 0, i32 12
  %58 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %flags.i.i, align 8
  %and8.i.i = and i32 %59, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i.i)
  %tobool9.not.i.i = icmp eq i32 %and8.i.i, 0
  br i1 %tobool9.not.i.i, label %if.end.i.i.if.end30.i.i_crit_edge, label %land.lhs.true16.i.i, !prof !509

if.end.i.i.if.end30.i.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end30.i.i

land.lhs.true16.i.i:                              ; preds = %if.end.i.i
  %cmp17.i.i = icmp eq ptr %51, null
  br i1 %cmp17.i.i, label %land.lhs.true18.i.i, label %land.lhs.true16.i.i.if.end30.i.i_crit_edge

land.lhs.true16.i.i.if.end30.i.i_crit_edge:       ; preds = %land.lhs.true16.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end30.i.i

land.lhs.true18.i.i:                              ; preds = %land.lhs.true16.i.i
  %60 = and i1 %54, %force
  br i1 %60, label %land.lhs.true24.i.i, label %land.lhs.true18.i.i.cleanup_crit_edge

land.lhs.true18.i.i.cleanup_crit_edge:            ; preds = %land.lhs.true18.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

land.lhs.true24.i.i:                              ; preds = %land.lhs.true18.i.i
  %shl26.i.i = shl nuw nsw i32 1, %sub.i.i.pre-phi
  %and27.i.i = and i32 %shl26.i.i, 262400
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and27.i.i)
  %tobool28.not.i.i = icmp eq i32 %and27.i.i, 0
  br i1 %tobool28.not.i.i, label %land.lhs.true24.i.i.cleanup_crit_edge, label %land.lhs.true24.i.i.if.end30.i.i_crit_edge

land.lhs.true24.i.i.if.end30.i.i_crit_edge:       ; preds = %land.lhs.true24.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end30.i.i

land.lhs.true24.i.i.cleanup_crit_edge:            ; preds = %land.lhs.true24.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end30.i.i:                                     ; preds = %land.lhs.true24.i.i.if.end30.i.i_crit_edge, %land.lhs.true16.i.i.if.end30.i.i_crit_edge, %if.end.i.i.if.end30.i.i_crit_edge
  %flags31.i.i = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 3
  %61 = ptrtoint ptr %flags31.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %flags31.i.i, align 4
  %and32.i.i = and i32 %62, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32.i.i)
  %tobool33.not.i.i = icmp ne i32 %and32.i.i, 0
  %cmp35.i.i = icmp eq ptr %51, inttoptr (i32 3 to ptr)
  %or.cond66.i.i = select i1 %tobool33.not.i.i, i1 %cmp35.i.i, i1 false
  %lnot38.i.i = xor i1 %force, true
  %63 = and i1 %or.cond66.i.i, %lnot38.i.i
  br i1 %63, label %if.end30.i.i.cleanup_crit_edge, label %if.end48.i.i, !prof !510

if.end30.i.i.cleanup_crit_edge:                   ; preds = %if.end30.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end48.i.i:                                     ; preds = %if.end30.i.i
  %magicptr.i.i.i = ptrtoint ptr %51 to i32
  %64 = zext i32 %magicptr.i.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %64, ptr @__sancov_gen_cov_switch_values.161)
  switch i32 %magicptr.i.i.i, label %lor.end.fold.split.i.i.i [
    i32 1, label %if.end48.i.i.cleanup_crit_edge
    i32 0, label %land.rhs.i.i.i
  ]

if.end48.i.i.cleanup_crit_edge:                   ; preds = %if.end48.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

land.rhs.i.i.i:                                   ; preds = %if.end48.i.i
  br i1 %54, label %land.rhs4.i.i.i, label %land.rhs.i.i.i.cleanup_crit_edge

land.rhs.i.i.i.cleanup_crit_edge:                 ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

land.rhs4.i.i.i:                                  ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %shl.i.i.i = shl nuw nsw i32 1, %sub.i.i.pre-phi
  %and.i.i.i = and i32 %shl.i.i.i, 138608640
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.i.i = icmp eq i32 %and.i.i.i, 0
  br label %cleanup

lor.end.fold.split.i.i.i:                         ; preds = %if.end48.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cleanup:                                          ; preds = %lor.end.fold.split.i.i.i, %land.rhs4.i.i.i, %land.rhs.i.i.i.cleanup_crit_edge, %if.end48.i.i.cleanup_crit_edge, %if.end30.i.i.cleanup_crit_edge, %land.lhs.true24.i.i.cleanup_crit_edge, %land.lhs.true18.i.i.cleanup_crit_edge, %land.rhs3.i.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge, %if.end105.cleanup_crit_edge, %if.then3
  %retval.0 = phi i1 [ %cmp, %if.then3 ], [ true, %lor.lhs.false.i.cleanup_crit_edge ], [ true, %if.end105.cleanup_crit_edge ], [ true, %if.end.i.cleanup_crit_edge ], [ false, %land.rhs3.i.i.cleanup_crit_edge ], [ false, %land.lhs.true24.i.i.cleanup_crit_edge ], [ false, %land.lhs.true18.i.i.cleanup_crit_edge ], [ false, %if.end30.i.i.cleanup_crit_edge ], [ false, %if.end48.i.i.cleanup_crit_edge ], [ true, %land.rhs.i.i.i.cleanup_crit_edge ], [ %tobool.i.i.i, %land.rhs4.i.i.i ], [ true, %lor.end.fold.split.i.i.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %flush) #15
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @complete_signal(i32 noundef %sig, ptr noundef %p, i32 noundef %type) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %signal1 = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 111
  %0 = ptrtoint ptr %signal1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %signal1, align 16
  %blocked.i = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 113
  %sub.i.i = add i32 %sig, -1
  %div3.i.i = lshr i32 %sub.i.i, 5
  %arrayidx.i.i = getelementptr [2 x i32], ptr %blocked.i, i32 0, i32 %div3.i.i
  %2 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx.i.i, align 4
  %rem.i.i = and i32 %sub.i.i, 31
  %4 = shl nuw i32 1, %rem.i.i
  %5 = and i32 %3, %4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.if.else_crit_edge

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

if.end.i:                                         ; preds = %entry
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 3
  %6 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %if.end3.i, label %if.end.i.if.else_crit_edge

if.end.i.if.else_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

if.end3.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %sig)
  %cmp.i = icmp eq i32 %sig, 9
  br i1 %cmp.i, label %if.end3.i.land.lhs.true15_crit_edge, label %do.end.i

if.end3.i.land.lhs.true15_crit_edge:              ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.lhs.true15

do.end.i:                                         ; preds = %if.end3.i
  %8 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %p, align 128
  %and6.i = and i32 %9, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6.i)
  %cmp7.not.i = icmp eq i32 %and6.i, 0
  br i1 %cmp7.not.i, label %if.end9.i, label %do.end.i.if.else_crit_edge

do.end.i.if.else_crit_edge:                       ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

if.end9.i:                                        ; preds = %do.end.i
  %call10.i = tail call i32 @task_curr(ptr noundef %p) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool11.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool11.not.i, label %wants_signal.exit, label %if.end9.i.if.end12_crit_edge

if.end9.i.if.end12_crit_edge:                     ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end12

wants_signal.exit:                                ; preds = %if.end9.i
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 1
  %10 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %stack.i.i.i, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  %and1.i.i.i.i.i = and i32 %13, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i)
  %tobool13.not.i = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool13.not.i, label %wants_signal.exit.if.end12_crit_edge, label %wants_signal.exit.if.else_crit_edge

wants_signal.exit.if.else_crit_edge:              ; preds = %wants_signal.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

wants_signal.exit.if.end12_crit_edge:             ; preds = %wants_signal.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end12

if.else:                                          ; preds = %wants_signal.exit.if.else_crit_edge, %do.end.i.if.else_crit_edge, %if.end.i.if.else_crit_edge, %entry.if.else_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %type)
  %cmp = icmp eq i32 %type, 0
  br i1 %cmp, label %if.else.cleanup_crit_edge, label %lor.lhs.false

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.else
  %thread_group.i = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 80
  %14 = ptrtoint ptr %thread_group.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %thread_group.i, align 4
  %cmp.i.i.not = icmp eq ptr %15, %thread_group.i
  br i1 %cmp.i.i.not, label %lor.lhs.false.cleanup_crit_edge, label %if.else4

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.else4:                                         ; preds = %lor.lhs.false
  %curr_target = getelementptr inbounds %struct.signal_struct, ptr %1, i32 0, i32 5
  %16 = ptrtoint ptr %curr_target to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %curr_target, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %sig)
  %cmp.i96 = icmp eq i32 %sig, 9
  br label %while.cond

while.cond:                                       ; preds = %while.body.while.cond_crit_edge, %if.else4
  %t.0 = phi ptr [ %17, %if.else4 ], [ %add.ptr.i, %while.body.while.cond_crit_edge ]
  %blocked.i86 = getelementptr inbounds %struct.task_struct, ptr %t.0, i32 0, i32 113
  %arrayidx.i.i89 = getelementptr [2 x i32], ptr %blocked.i86, i32 0, i32 %div3.i.i
  %18 = ptrtoint ptr %arrayidx.i.i89 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx.i.i89, align 4
  %20 = and i32 %19, %4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.not.i91 = icmp eq i32 %20, 0
  br i1 %tobool.not.i91, label %if.end.i95, label %while.cond.while.body_crit_edge

while.cond.while.body_crit_edge:                  ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body

if.end.i95:                                       ; preds = %while.cond
  %flags.i92 = getelementptr inbounds %struct.task_struct, ptr %t.0, i32 0, i32 3
  %21 = ptrtoint ptr %flags.i92 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %flags.i92, align 4
  %and.i93 = and i32 %22, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i93)
  %tobool1.not.i94 = icmp eq i32 %and.i93, 0
  br i1 %tobool1.not.i94, label %if.end3.i97, label %if.end.i95.while.body_crit_edge

if.end.i95.while.body_crit_edge:                  ; preds = %if.end.i95
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body

if.end3.i97:                                      ; preds = %if.end.i95
  br i1 %cmp.i96, label %if.end3.i97.while.end_crit_edge, label %do.end.i100

if.end3.i97.while.end_crit_edge:                  ; preds = %if.end3.i97
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

do.end.i100:                                      ; preds = %if.end3.i97
  %23 = ptrtoint ptr %t.0 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %t.0, align 128
  %and6.i98 = and i32 %24, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6.i98)
  %cmp7.not.i99 = icmp eq i32 %and6.i98, 0
  br i1 %cmp7.not.i99, label %if.end9.i103, label %do.end.i100.while.body_crit_edge

do.end.i100.while.body_crit_edge:                 ; preds = %do.end.i100
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body

if.end9.i103:                                     ; preds = %do.end.i100
  %call10.i101 = tail call i32 @task_curr(ptr noundef %t.0) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i101)
  %tobool11.not.i102 = icmp eq i32 %call10.i101, 0
  br i1 %tobool11.not.i102, label %wants_signal.exit109, label %if.end9.i103.while.end_crit_edge

if.end9.i103.while.end_crit_edge:                 ; preds = %if.end9.i103
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

wants_signal.exit109:                             ; preds = %if.end9.i103
  %stack.i.i.i104 = getelementptr inbounds %struct.task_struct, ptr %t.0, i32 0, i32 1
  %25 = ptrtoint ptr %stack.i.i.i104 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %stack.i.i.i104, align 4
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %26, align 4
  %and1.i.i.i.i.i105 = and i32 %28, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i105)
  %tobool13.not.i106 = icmp eq i32 %and1.i.i.i.i.i105, 0
  br i1 %tobool13.not.i106, label %wants_signal.exit109.while.end_crit_edge, label %wants_signal.exit109.while.body_crit_edge

wants_signal.exit109.while.body_crit_edge:        ; preds = %wants_signal.exit109
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body

wants_signal.exit109.while.end_crit_edge:         ; preds = %wants_signal.exit109
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

while.body:                                       ; preds = %wants_signal.exit109.while.body_crit_edge, %do.end.i100.while.body_crit_edge, %if.end.i95.while.body_crit_edge, %while.cond.while.body_crit_edge
  %thread_group.i110 = getelementptr inbounds %struct.task_struct, ptr %t.0, i32 0, i32 80
  %29 = ptrtoint ptr %thread_group.i110 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile ptr, ptr %thread_group.i110, align 4
  %add.ptr.i = getelementptr i8, ptr %30, i32 -1396
  %31 = ptrtoint ptr %curr_target to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %curr_target, align 8
  %cmp8 = icmp eq ptr %add.ptr.i, %32
  br i1 %cmp8, label %while.body.cleanup_crit_edge, label %while.body.while.cond_crit_edge

while.body.while.cond_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.cond

while.body.cleanup_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

while.end:                                        ; preds = %wants_signal.exit109.while.end_crit_edge, %if.end9.i103.while.end_crit_edge, %if.end3.i97.while.end_crit_edge
  %33 = ptrtoint ptr %curr_target to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %t.0, ptr %curr_target, align 8
  br label %if.end12

if.end12:                                         ; preds = %while.end, %wants_signal.exit.if.end12_crit_edge, %if.end9.i.if.end12_crit_edge
  %t.1 = phi ptr [ %t.0, %while.end ], [ %p, %wants_signal.exit.if.end12_crit_edge ], [ %p, %if.end9.i.if.end12_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %sub.i.i)
  %34 = icmp ult i32 %sub.i.i, 31
  br i1 %34, label %if.end12.land.lhs.true15_crit_edge, label %if.end12.land.lhs.true17_crit_edge

if.end12.land.lhs.true17_crit_edge:               ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.lhs.true17

if.end12.land.lhs.true15_crit_edge:               ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.lhs.true15

land.lhs.true15:                                  ; preds = %if.end12.land.lhs.true15_crit_edge, %if.end3.i.land.lhs.true15_crit_edge
  %t.1135 = phi ptr [ %t.1, %if.end12.land.lhs.true15_crit_edge ], [ %p, %if.end3.i.land.lhs.true15_crit_edge ]
  %shl = shl nuw nsw i32 1, %sub.i.i
  %and = and i32 %shl, 142540800
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool16.not = icmp eq i32 %and, 0
  br i1 %tobool16.not, label %land.lhs.true15.land.lhs.true17_crit_edge, label %land.lhs.true15.if.end47_crit_edge

land.lhs.true15.if.end47_crit_edge:               ; preds = %land.lhs.true15
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end47

land.lhs.true15.land.lhs.true17_crit_edge:        ; preds = %land.lhs.true15
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.lhs.true17

land.lhs.true17:                                  ; preds = %land.lhs.true15.land.lhs.true17_crit_edge, %if.end12.land.lhs.true17_crit_edge
  %35 = phi i1 [ true, %land.lhs.true15.land.lhs.true17_crit_edge ], [ false, %if.end12.land.lhs.true17_crit_edge ]
  %t.1134 = phi ptr [ %t.1135, %land.lhs.true15.land.lhs.true17_crit_edge ], [ %t.1, %if.end12.land.lhs.true17_crit_edge ]
  %sighand = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 112
  %36 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %sighand, align 4
  %arrayidx = getelementptr %struct.sighand_struct, ptr %37, i32 0, i32 3, i32 %sub.i.i
  %38 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx, align 4
  %cmp19 = icmp eq ptr %39, null
  br i1 %cmp19, label %land.lhs.true20, label %land.lhs.true17.if.end47_crit_edge

land.lhs.true17.if.end47_crit_edge:               ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end47

land.lhs.true20:                                  ; preds = %land.lhs.true17
  %core_state = getelementptr inbounds %struct.signal_struct, ptr %1, i32 0, i32 13
  %40 = ptrtoint ptr %core_state to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %core_state, align 4
  %tobool21.not = icmp eq ptr %41, null
  br i1 %tobool21.not, label %lor.lhs.false22, label %land.lhs.true20.land.lhs.true25_crit_edge

land.lhs.true20.land.lhs.true25_crit_edge:        ; preds = %land.lhs.true20
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.lhs.true25

lor.lhs.false22:                                  ; preds = %land.lhs.true20
  %flags = getelementptr inbounds %struct.signal_struct, ptr %1, i32 0, i32 12
  %42 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %flags, align 8
  %and23 = and i32 %43, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23)
  %tobool24.not = icmp eq i32 %and23, 0
  br i1 %tobool24.not, label %lor.lhs.false22.land.lhs.true25_crit_edge, label %lor.lhs.false22.if.end47_crit_edge

lor.lhs.false22.if.end47_crit_edge:               ; preds = %lor.lhs.false22
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end47

lor.lhs.false22.land.lhs.true25_crit_edge:        ; preds = %lor.lhs.false22
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.lhs.true25

land.lhs.true25:                                  ; preds = %lor.lhs.false22.land.lhs.true25_crit_edge, %land.lhs.true20.land.lhs.true25_crit_edge
  %real_blocked = getelementptr inbounds %struct.task_struct, ptr %t.1134, i32 0, i32 114
  %arrayidx.i = getelementptr [2 x i32], ptr %real_blocked, i32 0, i32 %div3.i.i
  %44 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %arrayidx.i, align 4
  %46 = and i32 %45, %4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool27.not = icmp eq i32 %46, 0
  br i1 %tobool27.not, label %land.lhs.true28, label %land.lhs.true25.if.end47_crit_edge

land.lhs.true25.if.end47_crit_edge:               ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end47

land.lhs.true28:                                  ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %sig)
  %cmp29 = icmp eq i32 %sig, 9
  br i1 %cmp29, label %land.lhs.true28.if.then32_crit_edge, label %lor.lhs.false30

land.lhs.true28.if.then32_crit_edge:              ; preds = %land.lhs.true28
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then32

lor.lhs.false30:                                  ; preds = %land.lhs.true28
  %ptrace = getelementptr inbounds %struct.task_struct, ptr %p, i32 0, i32 4
  %47 = ptrtoint ptr %ptrace to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %ptrace, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool31.not = icmp eq i32 %48, 0
  br i1 %tobool31.not, label %lor.lhs.false30.if.then32_crit_edge, label %lor.lhs.false30.if.end47_crit_edge

lor.lhs.false30.if.end47_crit_edge:               ; preds = %lor.lhs.false30
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end47

lor.lhs.false30.if.then32_crit_edge:              ; preds = %lor.lhs.false30
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then32

if.then32:                                        ; preds = %lor.lhs.false30.if.then32_crit_edge, %land.lhs.true28.if.then32_crit_edge
  br i1 %35, label %land.lhs.true36, label %if.then32.if.then41_crit_edge

if.then32.if.then41_crit_edge:                    ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then41

land.lhs.true36:                                  ; preds = %if.then32
  %shl38 = shl nuw nsw i32 1, %sub.i.i
  %and39 = and i32 %shl38, 1098908924
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and39)
  %tobool40.not = icmp eq i32 %and39, 0
  br i1 %tobool40.not, label %land.lhs.true36.if.then41_crit_edge, label %land.lhs.true36.if.end47_crit_edge

land.lhs.true36.if.end47_crit_edge:               ; preds = %land.lhs.true36
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end47

land.lhs.true36.if.then41_crit_edge:              ; preds = %land.lhs.true36
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then41

if.then41:                                        ; preds = %land.lhs.true36.if.then41_crit_edge, %if.then32.if.then41_crit_edge
  %flags42 = getelementptr inbounds %struct.signal_struct, ptr %1, i32 0, i32 12
  %49 = ptrtoint ptr %flags42 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 4, ptr %flags42, align 8
  %group_exit_code = getelementptr inbounds %struct.signal_struct, ptr %1, i32 0, i32 8
  %50 = ptrtoint ptr %group_exit_code to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %sig, ptr %group_exit_code, align 8
  %group_stop_count = getelementptr inbounds %struct.signal_struct, ptr %1, i32 0, i32 11
  %51 = ptrtoint ptr %group_stop_count to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 0, ptr %group_stop_count, align 4
  br label %do.body

do.body:                                          ; preds = %signal_wake_up.exit.do.body_crit_edge, %if.then41
  %t.2 = phi ptr [ %p, %if.then41 ], [ %add.ptr.i115, %signal_wake_up.exit.do.body_crit_edge ]
  %jobctl.i = getelementptr inbounds %struct.task_struct, ptr %t.2, i32 0, i32 61
  %52 = ptrtoint ptr %jobctl.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %jobctl.i, align 4
  %and11.i = and i32 %53, -2031617
  store i32 %and11.i, ptr %jobctl.i, align 4
  %54 = and i32 %53, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %.not.i.not = icmp eq i32 %54, 0
  br i1 %.not.i.not, label %do.body.task_clear_jobctl_pending.exit_crit_edge, label %if.then.i.i, !prof !521

do.body.task_clear_jobctl_pending.exit_crit_edge: ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %task_clear_jobctl_pending.exit

if.then.i.i:                                      ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  %and4.i.i = and i32 %53, -4128769
  %55 = ptrtoint ptr %jobctl.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %and4.i.i, ptr %jobctl.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !515
  tail call void @wake_up_bit(ptr noundef %jobctl.i, i32 noundef 21) #15
  br label %task_clear_jobctl_pending.exit

task_clear_jobctl_pending.exit:                   ; preds = %if.then.i.i, %do.body.task_clear_jobctl_pending.exit_crit_edge
  %signal43 = getelementptr inbounds %struct.task_struct, ptr %t.2, i32 0, i32 116, i32 1
  %56 = ptrtoint ptr %signal43 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %signal43, align 4
  %or.i = or i32 %57, 256
  store i32 %or.i, ptr %signal43, align 4
  %stack.i.i.i112 = getelementptr inbounds %struct.task_struct, ptr %t.2, i32 0, i32 1
  %58 = ptrtoint ptr %stack.i.i.i112 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %stack.i.i.i112, align 4
  tail call void @_set_bit(i32 noundef 0, ptr noundef %59) #15
  %call.i.i = tail call i32 @wake_up_state(ptr noundef %t.2, i32 noundef 257) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i113, label %task_clear_jobctl_pending.exit.signal_wake_up.exit_crit_edge

task_clear_jobctl_pending.exit.signal_wake_up.exit_crit_edge: ; preds = %task_clear_jobctl_pending.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %signal_wake_up.exit

if.then.i.i113:                                   ; preds = %task_clear_jobctl_pending.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @kick_process(ptr noundef %t.2) #15
  br label %signal_wake_up.exit

signal_wake_up.exit:                              ; preds = %if.then.i.i113, %task_clear_jobctl_pending.exit.signal_wake_up.exit_crit_edge
  %thread_group.i114 = getelementptr inbounds %struct.task_struct, ptr %t.2, i32 0, i32 80
  %60 = ptrtoint ptr %thread_group.i114 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile ptr, ptr %thread_group.i114, align 4
  %add.ptr.i115 = getelementptr i8, ptr %61, i32 -1396
  %cmp45.not = icmp eq ptr %add.ptr.i115, %p
  br i1 %cmp45.not, label %signal_wake_up.exit.cleanup_crit_edge, label %signal_wake_up.exit.do.body_crit_edge

signal_wake_up.exit.do.body_crit_edge:            ; preds = %signal_wake_up.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body

signal_wake_up.exit.cleanup_crit_edge:            ; preds = %signal_wake_up.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end47:                                         ; preds = %land.lhs.true36.if.end47_crit_edge, %lor.lhs.false30.if.end47_crit_edge, %land.lhs.true25.if.end47_crit_edge, %lor.lhs.false22.if.end47_crit_edge, %land.lhs.true17.if.end47_crit_edge, %land.lhs.true15.if.end47_crit_edge
  %t.1136 = phi ptr [ %t.1134, %land.lhs.true36.if.end47_crit_edge ], [ %t.1134, %lor.lhs.false30.if.end47_crit_edge ], [ %t.1134, %land.lhs.true25.if.end47_crit_edge ], [ %t.1134, %lor.lhs.false22.if.end47_crit_edge ], [ %t.1134, %land.lhs.true17.if.end47_crit_edge ], [ %t.1135, %land.lhs.true15.if.end47_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %sig)
  %cmp48 = icmp eq i32 %sig, 9
  %stack.i.i.i116 = getelementptr inbounds %struct.task_struct, ptr %t.1136, i32 0, i32 1
  %62 = ptrtoint ptr %stack.i.i.i116 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %stack.i.i.i116, align 4
  tail call void @_set_bit(i32 noundef 0, ptr noundef %63) #15
  %or.i.i = select i1 %cmp48, i32 257, i32 1
  %call.i.i117 = tail call i32 @wake_up_state(ptr noundef %t.1136, i32 noundef %or.i.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i117)
  %tobool.not.i.i118 = icmp eq i32 %call.i.i117, 0
  br i1 %tobool.not.i.i118, label %if.then.i.i119, label %if.end47.cleanup_crit_edge

if.end47.cleanup_crit_edge:                       ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then.i.i119:                                   ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @kick_process(ptr noundef %t.1136) #15
  br label %cleanup

cleanup:                                          ; preds = %if.then.i.i119, %if.end47.cleanup_crit_edge, %signal_wake_up.exit.cleanup_crit_edge, %while.body.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %if.else.cleanup_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_signal_generate(i32 noundef %sig, ptr noundef %info, ptr noundef %task, i32 noundef %group, i32 noundef %result) unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_signal_generate, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_signal_generate, %do.body)) #15
          to label %if.end48 [label %do.body], !srcloc !526

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !509

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.99, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !527
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_signal_generate, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %sig, ptr noundef %info, ptr noundef %task, i32 noundef %group, i32 noundef %result) #15
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !528
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !528
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !509

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.99, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !529
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_signal_generate, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_signal_generate.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @trace_signal_generate.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.98, i32 noundef 80, ptr noundef nonnull @.str.1) #15
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !530
  %38 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @do_notify_parent(ptr noundef %tsk, i32 noundef %sig) local_unnamed_addr #0 align 64 {
entry:
  %info = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info) #15
  %0 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %1 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %2 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3
  %3 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 1
  %4 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 2
  %5 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 3
  %6 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sig)
  %cmp = icmp eq i32 %sig, -1
  br i1 %cmp, label %do.body2, label %do.end11, !prof !510

do.body2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/signal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2023, 0\0A.popsection", ""() #15, !srcloc !531
  unreachable

do.end11:                                         ; preds = %entry
  %7 = ptrtoint ptr %tsk to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %tsk, align 128
  %and = and i32 %8, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %cmp12.not = icmp eq i32 %and, 0
  br i1 %cmp12.not, label %do.body29, label %do.body20, !prof !509

do.body20:                                        ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/signal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2026, 0\0A.popsection", ""() #15, !srcloc !532
  unreachable

do.body29:                                        ; preds = %do.end11
  %ptrace = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 4
  %9 = ptrtoint ptr %ptrace to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %ptrace, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool30.not = icmp eq i32 %10, 0
  br i1 %tobool30.not, label %land.rhs, label %do.body29.do.end50_crit_edge

do.body29.do.end50_crit_edge:                     ; preds = %do.body29
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end50

land.rhs:                                         ; preds = %do.body29
  %group_leader = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 75
  %11 = ptrtoint ptr %group_leader to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %group_leader, align 4
  %cmp31.not = icmp eq ptr %12, %tsk
  br i1 %cmp31.not, label %lor.rhs, label %land.rhs.do.body42_crit_edge

land.rhs.do.body42_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body42

lor.rhs:                                          ; preds = %land.rhs
  %thread_group.i = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 80
  %13 = ptrtoint ptr %thread_group.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile ptr, ptr %thread_group.i, align 4
  %cmp.i.i.not = icmp eq ptr %14, %thread_group.i
  br i1 %cmp.i.i.not, label %lor.rhs.do.end50_crit_edge, label %lor.rhs.do.body42_crit_edge, !prof !509

lor.rhs.do.body42_crit_edge:                      ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body42

lor.rhs.do.end50_crit_edge:                       ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end50

do.body42:                                        ; preds = %lor.rhs.do.body42_crit_edge, %land.rhs.do.body42_crit_edge
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/signal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2029, 0\0A.popsection", ""() #15, !srcloc !533
  unreachable

do.end50:                                         ; preds = %lor.rhs.do.end50_crit_edge, %do.body29.do.end50_crit_edge
  %exit_state.i = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 57
  %15 = ptrtoint ptr %exit_state.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %exit_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp.i = icmp eq i32 %16, 0
  br i1 %cmp.i, label %do.end.i, label %do.end50.do_notify_pidfd.exit_crit_edge, !prof !510

do.end50.do_notify_pidfd.exit_crit_edge:          ; preds = %do.end50
  call void @__sanitizer_cov_trace_pc() #17
  br label %do_notify_pidfd.exit

do.end.i:                                         ; preds = %do.end50
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2003, i32 noundef 9, ptr noundef null) #15
  br label %do_notify_pidfd.exit

do_notify_pidfd.exit:                             ; preds = %do.end.i, %do.end50.do_notify_pidfd.exit_crit_edge
  %thread_pid.i.i = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 78
  %17 = ptrtoint ptr %thread_pid.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %thread_pid.i.i, align 16
  %wait_pidfd.i = getelementptr inbounds %struct.pid, ptr %18, i32 0, i32 5
  tail call void @__wake_up(ptr noundef %wait_pidfd.i, i32 noundef 3, i32 noundef 0, ptr noundef null) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 17, i32 %sig)
  %cmp51.not = icmp eq i32 %sig, 17
  br i1 %cmp51.not, label %do_notify_pidfd.exit.if.end60_crit_edge, label %if.then52

do_notify_pidfd.exit.if.end60_crit_edge:          ; preds = %do_notify_pidfd.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end60

if.then52:                                        ; preds = %do_notify_pidfd.exit
  call void @__sanitizer_cov_trace_pc() #17
  %parent_exec_id = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 125
  %19 = ptrtoint ptr %parent_exec_id to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %parent_exec_id, align 8
  %parent = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 72
  %21 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %parent, align 8
  %self_exec_id = getelementptr inbounds %struct.task_struct, ptr %22, i32 0, i32 126
  %23 = ptrtoint ptr %self_exec_id to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load volatile i64, ptr %self_exec_id, align 16
  call void @__sanitizer_cov_trace_cmp8(i64 %20, i64 %24)
  %cmp57.not = icmp eq i64 %20, %24
  %spec.select = select i1 %cmp57.not, i32 %sig, i32 17
  br label %if.end60

if.end60:                                         ; preds = %if.then52, %do_notify_pidfd.exit.if.end60_crit_edge
  %sig.addr.0 = phi i32 [ 17, %do_notify_pidfd.exit.if.end60_crit_edge ], [ %spec.select, %if.then52 ]
  %25 = getelementptr inbounds i8, ptr %info, i32 8
  %26 = call ptr @memset(ptr %25, i32 0, i32 24)
  %27 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %sig.addr.0, ptr %info, align 4
  %28 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %0, align 4
  %29 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %32, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i, label %if.end60.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end60.rcu_read_lock.exit_crit_edge:            ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end60
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end60.rcu_read_lock.exit_crit_edge
  %parent61 = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 72
  %33 = ptrtoint ptr %parent61 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %parent61, align 8
  %call62 = tail call ptr @task_active_pid_ns(ptr noundef %34) #15
  %call.i238 = tail call i32 @__task_pid_nr_ns(ptr noundef %tsk, i32 noundef 0, ptr noundef %call62) #15
  %35 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %call.i238, ptr %2, align 4
  %36 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i216 = and i32 %36, -16384
  %37 = inttoptr i32 %and.i.i.i.i.i216 to ptr
  %preempt_count.i.i.i.i217 = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 1
  %38 = ptrtoint ptr %preempt_count.i.i.i.i217 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %preempt_count.i.i.i.i217, align 4
  %add.i.i.i218 = add i32 %39, 1
  store volatile i32 %add.i.i.i218, ptr %preempt_count.i.i.i.i217, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i219 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i219, label %rcu_read_lock.exit.rcu_read_lock.exit226_crit_edge, label %land.lhs.true.i222

rcu_read_lock.exit.rcu_read_lock.exit226_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit226

land.lhs.true.i222:                               ; preds = %rcu_read_lock.exit
  %call1.i220 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i220)
  %tobool.not.i221 = icmp eq i32 %call1.i220, 0
  br i1 %tobool.not.i221, label %land.lhs.true.i222.rcu_read_lock.exit226_crit_edge, label %land.lhs.true2.i224

land.lhs.true.i222.rcu_read_lock.exit226_crit_edge: ; preds = %land.lhs.true.i222
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit226

land.lhs.true2.i224:                              ; preds = %land.lhs.true.i222
  %.b4.i223 = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i223, label %land.lhs.true2.i224.rcu_read_lock.exit226_crit_edge, label %if.then.i225

land.lhs.true2.i224.rcu_read_lock.exit226_crit_edge: ; preds = %land.lhs.true2.i224
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit226

if.then.i225:                                     ; preds = %land.lhs.true2.i224
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit226

rcu_read_lock.exit226:                            ; preds = %if.then.i225, %land.lhs.true2.i224.rcu_read_lock.exit226_crit_edge, %land.lhs.true.i222.rcu_read_lock.exit226_crit_edge, %rcu_read_lock.exit.rcu_read_lock.exit226_crit_edge
  %40 = ptrtoint ptr %parent61 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %parent61, align 8
  %real_cred = getelementptr inbounds %struct.task_struct, ptr %41, i32 0, i32 98
  %42 = ptrtoint ptr %real_cred to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile ptr, ptr %real_cred, align 4
  %call70 = tail call i32 @rcu_read_lock_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call70)
  %tobool71.not = icmp eq i32 %call70, 0
  br i1 %tobool71.not, label %land.lhs.true, label %rcu_read_lock.exit226.do.end79_crit_edge

rcu_read_lock.exit226.do.end79_crit_edge:         ; preds = %rcu_read_lock.exit226
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end79

land.lhs.true:                                    ; preds = %rcu_read_lock.exit226
  %call72 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call72)
  %tobool73.not = icmp eq i32 %call72, 0
  br i1 %tobool73.not, label %land.lhs.true.do.end79_crit_edge, label %land.lhs.true74

land.lhs.true.do.end79_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end79

land.lhs.true74:                                  ; preds = %land.lhs.true
  %.b213 = load i1, ptr @do_notify_parent.__warned, align 1
  br i1 %.b213, label %land.lhs.true74.do.end79_crit_edge, label %if.then76

land.lhs.true74.do.end79_crit_edge:               ; preds = %land.lhs.true74
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end79

if.then76:                                        ; preds = %land.lhs.true74
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @do_notify_parent.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 2059, ptr noundef nonnull @.str.1) #15
  br label %do.end79

do.end79:                                         ; preds = %if.then76, %land.lhs.true74.do.end79_crit_edge, %land.lhs.true.do.end79_crit_edge, %rcu_read_lock.exit226.do.end79_crit_edge
  %user_ns = getelementptr inbounds %struct.cred, ptr %43, i32 0, i32 25
  %44 = ptrtoint ptr %user_ns to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %user_ns, align 4
  %call.i239 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i239, label %do.end79.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i242

do.end79.rcu_read_unlock.exit_crit_edge:          ; preds = %do.end79
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true.i242:                               ; preds = %do.end79
  %call1.i240 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i240)
  %tobool.not.i241 = icmp eq i32 %call1.i240, 0
  br i1 %tobool.not.i241, label %land.lhs.true.i242.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i244

land.lhs.true.i242.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i242
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true2.i244:                              ; preds = %land.lhs.true.i242
  %.b4.i243 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i243, label %land.lhs.true2.i244.rcu_read_unlock.exit_crit_edge, label %if.then.i245

land.lhs.true2.i244.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i244
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

if.then.i245:                                     ; preds = %land.lhs.true2.i244
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 724, ptr noundef nonnull @.str.91) #15
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i245, %land.lhs.true2.i244.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i242.rcu_read_unlock.exit_crit_edge, %do.end79.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !520
  %46 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i246 = and i32 %46, -16384
  %47 = inttoptr i32 %and.i.i.i.i.i246 to ptr
  %preempt_count.i.i.i.i247 = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 1
  %48 = ptrtoint ptr %preempt_count.i.i.i.i247 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %preempt_count.i.i.i.i247, align 4
  %sub.i.i.i = add i32 %49, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i247, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  %50 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i227 = and i32 %50, -16384
  %51 = inttoptr i32 %and.i.i.i.i.i227 to ptr
  %preempt_count.i.i.i.i228 = getelementptr inbounds %struct.thread_info, ptr %51, i32 0, i32 1
  %52 = ptrtoint ptr %preempt_count.i.i.i.i228 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %preempt_count.i.i.i.i228, align 4
  %add.i.i.i229 = add i32 %53, 1
  store volatile i32 %add.i.i.i229, ptr %preempt_count.i.i.i.i228, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i230 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i230, label %rcu_read_unlock.exit.rcu_read_lock.exit237_crit_edge, label %land.lhs.true.i233

rcu_read_unlock.exit.rcu_read_lock.exit237_crit_edge: ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit237

land.lhs.true.i233:                               ; preds = %rcu_read_unlock.exit
  %call1.i231 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i231)
  %tobool.not.i232 = icmp eq i32 %call1.i231, 0
  br i1 %tobool.not.i232, label %land.lhs.true.i233.rcu_read_lock.exit237_crit_edge, label %land.lhs.true2.i235

land.lhs.true.i233.rcu_read_lock.exit237_crit_edge: ; preds = %land.lhs.true.i233
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit237

land.lhs.true2.i235:                              ; preds = %land.lhs.true.i233
  %.b4.i234 = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i234, label %land.lhs.true2.i235.rcu_read_lock.exit237_crit_edge, label %if.then.i236

land.lhs.true2.i235.rcu_read_lock.exit237_crit_edge: ; preds = %land.lhs.true2.i235
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit237

if.then.i236:                                     ; preds = %land.lhs.true2.i235
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit237

rcu_read_lock.exit237:                            ; preds = %if.then.i236, %land.lhs.true2.i235.rcu_read_lock.exit237_crit_edge, %land.lhs.true.i233.rcu_read_lock.exit237_crit_edge, %rcu_read_unlock.exit.rcu_read_lock.exit237_crit_edge
  %real_cred87 = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 98
  %54 = ptrtoint ptr %real_cred87 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile ptr, ptr %real_cred87, align 4
  %call89 = tail call i32 @rcu_read_lock_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call89)
  %tobool90.not = icmp eq i32 %call89, 0
  br i1 %tobool90.not, label %land.lhs.true91, label %rcu_read_lock.exit237.do.end99_crit_edge

rcu_read_lock.exit237.do.end99_crit_edge:         ; preds = %rcu_read_lock.exit237
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end99

land.lhs.true91:                                  ; preds = %rcu_read_lock.exit237
  %call92 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call92)
  %tobool93.not = icmp eq i32 %call92, 0
  br i1 %tobool93.not, label %land.lhs.true91.do.end99_crit_edge, label %land.lhs.true94

land.lhs.true91.do.end99_crit_edge:               ; preds = %land.lhs.true91
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end99

land.lhs.true94:                                  ; preds = %land.lhs.true91
  %.b211212 = load i1, ptr @do_notify_parent.__warned.3, align 1
  br i1 %.b211212, label %land.lhs.true94.do.end99_crit_edge, label %if.then96

land.lhs.true94.do.end99_crit_edge:               ; preds = %land.lhs.true94
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end99

if.then96:                                        ; preds = %land.lhs.true94
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @do_notify_parent.__warned.3, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 2060, ptr noundef nonnull @.str.1) #15
  br label %do.end99

do.end99:                                         ; preds = %if.then96, %land.lhs.true94.do.end99_crit_edge, %land.lhs.true91.do.end99_crit_edge, %rcu_read_lock.exit237.do.end99_crit_edge
  %uid = getelementptr inbounds %struct.cred, ptr %55, i32 0, i32 4
  %56 = ptrtoint ptr %uid to i32
  call void @__asan_load4_noabort(i32 %56)
  %___val82.sroa.0.0.copyload = load i32, ptr %uid, align 4
  %call.i249 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i249, label %do.end99.rcu_read_unlock.exit260_crit_edge, label %land.lhs.true.i252

do.end99.rcu_read_unlock.exit260_crit_edge:       ; preds = %do.end99
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit260

land.lhs.true.i252:                               ; preds = %do.end99
  %call1.i250 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i250)
  %tobool.not.i251 = icmp eq i32 %call1.i250, 0
  br i1 %tobool.not.i251, label %land.lhs.true.i252.rcu_read_unlock.exit260_crit_edge, label %land.lhs.true2.i254

land.lhs.true.i252.rcu_read_unlock.exit260_crit_edge: ; preds = %land.lhs.true.i252
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit260

land.lhs.true2.i254:                              ; preds = %land.lhs.true.i252
  %.b4.i253 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i253, label %land.lhs.true2.i254.rcu_read_unlock.exit260_crit_edge, label %if.then.i255

land.lhs.true2.i254.rcu_read_unlock.exit260_crit_edge: ; preds = %land.lhs.true2.i254
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit260

if.then.i255:                                     ; preds = %land.lhs.true2.i254
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 724, ptr noundef nonnull @.str.91) #15
  br label %rcu_read_unlock.exit260

rcu_read_unlock.exit260:                          ; preds = %if.then.i255, %land.lhs.true2.i254.rcu_read_unlock.exit260_crit_edge, %land.lhs.true.i252.rcu_read_unlock.exit260_crit_edge, %do.end99.rcu_read_unlock.exit260_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !520
  %57 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i256 = and i32 %57, -16384
  %58 = inttoptr i32 %and.i.i.i.i.i256 to ptr
  %preempt_count.i.i.i.i257 = getelementptr inbounds %struct.thread_info, ptr %58, i32 0, i32 1
  %59 = ptrtoint ptr %preempt_count.i.i.i.i257 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %preempt_count.i.i.i.i257, align 4
  %sub.i.i.i258 = add i32 %60, -1
  store volatile i32 %sub.i.i.i258, ptr %preempt_count.i.i.i.i257, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  %.fca.0.insert = insertvalue [1 x i32] poison, i32 %___val82.sroa.0.0.copyload, 0
  %call101 = tail call i32 @from_kuid_munged(ptr noundef %45, [1 x i32] %.fca.0.insert) #15
  %61 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %call101, ptr %3, align 4
  %call.i261 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i261, label %rcu_read_unlock.exit260.rcu_read_unlock.exit272_crit_edge, label %land.lhs.true.i264

rcu_read_unlock.exit260.rcu_read_unlock.exit272_crit_edge: ; preds = %rcu_read_unlock.exit260
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit272

land.lhs.true.i264:                               ; preds = %rcu_read_unlock.exit260
  %call1.i262 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i262)
  %tobool.not.i263 = icmp eq i32 %call1.i262, 0
  br i1 %tobool.not.i263, label %land.lhs.true.i264.rcu_read_unlock.exit272_crit_edge, label %land.lhs.true2.i266

land.lhs.true.i264.rcu_read_unlock.exit272_crit_edge: ; preds = %land.lhs.true.i264
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit272

land.lhs.true2.i266:                              ; preds = %land.lhs.true.i264
  %.b4.i265 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i265, label %land.lhs.true2.i266.rcu_read_unlock.exit272_crit_edge, label %if.then.i267

land.lhs.true2.i266.rcu_read_unlock.exit272_crit_edge: ; preds = %land.lhs.true2.i266
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit272

if.then.i267:                                     ; preds = %land.lhs.true2.i266
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 724, ptr noundef nonnull @.str.91) #15
  br label %rcu_read_unlock.exit272

rcu_read_unlock.exit272:                          ; preds = %if.then.i267, %land.lhs.true2.i266.rcu_read_unlock.exit272_crit_edge, %land.lhs.true.i264.rcu_read_unlock.exit272_crit_edge, %rcu_read_unlock.exit260.rcu_read_unlock.exit272_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !520
  %62 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i268 = and i32 %62, -16384
  %63 = inttoptr i32 %and.i.i.i.i.i268 to ptr
  %preempt_count.i.i.i.i269 = getelementptr inbounds %struct.thread_info, ptr %63, i32 0, i32 1
  %64 = ptrtoint ptr %preempt_count.i.i.i.i269 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %preempt_count.i.i.i.i269, align 4
  %sub.i.i.i270 = add i32 %65, -1
  store volatile i32 %sub.i.i.i270, ptr %preempt_count.i.i.i.i269, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  %utime1.i = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 86
  %66 = ptrtoint ptr %utime1.i to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %utime1.i, align 8
  %stime2.i = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 87
  %68 = ptrtoint ptr %stime2.i to i32
  call void @__asan_load8_noabort(i32 %68)
  %69 = load i64, ptr %stime2.i, align 32
  %signal = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 111
  %70 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %signal, align 16
  %utime104 = getelementptr inbounds %struct.signal_struct, ptr %71, i32 0, i32 28
  %72 = ptrtoint ptr %utime104 to i32
  call void @__asan_load8_noabort(i32 %72)
  %73 = load i64, ptr %utime104, align 8
  %add = add i64 %73, %67
  %call105 = tail call i64 @nsec_to_clock_t(i64 noundef %add) #15
  %conv = trunc i64 %call105 to i32
  %74 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %conv, ptr %5, align 4
  %75 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %signal, align 16
  %stime108 = getelementptr inbounds %struct.signal_struct, ptr %76, i32 0, i32 29
  %77 = ptrtoint ptr %stime108 to i32
  call void @__asan_load8_noabort(i32 %77)
  %78 = load i64, ptr %stime108, align 8
  %add109 = add i64 %78, %69
  %call110 = tail call i64 @nsec_to_clock_t(i64 noundef %add109) #15
  %conv111 = trunc i64 %call110 to i32
  %79 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %conv111, ptr %6, align 4
  %exit_code = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 58
  %80 = ptrtoint ptr %exit_code to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %exit_code, align 16
  %and113 = and i32 %81, 127
  %82 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 %and113, ptr %4, align 4
  %and116 = and i32 %81, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and116)
  %tobool117.not = icmp eq i32 %and116, 0
  br i1 %tobool117.not, label %if.else, label %if.then118

if.then118:                                       ; preds = %rcu_read_unlock.exit272
  call void @__sanitizer_cov_trace_pc() #17
  %83 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 3, ptr %1, align 4
  br label %if.end130

if.else:                                          ; preds = %rcu_read_unlock.exit272
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and113)
  %tobool121.not = icmp eq i32 %and113, 0
  br i1 %tobool121.not, label %if.else124, label %if.then122

if.then122:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  %84 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 2, ptr %1, align 4
  br label %if.end130

if.else124:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  %85 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 1, ptr %1, align 4
  %shr = ashr i32 %81, 8
  %86 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 %shr, ptr %4, align 4
  br label %if.end130

if.end130:                                        ; preds = %if.else124, %if.then122, %if.then118
  %87 = ptrtoint ptr %parent61 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %parent61, align 8
  %sighand = getelementptr inbounds %struct.task_struct, ptr %88, i32 0, i32 112
  %89 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %sighand, align 4
  %call138 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %90) #15
  %91 = ptrtoint ptr %ptrace to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %ptrace, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %92)
  %tobool144.not = icmp eq i32 %92, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 17, i32 %sig.addr.0)
  %cmp146 = icmp eq i32 %sig.addr.0, 17
  %or.cond = select i1 %tobool144.not, i1 %cmp146, i1 false
  br i1 %or.cond, label %land.lhs.true148, label %if.end165

land.lhs.true148:                                 ; preds = %if.end130
  %arrayidx = getelementptr %struct.sighand_struct, ptr %90, i32 0, i32 3, i32 16
  %93 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %arrayidx, align 4
  %cmp149 = icmp eq ptr %94, inttoptr (i32 1 to ptr)
  br i1 %cmp149, label %land.lhs.true148.if.end173_crit_edge, label %lor.lhs.false

land.lhs.true148.if.end173_crit_edge:             ; preds = %land.lhs.true148
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end173

lor.lhs.false:                                    ; preds = %land.lhs.true148
  call void @__sanitizer_cov_trace_pc() #17
  %sa_flags = getelementptr %struct.sighand_struct, ptr %90, i32 0, i32 3, i32 16, i32 0, i32 1
  %95 = ptrtoint ptr %sa_flags to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %sa_flags, align 4
  %and154 = and i32 %96, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and154)
  %tobool155.not = icmp ne i32 %and154, 0
  br label %if.then170

if.end165:                                        ; preds = %if.end130
  %97 = add i32 %sig.addr.0, -65
  call void @__sanitizer_cov_trace_const_cmp4(i32 -64, i32 %97)
  %98 = icmp ult i32 %97, -64
  br i1 %98, label %if.end165.if.end173_crit_edge, label %if.end165.if.then170_crit_edge

if.end165.if.then170_crit_edge:                   ; preds = %if.end165
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then170

if.end165.if.end173_crit_edge:                    ; preds = %if.end165
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end173

if.then170:                                       ; preds = %if.end165.if.then170_crit_edge, %lor.lhs.false
  %sig.addr.1278 = phi i32 [ %sig.addr.0, %if.end165.if.then170_crit_edge ], [ 17, %lor.lhs.false ]
  %autoreap.0.off0276 = phi i1 [ false, %if.end165.if.then170_crit_edge ], [ %tobool155.not, %lor.lhs.false ]
  %99 = ptrtoint ptr %parent61 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %parent61, align 8
  %call172 = call fastcc i32 @__send_signal(i32 noundef %sig.addr.1278, ptr noundef nonnull %info, ptr noundef %100, i32 noundef 1, i1 noundef zeroext false)
  br label %if.end173

if.end173:                                        ; preds = %if.then170, %if.end165.if.end173_crit_edge, %land.lhs.true148.if.end173_crit_edge
  %autoreap.0.off0277 = phi i1 [ %autoreap.0.off0276, %if.then170 ], [ false, %if.end165.if.end173_crit_edge ], [ true, %land.lhs.true148.if.end173_crit_edge ]
  %101 = ptrtoint ptr %parent61 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %parent61, align 8
  call void @__wake_up_parent(ptr noundef %tsk, ptr noundef %102) #15
  call void @_raw_spin_unlock_irqrestore(ptr noundef %90, i32 noundef %call138) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info) #15
  ret i1 %autoreap.0.off0277
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @task_active_pid_ns(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @from_kuid_munged(ptr noundef, [1 x i32]) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @nsec_to_clock_t(i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up_parent(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @ptrace_notify(i32 noundef %exit_code) local_unnamed_addr #0 align 64 {
entry:
  %info.i = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %exit_code, -65409
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %and)
  %cmp.not = icmp eq i32 %and, 5
  br i1 %cmp.not, label %do.end5, label %do.body2, !prof !509

do.body2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/signal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2347, 0\0A.popsection", ""() #15, !srcloc !534
  unreachable

do.end5:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %task_works = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 120
  %4 = ptrtoint ptr %task_works to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task_works, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %do.end5.if.end14_crit_edge, label %if.then13, !prof !509

do.end5.if.end14_crit_edge:                       ; preds = %do.end5
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end14

if.then13:                                        ; preds = %do.end5
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @task_work_run() #15
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %do.end5.if.end14_crit_edge
  %6 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task, align 8
  %sighand = getelementptr inbounds %struct.task_struct, ptr %7, i32 0, i32 112
  %8 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_lock_irq(ptr noundef %9) #15
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info.i) #15
  %10 = getelementptr inbounds %struct.anon, ptr %info.i, i32 0, i32 2
  %11 = getelementptr inbounds %struct.anon, ptr %info.i, i32 0, i32 3
  %12 = getelementptr inbounds %struct.anon, ptr %info.i, i32 0, i32 3, i32 0, i32 1
  %13 = getelementptr inbounds i8, ptr %info.i, i32 4
  %14 = call ptr @memset(ptr %13, i32 0, i32 28)
  %15 = ptrtoint ptr %info.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 5, ptr %info.i, align 4
  %16 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %exit_code, ptr %10, align 4
  %17 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 2
  %19 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %task.i, align 8
  %call.i.i = tail call i32 @__task_pid_nr_ns(ptr noundef %20, i32 noundef 0, ptr noundef null) #15
  %21 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %call.i.i, ptr %11, align 4
  %22 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 99
  %24 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %cred.i, align 16
  %user_ns.i = getelementptr inbounds %struct.cred, ptr %25, i32 0, i32 25
  %26 = ptrtoint ptr %user_ns.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %user_ns.i, align 4
  %uid.i = getelementptr inbounds %struct.cred, ptr %25, i32 0, i32 4
  %28 = ptrtoint ptr %uid.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %agg.tmp.sroa.0.0.copyload.i = load i32, ptr %uid.i, align 4
  %.fca.0.insert.i = insertvalue [1 x i32] poison, i32 %agg.tmp.sroa.0.0.copyload.i, 0
  %call12.i = tail call i32 @from_kuid_munged(ptr noundef %27, [1 x i32] %.fca.0.insert.i) #15
  %29 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %call12.i, ptr %12, align 4
  call fastcc void @ptrace_stop(i32 noundef %exit_code, i32 noundef 4, i32 noundef 1, ptr noundef nonnull %info.i) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info.i) #15
  %30 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %task, align 8
  %sighand19 = getelementptr inbounds %struct.task_struct, ptr %31, i32 0, i32 112
  %32 = ptrtoint ptr %sighand19 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %sighand19, align 4
  call void @_raw_spin_unlock_irq(ptr noundef %33) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @task_work_run() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @get_signal(ptr noundef %ksig) local_unnamed_addr #0 align 64 {
entry:
  %type = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %sighand1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 112
  %4 = ptrtoint ptr %sighand1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sighand1, align 4
  %signal4 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 111
  %6 = ptrtoint ptr %signal4 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %signal4, align 16
  %task_works = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 120
  %8 = ptrtoint ptr %task_works to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task_works, align 4
  %tobool.not = icmp eq ptr %9, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then, !prof !509

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @task_work_run() #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %1, align 16384
  %12 = and i32 %11, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool11.not = icmp eq i32 %12, 0
  br i1 %tobool11.not, label %if.end.if.end13_crit_edge, label %if.then12

if.end.if.end13_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end13

if.then12:                                        ; preds = %if.end
  %13 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i to ptr
  tail call void @_clear_bit(i32 noundef 8, ptr noundef %14) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !535
  %task.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task.i, align 8
  %task_works.i = getelementptr inbounds %struct.task_struct, ptr %16, i32 0, i32 120
  %17 = ptrtoint ptr %task_works.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %task_works.i, align 4
  %tobool.not.i = icmp eq ptr %18, null
  br i1 %tobool.not.i, label %if.then12.if.end13_crit_edge, label %if.then.i

if.then12.if.end13_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end13

if.then.i:                                        ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @task_work_run() #15
  br label %if.end13

if.end13:                                         ; preds = %if.then.i, %if.then12.if.end13_crit_edge, %if.end.if.end13_crit_edge
  %19 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %task, align 8
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %stack.i.i, align 4
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %22, align 4
  %and1.i.i.i.i = and i32 %24, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %tobool17.not = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %tobool17.not, label %if.end13.cleanup291_crit_edge, label %if.end19

if.end13.cleanup291_crit_edge:                    ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup291

if.end19:                                         ; preds = %if.end13
  %call20 = tail call zeroext i1 @uprobe_deny_signal() #15
  br i1 %call20, label %if.end19.cleanup291_crit_edge, label %if.end28, !prof !510

if.end19.cleanup291_crit_edge:                    ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup291

if.end28:                                         ; preds = %if.end19
  %25 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i353 = and i32 %25, -16384
  %26 = inttoptr i32 %and.i.i353 to ptr
  %task.i354 = getelementptr inbounds %struct.thread_info, ptr %26, i32 0, i32 2
  %27 = ptrtoint ptr %task.i354 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %task.i354, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %28, i32 0, i32 3
  %29 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %flags.i, align 4
  %and.i355 = and i32 %30, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i355)
  %tobool.not.i356 = icmp eq i32 %and.i355, 0
  br i1 %tobool.not.i356, label %if.then.i357, label %if.end28.if.end.i_crit_edge

if.end28.if.end.i_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

if.then.i357:                                     ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @debug_check_no_locks_held() #15
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i357, %if.end28.if.end.i_crit_edge
  tail call void @__might_sleep(ptr noundef nonnull @.str.102, i32 noundef 57) #15
  %31 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 2
  %33 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %task.i.i, align 8
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @system_freezing_cnt, i32 noundef 4) #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_freezing_cnt to i32))
  %35 = load volatile i32, ptr @system_freezing_cnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %tobool.not.i.i.i = icmp eq i32 %35, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.try_to_freeze.exit_crit_edge, label %freezing.exit.i.i, !prof !509

if.end.i.try_to_freeze.exit_crit_edge:            ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %try_to_freeze.exit

freezing.exit.i.i:                                ; preds = %if.end.i
  %call4.i.i.i = tail call zeroext i1 @freezing_slow_path(ptr noundef %34) #15
  br i1 %call4.i.i.i, label %if.end.i.i, label %freezing.exit.i.i.try_to_freeze.exit_crit_edge, !prof !510

freezing.exit.i.i.try_to_freeze.exit_crit_edge:   ; preds = %freezing.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %try_to_freeze.exit

if.end.i.i:                                       ; preds = %freezing.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %call6.i.i = tail call zeroext i1 @__refrigerator(i1 noundef zeroext false) #15
  br label %try_to_freeze.exit

try_to_freeze.exit:                               ; preds = %if.end.i.i, %freezing.exit.i.i.try_to_freeze.exit_crit_edge, %if.end.i.try_to_freeze.exit_crit_edge
  %flags = getelementptr inbounds %struct.signal_struct, ptr %7, i32 0, i32 12
  %group_exec_task = getelementptr inbounds %struct.signal_struct, ptr %7, i32 0, i32 10
  %info = getelementptr inbounds %struct.ksignal, ptr %ksig, i32 0, i32 1
  %arrayidx = getelementptr %struct.sighand_struct, ptr %5, i32 0, i32 3, i32 8
  br label %relock.outer

relock.outer.loopexit:                            ; preds = %if.end225.relock.outer.loopexit_crit_edge, %if.then218.relock.outer.loopexit_crit_edge, %if.then118, %if.then105, %if.else99.relock.outer.loopexit_crit_edge, %if.then97, %land.lhs.true.relock.outer.loopexit_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %type) #15
  br label %relock.outer

relock.outer:                                     ; preds = %relock.outer.loopexit, %try_to_freeze.exit
  tail call void @_raw_spin_lock_irq(ptr noundef %5) #15
  %36 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %flags, align 8
  %and387 = and i32 %37, 48
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and387)
  %tobool30.not388 = icmp eq i32 %and387, 0
  br i1 %tobool30.not388, label %relock.outer.for.cond.preheader_crit_edge, label %relock.outer.if.then37_crit_edge, !prof !509

relock.outer.if.then37_crit_edge:                 ; preds = %relock.outer
  br label %if.then37

relock.outer.for.cond.preheader_crit_edge:        ; preds = %relock.outer
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.preheader

if.then37:                                        ; preds = %if.end56.if.then37_crit_edge, %relock.outer.if.then37_crit_edge
  %38 = phi i32 [ %55, %if.end56.if.then37_crit_edge ], [ %37, %relock.outer.if.then37_crit_edge ]
  %and39 = and i32 %38, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and39)
  %tobool40.not = icmp eq i32 %and39, 0
  %. = select i1 %tobool40.not, i32 5, i32 6
  %and44 = and i32 %38, -49
  %39 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %and44, ptr %flags, align 8
  tail call void @_raw_spin_unlock_irq(ptr noundef %5) #15
  tail call void @_raw_read_lock(ptr noundef nonnull @tasklist_lock) #15
  %40 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %task, align 8
  tail call fastcc void @do_notify_parent_cldstop(ptr noundef %41, i1 noundef zeroext false, i32 noundef %.)
  %42 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %task, align 8
  %group_leader = getelementptr inbounds %struct.task_struct, ptr %43, i32 0, i32 75
  %44 = ptrtoint ptr %group_leader to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %group_leader, align 4
  %real_parent.i = getelementptr inbounds %struct.task_struct, ptr %45, i32 0, i32 71
  %46 = ptrtoint ptr %real_parent.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %real_parent.i, align 4
  %parent.i = getelementptr inbounds %struct.task_struct, ptr %45, i32 0, i32 72
  %48 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %parent.i, align 8
  %signal.i.i = getelementptr inbounds %struct.task_struct, ptr %47, i32 0, i32 111
  %50 = ptrtoint ptr %signal.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %signal.i.i, align 16
  %signal1.i.i = getelementptr inbounds %struct.task_struct, ptr %49, i32 0, i32 111
  %52 = ptrtoint ptr %signal1.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %signal1.i.i, align 16
  %cmp.i.i.not = icmp eq ptr %51, %53
  br i1 %cmp.i.i.not, label %if.then37.if.end56_crit_edge, label %if.then52

if.then37.if.end56_crit_edge:                     ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end56

if.then52:                                        ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @do_notify_parent_cldstop(ptr noundef %45, i1 noundef zeroext true, i32 noundef %.)
  br label %if.end56

if.end56:                                         ; preds = %if.then52, %if.then37.if.end56_crit_edge
  tail call void @_raw_read_unlock(ptr noundef nonnull @tasklist_lock) #15
  tail call void @_raw_spin_lock_irq(ptr noundef %5) #15
  %54 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %flags, align 8
  %and = and i32 %55, 48
  %tobool30.not = icmp eq i32 %and, 0
  br i1 %tobool30.not, label %if.end56.for.cond.preheader_crit_edge, label %if.end56.if.then37_crit_edge, !prof !509

if.end56.if.then37_crit_edge:                     ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then37

if.end56.for.cond.preheader_crit_edge:            ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end56.for.cond.preheader_crit_edge, %relock.outer.for.cond.preheader_crit_edge
  br label %for.cond

for.cond:                                         ; preds = %for.cond.backedge, %for.cond.preheader
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %type) #15
  %56 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %flags, align 8
  %and59 = and i32 %57, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and59)
  %tobool60.not = icmp eq i32 %and59, 0
  br i1 %tobool60.not, label %lor.lhs.false, label %for.cond.if.then62_crit_edge

for.cond.if.then62_crit_edge:                     ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then62

lor.lhs.false:                                    ; preds = %for.cond
  %58 = ptrtoint ptr %group_exec_task to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %group_exec_task, align 8
  %tobool61.not = icmp eq ptr %59, null
  br i1 %tobool61.not, label %if.end66, label %lor.lhs.false.if.then62_crit_edge

lor.lhs.false.if.then62_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then62

if.then62:                                        ; preds = %lor.lhs.false.if.then62_crit_edge, %for.cond.if.then62_crit_edge
  %60 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 9, ptr %info, align 4
  %61 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %task, align 8
  %signal65 = getelementptr inbounds %struct.task_struct, ptr %62, i32 0, i32 116, i32 1
  %63 = ptrtoint ptr %signal65 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %signal65, align 4
  %and.i358 = and i32 %64, -257
  store i32 %and.i358, ptr %signal65, align 4
  tail call fastcc void @trace_signal_deliver(i32 noundef 9, ptr noundef null, ptr noundef %arrayidx)
  tail call void @recalc_sigpending()
  br label %fatal

if.end66:                                         ; preds = %lor.lhs.false
  %65 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %task, align 8
  %jobctl = getelementptr inbounds %struct.task_struct, ptr %66, i32 0, i32 61
  %67 = ptrtoint ptr %jobctl to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %jobctl, align 4
  %and69 = and i32 %68, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and69)
  %tobool70.not = icmp eq i32 %and69, 0
  br i1 %tobool70.not, label %if.end66.if.end79_crit_edge, label %land.lhs.true, !prof !509

if.end66.if.end79_crit_edge:                      ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end79

land.lhs.true:                                    ; preds = %if.end66
  %call77 = tail call fastcc zeroext i1 @do_signal_stop(i32 noundef 0)
  br i1 %call77, label %land.lhs.true.relock.outer.loopexit_crit_edge, label %land.lhs.true.if.end79_crit_edge

land.lhs.true.if.end79_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end79

land.lhs.true.relock.outer.loopexit_crit_edge:    ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %relock.outer.loopexit

if.end79:                                         ; preds = %land.lhs.true.if.end79_crit_edge, %if.end66.if.end79_crit_edge
  %69 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %task, align 8
  %jobctl82 = getelementptr inbounds %struct.task_struct, ptr %70, i32 0, i32 61
  %71 = ptrtoint ptr %jobctl82 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %jobctl82, align 4
  %and83 = and i32 %72, 9961472
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and83)
  %tobool84.not = icmp eq i32 %and83, 0
  br i1 %tobool84.not, label %if.end108, label %if.then91, !prof !509

if.then91:                                        ; preds = %if.end79
  %and95 = and i32 %72, 1572864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and95)
  %tobool96.not = icmp eq i32 %and95, 0
  br i1 %tobool96.not, label %if.else99, label %if.then97

if.then97:                                        ; preds = %if.then91
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @do_jobctl_trap()
  tail call void @_raw_spin_unlock_irq(ptr noundef %5) #15
  br label %relock.outer.loopexit

if.else99:                                        ; preds = %if.then91
  %and103 = and i32 %72, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and103)
  %tobool104.not = icmp eq i32 %and103, 0
  br i1 %tobool104.not, label %if.else99.relock.outer.loopexit_crit_edge, label %if.then105

if.else99.relock.outer.loopexit_crit_edge:        ; preds = %if.else99
  call void @__sanitizer_cov_trace_pc() #17
  br label %relock.outer.loopexit

if.then105:                                       ; preds = %if.else99
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @do_freezer_trap()
  br label %relock.outer.loopexit

if.end108:                                        ; preds = %if.end79
  %frozen.i = getelementptr inbounds %struct.task_struct, ptr %70, i32 0, i32 65
  %73 = ptrtoint ptr %frozen.i to i32
  call void @__asan_load2_noabort(i32 %73)
  %bf.load.i = load i16, ptr %frozen.i, align 8
  %74 = and i16 %bf.load.i, 512
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %74)
  %tobool.i.not = icmp eq i16 %74, 0
  br i1 %tobool.i.not, label %if.end120, label %if.then118, !prof !509

if.then118:                                       ; preds = %if.end108
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @_raw_spin_unlock_irq(ptr noundef %5) #15
  tail call void @cgroup_leave_frozen(i1 noundef zeroext false) #15
  br label %relock.outer.loopexit

if.end120:                                        ; preds = %if.end108
  %75 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 0, ptr %type, align 4
  %76 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i359 = and i32 %76, -16384
  %77 = inttoptr i32 %and.i.i359 to ptr
  %task.i360 = getelementptr inbounds %struct.thread_info, ptr %77, i32 0, i32 2
  %78 = ptrtoint ptr %task.i360 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %task.i360, align 8
  %pending1.i = getelementptr inbounds %struct.task_struct, ptr %79, i32 0, i32 116
  %signal.i = getelementptr inbounds %struct.task_struct, ptr %79, i32 0, i32 116, i32 1
  %80 = ptrtoint ptr %signal.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %signal.i, align 4
  %blocked.i = getelementptr inbounds %struct.task_struct, ptr %79, i32 0, i32 113
  %82 = ptrtoint ptr %blocked.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %blocked.i, align 8
  %neg.i = xor i32 %83, -1
  %and.i361 = and i32 %81, 1073743064
  %and4.i = and i32 %and.i361, %neg.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool.not.i362 = icmp eq i32 %and4.i, 0
  br i1 %tobool.not.i362, label %if.end120.if.end131_crit_edge, label %for.cond.preheader.i

if.end120.if.end131_crit_edge:                    ; preds = %if.end120
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end131

for.cond.preheader.i:                             ; preds = %if.end120
  %84 = ptrtoint ptr %pending1.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %q.075.i = load ptr, ptr %pending1.i, align 4
  %cmp.not76.i = icmp eq ptr %q.075.i, %pending1.i
  br i1 %cmp.not76.i, label %for.cond.preheader.i.if.end131_crit_edge, label %for.cond.preheader.i.for.body.i_crit_edge

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.cond.preheader.i.if.end131_crit_edge:         ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end131

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %q.077.i = phi ptr [ %q.0.i, %for.inc.i.for.body.i_crit_edge ], [ %q.075.i, %for.cond.preheader.i.for.body.i_crit_edge ]
  %si_code.i = getelementptr inbounds %struct.sigqueue, ptr %q.077.i, i32 0, i32 2, i32 0, i32 2
  %85 = ptrtoint ptr %si_code.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %si_code.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %86)
  %cmp8.i = icmp sgt i32 %86, 0
  br i1 %cmp8.i, label %land.lhs.true.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %info7.i = getelementptr inbounds %struct.sigqueue, ptr %q.077.i, i32 0, i32 2
  %87 = ptrtoint ptr %info7.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %info7.i, align 4
  %sub.i = add i32 %88, -1
  %shl.i = shl nuw i32 1, %sub.i
  %and10.i = and i32 %shl.i, 1073743064
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10.i)
  %tobool11.not.i = icmp eq i32 %and10.i, 0
  br i1 %tobool11.not.i, label %land.lhs.true.i.for.inc.i_crit_edge, label %land.lhs.true.i.for.cond25.i_crit_edge

land.lhs.true.i.for.cond25.i_crit_edge:           ; preds = %land.lhs.true.i
  br label %for.cond25.i

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %89 = ptrtoint ptr %q.077.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %q.0.i = load ptr, ptr %q.077.i, align 4
  %cmp.not.i = icmp eq ptr %q.0.i, %pending1.i
  br i1 %cmp.not.i, label %for.inc.i.if.end131_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

for.inc.i.if.end131_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end131

for.cond25.i:                                     ; preds = %for.body30.i.for.cond25.i_crit_edge, %land.lhs.true.i.for.cond25.i_crit_edge
  %q.1.in.i = phi ptr [ %q.1.i, %for.body30.i.for.cond25.i_crit_edge ], [ %q.077.i, %land.lhs.true.i.for.cond25.i_crit_edge ]
  %90 = ptrtoint ptr %q.1.in.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %q.1.i = load ptr, ptr %q.1.in.i, align 4
  %cmp28.not.i = icmp eq ptr %q.1.i, %pending1.i
  br i1 %cmp28.not.i, label %for.end44.i, label %for.body30.i

for.body30.i:                                     ; preds = %for.cond25.i
  %info31.i = getelementptr inbounds %struct.sigqueue, ptr %q.1.i, i32 0, i32 2
  %91 = ptrtoint ptr %info31.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %info31.i, align 4
  %cmp35.i = icmp eq i32 %92, %88
  br i1 %cmp35.i, label %for.body30.i.still_pending.i_crit_edge, label %for.body30.i.for.cond25.i_crit_edge

for.body30.i.for.cond25.i_crit_edge:              ; preds = %for.body30.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond25.i

for.body30.i.still_pending.i_crit_edge:           ; preds = %for.body30.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %still_pending.i

for.end44.i:                                      ; preds = %for.cond25.i
  call void @__sanitizer_cov_trace_pc() #17
  %rem.i.i = and i32 %sub.i, 31
  %shl.i.i = shl nuw i32 1, %rem.i.i
  %neg.i.i = xor i32 %shl.i.i, -1
  %div3.i.i = lshr i32 %sub.i, 5
  %arrayidx.i.i = getelementptr [2 x i32], ptr %signal.i, i32 0, i32 %div3.i.i
  %93 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %arrayidx.i.i, align 4
  %and.i72.i = and i32 %94, %neg.i.i
  store i32 %and.i72.i, ptr %arrayidx.i.i, align 4
  tail call void @recalc_sigpending() #15
  br label %still_pending.i

still_pending.i:                                  ; preds = %for.end44.i, %for.body30.i.still_pending.i_crit_edge
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %q.077.i) #15
  br i1 %call.i.i.i, label %if.end.i.i.i, label %still_pending.i.list_del_init.exit.i_crit_edge

still_pending.i.list_del_init.exit.i_crit_edge:   ; preds = %still_pending.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_del_init.exit.i

if.end.i.i.i:                                     ; preds = %still_pending.i
  call void @__sanitizer_cov_trace_pc() #17
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %q.077.i, i32 0, i32 1
  %95 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %prev.i.i.i, align 4
  %97 = ptrtoint ptr %q.077.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %q.077.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %98, i32 0, i32 1
  %99 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %99)
  store ptr %96, ptr %prev1.i.i.i.i, align 4
  %100 = ptrtoint ptr %96 to i32
  call void @__asan_store4_noabort(i32 %100)
  store volatile ptr %98, ptr %96, align 4
  br label %list_del_init.exit.i

list_del_init.exit.i:                             ; preds = %if.end.i.i.i, %still_pending.i.list_del_init.exit.i_crit_edge
  %101 = ptrtoint ptr %q.077.i to i32
  call void @__asan_store4_noabort(i32 %101)
  store volatile ptr %q.077.i, ptr %q.077.i, align 4
  %prev.i3.i.i = getelementptr inbounds %struct.list_head, ptr %q.077.i, i32 0, i32 1
  %102 = ptrtoint ptr %prev.i3.i.i to i32
  call void @__asan_store4_noabort(i32 %102)
  store ptr %q.077.i, ptr %prev.i3.i.i, align 4
  %103 = call ptr @memcpy(ptr %info, ptr %info7.i, i32 32)
  %flags.i.i = getelementptr inbounds %struct.sigqueue, ptr %q.077.i, i32 0, i32 1
  %104 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %flags.i.i, align 4
  %and.i73.i = and i32 %105, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i73.i)
  %tobool.not.i.i = icmp eq i32 %and.i73.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i363, label %list_del_init.exit.i.dequeue_synchronous_signal.exit_crit_edge

list_del_init.exit.i.dequeue_synchronous_signal.exit_crit_edge: ; preds = %list_del_init.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %dequeue_synchronous_signal.exit

if.end.i.i363:                                    ; preds = %list_del_init.exit.i
  %ucounts.i.i = getelementptr inbounds %struct.sigqueue, ptr %q.077.i, i32 0, i32 3
  %106 = ptrtoint ptr %ucounts.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %ucounts.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %107, null
  br i1 %tobool1.not.i.i, label %if.end.i.i363.if.end5.i.i_crit_edge, label %if.then2.i.i

if.end.i.i363.if.end5.i.i_crit_edge:              ; preds = %if.end.i.i363
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end5.i.i

if.then2.i.i:                                     ; preds = %if.end.i.i363
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dec_rlimit_put_ucounts(ptr noundef nonnull %107, i32 noundef 14) #15
  %108 = ptrtoint ptr %ucounts.i.i to i32
  call void @__asan_store4_noabort(i32 %108)
  store ptr null, ptr %ucounts.i.i, align 4
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then2.i.i, %if.end.i.i363.if.end5.i.i_crit_edge
  %109 = load ptr, ptr @sigqueue_cachep, align 4
  tail call void @kmem_cache_free(ptr noundef %109, ptr noundef %q.077.i) #15
  br label %dequeue_synchronous_signal.exit

dequeue_synchronous_signal.exit:                  ; preds = %if.end5.i.i, %list_del_init.exit.i.dequeue_synchronous_signal.exit_crit_edge
  %110 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %info, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %111)
  %tobool123.not = icmp eq i32 %111, 0
  br i1 %tobool123.not, label %dequeue_synchronous_signal.exit.if.end131_crit_edge, label %dequeue_synchronous_signal.exit.if.end134_crit_edge

dequeue_synchronous_signal.exit.if.end134_crit_edge: ; preds = %dequeue_synchronous_signal.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end134

dequeue_synchronous_signal.exit.if.end131_crit_edge: ; preds = %dequeue_synchronous_signal.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end131

if.end131:                                        ; preds = %dequeue_synchronous_signal.exit.if.end131_crit_edge, %for.inc.i.if.end131_crit_edge, %for.cond.preheader.i.if.end131_crit_edge, %if.end120.if.end131_crit_edge
  %112 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %task, align 8
  %blocked = getelementptr inbounds %struct.task_struct, ptr %113, i32 0, i32 113
  %call130 = call i32 @dequeue_signal(ptr noundef %113, ptr noundef %blocked, ptr noundef %info, ptr noundef nonnull %type)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call130)
  %tobool132.not = icmp eq i32 %call130, 0
  br i1 %tobool132.not, label %if.end131.cleanup.thread_crit_edge, label %if.end131.if.end134_crit_edge

if.end131.if.end134_crit_edge:                    ; preds = %if.end131
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end134

if.end131.cleanup.thread_crit_edge:               ; preds = %if.end131
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup.thread

if.end134:                                        ; preds = %if.end131.if.end134_crit_edge, %dequeue_synchronous_signal.exit.if.end134_crit_edge
  %signr.2373 = phi i32 [ %call130, %if.end131.if.end134_crit_edge ], [ %111, %dequeue_synchronous_signal.exit.if.end134_crit_edge ]
  %114 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %task, align 8
  %ptrace = getelementptr inbounds %struct.task_struct, ptr %115, i32 0, i32 4
  %116 = ptrtoint ptr %ptrace to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %ptrace, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %117)
  %tobool137.not = icmp eq i32 %117, 0
  br i1 %tobool137.not, label %if.end134.if.end156_crit_edge, label %land.lhs.true144, !prof !509

if.end134.if.end156_crit_edge:                    ; preds = %if.end134
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end156

land.lhs.true144:                                 ; preds = %if.end134
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %signr.2373)
  %cmp.not = icmp eq i32 %signr.2373, 9
  br i1 %cmp.not, label %land.lhs.true144.if.end156_crit_edge, label %land.lhs.true145

land.lhs.true144.if.end156_crit_edge:             ; preds = %land.lhs.true144
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end156

land.lhs.true145:                                 ; preds = %land.lhs.true144
  %sub = add i32 %signr.2373, -1
  %sa_flags = getelementptr %struct.sighand_struct, ptr %5, i32 0, i32 3, i32 %sub, i32 0, i32 1
  %118 = ptrtoint ptr %sa_flags to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %sa_flags, align 4
  %and148 = and i32 %119, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and148)
  %tobool149.not = icmp eq i32 %and148, 0
  br i1 %tobool149.not, label %if.then150, label %land.lhs.true145.if.end156_crit_edge

land.lhs.true145.if.end156_crit_edge:             ; preds = %land.lhs.true145
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end156

if.then150:                                       ; preds = %land.lhs.true145
  %120 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %type, align 4
  %call152 = tail call fastcc i32 @ptrace_signal(i32 noundef %signr.2373, ptr noundef %info, i32 noundef %121)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call152)
  %tobool153.not = icmp eq i32 %call152, 0
  br i1 %tobool153.not, label %if.then150.for.cond.backedge_crit_edge, label %if.then150.if.end156_crit_edge

if.then150.if.end156_crit_edge:                   ; preds = %if.then150
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end156

if.then150.for.cond.backedge_crit_edge:           ; preds = %if.then150
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.backedge

if.end156:                                        ; preds = %if.then150.if.end156_crit_edge, %land.lhs.true145.if.end156_crit_edge, %land.lhs.true144.if.end156_crit_edge, %if.end134.if.end156_crit_edge
  %signr.3 = phi i32 [ %signr.2373, %land.lhs.true145.if.end156_crit_edge ], [ %call152, %if.then150.if.end156_crit_edge ], [ 9, %land.lhs.true144.if.end156_crit_edge ], [ %signr.2373, %if.end134.if.end156_crit_edge ]
  %sub158 = add i32 %signr.3, -1
  %arrayidx159 = getelementptr %struct.sighand_struct, ptr %5, i32 0, i32 3, i32 %sub158
  tail call fastcc void @trace_signal_deliver(i32 noundef %signr.3, ptr noundef %info, ptr noundef %arrayidx159)
  %122 = ptrtoint ptr %arrayidx159 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %arrayidx159, align 4
  %magicptr = ptrtoint ptr %123 to i32
  %124 = zext i32 %magicptr to i64
  call void @__sanitizer_cov_trace_switch(i64 %124, ptr @__sancov_gen_cov_switch_values.162)
  switch i32 %magicptr, label %if.then168 [
    i32 1, label %if.end156.for.cond.backedge_crit_edge
    i32 0, label %if.end178
  ]

if.end156.for.cond.backedge_crit_edge:            ; preds = %if.end156
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.backedge

if.then168:                                       ; preds = %if.end156
  %125 = call ptr @memcpy(ptr %ksig, ptr %arrayidx159, i32 20)
  %sa_flags171 = getelementptr inbounds %struct.sigaction, ptr %arrayidx159, i32 0, i32 1
  %126 = ptrtoint ptr %sa_flags171 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %sa_flags171, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %127)
  %tobool173.not = icmp sgt i32 %127, -1
  br i1 %tobool173.not, label %if.then168.cleanup.thread_crit_edge, label %if.then174

if.then168.cleanup.thread_crit_edge:              ; preds = %if.then168
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup.thread

if.then174:                                       ; preds = %if.then168
  call void @__sanitizer_cov_trace_pc() #17
  %128 = ptrtoint ptr %arrayidx159 to i32
  call void @__asan_store4_noabort(i32 %128)
  store ptr null, ptr %arrayidx159, align 4
  br label %cleanup.thread

if.end178:                                        ; preds = %if.end156
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %sub158)
  %129 = icmp ult i32 %sub158, 31
  br i1 %129, label %land.lhs.true182, label %if.end187.thread

land.lhs.true182:                                 ; preds = %if.end178
  %shl = shl nuw nsw i32 1, %sub158
  %and184 = and i32 %shl, 138608640
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and184)
  %tobool185.not = icmp eq i32 %and184, 0
  br i1 %tobool185.not, label %if.end187, label %land.lhs.true182.for.cond.backedge_crit_edge

land.lhs.true182.for.cond.backedge_crit_edge:     ; preds = %land.lhs.true182
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.backedge

if.end187:                                        ; preds = %land.lhs.true182
  %130 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %flags, align 8
  %and189 = and i32 %131, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and189)
  %tobool190.not = icmp eq i32 %and189, 0
  br i1 %tobool190.not, label %if.end187.land.lhs.true211_crit_edge, label %land.lhs.true201, !prof !509

if.end187.land.lhs.true211_crit_edge:             ; preds = %if.end187
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.lhs.true211

if.end187.thread:                                 ; preds = %if.end178
  %132 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %flags, align 8
  %and189374 = and i32 %133, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and189374)
  %tobool190.not375 = icmp eq i32 %and189374, 0
  br i1 %tobool190.not375, label %if.end187.thread.fatal_crit_edge, label %if.end187.thread.for.cond.backedge_crit_edge, !prof !509

if.end187.thread.for.cond.backedge_crit_edge:     ; preds = %if.end187.thread
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.backedge

if.end187.thread.fatal_crit_edge:                 ; preds = %if.end187.thread
  call void @__sanitizer_cov_trace_pc() #17
  br label %fatal

land.lhs.true201:                                 ; preds = %if.end187
  %and204 = and i32 %shl, 262400
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and204)
  %tobool205.not = icmp eq i32 %and204, 0
  br i1 %tobool205.not, label %land.lhs.true201.for.cond.backedge_crit_edge, label %land.lhs.true201.land.lhs.true211_crit_edge

land.lhs.true201.land.lhs.true211_crit_edge:      ; preds = %land.lhs.true201
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.lhs.true211

land.lhs.true201.for.cond.backedge_crit_edge:     ; preds = %land.lhs.true201
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.backedge

land.lhs.true211:                                 ; preds = %land.lhs.true201.land.lhs.true211_crit_edge, %if.end187.land.lhs.true211_crit_edge
  %and214 = and i32 %shl, 3932160
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and214)
  %tobool215.not = icmp eq i32 %and214, 0
  br i1 %tobool215.not, label %land.lhs.true211.fatal_crit_edge, label %if.then216

land.lhs.true211.fatal_crit_edge:                 ; preds = %land.lhs.true211
  call void @__sanitizer_cov_trace_pc() #17
  br label %fatal

if.then216:                                       ; preds = %land.lhs.true211
  call void @__sanitizer_cov_trace_const_cmp4(i32 19, i32 %signr.3)
  %cmp217.not = icmp eq i32 %signr.3, 19
  br i1 %cmp217.not, label %if.then216.if.end225_crit_edge, label %if.then218

if.then216.if.end225_crit_edge:                   ; preds = %if.then216
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end225

if.then218:                                       ; preds = %if.then216
  tail call void @_raw_spin_unlock_irq(ptr noundef %5) #15
  %call220 = tail call i32 @is_current_pgrp_orphaned() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call220)
  %tobool221.not = icmp eq i32 %call220, 0
  br i1 %tobool221.not, label %if.end223, label %if.then218.relock.outer.loopexit_crit_edge

if.then218.relock.outer.loopexit_crit_edge:       ; preds = %if.then218
  call void @__sanitizer_cov_trace_pc() #17
  br label %relock.outer.loopexit

if.end223:                                        ; preds = %if.then218
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @_raw_spin_lock_irq(ptr noundef %5) #15
  br label %if.end225

if.end225:                                        ; preds = %if.end223, %if.then216.if.end225_crit_edge
  %134 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %info, align 4
  %call228 = tail call fastcc zeroext i1 @do_signal_stop(i32 noundef %135)
  br i1 %call228, label %if.end225.relock.outer.loopexit_crit_edge, label %if.end225.for.cond.backedge_crit_edge

if.end225.for.cond.backedge_crit_edge:            ; preds = %if.end225
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.backedge

if.end225.relock.outer.loopexit_crit_edge:        ; preds = %if.end225
  call void @__sanitizer_cov_trace_pc() #17
  br label %relock.outer.loopexit

fatal:                                            ; preds = %land.lhs.true211.fatal_crit_edge, %if.end187.thread.fatal_crit_edge, %if.then62
  %signr.4 = phi i32 [ 9, %if.then62 ], [ %signr.3, %land.lhs.true211.fatal_crit_edge ], [ %signr.3, %if.end187.thread.fatal_crit_edge ]
  tail call void @_raw_spin_unlock_irq(ptr noundef %5) #15
  %136 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %task, align 8
  %frozen.i364 = getelementptr inbounds %struct.task_struct, ptr %137, i32 0, i32 65
  %138 = ptrtoint ptr %frozen.i364 to i32
  call void @__asan_load2_noabort(i32 %138)
  %bf.load.i365 = load i16, ptr %frozen.i364, align 8
  %139 = and i16 %bf.load.i365, 512
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %139)
  %tobool.i366.not = icmp eq i16 %139, 0
  br i1 %tobool.i366.not, label %fatal.if.end249_crit_edge, label %if.then248, !prof !509

fatal.if.end249_crit_edge:                        ; preds = %fatal
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end249

if.then248:                                       ; preds = %fatal
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @cgroup_leave_frozen(i1 noundef zeroext true) #15
  br label %if.end249

if.end249:                                        ; preds = %if.then248, %fatal.if.end249_crit_edge
  %140 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %task, align 8
  %flags252 = getelementptr inbounds %struct.task_struct, ptr %141, i32 0, i32 3
  %142 = ptrtoint ptr %flags252 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %flags252, align 4
  %or = or i32 %143, 1024
  store i32 %or, ptr %flags252, align 4
  %144 = add i32 %signr.4, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %144)
  %145 = icmp ult i32 %144, 31
  br i1 %145, label %land.lhs.true256, label %if.end249.if.end270_crit_edge

if.end249.if.end270_crit_edge:                    ; preds = %if.end249
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end270

land.lhs.true256:                                 ; preds = %if.end249
  %shl258 = shl nuw nsw i32 1, %144
  %and259 = and i32 %shl258, 1098908924
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and259)
  %tobool260.not = icmp eq i32 %and259, 0
  br i1 %tobool260.not, label %land.lhs.true256.if.end270_crit_edge, label %if.then261

land.lhs.true256.if.end270_crit_edge:             ; preds = %land.lhs.true256
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end270

if.then261:                                       ; preds = %land.lhs.true256
  %146 = load i32, ptr @print_fatal_signals, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %146)
  %tobool262.not = icmp eq i32 %146, 0
  br i1 %tobool262.not, label %if.then261.if.end266_crit_edge, label %if.then263

if.then261.if.end266_crit_edge:                   ; preds = %if.then261
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end266

if.then263:                                       ; preds = %if.then261
  call void @__sanitizer_cov_trace_pc() #17
  %147 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %info, align 4
  %149 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i367 = and i32 %149, -16384
  %150 = inttoptr i32 %and.i.i367 to ptr
  %task.i368 = getelementptr inbounds %struct.thread_info, ptr %150, i32 0, i32 2
  %151 = ptrtoint ptr %task.i368 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %task.i368, align 8
  %stack.i = getelementptr inbounds %struct.task_struct, ptr %152, i32 0, i32 1
  %153 = ptrtoint ptr %stack.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %stack.i, align 4
  %add.ptr1.i = getelementptr i8, ptr %154, i32 16304
  %call2.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.107, i32 noundef %148) #18
  %155 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i = and i32 %155, -16384
  %156 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %156, i32 0, i32 1
  %157 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %158, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !536
  tail call void @show_regs(ptr noundef %add.ptr1.i) #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !537
  %159 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i9.i = and i32 %159, -16384
  %160 = inttoptr i32 %and.i.i.i9.i to ptr
  %preempt_count.i.i10.i = getelementptr inbounds %struct.thread_info, ptr %160, i32 0, i32 1
  %161 = ptrtoint ptr %preempt_count.i.i10.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load volatile i32, ptr %preempt_count.i.i10.i, align 4
  %sub.i.i = add i32 %162, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i10.i, align 4
  br label %if.end266

if.end266:                                        ; preds = %if.then263, %if.then261.if.end266_crit_edge
  %163 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %task, align 8
  tail call void @proc_coredump_connector(ptr noundef %164) #15
  tail call void @do_coredump(ptr noundef %info) #15
  br label %if.end270

if.end270:                                        ; preds = %if.end266, %land.lhs.true256.if.end270_crit_edge, %if.end249.if.end270_crit_edge
  %165 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %task, align 8
  %flags273 = getelementptr inbounds %struct.task_struct, ptr %166, i32 0, i32 3
  %167 = ptrtoint ptr %flags273 to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load i32, ptr %flags273, align 4
  %and274 = and i32 %168, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and274)
  %tobool275.not = icmp eq i32 %and274, 0
  br i1 %tobool275.not, label %if.end277, label %cleanup.thread380

cleanup.thread380:                                ; preds = %if.end270
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %type) #15
  br label %out

if.end277:                                        ; preds = %if.end270
  call void @__sanitizer_cov_trace_pc() #17
  %169 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %info, align 4
  tail call void @do_group_exit(i32 noundef %170) #15
  br label %for.cond.backedge

cleanup.thread:                                   ; preds = %if.then174, %if.then168.cleanup.thread_crit_edge, %if.end131.cleanup.thread_crit_edge
  %signr.5.ph = phi i32 [ %signr.3, %if.then168.cleanup.thread_crit_edge ], [ %signr.3, %if.then174 ], [ 0, %if.end131.cleanup.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %type) #15
  tail call void @_raw_spin_unlock_irq(ptr noundef %5) #15
  br label %out

for.cond.backedge:                                ; preds = %if.end277, %if.end225.for.cond.backedge_crit_edge, %land.lhs.true201.for.cond.backedge_crit_edge, %if.end187.thread.for.cond.backedge_crit_edge, %land.lhs.true182.for.cond.backedge_crit_edge, %if.end156.for.cond.backedge_crit_edge, %if.then150.for.cond.backedge_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %type) #15
  br label %for.cond

out:                                              ; preds = %cleanup.thread, %cleanup.thread380
  %signr.5378 = phi i32 [ %signr.5.ph, %cleanup.thread ], [ %signr.4, %cleanup.thread380 ]
  %sig = getelementptr inbounds %struct.ksignal, ptr %ksig, i32 0, i32 2
  %171 = ptrtoint ptr %sig to i32
  call void @__asan_store4_noabort(i32 %171)
  store i32 %signr.5378, ptr %sig, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %signr.5378)
  %cmp290 = icmp sgt i32 %signr.5378, 0
  br label %cleanup291

cleanup291:                                       ; preds = %out, %if.end19.cleanup291_crit_edge, %if.end13.cleanup291_crit_edge
  %retval.0 = phi i1 [ %cmp290, %out ], [ false, %if.end13.cleanup291_crit_edge ], [ false, %if.end19.cleanup291_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @uprobe_deny_signal() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @do_notify_parent_cldstop(ptr noundef %tsk, i1 noundef zeroext %for_ptracer, i32 noundef %why) unnamed_addr #0 align 64 {
entry:
  %info = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info) #15
  %0 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %1 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %2 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3
  %3 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 1
  %4 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 2
  %5 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 3
  %6 = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 4
  br i1 %for_ptracer, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %parent1 = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 72
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %group_leader = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 75
  %7 = ptrtoint ptr %group_leader to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %group_leader, align 4
  %real_parent = getelementptr inbounds %struct.task_struct, ptr %8, i32 0, i32 71
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %parent.0.in = phi ptr [ %parent1, %if.then ], [ %real_parent, %if.else ]
  %tsk.addr.0 = phi ptr [ %tsk, %if.then ], [ %8, %if.else ]
  %9 = ptrtoint ptr %parent.0.in to i32
  call void @__asan_load4_noabort(i32 %9)
  %parent.0 = load ptr, ptr %parent.0.in, align 4
  %10 = getelementptr inbounds i8, ptr %info, i32 8
  %11 = call ptr @memset(ptr %10, i32 0, i32 24)
  %12 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 17, ptr %info, align 4
  %13 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %0, align 4
  %14 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %17, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i, label %if.end.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end.rcu_read_lock.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end.rcu_read_lock.exit_crit_edge
  %call = tail call ptr @task_active_pid_ns(ptr noundef %parent.0) #15
  %call.i122 = tail call i32 @__task_pid_nr_ns(ptr noundef %tsk.addr.0, i32 noundef 0, ptr noundef %call) #15
  %18 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %call.i122, ptr %2, align 4
  %19 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i100 = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i.i.i.i100 to ptr
  %preempt_count.i.i.i.i101 = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %preempt_count.i.i.i.i101 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %preempt_count.i.i.i.i101, align 4
  %add.i.i.i102 = add i32 %22, 1
  store volatile i32 %add.i.i.i102, ptr %preempt_count.i.i.i.i101, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i103 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i103, label %rcu_read_lock.exit.rcu_read_lock.exit110_crit_edge, label %land.lhs.true.i106

rcu_read_lock.exit.rcu_read_lock.exit110_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit110

land.lhs.true.i106:                               ; preds = %rcu_read_lock.exit
  %call1.i104 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i104)
  %tobool.not.i105 = icmp eq i32 %call1.i104, 0
  br i1 %tobool.not.i105, label %land.lhs.true.i106.rcu_read_lock.exit110_crit_edge, label %land.lhs.true2.i108

land.lhs.true.i106.rcu_read_lock.exit110_crit_edge: ; preds = %land.lhs.true.i106
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit110

land.lhs.true2.i108:                              ; preds = %land.lhs.true.i106
  %.b4.i107 = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i107, label %land.lhs.true2.i108.rcu_read_lock.exit110_crit_edge, label %if.then.i109

land.lhs.true2.i108.rcu_read_lock.exit110_crit_edge: ; preds = %land.lhs.true2.i108
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit110

if.then.i109:                                     ; preds = %land.lhs.true2.i108
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit110

rcu_read_lock.exit110:                            ; preds = %if.then.i109, %land.lhs.true2.i108.rcu_read_lock.exit110_crit_edge, %land.lhs.true.i106.rcu_read_lock.exit110_crit_edge, %rcu_read_lock.exit.rcu_read_lock.exit110_crit_edge
  %real_cred = getelementptr inbounds %struct.task_struct, ptr %parent.0, i32 0, i32 98
  %23 = ptrtoint ptr %real_cred to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile ptr, ptr %real_cred, align 4
  %call4 = tail call i32 @rcu_read_lock_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %land.lhs.true, label %rcu_read_lock.exit110.do.end13_crit_edge

rcu_read_lock.exit110.do.end13_crit_edge:         ; preds = %rcu_read_lock.exit110
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end13

land.lhs.true:                                    ; preds = %rcu_read_lock.exit110
  %call6 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %land.lhs.true.do.end13_crit_edge, label %land.lhs.true8

land.lhs.true.do.end13_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end13

land.lhs.true8:                                   ; preds = %land.lhs.true
  %.b99 = load i1, ptr @do_notify_parent_cldstop.__warned, align 1
  br i1 %.b99, label %land.lhs.true8.do.end13_crit_edge, label %if.then10

land.lhs.true8.do.end13_crit_edge:                ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end13

if.then10:                                        ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @do_notify_parent_cldstop.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 2150, ptr noundef nonnull @.str.1) #15
  br label %do.end13

do.end13:                                         ; preds = %if.then10, %land.lhs.true8.do.end13_crit_edge, %land.lhs.true.do.end13_crit_edge, %rcu_read_lock.exit110.do.end13_crit_edge
  %user_ns = getelementptr inbounds %struct.cred, ptr %24, i32 0, i32 25
  %25 = ptrtoint ptr %user_ns to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %user_ns, align 4
  %call.i123 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i123, label %do.end13.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i126

do.end13.rcu_read_unlock.exit_crit_edge:          ; preds = %do.end13
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true.i126:                               ; preds = %do.end13
  %call1.i124 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i124)
  %tobool.not.i125 = icmp eq i32 %call1.i124, 0
  br i1 %tobool.not.i125, label %land.lhs.true.i126.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i128

land.lhs.true.i126.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i126
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true2.i128:                              ; preds = %land.lhs.true.i126
  %.b4.i127 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i127, label %land.lhs.true2.i128.rcu_read_unlock.exit_crit_edge, label %if.then.i129

land.lhs.true2.i128.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i128
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

if.then.i129:                                     ; preds = %land.lhs.true2.i128
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 724, ptr noundef nonnull @.str.91) #15
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i129, %land.lhs.true2.i128.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i126.rcu_read_unlock.exit_crit_edge, %do.end13.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !520
  %27 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i130 = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i.i.i.i130 to ptr
  %preempt_count.i.i.i.i131 = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %preempt_count.i.i.i.i131 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %preempt_count.i.i.i.i131, align 4
  %sub.i.i.i = add i32 %30, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i131, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  %31 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i111 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i.i111 to ptr
  %preempt_count.i.i.i.i112 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i.i112 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i.i112, align 4
  %add.i.i.i113 = add i32 %34, 1
  store volatile i32 %add.i.i.i113, ptr %preempt_count.i.i.i.i112, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i114 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i114, label %rcu_read_unlock.exit.rcu_read_lock.exit121_crit_edge, label %land.lhs.true.i117

rcu_read_unlock.exit.rcu_read_lock.exit121_crit_edge: ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit121

land.lhs.true.i117:                               ; preds = %rcu_read_unlock.exit
  %call1.i115 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i115)
  %tobool.not.i116 = icmp eq i32 %call1.i115, 0
  br i1 %tobool.not.i116, label %land.lhs.true.i117.rcu_read_lock.exit121_crit_edge, label %land.lhs.true2.i119

land.lhs.true.i117.rcu_read_lock.exit121_crit_edge: ; preds = %land.lhs.true.i117
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit121

land.lhs.true2.i119:                              ; preds = %land.lhs.true.i117
  %.b4.i118 = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i118, label %land.lhs.true2.i119.rcu_read_lock.exit121_crit_edge, label %if.then.i120

land.lhs.true2.i119.rcu_read_lock.exit121_crit_edge: ; preds = %land.lhs.true2.i119
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit121

if.then.i120:                                     ; preds = %land.lhs.true2.i119
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit121

rcu_read_lock.exit121:                            ; preds = %if.then.i120, %land.lhs.true2.i119.rcu_read_lock.exit121_crit_edge, %land.lhs.true.i117.rcu_read_lock.exit121_crit_edge, %rcu_read_unlock.exit.rcu_read_lock.exit121_crit_edge
  %real_cred21 = getelementptr inbounds %struct.task_struct, ptr %tsk.addr.0, i32 0, i32 98
  %35 = ptrtoint ptr %real_cred21 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile ptr, ptr %real_cred21, align 4
  %call23 = tail call i32 @rcu_read_lock_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %land.lhs.true25, label %rcu_read_lock.exit121.do.end33_crit_edge

rcu_read_lock.exit121.do.end33_crit_edge:         ; preds = %rcu_read_lock.exit121
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end33

land.lhs.true25:                                  ; preds = %rcu_read_lock.exit121
  %call26 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %land.lhs.true25.do.end33_crit_edge, label %land.lhs.true28

land.lhs.true25.do.end33_crit_edge:               ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end33

land.lhs.true28:                                  ; preds = %land.lhs.true25
  %.b9798 = load i1, ptr @do_notify_parent_cldstop.__warned.103, align 1
  br i1 %.b9798, label %land.lhs.true28.do.end33_crit_edge, label %if.then30

land.lhs.true28.do.end33_crit_edge:               ; preds = %land.lhs.true28
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end33

if.then30:                                        ; preds = %land.lhs.true28
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @do_notify_parent_cldstop.__warned.103, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 2150, ptr noundef nonnull @.str.1) #15
  br label %do.end33

do.end33:                                         ; preds = %if.then30, %land.lhs.true28.do.end33_crit_edge, %land.lhs.true25.do.end33_crit_edge, %rcu_read_lock.exit121.do.end33_crit_edge
  %uid = getelementptr inbounds %struct.cred, ptr %36, i32 0, i32 4
  %37 = ptrtoint ptr %uid to i32
  call void @__asan_load4_noabort(i32 %37)
  %___val16.sroa.0.0.copyload = load i32, ptr %uid, align 4
  %call.i132 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i132, label %do.end33.rcu_read_unlock.exit142_crit_edge, label %land.lhs.true.i135

do.end33.rcu_read_unlock.exit142_crit_edge:       ; preds = %do.end33
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit142

land.lhs.true.i135:                               ; preds = %do.end33
  %call1.i133 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i133)
  %tobool.not.i134 = icmp eq i32 %call1.i133, 0
  br i1 %tobool.not.i134, label %land.lhs.true.i135.rcu_read_unlock.exit142_crit_edge, label %land.lhs.true2.i137

land.lhs.true.i135.rcu_read_unlock.exit142_crit_edge: ; preds = %land.lhs.true.i135
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit142

land.lhs.true2.i137:                              ; preds = %land.lhs.true.i135
  %.b4.i136 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i136, label %land.lhs.true2.i137.rcu_read_unlock.exit142_crit_edge, label %if.then.i138

land.lhs.true2.i137.rcu_read_unlock.exit142_crit_edge: ; preds = %land.lhs.true2.i137
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit142

if.then.i138:                                     ; preds = %land.lhs.true2.i137
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 724, ptr noundef nonnull @.str.91) #15
  br label %rcu_read_unlock.exit142

rcu_read_unlock.exit142:                          ; preds = %if.then.i138, %land.lhs.true2.i137.rcu_read_unlock.exit142_crit_edge, %land.lhs.true.i135.rcu_read_unlock.exit142_crit_edge, %do.end33.rcu_read_unlock.exit142_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !520
  %38 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i139 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i.i139 to ptr
  %preempt_count.i.i.i.i140 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i.i140 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i.i140, align 4
  %sub.i.i.i141 = add i32 %41, -1
  store volatile i32 %sub.i.i.i141, ptr %preempt_count.i.i.i.i140, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  %.fca.0.insert = insertvalue [1 x i32] poison, i32 %___val16.sroa.0.0.copyload, 0
  %call35 = tail call i32 @from_kuid_munged(ptr noundef %26, [1 x i32] %.fca.0.insert) #15
  %42 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %call35, ptr %3, align 4
  %call.i143 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i143, label %rcu_read_unlock.exit142.rcu_read_unlock.exit153_crit_edge, label %land.lhs.true.i146

rcu_read_unlock.exit142.rcu_read_unlock.exit153_crit_edge: ; preds = %rcu_read_unlock.exit142
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit153

land.lhs.true.i146:                               ; preds = %rcu_read_unlock.exit142
  %call1.i144 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i144)
  %tobool.not.i145 = icmp eq i32 %call1.i144, 0
  br i1 %tobool.not.i145, label %land.lhs.true.i146.rcu_read_unlock.exit153_crit_edge, label %land.lhs.true2.i148

land.lhs.true.i146.rcu_read_unlock.exit153_crit_edge: ; preds = %land.lhs.true.i146
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit153

land.lhs.true2.i148:                              ; preds = %land.lhs.true.i146
  %.b4.i147 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i147, label %land.lhs.true2.i148.rcu_read_unlock.exit153_crit_edge, label %if.then.i149

land.lhs.true2.i148.rcu_read_unlock.exit153_crit_edge: ; preds = %land.lhs.true2.i148
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit153

if.then.i149:                                     ; preds = %land.lhs.true2.i148
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 724, ptr noundef nonnull @.str.91) #15
  br label %rcu_read_unlock.exit153

rcu_read_unlock.exit153:                          ; preds = %if.then.i149, %land.lhs.true2.i148.rcu_read_unlock.exit153_crit_edge, %land.lhs.true.i146.rcu_read_unlock.exit153_crit_edge, %rcu_read_unlock.exit142.rcu_read_unlock.exit153_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !520
  %43 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i150 = and i32 %43, -16384
  %44 = inttoptr i32 %and.i.i.i.i.i150 to ptr
  %preempt_count.i.i.i.i151 = getelementptr inbounds %struct.thread_info, ptr %44, i32 0, i32 1
  %45 = ptrtoint ptr %preempt_count.i.i.i.i151 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %preempt_count.i.i.i.i151, align 4
  %sub.i.i.i152 = add i32 %46, -1
  store volatile i32 %sub.i.i.i152, ptr %preempt_count.i.i.i.i151, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  %utime1.i = getelementptr inbounds %struct.task_struct, ptr %tsk.addr.0, i32 0, i32 86
  %47 = ptrtoint ptr %utime1.i to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %utime1.i, align 8
  %stime2.i = getelementptr inbounds %struct.task_struct, ptr %tsk.addr.0, i32 0, i32 87
  %49 = ptrtoint ptr %stime2.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %stime2.i, align 32
  %call38 = tail call i64 @nsec_to_clock_t(i64 noundef %48) #15
  %conv = trunc i64 %call38 to i32
  %51 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %conv, ptr %5, align 4
  %call40 = tail call i64 @nsec_to_clock_t(i64 noundef %50) #15
  %conv41 = trunc i64 %call40 to i32
  %52 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %conv41, ptr %6, align 4
  %53 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %why, ptr %1, align 4
  %54 = zext i32 %why to i64
  call void @__sanitizer_cov_trace_switch(i64 %54, ptr @__sancov_gen_cov_switch_values.163)
  switch i32 %why, label %do.body51 [
    i32 6, label %rcu_read_unlock.exit153.sw.epilog_crit_edge
    i32 5, label %sw.bb44
    i32 4, label %sw.bb47
  ]

rcu_read_unlock.exit153.sw.epilog_crit_edge:      ; preds = %rcu_read_unlock.exit153
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

sw.bb44:                                          ; preds = %rcu_read_unlock.exit153
  call void @__sanitizer_cov_trace_pc() #17
  %signal = getelementptr inbounds %struct.task_struct, ptr %tsk.addr.0, i32 0, i32 111
  %55 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %signal, align 16
  %group_exit_code = getelementptr inbounds %struct.signal_struct, ptr %56, i32 0, i32 8
  %57 = ptrtoint ptr %group_exit_code to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %group_exit_code, align 8
  %and = and i32 %58, 127
  br label %sw.epilog

sw.bb47:                                          ; preds = %rcu_read_unlock.exit153
  call void @__sanitizer_cov_trace_pc() #17
  %exit_code = getelementptr inbounds %struct.task_struct, ptr %tsk.addr.0, i32 0, i32 58
  %59 = ptrtoint ptr %exit_code to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %exit_code, align 16
  %and48 = and i32 %60, 127
  br label %sw.epilog

do.body51:                                        ; preds = %rcu_read_unlock.exit153
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/signal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2169, 0\0A.popsection", ""() #15, !srcloc !538
  unreachable

sw.epilog:                                        ; preds = %sw.bb47, %sw.bb44, %rcu_read_unlock.exit153.sw.epilog_crit_edge
  %and48.sink = phi i32 [ %and48, %sw.bb47 ], [ %and, %sw.bb44 ], [ 18, %rcu_read_unlock.exit153.sw.epilog_crit_edge ]
  %61 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %and48.sink, ptr %4, align 4
  %sighand57 = getelementptr inbounds %struct.task_struct, ptr %parent.0, i32 0, i32 112
  %62 = ptrtoint ptr %sighand57 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %sighand57, align 4
  %call63 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %63) #15
  %arrayidx = getelementptr %struct.sighand_struct, ptr %63, i32 0, i32 3, i32 16
  %64 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %arrayidx, align 4
  %cmp68.not = icmp eq ptr %65, inttoptr (i32 1 to ptr)
  br i1 %cmp68.not, label %sw.epilog.if.end78_crit_edge, label %land.lhs.true70

sw.epilog.if.end78_crit_edge:                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end78

land.lhs.true70:                                  ; preds = %sw.epilog
  %sa_flags = getelementptr %struct.sighand_struct, ptr %63, i32 0, i32 3, i32 16, i32 0, i32 1
  %66 = ptrtoint ptr %sa_flags to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %sa_flags, align 4
  %and74 = and i32 %67, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and74)
  %tobool75.not = icmp eq i32 %and74, 0
  br i1 %tobool75.not, label %if.then76, label %land.lhs.true70.if.end78_crit_edge

land.lhs.true70.if.end78_crit_edge:               ; preds = %land.lhs.true70
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end78

if.then76:                                        ; preds = %land.lhs.true70
  call void @__sanitizer_cov_trace_pc() #17
  %call.i154 = call fastcc i32 @send_signal(i32 noundef 17, ptr noundef nonnull %info, ptr noundef %parent.0, i32 noundef 1) #15
  br label %if.end78

if.end78:                                         ; preds = %if.then76, %land.lhs.true70.if.end78_crit_edge, %sw.epilog.if.end78_crit_edge
  call void @__wake_up_parent(ptr noundef %tsk.addr.0, ptr noundef %parent.0) #15
  call void @_raw_spin_unlock_irqrestore(ptr noundef %63, i32 noundef %call63) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info) #15
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_signal_deliver(i32 noundef %sig, ptr noundef %info, ptr noundef %ka) unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_signal_deliver, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_signal_deliver, %do.body)) #15
          to label %if.end48 [label %do.body], !srcloc !526

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !509

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.99, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !539
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_signal_deliver, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %sig, ptr noundef %info, ptr noundef %ka) #15
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !540
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !540
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !509

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.99, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !529
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_signal_deliver, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_signal_deliver.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @trace_signal_deliver.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.98, i32 noundef 120, ptr noundef nonnull @.str.1) #15
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !530
  %38 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @do_signal_stop(i32 noundef %signr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %signal = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 111
  %4 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %signal, align 16
  %jobctl = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 61
  %6 = ptrtoint ptr %jobctl to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %jobctl, align 4
  %and = and i32 %7, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end111_crit_edge

entry.if.end111_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end111

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 65536, i32 %signr)
  %tobool4.not = icmp ult i32 %signr, 65536
  br i1 %tobool4.not, label %if.then.if.end33_crit_edge, label %land.rhs

if.then.if.end33_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end33

land.rhs:                                         ; preds = %if.then
  %.b253 = load i1, ptr @do_signal_stop.__already_done, align 1
  br i1 %.b253, label %land.rhs.if.end33_crit_edge, label %if.then12, !prof !509

land.rhs.if.end33_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end33

if.then12:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @do_signal_stop.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2388, i32 noundef 9, ptr noundef null) #15
  br label %if.end33

if.end33:                                         ; preds = %if.then12, %land.rhs.if.end33_crit_edge, %if.then.if.end33_crit_edge
  %8 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task, align 8
  %jobctl43 = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 61
  %10 = ptrtoint ptr %jobctl43 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %jobctl43, align 4
  %and44 = and i32 %11, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and44)
  %tobool45.not = icmp eq i32 %and44, 0
  br i1 %tobool45.not, label %if.end33.cleanup232_crit_edge, label %lor.lhs.false, !prof !510

if.end33.cleanup232_crit_edge:                    ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup232

lor.lhs.false:                                    ; preds = %if.end33
  %flags = getelementptr inbounds %struct.signal_struct, ptr %5, i32 0, i32 12
  %12 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %flags, align 8
  %and52 = and i32 %13, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and52)
  %tobool53.not = icmp eq i32 %and52, 0
  br i1 %tobool53.not, label %lor.lhs.false60, label %lor.lhs.false.cleanup232_crit_edge, !prof !509

lor.lhs.false.cleanup232_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup232

lor.lhs.false60:                                  ; preds = %lor.lhs.false
  %group_exec_task = getelementptr inbounds %struct.signal_struct, ptr %5, i32 0, i32 10
  %14 = ptrtoint ptr %group_exec_task to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %group_exec_task, align 8
  %tobool61.not = icmp eq ptr %15, null
  br i1 %tobool61.not, label %if.end69, label %lor.lhs.false60.cleanup232_crit_edge, !prof !509

lor.lhs.false60.cleanup232_crit_edge:             ; preds = %lor.lhs.false60
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup232

if.end69:                                         ; preds = %lor.lhs.false60
  %and71 = and i32 %13, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and71)
  %tobool72.not = icmp eq i32 %and71, 0
  br i1 %tobool72.not, label %if.then73, label %if.end69.if.end74_crit_edge

if.end69.if.end74_crit_edge:                      ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end74

if.then73:                                        ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #17
  %group_exit_code = getelementptr inbounds %struct.signal_struct, ptr %5, i32 0, i32 8
  %16 = ptrtoint ptr %group_exit_code to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %signr, ptr %group_exit_code, align 8
  br label %if.end74

if.end74:                                         ; preds = %if.then73, %if.end69.if.end74_crit_edge
  %group_stop_count = getelementptr inbounds %struct.signal_struct, ptr %5, i32 0, i32 11
  %17 = ptrtoint ptr %group_stop_count to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %group_stop_count, align 4
  %18 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task, align 8
  %or = or i32 %signr, 393216
  %and.i256 = and i32 %signr, -4128768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i256)
  %tobool.not.i = icmp eq i32 %and.i256, 0
  br i1 %tobool.not.i, label %do.body7.i, label %do.body3.i, !prof !509

do.body3.i:                                       ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/signal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 287, 0\0A.popsection", ""() #15, !srcloc !513
  unreachable

do.body7.i:                                       ; preds = %if.end74
  %stack.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %stack.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %stack.i.i.i.i, align 4
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %21, align 4
  %and1.i.i.i.i.i.i = and i32 %23, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and1.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i, label %do.body7.i.lor.end.i_crit_edge, label %fatal_signal_pending.exit.i

do.body7.i.lor.end.i_crit_edge:                   ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %lor.end.i

fatal_signal_pending.exit.i:                      ; preds = %do.body7.i
  %signal.i.i.i = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 116, i32 1
  %24 = ptrtoint ptr %signal.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %signal.i.i.i, align 4
  %26 = and i32 %25, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool27.not.i = icmp eq i32 %26, 0
  br i1 %tobool27.not.i, label %fatal_signal_pending.exit.i.lor.end.i_crit_edge, label %fatal_signal_pending.exit.i.if.end80_crit_edge, !prof !509

fatal_signal_pending.exit.i.if.end80_crit_edge:   ; preds = %fatal_signal_pending.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end80

fatal_signal_pending.exit.i.lor.end.i_crit_edge:  ; preds = %fatal_signal_pending.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %lor.end.i

lor.end.i:                                        ; preds = %fatal_signal_pending.exit.i.lor.end.i_crit_edge, %do.body7.i.lor.end.i_crit_edge
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 3
  %27 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %flags.i, align 4
  %and28.i = and i32 %28, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28.i)
  %tobool29.not.i = icmp eq i32 %and28.i, 0
  br i1 %tobool29.not.i, label %if.end37.i, label %lor.end.i.if.end80_crit_edge, !prof !509

lor.end.i.if.end80_crit_edge:                     ; preds = %lor.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end80

if.end37.i:                                       ; preds = %lor.end.i
  %and38.i = and i32 %signr, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and38.i)
  %tobool39.not.i = icmp eq i32 %and38.i, 0
  br i1 %tobool39.not.i, label %if.end37.i.if.then78_crit_edge, label %if.then40.i

if.end37.i.if.then78_crit_edge:                   ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then78

if.then40.i:                                      ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #17
  %jobctl.i = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 61
  %29 = ptrtoint ptr %jobctl.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %jobctl.i, align 4
  %and41.i = and i32 %30, -65536
  store i32 %and41.i, ptr %jobctl.i, align 4
  br label %if.then78

if.then78:                                        ; preds = %if.then40.i, %if.end37.i.if.then78_crit_edge
  %jobctl43.i = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 61
  %31 = ptrtoint ptr %jobctl43.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %jobctl43.i, align 4
  %or.i = or i32 %32, %or
  store i32 %or.i, ptr %jobctl43.i, align 4
  %33 = ptrtoint ptr %group_stop_count to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %group_stop_count, align 4
  %inc = add i32 %34, 1
  store i32 %inc, ptr %group_stop_count, align 4
  br label %if.end80

if.end80:                                         ; preds = %if.then78, %lor.end.i.if.end80_crit_edge, %fatal_signal_pending.exit.i.if.end80_crit_edge
  %35 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %task, align 8
  %thread_group.i298 = getelementptr inbounds %struct.task_struct, ptr %36, i32 0, i32 80
  %37 = ptrtoint ptr %thread_group.i298 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile ptr, ptr %thread_group.i298, align 4
  %add.ptr.i299 = getelementptr i8, ptr %38, i32 -1396
  %cmp.not300 = icmp eq ptr %add.ptr.i299, %36
  br i1 %cmp.not300, label %if.end80.if.end111_crit_edge, label %do.end88.lr.ph

if.end80.if.end111_crit_edge:                     ; preds = %if.end80
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end111

do.end88.lr.ph:                                   ; preds = %if.end80
  %and38.i271 = and i32 %signr, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and38.i271)
  %tobool39.not.i272 = icmp eq i32 %and38.i271, 0
  br label %do.end88

do.end88:                                         ; preds = %if.end109.do.end88_crit_edge, %do.end88.lr.ph
  %add.ptr.i301 = phi ptr [ %add.ptr.i299, %do.end88.lr.ph ], [ %add.ptr.i, %if.end109.do.end88_crit_edge ]
  %39 = phi ptr [ %38, %do.end88.lr.ph ], [ %62, %if.end109.do.end88_crit_edge ]
  %40 = ptrtoint ptr %add.ptr.i301 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %add.ptr.i301, align 128
  %and90 = and i32 %41, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and90)
  %cmp91.not = icmp eq i32 %and90, 0
  br i1 %cmp91.not, label %do.body7.i260, label %do.end88.if.end109_crit_edge

do.end88.if.end109_crit_edge:                     ; preds = %do.end88
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end109

do.body7.i260:                                    ; preds = %do.end88
  %stack.i.i.i.i261 = getelementptr i8, ptr %39, i32 -1392
  %42 = ptrtoint ptr %stack.i.i.i.i261 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %stack.i.i.i.i261, align 4
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %43, align 4
  %and1.i.i.i.i.i.i262 = and i32 %45, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i.i262)
  %tobool.not.i.i263 = icmp eq i32 %and1.i.i.i.i.i.i262, 0
  br i1 %tobool.not.i.i263, label %do.body7.i260.lor.end.i270_crit_edge, label %fatal_signal_pending.exit.i266

do.body7.i260.lor.end.i270_crit_edge:             ; preds = %do.body7.i260
  call void @__sanitizer_cov_trace_pc() #17
  br label %lor.end.i270

fatal_signal_pending.exit.i266:                   ; preds = %do.body7.i260
  %signal.i.i.i264 = getelementptr i8, ptr %39, i32 324
  %46 = ptrtoint ptr %signal.i.i.i264 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %signal.i.i.i264, align 4
  %48 = and i32 %47, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool27.not.i265 = icmp eq i32 %48, 0
  br i1 %tobool27.not.i265, label %fatal_signal_pending.exit.i266.lor.end.i270_crit_edge, label %fatal_signal_pending.exit.i266.if.end109_crit_edge, !prof !509

fatal_signal_pending.exit.i266.if.end109_crit_edge: ; preds = %fatal_signal_pending.exit.i266
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end109

fatal_signal_pending.exit.i266.lor.end.i270_crit_edge: ; preds = %fatal_signal_pending.exit.i266
  call void @__sanitizer_cov_trace_pc() #17
  br label %lor.end.i270

lor.end.i270:                                     ; preds = %fatal_signal_pending.exit.i266.lor.end.i270_crit_edge, %do.body7.i260.lor.end.i270_crit_edge
  %flags.i267 = getelementptr i8, ptr %39, i32 -1384
  %49 = ptrtoint ptr %flags.i267 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %flags.i267, align 4
  %and28.i268 = and i32 %50, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28.i268)
  %tobool29.not.i269 = icmp eq i32 %and28.i268, 0
  br i1 %tobool29.not.i269, label %if.end37.i273, label %lor.end.i270.if.end109_crit_edge, !prof !509

lor.end.i270.if.end109_crit_edge:                 ; preds = %lor.end.i270
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end109

if.end37.i273:                                    ; preds = %lor.end.i270
  br i1 %tobool39.not.i272, label %if.end37.i273.if.then94_crit_edge, label %if.then40.i276

if.end37.i273.if.then94_crit_edge:                ; preds = %if.end37.i273
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then94

if.then40.i276:                                   ; preds = %if.end37.i273
  call void @__sanitizer_cov_trace_pc() #17
  %jobctl.i274 = getelementptr i8, ptr %39, i32 -152
  %51 = ptrtoint ptr %jobctl.i274 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %jobctl.i274, align 4
  %and41.i275 = and i32 %52, -65536
  store i32 %and41.i275, ptr %jobctl.i274, align 4
  br label %if.then94

if.then94:                                        ; preds = %if.then40.i276, %if.end37.i273.if.then94_crit_edge
  %jobctl43.i277 = getelementptr i8, ptr %39, i32 -152
  %53 = ptrtoint ptr %jobctl43.i277 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %jobctl43.i277, align 4
  %or.i278 = or i32 %54, %or
  store i32 %or.i278, ptr %jobctl43.i277, align 4
  %55 = ptrtoint ptr %group_stop_count to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %group_stop_count, align 4
  %inc96 = add i32 %56, 1
  store i32 %inc96, ptr %group_stop_count, align 4
  %ptrace = getelementptr i8, ptr %39, i32 -1380
  %57 = ptrtoint ptr %ptrace to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %ptrace, align 16
  %and97 = and i32 %58, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and97)
  %tobool98.not = icmp eq i32 %and97, 0
  br i1 %tobool98.not, label %if.then107, label %if.else, !prof !509

if.then107:                                       ; preds = %if.then94
  %59 = ptrtoint ptr %stack.i.i.i.i261 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %stack.i.i.i.i261, align 4
  tail call void @_set_bit(i32 noundef 0, ptr noundef %60) #15
  %call.i.i = tail call i32 @wake_up_state(ptr noundef %add.ptr.i301, i32 noundef 1) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i281 = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i281, label %if.then.i.i, label %if.then107.if.end109_crit_edge

if.then107.if.end109_crit_edge:                   ; preds = %if.then107
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end109

if.then.i.i:                                      ; preds = %if.then107
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @kick_process(ptr noundef %add.ptr.i301) #15
  br label %if.end109

if.else:                                          ; preds = %if.then94
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @ptrace_trap_notify(ptr noundef %add.ptr.i301)
  br label %if.end109

if.end109:                                        ; preds = %if.else, %if.then.i.i, %if.then107.if.end109_crit_edge, %lor.end.i270.if.end109_crit_edge, %fatal_signal_pending.exit.i266.if.end109_crit_edge, %do.end88.if.end109_crit_edge
  %thread_group.i = getelementptr inbounds %struct.task_struct, ptr %add.ptr.i301, i32 0, i32 80
  %61 = ptrtoint ptr %thread_group.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile ptr, ptr %thread_group.i, align 4
  %add.ptr.i = getelementptr i8, ptr %62, i32 -1396
  %63 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %task, align 8
  %cmp.not = icmp eq ptr %add.ptr.i, %64
  br i1 %cmp.not, label %if.end109.if.end111_crit_edge, label %if.end109.do.end88_crit_edge

if.end109.do.end88_crit_edge:                     ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end88

if.end109.if.end111_crit_edge:                    ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end111

if.end111:                                        ; preds = %if.end109.if.end111_crit_edge, %if.end80.if.end111_crit_edge, %entry.if.end111_crit_edge
  %65 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %task, align 8
  %ptrace114 = getelementptr inbounds %struct.task_struct, ptr %66, i32 0, i32 4
  %67 = ptrtoint ptr %ptrace114 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %ptrace114, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %tobool115.not = icmp eq i32 %68, 0
  br i1 %tobool115.not, label %if.then124, label %if.else228, !prof !509

if.then124:                                       ; preds = %if.end111
  %call127 = tail call fastcc zeroext i1 @task_participate_group_stop(ptr noundef %66)
  %spec.select = select i1 %call127, i32 5, i32 0
  %69 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %task, align 8
  %pi_lock = getelementptr inbounds %struct.task_struct, ptr %70, i32 0, i32 128
  %call137 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %pi_lock) #15
  br label %__here

__here:                                           ; preds = %if.then124
  %71 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %task, align 8
  %task_state_change = getelementptr inbounds %struct.task_struct, ptr %72, i32 0, i32 212
  %73 = ptrtoint ptr %task_state_change to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 ptrtoint (ptr blockaddress(@do_signal_stop, %__here) to i32), ptr %task_state_change, align 4
  %74 = load ptr, ptr %task, align 8
  %75 = ptrtoint ptr %74 to i32
  call void @__asan_store4_noabort(i32 %75)
  store volatile i32 260, ptr %74, align 128
  %76 = load ptr, ptr %task, align 8
  %pi_lock215 = getelementptr inbounds %struct.task_struct, ptr %76, i32 0, i32 128
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %pi_lock215, i32 noundef %call137) #15
  %77 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %task, align 8
  %sighand = getelementptr inbounds %struct.task_struct, ptr %78, i32 0, i32 112
  %79 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %80) #15
  br i1 %call127, label %if.then223, label %__here.if.end226_crit_edge

__here.if.end226_crit_edge:                       ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end226

if.then223:                                       ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @_raw_read_lock(ptr noundef nonnull @tasklist_lock) #15
  %81 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %task, align 8
  tail call fastcc void @do_notify_parent_cldstop(ptr noundef %82, i1 noundef zeroext false, i32 noundef %spec.select)
  tail call void @_raw_read_unlock(ptr noundef nonnull @tasklist_lock) #15
  br label %if.end226

if.end226:                                        ; preds = %if.then223, %__here.if.end226_crit_edge
  tail call void @cgroup_enter_frozen() #15
  %83 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i = and i32 %83, -16384
  %84 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %84, i32 0, i32 2
  %85 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %task.i.i, align 8
  %flags.i.i = getelementptr inbounds %struct.task_struct, ptr %86, i32 0, i32 3
  %87 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %flags.i.i, align 4
  %or.i.i = or i32 %88, 1073741824
  store i32 %or.i.i, ptr %flags.i.i, align 4
  tail call void @schedule() #15
  %89 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i1.i = and i32 %89, -16384
  %90 = inttoptr i32 %and.i.i1.i to ptr
  %task.i2.i = getelementptr inbounds %struct.thread_info, ptr %90, i32 0, i32 2
  %91 = ptrtoint ptr %task.i2.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %task.i2.i, align 8
  %flags.i3.i = getelementptr inbounds %struct.task_struct, ptr %92, i32 0, i32 3
  %93 = ptrtoint ptr %flags.i3.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %flags.i3.i, align 4
  %and.i.i = and i32 %94, -1073741825
  store i32 %and.i.i, ptr %flags.i3.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !541
  %95 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i = and i32 %95, -16384
  %96 = inttoptr i32 %and.i.i.i.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %96, i32 0, i32 2
  %97 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %task.i.i.i, align 8
  %flags.i.i.i = getelementptr inbounds %struct.task_struct, ptr %98, i32 0, i32 3
  %99 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %flags.i.i.i, align 4
  %and.i4.i.i = and i32 %100, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i4.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i4.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.end226.if.end.i.i.i_crit_edge

if.end226.if.end.i.i.i_crit_edge:                 ; preds = %if.end226
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i.i

if.then.i.i.i:                                    ; preds = %if.end226
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @debug_check_no_locks_held() #15
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then.i.i.i, %if.end226.if.end.i.i.i_crit_edge
  tail call void @__might_sleep(ptr noundef nonnull @.str.102, i32 noundef 57) #15
  %101 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i = and i32 %101, -16384
  %102 = inttoptr i32 %and.i.i.i.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %102, i32 0, i32 2
  %103 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %task.i.i.i.i, align 8
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @system_freezing_cnt, i32 noundef 4) #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_freezing_cnt to i32))
  %105 = load volatile i32, ptr @system_freezing_cnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %105)
  %tobool.not.i.i.i.i.i = icmp eq i32 %105, 0
  br i1 %tobool.not.i.i.i.i.i, label %if.end.i.i.i.cleanup232_crit_edge, label %freezing.exit.i.i.i.i, !prof !509

if.end.i.i.i.cleanup232_crit_edge:                ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup232

freezing.exit.i.i.i.i:                            ; preds = %if.end.i.i.i
  %call4.i.i.i.i.i = tail call zeroext i1 @freezing_slow_path(ptr noundef %104) #15
  br i1 %call4.i.i.i.i.i, label %if.end.i.i.i.i, label %freezing.exit.i.i.i.i.cleanup232_crit_edge, !prof !510

freezing.exit.i.i.i.i.cleanup232_crit_edge:       ; preds = %freezing.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup232

if.end.i.i.i.i:                                   ; preds = %freezing.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %call6.i.i.i.i = tail call zeroext i1 @__refrigerator(i1 noundef zeroext false) #15
  br label %cleanup232

if.else228:                                       ; preds = %if.end111
  %stack.i.i.i.i283 = getelementptr inbounds %struct.task_struct, ptr %66, i32 0, i32 1
  %106 = ptrtoint ptr %stack.i.i.i.i283 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %stack.i.i.i.i283, align 4
  %108 = ptrtoint ptr %107 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load volatile i32, ptr %107, align 4
  %and1.i.i.i.i.i.i284 = and i32 %109, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i.i284)
  %tobool.not.i.i285 = icmp eq i32 %and1.i.i.i.i.i.i284, 0
  br i1 %tobool.not.i.i285, label %if.else228.lor.end.i292_crit_edge, label %fatal_signal_pending.exit.i288

if.else228.lor.end.i292_crit_edge:                ; preds = %if.else228
  call void @__sanitizer_cov_trace_pc() #17
  br label %lor.end.i292

fatal_signal_pending.exit.i288:                   ; preds = %if.else228
  %signal.i.i.i286 = getelementptr inbounds %struct.task_struct, ptr %66, i32 0, i32 116, i32 1
  %110 = ptrtoint ptr %signal.i.i.i286 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %signal.i.i.i286, align 4
  %112 = and i32 %111, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %112)
  %tobool27.not.i287 = icmp eq i32 %112, 0
  br i1 %tobool27.not.i287, label %fatal_signal_pending.exit.i288.lor.end.i292_crit_edge, label %fatal_signal_pending.exit.i288.cleanup232_crit_edge, !prof !509

fatal_signal_pending.exit.i288.cleanup232_crit_edge: ; preds = %fatal_signal_pending.exit.i288
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup232

fatal_signal_pending.exit.i288.lor.end.i292_crit_edge: ; preds = %fatal_signal_pending.exit.i288
  call void @__sanitizer_cov_trace_pc() #17
  br label %lor.end.i292

lor.end.i292:                                     ; preds = %fatal_signal_pending.exit.i288.lor.end.i292_crit_edge, %if.else228.lor.end.i292_crit_edge
  %flags.i289 = getelementptr inbounds %struct.task_struct, ptr %66, i32 0, i32 3
  %113 = ptrtoint ptr %flags.i289 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %flags.i289, align 4
  %and28.i290 = and i32 %114, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28.i290)
  %tobool29.not.i291 = icmp eq i32 %and28.i290, 0
  br i1 %tobool29.not.i291, label %if.end37.i293, label %lor.end.i292.cleanup232_crit_edge, !prof !509

lor.end.i292.cleanup232_crit_edge:                ; preds = %lor.end.i292
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup232

if.end37.i293:                                    ; preds = %lor.end.i292
  call void @__sanitizer_cov_trace_pc() #17
  %jobctl43.i294 = getelementptr inbounds %struct.task_struct, ptr %66, i32 0, i32 61
  %115 = ptrtoint ptr %jobctl43.i294 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %jobctl43.i294, align 4
  %or.i295 = or i32 %116, 524288
  store i32 %or.i295, ptr %jobctl43.i294, align 4
  br label %cleanup232

cleanup232:                                       ; preds = %if.end37.i293, %lor.end.i292.cleanup232_crit_edge, %fatal_signal_pending.exit.i288.cleanup232_crit_edge, %if.end.i.i.i.i, %freezing.exit.i.i.i.i.cleanup232_crit_edge, %if.end.i.i.i.cleanup232_crit_edge, %lor.lhs.false60.cleanup232_crit_edge, %lor.lhs.false.cleanup232_crit_edge, %if.end33.cleanup232_crit_edge
  %retval.1 = phi i1 [ false, %lor.lhs.false60.cleanup232_crit_edge ], [ false, %lor.lhs.false.cleanup232_crit_edge ], [ false, %if.end33.cleanup232_crit_edge ], [ true, %if.end.i.i.i.cleanup232_crit_edge ], [ true, %freezing.exit.i.i.i.i.cleanup232_crit_edge ], [ true, %if.end.i.i.i.i ], [ false, %fatal_signal_pending.exit.i288.cleanup232_crit_edge ], [ false, %lor.end.i292.cleanup232_crit_edge ], [ false, %if.end37.i293 ]
  ret i1 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @do_jobctl_trap() unnamed_addr #0 align 64 {
entry:
  %info.i = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %signal1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 111
  %4 = ptrtoint ptr %signal1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %signal1, align 16
  %jobctl = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 61
  %6 = ptrtoint ptr %jobctl to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %jobctl, align 4
  %and = and i32 %7, 65535
  %ptrace = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 4
  %8 = ptrtoint ptr %ptrace to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ptrace, align 16
  %and6 = and i32 %9, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool.not = icmp eq i32 %and6, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %group_stop_count = getelementptr inbounds %struct.signal_struct, ptr %5, i32 0, i32 11
  %10 = ptrtoint ptr %group_stop_count to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %group_stop_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool7.not = icmp eq i32 %11, 0
  br i1 %tobool7.not, label %land.lhs.true, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true:                                    ; preds = %if.then
  %flags = getelementptr inbounds %struct.signal_struct, ptr %5, i32 0, i32 12
  %12 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %flags, align 8
  %and8 = and i32 %13, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  br i1 %tobool9.not, label %land.lhs.true.if.end42_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true.if.end42_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end42

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %if.then.if.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool11.not = icmp eq i32 %and, 0
  br i1 %tobool11.not, label %land.rhs, label %if.end.if.end42_crit_edge

if.end.if.end42_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end42

land.rhs:                                         ; preds = %if.end
  %.b120 = load i1, ptr @do_jobctl_trap.__already_done, align 1
  br i1 %.b120, label %land.rhs.if.end42_crit_edge, label %if.then20, !prof !509

land.rhs.if.end42_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end42

if.then20:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @do_jobctl_trap.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2506, i32 noundef 9, ptr noundef null) #15
  br label %if.end42

if.end42:                                         ; preds = %if.then20, %land.rhs.if.end42_crit_edge, %if.end.if.end42_crit_edge, %land.lhs.true.if.end42_crit_edge
  %signr.0123 = phi i32 [ %and, %if.end.if.end42_crit_edge ], [ 0, %if.then20 ], [ 0, %land.rhs.if.end42_crit_edge ], [ 5, %land.lhs.true.if.end42_crit_edge ]
  %or = or i32 %signr.0123, 32768
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info.i) #15
  %14 = getelementptr inbounds %struct.anon, ptr %info.i, i32 0, i32 2
  %15 = getelementptr inbounds %struct.anon, ptr %info.i, i32 0, i32 3
  %16 = getelementptr inbounds %struct.anon, ptr %info.i, i32 0, i32 3, i32 0, i32 1
  %17 = getelementptr inbounds i8, ptr %info.i, i32 4
  %18 = call ptr @memset(ptr %17, i32 0, i32 28)
  %19 = ptrtoint ptr %info.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %signr.0123, ptr %info.i, align 4
  %20 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %or, ptr %14, align 4
  %21 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i = and i32 %21, -16384
  %22 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 2
  %23 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %task.i, align 8
  %call.i.i = tail call i32 @__task_pid_nr_ns(ptr noundef %24, i32 noundef 0, ptr noundef null) #15
  %25 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %call.i.i, ptr %15, align 4
  %26 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %27, i32 0, i32 99
  %28 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %cred.i, align 16
  %user_ns.i = getelementptr inbounds %struct.cred, ptr %29, i32 0, i32 25
  %30 = ptrtoint ptr %user_ns.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %user_ns.i, align 4
  %uid.i = getelementptr inbounds %struct.cred, ptr %29, i32 0, i32 4
  %32 = ptrtoint ptr %uid.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %agg.tmp.sroa.0.0.copyload.i = load i32, ptr %uid.i, align 4
  %.fca.0.insert.i = insertvalue [1 x i32] poison, i32 %agg.tmp.sroa.0.0.copyload.i, 0
  %call12.i = tail call i32 @from_kuid_munged(ptr noundef %31, [1 x i32] %.fca.0.insert.i) #15
  %33 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %call12.i, ptr %16, align 4
  call fastcc void @ptrace_stop(i32 noundef %or, i32 noundef 5, i32 noundef 1, ptr noundef nonnull %info.i) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info.i) #15
  br label %if.end108

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool51.not = icmp eq i32 %and, 0
  br i1 %tobool51.not, label %land.rhs60, label %if.else.if.end98_crit_edge

if.else.if.end98_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end98

land.rhs60:                                       ; preds = %if.else
  %.b118119 = load i1, ptr @do_jobctl_trap.__already_done.105, align 1
  br i1 %.b118119, label %land.rhs60.if.end98_crit_edge, label %if.then71, !prof !509

land.rhs60.if.end98_crit_edge:                    ; preds = %land.rhs60
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end98

if.then71:                                        ; preds = %land.rhs60
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @do_jobctl_trap.__already_done.105, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2510, i32 noundef 9, ptr noundef null) #15
  br label %if.end98

if.end98:                                         ; preds = %if.then71, %land.rhs60.if.end98_crit_edge, %if.else.if.end98_crit_edge
  tail call fastcc void @ptrace_stop(i32 noundef %and, i32 noundef 5, i32 noundef 0, ptr noundef null)
  %34 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %task, align 8
  %exit_code = getelementptr inbounds %struct.task_struct, ptr %35, i32 0, i32 58
  %36 = ptrtoint ptr %exit_code to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 0, ptr %exit_code, align 16
  br label %if.end108

if.end108:                                        ; preds = %if.end98, %if.end42
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @do_freezer_trap() #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %jobctl = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 61
  %4 = ptrtoint ptr %jobctl to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %jobctl, align 4
  %and = and i32 %5, 10092544
  call void @__sanitizer_cov_trace_const_cmp4(i32 8388608, i32 %and)
  %cmp.not = icmp eq i32 %and, 8388608
  br i1 %cmp.not, label %__here, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %sighand = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 112
  %6 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %7) #15
  br label %return

__here:                                           ; preds = %entry
  %task_state_change = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 212
  %8 = ptrtoint ptr %task_state_change to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 ptrtoint (ptr blockaddress(@do_freezer_trap, %__here) to i32), ptr %task_state_change, align 4
  %9 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %task, align 8
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile i32 1, ptr %10, align 128
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %1) #15
  %12 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task, align 8
  %sighand60 = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 112
  %14 = ptrtoint ptr %sighand60 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %sighand60, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %15) #15
  tail call void @cgroup_enter_frozen() #15
  %16 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 2
  %18 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task.i.i, align 8
  %flags.i.i = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 3
  %20 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flags.i.i, align 4
  %or.i.i = or i32 %21, 1073741824
  store i32 %or.i.i, ptr %flags.i.i, align 4
  tail call void @schedule() #15
  %22 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i1.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i1.i to ptr
  %task.i2.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %task.i2.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %task.i2.i, align 8
  %flags.i3.i = getelementptr inbounds %struct.task_struct, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %flags.i3.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %flags.i3.i, align 4
  %and.i.i = and i32 %27, -1073741825
  store i32 %and.i.i, ptr %flags.i3.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !541
  %28 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i = and i32 %28, -16384
  %29 = inttoptr i32 %and.i.i.i.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %29, i32 0, i32 2
  %30 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %task.i.i.i, align 8
  %flags.i.i.i = getelementptr inbounds %struct.task_struct, ptr %31, i32 0, i32 3
  %32 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %flags.i.i.i, align 4
  %and.i4.i.i = and i32 %33, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i4.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i4.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %__here.if.end.i.i.i_crit_edge

__here.if.end.i.i.i_crit_edge:                    ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i.i

if.then.i.i.i:                                    ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @debug_check_no_locks_held() #15
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then.i.i.i, %__here.if.end.i.i.i_crit_edge
  tail call void @__might_sleep(ptr noundef nonnull @.str.102, i32 noundef 57) #15
  %34 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i.i.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 2
  %36 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %task.i.i.i.i, align 8
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @system_freezing_cnt, i32 noundef 4) #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_freezing_cnt to i32))
  %38 = load volatile i32, ptr @system_freezing_cnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool.not.i.i.i.i.i = icmp eq i32 %38, 0
  br i1 %tobool.not.i.i.i.i.i, label %if.end.i.i.i.return_crit_edge, label %freezing.exit.i.i.i.i, !prof !509

if.end.i.i.i.return_crit_edge:                    ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

freezing.exit.i.i.i.i:                            ; preds = %if.end.i.i.i
  %call4.i.i.i.i.i = tail call zeroext i1 @freezing_slow_path(ptr noundef %37) #15
  br i1 %call4.i.i.i.i.i, label %if.end.i.i.i.i, label %freezing.exit.i.i.i.i.return_crit_edge, !prof !510

freezing.exit.i.i.i.i.return_crit_edge:           ; preds = %freezing.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end.i.i.i.i:                                   ; preds = %freezing.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %call6.i.i.i.i = tail call zeroext i1 @__refrigerator(i1 noundef zeroext false) #15
  br label %return

return:                                           ; preds = %if.end.i.i.i.i, %freezing.exit.i.i.i.i.return_crit_edge, %if.end.i.i.i.return_crit_edge, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @cgroup_leave_frozen(i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @ptrace_signal(i32 noundef %signr, ptr noundef %info, i32 noundef %type) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %jobctl = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 61
  %4 = ptrtoint ptr %jobctl to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %jobctl, align 4
  %or = or i32 %5, 65536
  store i32 %or, ptr %jobctl, align 4
  tail call fastcc void @ptrace_stop(i32 noundef %signr, i32 noundef 4, i32 noundef 0, ptr noundef %info)
  %6 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task, align 8
  %exit_code = getelementptr inbounds %struct.task_struct, ptr %7, i32 0, i32 58
  %8 = ptrtoint ptr %exit_code to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %exit_code, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp = icmp eq i32 %9, 0
  br i1 %cmp, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end:                                           ; preds = %entry
  %10 = ptrtoint ptr %exit_code to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %exit_code, align 16
  %11 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %info, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %12)
  %cmp6.not = icmp eq i32 %9, %12
  br i1 %cmp6.not, label %if.end.if.end34_crit_edge, label %if.then7

if.end.if.end34_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end34

if.then7:                                         ; preds = %if.end
  %13 = getelementptr inbounds i8, ptr %info, i32 12
  %14 = call ptr @memset(ptr %13, i32 0, i32 20)
  %15 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %9, ptr %info, align 4
  %si_errno = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 1
  %16 = ptrtoint ptr %si_errno to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %si_errno, align 4
  %si_code = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %17 = ptrtoint ptr %si_code to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %si_code, align 4
  %18 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %21, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i, label %if.then7.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.then7.rcu_read_lock.exit_crit_edge:            ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.then7
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.then7.rcu_read_lock.exit_crit_edge
  %22 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task, align 8
  %parent = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 72
  %24 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %parent, align 8
  %call.i76 = tail call i32 @__task_pid_nr_ns(ptr noundef %25, i32 noundef 0, ptr noundef null) #15
  %_sifields = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3
  %26 = ptrtoint ptr %_sifields to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %call.i76, ptr %_sifields, align 4
  %27 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %28, i32 0, i32 99
  %29 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %cred, align 16
  %user_ns = getelementptr inbounds %struct.cred, ptr %30, i32 0, i32 25
  %31 = ptrtoint ptr %user_ns to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %user_ns, align 4
  %33 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i65 = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i.i65 to ptr
  %preempt_count.i.i.i.i66 = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i.i66 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i.i66, align 4
  %add.i.i.i67 = add i32 %36, 1
  store volatile i32 %add.i.i.i67, ptr %preempt_count.i.i.i.i66, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i68 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i68, label %rcu_read_lock.exit.rcu_read_lock.exit75_crit_edge, label %land.lhs.true.i71

rcu_read_lock.exit.rcu_read_lock.exit75_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit75

land.lhs.true.i71:                                ; preds = %rcu_read_lock.exit
  %call1.i69 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i69)
  %tobool.not.i70 = icmp eq i32 %call1.i69, 0
  br i1 %tobool.not.i70, label %land.lhs.true.i71.rcu_read_lock.exit75_crit_edge, label %land.lhs.true2.i73

land.lhs.true.i71.rcu_read_lock.exit75_crit_edge: ; preds = %land.lhs.true.i71
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit75

land.lhs.true2.i73:                               ; preds = %land.lhs.true.i71
  %.b4.i72 = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i72, label %land.lhs.true2.i73.rcu_read_lock.exit75_crit_edge, label %if.then.i74

land.lhs.true2.i73.rcu_read_lock.exit75_crit_edge: ; preds = %land.lhs.true2.i73
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit75

if.then.i74:                                      ; preds = %land.lhs.true2.i73
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit75

rcu_read_lock.exit75:                             ; preds = %if.then.i74, %land.lhs.true2.i73.rcu_read_lock.exit75_crit_edge, %land.lhs.true.i71.rcu_read_lock.exit75_crit_edge, %rcu_read_lock.exit.rcu_read_lock.exit75_crit_edge
  %37 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %task, align 8
  %parent20 = getelementptr inbounds %struct.task_struct, ptr %38, i32 0, i32 72
  %39 = ptrtoint ptr %parent20 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %parent20, align 8
  %real_cred = getelementptr inbounds %struct.task_struct, ptr %40, i32 0, i32 98
  %41 = ptrtoint ptr %real_cred to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile ptr, ptr %real_cred, align 4
  %call22 = tail call i32 @rcu_read_lock_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %tobool.not = icmp eq i32 %call22, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit75.do.end30_crit_edge

rcu_read_lock.exit75.do.end30_crit_edge:          ; preds = %rcu_read_lock.exit75
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end30

land.lhs.true:                                    ; preds = %rcu_read_lock.exit75
  %call23 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %land.lhs.true.do.end30_crit_edge, label %land.lhs.true25

land.lhs.true.do.end30_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end30

land.lhs.true25:                                  ; preds = %land.lhs.true
  %.b64 = load i1, ptr @ptrace_signal.__warned.106, align 1
  br i1 %.b64, label %land.lhs.true25.do.end30_crit_edge, label %if.then27

land.lhs.true25.do.end30_crit_edge:               ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end30

if.then27:                                        ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @ptrace_signal.__warned.106, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 2588, ptr noundef nonnull @.str.1) #15
  br label %do.end30

do.end30:                                         ; preds = %if.then27, %land.lhs.true25.do.end30_crit_edge, %land.lhs.true.do.end30_crit_edge, %rcu_read_lock.exit75.do.end30_crit_edge
  %uid = getelementptr inbounds %struct.cred, ptr %42, i32 0, i32 4
  %43 = ptrtoint ptr %uid to i32
  call void @__asan_load4_noabort(i32 %43)
  %___val.sroa.0.0.copyload = load i32, ptr %uid, align 4
  %call.i77 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i77, label %do.end30.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i80

do.end30.rcu_read_unlock.exit_crit_edge:          ; preds = %do.end30
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true.i80:                                ; preds = %do.end30
  %call1.i78 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i78)
  %tobool.not.i79 = icmp eq i32 %call1.i78, 0
  br i1 %tobool.not.i79, label %land.lhs.true.i80.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i82

land.lhs.true.i80.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i80
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true2.i82:                               ; preds = %land.lhs.true.i80
  %.b4.i81 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i81, label %land.lhs.true2.i82.rcu_read_unlock.exit_crit_edge, label %if.then.i83

land.lhs.true2.i82.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i82
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

if.then.i83:                                      ; preds = %land.lhs.true2.i82
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 724, ptr noundef nonnull @.str.91) #15
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i83, %land.lhs.true2.i82.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i80.rcu_read_unlock.exit_crit_edge, %do.end30.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !520
  %44 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i84 = and i32 %44, -16384
  %45 = inttoptr i32 %and.i.i.i.i.i84 to ptr
  %preempt_count.i.i.i.i85 = getelementptr inbounds %struct.thread_info, ptr %45, i32 0, i32 1
  %46 = ptrtoint ptr %preempt_count.i.i.i.i85 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %preempt_count.i.i.i.i85, align 4
  %sub.i.i.i = add i32 %47, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i85, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  %.fca.0.insert = insertvalue [1 x i32] poison, i32 %___val.sroa.0.0.copyload, 0
  %call32 = tail call i32 @from_kuid_munged(ptr noundef %32, [1 x i32] %.fca.0.insert) #15
  %_uid = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 3, i32 0, i32 1
  %48 = ptrtoint ptr %_uid to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %call32, ptr %_uid, align 4
  %call.i86 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i86, label %rcu_read_unlock.exit.rcu_read_unlock.exit96_crit_edge, label %land.lhs.true.i89

rcu_read_unlock.exit.rcu_read_unlock.exit96_crit_edge: ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit96

land.lhs.true.i89:                                ; preds = %rcu_read_unlock.exit
  %call1.i87 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i87)
  %tobool.not.i88 = icmp eq i32 %call1.i87, 0
  br i1 %tobool.not.i88, label %land.lhs.true.i89.rcu_read_unlock.exit96_crit_edge, label %land.lhs.true2.i91

land.lhs.true.i89.rcu_read_unlock.exit96_crit_edge: ; preds = %land.lhs.true.i89
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit96

land.lhs.true2.i91:                               ; preds = %land.lhs.true.i89
  %.b4.i90 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i90, label %land.lhs.true2.i91.rcu_read_unlock.exit96_crit_edge, label %if.then.i92

land.lhs.true2.i91.rcu_read_unlock.exit96_crit_edge: ; preds = %land.lhs.true2.i91
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit96

if.then.i92:                                      ; preds = %land.lhs.true2.i91
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 724, ptr noundef nonnull @.str.91) #15
  br label %rcu_read_unlock.exit96

rcu_read_unlock.exit96:                           ; preds = %if.then.i92, %land.lhs.true2.i91.rcu_read_unlock.exit96_crit_edge, %land.lhs.true.i89.rcu_read_unlock.exit96_crit_edge, %rcu_read_unlock.exit.rcu_read_unlock.exit96_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !520
  %49 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i93 = and i32 %49, -16384
  %50 = inttoptr i32 %and.i.i.i.i.i93 to ptr
  %preempt_count.i.i.i.i94 = getelementptr inbounds %struct.thread_info, ptr %50, i32 0, i32 1
  %51 = ptrtoint ptr %preempt_count.i.i.i.i94 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile i32, ptr %preempt_count.i.i.i.i94, align 4
  %sub.i.i.i95 = add i32 %52, -1
  store volatile i32 %sub.i.i.i95, ptr %preempt_count.i.i.i.i94, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  br label %if.end34

if.end34:                                         ; preds = %rcu_read_unlock.exit96, %if.end.if.end34_crit_edge
  %53 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %task, align 8
  %blocked = getelementptr inbounds %struct.task_struct, ptr %54, i32 0, i32 113
  %sub.i = add i32 %9, -1
  %div3.i = lshr i32 %sub.i, 5
  %arrayidx.i = getelementptr [2 x i32], ptr %blocked, i32 0, i32 %div3.i
  %55 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %arrayidx.i, align 4
  %rem.i = and i32 %sub.i, 31
  %57 = shl nuw i32 1, %rem.i
  %58 = and i32 %56, %57
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %tobool38.not = icmp eq i32 %58, 0
  br i1 %tobool38.not, label %lor.lhs.false, label %if.end34.if.then43_crit_edge

if.end34.if.then43_crit_edge:                     ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then43

lor.lhs.false:                                    ; preds = %if.end34
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %54, i32 0, i32 1
  %59 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %stack.i.i.i, align 4
  %61 = ptrtoint ptr %60 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile i32, ptr %60, align 4
  %and1.i.i.i.i.i = and i32 %62, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i)
  %tobool.not.i98 = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool.not.i98, label %lor.lhs.false.return_crit_edge, label %fatal_signal_pending.exit

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

fatal_signal_pending.exit:                        ; preds = %lor.lhs.false
  %signal.i.i = getelementptr inbounds %struct.task_struct, ptr %54, i32 0, i32 116, i32 1
  %63 = ptrtoint ptr %signal.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %signal.i.i, align 4
  %65 = and i32 %64, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool42.not = icmp eq i32 %65, 0
  br i1 %tobool42.not, label %fatal_signal_pending.exit.return_crit_edge, label %fatal_signal_pending.exit.if.then43_crit_edge

fatal_signal_pending.exit.if.then43_crit_edge:    ; preds = %fatal_signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then43

fatal_signal_pending.exit.return_crit_edge:       ; preds = %fatal_signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.then43:                                        ; preds = %fatal_signal_pending.exit.if.then43_crit_edge, %if.end34.if.then43_crit_edge
  %call46 = tail call fastcc i32 @send_signal(i32 noundef %9, ptr noundef %info, ptr noundef %54, i32 noundef %type)
  br label %return

return:                                           ; preds = %if.then43, %fatal_signal_pending.exit.return_crit_edge, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %entry.return_crit_edge ], [ 0, %if.then43 ], [ %9, %fatal_signal_pending.exit.return_crit_edge ], [ %9, %lor.lhs.false.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @is_current_pgrp_orphaned() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @proc_coredump_connector(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @do_coredump(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @do_group_exit(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @signal_setup_done(i32 noundef %failed, ptr nocapture noundef readonly %ksig, i32 noundef %stepping) local_unnamed_addr #0 align 64 {
entry:
  %blocked.i = alloca %struct.sigset_t, align 4
  %info.i1.i = alloca %struct.kernel_siginfo, align 4
  %info.i.i = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %failed)
  %tobool.not = icmp eq i32 %failed, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %sig = getelementptr inbounds %struct.ksignal, ptr %ksig, i32 0, i32 2
  %0 = ptrtoint ptr %sig to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sig, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 11, i32 %1)
  %cmp.i = icmp eq i32 %1, 11
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info.i.i) #15
  %2 = getelementptr inbounds %struct.anon, ptr %info.i.i, i32 0, i32 1
  %3 = getelementptr inbounds %struct.anon, ptr %info.i.i, i32 0, i32 2
  %4 = getelementptr inbounds %struct.anon, ptr %info.i.i, i32 0, i32 3
  %5 = getelementptr inbounds %struct.anon, ptr %info.i.i, i32 0, i32 3, i32 0, i32 1
  %6 = getelementptr inbounds i8, ptr %info.i.i, i32 20
  %7 = call ptr @memset(ptr %6, i32 0, i32 12)
  %8 = ptrtoint ptr %info.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 11, ptr %info.i.i, align 4
  %9 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %2, align 4
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 128, ptr %3, align 4
  %11 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %4, align 4
  %12 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %5, align 4
  %13 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task.i.i, align 8
  %call2.i.i = call fastcc i32 @force_sig_info_to_task(ptr noundef nonnull %info.i.i, ptr noundef %16, i32 noundef 1) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info.i.i) #15
  br label %if.end

if.else.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info.i1.i) #15
  %17 = getelementptr inbounds %struct.anon, ptr %info.i1.i, i32 0, i32 1
  %18 = getelementptr inbounds %struct.anon, ptr %info.i1.i, i32 0, i32 2
  %19 = getelementptr inbounds %struct.anon, ptr %info.i1.i, i32 0, i32 3
  %20 = getelementptr inbounds %struct.anon, ptr %info.i1.i, i32 0, i32 3, i32 0, i32 1
  %21 = getelementptr inbounds i8, ptr %info.i1.i, i32 20
  %22 = call ptr @memset(ptr %21, i32 0, i32 12)
  %23 = ptrtoint ptr %info.i1.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 11, ptr %info.i1.i, align 4
  %24 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 0, ptr %17, align 4
  %25 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 128, ptr %18, align 4
  %26 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 0, ptr %19, align 4
  %27 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 0, ptr %20, align 4
  %28 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i = and i32 %28, -16384
  %29 = inttoptr i32 %and.i.i.i.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %29, i32 0, i32 2
  %30 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %task.i.i.i, align 8
  %call1.i.i.i = call fastcc i32 @force_sig_info_to_task(ptr noundef nonnull %info.i1.i, ptr noundef %31, i32 noundef 0) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info.i1.i) #15
  br label %if.end

if.else:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %blocked.i) #15
  %32 = getelementptr inbounds [2 x i32], ptr %blocked.i, i32 0, i32 1
  %33 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i2 = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i2 to ptr
  tail call void @_clear_bit(i32 noundef 20, ptr noundef %34) #15
  %35 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i = and i32 %35, -16384
  %36 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %36, i32 0, i32 2
  %37 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %task.i, align 8
  %blocked1.i = getelementptr inbounds %struct.task_struct, ptr %38, i32 0, i32 113
  %sa_mask.i = getelementptr inbounds %struct.sigaction, ptr %ksig, i32 0, i32 3
  %arrayidx.i.i = getelementptr %struct.task_struct, ptr %38, i32 0, i32 113, i32 0, i32 1
  %39 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx.i.i, align 4
  %arrayidx2.i.i = getelementptr %struct.sigaction, ptr %ksig, i32 0, i32 3, i32 0, i32 1
  %41 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %arrayidx2.i.i, align 4
  %or.i.i = or i32 %42, %40
  %43 = ptrtoint ptr %32 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %or.i.i, ptr %32, align 4
  %44 = ptrtoint ptr %blocked1.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %blocked1.i, align 4
  %46 = ptrtoint ptr %sa_mask.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %sa_mask.i, align 4
  %or9.i.i = or i32 %47, %45
  %48 = ptrtoint ptr %blocked.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %or9.i.i, ptr %blocked.i, align 4
  %sa_flags.i = getelementptr inbounds %struct.sigaction, ptr %ksig, i32 0, i32 1
  %49 = ptrtoint ptr %sa_flags.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %sa_flags.i, align 4
  %and.i = and i32 %50, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then.i3, label %if.else.if.end.i_crit_edge

if.else.if.end.i_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

if.then.i3:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  %sig.i = getelementptr inbounds %struct.ksignal, ptr %ksig, i32 0, i32 2
  %51 = ptrtoint ptr %sig.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %sig.i, align 4
  %sub.i.i = add i32 %52, -1
  %rem.i.i = and i32 %sub.i.i, 31
  %shl.i.i = shl nuw i32 1, %rem.i.i
  %div3.i.i = lshr i32 %sub.i.i, 5
  %arrayidx.i14.i = getelementptr [2 x i32], ptr %blocked.i, i32 0, i32 %div3.i.i
  %53 = ptrtoint ptr %arrayidx.i14.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %arrayidx.i14.i, align 4
  %or.i15.i = or i32 %shl.i.i, %54
  store i32 %or.i15.i, ptr %arrayidx.i14.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i3, %if.else.if.end.i_crit_edge
  %55 = ptrtoint ptr %blocked.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %blocked.i, align 4
  %and.i.i16.i = and i32 %56, -262401
  store i32 %and.i.i16.i, ptr %blocked.i, align 4
  call void @__set_current_blocked(ptr noundef nonnull %blocked.i) #15
  %57 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %task.i, align 8
  %sas_ss_flags.i = getelementptr inbounds %struct.task_struct, ptr %58, i32 0, i32 119
  %59 = ptrtoint ptr %sas_ss_flags.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %sas_ss_flags.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %60)
  %tobool7.not.i = icmp sgt i32 %60, -1
  br i1 %tobool7.not.i, label %if.end.i.if.end11.i_crit_edge, label %if.then8.i

if.end.i.if.end11.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end11.i

if.then8.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %sas_ss_sp.i.i = getelementptr inbounds %struct.task_struct, ptr %58, i32 0, i32 117
  %61 = ptrtoint ptr %sas_ss_sp.i.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 0, ptr %sas_ss_sp.i.i, align 64
  %sas_ss_size.i.i = getelementptr inbounds %struct.task_struct, ptr %58, i32 0, i32 118
  %62 = ptrtoint ptr %sas_ss_size.i.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 0, ptr %sas_ss_size.i.i, align 4
  %63 = ptrtoint ptr %sas_ss_flags.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 2, ptr %sas_ss_flags.i, align 8
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then8.i, %if.end.i.if.end11.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %stepping)
  %tobool.not.i.i = icmp eq i32 %stepping, 0
  br i1 %tobool.not.i.i, label %if.end11.i.signal_delivered.exit_crit_edge, label %if.then.i.i

if.end11.i.signal_delivered.exit_crit_edge:       ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %signal_delivered.exit

if.then.i.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @ptrace_notify(i32 noundef 5) #15
  br label %signal_delivered.exit

signal_delivered.exit:                            ; preds = %if.then.i.i, %if.end11.i.signal_delivered.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %blocked.i) #15
  br label %if.end

if.end:                                           ; preds = %signal_delivered.exit, %if.else.i, %if.then.i
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @exit_signals(ptr noundef %tsk) local_unnamed_addr #0 align 64 {
entry:
  %unblocked = alloca %struct.sigset_t, align 8
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %unblocked) #15
  %0 = ptrtoint ptr %unblocked to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %unblocked, align 8, !annotation !511
  %1 = getelementptr inbounds [2 x i32], ptr %unblocked, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %1, align 4, !annotation !511
  tail call void @__might_sleep(ptr noundef nonnull @.str.109, i32 noundef 49) #15
  %3 = tail call ptr @llvm.returnaddress(i32 0) #15
  %4 = ptrtoint ptr %3 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.percpu_rw_semaphore, ptr @cgroup_threadgroup_rwsem, i32 0, i32 5), i32 noundef 0, i32 noundef 0, i32 noundef 1, i32 noundef 1, ptr noundef null, i32 noundef %4) #15
  %5 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %8, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !542
  %call.i.i.i = tail call i32 @rcu_read_lock_any_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.lhs.true.i.i.i, label %entry.rcu_sync_is_idle.exit.i.i_crit_edge

entry.rcu_sync_is_idle.exit.i.i_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_sync_is_idle.exit.i.i

land.lhs.true.i.i.i:                              ; preds = %entry
  %call1.i.i.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool2.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool2.not.i.i.i, label %land.lhs.true.i.i.i.rcu_sync_is_idle.exit.i.i_crit_edge, label %land.lhs.true3.i.i.i

land.lhs.true.i.i.i.rcu_sync_is_idle.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_sync_is_idle.exit.i.i

land.lhs.true3.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  %.b1.i.i.i = load i1, ptr @rcu_sync_is_idle.__warned, align 1
  br i1 %.b1.i.i.i, label %land.lhs.true3.i.i.i.rcu_sync_is_idle.exit.i.i_crit_edge, label %if.then.i.i.i

land.lhs.true3.i.i.i.rcu_sync_is_idle.exit.i.i_crit_edge: ; preds = %land.lhs.true3.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_sync_is_idle.exit.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true3.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_sync_is_idle.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.110, i32 noundef 35, ptr noundef nonnull @.str.111) #15
  br label %rcu_sync_is_idle.exit.i.i

rcu_sync_is_idle.exit.i.i:                        ; preds = %if.then.i.i.i, %land.lhs.true3.i.i.i.rcu_sync_is_idle.exit.i.i_crit_edge, %land.lhs.true.i.i.i.rcu_sync_is_idle.exit.i.i_crit_edge, %entry.rcu_sync_is_idle.exit.i.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @cgroup_threadgroup_rwsem to i32))
  %9 = load volatile i32, ptr @cgroup_threadgroup_rwsem, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool7.not.i.i.i = icmp eq i32 %9, 0
  br i1 %tobool7.not.i.i.i, label %do.body7.i.i, label %if.else.i.i, !prof !509

do.body7.i.i:                                     ; preds = %rcu_sync_is_idle.exit.i.i
  %10 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #15, !srcloc !543
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.percpu_rw_semaphore, ptr @cgroup_threadgroup_rwsem, i32 0, i32 1) to i32))
  %11 = load ptr, ptr getelementptr inbounds (%struct.percpu_rw_semaphore, ptr @cgroup_threadgroup_rwsem, i32 0, i32 1), align 4
  %12 = ptrtoint ptr %11 to i32
  %13 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 3
  %15 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %16
  %17 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %18, %12
  %19 = inttoptr i32 %add.i.i to ptr
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %19, align 4
  %add21.i.i = add i32 %21, 1
  store i32 %add21.i.i, ptr %19, align 4
  %22 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #15, !srcloc !544
  %and.i.i.i.i = and i32 %22, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool32.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool32.not.i.i, label %if.then41.i.i, label %do.body7.i.i.do.end43.i.i_crit_edge, !prof !510

do.body7.i.i.do.end43.i.i_crit_edge:              ; preds = %do.body7.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end43.i.i

if.then41.i.i:                                    ; preds = %do.body7.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @warn_bogus_irq_restore() #15
  br label %do.end43.i.i

do.end43.i.i:                                     ; preds = %if.then41.i.i, %do.body7.i.i.do.end43.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %10) #15, !srcloc !545
  br label %cgroup_threadgroup_change_begin.exit

if.else.i.i:                                      ; preds = %rcu_sync_is_idle.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %call50.i.i = tail call zeroext i1 @__percpu_down_read(ptr noundef nonnull @cgroup_threadgroup_rwsem, i1 noundef zeroext false) #15
  br label %cgroup_threadgroup_change_begin.exit

cgroup_threadgroup_change_begin.exit:             ; preds = %if.else.i.i, %do.end43.i.i
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !546
  %23 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i1.i.i = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %preempt_count.i.i2.i.i = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %preempt_count.i.i2.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %preempt_count.i.i2.i.i, align 4
  %sub.i.i.i = add i32 %26, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i2.i.i, align 4
  %thread_group.i = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 80
  %27 = ptrtoint ptr %thread_group.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile ptr, ptr %thread_group.i, align 4
  %cmp.i.i.not = icmp eq ptr %28, %thread_group.i
  br i1 %cmp.i.i.not, label %cgroup_threadgroup_change_begin.exit.if.then_crit_edge, label %lor.lhs.false

cgroup_threadgroup_change_begin.exit.if.then_crit_edge: ; preds = %cgroup_threadgroup_change_begin.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

lor.lhs.false:                                    ; preds = %cgroup_threadgroup_change_begin.exit
  %signal = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 111
  %29 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %signal, align 16
  %flags = getelementptr inbounds %struct.signal_struct, ptr %30, i32 0, i32 12
  %31 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %flags, align 8
  %and = and i32 %32, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %if.end, label %lor.lhs.false.if.then_crit_edge

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %cgroup_threadgroup_change_begin.exit.if.then_crit_edge
  %flags2 = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 3
  %33 = ptrtoint ptr %flags2 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %flags2, align 4
  %or = or i32 %34, 4
  store i32 %or, ptr %flags2, align 4
  tail call fastcc void @cgroup_threadgroup_change_end()
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %sighand = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 112
  %35 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_lock_irq(ptr noundef %36) #15
  %flags3 = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 3
  %37 = ptrtoint ptr %flags3 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %flags3, align 4
  %or4 = or i32 %38, 4
  store i32 %or4, ptr %flags3, align 4
  tail call fastcc void @cgroup_threadgroup_change_end()
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 1
  %39 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %stack.i.i, align 4
  %41 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %40, align 4
  %and1.i.i.i.i = and i32 %42, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %tobool6.not = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %tobool6.not, label %if.end.out.thread_crit_edge, label %if.end8

if.end.out.thread_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.thread

if.end8:                                          ; preds = %if.end
  %blocked = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 113
  %43 = ptrtoint ptr %blocked to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %blocked, align 8
  %45 = trunc i64 %44 to i32
  %neg.i = xor i32 %45, -1
  %46 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %neg.i, ptr %1, align 4
  %47 = lshr i64 %44, 32
  %48 = trunc i64 %47 to i32
  %neg5.i = xor i32 %48, -1
  %49 = ptrtoint ptr %unblocked to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %neg5.i, ptr %unblocked, align 8
  call fastcc void @retarget_shared_pending(ptr noundef %tsk, ptr noundef nonnull %unblocked)
  %jobctl = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 61
  %50 = ptrtoint ptr %jobctl to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %jobctl, align 4
  %and9 = and i32 %51, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9)
  %tobool10.not = icmp eq i32 %and9, 0
  br i1 %tobool10.not, label %if.end8.out.thread_crit_edge, label %out, !prof !509

if.end8.out.thread_crit_edge:                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.thread

out.thread:                                       ; preds = %if.end8.out.thread_crit_edge, %if.end.out.thread_crit_edge
  %52 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %53) #15
  br label %cleanup

out:                                              ; preds = %if.end8
  %call13 = tail call fastcc zeroext i1 @task_participate_group_stop(ptr noundef %tsk)
  %54 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %55) #15
  br i1 %call13, label %if.then25, label %out.cleanup_crit_edge, !prof !510

out.cleanup_crit_edge:                            ; preds = %out
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then25:                                        ; preds = %out
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @_raw_read_lock(ptr noundef nonnull @tasklist_lock) #15
  tail call fastcc void @do_notify_parent_cldstop(ptr noundef %tsk, i1 noundef zeroext false, i32 noundef 5)
  tail call void @_raw_read_unlock(ptr noundef nonnull @tasklist_lock) #15
  br label %cleanup

cleanup:                                          ; preds = %if.then25, %out.cleanup_crit_edge, %out.thread, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %unblocked) #15
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @cgroup_threadgroup_change_end() unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = tail call ptr @llvm.returnaddress(i32 0) #15
  %1 = ptrtoint ptr %0 to i32
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.percpu_rw_semaphore, ptr @cgroup_threadgroup_rwsem, i32 0, i32 5), i32 noundef %1) #15
  %2 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %5, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !547
  %call.i.i = tail call i32 @rcu_read_lock_any_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %entry.rcu_sync_is_idle.exit.i_crit_edge

entry.rcu_sync_is_idle.exit.i_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_sync_is_idle.exit.i

land.lhs.true.i.i:                                ; preds = %entry
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool2.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.rcu_sync_is_idle.exit.i_crit_edge, label %land.lhs.true3.i.i

land.lhs.true.i.i.rcu_sync_is_idle.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_sync_is_idle.exit.i

land.lhs.true3.i.i:                               ; preds = %land.lhs.true.i.i
  %.b1.i.i = load i1, ptr @rcu_sync_is_idle.__warned, align 1
  br i1 %.b1.i.i, label %land.lhs.true3.i.i.rcu_sync_is_idle.exit.i_crit_edge, label %if.then.i.i

land.lhs.true3.i.i.rcu_sync_is_idle.exit.i_crit_edge: ; preds = %land.lhs.true3.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_sync_is_idle.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true3.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_sync_is_idle.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.110, i32 noundef 35, ptr noundef nonnull @.str.111) #15
  br label %rcu_sync_is_idle.exit.i

rcu_sync_is_idle.exit.i:                          ; preds = %if.then.i.i, %land.lhs.true3.i.i.rcu_sync_is_idle.exit.i_crit_edge, %land.lhs.true.i.i.rcu_sync_is_idle.exit.i_crit_edge, %entry.rcu_sync_is_idle.exit.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @cgroup_threadgroup_rwsem to i32))
  %6 = load volatile i32, ptr @cgroup_threadgroup_rwsem, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool7.not.i.i = icmp eq i32 %6, 0
  br i1 %tobool7.not.i.i, label %do.body3.i, label %do.end49.i, !prof !509

do.body3.i:                                       ; preds = %rcu_sync_is_idle.exit.i
  %7 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #15, !srcloc !543
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.percpu_rw_semaphore, ptr @cgroup_threadgroup_rwsem, i32 0, i32 1) to i32))
  %8 = load ptr, ptr getelementptr inbounds (%struct.percpu_rw_semaphore, ptr @cgroup_threadgroup_rwsem, i32 0, i32 1), align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %13
  %14 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %15, %9
  %16 = inttoptr i32 %add.i to ptr
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %16, align 4
  %add17.i = add i32 %18, -1
  store i32 %add17.i, ptr %16, align 4
  %19 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #15, !srcloc !544
  %and.i.i.i = and i32 %19, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool28.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool28.not.i, label %if.then37.i, label %do.body3.i.do.end39.i_crit_edge, !prof !510

do.body3.i.do.end39.i_crit_edge:                  ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end39.i

if.then37.i:                                      ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @warn_bogus_irq_restore() #15
  br label %do.end39.i

do.end39.i:                                       ; preds = %if.then37.i, %do.body3.i.do.end39.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %7) #15, !srcloc !545
  br label %percpu_up_read.exit

do.end49.i:                                       ; preds = %rcu_sync_is_idle.exit.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !548
  %20 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #15, !srcloc !543
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.percpu_rw_semaphore, ptr @cgroup_threadgroup_rwsem, i32 0, i32 1) to i32))
  %21 = load ptr, ptr getelementptr inbounds (%struct.percpu_rw_semaphore, ptr @cgroup_threadgroup_rwsem, i32 0, i32 1), align 4
  %22 = ptrtoint ptr %21 to i32
  %23 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i3.i = and i32 %23, -16384
  %24 = inttoptr i32 %and.i3.i to ptr
  %cpu78.i = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 3
  %25 = ptrtoint ptr %cpu78.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cpu78.i, align 4
  %arrayidx79.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %26
  %27 = ptrtoint ptr %arrayidx79.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx79.i, align 4
  %add80.i = add i32 %28, %22
  %29 = inttoptr i32 %add80.i to ptr
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %29, align 4
  %add81.i = add i32 %31, -1
  store i32 %add81.i, ptr %29, align 4
  %32 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #15, !srcloc !544
  %and.i.i4.i = and i32 %32, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i)
  %tobool92.not.i = icmp eq i32 %and.i.i4.i, 0
  br i1 %tobool92.not.i, label %if.then101.i, label %do.end49.i.do.end104.i_crit_edge, !prof !510

do.end49.i.do.end104.i_crit_edge:                 ; preds = %do.end49.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end104.i

if.then101.i:                                     ; preds = %do.end49.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @warn_bogus_irq_restore() #15
  br label %do.end104.i

do.end104.i:                                      ; preds = %if.then101.i, %do.end49.i.do.end104.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %20) #15, !srcloc !545
  %call111.i = tail call i32 @rcuwait_wake_up(ptr noundef getelementptr inbounds (%struct.percpu_rw_semaphore, ptr @cgroup_threadgroup_rwsem, i32 0, i32 2)) #15
  br label %percpu_up_read.exit

percpu_up_read.exit:                              ; preds = %do.end104.i, %do.end39.i
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !549
  %33 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i1.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i1.i to ptr
  %preempt_count.i.i2.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i2.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i2.i, align 4
  %sub.i.i = add i32 %36, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i2.i, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @retarget_shared_pending(ptr noundef %tsk, ptr nocapture noundef readonly %which) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %signal = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 111
  %0 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %signal, align 16
  %signal1 = getelementptr inbounds %struct.signal_struct, ptr %1, i32 0, i32 6, i32 1
  %arrayidx.i = getelementptr %struct.signal_struct, ptr %1, i32 0, i32 6, i32 1, i32 0, i32 1
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx.i, align 4
  %arrayidx2.i = getelementptr [2 x i32], ptr %which, i32 0, i32 1
  %4 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx2.i, align 4
  %and.i = and i32 %5, %3
  %6 = ptrtoint ptr %signal1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %signal1, align 4
  %8 = ptrtoint ptr %which to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %which, align 4
  %and9.i = and i32 %9, %7
  %or.i = or i32 %and9.i, %and.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i)
  %cmp.i.not = icmp eq i32 %or.i, 0
  br i1 %cmp.i.not, label %entry.cleanup_crit_edge, label %entry.while.cond.outer_crit_edge

entry.while.cond.outer_crit_edge:                 ; preds = %entry
  br label %while.cond.outer

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

while.cond.outer:                                 ; preds = %if.end13.while.cond.outer_crit_edge, %entry.while.cond.outer_crit_edge
  %retarget.sroa.9.0.ph = phi i32 [ %and.i34, %if.end13.while.cond.outer_crit_edge ], [ %and.i, %entry.while.cond.outer_crit_edge ]
  %retarget.sroa.0.0.ph = phi i32 [ %and9.i36, %if.end13.while.cond.outer_crit_edge ], [ %and9.i, %entry.while.cond.outer_crit_edge ]
  %t.0.ph = phi ptr [ %add.ptr.i55, %if.end13.while.cond.outer_crit_edge ], [ %tsk, %entry.while.cond.outer_crit_edge ]
  %thread_group.i52 = getelementptr inbounds %struct.task_struct, ptr %t.0.ph, i32 0, i32 80
  %10 = ptrtoint ptr %thread_group.i52 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %thread_group.i52, align 4
  %add.ptr.i53 = getelementptr i8, ptr %11, i32 -1396
  %cmp.not54 = icmp eq ptr %add.ptr.i53, %tsk
  br i1 %cmp.not54, label %while.cond.outer.cleanup_crit_edge, label %while.cond.outer.while.body_crit_edge

while.cond.outer.while.body_crit_edge:            ; preds = %while.cond.outer
  br label %while.body

while.cond.outer.cleanup_crit_edge:               ; preds = %while.cond.outer
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

while.body:                                       ; preds = %while.cond.backedge.while.body_crit_edge, %while.cond.outer.while.body_crit_edge
  %add.ptr.i55 = phi ptr [ %add.ptr.i, %while.cond.backedge.while.body_crit_edge ], [ %add.ptr.i53, %while.cond.outer.while.body_crit_edge ]
  %12 = phi ptr [ %16, %while.cond.backedge.while.body_crit_edge ], [ %11, %while.cond.outer.while.body_crit_edge ]
  %flags = getelementptr i8, ptr %12, i32 -1384
  %13 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %flags, align 4
  %and = and i32 %14, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  br i1 %tobool3.not, label %if.end5, label %while.body.while.cond.backedge_crit_edge

while.body.while.cond.backedge_crit_edge:         ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.end5.while.cond.backedge_crit_edge, %while.body.while.cond.backedge_crit_edge
  %thread_group.i = getelementptr inbounds %struct.task_struct, ptr %add.ptr.i55, i32 0, i32 80
  %15 = ptrtoint ptr %thread_group.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %thread_group.i, align 4
  %add.ptr.i = getelementptr i8, ptr %16, i32 -1396
  %cmp.not = icmp eq ptr %add.ptr.i, %tsk
  br i1 %cmp.not, label %while.cond.backedge.cleanup_crit_edge, label %while.cond.backedge.while.body_crit_edge

while.cond.backedge.while.body_crit_edge:         ; preds = %while.cond.backedge
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body

while.cond.backedge.cleanup_crit_edge:            ; preds = %while.cond.backedge
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end5:                                          ; preds = %while.body
  %blocked = getelementptr i8, ptr %12, i32 292
  %arrayidx2.i28 = getelementptr i8, ptr %12, i32 296
  %17 = ptrtoint ptr %arrayidx2.i28 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx2.i28, align 4
  %neg.i = xor i32 %18, -1
  %and.i29 = and i32 %retarget.sroa.9.0.ph, %neg.i
  %19 = ptrtoint ptr %blocked to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %blocked, align 4
  %neg7.i = xor i32 %20, -1
  %and8.i = and i32 %retarget.sroa.0.0.ph, %neg7.i
  %or.i30 = or i32 %and8.i, %and.i29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i30)
  %cmp.i31.not = icmp eq i32 %or.i30, 0
  br i1 %cmp.i31.not, label %if.end5.while.cond.backedge_crit_edge, label %if.end8

if.end5.while.cond.backedge_crit_edge:            ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.cond.backedge

if.end8:                                          ; preds = %if.end5
  %and.i34 = and i32 %18, %retarget.sroa.9.0.ph
  %and9.i36 = and i32 %20, %retarget.sroa.0.0.ph
  %stack.i.i = getelementptr i8, ptr %12, i32 -1392
  %21 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %stack.i.i, align 4
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %22, align 4
  %and1.i.i.i.i = and i32 %24, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %tobool11.not = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %tobool11.not, label %if.then12, label %if.end8.if.end13_crit_edge

if.end8.if.end13_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end13

if.then12:                                        ; preds = %if.end8
  tail call void @_set_bit(i32 noundef 0, ptr noundef %22) #15
  %call.i.i = tail call i32 @wake_up_state(ptr noundef %add.ptr.i55, i32 noundef 1) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.then12.if.end13_crit_edge

if.then12.if.end13_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end13

if.then.i.i:                                      ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @kick_process(ptr noundef %add.ptr.i55) #15
  br label %if.end13

if.end13:                                         ; preds = %if.then.i.i, %if.then12.if.end13_crit_edge, %if.end8.if.end13_crit_edge
  %or.i38 = or i32 %and9.i36, %and.i34
  %cmp.i39.not = icmp eq i32 %or.i38, 0
  br i1 %cmp.i39.not, label %if.end13.cleanup_crit_edge, label %if.end13.while.cond.outer_crit_edge

if.end13.while.cond.outer_crit_edge:              ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.cond.outer

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cleanup:                                          ; preds = %if.end13.cleanup_crit_edge, %while.cond.backedge.cleanup_crit_edge, %while.cond.outer.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @task_participate_group_stop(ptr noundef %task) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %signal = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 111
  %0 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %signal, align 16
  %jobctl = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 61
  %2 = ptrtoint ptr %jobctl to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %jobctl, align 4
  %and = and i32 %3, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %and2 = and i32 %3, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br i1 %tobool3.not, label %land.rhs, label %entry.if.end33_crit_edge

entry.if.end33_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end33

land.rhs:                                         ; preds = %entry
  %.b121 = load i1, ptr @task_participate_group_stop.__already_done, align 1
  br i1 %.b121, label %land.rhs.if.end33_crit_edge, label %if.then, !prof !509

land.rhs.if.end33_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end33

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @task_participate_group_stop.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 370, i32 noundef 9, ptr noundef null) #15
  br label %if.end33

if.end33:                                         ; preds = %if.then, %land.rhs.if.end33_crit_edge, %entry.if.end33_crit_edge
  %4 = ptrtoint ptr %jobctl to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %jobctl, align 4
  %and11.i = and i32 %5, -458753
  store i32 %and11.i, ptr %jobctl, align 4
  %6 = and i32 %5, 3670016
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %6)
  %.not.i = icmp eq i32 %6, 2097152
  br i1 %.not.i, label %if.then.i.i, label %if.end33.task_clear_jobctl_pending.exit_crit_edge, !prof !517

if.end33.task_clear_jobctl_pending.exit_crit_edge: ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #17
  br label %task_clear_jobctl_pending.exit

if.then.i.i:                                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #17
  %and4.i.i = and i32 %5, -2555905
  %7 = ptrtoint ptr %jobctl to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %and4.i.i, ptr %jobctl, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !515
  tail call void @wake_up_bit(ptr noundef %jobctl, i32 noundef 21) #15
  br label %task_clear_jobctl_pending.exit

task_clear_jobctl_pending.exit:                   ; preds = %if.then.i.i, %if.end33.task_clear_jobctl_pending.exit_crit_edge
  br i1 %tobool.not, label %task_clear_jobctl_pending.exit.cleanup_crit_edge, label %if.end43

task_clear_jobctl_pending.exit.cleanup_crit_edge: ; preds = %task_clear_jobctl_pending.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end43:                                         ; preds = %task_clear_jobctl_pending.exit
  %group_stop_count = getelementptr inbounds %struct.signal_struct, ptr %1, i32 0, i32 11
  %8 = ptrtoint ptr %group_stop_count to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %group_stop_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp = icmp eq i32 %9, 0
  br i1 %cmp, label %land.rhs51, label %if.then98.critedge

land.rhs51:                                       ; preds = %if.end43
  %.b119120 = load i1, ptr @task_participate_group_stop.__already_done.112, align 1
  br i1 %.b119120, label %land.rhs51.land.lhs.true_crit_edge, label %if.then62, !prof !509

land.rhs51.land.lhs.true_crit_edge:               ; preds = %land.rhs51
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.lhs.true

if.then62:                                        ; preds = %land.rhs51
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @task_participate_group_stop.__already_done.112, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 377, i32 noundef 9, ptr noundef null) #15
  %10 = ptrtoint ptr %group_stop_count to i32
  call void @__asan_load4_noabort(i32 %10)
  %.pr = load i32, ptr %group_stop_count, align 4
  br label %if.end100

if.then98.critedge:                               ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #17
  %dec = add i32 %9, -1
  %11 = ptrtoint ptr %group_stop_count to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %dec, ptr %group_stop_count, align 4
  br label %if.end100

if.end100:                                        ; preds = %if.then98.critedge, %if.then62
  %12 = phi i32 [ %.pr, %if.then62 ], [ %dec, %if.then98.critedge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool102.not = icmp eq i32 %12, 0
  br i1 %tobool102.not, label %if.end100.land.lhs.true_crit_edge, label %if.end100.cleanup_crit_edge

if.end100.cleanup_crit_edge:                      ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end100.land.lhs.true_crit_edge:                ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end100.land.lhs.true_crit_edge, %land.rhs51.land.lhs.true_crit_edge
  %flags = getelementptr inbounds %struct.signal_struct, ptr %1, i32 0, i32 12
  %13 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %flags, align 8
  %and103 = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and103)
  %tobool104.not = icmp eq i32 %and103, 0
  br i1 %tobool104.not, label %if.then105, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then105:                                       ; preds = %land.lhs.true
  %and.i = and i32 %14, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then105.signal_set_stop_flags.exit_crit_edge, label %do.end.i, !prof !509

if.then105.signal_set_stop_flags.exit_crit_edge:  ; preds = %if.then105
  call void @__sanitizer_cov_trace_pc() #17
  br label %signal_set_stop_flags.exit

do.end.i:                                         ; preds = %if.then105
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.97, i32 noundef 270, i32 noundef 9, ptr noundef null) #15
  br label %signal_set_stop_flags.exit

signal_set_stop_flags.exit:                       ; preds = %do.end.i, %if.then105.signal_set_stop_flags.exit_crit_edge
  %15 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %flags, align 8
  %and22.i = and i32 %16, -52
  %or.i = or i32 %and22.i, 1
  store i32 %or.i, ptr %flags, align 8
  br label %cleanup

cleanup:                                          ; preds = %signal_set_stop_flags.exit, %land.lhs.true.cleanup_crit_edge, %if.end100.cleanup_crit_edge, %task_clear_jobctl_pending.exit.cleanup_crit_edge
  %retval.0 = phi i1 [ true, %signal_set_stop_flags.exit ], [ false, %task_clear_jobctl_pending.exit.cleanup_crit_edge ], [ false, %land.lhs.true.cleanup_crit_edge ], [ false, %if.end100.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sys_restart_syscall() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %restart_block = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 67
  %fn = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 67, i32 1
  %4 = ptrtoint ptr %fn to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %fn, align 4
  %call1 = tail call i32 %5(ptr noundef %restart_block) #15
  ret i32 %call1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @do_no_restart_syscall(ptr nocapture noundef readnone %param) local_unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -4
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @set_current_blocked(ptr nocapture noundef %newset) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %newset to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %newset, align 4
  %and.i = and i32 %1, -262401
  store i32 %and.i, ptr %newset, align 4
  tail call void @__set_current_blocked(ptr noundef %newset)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__set_current_blocked(ptr nocapture noundef readonly %newset) local_unnamed_addr #0 align 64 {
entry:
  %newblocked.i = alloca %struct.sigset_t, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %blocked = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 113
  %arrayidx.i = getelementptr %struct.task_struct, ptr %3, i32 0, i32 113, i32 0, i32 1
  %4 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx.i, align 4
  %arrayidx2.i = getelementptr [2 x i32], ptr %newset, i32 0, i32 1
  %6 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx2.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %7)
  %cmp.i = icmp eq i32 %5, %7
  br i1 %cmp.i, label %sigequalsets.exit, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

sigequalsets.exit:                                ; preds = %entry
  %8 = ptrtoint ptr %blocked to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %blocked, align 4
  %10 = ptrtoint ptr %newset to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %newset, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %11)
  %cmp7.i.not = icmp eq i32 %9, %11
  br i1 %cmp7.i.not, label %sigequalsets.exit.cleanup_crit_edge, label %sigequalsets.exit.if.end_crit_edge

sigequalsets.exit.if.end_crit_edge:               ; preds = %sigequalsets.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

sigequalsets.exit.cleanup_crit_edge:              ; preds = %sigequalsets.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %sigequalsets.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %sighand = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 112
  %12 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_lock_irq(ptr noundef %13) #15
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 1
  %14 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %stack.i.i.i, align 4
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %15, align 4
  %and1.i.i.i.i.i = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool.not.i, label %if.end.__set_task_blocked.exit_crit_edge, label %land.lhs.true.i

if.end.__set_task_blocked.exit_crit_edge:         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %__set_task_blocked.exit

land.lhs.true.i:                                  ; preds = %if.end
  %thread_group.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 80
  %18 = ptrtoint ptr %thread_group.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %thread_group.i.i, align 4
  %cmp.i.i.not.i = icmp eq ptr %19, %thread_group.i.i
  br i1 %cmp.i.i.not.i, label %land.lhs.true.i.__set_task_blocked.exit_crit_edge, label %if.then.i

land.lhs.true.i.__set_task_blocked.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__set_task_blocked.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %newblocked.i) #15
  %20 = getelementptr inbounds [2 x i32], ptr %newblocked.i, i32 0, i32 1
  %21 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i = and i32 %21, -16384
  %22 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 2
  %23 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %task.i, align 8
  %blocked.i = getelementptr inbounds %struct.task_struct, ptr %24, i32 0, i32 113
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %arrayidx2.i, align 4
  %arrayidx2.i.i = getelementptr %struct.task_struct, ptr %24, i32 0, i32 113, i32 0, i32 1
  %27 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx2.i.i, align 4
  %neg.i.i = xor i32 %28, -1
  %and.i9.i = and i32 %26, %neg.i.i
  %29 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %and.i9.i, ptr %20, align 4
  %30 = ptrtoint ptr %newset to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %newset, align 4
  %32 = ptrtoint ptr %blocked.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %blocked.i, align 4
  %neg9.i.i = xor i32 %33, -1
  %and10.i.i = and i32 %31, %neg9.i.i
  %34 = ptrtoint ptr %newblocked.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %and10.i.i, ptr %newblocked.i, align 4
  call fastcc void @retarget_shared_pending(ptr noundef %3, ptr noundef nonnull %newblocked.i) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %newblocked.i) #15
  br label %__set_task_blocked.exit

__set_task_blocked.exit:                          ; preds = %if.then.i, %land.lhs.true.i.__set_task_blocked.exit_crit_edge, %if.end.__set_task_blocked.exit_crit_edge
  %35 = ptrtoint ptr %newset to i32
  call void @__asan_loadN_noabort(i32 %35, i32 8)
  %36 = load i64, ptr %newset, align 4
  %37 = ptrtoint ptr %blocked to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 %36, ptr %blocked, align 8
  tail call void @recalc_sigpending() #15
  %38 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %39) #15
  br label %cleanup

cleanup:                                          ; preds = %__set_task_blocked.exit, %sigequalsets.exit.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sigprocmask(i32 noundef %how, ptr nocapture noundef readonly %set, ptr noundef writeonly %oldset) #0 align 64 {
entry:
  %newset = alloca %struct.sigset_t, align 8
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %newset) #15
  %4 = getelementptr inbounds [2 x i32], ptr %newset, i32 0, i32 1
  %tobool.not = icmp eq ptr %oldset, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %blocked = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 113
  %5 = ptrtoint ptr %blocked to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %blocked, align 8
  %7 = ptrtoint ptr %oldset to i32
  call void @__asan_storeN_noabort(i32 %7, i32 8)
  store i64 %6, ptr %oldset, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %8 = zext i32 %how to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.164)
  switch i32 %how, label %if.end.cleanup_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb4
  ]

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

sw.bb:                                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %blocked1 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 113
  %arrayidx.i = getelementptr %struct.task_struct, ptr %3, i32 0, i32 113, i32 0, i32 1
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx.i, align 4
  %arrayidx2.i = getelementptr [2 x i32], ptr %set, i32 0, i32 1
  %11 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx2.i, align 4
  %or.i = or i32 %12, %10
  %13 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %or.i, ptr %4, align 4
  %14 = ptrtoint ptr %blocked1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %blocked1, align 4
  %16 = ptrtoint ptr %set to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %set, align 4
  %or9.i = or i32 %17, %15
  %18 = ptrtoint ptr %newset to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %or9.i, ptr %newset, align 8
  br label %sw.epilog

sw.bb2:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %blocked3 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 113
  %arrayidx.i11 = getelementptr %struct.task_struct, ptr %3, i32 0, i32 113, i32 0, i32 1
  %19 = ptrtoint ptr %arrayidx.i11 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx.i11, align 4
  %arrayidx2.i12 = getelementptr [2 x i32], ptr %set, i32 0, i32 1
  %21 = ptrtoint ptr %arrayidx2.i12 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx2.i12, align 4
  %neg.i = xor i32 %22, -1
  %and.i13 = and i32 %20, %neg.i
  %23 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %and.i13, ptr %4, align 4
  %24 = ptrtoint ptr %blocked3 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %blocked3, align 4
  %26 = ptrtoint ptr %set to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %set, align 4
  %neg9.i = xor i32 %27, -1
  %and10.i = and i32 %25, %neg9.i
  %28 = ptrtoint ptr %newset to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %and10.i, ptr %newset, align 8
  br label %sw.epilog

sw.bb4:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %29 = ptrtoint ptr %set to i32
  call void @__asan_loadN_noabort(i32 %29, i32 8)
  %30 = load i64, ptr %set, align 4
  %31 = ptrtoint ptr %newset to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %30, ptr %newset, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb4, %sw.bb2, %sw.bb
  call void @__set_current_blocked(ptr noundef nonnull %newset)
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %sw.epilog ], [ -22, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %newset) #15
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @set_user_sigmask(ptr noundef %umask, i32 noundef %sigsetsize) local_unnamed_addr #0 align 64 {
entry:
  %kmask = alloca %struct.sigset_t, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %kmask) #15
  %0 = ptrtoint ptr %kmask to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %kmask, align 4, !annotation !511
  %1 = getelementptr inbounds [2 x i32], ptr %kmask, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %1, align 4, !annotation !511
  %tobool.not = icmp eq ptr %umask, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %sigsetsize)
  %cmp.not = icmp eq i32 %sigsetsize, 8
  br i1 %cmp.not, label %if.end59.i.i, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end59.i.i:                                     ; preds = %if.end
  tail call void @__might_fault(ptr noundef nonnull @.str.115, i32 noundef 156) #15
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #15
  br i1 %call.i.i, label %if.end59.i.i.if.then11.i.i_crit_edge, label %land.lhs.true.i.i

if.end59.i.i.if.then11.i.i_crit_edge:             ; preds = %if.end59.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i

land.lhs.true.i.i:                                ; preds = %if.end59.i.i
  %3 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr nonnull %umask, i32 8, i32 -1226833920) #19, !srcloc !550
  %asmresult.i.i = extractvalue { i32, i32 } %3, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i.i, label %land.lhs.true.i.i.if.then11.i.i_crit_edge, !prof !509

land.lhs.true.i.i.if.then11.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %kmask, i32 noundef 8) #15
  %4 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 4
  %6 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #10, !srcloc !551
  %and.i.i.i.i = and i32 %6, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %call1.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %kmask, ptr noundef nonnull %umask, i32 noundef 8) #15
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %6) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool4.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end5, label %if.end.i.i.if.then11.i.i_crit_edge, !prof !509

if.end.i.i.if.then11.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i.if.then11.i.i_crit_edge, %land.lhs.true.i.i.if.then11.i.i_crit_edge, %if.end59.i.i.if.then11.i.i_crit_edge
  %res.0.i.i13 = phi i32 [ %call1.i.i.i, %if.end.i.i.if.then11.i.i_crit_edge ], [ 8, %if.end59.i.i.if.then11.i.i_crit_edge ], [ 8, %land.lhs.true.i.i.if.then11.i.i_crit_edge ]
  %sub.i.i = sub i32 8, %res.0.i.i13
  %add.ptr.i.i = getelementptr i8, ptr %kmask, i32 %sub.i.i
  %7 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i13)
  br label %cleanup

if.end5:                                          ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %8 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i to ptr
  call void @_set_bit(i32 noundef 20, ptr noundef %9) #15
  %10 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task, align 8
  %saved_sigmask = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 115
  %blocked = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 113
  %14 = ptrtoint ptr %blocked to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %blocked, align 8
  %16 = ptrtoint ptr %saved_sigmask to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %15, ptr %saved_sigmask, align 8
  %17 = ptrtoint ptr %kmask to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %kmask, align 4
  %and.i.i10 = and i32 %18, -262401
  store i32 %and.i.i10, ptr %kmask, align 4
  call void @__set_current_blocked(ptr noundef nonnull %kmask) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.then11.i.i, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end5 ], [ 0, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ -14, %if.then11.i.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %kmask) #15
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_rt_sigprocmask(i32 noundef %how, i32 noundef %nset, i32 noundef %oset, i32 noundef %sigsetsize) #0 align 64 {
entry:
  %newset.i.i = alloca %struct.sigset_t, align 8
  %old_set.i = alloca %struct.sigset_t, align 8
  %new_set.i = alloca %struct.sigset_t, align 8
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %nset to ptr
  %1 = inttoptr i32 %oset to ptr
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %old_set.i) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %new_set.i) #15
  %2 = ptrtoint ptr %new_set.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %new_set.i, align 8, !annotation !511
  %3 = getelementptr inbounds [2 x i32], ptr %new_set.i, i32 0, i32 1
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %3, align 4, !annotation !511
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %sigsetsize)
  %cmp.not.i = icmp eq i32 %sigsetsize, 8
  br i1 %cmp.not.i, label %if.end.i, label %entry.__do_sys_rt_sigprocmask.exit_crit_edge

entry.__do_sys_rt_sigprocmask.exit_crit_edge:     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_sigprocmask.exit

if.end.i:                                         ; preds = %entry
  %5 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task.i, align 8
  %blocked.i = getelementptr inbounds %struct.task_struct, ptr %8, i32 0, i32 113
  %9 = ptrtoint ptr %blocked.i to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %blocked.i, align 8
  %11 = ptrtoint ptr %old_set.i to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %old_set.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nset)
  %tobool.not.i = icmp eq i32 %nset, 0
  br i1 %tobool.not.i, label %if.end.i.if.end10.i_crit_edge, label %if.end59.i.i.i

if.end.i.if.end10.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end10.i

if.end59.i.i.i:                                   ; preds = %if.end.i
  tail call void @__might_fault(ptr noundef nonnull @.str.115, i32 noundef 156) #15
  %call.i.i.i = tail call zeroext i1 @should_fail_usercopy() #15
  br i1 %call.i.i.i, label %if.end59.i.i.i.if.then11.i.i.i_crit_edge, label %land.lhs.true.i.i.i

if.end59.i.i.i.if.then11.i.i.i_crit_edge:         ; preds = %if.end59.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i.i

land.lhs.true.i.i.i:                              ; preds = %if.end59.i.i.i
  %12 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr nonnull %0, i32 8, i32 -1226833920) #19, !srcloc !550
  %asmresult.i.i.i = extractvalue { i32, i32 } %12, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i)
  %cmp.i6.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %cmp.i6.i.i, label %if.end.i.i.i, label %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge, !prof !509

land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge:    ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %new_set.i, i32 noundef 8) #15
  %13 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 4
  %15 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i.i) #10, !srcloc !551
  %and.i.i.i.i.i = and i32 %15, -13
  %or.i.i.i.i.i = or i32 %and.i.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i.i) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %call1.i.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %new_set.i, ptr noundef nonnull %0, i32 noundef 8) #15
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %15) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool4.not.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool4.not.i.i.i, label %if.end5.i, label %if.end.i.i.i.if.then11.i.i.i_crit_edge, !prof !509

if.end.i.i.i.if.then11.i.i.i_crit_edge:           ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i.i

if.then11.i.i.i:                                  ; preds = %if.end.i.i.i.if.then11.i.i.i_crit_edge, %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge, %if.end59.i.i.i.if.then11.i.i.i_crit_edge
  %res.0.i.i36.i = phi i32 [ %call1.i.i.i.i, %if.end.i.i.i.if.then11.i.i.i_crit_edge ], [ 8, %if.end59.i.i.i.if.then11.i.i.i_crit_edge ], [ 8, %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge ]
  %sub.i.i.i = sub i32 8, %res.0.i.i36.i
  %add.ptr.i.i.i = getelementptr i8, ptr %new_set.i, i32 %sub.i.i.i
  %16 = call ptr @memset(ptr %add.ptr.i.i.i, i32 0, i32 %res.0.i.i36.i)
  br label %__do_sys_rt_sigprocmask.exit

if.end5.i:                                        ; preds = %if.end.i.i.i
  %17 = ptrtoint ptr %new_set.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %new_set.i, align 8
  %and.i33.i = and i32 %18, -262401
  store i32 %and.i33.i, ptr %new_set.i, align 8
  %19 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 2
  %21 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %task.i.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %newset.i.i) #15
  %23 = getelementptr inbounds [2 x i32], ptr %newset.i.i, i32 0, i32 1
  %24 = zext i32 %how to i64
  call void @__sanitizer_cov_trace_switch(i64 %24, ptr @__sancov_gen_cov_switch_values.165)
  switch i32 %how, label %sigprocmask.exit.i [
    i32 0, label %sw.bb.i.i
    i32 1, label %sw.bb2.i.i
    i32 2, label %sw.bb4.i.i
  ]

sw.bb.i.i:                                        ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #17
  %blocked1.i.i = getelementptr inbounds %struct.task_struct, ptr %22, i32 0, i32 113
  %arrayidx.i.i.i = getelementptr %struct.task_struct, ptr %22, i32 0, i32 113, i32 0, i32 1
  %25 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %arrayidx.i.i.i, align 4
  %27 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %3, align 4
  %or.i.i.i = or i32 %28, %26
  %29 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i.i.i, ptr %23, align 4
  %30 = ptrtoint ptr %blocked1.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %blocked1.i.i, align 4
  %or9.i.i.i = or i32 %31, %and.i33.i
  %32 = ptrtoint ptr %newset.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or9.i.i.i, ptr %newset.i.i, align 8
  br label %sigprocmask.exit.thread.i

sw.bb2.i.i:                                       ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #17
  %blocked3.i.i = getelementptr inbounds %struct.task_struct, ptr %22, i32 0, i32 113
  %arrayidx.i11.i.i = getelementptr %struct.task_struct, ptr %22, i32 0, i32 113, i32 0, i32 1
  %33 = ptrtoint ptr %arrayidx.i11.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx.i11.i.i, align 4
  %35 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %3, align 4
  %neg.i.i.i = xor i32 %36, -1
  %and.i13.i.i = and i32 %34, %neg.i.i.i
  %37 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %and.i13.i.i, ptr %23, align 4
  %38 = ptrtoint ptr %blocked3.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %blocked3.i.i, align 4
  %neg9.i.i.i = xor i32 %and.i33.i, -1
  %and10.i.i.i = and i32 %39, %neg9.i.i.i
  %40 = ptrtoint ptr %newset.i.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %and10.i.i.i, ptr %newset.i.i, align 8
  br label %sigprocmask.exit.thread.i

sw.bb4.i.i:                                       ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #17
  %41 = ptrtoint ptr %new_set.i to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %new_set.i, align 8
  %43 = ptrtoint ptr %newset.i.i to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 %42, ptr %newset.i.i, align 8
  br label %sigprocmask.exit.thread.i

sigprocmask.exit.thread.i:                        ; preds = %sw.bb4.i.i, %sw.bb2.i.i, %sw.bb.i.i
  call void @__set_current_blocked(ptr noundef nonnull %newset.i.i) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %newset.i.i) #15
  br label %if.end10.i

sigprocmask.exit.i:                               ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %newset.i.i) #15
  br label %__do_sys_rt_sigprocmask.exit

if.end10.i:                                       ; preds = %sigprocmask.exit.thread.i, %if.end.i.if.end10.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %oset)
  %tobool11.not.i = icmp eq i32 %oset, 0
  br i1 %tobool11.not.i, label %if.end10.i.if.end17.i_crit_edge, label %if.end59.i.i26.i

if.end10.i.if.end17.i_crit_edge:                  ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end17.i

if.end59.i.i26.i:                                 ; preds = %if.end10.i
  call void @__might_fault(ptr noundef nonnull @.str.115, i32 noundef 174) #15
  %call.i.i27.i = call zeroext i1 @should_fail_usercopy() #15
  br i1 %call.i.i27.i, label %if.end59.i.i26.i.__do_sys_rt_sigprocmask.exit_crit_edge, label %if.end.i.i30.i

if.end59.i.i26.i.__do_sys_rt_sigprocmask.exit_crit_edge: ; preds = %if.end59.i.i26.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_sigprocmask.exit

if.end.i.i30.i:                                   ; preds = %if.end59.i.i26.i
  %44 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr nonnull %1, i32 8, i32 -1226833920) #19, !srcloc !554
  %asmresult.i.i28.i = extractvalue { i32, i32 } %44, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i28.i)
  %cmp.i6.i29.i = icmp eq i32 %asmresult.i.i28.i, 0
  br i1 %cmp.i6.i29.i, label %copy_to_user.exit.i, label %if.end.i.i30.i.__do_sys_rt_sigprocmask.exit_crit_edge

if.end.i.i30.i.__do_sys_rt_sigprocmask.exit_crit_edge: ; preds = %if.end.i.i30.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_sigprocmask.exit

copy_to_user.exit.i:                              ; preds = %if.end.i.i30.i
  %call.i.i.i31.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %old_set.i, i32 noundef 8) #15
  %call.i12.i.i.i = call i32 @arm_copy_to_user(ptr noundef nonnull %1, ptr noundef nonnull %old_set.i, i32 noundef 8) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i.i)
  %tobool14.not.i = icmp eq i32 %call.i12.i.i.i, 0
  br i1 %tobool14.not.i, label %copy_to_user.exit.i.if.end17.i_crit_edge, label %copy_to_user.exit.i.__do_sys_rt_sigprocmask.exit_crit_edge

copy_to_user.exit.i.__do_sys_rt_sigprocmask.exit_crit_edge: ; preds = %copy_to_user.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_sigprocmask.exit

copy_to_user.exit.i.if.end17.i_crit_edge:         ; preds = %copy_to_user.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end17.i

if.end17.i:                                       ; preds = %copy_to_user.exit.i.if.end17.i_crit_edge, %if.end10.i.if.end17.i_crit_edge
  br label %__do_sys_rt_sigprocmask.exit

__do_sys_rt_sigprocmask.exit:                     ; preds = %if.end17.i, %copy_to_user.exit.i.__do_sys_rt_sigprocmask.exit_crit_edge, %if.end.i.i30.i.__do_sys_rt_sigprocmask.exit_crit_edge, %if.end59.i.i26.i.__do_sys_rt_sigprocmask.exit_crit_edge, %sigprocmask.exit.i, %if.then11.i.i.i, %entry.__do_sys_rt_sigprocmask.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end17.i ], [ -22, %entry.__do_sys_rt_sigprocmask.exit_crit_edge ], [ -22, %sigprocmask.exit.i ], [ -14, %copy_to_user.exit.i.__do_sys_rt_sigprocmask.exit_crit_edge ], [ -14, %if.then11.i.i.i ], [ -14, %if.end59.i.i26.i.__do_sys_rt_sigprocmask.exit_crit_edge ], [ -14, %if.end.i.i30.i.__do_sys_rt_sigprocmask.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %new_set.i) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %old_set.i) #15
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_rt_sigpending(i32 noundef %uset, i32 noundef %sigsetsize) #0 align 64 {
entry:
  %set.i = alloca %struct.sigset_t, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %uset to ptr
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %set.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %sigsetsize)
  %cmp.i = icmp ugt i32 %sigsetsize, 8
  br i1 %cmp.i, label %entry.__do_sys_rt_sigpending.exit_crit_edge, label %if.end.i

entry.__do_sys_rt_sigpending.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_sigpending.exit

if.end.i:                                         ; preds = %entry
  %1 = getelementptr inbounds [2 x i32], ptr %set.i, i32 0, i32 1
  %2 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task.i.i, align 8
  %sighand.i.i = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 112
  %6 = ptrtoint ptr %sighand.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sighand.i.i, align 4
  tail call void @_raw_spin_lock_irq(ptr noundef %7) #15
  %8 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task.i.i, align 8
  %signal.i.i = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 116, i32 1
  %signal5.i.i = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 111
  %10 = ptrtoint ptr %signal5.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %signal5.i.i, align 16
  %signal6.i.i = getelementptr inbounds %struct.signal_struct, ptr %11, i32 0, i32 6, i32 1
  %arrayidx.i.i.i = getelementptr %struct.task_struct, ptr %9, i32 0, i32 116, i32 1, i32 0, i32 1
  %12 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.i.i.i, align 4
  %arrayidx2.i.i.i = getelementptr %struct.signal_struct, ptr %11, i32 0, i32 6, i32 1, i32 0, i32 1
  %14 = ptrtoint ptr %arrayidx2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx2.i.i.i, align 4
  %or.i.i.i = or i32 %15, %13
  %16 = ptrtoint ptr %signal.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %signal.i.i, align 4
  %18 = ptrtoint ptr %signal6.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %signal6.i.i, align 4
  %or9.i.i.i = or i32 %19, %17
  %sighand9.i.i = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 112
  %20 = ptrtoint ptr %sighand9.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %sighand9.i.i, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %21) #15
  %22 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task.i.i, align 8
  %blocked.i.i = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 113
  %arrayidx.i15.i.i = getelementptr %struct.task_struct, ptr %23, i32 0, i32 113, i32 0, i32 1
  %24 = ptrtoint ptr %arrayidx.i15.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx.i15.i.i, align 4
  %and.i17.i.i = and i32 %25, %or.i.i.i
  %26 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %and.i17.i.i, ptr %1, align 4
  %27 = ptrtoint ptr %blocked.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %blocked.i.i, align 4
  %and9.i.i.i = and i32 %28, %or9.i.i.i
  %29 = ptrtoint ptr %set.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %and9.i.i.i, ptr %set.i, align 4
  call void @__check_object_size(ptr noundef nonnull %set.i, i32 noundef %sigsetsize, i1 noundef zeroext true) #15
  call void @__might_fault(ptr noundef nonnull @.str.115, i32 noundef 174) #15
  %call.i.i.i = call zeroext i1 @should_fail_usercopy() #15
  br i1 %call.i.i.i, label %if.end.i.copy_to_user.exit.i_crit_edge, label %if.end.i.i.i

if.end.i.copy_to_user.exit.i_crit_edge:           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %copy_to_user.exit.i

if.end.i.i.i:                                     ; preds = %if.end.i
  %30 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %0, i32 %sigsetsize, i32 -1226833920) #19, !srcloc !554
  %asmresult.i.i.i = extractvalue { i32, i32 } %30, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i)
  %cmp.i6.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %cmp.i6.i.i, label %if.then2.i.i.i, label %if.end.i.i.i.copy_to_user.exit.i_crit_edge

if.end.i.i.i.copy_to_user.exit.i_crit_edge:       ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %copy_to_user.exit.i

if.then2.i.i.i:                                   ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %set.i, i32 noundef %sigsetsize) #15
  %call.i12.i.i.i = call i32 @arm_copy_to_user(ptr noundef %0, ptr noundef nonnull %set.i, i32 noundef %sigsetsize) #15
  br label %copy_to_user.exit.i

copy_to_user.exit.i:                              ; preds = %if.then2.i.i.i, %if.end.i.i.i.copy_to_user.exit.i_crit_edge, %if.end.i.copy_to_user.exit.i_crit_edge
  %n.addr.0.i.i = phi i32 [ %sigsetsize, %if.end.i.copy_to_user.exit.i_crit_edge ], [ %call.i12.i.i.i, %if.then2.i.i.i ], [ %sigsetsize, %if.end.i.i.i.copy_to_user.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i.i)
  %tobool.not.i = icmp eq i32 %n.addr.0.i.i, 0
  %..i = select i1 %tobool.not.i, i32 0, i32 -14
  br label %__do_sys_rt_sigpending.exit

__do_sys_rt_sigpending.exit:                      ; preds = %copy_to_user.exit.i, %entry.__do_sys_rt_sigpending.exit_crit_edge
  %retval.0.i = phi i32 [ -22, %entry.__do_sys_rt_sigpending.exit_crit_edge ], [ %..i, %copy_to_user.exit.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %set.i) #15
  ret i32 %retval.0.i
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @siginfo_layout(i32 noundef %sig, i32 noundef %si_code) local_unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = add i32 %si_code, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 127, i32 %0)
  %1 = icmp ult i32 %0, 127
  br i1 %1, label %if.then, label %if.else49

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %sig)
  %cmp2 = icmp ult i32 %sig, 32
  br i1 %cmp2, label %land.lhs.true3, label %if.then.if.else43_crit_edge

if.then.if.else43_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else43

land.lhs.true3:                                   ; preds = %if.then
  %arrayidx = getelementptr [32 x %struct.anon.111], ptr @sig_sicodes, i32 0, i32 %sig
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx, align 1
  %conv = zext i8 %3 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv, i32 %si_code)
  %cmp4.not = icmp ult i32 %conv, %si_code
  br i1 %cmp4.not, label %land.lhs.true3.if.else43_crit_edge, label %if.then6

land.lhs.true3.if.else43_crit_edge:               ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else43

if.then6:                                         ; preds = %land.lhs.true3
  %layout8 = getelementptr [32 x %struct.anon.111], ptr @sig_sicodes, i32 0, i32 %sig, i32 1
  %4 = ptrtoint ptr %layout8 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %layout8, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %sig)
  %cmp10 = icmp eq i32 %sig, 7
  %6 = and i32 %si_code, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %6)
  %7 = icmp eq i32 %6, 4
  %8 = and i1 %cmp10, %7
  br i1 %8, label %if.then6.if.end64_crit_edge, label %if.else

if.then6.if.end64_crit_edge:                      ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end64

if.else:                                          ; preds = %if.then6
  call void @__sanitizer_cov_trace_const_cmp4(i32 11, i32 %sig)
  %cmp19 = icmp eq i32 %sig, 11
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %si_code)
  %cmp22 = icmp eq i32 %si_code, 3
  %or.cond84 = and i1 %cmp19, %cmp22
  br i1 %or.cond84, label %if.else.if.end64_crit_edge, label %if.else25

if.else.if.end64_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end64

if.else25:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %si_code)
  %cmp29 = icmp eq i32 %si_code, 4
  %or.cond85 = and i1 %cmp19, %cmp29
  br i1 %or.cond85, label %if.else25.if.end64_crit_edge, label %if.else32

if.else25.if.end64_crit_edge:                     ; preds = %if.else25
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end64

if.else32:                                        ; preds = %if.else25
  call void @__sanitizer_cov_trace_pc() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %sig)
  %cmp33 = icmp eq i32 %sig, 5
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %si_code)
  %cmp36 = icmp eq i32 %si_code, 6
  %or.cond86 = and i1 %cmp33, %cmp36
  %spec.select88 = select i1 %or.cond86, i8 8, i8 %5
  br label %if.end64

if.else43:                                        ; preds = %land.lhs.true3.if.else43_crit_edge, %if.then.if.else43_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %si_code)
  %cmp44 = icmp ult i32 %si_code, 7
  %spec.select = select i1 %cmp44, i8 2, i8 0
  br label %if.end64

if.else49:                                        ; preds = %entry
  %9 = zext i32 %si_code to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.166)
  switch i32 %si_code, label %if.else57 [
    i32 -2, label %if.else49.if.end64_crit_edge
    i32 -5, label %if.then56
  ]

if.else49.if.end64_crit_edge:                     ; preds = %if.else49
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end64

if.then56:                                        ; preds = %if.else49
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end64

if.else57:                                        ; preds = %if.else49
  call void @__sanitizer_cov_trace_pc() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %si_code)
  %cmp58 = icmp slt i32 %si_code, 0
  %spec.select87 = select i1 %cmp58, i8 10, i8 0
  br label %if.end64

if.end64:                                         ; preds = %if.else57, %if.then56, %if.else49.if.end64_crit_edge, %if.else43, %if.else32, %if.else25.if.end64_crit_edge, %if.else.if.end64_crit_edge, %if.then6.if.end64_crit_edge
  %layout.0.shrunk = phi i8 [ 2, %if.then56 ], [ 5, %if.then6.if.end64_crit_edge ], [ 6, %if.else.if.end64_crit_edge ], [ 7, %if.else25.if.end64_crit_edge ], [ %spec.select, %if.else43 ], [ 1, %if.else49.if.end64_crit_edge ], [ %spec.select87, %if.else57 ], [ %spec.select88, %if.else32 ]
  %layout.0 = zext i8 %layout.0.shrunk to i32
  ret i32 %layout.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @copy_siginfo_to_user(ptr noundef %to, ptr noundef %from) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %to, i32 32
  tail call void @__might_fault(ptr noundef nonnull @.str.115, i32 noundef 174) #15
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #15
  br i1 %call.i.i, label %entry.cleanup_crit_edge, label %if.end.i.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end.i.i:                                       ; preds = %entry
  %0 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %to, i32 32, i32 -1226833920) #19, !srcloc !554
  %asmresult.i.i = extractvalue { i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.cleanup_crit_edge

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

copy_to_user.exit:                                ; preds = %if.end.i.i
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %from, i32 noundef 32) #15
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %to, ptr noundef %from, i32 noundef 32) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool.not = icmp eq i32 %call.i12.i.i, 0
  br i1 %tobool.not, label %if.end, label %copy_to_user.exit.cleanup_crit_edge

copy_to_user.exit.cleanup_crit_edge:              ; preds = %copy_to_user.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %copy_to_user.exit
  %1 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %add.ptr.i, i32 96, i32 -1226833920) #19, !srcloc !555
  %asmresult.i = extractvalue { i32, i32 } %1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i)
  %cmp.i = icmp eq i32 %asmresult.i, 0
  br i1 %cmp.i, label %clear_user.exit, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

clear_user.exit:                                  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %2 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 4
  %4 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i) #10, !srcloc !551
  %and.i.i.i = and i32 %4, -13
  %or.i.i.i = or i32 %and.i.i.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i) #15, !srcloc !552
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %call1.i.i = tail call i32 @arm_clear_user(ptr noundef %add.ptr.i, i32 noundef 96) #15
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %4) #15, !srcloc !552
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool3.not = icmp eq i32 %call1.i.i, 0
  %spec.select = select i1 %tobool3.not, i32 0, i32 -14
  br label %cleanup

cleanup:                                          ; preds = %clear_user.exit, %if.end.cleanup_crit_edge, %copy_to_user.exit.cleanup_crit_edge, %if.end.i.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -14, %copy_to_user.exit.cleanup_crit_edge ], [ -14, %entry.cleanup_crit_edge ], [ -14, %if.end.i.i.cleanup_crit_edge ], [ -14, %if.end.cleanup_crit_edge ], [ %spec.select, %clear_user.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @copy_siginfo_from_user(ptr noundef %to, ptr noundef %from) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__might_fault(ptr noundef nonnull @.str.115, i32 noundef 156) #15
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #15
  br i1 %call.i.i, label %entry.if.then11.i.i_crit_edge, label %land.lhs.true.i.i

entry.if.then11.i.i_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i

land.lhs.true.i.i:                                ; preds = %entry
  %0 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %from, i32 32, i32 -1226833920) #19, !srcloc !550
  %asmresult.i.i = extractvalue { i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i.i, label %land.lhs.true.i.i.if.then11.i.i_crit_edge, !prof !509

land.lhs.true.i.i.if.then11.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %to, i32 noundef 32) #15
  %1 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 4
  %3 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #10, !srcloc !551
  %and.i.i.i.i = and i32 %3, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #15, !srcloc !552
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %call1.i.i.i = tail call i32 @arm_copy_from_user(ptr noundef %to, ptr noundef %from, i32 noundef 32) #15
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %3) #15, !srcloc !552
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool4.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end, label %if.end.i.i.if.then11.i.i_crit_edge, !prof !509

if.end.i.i.if.then11.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i.if.then11.i.i_crit_edge, %land.lhs.true.i.i.if.then11.i.i_crit_edge, %entry.if.then11.i.i_crit_edge
  %res.0.i.i6 = phi i32 [ %call1.i.i.i, %if.end.i.i.if.then11.i.i_crit_edge ], [ 32, %entry.if.then11.i.i_crit_edge ], [ 32, %land.lhs.true.i.i.if.then11.i.i_crit_edge ]
  %sub.i.i = sub i32 32, %res.0.i.i6
  %add.ptr.i.i = getelementptr i8, ptr %to, i32 %sub.i.i
  %4 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i6)
  br label %return

if.end:                                           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %call1 = tail call fastcc i32 @post_copy_siginfo_from_user(ptr noundef %to, ptr noundef %from)
  br label %return

return:                                           ; preds = %if.end, %if.then11.i.i
  %retval.0 = phi i32 [ %call1, %if.end ], [ -14, %if.then11.i.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @post_copy_siginfo_from_user(ptr nocapture noundef readonly %info, ptr noundef %from) unnamed_addr #0 align 64 {
entry:
  %buf = alloca [96 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %info, align 4
  %si_code = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %2 = ptrtoint ptr %si_code to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %si_code, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %3)
  %cmp.i = icmp eq i32 %3, 128
  br i1 %cmp.i, label %entry.return_crit_edge, label %if.else.i

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp1.i = icmp sgt i32 %3, 0
  br i1 %cmp1.i, label %if.then2.i, label %if.else16.i

if.then2.i:                                       ; preds = %if.else.i
  %4 = add i32 %1, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %4)
  %5 = icmp ult i32 %4, 31
  br i1 %5, label %land.lhs.true5.i, label %if.then2.i.if.else10.i_crit_edge

if.then2.i.if.else10.i_crit_edge:                 ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else10.i

land.lhs.true5.i:                                 ; preds = %if.then2.i
  %shl.i = shl nuw nsw i32 1, %4
  %and.i = and i32 %shl.i, 1342244056
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %land.lhs.true5.i.if.else10.i_crit_edge, label %if.then6.i

land.lhs.true5.i.if.else10.i_crit_edge:           ; preds = %land.lhs.true5.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else10.i

if.then6.i:                                       ; preds = %land.lhs.true5.i
  %arrayidx.i = getelementptr [32 x %struct.anon.111], ptr @sig_sicodes, i32 0, i32 %1
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx.i, align 1
  %conv.i = zext i8 %7 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %conv.i)
  %cmp7.not.i = icmp ugt i32 %3, %conv.i
  br i1 %cmp7.not.i, label %if.then6.i.if.then_crit_edge, label %if.then6.i.return_crit_edge

if.then6.i.return_crit_edge:                      ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.then6.i.if.then_crit_edge:                     ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

if.else10.i:                                      ; preds = %land.lhs.true5.i.if.else10.i_crit_edge, %if.then2.i.if.else10.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %3)
  %cmp11.i = icmp ult i32 %3, 7
  br i1 %cmp11.i, label %if.else10.i.return_crit_edge, label %if.else10.i.if.then_crit_edge

if.else10.i.if.then_crit_edge:                    ; preds = %if.else10.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

if.else10.i.return_crit_edge:                     ; preds = %if.else10.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.else16.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -8, i32 %3)
  %cmp17.i = icmp sgt i32 %3, -8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -60, i32 %3)
  %cmp21.i = icmp eq i32 %3, -60
  %or.cond36.i = or i1 %cmp17.i, %cmp21.i
  br i1 %or.cond36.i, label %if.else16.i.return_crit_edge, label %if.else16.i.if.then_crit_edge

if.else16.i.if.then_crit_edge:                    ; preds = %if.else16.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

if.else16.i.return_crit_edge:                     ; preds = %if.else16.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.then:                                          ; preds = %if.else16.i.if.then_crit_edge, %if.else10.i.if.then_crit_edge, %if.then6.i.if.then_crit_edge
  %add.ptr.i = getelementptr i8, ptr %from, i32 32
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %buf) #15
  %8 = call ptr @memset(ptr %buf, i32 255, i32 96)
  tail call void @__might_fault(ptr noundef nonnull @.str.115, i32 noundef 156) #15
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #15
  br i1 %call.i.i, label %if.then.if.then11.i.i_crit_edge, label %land.lhs.true.i.i

if.then.if.then11.i.i_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i

land.lhs.true.i.i:                                ; preds = %if.then
  %9 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %add.ptr.i, i32 96, i32 -1226833920) #19, !srcloc !550
  %asmresult.i.i = extractvalue { i32, i32 } %9, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i.i, label %land.lhs.true.i.i.if.then11.i.i_crit_edge, !prof !509

land.lhs.true.i.i.if.then11.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %buf, i32 noundef 96) #15
  %10 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 4
  %12 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #10, !srcloc !551
  %and.i.i.i.i = and i32 %12, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %call1.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %buf, ptr noundef %add.ptr.i, i32 noundef 96) #15
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %12) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool4.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end.i.i.for.body_crit_edge, label %if.end.i.i.if.then11.i.i_crit_edge, !prof !509

if.end.i.i.if.then11.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i

if.end.i.i.for.body_crit_edge:                    ; preds = %if.end.i.i
  br label %for.body

if.then11.i.i:                                    ; preds = %if.end.i.i.if.then11.i.i_crit_edge, %land.lhs.true.i.i.if.then11.i.i_crit_edge, %if.then.if.then11.i.i_crit_edge
  %res.0.i.i20 = phi i32 [ %call1.i.i.i, %if.end.i.i.if.then11.i.i_crit_edge ], [ 96, %if.then.if.then11.i.i_crit_edge ], [ 96, %land.lhs.true.i.i.if.then11.i.i_crit_edge ]
  %sub.i.i = sub i32 96, %res.0.i.i20
  %add.ptr.i.i = getelementptr i8, ptr %buf, i32 %sub.i.i
  %13 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i20)
  br label %cleanup.thread

for.cond:                                         ; preds = %for.body
  %inc = add nuw nsw i32 %i.026, 1
  %exitcond.not = icmp eq i32 %inc, 96
  br i1 %exitcond.not, label %cleanup, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %if.end.i.i.for.body_crit_edge
  %i.026 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %if.end.i.i.for.body_crit_edge ]
  %arrayidx = getelementptr [96 x i8], ptr %buf, i32 0, i32 %i.026
  %14 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %cmp7.not = icmp eq i8 %15, 0
  br i1 %cmp7.not, label %for.cond, label %for.body.cleanup.thread_crit_edge

for.body.cleanup.thread_crit_edge:                ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %for.body.cleanup.thread_crit_edge, %if.then11.i.i
  %retval.0.ph = phi i32 [ -14, %if.then11.i.i ], [ -7, %for.body.cleanup.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %buf) #15
  br label %return

cleanup:                                          ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %buf) #15
  br label %return

return:                                           ; preds = %cleanup, %cleanup.thread, %if.else16.i.return_crit_edge, %if.else10.i.return_crit_edge, %if.then6.i.return_crit_edge, %entry.return_crit_edge
  %retval.1 = phi i32 [ %retval.0.ph, %cleanup.thread ], [ 0, %cleanup ], [ 0, %entry.return_crit_edge ], [ 0, %if.then6.i.return_crit_edge ], [ 0, %if.else10.i.return_crit_edge ], [ 0, %if.else16.i.return_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_rt_sigtimedwait(i32 noundef %uthese, i32 noundef %uinfo, i32 noundef %uts, i32 noundef %sigsetsize) #0 align 64 {
entry:
  %these.i = alloca %struct.sigset_t, align 4
  %ts.i = alloca %struct.timespec64, align 8
  %info.i = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %uthese to ptr
  %1 = inttoptr i32 %uinfo to ptr
  %2 = inttoptr i32 %uts to ptr
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %these.i) #15
  %3 = ptrtoint ptr %these.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %these.i, align 4, !annotation !511
  %4 = getelementptr inbounds [2 x i32], ptr %these.i, i32 0, i32 1
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 -1, ptr %4, align 4, !annotation !511
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ts.i) #15
  %6 = call ptr @memset(ptr %ts.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %sigsetsize)
  %cmp.not.i = icmp eq i32 %sigsetsize, 8
  %7 = call ptr @memset(ptr %info.i, i32 255, i32 32)
  br i1 %cmp.not.i, label %if.end59.i.i.i, label %entry.__do_sys_rt_sigtimedwait.exit_crit_edge

entry.__do_sys_rt_sigtimedwait.exit_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_sigtimedwait.exit

if.end59.i.i.i:                                   ; preds = %entry
  tail call void @__might_fault(ptr noundef nonnull @.str.115, i32 noundef 156) #15
  %call.i.i.i = tail call zeroext i1 @should_fail_usercopy() #15
  br i1 %call.i.i.i, label %if.end59.i.i.i.if.then11.i.i.i_crit_edge, label %land.lhs.true.i.i.i

if.end59.i.i.i.if.then11.i.i.i_crit_edge:         ; preds = %if.end59.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i.i

land.lhs.true.i.i.i:                              ; preds = %if.end59.i.i.i
  %8 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %0, i32 8, i32 -1226833920) #19, !srcloc !550
  %asmresult.i.i.i = extractvalue { i32, i32 } %8, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i)
  %cmp.i6.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %cmp.i6.i.i, label %if.end.i.i.i, label %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge, !prof !509

land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge:    ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %these.i, i32 noundef 8) #15
  %9 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 4
  %11 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i.i) #10, !srcloc !551
  %and.i.i.i.i.i = and i32 %11, -13
  %or.i.i.i.i.i = or i32 %and.i.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i.i) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %call1.i.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %these.i, ptr noundef %0, i32 noundef 8) #15
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %11) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool4.not.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool4.not.i.i.i, label %if.end2.i, label %if.end.i.i.i.if.then11.i.i.i_crit_edge, !prof !509

if.end.i.i.i.if.then11.i.i.i_crit_edge:           ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i.i

if.then11.i.i.i:                                  ; preds = %if.end.i.i.i.if.then11.i.i.i_crit_edge, %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge, %if.end59.i.i.i.if.then11.i.i.i_crit_edge
  %res.0.i.i29.i = phi i32 [ %call1.i.i.i.i, %if.end.i.i.i.if.then11.i.i.i_crit_edge ], [ 8, %if.end59.i.i.i.if.then11.i.i.i_crit_edge ], [ 8, %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge ]
  %sub.i.i.i = sub i32 8, %res.0.i.i29.i
  %add.ptr.i.i.i = getelementptr i8, ptr %these.i, i32 %sub.i.i.i
  %12 = call ptr @memset(ptr %add.ptr.i.i.i, i32 0, i32 %res.0.i.i29.i)
  br label %__do_sys_rt_sigtimedwait.exit

if.end2.i:                                        ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %uts)
  %tobool3.not.i = icmp eq i32 %uts, 0
  br i1 %tobool3.not.i, label %if.end2.i.if.end9.i_crit_edge, label %if.then4.i

if.end2.i.if.end9.i_crit_edge:                    ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end9.i

if.then4.i:                                       ; preds = %if.end2.i
  %call5.i = call i32 @get_timespec64(ptr noundef nonnull %ts.i, ptr noundef nonnull %2) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %if.then4.i.if.end9.i_crit_edge, label %if.then4.i.__do_sys_rt_sigtimedwait.exit_crit_edge

if.then4.i.__do_sys_rt_sigtimedwait.exit_crit_edge: ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_sigtimedwait.exit

if.then4.i.if.end9.i_crit_edge:                   ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.then4.i.if.end9.i_crit_edge, %if.end2.i.if.end9.i_crit_edge
  %ts..i = phi ptr [ %ts.i, %if.then4.i.if.end9.i_crit_edge ], [ null, %if.end2.i.if.end9.i_crit_edge ]
  %call11.i = call fastcc i32 @do_sigtimedwait(ptr noundef nonnull %these.i, ptr noundef nonnull %info.i, ptr noundef %ts..i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call11.i)
  %cmp12.i = icmp slt i32 %call11.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %uinfo)
  %tobool13.not.i = icmp eq i32 %uinfo, 0
  %or.cond.i = or i1 %tobool13.not.i, %cmp12.i
  br i1 %or.cond.i, label %if.end9.i.__do_sys_rt_sigtimedwait.exit_crit_edge, label %if.then14.i

if.end9.i.__do_sys_rt_sigtimedwait.exit_crit_edge: ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_sigtimedwait.exit

if.then14.i:                                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #17
  %call15.i = call i32 @copy_siginfo_to_user(ptr noundef nonnull %1, ptr noundef nonnull %info.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15.i)
  %tobool16.not.i = icmp eq i32 %call15.i, 0
  %spec.select.i = select i1 %tobool16.not.i, i32 %call11.i, i32 -14
  br label %__do_sys_rt_sigtimedwait.exit

__do_sys_rt_sigtimedwait.exit:                    ; preds = %if.then14.i, %if.end9.i.__do_sys_rt_sigtimedwait.exit_crit_edge, %if.then4.i.__do_sys_rt_sigtimedwait.exit_crit_edge, %if.then11.i.i.i, %entry.__do_sys_rt_sigtimedwait.exit_crit_edge
  %retval.0.i = phi i32 [ -22, %entry.__do_sys_rt_sigtimedwait.exit_crit_edge ], [ -14, %if.then4.i.__do_sys_rt_sigtimedwait.exit_crit_edge ], [ %call11.i, %if.end9.i.__do_sys_rt_sigtimedwait.exit_crit_edge ], [ %spec.select.i, %if.then14.i ], [ -14, %if.then11.i.i.i ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info.i) #15
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ts.i) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %these.i) #15
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_rt_sigtimedwait_time32(i32 noundef %uthese, i32 noundef %uinfo, i32 noundef %uts, i32 noundef %sigsetsize) #0 align 64 {
entry:
  %these.i = alloca %struct.sigset_t, align 4
  %ts.i = alloca %struct.timespec64, align 8
  %info.i = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %uthese to ptr
  %1 = inttoptr i32 %uinfo to ptr
  %2 = inttoptr i32 %uts to ptr
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %these.i) #15
  %3 = ptrtoint ptr %these.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %these.i, align 4, !annotation !511
  %4 = getelementptr inbounds [2 x i32], ptr %these.i, i32 0, i32 1
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 -1, ptr %4, align 4, !annotation !511
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ts.i) #15
  %6 = call ptr @memset(ptr %ts.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %sigsetsize)
  %cmp.not.i = icmp eq i32 %sigsetsize, 8
  %7 = call ptr @memset(ptr %info.i, i32 255, i32 32)
  br i1 %cmp.not.i, label %if.end59.i.i.i, label %entry.__do_sys_rt_sigtimedwait_time32.exit_crit_edge

entry.__do_sys_rt_sigtimedwait_time32.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_sigtimedwait_time32.exit

if.end59.i.i.i:                                   ; preds = %entry
  tail call void @__might_fault(ptr noundef nonnull @.str.115, i32 noundef 156) #15
  %call.i.i.i = tail call zeroext i1 @should_fail_usercopy() #15
  br i1 %call.i.i.i, label %if.end59.i.i.i.if.then11.i.i.i_crit_edge, label %land.lhs.true.i.i.i

if.end59.i.i.i.if.then11.i.i.i_crit_edge:         ; preds = %if.end59.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i.i

land.lhs.true.i.i.i:                              ; preds = %if.end59.i.i.i
  %8 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %0, i32 8, i32 -1226833920) #19, !srcloc !550
  %asmresult.i.i.i = extractvalue { i32, i32 } %8, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i)
  %cmp.i6.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %cmp.i6.i.i, label %if.end.i.i.i, label %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge, !prof !509

land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge:    ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %these.i, i32 noundef 8) #15
  %9 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 4
  %11 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i.i) #10, !srcloc !551
  %and.i.i.i.i.i = and i32 %11, -13
  %or.i.i.i.i.i = or i32 %and.i.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i.i) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %call1.i.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %these.i, ptr noundef %0, i32 noundef 8) #15
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %11) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool4.not.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool4.not.i.i.i, label %if.end2.i, label %if.end.i.i.i.if.then11.i.i.i_crit_edge, !prof !509

if.end.i.i.i.if.then11.i.i.i_crit_edge:           ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i.i

if.then11.i.i.i:                                  ; preds = %if.end.i.i.i.if.then11.i.i.i_crit_edge, %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge, %if.end59.i.i.i.if.then11.i.i.i_crit_edge
  %res.0.i.i29.i = phi i32 [ %call1.i.i.i.i, %if.end.i.i.i.if.then11.i.i.i_crit_edge ], [ 8, %if.end59.i.i.i.if.then11.i.i.i_crit_edge ], [ 8, %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge ]
  %sub.i.i.i = sub i32 8, %res.0.i.i29.i
  %add.ptr.i.i.i = getelementptr i8, ptr %these.i, i32 %sub.i.i.i
  %12 = call ptr @memset(ptr %add.ptr.i.i.i, i32 0, i32 %res.0.i.i29.i)
  br label %__do_sys_rt_sigtimedwait_time32.exit

if.end2.i:                                        ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %uts)
  %tobool3.not.i = icmp eq i32 %uts, 0
  br i1 %tobool3.not.i, label %if.end2.i.if.end9.i_crit_edge, label %if.then4.i

if.end2.i.if.end9.i_crit_edge:                    ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end9.i

if.then4.i:                                       ; preds = %if.end2.i
  %call5.i = call i32 @get_old_timespec32(ptr noundef nonnull %ts.i, ptr noundef nonnull %2) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %if.then4.i.if.end9.i_crit_edge, label %if.then4.i.__do_sys_rt_sigtimedwait_time32.exit_crit_edge

if.then4.i.__do_sys_rt_sigtimedwait_time32.exit_crit_edge: ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_sigtimedwait_time32.exit

if.then4.i.if.end9.i_crit_edge:                   ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.then4.i.if.end9.i_crit_edge, %if.end2.i.if.end9.i_crit_edge
  %ts..i = phi ptr [ %ts.i, %if.then4.i.if.end9.i_crit_edge ], [ null, %if.end2.i.if.end9.i_crit_edge ]
  %call11.i = call fastcc i32 @do_sigtimedwait(ptr noundef nonnull %these.i, ptr noundef nonnull %info.i, ptr noundef %ts..i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call11.i)
  %cmp12.i = icmp slt i32 %call11.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %uinfo)
  %tobool13.not.i = icmp eq i32 %uinfo, 0
  %or.cond.i = or i1 %tobool13.not.i, %cmp12.i
  br i1 %or.cond.i, label %if.end9.i.__do_sys_rt_sigtimedwait_time32.exit_crit_edge, label %if.then14.i

if.end9.i.__do_sys_rt_sigtimedwait_time32.exit_crit_edge: ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_sigtimedwait_time32.exit

if.then14.i:                                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #17
  %call15.i = call i32 @copy_siginfo_to_user(ptr noundef nonnull %1, ptr noundef nonnull %info.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15.i)
  %tobool16.not.i = icmp eq i32 %call15.i, 0
  %spec.select.i = select i1 %tobool16.not.i, i32 %call11.i, i32 -14
  br label %__do_sys_rt_sigtimedwait_time32.exit

__do_sys_rt_sigtimedwait_time32.exit:             ; preds = %if.then14.i, %if.end9.i.__do_sys_rt_sigtimedwait_time32.exit_crit_edge, %if.then4.i.__do_sys_rt_sigtimedwait_time32.exit_crit_edge, %if.then11.i.i.i, %entry.__do_sys_rt_sigtimedwait_time32.exit_crit_edge
  %retval.0.i = phi i32 [ -22, %entry.__do_sys_rt_sigtimedwait_time32.exit_crit_edge ], [ -14, %if.then4.i.__do_sys_rt_sigtimedwait_time32.exit_crit_edge ], [ %call11.i, %if.end9.i.__do_sys_rt_sigtimedwait_time32.exit_crit_edge ], [ %spec.select.i, %if.then14.i ], [ -14, %if.then11.i.i.i ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info.i) #15
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ts.i) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %these.i) #15
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_kill(i32 noundef %pid, i32 noundef %sig) #0 align 64 {
entry:
  %info.i = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info.i) #15
  %0 = getelementptr inbounds %struct.anon, ptr %info.i, i32 0, i32 1
  %1 = getelementptr inbounds %struct.anon, ptr %info.i, i32 0, i32 2
  %2 = getelementptr inbounds %struct.anon, ptr %info.i, i32 0, i32 3
  %3 = getelementptr inbounds %struct.anon, ptr %info.i, i32 0, i32 3, i32 0, i32 1
  %4 = getelementptr inbounds %struct.anon, ptr %info.i, i32 0, i32 3, i32 0, i32 2
  %5 = call ptr @memset(ptr %4, i32 0, i32 12)
  %6 = ptrtoint ptr %info.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %sig, ptr %info.i, align 4
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %0, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %1, align 4
  %9 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %task.i.i, align 8
  %call.i.i.i = tail call i32 @__task_pid_nr_ns(ptr noundef %12, i32 noundef 1, ptr noundef null) #15
  %13 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %call.i.i.i, ptr %2, align 4
  %14 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 99
  %16 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %cred.i.i, align 16
  %user_ns.i.i = getelementptr inbounds %struct.cred, ptr %17, i32 0, i32 25
  %18 = ptrtoint ptr %user_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %user_ns.i.i, align 4
  %uid.i.i = getelementptr inbounds %struct.cred, ptr %17, i32 0, i32 4
  %20 = ptrtoint ptr %uid.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %agg.tmp.sroa.0.0.copyload.i.i = load i32, ptr %uid.i.i, align 4
  %.fca.0.insert.i.i = insertvalue [1 x i32] poison, i32 %agg.tmp.sroa.0.0.copyload.i.i, 0
  %call11.i.i = tail call i32 @from_kuid_munged(ptr noundef %19, [1 x i32] %.fca.0.insert.i.i) #15
  %21 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %call11.i.i, ptr %3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %pid)
  %cmp.i.i = icmp sgt i32 %pid, 0
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %call.i.i = call fastcc i32 @kill_proc_info(i32 noundef %sig, ptr noundef nonnull %info.i, i32 noundef %pid) #15
  br label %__do_sys_kill.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2147483648, i32 %pid)
  %cmp1.i.i = icmp eq i32 %pid, -2147483648
  br i1 %cmp1.i.i, label %if.end.i.i.__do_sys_kill.exit_crit_edge, label %if.end3.i.i

if.end.i.i.__do_sys_kill.exit_crit_edge:          ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_kill.exit

if.end3.i.i:                                      ; preds = %if.end.i.i
  tail call void @_raw_read_lock(ptr noundef nonnull @tasklist_lock) #15
  %22 = zext i32 %pid to i64
  call void @__sanitizer_cov_trace_switch(i64 %22, ptr @__sancov_gen_cov_switch_values.167)
  switch i32 %pid, label %cond.true.i.i [
    i32 -1, label %for.cond.preheader.i.i
    i32 0, label %cond.false.i.i
  ]

for.cond.preheader.i.i:                           ; preds = %if.end3.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.task_struct, ptr @init_task, i32 0, i32 50) to i32))
  %23 = load volatile ptr, ptr getelementptr inbounds (%struct.task_struct, ptr @init_task, i32 0, i32 50), align 16
  %add.ptr47.i.i = getelementptr i8, ptr %23, i32 -1136
  %cmp12.not48.i.i = icmp eq ptr %add.ptr47.i.i, @init_task
  br i1 %cmp12.not48.i.i, label %for.cond.preheader.i.i.for.end.thread.i.i_crit_edge, label %for.cond.preheader.i.i.for.body.i.i_crit_edge

for.cond.preheader.i.i.for.body.i.i_crit_edge:    ; preds = %for.cond.preheader.i.i
  br label %for.body.i.i

for.cond.preheader.i.i.for.end.thread.i.i_crit_edge: ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.thread.i.i

cond.true.i.i:                                    ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i = sub nsw i32 0, %pid
  %call6.i.i = tail call ptr @find_vpid(i32 noundef %sub.i.i) #15
  br label %cond.end.i.i

cond.false.i.i:                                   ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %24 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i2.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i2.i to ptr
  %task.i3.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 2
  %26 = ptrtoint ptr %task.i3.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %task.i3.i, align 8
  %signal.i.i.i = getelementptr inbounds %struct.task_struct, ptr %27, i32 0, i32 111
  %28 = ptrtoint ptr %signal.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %signal.i.i.i, align 16
  %arrayidx.i.i.i = getelementptr %struct.signal_struct, ptr %29, i32 0, i32 22, i32 2
  %30 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %arrayidx.i.i.i, align 8
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i.i, %cond.true.i.i
  %cond.i.i = phi ptr [ %call6.i.i, %cond.true.i.i ], [ %31, %cond.false.i.i ]
  %call9.i.i = call i32 @__kill_pgrp_info(i32 noundef %sig, ptr noundef nonnull %info.i, ptr noundef %cond.i.i) #15
  br label %if.end29.i.i

for.body.i.i:                                     ; preds = %if.end23.i.i.for.body.i.i_crit_edge, %for.cond.preheader.i.i.for.body.i.i_crit_edge
  %add.ptr51.i.i = phi ptr [ %add.ptr.i.i, %if.end23.i.i.for.body.i.i_crit_edge ], [ %add.ptr47.i.i, %for.cond.preheader.i.i.for.body.i.i_crit_edge ]
  %32 = phi ptr [ %42, %if.end23.i.i.for.body.i.i_crit_edge ], [ %23, %for.cond.preheader.i.i.for.body.i.i_crit_edge ]
  %count.050.i.i = phi i32 [ %count.1.i.i, %if.end23.i.i.for.body.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.for.body.i.i_crit_edge ]
  %retval10.049.i.i = phi i32 [ %retval10.2.i.i, %if.end23.i.i.for.body.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.for.body.i.i_crit_edge ]
  %call.i.i4.i = call i32 @__task_pid_nr_ns(ptr noundef %add.ptr51.i.i, i32 noundef 0, ptr noundef null) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i.i4.i)
  %cmp14.i.i = icmp sgt i32 %call.i.i4.i, 1
  br i1 %cmp14.i.i, label %land.lhs.true.i.i, label %for.body.i.i.if.end23.i.i_crit_edge

for.body.i.i.if.end23.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end23.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %33 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i45.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i45.i.i to ptr
  %task16.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %task16.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %task16.i.i, align 8
  %signal.i46.i.i = getelementptr i8, ptr %32, i32 544
  %37 = ptrtoint ptr %signal.i46.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %signal.i46.i.i, align 16
  %signal1.i.i.i = getelementptr inbounds %struct.task_struct, ptr %36, i32 0, i32 111
  %39 = ptrtoint ptr %signal1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %signal1.i.i.i, align 16
  %cmp.i.i.i = icmp eq ptr %38, %40
  br i1 %cmp.i.i.i, label %land.lhs.true.i.i.if.end23.i.i_crit_edge, label %if.then18.i.i

land.lhs.true.i.i.if.end23.i.i_crit_edge:         ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end23.i.i

if.then18.i.i:                                    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %call19.i.i = call i32 @group_send_sig_info(i32 noundef %sig, ptr noundef nonnull %info.i, ptr noundef %add.ptr51.i.i, i32 noundef 4) #15
  %inc.i.i = add i32 %count.050.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call19.i.i)
  %cmp20.not.i.i = icmp eq i32 %call19.i.i, -1
  %spec.select.i.i = select i1 %cmp20.not.i.i, i32 %retval10.049.i.i, i32 %call19.i.i
  br label %if.end23.i.i

if.end23.i.i:                                     ; preds = %if.then18.i.i, %land.lhs.true.i.i.if.end23.i.i_crit_edge, %for.body.i.i.if.end23.i.i_crit_edge
  %retval10.2.i.i = phi i32 [ %retval10.049.i.i, %land.lhs.true.i.i.if.end23.i.i_crit_edge ], [ %spec.select.i.i, %if.then18.i.i ], [ %retval10.049.i.i, %for.body.i.i.if.end23.i.i_crit_edge ]
  %count.1.i.i = phi i32 [ %count.050.i.i, %land.lhs.true.i.i.if.end23.i.i_crit_edge ], [ %inc.i.i, %if.then18.i.i ], [ %count.050.i.i, %for.body.i.i.if.end23.i.i_crit_edge ]
  %tasks.i.i = getelementptr inbounds %struct.task_struct, ptr %add.ptr51.i.i, i32 0, i32 50
  %41 = ptrtoint ptr %tasks.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile ptr, ptr %tasks.i.i, align 16
  %add.ptr.i.i = getelementptr i8, ptr %42, i32 -1136
  %cmp12.not.i.i = icmp eq ptr %add.ptr.i.i, @init_task
  br i1 %cmp12.not.i.i, label %for.end.i.i, label %if.end23.i.i.for.body.i.i_crit_edge

if.end23.i.i.for.body.i.i_crit_edge:              ; preds = %if.end23.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i.i

for.end.i.i:                                      ; preds = %if.end23.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %count.1.i.i)
  %tobool24.not.i.i = icmp eq i32 %count.1.i.i, 0
  br i1 %tobool24.not.i.i, label %for.end.i.i.for.end.thread.i.i_crit_edge, label %for.end.i.i.if.end29.i.i_crit_edge

for.end.i.i.if.end29.i.i_crit_edge:               ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end29.i.i

for.end.i.i.for.end.thread.i.i_crit_edge:         ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.thread.i.i

for.end.thread.i.i:                               ; preds = %for.end.i.i.for.end.thread.i.i_crit_edge, %for.cond.preheader.i.i.for.end.thread.i.i_crit_edge
  br label %if.end29.i.i

if.end29.i.i:                                     ; preds = %for.end.thread.i.i, %for.end.i.i.if.end29.i.i_crit_edge, %cond.end.i.i
  %ret.0.i.i = phi i32 [ %call9.i.i, %cond.end.i.i ], [ -3, %for.end.thread.i.i ], [ %retval10.2.i.i, %for.end.i.i.if.end29.i.i_crit_edge ]
  call void @_raw_read_unlock(ptr noundef nonnull @tasklist_lock) #15
  br label %__do_sys_kill.exit

__do_sys_kill.exit:                               ; preds = %if.end29.i.i, %if.end.i.i.__do_sys_kill.exit_crit_edge, %if.then.i.i
  %retval.0.i.i = phi i32 [ %call.i.i, %if.then.i.i ], [ %ret.0.i.i, %if.end29.i.i ], [ -3, %if.end.i.i.__do_sys_kill.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info.i) #15
  ret i32 %retval.0.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_pidfd_send_signal(i32 noundef %pidfd, i32 noundef %sig, i32 noundef %info, i32 noundef %flags) #0 align 64 {
entry:
  %kinfo.i = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %info to ptr
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %kinfo.i) #15
  %1 = getelementptr inbounds %struct.anon, ptr %kinfo.i, i32 0, i32 1
  %2 = getelementptr inbounds %struct.anon, ptr %kinfo.i, i32 0, i32 2
  %3 = getelementptr inbounds %struct.anon, ptr %kinfo.i, i32 0, i32 3
  %4 = getelementptr inbounds %struct.anon, ptr %kinfo.i, i32 0, i32 3, i32 0, i32 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %flags)
  %tobool.not.i = icmp eq i32 %flags, 0
  %5 = call ptr @memset(ptr %kinfo.i, i32 255, i32 32)
  br i1 %tobool.not.i, label %if.end.i, label %entry.__do_sys_pidfd_send_signal.exit_crit_edge

entry.__do_sys_pidfd_send_signal.exit_crit_edge:  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_pidfd_send_signal.exit

if.end.i:                                         ; preds = %entry
  %call.i.i = tail call i32 @__fdget(i32 noundef %pidfd) #15, !noalias !556
  %and.i.i.i = and i32 %call.i.i, -4
  %6 = inttoptr i32 %and.i.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool1.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool1.not.i, label %if.end.i.__do_sys_pidfd_send_signal.exit_crit_edge, label %if.end3.i

if.end.i.__do_sys_pidfd_send_signal.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_pidfd_send_signal.exit

if.end3.i:                                        ; preds = %if.end.i
  %call.i50.i = tail call ptr @pidfd_pid(ptr noundef nonnull %6) #15
  %cmp.i.i.i = icmp ugt ptr %call.i50.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %if.end.i.i, label %if.end3.i.pidfd_to_pid.exit.i_crit_edge

if.end3.i.pidfd_to_pid.exit.i_crit_edge:          ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %pidfd_to_pid.exit.i

if.end.i.i:                                       ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #17
  %call2.i.i = tail call ptr @tgid_pidfd_to_pid(ptr noundef nonnull %6) #15
  br label %pidfd_to_pid.exit.i

pidfd_to_pid.exit.i:                              ; preds = %if.end.i.i, %if.end3.i.pidfd_to_pid.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %call2.i.i, %if.end.i.i ], [ %call.i50.i, %if.end3.i.pidfd_to_pid.exit.i_crit_edge ]
  %cmp.i.i = icmp ugt ptr %retval.0.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.then6.i, label %if.end8.i

if.then6.i:                                       ; preds = %pidfd_to_pid.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %7 = ptrtoint ptr %retval.0.i.i to i32
  br label %err.i

if.end8.i:                                        ; preds = %pidfd_to_pid.exit.i
  %8 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i51.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i51.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %task.i.i, align 8
  %call1.i.i = tail call ptr @task_active_pid_ns(ptr noundef %11) #15
  %tobool.not.i.i.i = icmp eq ptr %retval.0.i.i, null
  br i1 %tobool.not.i.i.i, label %if.end8.i.err.i_crit_edge, label %ns_of_pid.exit.i.i

if.end8.i.err.i_crit_edge:                        ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %err.i

ns_of_pid.exit.i.i:                               ; preds = %if.end8.i
  %level.i.i.i = getelementptr inbounds %struct.pid, ptr %retval.0.i.i, i32 0, i32 1
  %12 = ptrtoint ptr %level.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %level.i.i.i, align 4
  %ns1.i.i.i = getelementptr %struct.pid, ptr %retval.0.i.i, i32 0, i32 7, i32 %13, i32 1
  %14 = ptrtoint ptr %ns1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ns1.i.i.i, align 4
  %tobool.not8.i.i = icmp eq ptr %15, null
  %cmp9.i.i = icmp eq ptr %15, %call1.i.i
  %or.cond10.i.i = select i1 %tobool.not8.i.i, i1 true, i1 %cmp9.i.i
  br i1 %or.cond10.i.i, label %ns_of_pid.exit.i.i.access_pidfd_pidns.exit.i_crit_edge, label %ns_of_pid.exit.i.i.if.end4.i.i_crit_edge

ns_of_pid.exit.i.i.if.end4.i.i_crit_edge:         ; preds = %ns_of_pid.exit.i.i
  br label %if.end4.i.i

ns_of_pid.exit.i.i.access_pidfd_pidns.exit.i_crit_edge: ; preds = %ns_of_pid.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %access_pidfd_pidns.exit.i

if.end4.i.i:                                      ; preds = %if.end4.i.i.if.end4.i.i_crit_edge, %ns_of_pid.exit.i.i.if.end4.i.i_crit_edge
  %p.011.i.i = phi ptr [ %17, %if.end4.i.i.if.end4.i.i_crit_edge ], [ %15, %ns_of_pid.exit.i.i.if.end4.i.i_crit_edge ]
  %parent.i.i = getelementptr inbounds %struct.pid_namespace, ptr %p.011.i.i, i32 0, i32 6
  %16 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %parent.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %17, null
  %cmp.i52.i = icmp eq ptr %17, %call1.i.i
  %or.cond.i.i = select i1 %tobool.not.i.i, i1 true, i1 %cmp.i52.i
  br i1 %or.cond.i.i, label %if.end4.i.i.access_pidfd_pidns.exit.i_crit_edge, label %if.end4.i.i.if.end4.i.i_crit_edge

if.end4.i.i.if.end4.i.i_crit_edge:                ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end4.i.i

if.end4.i.i.access_pidfd_pidns.exit.i_crit_edge:  ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %access_pidfd_pidns.exit.i

access_pidfd_pidns.exit.i:                        ; preds = %if.end4.i.i.access_pidfd_pidns.exit.i_crit_edge, %ns_of_pid.exit.i.i.access_pidfd_pidns.exit.i_crit_edge
  %tobool.not.lcssa.i.i = phi i1 [ %tobool.not8.i.i, %ns_of_pid.exit.i.i.access_pidfd_pidns.exit.i_crit_edge ], [ %tobool.not.i.i, %if.end4.i.i.access_pidfd_pidns.exit.i_crit_edge ]
  br i1 %tobool.not.lcssa.i.i, label %access_pidfd_pidns.exit.i.err.i_crit_edge, label %if.end11.i

access_pidfd_pidns.exit.i.err.i_crit_edge:        ; preds = %access_pidfd_pidns.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %err.i

if.end11.i:                                       ; preds = %access_pidfd_pidns.exit.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %info)
  %tobool12.not.i = icmp eq i32 %info, 0
  br i1 %tobool12.not.i, label %if.else.i, label %if.then13.i

if.then13.i:                                      ; preds = %if.end11.i
  %call.i53.i = call i32 @copy_siginfo_from_user(ptr noundef nonnull %kinfo.i, ptr noundef nonnull %0) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i53.i)
  %tobool15.not.i = icmp eq i32 %call.i53.i, 0
  br i1 %tobool15.not.i, label %if.end19.i, label %if.then13.i.err.i_crit_edge, !prof !509

if.then13.i.err.i_crit_edge:                      ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %err.i

if.end19.i:                                       ; preds = %if.then13.i
  %18 = ptrtoint ptr %kinfo.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %kinfo.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %19, i32 %sig)
  %cmp.not.i = icmp eq i32 %19, %sig
  br i1 %cmp.not.i, label %if.end27.i, label %if.end19.i.err.i_crit_edge, !prof !509

if.end19.i.err.i_crit_edge:                       ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %err.i

if.end27.i:                                       ; preds = %if.end19.i
  %20 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task.i, align 8
  %thread_pid.i.i = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 78
  %24 = ptrtoint ptr %thread_pid.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %thread_pid.i.i, align 16
  %cmp30.not.i = icmp eq ptr %25, %retval.0.i.i
  br i1 %cmp30.not.i, label %if.end27.i.if.end36.i_crit_edge, label %land.lhs.true.i

if.end27.i.if.end36.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end36.i

land.lhs.true.i:                                  ; preds = %if.end27.i
  %26 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %27)
  %cmp31.i = icmp sgt i32 %27, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -6, i32 %27)
  %cmp33.i = icmp eq i32 %27, -6
  %or.cond.i = or i1 %cmp31.i, %cmp33.i
  br i1 %or.cond.i, label %land.lhs.true.i.err.i_crit_edge, label %land.lhs.true.i.if.end36.i_crit_edge

land.lhs.true.i.if.end36.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end36.i

land.lhs.true.i.err.i_crit_edge:                  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %err.i

if.else.i:                                        ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #17
  %28 = call ptr @memset(ptr %3, i32 0, i32 20)
  %29 = ptrtoint ptr %kinfo.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %sig, ptr %kinfo.i, align 4
  %30 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %1, align 4
  %31 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 0, ptr %2, align 4
  %32 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i54.i = and i32 %32, -16384
  %33 = inttoptr i32 %and.i.i54.i to ptr
  %task.i55.i = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 2
  %34 = ptrtoint ptr %task.i55.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %task.i55.i, align 8
  %call.i.i.i = tail call i32 @__task_pid_nr_ns(ptr noundef %35, i32 noundef 1, ptr noundef null) #15
  %36 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %call.i.i.i, ptr %3, align 4
  %37 = ptrtoint ptr %task.i55.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %task.i55.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %38, i32 0, i32 99
  %39 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %cred.i.i, align 16
  %user_ns.i.i = getelementptr inbounds %struct.cred, ptr %40, i32 0, i32 25
  %41 = ptrtoint ptr %user_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %user_ns.i.i, align 4
  %uid.i.i = getelementptr inbounds %struct.cred, ptr %40, i32 0, i32 4
  %43 = ptrtoint ptr %uid.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %agg.tmp.sroa.0.0.copyload.i.i = load i32, ptr %uid.i.i, align 4
  %.fca.0.insert.i.i = insertvalue [1 x i32] poison, i32 %agg.tmp.sroa.0.0.copyload.i.i, 0
  %call11.i.i = tail call i32 @from_kuid_munged(ptr noundef %42, [1 x i32] %.fca.0.insert.i.i) #15
  %44 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %call11.i.i, ptr %4, align 4
  br label %if.end36.i

if.end36.i:                                       ; preds = %if.else.i, %land.lhs.true.i.if.end36.i_crit_edge, %if.end27.i.if.end36.i_crit_edge
  %call37.i = call i32 @kill_pid_info(i32 noundef %sig, ptr noundef nonnull %kinfo.i, ptr noundef nonnull %retval.0.i.i) #15
  br label %err.i

err.i:                                            ; preds = %if.end36.i, %land.lhs.true.i.err.i_crit_edge, %if.end19.i.err.i_crit_edge, %if.then13.i.err.i_crit_edge, %access_pidfd_pidns.exit.i.err.i_crit_edge, %if.end8.i.err.i_crit_edge, %if.then6.i
  %ret.0.i = phi i32 [ %7, %if.then6.i ], [ %call.i53.i, %if.then13.i.err.i_crit_edge ], [ -22, %if.end19.i.err.i_crit_edge ], [ -1, %land.lhs.true.i.err.i_crit_edge ], [ %call37.i, %if.end36.i ], [ -22, %access_pidfd_pidns.exit.i.err.i_crit_edge ], [ -22, %if.end8.i.err.i_crit_edge ]
  %and.i56.i = and i32 %call.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i56.i)
  %tobool.not.i57.i = icmp eq i32 %and.i56.i, 0
  br i1 %tobool.not.i57.i, label %err.i.__do_sys_pidfd_send_signal.exit_crit_edge, label %if.then.i.i

err.i.__do_sys_pidfd_send_signal.exit_crit_edge:  ; preds = %err.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_pidfd_send_signal.exit

if.then.i.i:                                      ; preds = %err.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @fput(ptr noundef nonnull %6) #15
  br label %__do_sys_pidfd_send_signal.exit

__do_sys_pidfd_send_signal.exit:                  ; preds = %if.then.i.i, %err.i.__do_sys_pidfd_send_signal.exit_crit_edge, %if.end.i.__do_sys_pidfd_send_signal.exit_crit_edge, %entry.__do_sys_pidfd_send_signal.exit_crit_edge
  %retval.0.i = phi i32 [ -22, %entry.__do_sys_pidfd_send_signal.exit_crit_edge ], [ -9, %if.end.i.__do_sys_pidfd_send_signal.exit_crit_edge ], [ %ret.0.i, %err.i.__do_sys_pidfd_send_signal.exit_crit_edge ], [ %ret.0.i, %if.then.i.i ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %kinfo.i) #15
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_tgkill(i32 noundef %tgid, i32 noundef %pid, i32 noundef %sig) #0 align 64 {
entry:
  %info.i.i = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %pid)
  %cmp.i = icmp slt i32 %pid, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %tgid)
  %cmp1.i = icmp slt i32 %tgid, 1
  %or.cond.i = or i1 %cmp1.i, %cmp.i
  br i1 %or.cond.i, label %entry.__do_sys_tgkill.exit_crit_edge, label %if.end.i

entry.__do_sys_tgkill.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_tgkill.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info.i.i) #15
  %0 = getelementptr inbounds %struct.anon, ptr %info.i.i, i32 0, i32 1
  %1 = getelementptr inbounds %struct.anon, ptr %info.i.i, i32 0, i32 2
  %2 = getelementptr inbounds %struct.anon, ptr %info.i.i, i32 0, i32 3
  %3 = getelementptr inbounds %struct.anon, ptr %info.i.i, i32 0, i32 3, i32 0, i32 1
  %4 = getelementptr inbounds i8, ptr %info.i.i, i32 20
  %5 = call ptr @memset(ptr %4, i32 0, i32 12)
  %6 = ptrtoint ptr %info.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %sig, ptr %info.i.i, align 4
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %0, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -6, ptr %1, align 4
  %9 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %task.i.i, align 8
  %call.i.i.i = tail call i32 @__task_pid_nr_ns(ptr noundef %12, i32 noundef 1, ptr noundef null) #15
  %13 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %call.i.i.i, ptr %2, align 4
  %14 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 99
  %16 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %cred.i.i, align 16
  %user_ns.i.i = getelementptr inbounds %struct.cred, ptr %17, i32 0, i32 25
  %18 = ptrtoint ptr %user_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %user_ns.i.i, align 4
  %uid.i.i = getelementptr inbounds %struct.cred, ptr %17, i32 0, i32 4
  %20 = ptrtoint ptr %uid.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %agg.tmp.sroa.0.0.copyload.i.i = load i32, ptr %uid.i.i, align 4
  %.fca.0.insert.i.i = insertvalue [1 x i32] poison, i32 %agg.tmp.sroa.0.0.copyload.i.i, 0
  %call12.i.i = tail call i32 @from_kuid_munged(ptr noundef %19, [1 x i32] %.fca.0.insert.i.i) #15
  %21 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %call12.i.i, ptr %3, align 4
  %call14.i.i = call fastcc i32 @do_send_specific(i32 noundef %tgid, i32 noundef %pid, i32 noundef %sig, ptr noundef nonnull %info.i.i) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info.i.i) #15
  br label %__do_sys_tgkill.exit

__do_sys_tgkill.exit:                             ; preds = %if.end.i, %entry.__do_sys_tgkill.exit_crit_edge
  %retval.0.i = phi i32 [ %call14.i.i, %if.end.i ], [ -22, %entry.__do_sys_tgkill.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_tkill(i32 noundef %pid, i32 noundef %sig) #0 align 64 {
entry:
  %info.i.i = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %pid)
  %cmp.i = icmp slt i32 %pid, 1
  br i1 %cmp.i, label %entry.__do_sys_tkill.exit_crit_edge, label %if.end.i

entry.__do_sys_tkill.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_tkill.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info.i.i) #15
  %0 = getelementptr inbounds %struct.anon, ptr %info.i.i, i32 0, i32 1
  %1 = getelementptr inbounds %struct.anon, ptr %info.i.i, i32 0, i32 2
  %2 = getelementptr inbounds %struct.anon, ptr %info.i.i, i32 0, i32 3
  %3 = getelementptr inbounds %struct.anon, ptr %info.i.i, i32 0, i32 3, i32 0, i32 1
  %4 = getelementptr inbounds i8, ptr %info.i.i, i32 20
  %5 = call ptr @memset(ptr %4, i32 0, i32 12)
  %6 = ptrtoint ptr %info.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %sig, ptr %info.i.i, align 4
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %0, align 4
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -6, ptr %1, align 4
  %9 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %task.i.i, align 8
  %call.i.i.i = tail call i32 @__task_pid_nr_ns(ptr noundef %12, i32 noundef 1, ptr noundef null) #15
  %13 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %call.i.i.i, ptr %2, align 4
  %14 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 99
  %16 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %cred.i.i, align 16
  %user_ns.i.i = getelementptr inbounds %struct.cred, ptr %17, i32 0, i32 25
  %18 = ptrtoint ptr %user_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %user_ns.i.i, align 4
  %uid.i.i = getelementptr inbounds %struct.cred, ptr %17, i32 0, i32 4
  %20 = ptrtoint ptr %uid.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %agg.tmp.sroa.0.0.copyload.i.i = load i32, ptr %uid.i.i, align 4
  %.fca.0.insert.i.i = insertvalue [1 x i32] poison, i32 %agg.tmp.sroa.0.0.copyload.i.i, 0
  %call12.i.i = tail call i32 @from_kuid_munged(ptr noundef %19, [1 x i32] %.fca.0.insert.i.i) #15
  %21 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %call12.i.i, ptr %3, align 4
  %call14.i.i = call fastcc i32 @do_send_specific(i32 noundef 0, i32 noundef %pid, i32 noundef %sig, ptr noundef nonnull %info.i.i) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info.i.i) #15
  br label %__do_sys_tkill.exit

__do_sys_tkill.exit:                              ; preds = %if.end.i, %entry.__do_sys_tkill.exit_crit_edge
  %retval.0.i = phi i32 [ %call14.i.i, %if.end.i ], [ -22, %entry.__do_sys_tkill.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_rt_sigqueueinfo(i32 noundef %pid, i32 noundef %sig, i32 noundef %uinfo) #0 align 64 {
entry:
  %info.i = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %uinfo to ptr
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info.i) #15
  %1 = call ptr @memset(ptr %info.i, i32 255, i32 32)
  %call.i = call fastcc i32 @__copy_siginfo_from_user(i32 noundef %sig, ptr noundef nonnull %info.i, ptr noundef %0) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.__do_sys_rt_sigqueueinfo.exit_crit_edge, !prof !509

entry.__do_sys_rt_sigqueueinfo.exit_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_sigqueueinfo.exit

if.end.i:                                         ; preds = %entry
  %2 = getelementptr inbounds %struct.anon, ptr %info.i, i32 0, i32 2
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %4)
  %cmp.i.i = icmp sgt i32 %4, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -6, i32 %4)
  %cmp2.i.i = icmp eq i32 %4, -6
  %or.cond.i.i = or i1 %cmp.i.i, %cmp2.i.i
  br i1 %or.cond.i.i, label %land.lhs.true.i.i, label %if.end.i.if.end.i.i_crit_edge

if.end.i.if.end.i.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i

land.lhs.true.i.i:                                ; preds = %if.end.i
  %5 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task.i.i, align 8
  %call.i.i.i = call i32 @__task_pid_nr_ns(ptr noundef %8, i32 noundef 0, ptr noundef null) #15
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i.i, i32 %pid)
  %cmp4.not.i.i = icmp eq i32 %call.i.i.i, %pid
  br i1 %cmp4.not.i.i, label %land.lhs.true.i.i.if.end.i.i_crit_edge, label %land.lhs.true.i.i.__do_sys_rt_sigqueueinfo.exit_crit_edge

land.lhs.true.i.i.__do_sys_rt_sigqueueinfo.exit_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_sigqueueinfo.exit

land.lhs.true.i.i.if.end.i.i_crit_edge:           ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i.if.end.i.i_crit_edge, %if.end.i.if.end.i.i_crit_edge
  %call5.i.i = call fastcc i32 @kill_proc_info(i32 noundef %sig, ptr noundef nonnull %info.i, i32 noundef %pid) #15
  br label %__do_sys_rt_sigqueueinfo.exit

__do_sys_rt_sigqueueinfo.exit:                    ; preds = %if.end.i.i, %land.lhs.true.i.i.__do_sys_rt_sigqueueinfo.exit_crit_edge, %entry.__do_sys_rt_sigqueueinfo.exit_crit_edge
  %retval.0.i = phi i32 [ %call.i, %entry.__do_sys_rt_sigqueueinfo.exit_crit_edge ], [ %call5.i.i, %if.end.i.i ], [ -1, %land.lhs.true.i.i.__do_sys_rt_sigqueueinfo.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info.i) #15
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_rt_tgsigqueueinfo(i32 noundef %tgid, i32 noundef %pid, i32 noundef %sig, i32 noundef %uinfo) #0 align 64 {
entry:
  %info.i = alloca %struct.kernel_siginfo, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %uinfo to ptr
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info.i) #15
  %1 = getelementptr inbounds %struct.anon, ptr %info.i, i32 0, i32 2
  %2 = call ptr @memset(ptr %info.i, i32 255, i32 32)
  %call.i = call fastcc i32 @__copy_siginfo_from_user(i32 noundef %sig, ptr noundef nonnull %info.i, ptr noundef %0) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.__do_sys_rt_tgsigqueueinfo.exit_crit_edge, !prof !509

entry.__do_sys_rt_tgsigqueueinfo.exit_crit_edge:  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_tgsigqueueinfo.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %pid)
  %cmp.i.i = icmp slt i32 %pid, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %tgid)
  %cmp1.i.i = icmp slt i32 %tgid, 1
  %or.cond.i.i = or i1 %cmp1.i.i, %cmp.i.i
  br i1 %or.cond.i.i, label %if.end.i.__do_sys_rt_tgsigqueueinfo.exit_crit_edge, label %if.end.i.i

if.end.i.__do_sys_rt_tgsigqueueinfo.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_tgsigqueueinfo.exit

if.end.i.i:                                       ; preds = %if.end.i
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %4)
  %cmp2.i.i = icmp sgt i32 %4, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -6, i32 %4)
  %cmp5.i.i = icmp eq i32 %4, -6
  %or.cond16.i.i = or i1 %cmp2.i.i, %cmp5.i.i
  br i1 %or.cond16.i.i, label %land.lhs.true.i.i, label %if.end.i.i.if.end9.i.i_crit_edge

if.end.i.i.if.end9.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end9.i.i

land.lhs.true.i.i:                                ; preds = %if.end.i.i
  %5 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task.i.i, align 8
  %call.i.i.i = call i32 @__task_pid_nr_ns(ptr noundef %8, i32 noundef 0, ptr noundef null) #15
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i.i, i32 %pid)
  %cmp7.not.i.i = icmp eq i32 %call.i.i.i, %pid
  br i1 %cmp7.not.i.i, label %land.lhs.true.i.i.if.end9.i.i_crit_edge, label %land.lhs.true.i.i.__do_sys_rt_tgsigqueueinfo.exit_crit_edge

land.lhs.true.i.i.__do_sys_rt_tgsigqueueinfo.exit_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_tgsigqueueinfo.exit

land.lhs.true.i.i.if.end9.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %land.lhs.true.i.i.if.end9.i.i_crit_edge, %if.end.i.i.if.end9.i.i_crit_edge
  %call10.i.i = call fastcc i32 @do_send_specific(i32 noundef %tgid, i32 noundef %pid, i32 noundef %sig, ptr noundef nonnull %info.i) #15
  br label %__do_sys_rt_tgsigqueueinfo.exit

__do_sys_rt_tgsigqueueinfo.exit:                  ; preds = %if.end9.i.i, %land.lhs.true.i.i.__do_sys_rt_tgsigqueueinfo.exit_crit_edge, %if.end.i.__do_sys_rt_tgsigqueueinfo.exit_crit_edge, %entry.__do_sys_rt_tgsigqueueinfo.exit_crit_edge
  %retval.0.i = phi i32 [ %call.i, %entry.__do_sys_rt_tgsigqueueinfo.exit_crit_edge ], [ %call10.i.i, %if.end9.i.i ], [ -22, %if.end.i.__do_sys_rt_tgsigqueueinfo.exit_crit_edge ], [ -1, %land.lhs.true.i.i.__do_sys_rt_tgsigqueueinfo.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info.i) #15
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @kernel_sigaction(i32 noundef %sig, ptr noundef %action) #0 align 64 {
entry:
  %mask = alloca %struct.sigset_t, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %sighand = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 112
  %4 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_lock_irq(ptr noundef %5) #15
  %6 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task, align 8
  %sighand3 = getelementptr inbounds %struct.task_struct, ptr %7, i32 0, i32 112
  %8 = ptrtoint ptr %sighand3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %sighand3, align 4
  %sub = add i32 %sig, -1
  %arrayidx = getelementptr %struct.sighand_struct, ptr %9, i32 0, i32 3, i32 %sub
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %action, ptr %arrayidx, align 4
  %cmp = icmp eq ptr %action, inttoptr (i32 1 to ptr)
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %mask) #15
  %11 = getelementptr inbounds [2 x i32], ptr %mask, i32 0, i32 1
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %11, align 4
  %13 = ptrtoint ptr %mask to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %mask, align 4
  %rem.i = and i32 %sub, 31
  %shl.i = shl nuw i32 1, %rem.i
  %div3.i = lshr i32 %sub, 5
  %arrayidx.i15 = getelementptr [2 x i32], ptr %mask, i32 0, i32 %div3.i
  %14 = ptrtoint ptr %arrayidx.i15 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx.i15, align 4
  %or.i = or i32 %15, %shl.i
  store i32 %or.i, ptr %arrayidx.i15, align 4
  %16 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %task, align 8
  %signal = getelementptr inbounds %struct.task_struct, ptr %17, i32 0, i32 111
  %18 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %signal, align 16
  %shared_pending = getelementptr inbounds %struct.signal_struct, ptr %19, i32 0, i32 6
  call fastcc void @flush_sigqueue_mask(ptr noundef nonnull %mask, ptr noundef %shared_pending)
  %20 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %task, align 8
  %pending = getelementptr inbounds %struct.task_struct, ptr %21, i32 0, i32 116
  call fastcc void @flush_sigqueue_mask(ptr noundef nonnull %mask, ptr noundef %pending)
  tail call void @recalc_sigpending()
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %mask) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %22 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task, align 8
  %sighand11 = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 112
  %24 = ptrtoint ptr %sighand11 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %sighand11, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %25) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @flush_sigqueue_mask(ptr nocapture noundef readonly %mask, ptr noundef %s) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %signal = getelementptr inbounds %struct.sigpending, ptr %s, i32 0, i32 1
  %arrayidx.i = getelementptr [2 x i32], ptr %mask, i32 0, i32 1
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 4
  %arrayidx2.i = getelementptr %struct.sigpending, ptr %s, i32 0, i32 1, i32 0, i32 1
  %2 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx2.i, align 4
  %and.i = and i32 %3, %1
  %4 = ptrtoint ptr %mask to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mask, align 4
  %6 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %signal, align 4
  %and9.i = and i32 %7, %5
  %or.i = or i32 %and9.i, %and.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i)
  %cmp.i.not = icmp eq i32 %or.i, 0
  br i1 %cmp.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %neg.i = xor i32 %1, -1
  %and.i36 = and i32 %3, %neg.i
  %8 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %and.i36, ptr %arrayidx2.i, align 4
  %9 = ptrtoint ptr %mask to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %mask, align 4
  %neg9.i = xor i32 %10, -1
  %and10.i = and i32 %7, %neg9.i
  %11 = ptrtoint ptr %signal to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %and10.i, ptr %signal, align 4
  %12 = ptrtoint ptr %s to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %s, align 4
  %cmp.not42 = icmp eq ptr %13, %s
  br i1 %cmp.not42, label %if.end.cleanup_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end.for.body_crit_edge
  %q.043 = phi ptr [ %n.044, %for.inc.for.body_crit_edge ], [ %13, %if.end.for.body_crit_edge ]
  %14 = ptrtoint ptr %q.043 to i32
  call void @__asan_load4_noabort(i32 %14)
  %n.044 = load ptr, ptr %q.043, align 4
  %info = getelementptr inbounds %struct.sigqueue, ptr %q.043, i32 0, i32 2
  %15 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %info, align 4
  %sub.i = add i32 %16, -1
  %div3.i = lshr i32 %sub.i, 5
  %arrayidx.i38 = getelementptr [2 x i32], ptr %mask, i32 0, i32 %div3.i
  %17 = ptrtoint ptr %arrayidx.i38 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx.i38, align 4
  %rem.i = and i32 %sub.i, 31
  %19 = shl nuw i32 1, %rem.i
  %20 = and i32 %19, %18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool11.not = icmp eq i32 %20, 0
  br i1 %tobool11.not, label %for.body.for.inc_crit_edge, label %if.then12

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc

if.then12:                                        ; preds = %for.body
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %q.043) #15
  br i1 %call.i.i, label %if.end.i.i, label %if.then12.list_del_init.exit_crit_edge

if.then12.list_del_init.exit_crit_edge:           ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #17
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %q.043, i32 0, i32 1
  %21 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %prev.i.i, align 4
  %23 = ptrtoint ptr %q.043 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %q.043, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %22, ptr %prev1.i.i.i, align 4
  %26 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %24, ptr %22, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %if.then12.list_del_init.exit_crit_edge
  %27 = ptrtoint ptr %q.043 to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %q.043, ptr %q.043, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %q.043, i32 0, i32 1
  %28 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %q.043, ptr %prev.i3.i, align 4
  %flags.i = getelementptr inbounds %struct.sigqueue, ptr %q.043, i32 0, i32 1
  %29 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %flags.i, align 4
  %and.i40 = and i32 %30, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i40)
  %tobool.not.i = icmp eq i32 %and.i40, 0
  br i1 %tobool.not.i, label %if.end.i, label %list_del_init.exit.for.inc_crit_edge

list_del_init.exit.for.inc_crit_edge:             ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc

if.end.i:                                         ; preds = %list_del_init.exit
  %ucounts.i = getelementptr inbounds %struct.sigqueue, ptr %q.043, i32 0, i32 3
  %31 = ptrtoint ptr %ucounts.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %ucounts.i, align 4
  %tobool1.not.i = icmp eq ptr %32, null
  br i1 %tobool1.not.i, label %if.end.i.if.end5.i_crit_edge, label %if.then2.i

if.end.i.if.end5.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end5.i

if.then2.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dec_rlimit_put_ucounts(ptr noundef nonnull %32, i32 noundef 14) #15
  %33 = ptrtoint ptr %ucounts.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr null, ptr %ucounts.i, align 4
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then2.i, %if.end.i.if.end5.i_crit_edge
  %34 = load ptr, ptr @sigqueue_cachep, align 4
  tail call void @kmem_cache_free(ptr noundef %34, ptr noundef %q.043) #15
  br label %for.inc

for.inc:                                          ; preds = %if.end5.i, %list_del_init.exit.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %cmp.not = icmp eq ptr %n.044, %s
  br i1 %cmp.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local void @sigaction_compat_abi(ptr noundef %act, ptr noundef %oact) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @do_sigaction(i32 noundef %sig, ptr noundef %act, ptr noundef %oact) local_unnamed_addr #0 align 64 {
entry:
  %mask = alloca %struct.sigset_t, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %mask) #15
  %4 = getelementptr inbounds [2 x i32], ptr %mask, i32 0, i32 1
  %5 = add i32 %sig, -65
  call void @__sanitizer_cov_trace_const_cmp4(i32 -64, i32 %5)
  %6 = icmp ult i32 %5, -64
  br i1 %6, label %entry.cleanup_crit_edge, label %lor.lhs.false2

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

lor.lhs.false2:                                   ; preds = %entry
  %tobool3.not = icmp eq ptr %act, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %sig)
  %cmp6 = icmp ugt i32 %sig, 31
  %7 = or i1 %cmp6, %tobool3.not
  %.pre = add nsw i32 %sig, -1
  br i1 %7, label %lor.lhs.false2.if.end_crit_edge, label %land.lhs.true7

lor.lhs.false2.if.end_crit_edge:                  ; preds = %lor.lhs.false2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true7:                                   ; preds = %lor.lhs.false2
  %shl = shl nuw nsw i32 1, %.pre
  %and = and i32 %shl, 262400
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool8.not = icmp eq i32 %and, 0
  br i1 %tobool8.not, label %land.lhs.true7.if.end_crit_edge, label %land.lhs.true7.cleanup_crit_edge

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %lor.lhs.false2.if.end_crit_edge
  %sighand = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 112
  %8 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %sighand, align 4
  %arrayidx = getelementptr %struct.sighand_struct, ptr %9, i32 0, i32 3, i32 %.pre
  tail call void @_raw_spin_lock_irq(ptr noundef %9) #15
  %sa_flags = getelementptr inbounds %struct.sigaction, ptr %arrayidx, i32 0, i32 1
  %10 = ptrtoint ptr %sa_flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sa_flags, align 4
  %and11 = and i32 %11, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11)
  %tobool12.not = icmp eq i32 %and11, 0
  br i1 %tobool12.not, label %if.end16, label %if.end.cleanup.sink.split_crit_edge

if.end.cleanup.sink.split_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup.sink.split

if.end16:                                         ; preds = %if.end
  %tobool17.not = icmp eq ptr %oact, null
  br i1 %tobool17.not, label %if.end16.do.end_crit_edge, label %if.then18

if.end16.do.end_crit_edge:                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %12 = call ptr @memcpy(ptr %oact, ptr %arrayidx, i32 20)
  br label %do.end

do.end:                                           ; preds = %if.then18, %if.end16.do.end_crit_edge
  br i1 %tobool3.not, label %do.end.if.end25_crit_edge, label %if.then21

do.end.if.end25_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end25

if.then21:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #17
  %sa_flags23 = getelementptr inbounds %struct.sigaction, ptr %act, i32 0, i32 1
  %13 = ptrtoint ptr %sa_flags23 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sa_flags23, align 4
  %and24 = and i32 %14, -570423289
  store i32 %and24, ptr %sa_flags23, align 4
  br label %if.end25

if.end25:                                         ; preds = %if.then21, %do.end.if.end25_crit_edge
  br i1 %tobool17.not, label %if.end25.if.end31_crit_edge, label %if.then27

if.end25.if.end31_crit_edge:                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end31

if.then27:                                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #17
  %sa_flags29 = getelementptr inbounds %struct.sigaction, ptr %oact, i32 0, i32 1
  %15 = ptrtoint ptr %sa_flags29 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %sa_flags29, align 4
  %and30 = and i32 %16, -570423289
  store i32 %and30, ptr %sa_flags29, align 4
  br label %if.end31

if.end31:                                         ; preds = %if.then27, %if.end25.if.end31_crit_edge
  tail call void @sigaction_compat_abi(ptr noundef %act, ptr noundef %oact)
  br i1 %tobool3.not, label %if.end31.cleanup.sink.split_crit_edge, label %if.then33

if.end31.cleanup.sink.split_crit_edge:            ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup.sink.split

if.then33:                                        ; preds = %if.end31
  %sa_mask = getelementptr inbounds %struct.sigaction, ptr %act, i32 0, i32 3
  %17 = ptrtoint ptr %sa_mask to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %sa_mask, align 4
  %and.i105 = and i32 %18, -262401
  store i32 %and.i105, ptr %sa_mask, align 4
  %19 = call ptr @memcpy(ptr %arrayidx, ptr %act, i32 20)
  %20 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %sighand, align 4
  %arrayidx.i = getelementptr %struct.sighand_struct, ptr %21, i32 0, i32 3, i32 %.pre
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx.i, align 4
  %magicptr.i = ptrtoint ptr %23 to i32
  %24 = zext i32 %magicptr.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %24, ptr @__sancov_gen_cov_switch_values.168)
  switch i32 %magicptr.i, label %if.then33.cleanup.sink.split_crit_edge [
    i32 1, label %if.then33.if.then37_crit_edge
    i32 0, label %land.rhs.i
  ]

if.then33.if.then37_crit_edge:                    ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then37

if.then33.cleanup.sink.split_crit_edge:           ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup.sink.split

land.rhs.i:                                       ; preds = %if.then33
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %.pre)
  %25 = icmp ult i32 %.pre, 31
  br i1 %25, label %sig_handler_ignored.exit, label %land.rhs.i.cleanup.sink.split_crit_edge

land.rhs.i.cleanup.sink.split_crit_edge:          ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup.sink.split

sig_handler_ignored.exit:                         ; preds = %land.rhs.i
  %shl.i = shl nuw nsw i32 1, %.pre
  %and.i106 = and i32 %shl.i, 138608640
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i106)
  %tobool.i.not = icmp eq i32 %and.i106, 0
  br i1 %tobool.i.not, label %sig_handler_ignored.exit.cleanup.sink.split_crit_edge, label %sig_handler_ignored.exit.if.then37_crit_edge

sig_handler_ignored.exit.if.then37_crit_edge:     ; preds = %sig_handler_ignored.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then37

sig_handler_ignored.exit.cleanup.sink.split_crit_edge: ; preds = %sig_handler_ignored.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup.sink.split

if.then37:                                        ; preds = %sig_handler_ignored.exit.if.then37_crit_edge, %if.then33.if.then37_crit_edge
  %26 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 0, ptr %4, align 4
  %27 = ptrtoint ptr %mask to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 0, ptr %mask, align 4
  %rem.i = and i32 %.pre, 31
  %shl.i109 = shl nuw i32 1, %rem.i
  %div3.i = lshr i32 %.pre, 5
  %arrayidx.i110 = getelementptr [2 x i32], ptr %mask, i32 0, i32 %div3.i
  %28 = ptrtoint ptr %arrayidx.i110 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx.i110, align 4
  %or.i = or i32 %29, %shl.i109
  store i32 %or.i, ptr %arrayidx.i110, align 4
  %signal = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 111
  %30 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %signal, align 16
  %shared_pending = getelementptr inbounds %struct.signal_struct, ptr %31, i32 0, i32 6
  call fastcc void @flush_sigqueue_mask(ptr noundef nonnull %mask, ptr noundef %shared_pending)
  %call39 = tail call i32 @rcu_read_lock_any_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call39)
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %land.lhs.true41, label %if.then37.do.end49_crit_edge

if.then37.do.end49_crit_edge:                     ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end49

land.lhs.true41:                                  ; preds = %if.then37
  %call42 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42)
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %land.lhs.true41.do.end49_crit_edge, label %land.lhs.true44

land.lhs.true41.do.end49_crit_edge:               ; preds = %land.lhs.true41
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end49

land.lhs.true44:                                  ; preds = %land.lhs.true41
  %.b103 = load i1, ptr @do_sigaction.__warned, align 1
  br i1 %.b103, label %land.lhs.true44.do.end49_crit_edge, label %if.then46

land.lhs.true44.do.end49_crit_edge:               ; preds = %land.lhs.true44
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end49

if.then46:                                        ; preds = %land.lhs.true44
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @do_sigaction.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 4145, ptr noundef nonnull @.str.2) #15
  br label %do.end49

do.end49:                                         ; preds = %if.then46, %land.lhs.true44.do.end49_crit_edge, %land.lhs.true41.do.end49_crit_edge, %if.then37.do.end49_crit_edge
  %32 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %signal, align 16
  %thread_head = getelementptr inbounds %struct.signal_struct, ptr %33, i32 0, i32 3
  %34 = ptrtoint ptr %thread_head to i32
  call void @__asan_load4_noabort(i32 %34)
  %.pn112 = load volatile ptr, ptr %thread_head, align 4
  %cmp57.not114 = icmp eq ptr %.pn112, %thread_head
  br i1 %cmp57.not114, label %do.end49.cleanup.sink.split_crit_edge, label %do.end49.for.body_crit_edge

do.end49.for.body_crit_edge:                      ; preds = %do.end49
  br label %for.body

do.end49.cleanup.sink.split_crit_edge:            ; preds = %do.end49
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup.sink.split

for.body:                                         ; preds = %for.body.for.body_crit_edge, %do.end49.for.body_crit_edge
  %.pn115 = phi ptr [ %.pn, %for.body.for.body_crit_edge ], [ %.pn112, %do.end49.for.body_crit_edge ]
  %pending = getelementptr i8, ptr %.pn115, i32 308
  call fastcc void @flush_sigqueue_mask(ptr noundef nonnull %mask, ptr noundef %pending)
  %35 = ptrtoint ptr %.pn115 to i32
  call void @__asan_load4_noabort(i32 %35)
  %.pn = load volatile ptr, ptr %.pn115, align 4
  %36 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %signal, align 16
  %thread_head56 = getelementptr inbounds %struct.signal_struct, ptr %37, i32 0, i32 3
  %cmp57.not = icmp eq ptr %.pn, %thread_head56
  br i1 %cmp57.not, label %for.body.cleanup.sink.split_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.body.cleanup.sink.split_crit_edge:            ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %for.body.cleanup.sink.split_crit_edge, %do.end49.cleanup.sink.split_crit_edge, %sig_handler_ignored.exit.cleanup.sink.split_crit_edge, %land.rhs.i.cleanup.sink.split_crit_edge, %if.then33.cleanup.sink.split_crit_edge, %if.end31.cleanup.sink.split_crit_edge, %if.end.cleanup.sink.split_crit_edge
  %retval.0.ph = phi i32 [ -22, %if.end.cleanup.sink.split_crit_edge ], [ 0, %do.end49.cleanup.sink.split_crit_edge ], [ 0, %if.then33.cleanup.sink.split_crit_edge ], [ 0, %land.rhs.i.cleanup.sink.split_crit_edge ], [ 0, %sig_handler_ignored.exit.cleanup.sink.split_crit_edge ], [ 0, %if.end31.cleanup.sink.split_crit_edge ], [ 0, %for.body.cleanup.sink.split_crit_edge ]
  %38 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %39) #15
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %land.lhs.true7.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %land.lhs.true7.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ], [ %retval.0.ph, %cleanup.sink.split ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %mask) #15
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_sigaltstack(i32 noundef %uss, i32 noundef %uoss) #0 align 64 {
entry:
  %new.i = alloca %struct.sigaltstack, align 4
  %old.i = alloca %struct.sigaltstack, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %uss to ptr
  %1 = inttoptr i32 %uoss to ptr
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %new.i) #15
  %2 = ptrtoint ptr %new.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %new.i, align 4, !annotation !511
  %3 = getelementptr inbounds %struct.sigaltstack, ptr %new.i, i32 0, i32 1
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %3, align 4, !annotation !511
  %5 = getelementptr inbounds %struct.sigaltstack, ptr %new.i, i32 0, i32 2
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -1, ptr %5, align 4, !annotation !511
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %old.i) #15
  %7 = ptrtoint ptr %old.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr inttoptr (i32 -1 to ptr), ptr %old.i, align 4, !annotation !511
  %8 = getelementptr inbounds %struct.sigaltstack, ptr %old.i, i32 0, i32 1
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %8, align 4, !annotation !511
  %10 = getelementptr inbounds %struct.sigaltstack, ptr %old.i, i32 0, i32 2
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 -1, ptr %10, align 4, !annotation !511
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %uss)
  %tobool.not.i = icmp eq i32 %uss, 0
  br i1 %tobool.not.i, label %entry.if.end.i_crit_edge, label %if.end59.i.i.i

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

if.end59.i.i.i:                                   ; preds = %entry
  tail call void @__might_fault(ptr noundef nonnull @.str.115, i32 noundef 156) #15
  %call.i.i.i = tail call zeroext i1 @should_fail_usercopy() #15
  br i1 %call.i.i.i, label %if.end59.i.i.i.if.then11.i.i.i_crit_edge, label %land.lhs.true.i.i.i

if.end59.i.i.i.if.then11.i.i.i_crit_edge:         ; preds = %if.end59.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i.i

land.lhs.true.i.i.i:                              ; preds = %if.end59.i.i.i
  %12 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr nonnull %0, i32 12, i32 -1226833920) #19, !srcloc !550
  %asmresult.i.i.i = extractvalue { i32, i32 } %12, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i)
  %cmp.i6.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %cmp.i6.i.i, label %if.end.i.i.i, label %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge, !prof !509

land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge:    ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %new.i, i32 noundef 12) #15
  %13 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 4
  %15 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i.i) #10, !srcloc !551
  %and.i.i.i.i.i = and i32 %15, -13
  %or.i.i.i.i.i = or i32 %and.i.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i.i) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %call1.i.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %new.i, ptr noundef nonnull %0, i32 noundef 12) #15
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %15) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool4.not.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool4.not.i.i.i, label %if.end.i.i.i.if.end.i_crit_edge, label %if.end.i.i.i.if.then11.i.i.i_crit_edge, !prof !509

if.end.i.i.i.if.then11.i.i.i_crit_edge:           ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i.i

if.end.i.i.i.if.end.i_crit_edge:                  ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

if.then11.i.i.i:                                  ; preds = %if.end.i.i.i.if.then11.i.i.i_crit_edge, %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge, %if.end59.i.i.i.if.then11.i.i.i_crit_edge
  %res.0.i.i37.i = phi i32 [ %call1.i.i.i.i, %if.end.i.i.i.if.then11.i.i.i_crit_edge ], [ 12, %if.end59.i.i.i.if.then11.i.i.i_crit_edge ], [ 12, %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge ]
  %sub.i.i.i = sub i32 12, %res.0.i.i37.i
  %add.ptr.i.i.i = getelementptr i8, ptr %new.i, i32 %sub.i.i.i
  %16 = call ptr @memset(ptr %add.ptr.i.i.i, i32 0, i32 %res.0.i.i37.i)
  br label %__do_sys_sigaltstack.exit

if.end.i:                                         ; preds = %if.end.i.i.i.if.end.i_crit_edge, %entry.if.end.i_crit_edge
  %new..i = phi ptr [ null, %entry.if.end.i_crit_edge ], [ %new.i, %if.end.i.i.i.if.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %uoss)
  %tobool3.not.i = icmp eq i32 %uoss, 0
  %cond7.i = select i1 %tobool3.not.i, ptr null, ptr %old.i
  %17 = call i32 @llvm.read_register.i32(metadata !499) #15
  %or.i = or i32 %17, 16383
  %sub.i = add nsw i32 %or.i, -7
  %18 = inttoptr i32 %sub.i to ptr
  %arrayidx.i.i = getelementptr %struct.pt_regs, ptr %18, i32 -1, i32 0, i32 13
  %19 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx.i.i, align 4
  %call9.i = call fastcc i32 @do_sigaltstack(ptr noundef %new..i, ptr noundef %cond7.i, i32 noundef %20) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %tobool10.not.i = icmp ne i32 %call9.i, 0
  %brmerge.i = or i1 %tobool3.not.i, %tobool10.not.i
  br i1 %brmerge.i, label %if.end.i.__do_sys_sigaltstack.exit_crit_edge, label %if.end59.i.i28.i

if.end.i.__do_sys_sigaltstack.exit_crit_edge:     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_sigaltstack.exit

if.end59.i.i28.i:                                 ; preds = %if.end.i
  call void @__might_fault(ptr noundef nonnull @.str.115, i32 noundef 174) #15
  %call.i.i29.i = call zeroext i1 @should_fail_usercopy() #15
  br i1 %call.i.i29.i, label %if.end59.i.i28.i.__do_sys_sigaltstack.exit_crit_edge, label %if.end.i.i32.i

if.end59.i.i28.i.__do_sys_sigaltstack.exit_crit_edge: ; preds = %if.end59.i.i28.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_sigaltstack.exit

if.end.i.i32.i:                                   ; preds = %if.end59.i.i28.i
  %21 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr nonnull %1, i32 12, i32 -1226833920) #19, !srcloc !554
  %asmresult.i.i30.i = extractvalue { i32, i32 } %21, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i30.i)
  %cmp.i6.i31.i = icmp eq i32 %asmresult.i.i30.i, 0
  br i1 %cmp.i6.i31.i, label %copy_to_user.exit.i, label %if.end.i.i32.i.__do_sys_sigaltstack.exit_crit_edge

if.end.i.i32.i.__do_sys_sigaltstack.exit_crit_edge: ; preds = %if.end.i.i32.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_sigaltstack.exit

copy_to_user.exit.i:                              ; preds = %if.end.i.i32.i
  call void @__sanitizer_cov_trace_pc() #17
  %call.i.i.i33.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %old.i, i32 noundef 12) #15
  %call.i12.i.i.i = call i32 @arm_copy_to_user(ptr noundef nonnull %1, ptr noundef nonnull %old.i, i32 noundef 12) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i.i)
  %tobool15.not.i = icmp eq i32 %call.i12.i.i.i, 0
  %spec.select.i = select i1 %tobool15.not.i, i32 0, i32 -14
  br label %__do_sys_sigaltstack.exit

__do_sys_sigaltstack.exit:                        ; preds = %copy_to_user.exit.i, %if.end.i.i32.i.__do_sys_sigaltstack.exit_crit_edge, %if.end59.i.i28.i.__do_sys_sigaltstack.exit_crit_edge, %if.end.i.__do_sys_sigaltstack.exit_crit_edge, %if.then11.i.i.i
  %retval.0.i = phi i32 [ %call9.i, %if.end.i.__do_sys_sigaltstack.exit_crit_edge ], [ -14, %if.then11.i.i.i ], [ -14, %if.end59.i.i28.i.__do_sys_sigaltstack.exit_crit_edge ], [ -14, %if.end.i.i32.i.__do_sys_sigaltstack.exit_crit_edge ], [ %spec.select.i, %copy_to_user.exit.i ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %old.i) #15
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %new.i) #15
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @restore_altstack(ptr noundef %uss) local_unnamed_addr #0 align 64 {
entry:
  %new = alloca %struct.sigaltstack, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %new) #15
  %0 = ptrtoint ptr %new to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %new, align 4, !annotation !511
  %1 = getelementptr inbounds %struct.sigaltstack, ptr %new, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %1, align 4, !annotation !511
  %3 = getelementptr inbounds %struct.sigaltstack, ptr %new, i32 0, i32 2
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %3, align 4, !annotation !511
  tail call void @__might_fault(ptr noundef nonnull @.str.115, i32 noundef 156) #15
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #15
  br i1 %call.i.i, label %entry.if.then11.i.i_crit_edge, label %land.lhs.true.i.i

entry.if.then11.i.i_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i

land.lhs.true.i.i:                                ; preds = %entry
  %5 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %uss, i32 12, i32 -1226833920) #19, !srcloc !550
  %asmresult.i.i = extractvalue { i32, i32 } %5, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i.i, label %land.lhs.true.i.i.if.then11.i.i_crit_edge, !prof !509

land.lhs.true.i.i.if.then11.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %new, i32 noundef 12) #15
  %6 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 4
  %8 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #10, !srcloc !551
  %and.i.i.i.i = and i32 %8, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %call1.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %new, ptr noundef %uss, i32 noundef 12) #15
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %8) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool4.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end, label %if.end.i.i.if.then11.i.i_crit_edge, !prof !509

if.end.i.i.if.then11.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i.if.then11.i.i_crit_edge, %land.lhs.true.i.i.if.then11.i.i_crit_edge, %entry.if.then11.i.i_crit_edge
  %res.0.i.i5 = phi i32 [ %call1.i.i.i, %if.end.i.i.if.then11.i.i_crit_edge ], [ 12, %entry.if.then11.i.i_crit_edge ], [ 12, %land.lhs.true.i.i.if.then11.i.i_crit_edge ]
  %sub.i.i = sub i32 12, %res.0.i.i5
  %add.ptr.i.i = getelementptr i8, ptr %new, i32 %sub.i.i
  %9 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i5)
  br label %cleanup

if.end:                                           ; preds = %if.end.i.i
  %10 = call i32 @llvm.read_register.i32(metadata !499)
  %or = or i32 %10, 16383
  %sub = add nsw i32 %or, -7
  %11 = inttoptr i32 %sub to ptr
  %arrayidx.i = getelementptr %struct.pt_regs, ptr %11, i32 -1, i32 0, i32 13
  %12 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.i, align 4
  %14 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 2
  %16 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %task.i, align 8
  %18 = ptrtoint ptr %new to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %new, align 4
  %20 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %3, align 4
  %22 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %1, align 4
  %sas_ss_flags.i.i = getelementptr inbounds %struct.task_struct, ptr %17, i32 0, i32 119
  %24 = ptrtoint ptr %sas_ss_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %sas_ss_flags.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %25)
  %tobool.not.i3.i = icmp sgt i32 %25, -1
  br i1 %tobool.not.i3.i, label %if.end.i4.i, label %if.end.if.end17.i_crit_edge

if.end.if.end17.i_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end17.i

if.end.i4.i:                                      ; preds = %if.end
  %sas_ss_sp.i.i.i = getelementptr inbounds %struct.task_struct, ptr %17, i32 0, i32 117
  %26 = ptrtoint ptr %sas_ss_sp.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %sas_ss_sp.i.i.i, align 64
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %27)
  %cmp.i.i.i = icmp ugt i32 %13, %27
  br i1 %cmp.i.i.i, label %on_sig_stack.exit.i, label %if.end.i4.i.if.end17.i_crit_edge

if.end.i4.i.if.end17.i_crit_edge:                 ; preds = %if.end.i4.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end17.i

on_sig_stack.exit.i:                              ; preds = %if.end.i4.i
  %sub.i.i.i = sub i32 %13, %27
  %sas_ss_size.i.i.i = getelementptr inbounds %struct.task_struct, ptr %17, i32 0, i32 118
  %28 = ptrtoint ptr %sas_ss_size.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %sas_ss_size.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i.i, i32 %29)
  %cmp6.i.i.not.i = icmp ugt i32 %sub.i.i.i, %29
  br i1 %cmp6.i.i.not.i, label %on_sig_stack.exit.i.if.end17.i_crit_edge, label %on_sig_stack.exit.i.cleanup_crit_edge, !prof !509

on_sig_stack.exit.i.cleanup_crit_edge:            ; preds = %on_sig_stack.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

on_sig_stack.exit.i.if.end17.i_crit_edge:         ; preds = %on_sig_stack.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end17.i

if.end17.i:                                       ; preds = %on_sig_stack.exit.i.if.end17.i_crit_edge, %if.end.i4.i.if.end17.i_crit_edge, %if.end.if.end17.i_crit_edge
  %and18.i = and i32 %23, 2147483647
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and18.i)
  %switch.i = icmp ult i32 %and18.i, 3
  br i1 %switch.i, label %if.end28.i, label %if.end17.i.cleanup_crit_edge

if.end17.i.cleanup_crit_edge:                     ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end28.i:                                       ; preds = %if.end17.i
  %sas_ss_sp29.i = getelementptr inbounds %struct.task_struct, ptr %17, i32 0, i32 117
  %30 = ptrtoint ptr %sas_ss_sp29.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %sas_ss_sp29.i, align 64
  %32 = ptrtoint ptr %19 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %31, i32 %32)
  %cmp30.i = icmp eq i32 %31, %32
  br i1 %cmp30.i, label %land.lhs.true31.i, label %if.end28.i.if.end38.i_crit_edge

if.end28.i.if.end38.i_crit_edge:                  ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end38.i

land.lhs.true31.i:                                ; preds = %if.end28.i
  %sas_ss_size32.i = getelementptr inbounds %struct.task_struct, ptr %17, i32 0, i32 118
  %33 = ptrtoint ptr %sas_ss_size32.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %sas_ss_size32.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %34, i32 %21)
  %cmp33.i = icmp eq i32 %34, %21
  call void @__sanitizer_cov_trace_cmp4(i32 %25, i32 %23)
  %cmp36.i = icmp eq i32 %25, %23
  %or.cond = select i1 %cmp33.i, i1 %cmp36.i, i1 false
  br i1 %or.cond, label %land.lhs.true31.i.cleanup_crit_edge, label %land.lhs.true31.i.if.end38.i_crit_edge

land.lhs.true31.i.if.end38.i_crit_edge:           ; preds = %land.lhs.true31.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end38.i

land.lhs.true31.i.cleanup_crit_edge:              ; preds = %land.lhs.true31.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end38.i:                                       ; preds = %land.lhs.true31.i.if.end38.i_crit_edge, %if.end28.i.if.end38.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %and18.i)
  %cmp39.i = icmp eq i32 %and18.i, 2
  br i1 %cmp39.i, label %if.end38.i.if.then55.i_crit_edge, label %if.else.i

if.end38.i.if.then55.i_crit_edge:                 ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then55.i

if.else.i:                                        ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2048, i32 %21)
  %cmp41.i = icmp ult i32 %21, 2048
  br i1 %cmp41.i, label %if.else.i.cleanup_crit_edge, label %if.else.i.if.then55.i_crit_edge, !prof !510

if.else.i.if.then55.i_crit_edge:                  ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then55.i

if.else.i.cleanup_crit_edge:                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then55.i:                                      ; preds = %if.else.i.if.then55.i_crit_edge, %if.end38.i.if.then55.i_crit_edge
  %ss_sp6.0.ph.i = phi i32 [ %32, %if.else.i.if.then55.i_crit_edge ], [ 0, %if.end38.i.if.then55.i_crit_edge ]
  %ss_size8.0.ph.i = phi i32 [ %21, %if.else.i.if.then55.i_crit_edge ], [ 0, %if.end38.i.if.then55.i_crit_edge ]
  %35 = ptrtoint ptr %sas_ss_sp29.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %ss_sp6.0.ph.i, ptr %sas_ss_sp29.i, align 64
  %sas_ss_size57.i = getelementptr inbounds %struct.task_struct, ptr %17, i32 0, i32 118
  %36 = ptrtoint ptr %sas_ss_size57.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %ss_size8.0.ph.i, ptr %sas_ss_size57.i, align 4
  %37 = ptrtoint ptr %sas_ss_flags.i.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %23, ptr %sas_ss_flags.i.i, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.then55.i, %if.else.i.cleanup_crit_edge, %land.lhs.true31.i.cleanup_crit_edge, %if.end17.i.cleanup_crit_edge, %on_sig_stack.exit.i.cleanup_crit_edge, %if.then11.i.i
  %retval.0 = phi i32 [ 0, %on_sig_stack.exit.i.cleanup_crit_edge ], [ 0, %if.end17.i.cleanup_crit_edge ], [ 0, %if.else.i.cleanup_crit_edge ], [ 0, %if.then55.i ], [ -14, %if.then11.i.i ], [ 0, %land.lhs.true31.i.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %new) #15
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @do_sigaltstack(ptr noundef readonly %ss, ptr noundef writeonly %oss, i32 noundef %sp) unnamed_addr #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %tobool.not = icmp eq ptr %oss, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  %4 = call ptr @memset(ptr %oss, i32 0, i32 12)
  %sas_ss_sp = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 117
  %5 = ptrtoint ptr %sas_ss_sp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %sas_ss_sp, align 64
  %7 = inttoptr i32 %6 to ptr
  %8 = ptrtoint ptr %oss to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %7, ptr %oss, align 4
  %sas_ss_size = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 118
  %9 = ptrtoint ptr %sas_ss_size to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sas_ss_size, align 4
  %ss_size = getelementptr inbounds %struct.sigaltstack, ptr %oss, i32 0, i32 2
  %11 = ptrtoint ptr %ss_size to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %ss_size, align 4
  %12 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i, align 8
  %sas_ss_size.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 118
  %16 = ptrtoint ptr %sas_ss_size.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %sas_ss_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.not.i = icmp eq i32 %17, 0
  br i1 %tobool.not.i, label %if.then.sas_ss_flags.exit_crit_edge, label %if.end.i

if.then.sas_ss_flags.exit_crit_edge:              ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %sas_ss_flags.exit

if.end.i:                                         ; preds = %if.then
  %sas_ss_flags.i.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 119
  %18 = ptrtoint ptr %sas_ss_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %sas_ss_flags.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %19)
  %tobool.not.i.i = icmp sgt i32 %19, -1
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.end.i.sas_ss_flags.exit_crit_edge

if.end.i.sas_ss_flags.exit_crit_edge:             ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sas_ss_flags.exit

if.end.i.i:                                       ; preds = %if.end.i
  %sas_ss_sp.i.i.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 117
  %20 = ptrtoint ptr %sas_ss_sp.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sas_ss_sp.i.i.i, align 64
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %sp)
  %cmp.i.i.i = icmp ult i32 %21, %sp
  br i1 %cmp.i.i.i, label %land.rhs.i.i.i, label %if.end.i.i.sas_ss_flags.exit_crit_edge

if.end.i.i.sas_ss_flags.exit_crit_edge:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sas_ss_flags.exit

land.rhs.i.i.i:                                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i = sub i32 %sp, %21
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i.i, i32 %17)
  %cmp6.i.i.i = icmp ule i32 %sub.i.i.i, %17
  %phi.cast.i = zext i1 %cmp6.i.i.i to i32
  br label %sas_ss_flags.exit

sas_ss_flags.exit:                                ; preds = %land.rhs.i.i.i, %if.end.i.i.sas_ss_flags.exit_crit_edge, %if.end.i.sas_ss_flags.exit_crit_edge, %if.then.sas_ss_flags.exit_crit_edge
  %retval.0.i = phi i32 [ 2, %if.then.sas_ss_flags.exit_crit_edge ], [ 0, %if.end.i.sas_ss_flags.exit_crit_edge ], [ 0, %if.end.i.i.sas_ss_flags.exit_crit_edge ], [ %phi.cast.i, %land.rhs.i.i.i ]
  %22 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task, align 8
  %sas_ss_flags = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 119
  %24 = ptrtoint ptr %sas_ss_flags to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %sas_ss_flags, align 8
  %and = and i32 %25, -2147483648
  %or = or i32 %and, %retval.0.i
  %ss_flags = getelementptr inbounds %struct.sigaltstack, ptr %oss, i32 0, i32 1
  %26 = ptrtoint ptr %ss_flags to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %or, ptr %ss_flags, align 4
  br label %if.end

if.end:                                           ; preds = %sas_ss_flags.exit, %entry.if.end_crit_edge
  %tobool4.not = icmp eq ptr %ss, null
  br i1 %tobool4.not, label %if.end.cleanup64_crit_edge, label %if.then5

if.end.cleanup64_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup64

if.then5:                                         ; preds = %if.end
  %27 = ptrtoint ptr %ss to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ss, align 4
  %ss_size9 = getelementptr inbounds %struct.sigaltstack, ptr %ss, i32 0, i32 2
  %29 = ptrtoint ptr %ss_size9 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %ss_size9, align 4
  %ss_flags11 = getelementptr inbounds %struct.sigaltstack, ptr %ss, i32 0, i32 1
  %31 = ptrtoint ptr %ss_flags11 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %ss_flags11, align 4
  %33 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i1 = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i1 to ptr
  %task.i2 = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %task.i2 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %task.i2, align 8
  %sas_ss_flags.i = getelementptr inbounds %struct.task_struct, ptr %36, i32 0, i32 119
  %37 = ptrtoint ptr %sas_ss_flags.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %sas_ss_flags.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %38)
  %tobool.not.i3 = icmp sgt i32 %38, -1
  br i1 %tobool.not.i3, label %if.end.i4, label %if.then5.if.end17_crit_edge

if.then5.if.end17_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end17

if.end.i4:                                        ; preds = %if.then5
  %sas_ss_sp.i.i = getelementptr inbounds %struct.task_struct, ptr %36, i32 0, i32 117
  %39 = ptrtoint ptr %sas_ss_sp.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %sas_ss_sp.i.i, align 64
  call void @__sanitizer_cov_trace_cmp4(i32 %40, i32 %sp)
  %cmp.i.i = icmp ult i32 %40, %sp
  br i1 %cmp.i.i, label %on_sig_stack.exit, label %if.end.i4.if.end17_crit_edge

if.end.i4.if.end17_crit_edge:                     ; preds = %if.end.i4
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end17

on_sig_stack.exit:                                ; preds = %if.end.i4
  %sub.i.i = sub i32 %sp, %40
  %sas_ss_size.i.i = getelementptr inbounds %struct.task_struct, ptr %36, i32 0, i32 118
  %41 = ptrtoint ptr %sas_ss_size.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %sas_ss_size.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i, i32 %42)
  %cmp6.i.i.not = icmp ugt i32 %sub.i.i, %42
  br i1 %cmp6.i.i.not, label %on_sig_stack.exit.if.end17_crit_edge, label %on_sig_stack.exit.cleanup64_crit_edge, !prof !509

on_sig_stack.exit.cleanup64_crit_edge:            ; preds = %on_sig_stack.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup64

on_sig_stack.exit.if.end17_crit_edge:             ; preds = %on_sig_stack.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end17

if.end17:                                         ; preds = %on_sig_stack.exit.if.end17_crit_edge, %if.end.i4.if.end17_crit_edge, %if.then5.if.end17_crit_edge
  %and18 = and i32 %32, 2147483647
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and18)
  %switch = icmp ult i32 %and18, 3
  br i1 %switch, label %if.end28, label %if.end17.cleanup64_crit_edge

if.end17.cleanup64_crit_edge:                     ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup64

if.end28:                                         ; preds = %if.end17
  %sas_ss_sp29 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 117
  %43 = ptrtoint ptr %sas_ss_sp29 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %sas_ss_sp29, align 64
  %45 = ptrtoint ptr %28 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %44, i32 %45)
  %cmp30 = icmp eq i32 %44, %45
  br i1 %cmp30, label %land.lhs.true31, label %if.end28.if.end38_crit_edge

if.end28.if.end38_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end38

land.lhs.true31:                                  ; preds = %if.end28
  %sas_ss_size32 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 118
  %46 = ptrtoint ptr %sas_ss_size32 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %sas_ss_size32, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %47, i32 %30)
  %cmp33 = icmp eq i32 %47, %30
  br i1 %cmp33, label %land.lhs.true34, label %land.lhs.true31.if.end38_crit_edge

land.lhs.true31.if.end38_crit_edge:               ; preds = %land.lhs.true31
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end38

land.lhs.true34:                                  ; preds = %land.lhs.true31
  %sas_ss_flags35 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 119
  %48 = ptrtoint ptr %sas_ss_flags35 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %sas_ss_flags35, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %49, i32 %32)
  %cmp36 = icmp eq i32 %49, %32
  br i1 %cmp36, label %land.lhs.true34.cleanup64_crit_edge, label %land.lhs.true34.if.end38_crit_edge

land.lhs.true34.if.end38_crit_edge:               ; preds = %land.lhs.true34
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end38

land.lhs.true34.cleanup64_crit_edge:              ; preds = %land.lhs.true34
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup64

if.end38:                                         ; preds = %land.lhs.true34.if.end38_crit_edge, %land.lhs.true31.if.end38_crit_edge, %if.end28.if.end38_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %and18)
  %cmp39 = icmp eq i32 %and18, 2
  br i1 %cmp39, label %if.end38.if.then55_crit_edge, label %if.else

if.end38.if.then55_crit_edge:                     ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then55

if.else:                                          ; preds = %if.end38
  call void @__sanitizer_cov_trace_const_cmp4(i32 2048, i32 %30)
  %cmp41 = icmp ult i32 %30, 2048
  br i1 %cmp41, label %if.else.cleanup64_crit_edge, label %if.else.if.then55_crit_edge, !prof !510

if.else.if.then55_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then55

if.else.cleanup64_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup64

if.then55:                                        ; preds = %if.else.if.then55_crit_edge, %if.end38.if.then55_crit_edge
  %ss_sp6.0.ph = phi i32 [ %45, %if.else.if.then55_crit_edge ], [ 0, %if.end38.if.then55_crit_edge ]
  %ss_size8.0.ph = phi i32 [ %30, %if.else.if.then55_crit_edge ], [ 0, %if.end38.if.then55_crit_edge ]
  %50 = ptrtoint ptr %sas_ss_sp29 to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %ss_sp6.0.ph, ptr %sas_ss_sp29, align 64
  %sas_ss_size57 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 118
  %51 = ptrtoint ptr %sas_ss_size57 to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %ss_size8.0.ph, ptr %sas_ss_size57, align 4
  %sas_ss_flags58 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 119
  %52 = ptrtoint ptr %sas_ss_flags58 to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %32, ptr %sas_ss_flags58, align 8
  br label %cleanup64

cleanup64:                                        ; preds = %if.then55, %if.else.cleanup64_crit_edge, %land.lhs.true34.cleanup64_crit_edge, %if.end17.cleanup64_crit_edge, %on_sig_stack.exit.cleanup64_crit_edge, %if.end.cleanup64_crit_edge
  %retval.1 = phi i32 [ 0, %if.end.cleanup64_crit_edge ], [ 0, %if.then55 ], [ -12, %if.else.cleanup64_crit_edge ], [ -22, %if.end17.cleanup64_crit_edge ], [ 0, %land.lhs.true34.cleanup64_crit_edge ], [ -1, %on_sig_stack.exit.cleanup64_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #10

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__save_altstack(ptr noundef %uss, i32 noundef %sp) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i46 = and i32 %0, -16384
  %1 = inttoptr i32 %and.i46 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %sas_ss_sp = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 117
  %4 = ptrtoint ptr %sas_ss_sp to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sas_ss_sp, align 64
  %6 = inttoptr i32 %5 to ptr
  tail call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 4257) #15
  %7 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 4
  %9 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #10, !srcloc !551
  %and.i = and i32 %9, -13
  %or.i = or i32 %and.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #15, !srcloc !552
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %10 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %uss, ptr %6, i32 -1226833921) #15, !srcloc !559
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %9) #15, !srcloc !552
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %ss_flags = getelementptr inbounds %struct.sigaltstack, ptr %uss, i32 0, i32 1
  %sas_ss_flags = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 119
  %11 = ptrtoint ptr %sas_ss_flags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sas_ss_flags, align 8
  tail call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 4258) #15
  %13 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i38 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i38 to ptr
  %cpu_domain.i.i39 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 4
  %15 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i39) #10, !srcloc !551
  %and.i40 = and i32 %15, -13
  %or.i41 = or i32 %and.i40, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i41) #15, !srcloc !552
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %16 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %ss_flags, i32 %12, i32 -1226833921) #15, !srcloc !560
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %15) #15, !srcloc !552
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %or = or i32 %16, %10
  %ss_size = getelementptr inbounds %struct.sigaltstack, ptr %uss, i32 0, i32 2
  %sas_ss_size = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 118
  %17 = ptrtoint ptr %sas_ss_size to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %sas_ss_size, align 4
  tail call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 4259) #15
  %19 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i42 = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i.i42 to ptr
  %cpu_domain.i.i43 = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 4
  %21 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i43) #10, !srcloc !551
  %and.i44 = and i32 %21, -13
  %or.i45 = or i32 %and.i44, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i45) #15, !srcloc !552
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %22 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %ss_size, i32 %18, i32 -1226833921) #15, !srcloc !561
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %21) #15, !srcloc !552
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %or33 = or i32 %or, %22
  ret i32 %or33
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_fault(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_sigpending(i32 noundef %uset) #0 align 64 {
entry:
  %set.i = alloca %struct.sigset_t, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %uset to ptr
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %set.i) #15
  %1 = getelementptr inbounds [2 x i32], ptr %set.i, i32 0, i32 1
  %2 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task.i.i, align 8
  %sighand.i.i = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 112
  %6 = ptrtoint ptr %sighand.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sighand.i.i, align 4
  tail call void @_raw_spin_lock_irq(ptr noundef %7) #15
  %8 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task.i.i, align 8
  %signal.i.i = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 116, i32 1
  %signal5.i.i = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 111
  %10 = ptrtoint ptr %signal5.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %signal5.i.i, align 16
  %signal6.i.i = getelementptr inbounds %struct.signal_struct, ptr %11, i32 0, i32 6, i32 1
  %arrayidx.i.i.i = getelementptr %struct.task_struct, ptr %9, i32 0, i32 116, i32 1, i32 0, i32 1
  %12 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.i.i.i, align 4
  %arrayidx2.i.i.i = getelementptr %struct.signal_struct, ptr %11, i32 0, i32 6, i32 1, i32 0, i32 1
  %14 = ptrtoint ptr %arrayidx2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx2.i.i.i, align 4
  %or.i.i.i = or i32 %15, %13
  %16 = ptrtoint ptr %signal.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %signal.i.i, align 4
  %18 = ptrtoint ptr %signal6.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %signal6.i.i, align 4
  %or9.i.i.i = or i32 %19, %17
  %sighand9.i.i = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 112
  %20 = ptrtoint ptr %sighand9.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %sighand9.i.i, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %21) #15
  %22 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task.i.i, align 8
  %blocked.i.i = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 113
  %arrayidx.i15.i.i = getelementptr %struct.task_struct, ptr %23, i32 0, i32 113, i32 0, i32 1
  %24 = ptrtoint ptr %arrayidx.i15.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx.i15.i.i, align 4
  %and.i17.i.i = and i32 %25, %or.i.i.i
  %26 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %and.i17.i.i, ptr %1, align 4
  %27 = ptrtoint ptr %blocked.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %blocked.i.i, align 4
  %and9.i.i.i = and i32 %28, %or9.i.i.i
  %29 = ptrtoint ptr %set.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %and9.i.i.i, ptr %set.i, align 4
  tail call void @__might_fault(ptr noundef nonnull @.str.115, i32 noundef 174) #15
  %call.i.i.i = tail call zeroext i1 @should_fail_usercopy() #15
  br i1 %call.i.i.i, label %entry.__do_sys_sigpending.exit_crit_edge, label %if.end.i.i.i

entry.__do_sys_sigpending.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_sigpending.exit

if.end.i.i.i:                                     ; preds = %entry
  %30 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %0, i32 4, i32 -1226833920) #19, !srcloc !554
  %asmresult.i.i.i = extractvalue { i32, i32 } %30, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i)
  %cmp.i6.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %cmp.i6.i.i, label %copy_to_user.exit.i, label %if.end.i.i.i.__do_sys_sigpending.exit_crit_edge

if.end.i.i.i.__do_sys_sigpending.exit_crit_edge:  ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_sigpending.exit

copy_to_user.exit.i:                              ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %set.i, i32 noundef 4) #15
  %call.i12.i.i.i = call i32 @arm_copy_to_user(ptr noundef %0, ptr noundef nonnull %set.i, i32 noundef 4) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i.i)
  %tobool.not.i = icmp eq i32 %call.i12.i.i.i, 0
  %spec.select.i = select i1 %tobool.not.i, i32 0, i32 -14
  br label %__do_sys_sigpending.exit

__do_sys_sigpending.exit:                         ; preds = %copy_to_user.exit.i, %if.end.i.i.i.__do_sys_sigpending.exit_crit_edge, %entry.__do_sys_sigpending.exit_crit_edge
  %31 = phi i32 [ -14, %entry.__do_sys_sigpending.exit_crit_edge ], [ -14, %if.end.i.i.i.__do_sys_sigpending.exit_crit_edge ], [ %spec.select.i, %copy_to_user.exit.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %set.i) #15
  ret i32 %31
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_sigprocmask(i32 noundef %how, i32 noundef %nset, i32 noundef %oset) #0 align 64 {
entry:
  %old_set.i = alloca i32, align 4
  %new_set.i = alloca i32, align 4
  %new_blocked.i = alloca %struct.sigset_t, align 8
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %nset to ptr
  %1 = inttoptr i32 %oset to ptr
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %old_set.i) #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %new_set.i) #15
  %2 = ptrtoint ptr %new_set.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %new_set.i, align 4, !annotation !511
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %new_blocked.i) #15
  %3 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task.i, align 8
  %blocked.i = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 113
  %7 = ptrtoint ptr %blocked.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %blocked.i, align 8
  %9 = ptrtoint ptr %old_set.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %old_set.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nset)
  %tobool.not.i = icmp eq i32 %nset, 0
  br i1 %tobool.not.i, label %entry.if.end11.i_crit_edge, label %if.end59.i.i.i

entry.if.end11.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end11.i

if.end59.i.i.i:                                   ; preds = %entry
  tail call void @__might_fault(ptr noundef nonnull @.str.115, i32 noundef 156) #15
  %call.i.i.i = tail call zeroext i1 @should_fail_usercopy() #15
  br i1 %call.i.i.i, label %if.end59.i.i.i.if.then11.i.i.i_crit_edge, label %land.lhs.true.i.i.i

if.end59.i.i.i.if.then11.i.i.i_crit_edge:         ; preds = %if.end59.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i.i

land.lhs.true.i.i.i:                              ; preds = %if.end59.i.i.i
  %10 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr nonnull %0, i32 4, i32 -1226833920) #19, !srcloc !550
  %asmresult.i.i.i = extractvalue { i32, i32 } %10, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i)
  %cmp.i6.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %cmp.i6.i.i, label %if.end.i.i.i, label %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge, !prof !509

land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge:    ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %new_set.i, i32 noundef 4) #15
  %11 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 4
  %13 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i.i) #10, !srcloc !551
  %and.i.i.i.i.i = and i32 %13, -13
  %or.i.i.i.i.i = or i32 %and.i.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i.i) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %call1.i.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %new_set.i, ptr noundef nonnull %0, i32 noundef 4) #15
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %13) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool4.not.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool4.not.i.i.i, label %if.end.i, label %if.end.i.i.i.if.then11.i.i.i_crit_edge, !prof !509

if.end.i.i.i.if.then11.i.i.i_crit_edge:           ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i.i

if.then11.i.i.i:                                  ; preds = %if.end.i.i.i.if.then11.i.i.i_crit_edge, %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge, %if.end59.i.i.i.if.then11.i.i.i_crit_edge
  %res.0.i.i36.i = phi i32 [ %call1.i.i.i.i, %if.end.i.i.i.if.then11.i.i.i_crit_edge ], [ 4, %if.end59.i.i.i.if.then11.i.i.i_crit_edge ], [ 4, %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge ]
  %sub.i.i.i = sub i32 4, %res.0.i.i36.i
  %add.ptr.i.i.i = getelementptr i8, ptr %new_set.i, i32 %sub.i.i.i
  %14 = call ptr @memset(ptr %add.ptr.i.i.i, i32 0, i32 %res.0.i.i36.i)
  br label %__do_sys_sigprocmask.exit

if.end.i:                                         ; preds = %if.end.i.i.i
  %15 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task.i, align 8
  %blocked6.i = getelementptr inbounds %struct.task_struct, ptr %16, i32 0, i32 113
  %17 = ptrtoint ptr %blocked6.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %blocked6.i, align 8
  %19 = ptrtoint ptr %new_blocked.i to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %18, ptr %new_blocked.i, align 8
  %20 = zext i32 %how to i64
  call void @__sanitizer_cov_trace_switch(i64 %20, ptr @__sancov_gen_cov_switch_values.169)
  switch i32 %how, label %if.end.i.__do_sys_sigprocmask.exit_crit_edge [
    i32 0, label %sw.bb.i
    i32 1, label %sw.bb7.i
    i32 2, label %sw.bb8.i
  ]

if.end.i.__do_sys_sigprocmask.exit_crit_edge:     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_sigprocmask.exit

sw.bb.i:                                          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %21 = ptrtoint ptr %new_set.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %new_set.i, align 4
  %23 = ptrtoint ptr %new_blocked.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %new_blocked.i, align 8
  %or.i.i = or i32 %24, %22
  store i32 %or.i.i, ptr %new_blocked.i, align 8
  br label %sw.epilog.i

sw.bb7.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %25 = ptrtoint ptr %new_set.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %new_set.i, align 4
  %neg.i.i = xor i32 %26, -1
  %27 = ptrtoint ptr %new_blocked.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %new_blocked.i, align 8
  %and.i33.i = and i32 %28, %neg.i.i
  store i32 %and.i33.i, ptr %new_blocked.i, align 8
  br label %sw.epilog.i

sw.bb8.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %29 = ptrtoint ptr %new_set.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %new_set.i, align 4
  %31 = ptrtoint ptr %new_blocked.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %new_blocked.i, align 8
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.bb8.i, %sw.bb7.i, %sw.bb.i
  %32 = ptrtoint ptr %new_blocked.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %new_blocked.i, align 8
  %and.i.i.i = and i32 %33, -262401
  store i32 %and.i.i.i, ptr %new_blocked.i, align 8
  call void @__set_current_blocked(ptr noundef nonnull %new_blocked.i) #15
  br label %if.end11.i

if.end11.i:                                       ; preds = %sw.epilog.i, %entry.if.end11.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %oset)
  %tobool12.not.i = icmp eq i32 %oset, 0
  br i1 %tobool12.not.i, label %if.end11.i.if.end18.i_crit_edge, label %if.end59.i.i26.i

if.end11.i.if.end18.i_crit_edge:                  ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end18.i

if.end59.i.i26.i:                                 ; preds = %if.end11.i
  call void @__might_fault(ptr noundef nonnull @.str.115, i32 noundef 174) #15
  %call.i.i27.i = call zeroext i1 @should_fail_usercopy() #15
  br i1 %call.i.i27.i, label %if.end59.i.i26.i.__do_sys_sigprocmask.exit_crit_edge, label %if.end.i.i30.i

if.end59.i.i26.i.__do_sys_sigprocmask.exit_crit_edge: ; preds = %if.end59.i.i26.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_sigprocmask.exit

if.end.i.i30.i:                                   ; preds = %if.end59.i.i26.i
  %34 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr nonnull %1, i32 4, i32 -1226833920) #19, !srcloc !554
  %asmresult.i.i28.i = extractvalue { i32, i32 } %34, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i28.i)
  %cmp.i6.i29.i = icmp eq i32 %asmresult.i.i28.i, 0
  br i1 %cmp.i6.i29.i, label %copy_to_user.exit.i, label %if.end.i.i30.i.__do_sys_sigprocmask.exit_crit_edge

if.end.i.i30.i.__do_sys_sigprocmask.exit_crit_edge: ; preds = %if.end.i.i30.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_sigprocmask.exit

copy_to_user.exit.i:                              ; preds = %if.end.i.i30.i
  %call.i.i.i31.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %old_set.i, i32 noundef 4) #15
  %call.i12.i.i.i = call i32 @arm_copy_to_user(ptr noundef nonnull %1, ptr noundef nonnull %old_set.i, i32 noundef 4) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i.i)
  %tobool15.not.i = icmp eq i32 %call.i12.i.i.i, 0
  br i1 %tobool15.not.i, label %copy_to_user.exit.i.if.end18.i_crit_edge, label %copy_to_user.exit.i.__do_sys_sigprocmask.exit_crit_edge

copy_to_user.exit.i.__do_sys_sigprocmask.exit_crit_edge: ; preds = %copy_to_user.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_sigprocmask.exit

copy_to_user.exit.i.if.end18.i_crit_edge:         ; preds = %copy_to_user.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end18.i

if.end18.i:                                       ; preds = %copy_to_user.exit.i.if.end18.i_crit_edge, %if.end11.i.if.end18.i_crit_edge
  br label %__do_sys_sigprocmask.exit

__do_sys_sigprocmask.exit:                        ; preds = %if.end18.i, %copy_to_user.exit.i.__do_sys_sigprocmask.exit_crit_edge, %if.end.i.i30.i.__do_sys_sigprocmask.exit_crit_edge, %if.end59.i.i26.i.__do_sys_sigprocmask.exit_crit_edge, %if.end.i.__do_sys_sigprocmask.exit_crit_edge, %if.then11.i.i.i
  %retval.0.i = phi i32 [ 0, %if.end18.i ], [ -22, %if.end.i.__do_sys_sigprocmask.exit_crit_edge ], [ -14, %copy_to_user.exit.i.__do_sys_sigprocmask.exit_crit_edge ], [ -14, %if.then11.i.i.i ], [ -14, %if.end59.i.i26.i.__do_sys_sigprocmask.exit_crit_edge ], [ -14, %if.end.i.i30.i.__do_sys_sigprocmask.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %new_blocked.i) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %new_set.i) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %old_set.i) #15
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_rt_sigaction(i32 noundef %sig, i32 noundef %act, i32 noundef %oact, i32 noundef %sigsetsize) #0 align 64 {
entry:
  %new_sa.i = alloca %struct.k_sigaction, align 4
  %old_sa.i = alloca %struct.k_sigaction, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %act to ptr
  %1 = inttoptr i32 %oact to ptr
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %new_sa.i) #15
  %2 = call ptr @memset(ptr %new_sa.i, i32 255, i32 20)
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %old_sa.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %sigsetsize)
  %cmp.not.i = icmp eq i32 %sigsetsize, 8
  %3 = call ptr @memset(ptr %old_sa.i, i32 255, i32 20)
  br i1 %cmp.not.i, label %if.end.i, label %entry.__do_sys_rt_sigaction.exit_crit_edge

entry.__do_sys_rt_sigaction.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_sigaction.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %act)
  %tobool.not.i = icmp eq i32 %act, 0
  br i1 %tobool.not.i, label %if.end.i.if.end3.i_crit_edge, label %if.end59.i.i.i

if.end.i.if.end3.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end3.i

if.end59.i.i.i:                                   ; preds = %if.end.i
  tail call void @__might_fault(ptr noundef nonnull @.str.115, i32 noundef 156) #15
  %call.i.i.i = tail call zeroext i1 @should_fail_usercopy() #15
  br i1 %call.i.i.i, label %if.end59.i.i.i.if.then11.i.i.i_crit_edge, label %land.lhs.true.i.i.i

if.end59.i.i.i.if.then11.i.i.i_crit_edge:         ; preds = %if.end59.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i.i

land.lhs.true.i.i.i:                              ; preds = %if.end59.i.i.i
  %4 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr nonnull %0, i32 20, i32 -1226833920) #19, !srcloc !550
  %asmresult.i.i.i = extractvalue { i32, i32 } %4, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i)
  %cmp.i6.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %cmp.i6.i.i, label %if.end.i.i.i, label %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge, !prof !509

land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge:    ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %new_sa.i, i32 noundef 20) #15
  %5 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 4
  %7 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i.i) #10, !srcloc !551
  %and.i.i.i.i.i = and i32 %7, -13
  %or.i.i.i.i.i = or i32 %and.i.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i.i) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %call1.i.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %new_sa.i, ptr noundef nonnull %0, i32 noundef 20) #15
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %7) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool4.not.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool4.not.i.i.i, label %if.end.i.i.i.if.end3.i_crit_edge, label %if.end.i.i.i.if.then11.i.i.i_crit_edge, !prof !509

if.end.i.i.i.if.then11.i.i.i_crit_edge:           ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i.i

if.end.i.i.i.if.end3.i_crit_edge:                 ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end3.i

if.then11.i.i.i:                                  ; preds = %if.end.i.i.i.if.then11.i.i.i_crit_edge, %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge, %if.end59.i.i.i.if.then11.i.i.i_crit_edge
  %res.0.i.i40.i = phi i32 [ %call1.i.i.i.i, %if.end.i.i.i.if.then11.i.i.i_crit_edge ], [ 20, %if.end59.i.i.i.if.then11.i.i.i_crit_edge ], [ 20, %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge ]
  %sub.i.i.i = sub i32 20, %res.0.i.i40.i
  %add.ptr.i.i.i = getelementptr i8, ptr %new_sa.i, i32 %sub.i.i.i
  %8 = call ptr @memset(ptr %add.ptr.i.i.i, i32 0, i32 %res.0.i.i40.i)
  br label %__do_sys_rt_sigaction.exit

if.end3.i:                                        ; preds = %if.end.i.i.i.if.end3.i_crit_edge, %if.end.i.if.end3.i_crit_edge
  %new_sa..i = phi ptr [ null, %if.end.i.if.end3.i_crit_edge ], [ %new_sa.i, %if.end.i.i.i.if.end3.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %oact)
  %tobool5.not.i = icmp eq i32 %oact, 0
  %cond9.i = select i1 %tobool5.not.i, ptr null, ptr %old_sa.i
  %call10.i = call i32 @do_sigaction(i32 noundef %sig, ptr noundef %new_sa..i, ptr noundef %cond9.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool11.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool11.not.i, label %if.end13.i, label %if.end3.i.__do_sys_rt_sigaction.exit_crit_edge

if.end3.i.__do_sys_rt_sigaction.exit_crit_edge:   ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_sigaction.exit

if.end13.i:                                       ; preds = %if.end3.i
  br i1 %tobool5.not.i, label %if.end13.i.if.end20.i_crit_edge, label %if.end59.i.i31.i

if.end13.i.if.end20.i_crit_edge:                  ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end20.i

if.end59.i.i31.i:                                 ; preds = %if.end13.i
  call void @__might_fault(ptr noundef nonnull @.str.115, i32 noundef 174) #15
  %call.i.i32.i = call zeroext i1 @should_fail_usercopy() #15
  br i1 %call.i.i32.i, label %if.end59.i.i31.i.__do_sys_rt_sigaction.exit_crit_edge, label %if.end.i.i35.i

if.end59.i.i31.i.__do_sys_rt_sigaction.exit_crit_edge: ; preds = %if.end59.i.i31.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_sigaction.exit

if.end.i.i35.i:                                   ; preds = %if.end59.i.i31.i
  %9 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr nonnull %1, i32 20, i32 -1226833920) #19, !srcloc !554
  %asmresult.i.i33.i = extractvalue { i32, i32 } %9, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i33.i)
  %cmp.i6.i34.i = icmp eq i32 %asmresult.i.i33.i, 0
  br i1 %cmp.i6.i34.i, label %copy_to_user.exit.i, label %if.end.i.i35.i.__do_sys_rt_sigaction.exit_crit_edge

if.end.i.i35.i.__do_sys_rt_sigaction.exit_crit_edge: ; preds = %if.end.i.i35.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_sigaction.exit

copy_to_user.exit.i:                              ; preds = %if.end.i.i35.i
  %call.i.i.i36.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %old_sa.i, i32 noundef 20) #15
  %call.i12.i.i.i = call i32 @arm_copy_to_user(ptr noundef nonnull %1, ptr noundef nonnull %old_sa.i, i32 noundef 20) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i.i)
  %tobool18.not.i = icmp eq i32 %call.i12.i.i.i, 0
  br i1 %tobool18.not.i, label %copy_to_user.exit.i.if.end20.i_crit_edge, label %copy_to_user.exit.i.__do_sys_rt_sigaction.exit_crit_edge

copy_to_user.exit.i.__do_sys_rt_sigaction.exit_crit_edge: ; preds = %copy_to_user.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_sigaction.exit

copy_to_user.exit.i.if.end20.i_crit_edge:         ; preds = %copy_to_user.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end20.i

if.end20.i:                                       ; preds = %copy_to_user.exit.i.if.end20.i_crit_edge, %if.end13.i.if.end20.i_crit_edge
  br label %__do_sys_rt_sigaction.exit

__do_sys_rt_sigaction.exit:                       ; preds = %if.end20.i, %copy_to_user.exit.i.__do_sys_rt_sigaction.exit_crit_edge, %if.end.i.i35.i.__do_sys_rt_sigaction.exit_crit_edge, %if.end59.i.i31.i.__do_sys_rt_sigaction.exit_crit_edge, %if.end3.i.__do_sys_rt_sigaction.exit_crit_edge, %if.then11.i.i.i, %entry.__do_sys_rt_sigaction.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end20.i ], [ -22, %entry.__do_sys_rt_sigaction.exit_crit_edge ], [ %call10.i, %if.end3.i.__do_sys_rt_sigaction.exit_crit_edge ], [ -14, %copy_to_user.exit.i.__do_sys_rt_sigaction.exit_crit_edge ], [ -14, %if.then11.i.i.i ], [ -14, %if.end59.i.i31.i.__do_sys_rt_sigaction.exit_crit_edge ], [ -14, %if.end.i.i35.i.__do_sys_rt_sigaction.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %old_sa.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %new_sa.i) #15
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_sigaction(i32 noundef %sig, i32 noundef %act, i32 noundef %oact) #0 align 64 {
entry:
  %new_ka.i = alloca %struct.k_sigaction, align 4
  %old_ka.i = alloca %struct.k_sigaction, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %act to ptr
  %1 = inttoptr i32 %oact to ptr
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %new_ka.i) #15
  %2 = getelementptr inbounds %struct.sigaction, ptr %new_ka.i, i32 0, i32 1
  %3 = getelementptr inbounds %struct.sigaction, ptr %new_ka.i, i32 0, i32 2
  %4 = getelementptr inbounds %struct.sigaction, ptr %new_ka.i, i32 0, i32 3
  %5 = getelementptr inbounds %struct.sigaction, ptr %new_ka.i, i32 0, i32 3, i32 0, i32 1
  %6 = call ptr @memset(ptr %new_ka.i, i32 255, i32 20)
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %old_ka.i) #15
  %7 = getelementptr inbounds %struct.sigaction, ptr %old_ka.i, i32 0, i32 1
  %8 = getelementptr inbounds %struct.sigaction, ptr %old_ka.i, i32 0, i32 2
  %9 = getelementptr inbounds %struct.sigaction, ptr %old_ka.i, i32 0, i32 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %act)
  %tobool.not.i = icmp eq i32 %act, 0
  %10 = call ptr @memset(ptr %old_ka.i, i32 255, i32 20)
  br i1 %tobool.not.i, label %entry.if.end57.i_crit_edge, label %if.then.i

entry.if.end57.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end57.i

if.then.i:                                        ; preds = %entry
  %11 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr nonnull %0, i32 16, i32 -1226833920) #19, !srcloc !562
  %asmresult.i = extractvalue { i32, i32 } %11, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i)
  %cmp.i = icmp eq i32 %asmresult.i, 0
  br i1 %cmp.i, label %lor.lhs.false.i, label %if.then.i.__do_sys_sigaction.exit_crit_edge

if.then.i.__do_sys_sigaction.exit_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_sigaction.exit

lor.lhs.false.i:                                  ; preds = %if.then.i
  tail call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 4494) #15
  %12 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i.i to ptr
  %cpu_domain.i.i.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 4
  %14 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i) #10, !srcloc !551
  %and.i.i = and i32 %14, -13
  %or.i.i = or i32 %and.i.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i) #15, !srcloc !552
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %15 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_4", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr nonnull %0, i32 -1226833921) #15, !srcloc !563
  %asmresult3.i = extractvalue { i32, i32 } %15, 0
  %asmresult4.i = extractvalue { i32, i32 } %15, 1
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %14) #15, !srcloc !552
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %16 = inttoptr i32 %asmresult4.i to ptr
  %17 = ptrtoint ptr %new_ka.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %16, ptr %new_ka.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult3.i)
  %tobool7.not.i = icmp eq i32 %asmresult3.i, 0
  br i1 %tobool7.not.i, label %lor.lhs.false8.i, label %lor.lhs.false.i.__do_sys_sigaction.exit_crit_edge

lor.lhs.false.i.__do_sys_sigaction.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_sigaction.exit

lor.lhs.false8.i:                                 ; preds = %lor.lhs.false.i
  tail call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 4495) #15
  %sa_restorer.i = getelementptr inbounds %struct.old_sigaction, ptr %0, i32 0, i32 3
  %18 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i169.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i169.i to ptr
  %cpu_domain.i.i170.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 4
  %20 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i170.i) #10, !srcloc !551
  %and.i171.i = and i32 %20, -13
  %or.i172.i = or i32 %and.i171.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i172.i) #15, !srcloc !552
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %21 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_4", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr %sa_restorer.i, i32 -1226833921) #15, !srcloc !564
  %asmresult18.i = extractvalue { i32, i32 } %21, 0
  %asmresult19.i = extractvalue { i32, i32 } %21, 1
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %20) #15, !srcloc !552
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %22 = inttoptr i32 %asmresult19.i to ptr
  %23 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %22, ptr %3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult18.i)
  %tobool23.not.i = icmp eq i32 %asmresult18.i, 0
  br i1 %tobool23.not.i, label %lor.lhs.false24.i, label %lor.lhs.false8.i.__do_sys_sigaction.exit_crit_edge

lor.lhs.false8.i.__do_sys_sigaction.exit_crit_edge: ; preds = %lor.lhs.false8.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_sigaction.exit

lor.lhs.false24.i:                                ; preds = %lor.lhs.false8.i
  tail call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 4496) #15
  %sa_flags.i = getelementptr inbounds %struct.old_sigaction, ptr %0, i32 0, i32 2
  %24 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i173.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i173.i to ptr
  %cpu_domain.i.i174.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 4
  %26 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i174.i) #10, !srcloc !551
  %and.i175.i = and i32 %26, -13
  %or.i176.i = or i32 %and.i175.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i176.i) #15, !srcloc !552
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %27 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_4", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr %sa_flags.i, i32 -1226833921) #15, !srcloc !565
  %asmresult34.i = extractvalue { i32, i32 } %27, 0
  %asmresult35.i = extractvalue { i32, i32 } %27, 1
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %26) #15, !srcloc !552
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %28 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %asmresult35.i, ptr %2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult34.i)
  %tobool39.not.i = icmp eq i32 %asmresult34.i, 0
  br i1 %tobool39.not.i, label %lor.lhs.false40.i, label %lor.lhs.false24.i.__do_sys_sigaction.exit_crit_edge

lor.lhs.false24.i.__do_sys_sigaction.exit_crit_edge: ; preds = %lor.lhs.false24.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_sigaction.exit

lor.lhs.false40.i:                                ; preds = %lor.lhs.false24.i
  tail call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 4497) #15
  %sa_mask.i = getelementptr inbounds %struct.old_sigaction, ptr %0, i32 0, i32 1
  %29 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i177.i = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i177.i to ptr
  %cpu_domain.i.i178.i = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 4
  %31 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i178.i) #10, !srcloc !551
  %and.i179.i = and i32 %31, -13
  %or.i180.i = or i32 %and.i179.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i180.i) #15, !srcloc !552
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %32 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_4", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr %sa_mask.i, i32 -1226833921) #15, !srcloc !566
  %asmresult50.i = extractvalue { i32, i32 } %32, 0
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %31) #15, !srcloc !552
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult50.i)
  %tobool53.not.i = icmp eq i32 %asmresult50.i, 0
  br i1 %tobool53.not.i, label %if.end.i, label %lor.lhs.false40.i.__do_sys_sigaction.exit_crit_edge

lor.lhs.false40.i.__do_sys_sigaction.exit_crit_edge: ; preds = %lor.lhs.false40.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_sigaction.exit

if.end.i:                                         ; preds = %lor.lhs.false40.i
  call void @__sanitizer_cov_trace_pc() #17
  %asmresult51.i = extractvalue { i32, i32 } %32, 1
  %33 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %asmresult51.i, ptr %4, align 4
  %34 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 0, ptr %5, align 4
  br label %if.end57.i

if.end57.i:                                       ; preds = %if.end.i, %entry.if.end57.i_crit_edge
  %new_ka..i = phi ptr [ null, %entry.if.end57.i_crit_edge ], [ %new_ka.i, %if.end.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %oact)
  %tobool59.not.i = icmp eq i32 %oact, 0
  %cond63.i = select i1 %tobool59.not.i, ptr null, ptr %old_ka.i
  %call64.i = call i32 @do_sigaction(i32 noundef %sig, ptr noundef %new_ka..i, ptr noundef %cond63.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call64.i)
  %tobool65.not.i = icmp ne i32 %call64.i, 0
  %brmerge.i = or i1 %tobool59.not.i, %tobool65.not.i
  br i1 %brmerge.i, label %if.end57.i.if.end151.i_crit_edge, label %if.then67.i

if.end57.i.if.end151.i_crit_edge:                 ; preds = %if.end57.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end151.i

if.then67.i:                                      ; preds = %if.end57.i
  %35 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr nonnull %1, i32 16, i32 -1226833920) #19, !srcloc !567
  %asmresult70.i = extractvalue { i32, i32 } %35, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult70.i)
  %cmp73.i = icmp eq i32 %asmresult70.i, 0
  br i1 %cmp73.i, label %lor.lhs.false74.i, label %if.then67.i.__do_sys_sigaction.exit_crit_edge

if.then67.i.__do_sys_sigaction.exit_crit_edge:    ; preds = %if.then67.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_sigaction.exit

lor.lhs.false74.i:                                ; preds = %if.then67.i
  %36 = ptrtoint ptr %old_ka.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %old_ka.i, align 4
  call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 4509) #15
  %38 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i181.i = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i181.i to ptr
  %cpu_domain.i.i182.i = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 4
  %40 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i182.i) #10, !srcloc !551
  %and.i183.i = and i32 %40, -13
  %or.i184.i = or i32 %and.i183.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i184.i) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %41 = call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr nonnull %1, ptr %37, i32 -1226833921) #15, !srcloc !568
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %40) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool87.not.i = icmp eq i32 %41, 0
  br i1 %tobool87.not.i, label %lor.lhs.false88.i, label %lor.lhs.false74.i.__do_sys_sigaction.exit_crit_edge

lor.lhs.false74.i.__do_sys_sigaction.exit_crit_edge: ; preds = %lor.lhs.false74.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_sigaction.exit

lor.lhs.false88.i:                                ; preds = %lor.lhs.false74.i
  %sa_restorer92.i = getelementptr inbounds %struct.old_sigaction, ptr %1, i32 0, i32 3
  %42 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %8, align 4
  call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 4510) #15
  %44 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i185.i = and i32 %44, -16384
  %45 = inttoptr i32 %and.i.i.i185.i to ptr
  %cpu_domain.i.i186.i = getelementptr inbounds %struct.thread_info, ptr %45, i32 0, i32 4
  %46 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i186.i) #10, !srcloc !551
  %and.i187.i = and i32 %46, -13
  %or.i188.i = or i32 %and.i187.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i188.i) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %47 = call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %sa_restorer92.i, ptr %43, i32 -1226833921) #15, !srcloc !569
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %46) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool107.not.i = icmp eq i32 %47, 0
  br i1 %tobool107.not.i, label %lor.lhs.false108.i, label %lor.lhs.false88.i.__do_sys_sigaction.exit_crit_edge

lor.lhs.false88.i.__do_sys_sigaction.exit_crit_edge: ; preds = %lor.lhs.false88.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_sigaction.exit

lor.lhs.false108.i:                               ; preds = %lor.lhs.false88.i
  %sa_flags112.i = getelementptr inbounds %struct.old_sigaction, ptr %1, i32 0, i32 2
  %48 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %7, align 4
  call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 4511) #15
  %50 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i189.i = and i32 %50, -16384
  %51 = inttoptr i32 %and.i.i.i189.i to ptr
  %cpu_domain.i.i190.i = getelementptr inbounds %struct.thread_info, ptr %51, i32 0, i32 4
  %52 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i190.i) #10, !srcloc !551
  %and.i191.i = and i32 %52, -13
  %or.i192.i = or i32 %and.i191.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i192.i) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %53 = call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %sa_flags112.i, i32 %49, i32 -1226833921) #15, !srcloc !570
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %52) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %tobool127.not.i = icmp eq i32 %53, 0
  br i1 %tobool127.not.i, label %lor.lhs.false128.i, label %lor.lhs.false108.i.__do_sys_sigaction.exit_crit_edge

lor.lhs.false108.i.__do_sys_sigaction.exit_crit_edge: ; preds = %lor.lhs.false108.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_sigaction.exit

lor.lhs.false128.i:                               ; preds = %lor.lhs.false108.i
  %sa_mask132.i = getelementptr inbounds %struct.old_sigaction, ptr %1, i32 0, i32 1
  %54 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %9, align 4
  call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 4512) #15
  %56 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i193.i = and i32 %56, -16384
  %57 = inttoptr i32 %and.i.i.i193.i to ptr
  %cpu_domain.i.i194.i = getelementptr inbounds %struct.thread_info, ptr %57, i32 0, i32 4
  %58 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i194.i) #10, !srcloc !551
  %and.i195.i = and i32 %58, -13
  %or.i196.i = or i32 %and.i195.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i196.i) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %59 = call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %sa_mask132.i, i32 %55, i32 -1226833921) #15, !srcloc !571
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %58) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %59)
  %tobool148.not.i = icmp eq i32 %59, 0
  br i1 %tobool148.not.i, label %lor.lhs.false128.i.if.end151.i_crit_edge, label %lor.lhs.false128.i.__do_sys_sigaction.exit_crit_edge

lor.lhs.false128.i.__do_sys_sigaction.exit_crit_edge: ; preds = %lor.lhs.false128.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_sigaction.exit

lor.lhs.false128.i.if.end151.i_crit_edge:         ; preds = %lor.lhs.false128.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end151.i

if.end151.i:                                      ; preds = %lor.lhs.false128.i.if.end151.i_crit_edge, %if.end57.i.if.end151.i_crit_edge
  br label %__do_sys_sigaction.exit

__do_sys_sigaction.exit:                          ; preds = %if.end151.i, %lor.lhs.false128.i.__do_sys_sigaction.exit_crit_edge, %lor.lhs.false108.i.__do_sys_sigaction.exit_crit_edge, %lor.lhs.false88.i.__do_sys_sigaction.exit_crit_edge, %lor.lhs.false74.i.__do_sys_sigaction.exit_crit_edge, %if.then67.i.__do_sys_sigaction.exit_crit_edge, %lor.lhs.false40.i.__do_sys_sigaction.exit_crit_edge, %lor.lhs.false24.i.__do_sys_sigaction.exit_crit_edge, %lor.lhs.false8.i.__do_sys_sigaction.exit_crit_edge, %lor.lhs.false.i.__do_sys_sigaction.exit_crit_edge, %if.then.i.__do_sys_sigaction.exit_crit_edge
  %retval.1.i = phi i32 [ %call64.i, %if.end151.i ], [ -14, %if.then.i.__do_sys_sigaction.exit_crit_edge ], [ -14, %lor.lhs.false.i.__do_sys_sigaction.exit_crit_edge ], [ -14, %lor.lhs.false8.i.__do_sys_sigaction.exit_crit_edge ], [ -14, %lor.lhs.false24.i.__do_sys_sigaction.exit_crit_edge ], [ -14, %lor.lhs.false40.i.__do_sys_sigaction.exit_crit_edge ], [ -14, %lor.lhs.false128.i.__do_sys_sigaction.exit_crit_edge ], [ -14, %lor.lhs.false108.i.__do_sys_sigaction.exit_crit_edge ], [ -14, %lor.lhs.false88.i.__do_sys_sigaction.exit_crit_edge ], [ -14, %lor.lhs.false74.i.__do_sys_sigaction.exit_crit_edge ], [ -14, %if.then67.i.__do_sys_sigaction.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %old_ka.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %new_ka.i) #15
  ret i32 %retval.1.i
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @sys_sgetmask() local_unnamed_addr #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %blocked = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 113
  %4 = ptrtoint ptr %blocked to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %blocked, align 8
  ret i32 %5
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_ssetmask(i32 noundef %newmask) #0 align 64 {
entry:
  %newset.i = alloca %struct.sigset_t, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %blocked.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 113
  %4 = ptrtoint ptr %blocked.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %blocked.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %newset.i) #15
  %6 = getelementptr inbounds [2 x i32], ptr %newset.i, i32 0, i32 1
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %6, align 4
  %and.i.i.i = and i32 %newmask, -262401
  %8 = ptrtoint ptr %newset.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %and.i.i.i, ptr %newset.i, align 4
  call void @__set_current_blocked(ptr noundef nonnull %newset.i) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %newset.i) #15
  ret i32 %5
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sys_pause() #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i60 = and i32 %0, -16384
  %1 = inttoptr i32 %and.i60 to ptr
  %task61 = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task61 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task61, align 8
  %stack.i.i62 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %stack.i.i62 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %stack.i.i62, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %5, align 4
  %8 = and i32 %7, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i63 = icmp eq i32 %8, 0
  br i1 %tobool.not.i63, label %entry.signal_pending.exit_crit_edge, label %entry.while.end_crit_edge, !prof !509

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

entry.signal_pending.exit_crit_edge:              ; preds = %entry
  br label %signal_pending.exit

signal_pending.exit:                              ; preds = %__here.signal_pending.exit_crit_edge, %entry.signal_pending.exit_crit_edge
  %9 = phi ptr [ %22, %__here.signal_pending.exit_crit_edge ], [ %5, %entry.signal_pending.exit_crit_edge ]
  %10 = phi ptr [ %20, %__here.signal_pending.exit_crit_edge ], [ %3, %entry.signal_pending.exit_crit_edge ]
  %task64 = phi ptr [ %task, %__here.signal_pending.exit_crit_edge ], [ %task61, %entry.signal_pending.exit_crit_edge ]
  %11 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %9, align 4
  %and1.i.i.i.i.i = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i)
  %tobool.not = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool.not, label %__here, label %signal_pending.exit.while.end_crit_edge

signal_pending.exit.while.end_crit_edge:          ; preds = %signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

__here:                                           ; preds = %signal_pending.exit
  %task_state_change = getelementptr inbounds %struct.task_struct, ptr %10, i32 0, i32 212
  %13 = ptrtoint ptr %task_state_change to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 ptrtoint (ptr blockaddress(@sys_pause, %__here) to i32), ptr %task_state_change, align 4
  %14 = ptrtoint ptr %task64 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task64, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile i32 1, ptr %15, align 128
  tail call void @schedule() #15
  %17 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %17, -16384
  %18 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 2
  %19 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %task, align 8
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %stack.i.i, align 4
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %22, align 4
  %25 = and i32 %24, 256
  %tobool.not.i = icmp eq i32 %25, 0
  br i1 %tobool.not.i, label %__here.signal_pending.exit_crit_edge, label %__here.while.end_crit_edge, !prof !509

__here.while.end_crit_edge:                       ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

__here.signal_pending.exit_crit_edge:             ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #17
  br label %signal_pending.exit

while.end:                                        ; preds = %__here.while.end_crit_edge, %signal_pending.exit.while.end_crit_edge, %entry.while.end_crit_edge
  ret i32 -514
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_rt_sigsuspend(i32 noundef %unewset, i32 noundef %sigsetsize) #0 align 64 {
entry:
  %newset.i = alloca %struct.sigset_t, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %unewset to ptr
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %newset.i) #15
  %1 = ptrtoint ptr %newset.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %newset.i, align 4, !annotation !511
  %2 = getelementptr inbounds [2 x i32], ptr %newset.i, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %2, align 4, !annotation !511
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %sigsetsize)
  %cmp.not.i = icmp eq i32 %sigsetsize, 8
  br i1 %cmp.not.i, label %if.end59.i.i.i, label %entry.__do_sys_rt_sigsuspend.exit_crit_edge

entry.__do_sys_rt_sigsuspend.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %__do_sys_rt_sigsuspend.exit

if.end59.i.i.i:                                   ; preds = %entry
  tail call void @__might_fault(ptr noundef nonnull @.str.115, i32 noundef 156) #15
  %call.i.i.i = tail call zeroext i1 @should_fail_usercopy() #15
  br i1 %call.i.i.i, label %if.end59.i.i.i.if.then11.i.i.i_crit_edge, label %land.lhs.true.i.i.i

if.end59.i.i.i.if.then11.i.i.i_crit_edge:         ; preds = %if.end59.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i.i

land.lhs.true.i.i.i:                              ; preds = %if.end59.i.i.i
  %4 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %0, i32 8, i32 -1226833920) #19, !srcloc !550
  %asmresult.i.i.i = extractvalue { i32, i32 } %4, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i)
  %cmp.i6.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %cmp.i6.i.i, label %if.end.i.i.i, label %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge, !prof !509

land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge:    ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %newset.i, i32 noundef 8) #15
  %5 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 4
  %7 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i.i) #10, !srcloc !551
  %and.i.i.i.i.i = and i32 %7, -13
  %or.i.i.i.i.i = or i32 %and.i.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i.i) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %call1.i.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %newset.i, ptr noundef %0, i32 noundef 8) #15
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %7) #15, !srcloc !552
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool4.not.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool4.not.i.i.i, label %if.end2.i, label %if.end.i.i.i.if.then11.i.i.i_crit_edge, !prof !509

if.end.i.i.i.if.then11.i.i.i_crit_edge:           ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i.i

if.then11.i.i.i:                                  ; preds = %if.end.i.i.i.if.then11.i.i.i_crit_edge, %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge, %if.end59.i.i.i.if.then11.i.i.i_crit_edge
  %res.0.i.i6.i = phi i32 [ %call1.i.i.i.i, %if.end.i.i.i.if.then11.i.i.i_crit_edge ], [ 8, %if.end59.i.i.i.if.then11.i.i.i_crit_edge ], [ 8, %land.lhs.true.i.i.i.if.then11.i.i.i_crit_edge ]
  %sub.i.i.i = sub i32 8, %res.0.i.i6.i
  %add.ptr.i.i.i = getelementptr i8, ptr %newset.i, i32 %sub.i.i.i
  %8 = call ptr @memset(ptr %add.ptr.i.i.i, i32 0, i32 %res.0.i.i6.i)
  br label %__do_sys_rt_sigsuspend.exit

if.end2.i:                                        ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %call3.i = call fastcc i32 @sigsuspend(ptr noundef nonnull %newset.i) #15
  br label %__do_sys_rt_sigsuspend.exit

__do_sys_rt_sigsuspend.exit:                      ; preds = %if.end2.i, %if.then11.i.i.i, %entry.__do_sys_rt_sigsuspend.exit_crit_edge
  %retval.0.i = phi i32 [ -514, %if.end2.i ], [ -22, %entry.__do_sys_rt_sigsuspend.exit_crit_edge ], [ -14, %if.then11.i.i.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %newset.i) #15
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_sigsuspend(i32 %unused1, i32 %unused2, i32 noundef %mask) #0 align 64 {
entry:
  %blocked.i = alloca %struct.sigset_t, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %blocked.i) #15
  %0 = getelementptr inbounds [2 x i32], ptr %blocked.i, i32 0, i32 1
  %1 = ptrtoint ptr %blocked.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %mask, ptr %blocked.i, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %0, align 4
  %call.i = call fastcc i32 @sigsuspend(ptr noundef nonnull %blocked.i) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %blocked.i) #15
  ret i32 -514
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local ptr @arch_vma_name(ptr noundef %vma) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  ret ptr null
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @signals_init() local_unnamed_addr #6 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.67, i32 noundef 48, i32 noundef 4, i32 noundef 67371008, ptr noundef null) #15
  store ptr %call, ptr @sigqueue_cachep, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmem_cache_create(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @kdb_send_sig(ptr noundef %t, i32 noundef %sig) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %sighand = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 112
  %0 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sighand, align 4
  %call.i = tail call i32 @_raw_spin_trylock(ptr noundef %1) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %call1 = tail call i32 (ptr, ...) @kdb_printf(ptr noundef nonnull @.str.68) #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr @kdb_send_sig.kdb_prev_t, align 4
  store ptr %t, ptr @kdb_send_sig.kdb_prev_t, align 4
  %3 = ptrtoint ptr %t to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %t, align 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp2 = icmp eq i32 %4, 0
  %cmp.not = icmp eq ptr %2, %t
  %or.cond = select i1 %cmp2, i1 true, i1 %cmp.not
  br i1 %or.cond, label %if.end9, label %if.then5

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %5 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_unlock(ptr noundef %6) #15
  %call8 = tail call i32 (ptr, ...) @kdb_printf(ptr noundef nonnull @.str.69) #15
  br label %cleanup

if.end9:                                          ; preds = %if.end
  %call59.i = tail call fastcc i32 @__send_signal(i32 noundef %sig, ptr noundef nonnull inttoptr (i32 1 to ptr), ptr noundef %t, i32 noundef 0, i1 noundef zeroext true) #15
  %7 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_unlock(ptr noundef %8) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call59.i)
  %tobool13.not = icmp eq i32 %call59.i, 0
  %pid16 = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 68
  %9 = ptrtoint ptr %pid16 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %pid16, align 8
  br i1 %tobool13.not, label %if.else, label %if.then14

if.then14:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #17
  %call15 = tail call i32 (ptr, ...) @kdb_printf(ptr noundef nonnull @.str.70, i32 noundef %sig, i32 noundef %10) #15
  br label %cleanup

if.else:                                          ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #17
  %call17 = tail call i32 (ptr, ...) @kdb_printf(ptr noundef nonnull @.str.71, i32 noundef %sig, i32 noundef %10) #15
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then14, %if.then5, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kdb_printf(ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_signal_generate(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %sig = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %sig to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %sig, align 4
  %errno = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %errno to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %errno, align 4
  %code = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %code to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %code, align 4
  %comm = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %1, i32 0, i32 4
  %pid = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %pid, align 4
  %group = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %group to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %group, align 4
  %result = getelementptr inbounds %struct.trace_event_raw_signal_generate, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %result to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %result, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.82, i32 noundef %3, i32 noundef %5, i32 noundef %7, ptr noundef %comm, i32 noundef %9, i32 noundef %11, i32 noundef %13) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_signal_deliver(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %sig = getelementptr inbounds %struct.trace_event_raw_signal_deliver, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %sig to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %sig, align 4
  %errno = getelementptr inbounds %struct.trace_event_raw_signal_deliver, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %errno to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %errno, align 4
  %code = getelementptr inbounds %struct.trace_event_raw_signal_deliver, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %code to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %code, align 4
  %sa_handler = getelementptr inbounds %struct.trace_event_raw_signal_deliver, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %sa_handler to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sa_handler, align 4
  %sa_flags = getelementptr inbounds %struct.trace_event_raw_signal_deliver, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %sa_flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sa_flags, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.86, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11) #15
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #12

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #12

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run5(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run3(ptr noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @freezing_slow_path(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #13

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dec_rlimit_put_ucounts(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_free(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @hrtimer_start_range_ns(ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @get_option(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @make_kuid(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @audit_signal_info(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @ns_capable(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__task_pid_nr_ns(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @inc_rlimit_get_ucounts(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kmem_cache_alloc(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @print_dropped_signal(i32 noundef %sig) unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %0 = load i32, ptr @print_fatal_signals, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end:                                           ; preds = %entry
  %call = tail call i32 @___ratelimit(ptr noundef nonnull @print_dropped_signal.ratelimit_state, ptr noundef nonnull @__func__.print_dropped_signal) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool1.not = icmp eq i32 %call, 0
  br i1 %tobool1.not, label %if.end.return_crit_edge, label %do.end

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %1 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 101
  %pid = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 68
  %5 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %pid, align 8
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.95, ptr noundef %comm, i32 noundef %6, i32 noundef %sig) #18
  br label %return

return:                                           ; preds = %do.end, %if.end.return_crit_edge, %entry.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___ratelimit(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #14

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ptrace_trap_notify(ptr noundef %t) unnamed_addr #0 align 64 {
entry:
  %agg.tmp.sroa.0.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %ptrace = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 4
  %0 = ptrtoint ptr %ptrace to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ptrace, align 16
  %and = and i32 %1, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end29_crit_edge

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b66 = load i1, ptr @ptrace_trap_notify.__already_done, align 1
  br i1 %.b66, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !509

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @ptrace_trap_notify.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 886, i32 noundef 9, ptr noundef null) #15
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  %sighand = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 112
  %2 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sighand, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i)
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %agg.tmp.sroa.0.0.copyload.i = load volatile i32, ptr %3, align 4
  %5 = ptrtoint ptr %agg.tmp.sroa.0.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile i32 %agg.tmp.sroa.0.0.copyload.i, ptr %agg.tmp.sroa.0.i, align 4
  %lock.sroa.0.0.extract.shift.i.i = lshr i32 %agg.tmp.sroa.0.0.copyload.i, 16
  %conv.i.i = and i32 %agg.tmp.sroa.0.0.copyload.i, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i.i, i32 %lock.sroa.0.0.extract.shift.i.i)
  %cmp.i.i.not = icmp eq i32 %conv.i.i, %lock.sroa.0.0.extract.shift.i.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i)
  br i1 %cmp.i.i.not, label %do.body48, label %do.end56, !prof !510

do.body48:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/signal.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 887, 0\0A.popsection", ""() #15, !srcloc !572
  unreachable

do.end56:                                         ; preds = %if.end29
  %stack.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 1
  %6 = ptrtoint ptr %stack.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %stack.i.i.i.i, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %7, align 4
  %and1.i.i.i.i.i.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and1.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i, label %do.end56.lor.end.i_crit_edge, label %fatal_signal_pending.exit.i

do.end56.lor.end.i_crit_edge:                     ; preds = %do.end56
  call void @__sanitizer_cov_trace_pc() #17
  br label %lor.end.i

fatal_signal_pending.exit.i:                      ; preds = %do.end56
  %signal.i.i.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 116, i32 1
  %10 = ptrtoint ptr %signal.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %signal.i.i.i, align 4
  %12 = and i32 %11, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool27.not.i = icmp eq i32 %12, 0
  br i1 %tobool27.not.i, label %fatal_signal_pending.exit.i.lor.end.i_crit_edge, label %fatal_signal_pending.exit.i.task_set_jobctl_pending.exit_crit_edge, !prof !509

fatal_signal_pending.exit.i.task_set_jobctl_pending.exit_crit_edge: ; preds = %fatal_signal_pending.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %task_set_jobctl_pending.exit

fatal_signal_pending.exit.i.lor.end.i_crit_edge:  ; preds = %fatal_signal_pending.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %lor.end.i

lor.end.i:                                        ; preds = %fatal_signal_pending.exit.i.lor.end.i_crit_edge, %do.end56.lor.end.i_crit_edge
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 3
  %13 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %flags.i, align 4
  %and28.i = and i32 %14, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28.i)
  %tobool29.not.i = icmp eq i32 %and28.i, 0
  br i1 %tobool29.not.i, label %if.end37.i, label %lor.end.i.task_set_jobctl_pending.exit_crit_edge, !prof !509

lor.end.i.task_set_jobctl_pending.exit_crit_edge: ; preds = %lor.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %task_set_jobctl_pending.exit

if.end37.i:                                       ; preds = %lor.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %jobctl43.i = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 61
  %15 = ptrtoint ptr %jobctl43.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %jobctl43.i, align 4
  %or.i = or i32 %16, 1048576
  store i32 %or.i, ptr %jobctl43.i, align 4
  br label %task_set_jobctl_pending.exit

task_set_jobctl_pending.exit:                     ; preds = %if.end37.i, %lor.end.i.task_set_jobctl_pending.exit_crit_edge, %fatal_signal_pending.exit.i.task_set_jobctl_pending.exit_crit_edge
  %jobctl = getelementptr inbounds %struct.task_struct, ptr %t, i32 0, i32 61
  %17 = ptrtoint ptr %jobctl to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %jobctl, align 4
  %and58 = and i32 %18, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and58)
  %tobool59.not = icmp eq i32 %and58, 0
  tail call void @_set_bit(i32 noundef 0, ptr noundef %7) #15
  %or.i.i = select i1 %tobool59.not, i32 1, i32 9
  %call.i.i = tail call i32 @wake_up_state(ptr noundef %t, i32 noundef %or.i.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i67 = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i67, label %if.then.i.i, label %task_set_jobctl_pending.exit.ptrace_signal_wake_up.exit_crit_edge

task_set_jobctl_pending.exit.ptrace_signal_wake_up.exit_crit_edge: ; preds = %task_set_jobctl_pending.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %ptrace_signal_wake_up.exit

if.then.i.i:                                      ; preds = %task_set_jobctl_pending.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @kick_process(ptr noundef %t) #15
  br label %ptrace_signal_wake_up.exit

ptrace_signal_wake_up.exit:                       ; preds = %if.then.i.i, %task_set_jobctl_pending.exit.ptrace_signal_wake_up.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @task_curr(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ptrace_stop(i32 noundef %exit_code, i32 noundef %why, i32 noundef %clear_code, ptr noundef %info) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %pi_lock = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 128
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %pi_lock) #15
  br label %__here

__here:                                           ; preds = %entry
  %4 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task, align 8
  %task_state_change = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 212
  %6 = ptrtoint ptr %task_state_change to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 ptrtoint (ptr blockaddress(@ptrace_stop, %__here) to i32), ptr %task_state_change, align 4
  %7 = load ptr, ptr %task, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile i32 264, ptr %7, align 128
  %9 = load ptr, ptr %task, align 8
  %pi_lock65 = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 128
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %pi_lock65, i32 noundef %call2) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !573
  %10 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %task, align 8
  %last_siginfo = getelementptr inbounds %struct.task_struct, ptr %11, i32 0, i32 154
  %12 = ptrtoint ptr %last_siginfo to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %info, ptr %last_siginfo, align 4
  %13 = load ptr, ptr %task, align 8
  %exit_code80 = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 58
  %14 = ptrtoint ptr %exit_code80 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %exit_code, ptr %exit_code80, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %why)
  %cmp81 = icmp eq i32 %why, 5
  br i1 %cmp81, label %land.lhs.true, label %__here.if.end90_crit_edge

__here.if.end90_crit_edge:                        ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end90

land.lhs.true:                                    ; preds = %__here
  %15 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task, align 8
  %jobctl = getelementptr inbounds %struct.task_struct, ptr %16, i32 0, i32 61
  %17 = ptrtoint ptr %jobctl to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %jobctl, align 4
  %and = and i32 %18, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool85.not = icmp eq i32 %and, 0
  br i1 %tobool85.not, label %land.lhs.true.if.end90_crit_edge, label %if.then86

land.lhs.true.if.end90_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end90

if.then86:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  %call89 = tail call fastcc zeroext i1 @task_participate_group_stop(ptr noundef %16)
  br label %if.end90

if.end90:                                         ; preds = %if.then86, %land.lhs.true.if.end90_crit_edge, %__here.if.end90_crit_edge
  %gstop_done.0.off0 = phi i1 [ %call89, %if.then86 ], [ false, %land.lhs.true.if.end90_crit_edge ], [ false, %__here.if.end90_crit_edge ]
  %19 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %task, align 8
  %jobctl.i = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 61
  %21 = ptrtoint ptr %jobctl.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %jobctl.i, align 4
  %and11.i = and i32 %22, -524289
  store i32 %and11.i, ptr %jobctl.i, align 4
  %23 = and i32 %22, 3276800
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %23)
  %.not.i = icmp eq i32 %23, 2097152
  br i1 %.not.i, label %if.then.i.i, label %if.end90.task_clear_jobctl_pending.exit_crit_edge, !prof !517

if.end90.task_clear_jobctl_pending.exit_crit_edge: ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #17
  br label %task_clear_jobctl_pending.exit

if.then.i.i:                                      ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #17
  %and4.i.i = and i32 %22, -2621441
  %24 = ptrtoint ptr %jobctl.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %and4.i.i, ptr %jobctl.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !515
  tail call void @wake_up_bit(ptr noundef %jobctl.i, i32 noundef 21) #15
  br label %task_clear_jobctl_pending.exit

task_clear_jobctl_pending.exit:                   ; preds = %if.then.i.i, %if.end90.task_clear_jobctl_pending.exit_crit_edge
  %tobool93.not = icmp eq ptr %info, null
  br i1 %tobool93.not, label %task_clear_jobctl_pending.exit.if.end100_crit_edge, label %land.lhs.true94

task_clear_jobctl_pending.exit.if.end100_crit_edge: ; preds = %task_clear_jobctl_pending.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end100

land.lhs.true94:                                  ; preds = %task_clear_jobctl_pending.exit
  %si_code = getelementptr inbounds %struct.anon, ptr %info, i32 0, i32 2
  %25 = ptrtoint ptr %si_code to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %si_code, align 4
  %shr.mask = and i32 %26, -256
  call void @__sanitizer_cov_trace_const_cmp4(i32 32768, i32 %shr.mask)
  %cmp95 = icmp eq i32 %shr.mask, 32768
  br i1 %cmp95, label %if.then97, label %land.lhs.true94.if.end100_crit_edge

land.lhs.true94.if.end100_crit_edge:              ; preds = %land.lhs.true94
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end100

if.then97:                                        ; preds = %land.lhs.true94
  %27 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %task, align 8
  %jobctl.i244 = getelementptr inbounds %struct.task_struct, ptr %28, i32 0, i32 61
  %29 = ptrtoint ptr %jobctl.i244 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %jobctl.i244, align 4
  %and11.i245 = and i32 %30, -1048577
  store i32 %and11.i245, ptr %jobctl.i244, align 4
  %31 = and i32 %30, 2752512
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %31)
  %.not.i246 = icmp eq i32 %31, 2097152
  br i1 %.not.i246, label %if.then.i.i248, label %if.then97.if.end100_crit_edge, !prof !517

if.then97.if.end100_crit_edge:                    ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end100

if.then.i.i248:                                   ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #17
  %and4.i.i247 = and i32 %30, -3145729
  %32 = ptrtoint ptr %jobctl.i244 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %and4.i.i247, ptr %jobctl.i244, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !515
  tail call void @wake_up_bit(ptr noundef %jobctl.i244, i32 noundef 21) #15
  br label %if.end100

if.end100:                                        ; preds = %if.then.i.i248, %if.then97.if.end100_crit_edge, %land.lhs.true94.if.end100_crit_edge, %task_clear_jobctl_pending.exit.if.end100_crit_edge
  %33 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %task, align 8
  %jobctl.i250 = getelementptr inbounds %struct.task_struct, ptr %34, i32 0, i32 61
  %35 = ptrtoint ptr %jobctl.i250 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %jobctl.i250, align 4
  %and.i251 = and i32 %36, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i251)
  %tobool.not.i = icmp eq i32 %and.i251, 0
  br i1 %tobool.not.i, label %if.end100.task_clear_jobctl_trapping.exit_crit_edge, label %if.then.i, !prof !509

if.end100.task_clear_jobctl_trapping.exit_crit_edge: ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #17
  br label %task_clear_jobctl_trapping.exit

if.then.i:                                        ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #17
  %and4.i = and i32 %36, -2097153
  %37 = ptrtoint ptr %jobctl.i250 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %and4.i, ptr %jobctl.i250, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !515
  tail call void @wake_up_bit(ptr noundef %jobctl.i250, i32 noundef 21) #15
  br label %task_clear_jobctl_trapping.exit

task_clear_jobctl_trapping.exit:                  ; preds = %if.then.i, %if.end100.task_clear_jobctl_trapping.exit_crit_edge
  %38 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %task, align 8
  %sighand = getelementptr inbounds %struct.task_struct, ptr %39, i32 0, i32 112
  %40 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %41) #15
  tail call void @_raw_read_lock(ptr noundef nonnull @tasklist_lock) #15
  %42 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %task, align 8
  %ptrace = getelementptr inbounds %struct.task_struct, ptr %43, i32 0, i32 4
  %44 = ptrtoint ptr %ptrace to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %ptrace, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool107.not = icmp eq i32 %45, 0
  br i1 %tobool107.not, label %if.else, label %if.then114, !prof !510

if.then114:                                       ; preds = %task_clear_jobctl_trapping.exit
  tail call fastcc void @do_notify_parent_cldstop(ptr noundef %43, i1 noundef zeroext true, i32 noundef %why)
  br i1 %gstop_done.0.off0, label %land.lhs.true119, label %if.then114.do.body128_crit_edge

if.then114.do.body128_crit_edge:                  ; preds = %if.then114
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body128

land.lhs.true119:                                 ; preds = %if.then114
  %46 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %task, align 8
  %real_parent.i = getelementptr inbounds %struct.task_struct, ptr %47, i32 0, i32 71
  %48 = ptrtoint ptr %real_parent.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %real_parent.i, align 4
  %parent.i = getelementptr inbounds %struct.task_struct, ptr %47, i32 0, i32 72
  %50 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %parent.i, align 8
  %signal.i.i = getelementptr inbounds %struct.task_struct, ptr %49, i32 0, i32 111
  %52 = ptrtoint ptr %signal.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %signal.i.i, align 16
  %signal1.i.i = getelementptr inbounds %struct.task_struct, ptr %51, i32 0, i32 111
  %54 = ptrtoint ptr %signal1.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %signal1.i.i, align 16
  %cmp.i.i.not = icmp eq ptr %53, %55
  br i1 %cmp.i.i.not, label %land.lhs.true119.do.body128_crit_edge, label %if.then124

land.lhs.true119.do.body128_crit_edge:            ; preds = %land.lhs.true119
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body128

if.then124:                                       ; preds = %land.lhs.true119
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @do_notify_parent_cldstop(ptr noundef %47, i1 noundef zeroext false, i32 noundef %why)
  br label %do.body128

do.body128:                                       ; preds = %if.then124, %land.lhs.true119.do.body128_crit_edge, %if.then114.do.body128_crit_edge
  %56 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i = and i32 %56, -16384
  %57 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %57, i32 0, i32 1
  %58 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %59, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !574
  tail call void @_raw_read_unlock(ptr noundef nonnull @tasklist_lock) #15
  tail call void @cgroup_enter_frozen() #15
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !575
  %60 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i242 = and i32 %60, -16384
  %61 = inttoptr i32 %and.i.i.i242 to ptr
  %preempt_count.i.i243 = getelementptr inbounds %struct.thread_info, ptr %61, i32 0, i32 1
  %62 = ptrtoint ptr %preempt_count.i.i243 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %preempt_count.i.i243, align 4
  %sub.i = add i32 %63, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i243, align 4
  %64 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i252 = and i32 %64, -16384
  %65 = inttoptr i32 %and.i.i.i252 to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %65, i32 0, i32 2
  %66 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %task.i.i, align 8
  %flags.i.i = getelementptr inbounds %struct.task_struct, ptr %67, i32 0, i32 3
  %68 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %flags.i.i, align 4
  %or.i.i = or i32 %69, 1073741824
  store i32 %or.i.i, ptr %flags.i.i, align 4
  tail call void @schedule() #15
  %70 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i1.i = and i32 %70, -16384
  %71 = inttoptr i32 %and.i.i1.i to ptr
  %task.i2.i = getelementptr inbounds %struct.thread_info, ptr %71, i32 0, i32 2
  %72 = ptrtoint ptr %task.i2.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %task.i2.i, align 8
  %flags.i3.i = getelementptr inbounds %struct.task_struct, ptr %73, i32 0, i32 3
  %74 = ptrtoint ptr %flags.i3.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %flags.i3.i, align 4
  %and.i.i = and i32 %75, -1073741825
  store i32 %and.i.i, ptr %flags.i3.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !541
  %76 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i = and i32 %76, -16384
  %77 = inttoptr i32 %and.i.i.i.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %77, i32 0, i32 2
  %78 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %task.i.i.i, align 8
  %flags.i.i.i = getelementptr inbounds %struct.task_struct, ptr %79, i32 0, i32 3
  %80 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %flags.i.i.i, align 4
  %and.i4.i.i = and i32 %81, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i4.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i4.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %do.body128.if.end.i.i.i_crit_edge

do.body128.if.end.i.i.i_crit_edge:                ; preds = %do.body128
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i.i

if.then.i.i.i:                                    ; preds = %do.body128
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @debug_check_no_locks_held() #15
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then.i.i.i, %do.body128.if.end.i.i.i_crit_edge
  tail call void @__might_sleep(ptr noundef nonnull @.str.102, i32 noundef 57) #15
  %82 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i = and i32 %82, -16384
  %83 = inttoptr i32 %and.i.i.i.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %83, i32 0, i32 2
  %84 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %task.i.i.i.i, align 8
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @system_freezing_cnt, i32 noundef 4) #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_freezing_cnt to i32))
  %86 = load volatile i32, ptr @system_freezing_cnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %86)
  %tobool.not.i.i.i.i.i = icmp eq i32 %86, 0
  br i1 %tobool.not.i.i.i.i.i, label %if.end.i.i.i.freezable_schedule.exit_crit_edge, label %freezing.exit.i.i.i.i, !prof !509

if.end.i.i.i.freezable_schedule.exit_crit_edge:   ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %freezable_schedule.exit

freezing.exit.i.i.i.i:                            ; preds = %if.end.i.i.i
  %call4.i.i.i.i.i = tail call zeroext i1 @freezing_slow_path(ptr noundef %85) #15
  br i1 %call4.i.i.i.i.i, label %if.end.i.i.i.i, label %freezing.exit.i.i.i.i.freezable_schedule.exit_crit_edge, !prof !510

freezing.exit.i.i.i.i.freezable_schedule.exit_crit_edge: ; preds = %freezing.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %freezable_schedule.exit

if.end.i.i.i.i:                                   ; preds = %freezing.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %call6.i.i.i.i = tail call zeroext i1 @__refrigerator(i1 noundef zeroext false) #15
  br label %freezable_schedule.exit

freezable_schedule.exit:                          ; preds = %if.end.i.i.i.i, %freezing.exit.i.i.i.i.freezable_schedule.exit_crit_edge, %if.end.i.i.i.freezable_schedule.exit_crit_edge
  tail call void @cgroup_leave_frozen(i1 noundef zeroext true) #15
  br label %if.end217

if.else:                                          ; preds = %task_clear_jobctl_trapping.exit
  br i1 %gstop_done.0.off0, label %if.then135, label %if.else.__here190_crit_edge

if.else.__here190_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %__here190

if.then135:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @do_notify_parent_cldstop(ptr noundef %43, i1 noundef zeroext false, i32 noundef %why)
  br label %__here190

__here190:                                        ; preds = %if.then135, %if.else.__here190_crit_edge
  %87 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %task, align 8
  %task_state_change194 = getelementptr inbounds %struct.task_struct, ptr %88, i32 0, i32 212
  %89 = ptrtoint ptr %task_state_change194 to i32
  call void @__asan_store4_noabort(i32 %89)
  store i32 ptrtoint (ptr blockaddress(@ptrace_stop, %__here190) to i32), ptr %task_state_change194, align 4
  %90 = load ptr, ptr %task, align 8
  %91 = ptrtoint ptr %90 to i32
  call void @__asan_store4_noabort(i32 %91)
  store volatile i32 0, ptr %90, align 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %clear_code)
  %tobool211.not = icmp eq i32 %clear_code, 0
  br i1 %tobool211.not, label %__here190.if.end216_crit_edge, label %if.then212

__here190.if.end216_crit_edge:                    ; preds = %__here190
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end216

if.then212:                                       ; preds = %__here190
  call void @__sanitizer_cov_trace_pc() #17
  %92 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %task, align 8
  %exit_code215 = getelementptr inbounds %struct.task_struct, ptr %93, i32 0, i32 58
  %94 = ptrtoint ptr %exit_code215 to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 0, ptr %exit_code215, align 16
  br label %if.end216

if.end216:                                        ; preds = %if.then212, %__here190.if.end216_crit_edge
  tail call void @_raw_read_unlock(ptr noundef nonnull @tasklist_lock) #15
  br label %if.end217

if.end217:                                        ; preds = %if.end216, %freezable_schedule.exit
  %95 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %task, align 8
  %sighand220 = getelementptr inbounds %struct.task_struct, ptr %96, i32 0, i32 112
  %97 = ptrtoint ptr %sighand220 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %sighand220, align 4
  tail call void @_raw_spin_lock_irq(ptr noundef %98) #15
  %99 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %task, align 8
  %last_siginfo224 = getelementptr inbounds %struct.task_struct, ptr %100, i32 0, i32 154
  %101 = ptrtoint ptr %last_siginfo224 to i32
  call void @__asan_store4_noabort(i32 %101)
  store ptr null, ptr %last_siginfo224, align 4
  %102 = load ptr, ptr %task, align 8
  %jobctl227 = getelementptr inbounds %struct.task_struct, ptr %102, i32 0, i32 61
  %103 = ptrtoint ptr %jobctl227 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %jobctl227, align 4
  %and228 = and i32 %104, -4194305
  store i32 %and228, ptr %jobctl227, align 4
  %105 = load ptr, ptr %task, align 8
  %jobctl.i253 = getelementptr inbounds %struct.task_struct, ptr %105, i32 0, i32 61
  %106 = ptrtoint ptr %jobctl.i253 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %jobctl.i253, align 4
  %and.i254 = and i32 %107, 10092544
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i254)
  %tobool.not.i255 = icmp eq i32 %and.i254, 0
  br i1 %tobool.not.i255, label %lor.lhs.false.i, label %if.end217.if.then.i258_crit_edge

if.end217.if.then.i258_crit_edge:                 ; preds = %if.end217
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i258

lor.lhs.false.i:                                  ; preds = %if.end217
  %signal.i = getelementptr inbounds %struct.task_struct, ptr %105, i32 0, i32 116, i32 1
  %blocked.i = getelementptr inbounds %struct.task_struct, ptr %105, i32 0, i32 113
  %arrayidx.i.i = getelementptr %struct.task_struct, ptr %105, i32 0, i32 116, i32 1, i32 0, i32 1
  %108 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %arrayidx.i.i, align 4
  %arrayidx2.i.i = getelementptr %struct.task_struct, ptr %105, i32 0, i32 113, i32 0, i32 1
  %110 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %arrayidx2.i.i, align 4
  %neg.i.i = xor i32 %111, -1
  %and.i.i256 = and i32 %109, %neg.i.i
  %112 = ptrtoint ptr %signal.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %signal.i, align 4
  %114 = ptrtoint ptr %blocked.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %blocked.i, align 4
  %neg7.i.i = xor i32 %115, -1
  %and8.i.i = and i32 %113, %neg7.i.i
  %or.i.i257 = or i32 %and8.i.i, %and.i.i256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i257)
  %cmp.i.not.i = icmp eq i32 %or.i.i257, 0
  br i1 %cmp.i.not.i, label %lor.lhs.false1.i, label %lor.lhs.false.i.if.then.i258_crit_edge

lor.lhs.false.i.if.then.i258_crit_edge:           ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i258

lor.lhs.false1.i:                                 ; preds = %lor.lhs.false.i
  %signal2.i = getelementptr inbounds %struct.task_struct, ptr %105, i32 0, i32 111
  %116 = ptrtoint ptr %signal2.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %signal2.i, align 16
  %signal3.i = getelementptr inbounds %struct.signal_struct, ptr %117, i32 0, i32 6, i32 1
  %arrayidx.i14.i = getelementptr %struct.signal_struct, ptr %117, i32 0, i32 6, i32 1, i32 0, i32 1
  %118 = ptrtoint ptr %arrayidx.i14.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %arrayidx.i14.i, align 4
  %and.i17.i = and i32 %119, %neg.i.i
  %120 = ptrtoint ptr %signal3.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %signal3.i, align 4
  %and8.i19.i = and i32 %121, %neg7.i.i
  %or.i20.i = or i32 %and8.i19.i, %and.i17.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i20.i)
  %cmp.i21.not.i = icmp eq i32 %or.i20.i, 0
  br i1 %cmp.i21.not.i, label %lor.lhs.false6.i, label %lor.lhs.false1.i.if.then.i258_crit_edge

lor.lhs.false1.i.if.then.i258_crit_edge:          ; preds = %lor.lhs.false1.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i258

lor.lhs.false6.i:                                 ; preds = %lor.lhs.false1.i
  %frozen.i.i = getelementptr inbounds %struct.task_struct, ptr %105, i32 0, i32 65
  %122 = ptrtoint ptr %frozen.i.i to i32
  call void @__asan_load2_noabort(i32 %122)
  %bf.load.i.i = load i16, ptr %frozen.i.i, align 8
  %123 = and i16 %bf.load.i.i, 512
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %123)
  %tobool.i.not.i = icmp eq i16 %123, 0
  br i1 %tobool.i.not.i, label %lor.lhs.false6.i.recalc_sigpending_tsk.exit_crit_edge, label %lor.lhs.false6.i.if.then.i258_crit_edge

lor.lhs.false6.i.if.then.i258_crit_edge:          ; preds = %lor.lhs.false6.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i258

lor.lhs.false6.i.recalc_sigpending_tsk.exit_crit_edge: ; preds = %lor.lhs.false6.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %recalc_sigpending_tsk.exit

if.then.i258:                                     ; preds = %lor.lhs.false6.i.if.then.i258_crit_edge, %lor.lhs.false1.i.if.then.i258_crit_edge, %lor.lhs.false.i.if.then.i258_crit_edge, %if.end217.if.then.i258_crit_edge
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %105, i32 0, i32 1
  %124 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %stack.i.i, align 4
  tail call void @_set_bit(i32 noundef 0, ptr noundef %125) #15
  br label %recalc_sigpending_tsk.exit

recalc_sigpending_tsk.exit:                       ; preds = %if.then.i258, %lor.lhs.false6.i.recalc_sigpending_tsk.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @cgroup_enter_frozen() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_check_no_locks_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__refrigerator(i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @show_regs(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__percpu_down_read(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcuwait_wake_up(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__check_object_size(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @should_fail_usercopy() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_from_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_to_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_clear_user(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @get_timespec64(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @do_sigtimedwait(ptr nocapture noundef readonly %which, ptr noundef %info, ptr noundef readonly %ts) #0 align 64 {
entry:
  %newblocked.i = alloca %struct.sigset_t, align 4
  %timeout = alloca i64, align 8
  %mask = alloca %struct.sigset_t, align 8
  %type = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %timeout) #15
  %0 = ptrtoint ptr %timeout to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 9223372036854775807, ptr %timeout, align 8
  %1 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %mask) #15
  %5 = getelementptr inbounds [2 x i32], ptr %mask, i32 0, i32 1
  %6 = ptrtoint ptr %which to i32
  call void @__asan_loadN_noabort(i32 %6, i32 8)
  %7 = load i64, ptr %which, align 4
  %8 = ptrtoint ptr %mask to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %7, ptr %mask, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %type) #15
  %tobool.not = icmp eq ptr %ts, null
  br i1 %tobool.not, label %entry.if.end4_crit_edge, label %if.then

entry.if.end4_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end4

if.then:                                          ; preds = %entry
  %9 = ptrtoint ptr %ts to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %ts, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %10)
  %cmp.i = icmp slt i64 %10, 0
  br i1 %cmp.i, label %if.then.cleanup_crit_edge, label %timespec64_valid.exit

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

timespec64_valid.exit:                            ; preds = %if.then
  %tv_nsec.i = getelementptr inbounds %struct.timespec64, ptr %ts, i32 0, i32 1
  %11 = ptrtoint ptr %tv_nsec.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %tv_nsec.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1000000000, i32 %12)
  %cmp1.i = icmp ult i32 %12, 1000000000
  br i1 %cmp1.i, label %if.end, label %timespec64_valid.exit.cleanup_crit_edge

timespec64_valid.exit.cleanup_crit_edge:          ; preds = %timespec64_valid.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %timespec64_valid.exit
  call void @__sanitizer_cov_trace_pc() #17
  %13 = ptrtoint ptr %tv_nsec.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %.unpack108 = load i64, ptr %tv_nsec.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 9223372035, i64 %10)
  %cmp.i.i = icmp ugt i64 %10, 9223372035
  %ts.sroa.2.8.extract.shift.i = lshr i64 %.unpack108, 32
  %mul.i.i = mul i64 %10, 1000000000
  %add.i.i = add i64 %ts.sroa.2.8.extract.shift.i, %mul.i.i
  %retval.0.i.i = select i1 %cmp.i.i, i64 9223372036854775807, i64 %add.i.i, !prof !510
  %14 = ptrtoint ptr %timeout to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %retval.0.i.i, ptr %timeout, align 8
  br label %if.end4

if.end4:                                          ; preds = %if.end, %entry.if.end4_crit_edge
  %to.0 = phi ptr [ %timeout, %if.end ], [ null, %entry.if.end4_crit_edge ]
  %15 = ptrtoint ptr %mask to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %mask, align 8
  %and.i109 = and i32 %16, -262401
  %17 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %5, align 4
  %neg.i = xor i32 %18, -1
  store i32 %neg.i, ptr %5, align 4
  %neg5.i = xor i32 %and.i109, -1
  store i32 %neg5.i, ptr %mask, align 8
  %sighand = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 112
  %19 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_lock_irq(ptr noundef %20) #15
  %call5 = call i32 @dequeue_signal(ptr noundef %4, ptr noundef nonnull %mask, ptr noundef %info, ptr noundef nonnull %type)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %land.lhs.true, label %if.end74.thread120

if.end74.thread120:                               ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #17
  %21 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %22) #15
  br label %cleanup

land.lhs.true:                                    ; preds = %if.end4
  %23 = ptrtoint ptr %timeout to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %timeout, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %24)
  %tobool7.not = icmp eq i64 %24, 0
  br i1 %tobool7.not, label %if.end79.thread, label %if.then8

if.end79.thread:                                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  %25 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %26) #15
  br label %96

if.then8:                                         ; preds = %land.lhs.true
  %real_blocked = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 114
  %blocked = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 113
  %27 = ptrtoint ptr %blocked to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %blocked, align 8
  %29 = ptrtoint ptr %real_blocked to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %28, ptr %real_blocked, align 32
  %arrayidx.i110 = getelementptr %struct.task_struct, ptr %4, i32 0, i32 113, i32 0, i32 1
  %30 = trunc i64 %28 to i32
  %and.i111 = and i32 %30, %neg.i
  %31 = ptrtoint ptr %arrayidx.i110 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %and.i111, ptr %arrayidx.i110, align 4
  %32 = lshr i64 %28, 32
  %33 = trunc i64 %32 to i32
  %and9.i = and i32 %33, %neg5.i
  store i32 %and9.i, ptr %blocked, align 4
  tail call void @recalc_sigpending()
  %34 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %35) #15
  br label %__here

__here:                                           ; preds = %if.then8
  %36 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %task, align 8
  %task_state_change = getelementptr inbounds %struct.task_struct, ptr %37, i32 0, i32 212
  %38 = ptrtoint ptr %task_state_change to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 ptrtoint (ptr blockaddress(@do_sigtimedwait, %__here) to i32), ptr %task_state_change, align 4
  %39 = load ptr, ptr %task, align 8
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_store4_noabort(i32 %40)
  store volatile i32 1, ptr %39, align 128
  %timer_slack_ns = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 189
  %41 = ptrtoint ptr %timer_slack_ns to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %timer_slack_ns, align 8
  %43 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i = and i32 %43, -16384
  %44 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %44, i32 0, i32 2
  %45 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %task.i.i, align 8
  %flags.i.i = getelementptr inbounds %struct.task_struct, ptr %46, i32 0, i32 3
  %47 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %flags.i.i, align 4
  %or.i.i = or i32 %48, 1073741824
  store i32 %or.i.i, ptr %flags.i.i, align 4
  %call.i = call i32 @schedule_hrtimeout_range(ptr noundef %to.0, i64 noundef %42, i32 noundef 1) #15
  %49 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i1.i = and i32 %49, -16384
  %50 = inttoptr i32 %and.i.i1.i to ptr
  %task.i2.i = getelementptr inbounds %struct.thread_info, ptr %50, i32 0, i32 2
  %51 = ptrtoint ptr %task.i2.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %task.i2.i, align 8
  %flags.i3.i = getelementptr inbounds %struct.task_struct, ptr %52, i32 0, i32 3
  %53 = ptrtoint ptr %flags.i3.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %flags.i3.i, align 4
  %and.i.i = and i32 %54, -1073741825
  store i32 %and.i.i, ptr %flags.i3.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !541
  %55 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i = and i32 %55, -16384
  %56 = inttoptr i32 %and.i.i.i.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %56, i32 0, i32 2
  %57 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %task.i.i.i, align 8
  %flags.i.i.i = getelementptr inbounds %struct.task_struct, ptr %58, i32 0, i32 3
  %59 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %flags.i.i.i, align 4
  %and.i4.i.i = and i32 %60, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i4.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i4.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %__here.if.end.i.i.i_crit_edge

__here.if.end.i.i.i_crit_edge:                    ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i.i

if.then.i.i.i:                                    ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #17
  call void @debug_check_no_locks_held() #15
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then.i.i.i, %__here.if.end.i.i.i_crit_edge
  call void @__might_sleep(ptr noundef nonnull @.str.102, i32 noundef 57) #15
  %61 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i = and i32 %61, -16384
  %62 = inttoptr i32 %and.i.i.i.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %62, i32 0, i32 2
  %63 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %task.i.i.i.i, align 8
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @system_freezing_cnt, i32 noundef 4) #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_freezing_cnt to i32))
  %65 = load volatile i32, ptr @system_freezing_cnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool.not.i.i.i.i.i = icmp eq i32 %65, 0
  br i1 %tobool.not.i.i.i.i.i, label %if.end.i.i.i.freezable_schedule_hrtimeout_range.exit_crit_edge, label %freezing.exit.i.i.i.i, !prof !509

if.end.i.i.i.freezable_schedule_hrtimeout_range.exit_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %freezable_schedule_hrtimeout_range.exit

freezing.exit.i.i.i.i:                            ; preds = %if.end.i.i.i
  %call4.i.i.i.i.i = call zeroext i1 @freezing_slow_path(ptr noundef %64) #15
  br i1 %call4.i.i.i.i.i, label %if.end.i.i.i.i, label %freezing.exit.i.i.i.i.freezable_schedule_hrtimeout_range.exit_crit_edge, !prof !510

freezing.exit.i.i.i.i.freezable_schedule_hrtimeout_range.exit_crit_edge: ; preds = %freezing.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %freezable_schedule_hrtimeout_range.exit

if.end.i.i.i.i:                                   ; preds = %freezing.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %call6.i.i.i.i = call zeroext i1 @__refrigerator(i1 noundef zeroext false) #15
  br label %freezable_schedule_hrtimeout_range.exit

freezable_schedule_hrtimeout_range.exit:          ; preds = %if.end.i.i.i.i, %freezing.exit.i.i.i.i.freezable_schedule_hrtimeout_range.exit_crit_edge, %if.end.i.i.i.freezable_schedule_hrtimeout_range.exit_crit_edge
  %66 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %sighand, align 4
  call void @_raw_spin_lock_irq(ptr noundef %67) #15
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 1
  %68 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %stack.i.i.i, align 4
  %70 = ptrtoint ptr %69 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load volatile i32, ptr %69, align 4
  %and1.i.i.i.i.i = and i32 %71, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool.not.i, label %freezable_schedule_hrtimeout_range.exit.if.end74_crit_edge, label %land.lhs.true.i

freezable_schedule_hrtimeout_range.exit.if.end74_crit_edge: ; preds = %freezable_schedule_hrtimeout_range.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end74

land.lhs.true.i:                                  ; preds = %freezable_schedule_hrtimeout_range.exit
  %thread_group.i.i = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 80
  %72 = ptrtoint ptr %thread_group.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile ptr, ptr %thread_group.i.i, align 4
  %cmp.i.i.not.i = icmp eq ptr %73, %thread_group.i.i
  br i1 %cmp.i.i.not.i, label %land.lhs.true.i.if.end74_crit_edge, label %if.then.i

land.lhs.true.i.if.end74_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end74

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %newblocked.i) #15
  %74 = getelementptr inbounds [2 x i32], ptr %newblocked.i, i32 0, i32 1
  %75 = call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i112 = and i32 %75, -16384
  %76 = inttoptr i32 %and.i.i112 to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %76, i32 0, i32 2
  %77 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %task.i, align 8
  %blocked.i = getelementptr inbounds %struct.task_struct, ptr %78, i32 0, i32 113
  %arrayidx.i.i = getelementptr %struct.task_struct, ptr %4, i32 0, i32 114, i32 0, i32 1
  %79 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %arrayidx.i.i, align 4
  %arrayidx2.i.i = getelementptr %struct.task_struct, ptr %78, i32 0, i32 113, i32 0, i32 1
  %81 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %arrayidx2.i.i, align 4
  %neg.i.i = xor i32 %82, -1
  %and.i9.i = and i32 %80, %neg.i.i
  %83 = ptrtoint ptr %74 to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 %and.i9.i, ptr %74, align 4
  %84 = ptrtoint ptr %real_blocked to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %real_blocked, align 4
  %86 = ptrtoint ptr %blocked.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %blocked.i, align 4
  %neg9.i.i = xor i32 %87, -1
  %and10.i.i = and i32 %85, %neg9.i.i
  %88 = ptrtoint ptr %newblocked.i to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 %and10.i.i, ptr %newblocked.i, align 4
  call fastcc void @retarget_shared_pending(ptr noundef %4, ptr noundef nonnull %newblocked.i) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %newblocked.i) #15
  br label %if.end74

if.end74:                                         ; preds = %if.then.i, %land.lhs.true.i.if.end74_crit_edge, %freezable_schedule_hrtimeout_range.exit.if.end74_crit_edge
  %89 = ptrtoint ptr %real_blocked to i32
  call void @__asan_loadN_noabort(i32 %89, i32 8)
  %90 = load i64, ptr %real_blocked, align 4
  %91 = ptrtoint ptr %blocked to i32
  call void @__asan_store8_noabort(i32 %91)
  store i64 %90, ptr %blocked, align 8
  call void @recalc_sigpending() #15
  %arrayidx.i114 = getelementptr %struct.task_struct, ptr %4, i32 0, i32 114, i32 0, i32 1
  %92 = ptrtoint ptr %arrayidx.i114 to i32
  call void @__asan_store4_noabort(i32 %92)
  store i32 0, ptr %arrayidx.i114, align 4
  %93 = ptrtoint ptr %real_blocked to i32
  call void @__asan_store4_noabort(i32 %93)
  store i32 0, ptr %real_blocked, align 4
  %call73 = call i32 @dequeue_signal(ptr noundef %4, ptr noundef nonnull %mask, ptr noundef %info, ptr noundef nonnull %type)
  %94 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %sighand, align 4
  call void @_raw_spin_unlock_irq(ptr noundef %95) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call73)
  %tobool77.not = icmp eq i32 %call73, 0
  br i1 %tobool77.not, label %if.end79, label %if.end74.cleanup_crit_edge

if.end74.cleanup_crit_edge:                       ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end79:                                         ; preds = %if.end74
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool80.not = icmp eq i32 %call.i, 0
  br i1 %tobool80.not, label %if.end79._crit_edge, label %if.end79.cleanup_crit_edge

if.end79.cleanup_crit_edge:                       ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end79._crit_edge:                              ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #17
  br label %96

96:                                               ; preds = %if.end79._crit_edge, %if.end79.thread
  br label %cleanup

cleanup:                                          ; preds = %96, %if.end79.cleanup_crit_edge, %if.end74.cleanup_crit_edge, %if.end74.thread120, %timespec64_valid.exit.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %timespec64_valid.exit.cleanup_crit_edge ], [ %call73, %if.end74.cleanup_crit_edge ], [ %call5, %if.end74.thread120 ], [ -11, %96 ], [ -4, %if.end79.cleanup_crit_edge ], [ -22, %if.then.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %type) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %mask) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %timeout) #15
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @schedule_hrtimeout_range(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @get_old_timespec32(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @kill_proc_info(i32 noundef %sig, ptr noundef %info, i32 noundef %pid) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %call = tail call ptr @find_vpid(i32 noundef %pid) #15
  %call1 = tail call i32 @kill_pid_info(i32 noundef %sig, ptr noundef %info, ptr noundef %call)
  %call.i2 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i2, label %rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i5

rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true.i5:                                 ; preds = %rcu_read_lock.exit
  %call1.i3 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i3)
  %tobool.not.i4 = icmp eq i32 %call1.i3, 0
  br i1 %tobool.not.i4, label %land.lhs.true.i5.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i7

land.lhs.true.i5.rcu_read_unlock.exit_crit_edge:  ; preds = %land.lhs.true.i5
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true2.i7:                                ; preds = %land.lhs.true.i5
  %.b4.i6 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i6, label %land.lhs.true2.i7.rcu_read_unlock.exit_crit_edge, label %if.then.i8

land.lhs.true2.i7.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i7
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

if.then.i8:                                       ; preds = %land.lhs.true2.i7
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 724, ptr noundef nonnull @.str.91) #15
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i8, %land.lhs.true2.i7.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i5.rcu_read_unlock.exit_crit_edge, %rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !520
  %4 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i9 = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i.i.i9 to ptr
  %preempt_count.i.i.i.i10 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i.i.i10 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i.i.i10, align 4
  %sub.i.i.i = add i32 %7, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i10, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  ret i32 %call1
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @find_vpid(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__fdget(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pidfd_pid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @tgid_pidfd_to_pid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @fput(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @do_send_specific(i32 noundef %tgid, i32 noundef %pid, i32 noundef %sig, ptr noundef %info) unnamed_addr #0 align 64 {
entry:
  %flags.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !519
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 696, ptr noundef nonnull @.str.90) #15
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %call = tail call ptr @find_task_by_vpid(i32 noundef %pid) #15
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %rcu_read_lock.exit.if.end14_crit_edge, label %land.lhs.true

rcu_read_lock.exit.if.end14_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end14

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %tgid)
  %cmp = icmp slt i32 %tgid, 1
  br i1 %cmp, label %land.lhs.true.if.then_crit_edge, label %lor.lhs.false

land.lhs.true.if.then_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call.i24 = tail call i32 @__task_pid_nr_ns(ptr noundef nonnull %call, i32 noundef 1, ptr noundef null) #15
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i24, i32 %tgid)
  %cmp2 = icmp eq i32 %call.i24, %tgid
  br i1 %cmp2, label %lor.lhs.false.if.then_crit_edge, label %lor.lhs.false.if.end14_crit_edge

lor.lhs.false.if.end14_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end14

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %land.lhs.true.if.then_crit_edge
  %call3 = tail call fastcc i32 @check_kill_permission(i32 noundef %sig, ptr noundef %info, ptr noundef nonnull %call)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %land.lhs.true5, label %if.then.if.end14_crit_edge

if.then.if.end14_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end14

land.lhs.true5:                                   ; preds = %if.then
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sig)
  %tobool6.not = icmp eq i32 %sig, 0
  br i1 %tobool6.not, label %land.lhs.true5.if.end14_crit_edge, label %if.then7

land.lhs.true5.if.end14_crit_edge:                ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end14

if.then7:                                         ; preds = %land.lhs.true5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flags.i) #15
  %4 = ptrtoint ptr %flags.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %flags.i, align 4, !annotation !511
  %call.i.i = call ptr @__lock_task_sighand(ptr noundef nonnull %call, ptr noundef nonnull %flags.i) #15
  %tobool.not.i25 = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i25, label %do_send_sig_info.exit.thread, label %do_send_sig_info.exit

do_send_sig_info.exit.thread:                     ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flags.i) #15
  br label %if.then12

do_send_sig_info.exit:                            ; preds = %if.then7
  %call1.i26 = tail call fastcc i32 @send_signal(i32 noundef %sig, ptr noundef %info, ptr noundef nonnull %call, i32 noundef 0) #15
  %sighand.i.i = getelementptr inbounds %struct.task_struct, ptr %call, i32 0, i32 112
  %5 = ptrtoint ptr %sighand.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %sighand.i.i, align 4
  %7 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %flags.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %6, i32 noundef %8) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flags.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 -3, i32 %call1.i26)
  %cmp9 = icmp eq i32 %call1.i26, -3
  br i1 %cmp9, label %do_send_sig_info.exit.if.then12_crit_edge, label %do_send_sig_info.exit.if.end14_crit_edge, !prof !510

do_send_sig_info.exit.if.end14_crit_edge:         ; preds = %do_send_sig_info.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end14

do_send_sig_info.exit.if.then12_crit_edge:        ; preds = %do_send_sig_info.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then12

if.then12:                                        ; preds = %do_send_sig_info.exit.if.then12_crit_edge, %do_send_sig_info.exit.thread
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %do_send_sig_info.exit.if.end14_crit_edge, %land.lhs.true5.if.end14_crit_edge, %if.then.if.end14_crit_edge, %lor.lhs.false.if.end14_crit_edge, %rcu_read_lock.exit.if.end14_crit_edge
  %error.0 = phi i32 [ %call3, %if.then.if.end14_crit_edge ], [ 0, %if.then12 ], [ %call1.i26, %do_send_sig_info.exit.if.end14_crit_edge ], [ 0, %land.lhs.true5.if.end14_crit_edge ], [ -3, %lor.lhs.false.if.end14_crit_edge ], [ -3, %rcu_read_lock.exit.if.end14_crit_edge ]
  %call.i28 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i28, label %if.end14.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i31

if.end14.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true.i31:                                ; preds = %if.end14
  %call1.i29 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i29)
  %tobool.not.i30 = icmp eq i32 %call1.i29, 0
  br i1 %tobool.not.i30, label %land.lhs.true.i31.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i33

land.lhs.true.i31.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i31
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true2.i33:                               ; preds = %land.lhs.true.i31
  %.b4.i32 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i32, label %land.lhs.true2.i33.rcu_read_unlock.exit_crit_edge, label %if.then.i34

land.lhs.true2.i33.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i33
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

if.then.i34:                                      ; preds = %land.lhs.true2.i33
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 724, ptr noundef nonnull @.str.91) #15
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i34, %land.lhs.true2.i33.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i31.rcu_read_unlock.exit_crit_edge, %if.end14.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !520
  %9 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i35 = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i.i.i35 to ptr
  %preempt_count.i.i.i.i36 = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i.i.i36 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i.i.i36, align 4
  %sub.i.i.i = add i32 %12, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i36, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  ret i32 %error.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @find_task_by_vpid(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__copy_siginfo_from_user(i32 noundef %signo, ptr noundef %to, ptr noundef %from) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__might_fault(ptr noundef nonnull @.str.115, i32 noundef 156) #15
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #15
  br i1 %call.i.i, label %entry.if.then11.i.i_crit_edge, label %land.lhs.true.i.i

entry.if.then11.i.i_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i

land.lhs.true.i.i:                                ; preds = %entry
  %0 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %from, i32 32, i32 -1226833920) #19, !srcloc !550
  %asmresult.i.i = extractvalue { i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i.i, label %land.lhs.true.i.i.if.then11.i.i_crit_edge, !prof !509

land.lhs.true.i.i.if.then11.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %to, i32 noundef 32) #15
  %1 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 4
  %3 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #10, !srcloc !551
  %and.i.i.i.i = and i32 %3, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #15, !srcloc !552
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  %call1.i.i.i = tail call i32 @arm_copy_from_user(ptr noundef %to, ptr noundef %from, i32 noundef 32) #15
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %3) #15, !srcloc !552
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #15, !srcloc !553
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool4.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end, label %if.end.i.i.if.then11.i.i_crit_edge, !prof !509

if.end.i.i.if.then11.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then11.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i.if.then11.i.i_crit_edge, %land.lhs.true.i.i.if.then11.i.i_crit_edge, %entry.if.then11.i.i_crit_edge
  %res.0.i.i7 = phi i32 [ %call1.i.i.i, %if.end.i.i.if.then11.i.i_crit_edge ], [ 32, %entry.if.then11.i.i_crit_edge ], [ 32, %land.lhs.true.i.i.if.then11.i.i_crit_edge ]
  %sub.i.i = sub i32 32, %res.0.i.i7
  %add.ptr.i.i = getelementptr i8, ptr %to, i32 %sub.i.i
  %4 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i7)
  br label %return

if.end:                                           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %5 = ptrtoint ptr %to to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %signo, ptr %to, align 4
  %call1 = tail call fastcc i32 @post_copy_siginfo_from_user(ptr noundef %to, ptr noundef %from)
  br label %return

return:                                           ; preds = %if.end, %if.then11.i.i
  %retval.0 = phi i32 [ %call1, %if.end ], [ -14, %if.then11.i.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @sigsuspend(ptr nocapture noundef %set) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %saved_sigmask = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 115
  %blocked = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 113
  %4 = ptrtoint ptr %blocked to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %blocked, align 8
  %6 = ptrtoint ptr %saved_sigmask to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 %5, ptr %saved_sigmask, align 8
  %7 = ptrtoint ptr %set to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %set, align 4
  %and.i.i = and i32 %8, -262401
  store i32 %and.i.i, ptr %set, align 4
  tail call void @__set_current_blocked(ptr noundef %set) #15
  %9 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %task, align 8
  %stack.i.i65 = getelementptr inbounds %struct.task_struct, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %stack.i.i65 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %stack.i.i65, align 4
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %12, align 4
  %15 = and i32 %14, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.not.i66 = icmp eq i32 %15, 0
  br i1 %tobool.not.i66, label %entry.signal_pending.exit_crit_edge, label %entry.while.end_crit_edge, !prof !509

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

entry.signal_pending.exit_crit_edge:              ; preds = %entry
  br label %signal_pending.exit

signal_pending.exit:                              ; preds = %__here.signal_pending.exit_crit_edge, %entry.signal_pending.exit_crit_edge
  %16 = phi ptr [ %27, %__here.signal_pending.exit_crit_edge ], [ %12, %entry.signal_pending.exit_crit_edge ]
  %17 = phi ptr [ %25, %__here.signal_pending.exit_crit_edge ], [ %10, %entry.signal_pending.exit_crit_edge ]
  %18 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %16, align 4
  %and1.i.i.i.i.i = and i32 %19, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i)
  %tobool.not = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool.not, label %__here, label %signal_pending.exit.while.end_crit_edge

signal_pending.exit.while.end_crit_edge:          ; preds = %signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

__here:                                           ; preds = %signal_pending.exit
  %task_state_change = getelementptr inbounds %struct.task_struct, ptr %17, i32 0, i32 212
  %20 = ptrtoint ptr %task_state_change to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 ptrtoint (ptr blockaddress(@sigsuspend, %__here) to i32), ptr %task_state_change, align 4
  %21 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %task, align 8
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile i32 1, ptr %22, align 128
  tail call void @schedule() #15
  %24 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %task, align 8
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %stack.i.i, align 4
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %27, align 4
  %30 = and i32 %29, 256
  %tobool.not.i = icmp eq i32 %30, 0
  br i1 %tobool.not.i, label %__here.signal_pending.exit_crit_edge, label %__here.while.end_crit_edge, !prof !509

__here.while.end_crit_edge:                       ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

__here.signal_pending.exit_crit_edge:             ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #17
  br label %signal_pending.exit

while.end:                                        ; preds = %__here.while.end_crit_edge, %signal_pending.exit.while.end_crit_edge, %entry.while.end_crit_edge
  %31 = tail call i32 @llvm.read_register.i32(metadata !499) #15
  %and.i.i62 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i62 to ptr
  tail call void @_set_bit(i32 noundef 20, ptr noundef %32) #15
  ret i32 undef
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_trylock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #15

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #16 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 230)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #16 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 230)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { mustprogress nofree nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { nounwind readonly }
attributes #11 = { mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #13 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #14 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nounwind }
attributes #16 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #17 = { nomerge }
attributes #18 = { cold nounwind }
attributes #19 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !18, !20, !22, !24, !26, !27, !28, !30, !32, !34, !35, !37, !39, !41, !43, !45, !47, !49, !51, !53, !55, !56, !57, !58, !59, !60, !61, !62, !63, !65, !67, !68, !69, !70, !71, !72, !73, !74, !75, !77, !78, !79, !80, !81, !82, !83, !84, !85, !87, !88, !89, !90, !91, !92, !93, !94, !95, !97, !98, !99, !100, !101, !102, !103, !104, !105, !107, !108, !109, !110, !111, !112, !113, !114, !115, !117, !118, !119, !120, !121, !122, !123, !124, !125, !127, !128, !129, !130, !131, !132, !133, !134, !135, !137, !138, !139, !140, !141, !142, !143, !144, !145, !147, !148, !149, !150, !151, !152, !153, !154, !155, !157, !158, !159, !160, !161, !162, !163, !164, !165, !167, !169, !171, !172, !173, !174, !175, !176, !177, !178, !179, !181, !182, !183, !184, !185, !186, !187, !188, !189, !191, !192, !193, !194, !195, !196, !197, !198, !199, !201, !202, !203, !204, !205, !206, !207, !208, !209, !211, !212, !213, !214, !215, !216, !217, !218, !219, !221, !222, !223, !224, !225, !226, !227, !228, !229, !231, !232, !233, !234, !235, !236, !237, !238, !239, !241, !242, !243, !244, !245, !246, !247, !248, !249, !251, !253, !254, !255, !256, !257, !258, !259, !260, !261, !263, !264, !265, !266, !267, !268, !269, !270, !271, !273, !275, !277, !279, !281, !283, !285, !287, !288, !289, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !315, !317, !319, !321, !322, !323, !325, !326, !328, !330, !332, !334, !336, !338, !340, !341, !343, !345, !346, !347, !349, !351, !353, !355, !356, !357, !358, !360, !361, !363, !365, !367, !369, !371, !373, !375, !376, !377, !379, !381, !383, !385, !387, !389, !391, !393, !394, !395, !396, !398, !400, !401, !402, !404, !406, !408, !409, !411, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !426, !427, !428, !429, !430, !431, !432, !433, !434, !436, !437, !438, !439, !440, !441, !443, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !456, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !493, !494, !495, !496, !497, !498}
!llvm.named.register.sp = !{!499}
!llvm.module.flags = !{!500, !501, !502, !503, !504, !505, !506, !507}
!llvm.ident = !{!508}

!0 = !{ptr @__tracepoint_signal_generate, !1, !"__tracepoint_signal_generate", i1 false, i1 false}
!1 = !{!"../include/trace/events/signal.h", i32 50, i32 1}
!2 = !{ptr @__tracepoint_ptr_signal_generate, !1, !"__tracepoint_ptr_signal_generate", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_signal_generate, !1, !"__SCK__tp_func_signal_generate", i1 false, i1 false}
!4 = !{ptr @__tracepoint_signal_deliver, !5, !"__tracepoint_signal_deliver", i1 false, i1 false}
!5 = !{!"../include/trace/events/signal.h", i32 96, i32 1}
!6 = !{ptr @__tracepoint_ptr_signal_deliver, !5, !"__tracepoint_ptr_signal_deliver", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_signal_deliver, !5, !"__SCK__tp_func_signal_deliver", i1 false, i1 false}
!8 = !{ptr @event_class_signal_generate, !1, !"event_class_signal_generate", i1 false, i1 false}
!9 = !{ptr @event_signal_generate, !1, !"event_signal_generate", i1 false, i1 false}
!10 = !{ptr @__event_signal_generate, !1, !"__event_signal_generate", i1 false, i1 false}
!11 = !{ptr @event_class_signal_deliver, !5, !"event_class_signal_deliver", i1 false, i1 false}
!12 = !{ptr @event_signal_deliver, !5, !"event_signal_deliver", i1 false, i1 false}
!13 = !{ptr @__event_signal_deliver, !5, !"__event_signal_deliver", i1 false, i1 false}
!14 = !{ptr @__bpf_trace_tp_map_signal_generate, !1, !"__bpf_trace_tp_map_signal_generate", i1 false, i1 false}
!15 = !{ptr @__bpf_trace_tp_map_signal_deliver, !5, !"__bpf_trace_tp_map_signal_deliver", i1 false, i1 false}
!16 = !{ptr @__ksymtab_recalc_sigpending, !17, !"__ksymtab_recalc_sigpending", i1 false, i1 false}
!17 = !{!"../kernel/signal.c", i32 188, i32 1}
!18 = !{ptr @__ksymtab_flush_signals, !19, !"__ksymtab_flush_signals", i1 false, i1 false}
!19 = !{!"../kernel/signal.c", i32 486, i32 1}
!20 = !{ptr @__ksymtab_dequeue_signal, !21, !"__ksymtab_dequeue_signal", i1 false, i1 false}
!21 = !{!"../kernel/signal.c", i32 708, i32 1}
!22 = !{ptr @__setup_setup_print_fatal_signals, !23, !"__setup_setup_print_fatal_signals", i1 false, i1 false}
!23 = !{!"../kernel/signal.c", i32 1282, i32 1}
!24 = distinct !{null, !25, !"__warned", i1 false, i1 false}
!25 = !{!"../kernel/signal.c", i32 1392, i32 13}
!26 = !{ptr @.str, !25, !"<string literal>", i1 false, i1 false}
!27 = !{ptr @.str.1, !25, !"<string literal>", i1 false, i1 false}
!28 = distinct !{null, !29, !"__warned", i1 false, i1 false}
!29 = !{!"../kernel/signal.c", i32 1423, i32 12}
!30 = distinct !{null, !31, !"__already_done", i1 false, i1 false}
!31 = !{!"../kernel/signal.c", i32 1427, i32 3}
!32 = distinct !{null, !33, !"__warned", i1 false, i1 false}
!33 = !{!"../kernel/signal.c", i32 1462, i32 2}
!34 = !{ptr @.str.2, !33, !"<string literal>", i1 false, i1 false}
!35 = !{ptr @__ksymtab_kill_pid_usb_asyncio, !36, !"__ksymtab_kill_pid_usb_asyncio", i1 false, i1 false}
!36 = !{!"../kernel/signal.c", i32 1579, i32 1}
!37 = !{ptr @__ksymtab_send_sig_info, !38, !"__ksymtab_send_sig_info", i1 false, i1 false}
!38 = !{!"../kernel/signal.c", i32 1639, i32 1}
!39 = !{ptr @__ksymtab_send_sig, !40, !"__ksymtab_send_sig", i1 false, i1 false}
!40 = !{!"../kernel/signal.c", i32 1649, i32 1}
!41 = !{ptr @__ksymtab_force_sig, !42, !"__ksymtab_force_sig", i1 false, i1 false}
!42 = !{!"../kernel/signal.c", i32 1663, i32 1}
!43 = !{ptr @__ksymtab_send_sig_mceerr, !44, !"__ksymtab_send_sig_mceerr", i1 false, i1 false}
!44 = !{!"../kernel/signal.c", i32 1777, i32 1}
!45 = !{ptr @__ksymtab_kill_pgrp, !46, !"__ksymtab_kill_pgrp", i1 false, i1 false}
!46 = !{!"../kernel/signal.c", i32 1904, i32 1}
!47 = !{ptr @__ksymtab_kill_pid, !48, !"__ksymtab_kill_pid", i1 false, i1 false}
!48 = !{!"../kernel/signal.c", i32 1910, i32 1}
!49 = distinct !{null, !50, !"__warned", i1 false, i1 false}
!50 = !{!"../kernel/signal.c", i32 2059, i32 33}
!51 = distinct !{null, !52, !"__warned", i1 false, i1 false}
!52 = !{!"../kernel/signal.c", i32 2060, i32 12}
!53 = !{ptr @.str.4, !54, !"<string literal>", i1 false, i1 false}
!54 = !{!"../kernel/signal.c", i32 3002, i32 1}
!55 = !{ptr @event_enter__restart_syscall, !54, !"event_enter__restart_syscall", i1 false, i1 false}
!56 = !{ptr @__event_enter__restart_syscall, !54, !"__event_enter__restart_syscall", i1 false, i1 false}
!57 = !{ptr @.str.5, !54, !"<string literal>", i1 false, i1 false}
!58 = !{ptr @event_exit__restart_syscall, !54, !"event_exit__restart_syscall", i1 false, i1 false}
!59 = !{ptr @__event_exit__restart_syscall, !54, !"__event_exit__restart_syscall", i1 false, i1 false}
!60 = !{ptr @.str.6, !54, !"<string literal>", i1 false, i1 false}
!61 = !{ptr @__syscall_meta__restart_syscall, !54, !"__syscall_meta__restart_syscall", i1 false, i1 false}
!62 = !{ptr @__p_syscall_meta__restart_syscall, !54, !"__p_syscall_meta__restart_syscall", i1 false, i1 false}
!63 = !{ptr @__ksymtab_sigprocmask, !64, !"__ksymtab_sigprocmask", i1 false, i1 false}
!64 = !{!"../kernel/signal.c", i32 3088, i32 1}
!65 = !{ptr @.str.7, !66, !"<string literal>", i1 false, i1 false}
!66 = !{!"../kernel/signal.c", i32 3145, i32 1}
!67 = !{ptr @event_enter__rt_sigprocmask, !66, !"event_enter__rt_sigprocmask", i1 false, i1 false}
!68 = !{ptr @__event_enter__rt_sigprocmask, !66, !"__event_enter__rt_sigprocmask", i1 false, i1 false}
!69 = !{ptr @.str.8, !66, !"<string literal>", i1 false, i1 false}
!70 = !{ptr @event_exit__rt_sigprocmask, !66, !"event_exit__rt_sigprocmask", i1 false, i1 false}
!71 = !{ptr @__event_exit__rt_sigprocmask, !66, !"__event_exit__rt_sigprocmask", i1 false, i1 false}
!72 = !{ptr @.str.9, !66, !"<string literal>", i1 false, i1 false}
!73 = !{ptr @__syscall_meta__rt_sigprocmask, !66, !"__syscall_meta__rt_sigprocmask", i1 false, i1 false}
!74 = !{ptr @__p_syscall_meta__rt_sigprocmask, !66, !"__p_syscall_meta__rt_sigprocmask", i1 false, i1 false}
!75 = !{ptr @.str.10, !76, !"<string literal>", i1 false, i1 false}
!76 = !{!"../kernel/signal.c", i32 3217, i32 1}
!77 = !{ptr @event_enter__rt_sigpending, !76, !"event_enter__rt_sigpending", i1 false, i1 false}
!78 = !{ptr @__event_enter__rt_sigpending, !76, !"__event_enter__rt_sigpending", i1 false, i1 false}
!79 = !{ptr @.str.11, !76, !"<string literal>", i1 false, i1 false}
!80 = !{ptr @event_exit__rt_sigpending, !76, !"event_exit__rt_sigpending", i1 false, i1 false}
!81 = !{ptr @__event_exit__rt_sigpending, !76, !"__event_exit__rt_sigpending", i1 false, i1 false}
!82 = !{ptr @.str.12, !76, !"<string literal>", i1 false, i1 false}
!83 = !{ptr @__syscall_meta__rt_sigpending, !76, !"__syscall_meta__rt_sigpending", i1 false, i1 false}
!84 = !{ptr @__p_syscall_meta__rt_sigpending, !76, !"__p_syscall_meta__rt_sigpending", i1 false, i1 false}
!85 = !{ptr @.str.13, !86, !"<string literal>", i1 false, i1 false}
!86 = !{!"../kernel/signal.c", i32 3629, i32 1}
!87 = !{ptr @event_enter__rt_sigtimedwait, !86, !"event_enter__rt_sigtimedwait", i1 false, i1 false}
!88 = !{ptr @__event_enter__rt_sigtimedwait, !86, !"__event_enter__rt_sigtimedwait", i1 false, i1 false}
!89 = !{ptr @.str.14, !86, !"<string literal>", i1 false, i1 false}
!90 = !{ptr @event_exit__rt_sigtimedwait, !86, !"event_exit__rt_sigtimedwait", i1 false, i1 false}
!91 = !{ptr @__event_exit__rt_sigtimedwait, !86, !"__event_exit__rt_sigtimedwait", i1 false, i1 false}
!92 = !{ptr @.str.15, !86, !"<string literal>", i1 false, i1 false}
!93 = !{ptr @__syscall_meta__rt_sigtimedwait, !86, !"__syscall_meta__rt_sigtimedwait", i1 false, i1 false}
!94 = !{ptr @__p_syscall_meta__rt_sigtimedwait, !86, !"__p_syscall_meta__rt_sigtimedwait", i1 false, i1 false}
!95 = !{ptr @.str.16, !96, !"<string literal>", i1 false, i1 false}
!96 = !{!"../kernel/signal.c", i32 3662, i32 1}
!97 = !{ptr @event_enter__rt_sigtimedwait_time32, !96, !"event_enter__rt_sigtimedwait_time32", i1 false, i1 false}
!98 = !{ptr @__event_enter__rt_sigtimedwait_time32, !96, !"__event_enter__rt_sigtimedwait_time32", i1 false, i1 false}
!99 = !{ptr @.str.17, !96, !"<string literal>", i1 false, i1 false}
!100 = !{ptr @event_exit__rt_sigtimedwait_time32, !96, !"event_exit__rt_sigtimedwait_time32", i1 false, i1 false}
!101 = !{ptr @__event_exit__rt_sigtimedwait_time32, !96, !"__event_exit__rt_sigtimedwait_time32", i1 false, i1 false}
!102 = !{ptr @.str.18, !96, !"<string literal>", i1 false, i1 false}
!103 = !{ptr @__syscall_meta__rt_sigtimedwait_time32, !96, !"__syscall_meta__rt_sigtimedwait_time32", i1 false, i1 false}
!104 = !{ptr @__p_syscall_meta__rt_sigtimedwait_time32, !96, !"__p_syscall_meta__rt_sigtimedwait_time32", i1 false, i1 false}
!105 = !{ptr @.str.19, !106, !"<string literal>", i1 false, i1 false}
!106 = !{!"../kernel/signal.c", i32 3773, i32 1}
!107 = !{ptr @event_enter__kill, !106, !"event_enter__kill", i1 false, i1 false}
!108 = !{ptr @__event_enter__kill, !106, !"__event_enter__kill", i1 false, i1 false}
!109 = !{ptr @.str.20, !106, !"<string literal>", i1 false, i1 false}
!110 = !{ptr @event_exit__kill, !106, !"event_exit__kill", i1 false, i1 false}
!111 = !{ptr @__event_exit__kill, !106, !"__event_exit__kill", i1 false, i1 false}
!112 = !{ptr @.str.21, !106, !"<string literal>", i1 false, i1 false}
!113 = !{ptr @__syscall_meta__kill, !106, !"__syscall_meta__kill", i1 false, i1 false}
!114 = !{ptr @__p_syscall_meta__kill, !106, !"__p_syscall_meta__kill", i1 false, i1 false}
!115 = !{ptr @.str.22, !116, !"<string literal>", i1 false, i1 false}
!116 = !{!"../kernel/signal.c", i32 3848, i32 1}
!117 = !{ptr @event_enter__pidfd_send_signal, !116, !"event_enter__pidfd_send_signal", i1 false, i1 false}
!118 = !{ptr @__event_enter__pidfd_send_signal, !116, !"__event_enter__pidfd_send_signal", i1 false, i1 false}
!119 = !{ptr @.str.23, !116, !"<string literal>", i1 false, i1 false}
!120 = !{ptr @event_exit__pidfd_send_signal, !116, !"event_exit__pidfd_send_signal", i1 false, i1 false}
!121 = !{ptr @__event_exit__pidfd_send_signal, !116, !"__event_exit__pidfd_send_signal", i1 false, i1 false}
!122 = !{ptr @.str.24, !116, !"<string literal>", i1 false, i1 false}
!123 = !{ptr @__syscall_meta__pidfd_send_signal, !116, !"__syscall_meta__pidfd_send_signal", i1 false, i1 false}
!124 = !{ptr @__p_syscall_meta__pidfd_send_signal, !116, !"__p_syscall_meta__pidfd_send_signal", i1 false, i1 false}
!125 = !{ptr @.str.25, !126, !"<string literal>", i1 false, i1 false}
!126 = !{!"../kernel/signal.c", i32 3954, i32 1}
!127 = !{ptr @event_enter__tgkill, !126, !"event_enter__tgkill", i1 false, i1 false}
!128 = !{ptr @__event_enter__tgkill, !126, !"__event_enter__tgkill", i1 false, i1 false}
!129 = !{ptr @.str.26, !126, !"<string literal>", i1 false, i1 false}
!130 = !{ptr @event_exit__tgkill, !126, !"event_exit__tgkill", i1 false, i1 false}
!131 = !{ptr @__event_exit__tgkill, !126, !"__event_exit__tgkill", i1 false, i1 false}
!132 = !{ptr @.str.27, !126, !"<string literal>", i1 false, i1 false}
!133 = !{ptr @__syscall_meta__tgkill, !126, !"__syscall_meta__tgkill", i1 false, i1 false}
!134 = !{ptr @__p_syscall_meta__tgkill, !126, !"__p_syscall_meta__tgkill", i1 false, i1 false}
!135 = !{ptr @.str.28, !136, !"<string literal>", i1 false, i1 false}
!136 = !{!"../kernel/signal.c", i32 3970, i32 1}
!137 = !{ptr @event_enter__tkill, !136, !"event_enter__tkill", i1 false, i1 false}
!138 = !{ptr @__event_enter__tkill, !136, !"__event_enter__tkill", i1 false, i1 false}
!139 = !{ptr @.str.29, !136, !"<string literal>", i1 false, i1 false}
!140 = !{ptr @event_exit__tkill, !136, !"event_exit__tkill", i1 false, i1 false}
!141 = !{ptr @__event_exit__tkill, !136, !"__event_exit__tkill", i1 false, i1 false}
!142 = !{ptr @.str.30, !136, !"<string literal>", i1 false, i1 false}
!143 = !{ptr @__syscall_meta__tkill, !136, !"__syscall_meta__tkill", i1 false, i1 false}
!144 = !{ptr @__p_syscall_meta__tkill, !136, !"__p_syscall_meta__tkill", i1 false, i1 false}
!145 = !{ptr @.str.31, !146, !"<string literal>", i1 false, i1 false}
!146 = !{!"../kernel/signal.c", i32 3998, i32 1}
!147 = !{ptr @event_enter__rt_sigqueueinfo, !146, !"event_enter__rt_sigqueueinfo", i1 false, i1 false}
!148 = !{ptr @__event_enter__rt_sigqueueinfo, !146, !"__event_enter__rt_sigqueueinfo", i1 false, i1 false}
!149 = !{ptr @.str.32, !146, !"<string literal>", i1 false, i1 false}
!150 = !{ptr @event_exit__rt_sigqueueinfo, !146, !"event_exit__rt_sigqueueinfo", i1 false, i1 false}
!151 = !{ptr @__event_exit__rt_sigqueueinfo, !146, !"__event_exit__rt_sigqueueinfo", i1 false, i1 false}
!152 = !{ptr @.str.33, !146, !"<string literal>", i1 false, i1 false}
!153 = !{ptr @__syscall_meta__rt_sigqueueinfo, !146, !"__syscall_meta__rt_sigqueueinfo", i1 false, i1 false}
!154 = !{ptr @__p_syscall_meta__rt_sigqueueinfo, !146, !"__p_syscall_meta__rt_sigqueueinfo", i1 false, i1 false}
!155 = !{ptr @.str.34, !156, !"<string literal>", i1 false, i1 false}
!156 = !{!"../kernel/signal.c", i32 4038, i32 1}
!157 = !{ptr @event_enter__rt_tgsigqueueinfo, !156, !"event_enter__rt_tgsigqueueinfo", i1 false, i1 false}
!158 = !{ptr @__event_enter__rt_tgsigqueueinfo, !156, !"__event_enter__rt_tgsigqueueinfo", i1 false, i1 false}
!159 = !{ptr @.str.35, !156, !"<string literal>", i1 false, i1 false}
!160 = !{ptr @event_exit__rt_tgsigqueueinfo, !156, !"event_exit__rt_tgsigqueueinfo", i1 false, i1 false}
!161 = !{ptr @__event_exit__rt_tgsigqueueinfo, !156, !"__event_exit__rt_tgsigqueueinfo", i1 false, i1 false}
!162 = !{ptr @.str.36, !156, !"<string literal>", i1 false, i1 false}
!163 = !{ptr @__syscall_meta__rt_tgsigqueueinfo, !156, !"__syscall_meta__rt_tgsigqueueinfo", i1 false, i1 false}
!164 = !{ptr @__p_syscall_meta__rt_tgsigqueueinfo, !156, !"__p_syscall_meta__rt_tgsigqueueinfo", i1 false, i1 false}
!165 = !{ptr @__ksymtab_kernel_sigaction, !166, !"__ksymtab_kernel_sigaction", i1 false, i1 false}
!166 = !{!"../kernel/signal.c", i32 4082, i32 1}
!167 = distinct !{null, !168, !"__warned", i1 false, i1 false}
!168 = !{!"../kernel/signal.c", i32 4145, i32 4}
!169 = !{ptr @.str.37, !170, !"<string literal>", i1 false, i1 false}
!170 = !{!"../kernel/signal.c", i32 4229, i32 1}
!171 = !{ptr @event_enter__sigaltstack, !170, !"event_enter__sigaltstack", i1 false, i1 false}
!172 = !{ptr @__event_enter__sigaltstack, !170, !"__event_enter__sigaltstack", i1 false, i1 false}
!173 = !{ptr @.str.38, !170, !"<string literal>", i1 false, i1 false}
!174 = !{ptr @event_exit__sigaltstack, !170, !"event_exit__sigaltstack", i1 false, i1 false}
!175 = !{ptr @__event_exit__sigaltstack, !170, !"__event_exit__sigaltstack", i1 false, i1 false}
!176 = !{ptr @.str.39, !170, !"<string literal>", i1 false, i1 false}
!177 = !{ptr @__syscall_meta__sigaltstack, !170, !"__syscall_meta__sigaltstack", i1 false, i1 false}
!178 = !{ptr @__p_syscall_meta__sigaltstack, !170, !"__p_syscall_meta__sigaltstack", i1 false, i1 false}
!179 = !{ptr @.str.40, !180, !"<string literal>", i1 false, i1 false}
!180 = !{!"../kernel/signal.c", i32 4325, i32 1}
!181 = !{ptr @event_enter__sigpending, !180, !"event_enter__sigpending", i1 false, i1 false}
!182 = !{ptr @__event_enter__sigpending, !180, !"__event_enter__sigpending", i1 false, i1 false}
!183 = !{ptr @.str.41, !180, !"<string literal>", i1 false, i1 false}
!184 = !{ptr @event_exit__sigpending, !180, !"event_exit__sigpending", i1 false, i1 false}
!185 = !{ptr @__event_exit__sigpending, !180, !"__event_exit__sigpending", i1 false, i1 false}
!186 = !{ptr @.str.42, !180, !"<string literal>", i1 false, i1 false}
!187 = !{ptr @__syscall_meta__sigpending, !180, !"__syscall_meta__sigpending", i1 false, i1 false}
!188 = !{ptr @__p_syscall_meta__sigpending, !180, !"__p_syscall_meta__sigpending", i1 false, i1 false}
!189 = !{ptr @.str.43, !190, !"<string literal>", i1 false, i1 false}
!190 = !{!"../kernel/signal.c", i32 4364, i32 1}
!191 = !{ptr @event_enter__sigprocmask, !190, !"event_enter__sigprocmask", i1 false, i1 false}
!192 = !{ptr @__event_enter__sigprocmask, !190, !"__event_enter__sigprocmask", i1 false, i1 false}
!193 = !{ptr @.str.44, !190, !"<string literal>", i1 false, i1 false}
!194 = !{ptr @event_exit__sigprocmask, !190, !"event_exit__sigprocmask", i1 false, i1 false}
!195 = !{ptr @__event_exit__sigprocmask, !190, !"__event_exit__sigprocmask", i1 false, i1 false}
!196 = !{ptr @.str.45, !190, !"<string literal>", i1 false, i1 false}
!197 = !{ptr @__syscall_meta__sigprocmask, !190, !"__syscall_meta__sigprocmask", i1 false, i1 false}
!198 = !{ptr @__p_syscall_meta__sigprocmask, !190, !"__p_syscall_meta__sigprocmask", i1 false, i1 false}
!199 = !{ptr @.str.46, !200, !"<string literal>", i1 false, i1 false}
!200 = !{!"../kernel/signal.c", i32 4412, i32 1}
!201 = !{ptr @event_enter__rt_sigaction, !200, !"event_enter__rt_sigaction", i1 false, i1 false}
!202 = !{ptr @__event_enter__rt_sigaction, !200, !"__event_enter__rt_sigaction", i1 false, i1 false}
!203 = !{ptr @.str.47, !200, !"<string literal>", i1 false, i1 false}
!204 = !{ptr @event_exit__rt_sigaction, !200, !"event_exit__rt_sigaction", i1 false, i1 false}
!205 = !{ptr @__event_exit__rt_sigaction, !200, !"__event_exit__rt_sigaction", i1 false, i1 false}
!206 = !{ptr @.str.48, !200, !"<string literal>", i1 false, i1 false}
!207 = !{ptr @__syscall_meta__rt_sigaction, !200, !"__syscall_meta__rt_sigaction", i1 false, i1 false}
!208 = !{ptr @__p_syscall_meta__rt_sigaction, !200, !"__p_syscall_meta__rt_sigaction", i1 false, i1 false}
!209 = !{ptr @.str.49, !210, !"<string literal>", i1 false, i1 false}
!210 = !{!"../kernel/signal.c", i32 4484, i32 1}
!211 = !{ptr @event_enter__sigaction, !210, !"event_enter__sigaction", i1 false, i1 false}
!212 = !{ptr @__event_enter__sigaction, !210, !"__event_enter__sigaction", i1 false, i1 false}
!213 = !{ptr @.str.50, !210, !"<string literal>", i1 false, i1 false}
!214 = !{ptr @event_exit__sigaction, !210, !"event_exit__sigaction", i1 false, i1 false}
!215 = !{ptr @__event_exit__sigaction, !210, !"__event_exit__sigaction", i1 false, i1 false}
!216 = !{ptr @.str.51, !210, !"<string literal>", i1 false, i1 false}
!217 = !{ptr @__syscall_meta__sigaction, !210, !"__syscall_meta__sigaction", i1 false, i1 false}
!218 = !{ptr @__p_syscall_meta__sigaction, !210, !"__p_syscall_meta__sigaction", i1 false, i1 false}
!219 = !{ptr @.str.52, !220, !"<string literal>", i1 false, i1 false}
!220 = !{!"../kernel/signal.c", i32 4566, i32 1}
!221 = !{ptr @event_enter__sgetmask, !220, !"event_enter__sgetmask", i1 false, i1 false}
!222 = !{ptr @__event_enter__sgetmask, !220, !"__event_enter__sgetmask", i1 false, i1 false}
!223 = !{ptr @.str.53, !220, !"<string literal>", i1 false, i1 false}
!224 = !{ptr @event_exit__sgetmask, !220, !"event_exit__sgetmask", i1 false, i1 false}
!225 = !{ptr @__event_exit__sgetmask, !220, !"__event_exit__sgetmask", i1 false, i1 false}
!226 = !{ptr @.str.54, !220, !"<string literal>", i1 false, i1 false}
!227 = !{ptr @__syscall_meta__sgetmask, !220, !"__syscall_meta__sgetmask", i1 false, i1 false}
!228 = !{ptr @__p_syscall_meta__sgetmask, !220, !"__p_syscall_meta__sgetmask", i1 false, i1 false}
!229 = !{ptr @.str.55, !230, !"<string literal>", i1 false, i1 false}
!230 = !{!"../kernel/signal.c", i32 4572, i32 1}
!231 = !{ptr @event_enter__ssetmask, !230, !"event_enter__ssetmask", i1 false, i1 false}
!232 = !{ptr @__event_enter__ssetmask, !230, !"__event_enter__ssetmask", i1 false, i1 false}
!233 = !{ptr @.str.56, !230, !"<string literal>", i1 false, i1 false}
!234 = !{ptr @event_exit__ssetmask, !230, !"event_exit__ssetmask", i1 false, i1 false}
!235 = !{ptr @__event_exit__ssetmask, !230, !"__event_exit__ssetmask", i1 false, i1 false}
!236 = !{ptr @.str.57, !230, !"<string literal>", i1 false, i1 false}
!237 = !{ptr @__syscall_meta__ssetmask, !230, !"__syscall_meta__ssetmask", i1 false, i1 false}
!238 = !{ptr @__p_syscall_meta__ssetmask, !230, !"__p_syscall_meta__ssetmask", i1 false, i1 false}
!239 = !{ptr @.str.58, !240, !"<string literal>", i1 false, i1 false}
!240 = !{!"../kernel/signal.c", i32 4605, i32 1}
!241 = !{ptr @event_enter__pause, !240, !"event_enter__pause", i1 false, i1 false}
!242 = !{ptr @__event_enter__pause, !240, !"__event_enter__pause", i1 false, i1 false}
!243 = !{ptr @.str.59, !240, !"<string literal>", i1 false, i1 false}
!244 = !{ptr @event_exit__pause, !240, !"event_exit__pause", i1 false, i1 false}
!245 = !{ptr @__event_exit__pause, !240, !"__event_exit__pause", i1 false, i1 false}
!246 = !{ptr @.str.60, !240, !"<string literal>", i1 false, i1 false}
!247 = !{ptr @__syscall_meta__pause, !240, !"__syscall_meta__pause", i1 false, i1 false}
!248 = !{ptr @__p_syscall_meta__pause, !240, !"__p_syscall_meta__pause", i1 false, i1 false}
!249 = distinct !{null, !250, !"__already_done", i1 false, i1 false}
!250 = !{!"../kernel/signal.c", i32 4608, i32 3}
!251 = !{ptr @.str.61, !252, !"<string literal>", i1 false, i1 false}
!252 = !{!"../kernel/signal.c", i32 4635, i32 1}
!253 = !{ptr @event_enter__rt_sigsuspend, !252, !"event_enter__rt_sigsuspend", i1 false, i1 false}
!254 = !{ptr @__event_enter__rt_sigsuspend, !252, !"__event_enter__rt_sigsuspend", i1 false, i1 false}
!255 = !{ptr @.str.62, !252, !"<string literal>", i1 false, i1 false}
!256 = !{ptr @event_exit__rt_sigsuspend, !252, !"event_exit__rt_sigsuspend", i1 false, i1 false}
!257 = !{ptr @__event_exit__rt_sigsuspend, !252, !"__event_exit__rt_sigsuspend", i1 false, i1 false}
!258 = !{ptr @.str.63, !252, !"<string literal>", i1 false, i1 false}
!259 = !{ptr @__syscall_meta__rt_sigsuspend, !252, !"__syscall_meta__rt_sigsuspend", i1 false, i1 false}
!260 = !{ptr @__p_syscall_meta__rt_sigsuspend, !252, !"__p_syscall_meta__rt_sigsuspend", i1 false, i1 false}
!261 = !{ptr @.str.64, !262, !"<string literal>", i1 false, i1 false}
!262 = !{!"../kernel/signal.c", i32 4672, i32 1}
!263 = !{ptr @event_enter__sigsuspend, !262, !"event_enter__sigsuspend", i1 false, i1 false}
!264 = !{ptr @__event_enter__sigsuspend, !262, !"__event_enter__sigsuspend", i1 false, i1 false}
!265 = !{ptr @.str.65, !262, !"<string literal>", i1 false, i1 false}
!266 = !{ptr @event_exit__sigsuspend, !262, !"event_exit__sigsuspend", i1 false, i1 false}
!267 = !{ptr @__event_exit__sigsuspend, !262, !"__event_exit__sigsuspend", i1 false, i1 false}
!268 = !{ptr @.str.66, !262, !"<string literal>", i1 false, i1 false}
!269 = !{ptr @__syscall_meta__sigsuspend, !262, !"__syscall_meta__sigsuspend", i1 false, i1 false}
!270 = !{ptr @__p_syscall_meta__sigsuspend, !262, !"__p_syscall_meta__sigsuspend", i1 false, i1 false}
!271 = !{ptr @.str.67, !272, !"<string literal>", i1 false, i1 false}
!272 = !{!"../kernel/signal.c", i32 4761, i32 20}
!273 = !{ptr @kdb_send_sig.kdb_prev_t, !274, !"kdb_prev_t", i1 false, i1 false}
!274 = !{!"../kernel/signal.c", i32 4774, i32 29}
!275 = !{ptr @.str.68, !276, !"<string literal>", i1 false, i1 false}
!276 = !{!"../kernel/signal.c", i32 4777, i32 14}
!277 = !{ptr @.str.69, !278, !"<string literal>", i1 false, i1 false}
!278 = !{!"../kernel/signal.c", i32 4786, i32 14}
!279 = !{ptr @.str.70, !280, !"<string literal>", i1 false, i1 false}
!280 = !{!"../kernel/signal.c", i32 4797, i32 14}
!281 = !{ptr @.str.71, !282, !"<string literal>", i1 false, i1 false}
!282 = !{!"../kernel/signal.c", i32 4800, i32 14}
!283 = !{ptr @sigqueue_cachep, !284, !"sigqueue_cachep", i1 false, i1 false}
!284 = !{!"../kernel/signal.c", i32 63, i32 27}
!285 = !{ptr @print_fatal_signals, !286, !"print_fatal_signals", i1 false, i1 false}
!286 = !{!"../kernel/signal.c", i32 65, i32 5}
!287 = !{ptr @__tpstrtab_signal_generate, !1, !"__tpstrtab_signal_generate", i1 false, i1 false}
!288 = !{ptr @__tpstrtab_signal_deliver, !5, !"__tpstrtab_signal_deliver", i1 false, i1 false}
!289 = !{ptr @str__signal__trace_system_name, !290, !"str__signal__trace_system_name", i1 false, i1 false}
!290 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!291 = !{ptr @.str.72, !1, !"<string literal>", i1 false, i1 false}
!292 = !{ptr @.str.73, !1, !"<string literal>", i1 false, i1 false}
!293 = !{ptr @.str.74, !1, !"<string literal>", i1 false, i1 false}
!294 = !{ptr @.str.75, !1, !"<string literal>", i1 false, i1 false}
!295 = !{ptr @.str.76, !1, !"<string literal>", i1 false, i1 false}
!296 = !{ptr @.str.77, !1, !"<string literal>", i1 false, i1 false}
!297 = !{ptr @.str.78, !1, !"<string literal>", i1 false, i1 false}
!298 = !{ptr @.str.79, !1, !"<string literal>", i1 false, i1 false}
!299 = !{ptr @.str.80, !1, !"<string literal>", i1 false, i1 false}
!300 = !{ptr @.str.81, !1, !"<string literal>", i1 false, i1 false}
!301 = !{ptr @trace_event_fields_signal_generate, !1, !"trace_event_fields_signal_generate", i1 false, i1 false}
!302 = !{ptr @trace_event_type_funcs_signal_generate, !1, !"trace_event_type_funcs_signal_generate", i1 false, i1 false}
!303 = !{ptr @.str.82, !1, !"<string literal>", i1 false, i1 false}
!304 = !{ptr @print_fmt_signal_generate, !1, !"print_fmt_signal_generate", i1 false, i1 false}
!305 = !{ptr @.str.83, !5, !"<string literal>", i1 false, i1 false}
!306 = !{ptr @.str.84, !5, !"<string literal>", i1 false, i1 false}
!307 = !{ptr @.str.85, !5, !"<string literal>", i1 false, i1 false}
!308 = !{ptr @trace_event_fields_signal_deliver, !5, !"trace_event_fields_signal_deliver", i1 false, i1 false}
!309 = !{ptr @trace_event_type_funcs_signal_deliver, !5, !"trace_event_type_funcs_signal_deliver", i1 false, i1 false}
!310 = !{ptr @.str.86, !5, !"<string literal>", i1 false, i1 false}
!311 = !{ptr @print_fmt_signal_deliver, !5, !"print_fmt_signal_deliver", i1 false, i1 false}
!312 = !{ptr @__setup_str_setup_print_fatal_signals, !23, !"__setup_str_setup_print_fatal_signals", i1 false, i1 false}
!313 = distinct !{null, !314, !"__warned", i1 false, i1 false}
!314 = !{!"../kernel/signal.c", i32 1232, i32 15}
!315 = distinct !{null, !316, !"__warned", i1 false, i1 false}
!316 = !{!"../kernel/signal.c", i32 1233, i32 7}
!317 = distinct !{null, !318, !"__warned", i1 false, i1 false}
!318 = !{!"../kernel/signal.c", i32 1234, i32 27}
!319 = distinct !{null, !320, !"__warned", i1 false, i1 false}
!320 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!321 = !{ptr @.str.89, !320, !"<string literal>", i1 false, i1 false}
!322 = !{ptr @.str.90, !320, !"<string literal>", i1 false, i1 false}
!323 = distinct !{null, !324, !"__warned", i1 false, i1 false}
!324 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!325 = !{ptr @.str.91, !324, !"<string literal>", i1 false, i1 false}
!326 = distinct !{null, !327, !"__warned", i1 false, i1 false}
!327 = !{!"../kernel/signal.c", i32 817, i32 28}
!328 = distinct !{null, !329, !"__warned", i1 false, i1 false}
!329 = !{!"../kernel/signal.c", i32 818, i32 29}
!330 = distinct !{null, !331, !"__warned", i1 false, i1 false}
!331 = !{!"../kernel/signal.c", i32 1504, i32 29}
!332 = distinct !{null, !333, !"__warned", i1 false, i1 false}
!333 = !{!"../kernel/signal.c", i32 1133, i32 22}
!334 = distinct !{null, !335, !"__warned", i1 false, i1 false}
!335 = !{!"../kernel/signal.c", i32 1134, i32 8}
!336 = distinct !{null, !337, !"__warned", i1 false, i1 false}
!337 = !{!"../kernel/signal.c", i32 428, i32 12}
!338 = !{ptr @.str.94, !339, !"<string literal>", i1 false, i1 false}
!339 = !{!"../kernel/signal.c", i32 255, i32 9}
!340 = !{ptr @print_dropped_signal.ratelimit_state, !339, !"ratelimit_state", i1 false, i1 false}
!341 = !{ptr @__func__.print_dropped_signal, !342, !"<string literal>", i1 false, i1 false}
!342 = !{!"../kernel/signal.c", i32 260, i32 7}
!343 = !{ptr @.str.95, !344, !"<string literal>", i1 false, i1 false}
!344 = !{!"../kernel/signal.c", i32 263, i32 2}
!345 = !{ptr @print_dropped_signal._entry, !344, !"_entry", i1 false, i1 false}
!346 = !{ptr @print_dropped_signal._entry_ptr, !344, !"_entry_ptr", i1 false, i1 false}
!347 = distinct !{null, !348, !"__warned", i1 false, i1 false}
!348 = !{!"../kernel/signal.c", i32 921, i32 3}
!349 = distinct !{null, !350, !"__warned", i1 false, i1 false}
!350 = !{!"../kernel/signal.c", i32 930, i32 3}
!351 = distinct !{null, !352, !"__already_done", i1 false, i1 false}
!352 = !{!"../kernel/signal.c", i32 886, i32 2}
!353 = !{ptr @.str.97, !354, !"<string literal>", i1 false, i1 false}
!354 = !{!"../include/linux/sched/signal.h", i32 270, i32 2}
!355 = distinct !{null, !1, !"__already_done", i1 false, i1 false}
!356 = !{ptr @.str.98, !1, !"<string literal>", i1 false, i1 false}
!357 = distinct !{null, !1, !"__warned", i1 false, i1 false}
!358 = distinct !{null, !359, !"__already_done", i1 false, i1 false}
!359 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!360 = !{ptr @.str.99, !359, !"<string literal>", i1 false, i1 false}
!361 = distinct !{null, !362, !"__warned", i1 false, i1 false}
!362 = !{!"../kernel/signal.c", i32 2339, i32 33}
!363 = distinct !{null, !364, !"__warned", i1 false, i1 false}
!364 = !{!"../kernel/signal.c", i32 2339, i32 52}
!365 = distinct !{null, !366, !"__already_done", i1 false, i1 false}
!366 = !{!"../kernel/signal.c", i32 2219, i32 2}
!367 = distinct !{null, !368, !"__already_done", i1 false, i1 false}
!368 = !{!"../kernel/signal.c", i32 2306, i32 3}
!369 = !{ptr @.str.102, !370, !"<string literal>", i1 false, i1 false}
!370 = !{!"../include/linux/freezer.h", i32 57, i32 2}
!371 = distinct !{null, !372, !"__warned", i1 false, i1 false}
!372 = !{!"../kernel/signal.c", i32 2150, i32 33}
!373 = distinct !{null, !374, !"__warned", i1 false, i1 false}
!374 = !{!"../kernel/signal.c", i32 2150, i32 65}
!375 = distinct !{null, !5, !"__already_done", i1 false, i1 false}
!376 = distinct !{null, !5, !"__warned", i1 false, i1 false}
!377 = distinct !{null, !378, !"__already_done", i1 false, i1 false}
!378 = !{!"../kernel/signal.c", i32 2388, i32 3}
!379 = distinct !{null, !380, !"__already_done", i1 false, i1 false}
!380 = !{!"../kernel/signal.c", i32 2450, i32 3}
!381 = distinct !{null, !382, !"__already_done", i1 false, i1 false}
!382 = !{!"../kernel/signal.c", i32 2506, i32 3}
!383 = distinct !{null, !384, !"__already_done", i1 false, i1 false}
!384 = !{!"../kernel/signal.c", i32 2510, i32 3}
!385 = distinct !{null, !386, !"__already_done", i1 false, i1 false}
!386 = !{!"../kernel/signal.c", i32 2546, i32 2}
!387 = distinct !{null, !388, !"__warned", i1 false, i1 false}
!388 = !{!"../kernel/signal.c", i32 2587, i32 35}
!389 = distinct !{null, !390, !"__warned", i1 false, i1 false}
!390 = !{!"../kernel/signal.c", i32 2588, i32 7}
!391 = !{ptr @.str.107, !392, !"<string literal>", i1 false, i1 false}
!392 = !{!"../kernel/signal.c", i32 1254, i32 2}
!393 = !{ptr @.str.108, !392, !"<string literal>", i1 false, i1 false}
!394 = !{ptr @print_fatal_signal._entry, !392, !"_entry", i1 false, i1 false}
!395 = !{ptr @print_fatal_signal._entry_ptr, !392, !"_entry_ptr", i1 false, i1 false}
!396 = !{ptr @.str.109, !397, !"<string literal>", i1 false, i1 false}
!397 = !{!"../include/linux/percpu-rwsem.h", i32 49, i32 2}
!398 = distinct !{null, !399, !"__warned", i1 false, i1 false}
!399 = !{!"../include/linux/rcu_sync.h", i32 34, i32 2}
!400 = !{ptr @.str.110, !399, !"<string literal>", i1 false, i1 false}
!401 = !{ptr @.str.111, !399, !"<string literal>", i1 false, i1 false}
!402 = distinct !{null, !403, !"__already_done", i1 false, i1 false}
!403 = !{!"../kernel/signal.c", i32 370, i32 2}
!404 = distinct !{null, !405, !"__already_done", i1 false, i1 false}
!405 = !{!"../kernel/signal.c", i32 377, i32 7}
!406 = distinct !{null, !407, !"__already_done", i1 false, i1 false}
!407 = !{!"../include/linux/thread_info.h", i32 230, i32 6}
!408 = distinct !{null, !407, !"<string literal>", i1 false, i1 false}
!409 = distinct !{null, !410, !"<string literal>", i1 false, i1 false}
!410 = !{!"../include/linux/thread_info.h", i32 214, i32 2}
!411 = !{ptr @.str.115, !412, !"<string literal>", i1 false, i1 false}
!412 = !{!"../include/linux/uaccess.h", i32 156, i32 2}
!413 = !{ptr @.str.116, !66, !"<string literal>", i1 false, i1 false}
!414 = !{ptr @.str.117, !66, !"<string literal>", i1 false, i1 false}
!415 = !{ptr @types__rt_sigprocmask, !66, !"types__rt_sigprocmask", i1 false, i1 false}
!416 = !{ptr @.str.118, !66, !"<string literal>", i1 false, i1 false}
!417 = !{ptr @.str.119, !66, !"<string literal>", i1 false, i1 false}
!418 = !{ptr @.str.120, !66, !"<string literal>", i1 false, i1 false}
!419 = !{ptr @.str.121, !66, !"<string literal>", i1 false, i1 false}
!420 = !{ptr @args__rt_sigprocmask, !66, !"args__rt_sigprocmask", i1 false, i1 false}
!421 = !{ptr @types__rt_sigpending, !76, !"types__rt_sigpending", i1 false, i1 false}
!422 = !{ptr @.str.122, !76, !"<string literal>", i1 false, i1 false}
!423 = !{ptr @args__rt_sigpending, !76, !"args__rt_sigpending", i1 false, i1 false}
!424 = !{ptr @sig_sicodes, !425, !"sig_sicodes", i1 false, i1 false}
!425 = !{!"../kernel/signal.c", i32 3249, i32 3}
!426 = !{ptr @.str.123, !86, !"<string literal>", i1 false, i1 false}
!427 = !{ptr @.str.124, !86, !"<string literal>", i1 false, i1 false}
!428 = !{ptr @.str.125, !86, !"<string literal>", i1 false, i1 false}
!429 = !{ptr @types__rt_sigtimedwait, !86, !"types__rt_sigtimedwait", i1 false, i1 false}
!430 = !{ptr @.str.126, !86, !"<string literal>", i1 false, i1 false}
!431 = !{ptr @.str.127, !86, !"<string literal>", i1 false, i1 false}
!432 = !{ptr @.str.128, !86, !"<string literal>", i1 false, i1 false}
!433 = !{ptr @args__rt_sigtimedwait, !86, !"args__rt_sigtimedwait", i1 false, i1 false}
!434 = distinct !{null, !435, !"__already_done", i1 false, i1 false}
!435 = !{!"../kernel/signal.c", i32 3606, i32 3}
!436 = !{ptr @.str.129, !96, !"<string literal>", i1 false, i1 false}
!437 = !{ptr @types__rt_sigtimedwait_time32, !96, !"types__rt_sigtimedwait_time32", i1 false, i1 false}
!438 = !{ptr @args__rt_sigtimedwait_time32, !96, !"args__rt_sigtimedwait_time32", i1 false, i1 false}
!439 = !{ptr @types__kill, !106, !"types__kill", i1 false, i1 false}
!440 = !{ptr @args__kill, !106, !"args__kill", i1 false, i1 false}
!441 = distinct !{null, !442, !"__warned", i1 false, i1 false}
!442 = !{!"../kernel/signal.c", i32 3765, i32 34}
!443 = distinct !{null, !444, !"__warned", i1 false, i1 false}
!444 = !{!"../kernel/signal.c", i32 3765, i32 53}
!445 = !{ptr @.str.131, !116, !"<string literal>", i1 false, i1 false}
!446 = !{ptr @types__pidfd_send_signal, !116, !"types__pidfd_send_signal", i1 false, i1 false}
!447 = !{ptr @.str.132, !116, !"<string literal>", i1 false, i1 false}
!448 = !{ptr @.str.133, !116, !"<string literal>", i1 false, i1 false}
!449 = !{ptr @.str.134, !116, !"<string literal>", i1 false, i1 false}
!450 = !{ptr @args__pidfd_send_signal, !116, !"args__pidfd_send_signal", i1 false, i1 false}
!451 = !{ptr @types__tgkill, !126, !"types__tgkill", i1 false, i1 false}
!452 = !{ptr @.str.135, !126, !"<string literal>", i1 false, i1 false}
!453 = !{ptr @args__tgkill, !126, !"args__tgkill", i1 false, i1 false}
!454 = distinct !{null, !455, !"__warned", i1 false, i1 false}
!455 = !{!"../kernel/signal.c", i32 3939, i32 33}
!456 = distinct !{null, !457, !"__warned", i1 false, i1 false}
!457 = !{!"../kernel/signal.c", i32 3939, i32 52}
!458 = !{ptr @types__tkill, !136, !"types__tkill", i1 false, i1 false}
!459 = !{ptr @args__tkill, !136, !"args__tkill", i1 false, i1 false}
!460 = !{ptr @types__rt_sigqueueinfo, !146, !"types__rt_sigqueueinfo", i1 false, i1 false}
!461 = !{ptr @args__rt_sigqueueinfo, !146, !"args__rt_sigqueueinfo", i1 false, i1 false}
!462 = !{ptr @types__rt_tgsigqueueinfo, !156, !"types__rt_tgsigqueueinfo", i1 false, i1 false}
!463 = !{ptr @args__rt_tgsigqueueinfo, !156, !"args__rt_tgsigqueueinfo", i1 false, i1 false}
!464 = !{ptr @.str.137, !170, !"<string literal>", i1 false, i1 false}
!465 = !{ptr @.str.138, !170, !"<string literal>", i1 false, i1 false}
!466 = !{ptr @types__sigaltstack, !170, !"types__sigaltstack", i1 false, i1 false}
!467 = !{ptr @.str.139, !170, !"<string literal>", i1 false, i1 false}
!468 = !{ptr @.str.140, !170, !"<string literal>", i1 false, i1 false}
!469 = !{ptr @args__sigaltstack, !170, !"args__sigaltstack", i1 false, i1 false}
!470 = !{ptr @.str.141, !180, !"<string literal>", i1 false, i1 false}
!471 = !{ptr @types__sigpending, !180, !"types__sigpending", i1 false, i1 false}
!472 = !{ptr @args__sigpending, !180, !"args__sigpending", i1 false, i1 false}
!473 = !{ptr @types__sigprocmask, !190, !"types__sigprocmask", i1 false, i1 false}
!474 = !{ptr @args__sigprocmask, !190, !"args__sigprocmask", i1 false, i1 false}
!475 = !{ptr @.str.142, !200, !"<string literal>", i1 false, i1 false}
!476 = !{ptr @.str.143, !200, !"<string literal>", i1 false, i1 false}
!477 = !{ptr @types__rt_sigaction, !200, !"types__rt_sigaction", i1 false, i1 false}
!478 = !{ptr @.str.144, !200, !"<string literal>", i1 false, i1 false}
!479 = !{ptr @.str.145, !200, !"<string literal>", i1 false, i1 false}
!480 = !{ptr @args__rt_sigaction, !200, !"args__rt_sigaction", i1 false, i1 false}
!481 = !{ptr @.str.146, !210, !"<string literal>", i1 false, i1 false}
!482 = !{ptr @.str.147, !210, !"<string literal>", i1 false, i1 false}
!483 = !{ptr @types__sigaction, !210, !"types__sigaction", i1 false, i1 false}
!484 = !{ptr @args__sigaction, !210, !"args__sigaction", i1 false, i1 false}
!485 = !{ptr @types__ssetmask, !230, !"types__ssetmask", i1 false, i1 false}
!486 = !{ptr @.str.148, !230, !"<string literal>", i1 false, i1 false}
!487 = !{ptr @args__ssetmask, !230, !"args__ssetmask", i1 false, i1 false}
!488 = !{ptr @types__rt_sigsuspend, !252, !"types__rt_sigsuspend", i1 false, i1 false}
!489 = !{ptr @.str.149, !252, !"<string literal>", i1 false, i1 false}
!490 = !{ptr @args__rt_sigsuspend, !252, !"args__rt_sigsuspend", i1 false, i1 false}
!491 = distinct !{null, !492, !"__already_done", i1 false, i1 false}
!492 = !{!"../kernel/signal.c", i32 4622, i32 3}
!493 = !{ptr @.str.150, !262, !"<string literal>", i1 false, i1 false}
!494 = !{ptr @types__sigsuspend, !262, !"types__sigsuspend", i1 false, i1 false}
!495 = !{ptr @.str.151, !262, !"<string literal>", i1 false, i1 false}
!496 = !{ptr @.str.152, !262, !"<string literal>", i1 false, i1 false}
!497 = !{ptr @.str.153, !262, !"<string literal>", i1 false, i1 false}
!498 = !{ptr @args__sigsuspend, !262, !"args__sigsuspend", i1 false, i1 false}
!499 = !{!"sp"}
!500 = !{i32 1, !"wchar_size", i32 2}
!501 = !{i32 1, !"min_enum_size", i32 4}
!502 = !{i32 8, !"branch-target-enforcement", i32 0}
!503 = !{i32 8, !"sign-return-address", i32 0}
!504 = !{i32 8, !"sign-return-address-all", i32 0}
!505 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!506 = !{i32 7, !"uwtable", i32 1}
!507 = !{i32 7, !"frame-pointer", i32 2}
!508 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!509 = !{!"branch_weights", i32 2000, i32 1}
!510 = !{!"branch_weights", i32 1, i32 2000}
!511 = !{!"auto-init"}
!512 = !{i32 0, i32 33}
!513 = !{i64 2156639519, i64 2156639999, i64 2156639556, i64 2156639612, i64 2156639646, i64 2156639670, i64 2156639711, i64 2156639732, i64 2156639760, i64 2156639794}
!514 = !{i64 2156641454, i64 2156641934, i64 2156641491, i64 2156641547, i64 2156641581, i64 2156641605, i64 2156641646, i64 2156641667, i64 2156641695, i64 2156641729}
!515 = !{i64 2156643075}
!516 = !{i64 2156643685, i64 2156644165, i64 2156643722, i64 2156643778, i64 2156643812, i64 2156643836, i64 2156643877, i64 2156643898, i64 2156643926, i64 2156643960}
!517 = !{!"branch_weights", i32 1, i32 4001}
!518 = !{i8 0, i8 2}
!519 = !{i64 2150041470}
!520 = !{i64 2150041736}
!521 = !{!"branch_weights", i32 4001, i32 1}
!522 = !{i64 2156779164, i64 2156779645, i64 2156779201, i64 2156779257, i64 2156779291, i64 2156779315, i64 2156779356, i64 2156779377, i64 2156779405, i64 2156779439}
!523 = !{i64 2156876292, i64 2156876773, i64 2156876329, i64 2156876385, i64 2156876419, i64 2156876443, i64 2156876484, i64 2156876505, i64 2156876533, i64 2156876567}
!524 = !{i64 2156878227, i64 2156878708, i64 2156878264, i64 2156878320, i64 2156878354, i64 2156878378, i64 2156878419, i64 2156878440, i64 2156878468, i64 2156878502}
!525 = !{i64 2156879924, i64 2156880405, i64 2156879961, i64 2156880017, i64 2156880051, i64 2156880075, i64 2156880116, i64 2156880137, i64 2156880165, i64 2156880199}
!526 = !{i64 2148325325, i64 2148325330, i64 2148325343, i64 2148325387, i64 2148325421, i64 2148325442}
!527 = !{i64 2156178102}
!528 = !{i64 2156178355}
!529 = !{i64 2150050029}
!530 = !{i64 2150051065}
!531 = !{i64 2156882164, i64 2156882645, i64 2156882201, i64 2156882257, i64 2156882291, i64 2156882315, i64 2156882356, i64 2156882377, i64 2156882405, i64 2156882439}
!532 = !{i64 2156892764, i64 2156893245, i64 2156892801, i64 2156892857, i64 2156892891, i64 2156892915, i64 2156892956, i64 2156892977, i64 2156893005, i64 2156893039}
!533 = !{i64 2156894467, i64 2156894948, i64 2156894504, i64 2156894560, i64 2156894594, i64 2156894618, i64 2156894659, i64 2156894680, i64 2156894708, i64 2156894742}
!534 = !{i64 2156934653, i64 2156935134, i64 2156934690, i64 2156934746, i64 2156934780, i64 2156934804, i64 2156934845, i64 2156934866, i64 2156934894, i64 2156934928}
!535 = !{i64 2155936951}
!536 = !{i64 2156799286}
!537 = !{i64 2156799383}
!538 = !{i64 2156919261, i64 2156919742, i64 2156919298, i64 2156919354, i64 2156919388, i64 2156919412, i64 2156919453, i64 2156919474, i64 2156919502, i64 2156919536}
!539 = !{i64 2156195070}
!540 = !{i64 2156195287}
!541 = !{i64 2155948000}
!542 = !{i64 2153005370}
!543 = !{i64 1109279, i64 1109340}
!544 = !{i64 1112011}
!545 = !{i64 1112296}
!546 = !{i64 2153014220}
!547 = !{i64 2153024174}
!548 = !{i64 2153033669}
!549 = !{i64 2153043146}
!550 = !{i64 2152354032, i64 2152354057}
!551 = !{i64 4849587}
!552 = !{i64 4849784}
!553 = !{i64 2152335017}
!554 = !{i64 2152354713, i64 2152354738}
!555 = !{i64 2152350834, i64 2152350859}
!556 = !{!557}
!557 = distinct !{!557, !558, !"fdget: %agg.result"}
!558 = distinct !{!558, !"fdget"}
!559 = !{i64 2157211817, i64 2157212097, i64 2157212431, i64 2157212765}
!560 = !{i64 2157220708, i64 2157220988, i64 2157221322, i64 2157221656}
!561 = !{i64 2157229590, i64 2157229870, i64 2157230204, i64 2157230538}
!562 = !{i64 2157295559, i64 2157295584}
!563 = !{i64 2157304925, i64 2157305205, i64 2157305539, i64 2157305873}
!564 = !{i64 2157317329, i64 2157317609, i64 2157317943, i64 2157318277}
!565 = !{i64 2157329691, i64 2157329971, i64 2157330305, i64 2157330639}
!566 = !{i64 2157341922, i64 2157342202, i64 2157342536, i64 2157342870}
!567 = !{i64 2157345715, i64 2157345740}
!568 = !{i64 2157356362, i64 2157356642, i64 2157356976, i64 2157357310}
!569 = !{i64 2157365295, i64 2157365575, i64 2157365909, i64 2157366243}
!570 = !{i64 2157374201, i64 2157374481, i64 2157374815, i64 2157375149}
!571 = !{i64 2157383119, i64 2157383399, i64 2157383733, i64 2157384067}
!572 = !{i64 2156689057, i64 2156689537, i64 2156689094, i64 2156689150, i64 2156689184, i64 2156689208, i64 2156689249, i64 2156689270, i64 2156689298, i64 2156689332}
!573 = !{i64 2156926516}
!574 = !{i64 2156927447}
!575 = !{i64 2156927616}
