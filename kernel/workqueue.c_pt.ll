; ModuleID = '/llk/IR_all_yes/kernel/workqueue.c_pt.bc'
source_filename = "../kernel/workqueue.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+system_wq\22, \22a\22\09"
module asm "\09.weak\09__crc_system_wq\09\09\09\09"
module asm "\09.long\09__crc_system_wq\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_system_wq:\09\09\09\09\09"
module asm "\09.asciz \09\22system_wq\22\09\09\09\09\09"
module asm "__kstrtabns_system_wq:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+system_highpri_wq\22, \22a\22\09"
module asm "\09.weak\09__crc_system_highpri_wq\09\09\09\09"
module asm "\09.long\09__crc_system_highpri_wq\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_system_highpri_wq:\09\09\09\09\09"
module asm "\09.asciz \09\22system_highpri_wq\22\09\09\09\09\09"
module asm "__kstrtabns_system_highpri_wq:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+system_long_wq\22, \22a\22\09"
module asm "\09.weak\09__crc_system_long_wq\09\09\09\09"
module asm "\09.long\09__crc_system_long_wq\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_system_long_wq:\09\09\09\09\09"
module asm "\09.asciz \09\22system_long_wq\22\09\09\09\09\09"
module asm "__kstrtabns_system_long_wq:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+system_unbound_wq\22, \22a\22\09"
module asm "\09.weak\09__crc_system_unbound_wq\09\09\09\09"
module asm "\09.long\09__crc_system_unbound_wq\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_system_unbound_wq:\09\09\09\09\09"
module asm "\09.asciz \09\22system_unbound_wq\22\09\09\09\09\09"
module asm "__kstrtabns_system_unbound_wq:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+system_freezable_wq\22, \22a\22\09"
module asm "\09.weak\09__crc_system_freezable_wq\09\09\09\09"
module asm "\09.long\09__crc_system_freezable_wq\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_system_freezable_wq:\09\09\09\09\09"
module asm "\09.asciz \09\22system_freezable_wq\22\09\09\09\09\09"
module asm "__kstrtabns_system_freezable_wq:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+system_power_efficient_wq\22, \22a\22\09"
module asm "\09.weak\09__crc_system_power_efficient_wq\09\09\09\09"
module asm "\09.long\09__crc_system_power_efficient_wq\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_system_power_efficient_wq:\09\09\09\09\09"
module asm "\09.asciz \09\22system_power_efficient_wq\22\09\09\09\09\09"
module asm "__kstrtabns_system_power_efficient_wq:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+system_freezable_power_efficient_wq\22, \22a\22\09"
module asm "\09.weak\09__crc_system_freezable_power_efficient_wq\09\09\09\09"
module asm "\09.long\09__crc_system_freezable_power_efficient_wq\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_system_freezable_power_efficient_wq:\09\09\09\09\09"
module asm "\09.asciz \09\22system_freezable_power_efficient_wq\22\09\09\09\09\09"
module asm "__kstrtabns_system_freezable_power_efficient_wq:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__init_work\22, \22a\22\09"
module asm "\09.weak\09__crc___init_work\09\09\09\09"
module asm "\09.long\09__crc___init_work\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___init_work:\09\09\09\09\09"
module asm "\09.asciz \09\22__init_work\22\09\09\09\09\09"
module asm "__kstrtabns___init_work:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+destroy_work_on_stack\22, \22a\22\09"
module asm "\09.weak\09__crc_destroy_work_on_stack\09\09\09\09"
module asm "\09.long\09__crc_destroy_work_on_stack\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_destroy_work_on_stack:\09\09\09\09\09"
module asm "\09.asciz \09\22destroy_work_on_stack\22\09\09\09\09\09"
module asm "__kstrtabns_destroy_work_on_stack:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+destroy_delayed_work_on_stack\22, \22a\22\09"
module asm "\09.weak\09__crc_destroy_delayed_work_on_stack\09\09\09\09"
module asm "\09.long\09__crc_destroy_delayed_work_on_stack\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_destroy_delayed_work_on_stack:\09\09\09\09\09"
module asm "\09.asciz \09\22destroy_delayed_work_on_stack\22\09\09\09\09\09"
module asm "__kstrtabns_destroy_delayed_work_on_stack:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+queue_work_on\22, \22a\22\09"
module asm "\09.weak\09__crc_queue_work_on\09\09\09\09"
module asm "\09.long\09__crc_queue_work_on\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_queue_work_on:\09\09\09\09\09"
module asm "\09.asciz \09\22queue_work_on\22\09\09\09\09\09"
module asm "__kstrtabns_queue_work_on:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+queue_work_node\22, \22a\22\09"
module asm "\09.weak\09__crc_queue_work_node\09\09\09\09"
module asm "\09.long\09__crc_queue_work_node\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_queue_work_node:\09\09\09\09\09"
module asm "\09.asciz \09\22queue_work_node\22\09\09\09\09\09"
module asm "__kstrtabns_queue_work_node:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+delayed_work_timer_fn\22, \22a\22\09"
module asm "\09.weak\09__crc_delayed_work_timer_fn\09\09\09\09"
module asm "\09.long\09__crc_delayed_work_timer_fn\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_delayed_work_timer_fn:\09\09\09\09\09"
module asm "\09.asciz \09\22delayed_work_timer_fn\22\09\09\09\09\09"
module asm "__kstrtabns_delayed_work_timer_fn:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+queue_delayed_work_on\22, \22a\22\09"
module asm "\09.weak\09__crc_queue_delayed_work_on\09\09\09\09"
module asm "\09.long\09__crc_queue_delayed_work_on\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_queue_delayed_work_on:\09\09\09\09\09"
module asm "\09.asciz \09\22queue_delayed_work_on\22\09\09\09\09\09"
module asm "__kstrtabns_queue_delayed_work_on:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+mod_delayed_work_on\22, \22a\22\09"
module asm "\09.weak\09__crc_mod_delayed_work_on\09\09\09\09"
module asm "\09.long\09__crc_mod_delayed_work_on\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mod_delayed_work_on:\09\09\09\09\09"
module asm "\09.asciz \09\22mod_delayed_work_on\22\09\09\09\09\09"
module asm "__kstrtabns_mod_delayed_work_on:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+queue_rcu_work\22, \22a\22\09"
module asm "\09.weak\09__crc_queue_rcu_work\09\09\09\09"
module asm "\09.long\09__crc_queue_rcu_work\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_queue_rcu_work:\09\09\09\09\09"
module asm "\09.asciz \09\22queue_rcu_work\22\09\09\09\09\09"
module asm "__kstrtabns_queue_rcu_work:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+flush_workqueue\22, \22a\22\09"
module asm "\09.weak\09__crc_flush_workqueue\09\09\09\09"
module asm "\09.long\09__crc_flush_workqueue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_flush_workqueue:\09\09\09\09\09"
module asm "\09.asciz \09\22flush_workqueue\22\09\09\09\09\09"
module asm "__kstrtabns_flush_workqueue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+drain_workqueue\22, \22a\22\09"
module asm "\09.weak\09__crc_drain_workqueue\09\09\09\09"
module asm "\09.long\09__crc_drain_workqueue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_drain_workqueue:\09\09\09\09\09"
module asm "\09.asciz \09\22drain_workqueue\22\09\09\09\09\09"
module asm "__kstrtabns_drain_workqueue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+flush_work\22, \22a\22\09"
module asm "\09.weak\09__crc_flush_work\09\09\09\09"
module asm "\09.long\09__crc_flush_work\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_flush_work:\09\09\09\09\09"
module asm "\09.asciz \09\22flush_work\22\09\09\09\09\09"
module asm "__kstrtabns_flush_work:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cancel_work_sync\22, \22a\22\09"
module asm "\09.weak\09__crc_cancel_work_sync\09\09\09\09"
module asm "\09.long\09__crc_cancel_work_sync\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cancel_work_sync:\09\09\09\09\09"
module asm "\09.asciz \09\22cancel_work_sync\22\09\09\09\09\09"
module asm "__kstrtabns_cancel_work_sync:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+flush_delayed_work\22, \22a\22\09"
module asm "\09.weak\09__crc_flush_delayed_work\09\09\09\09"
module asm "\09.long\09__crc_flush_delayed_work\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_flush_delayed_work:\09\09\09\09\09"
module asm "\09.asciz \09\22flush_delayed_work\22\09\09\09\09\09"
module asm "__kstrtabns_flush_delayed_work:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+flush_rcu_work\22, \22a\22\09"
module asm "\09.weak\09__crc_flush_rcu_work\09\09\09\09"
module asm "\09.long\09__crc_flush_rcu_work\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_flush_rcu_work:\09\09\09\09\09"
module asm "\09.asciz \09\22flush_rcu_work\22\09\09\09\09\09"
module asm "__kstrtabns_flush_rcu_work:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+cancel_delayed_work\22, \22a\22\09"
module asm "\09.weak\09__crc_cancel_delayed_work\09\09\09\09"
module asm "\09.long\09__crc_cancel_delayed_work\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cancel_delayed_work:\09\09\09\09\09"
module asm "\09.asciz \09\22cancel_delayed_work\22\09\09\09\09\09"
module asm "__kstrtabns_cancel_delayed_work:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+cancel_delayed_work_sync\22, \22a\22\09"
module asm "\09.weak\09__crc_cancel_delayed_work_sync\09\09\09\09"
module asm "\09.long\09__crc_cancel_delayed_work_sync\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cancel_delayed_work_sync:\09\09\09\09\09"
module asm "\09.asciz \09\22cancel_delayed_work_sync\22\09\09\09\09\09"
module asm "__kstrtabns_cancel_delayed_work_sync:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+execute_in_process_context\22, \22a\22\09"
module asm "\09.weak\09__crc_execute_in_process_context\09\09\09\09"
module asm "\09.long\09__crc_execute_in_process_context\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_execute_in_process_context:\09\09\09\09\09"
module asm "\09.asciz \09\22execute_in_process_context\22\09\09\09\09\09"
module asm "__kstrtabns_execute_in_process_context:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+alloc_workqueue\22, \22a\22\09"
module asm "\09.weak\09__crc_alloc_workqueue\09\09\09\09"
module asm "\09.long\09__crc_alloc_workqueue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_alloc_workqueue:\09\09\09\09\09"
module asm "\09.asciz \09\22alloc_workqueue\22\09\09\09\09\09"
module asm "__kstrtabns_alloc_workqueue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+destroy_workqueue\22, \22a\22\09"
module asm "\09.weak\09__crc_destroy_workqueue\09\09\09\09"
module asm "\09.long\09__crc_destroy_workqueue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_destroy_workqueue:\09\09\09\09\09"
module asm "\09.asciz \09\22destroy_workqueue\22\09\09\09\09\09"
module asm "__kstrtabns_destroy_workqueue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+workqueue_set_max_active\22, \22a\22\09"
module asm "\09.weak\09__crc_workqueue_set_max_active\09\09\09\09"
module asm "\09.long\09__crc_workqueue_set_max_active\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_workqueue_set_max_active:\09\09\09\09\09"
module asm "\09.asciz \09\22workqueue_set_max_active\22\09\09\09\09\09"
module asm "__kstrtabns_workqueue_set_max_active:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+current_work\22, \22a\22\09"
module asm "\09.weak\09__crc_current_work\09\09\09\09"
module asm "\09.long\09__crc_current_work\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_current_work:\09\09\09\09\09"
module asm "\09.asciz \09\22current_work\22\09\09\09\09\09"
module asm "__kstrtabns_current_work:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+workqueue_congested\22, \22a\22\09"
module asm "\09.weak\09__crc_workqueue_congested\09\09\09\09"
module asm "\09.long\09__crc_workqueue_congested\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_workqueue_congested:\09\09\09\09\09"
module asm "\09.asciz \09\22workqueue_congested\22\09\09\09\09\09"
module asm "__kstrtabns_workqueue_congested:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+work_busy\22, \22a\22\09"
module asm "\09.weak\09__crc_work_busy\09\09\09\09"
module asm "\09.long\09__crc_work_busy\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_work_busy:\09\09\09\09\09"
module asm "\09.asciz \09\22work_busy\22\09\09\09\09\09"
module asm "__kstrtabns_work_busy:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+set_worker_desc\22, \22a\22\09"
module asm "\09.weak\09__crc_set_worker_desc\09\09\09\09"
module asm "\09.long\09__crc_set_worker_desc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_set_worker_desc:\09\09\09\09\09"
module asm "\09.asciz \09\22set_worker_desc\22\09\09\09\09\09"
module asm "__kstrtabns_set_worker_desc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+work_on_cpu\22, \22a\22\09"
module asm "\09.weak\09__crc_work_on_cpu\09\09\09\09"
module asm "\09.long\09__crc_work_on_cpu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_work_on_cpu:\09\09\09\09\09"
module asm "\09.asciz \09\22work_on_cpu\22\09\09\09\09\09"
module asm "__kstrtabns_work_on_cpu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+work_on_cpu_safe\22, \22a\22\09"
module asm "\09.weak\09__crc_work_on_cpu_safe\09\09\09\09"
module asm "\09.long\09__crc_work_on_cpu_safe\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_work_on_cpu_safe:\09\09\09\09\09"
module asm "\09.asciz \09\22work_on_cpu_safe\22\09\09\09\09\09"
module asm "__kstrtabns_work_on_cpu_safe:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, ptr, ptr, ptr }
%struct.kernel_param = type { ptr, ptr, ptr, i16, i8, i8, %union.anon.66 }
%union.anon.66 = type { ptr }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_event_fields = type { ptr, %union.anon.98 }
%union.anon.98 = type { %struct.anon.99 }
%struct.anon.99 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.100, %struct.trace_event, ptr, ptr, %union.anon.101, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.100 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.101 = type { ptr }
%union.anon.102 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.103 = type { %struct.bpf_raw_event_map }
%union.anon.104 = type { %struct.bpf_raw_event_map }
%union.anon.105 = type { %struct.bpf_raw_event_map }
%struct.debug_obj_descr = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.worker_pool = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, %struct.atomic_t, %struct.list_head, i32, i32, %struct.list_head, %struct.timer_list, %struct.timer_list, [64 x %struct.hlist_head], ptr, %struct.list_head, ptr, %struct.ida, ptr, %struct.hlist_node, i32, %struct.callback_head }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.hlist_head = type { ptr }
%struct.ida = type { %struct.xarray }
%struct.callback_head = type { ptr, ptr }
%struct.bus_type = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.lock_class_key, i8 }
%struct.device_attribute = type { %struct.attribute, ptr, ptr }
%struct.attribute = type { ptr, i16, i8, ptr, %struct.lock_class_key }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.rcuwait = type { ptr }
%struct.attribute_group = type { ptr, ptr, ptr, ptr, ptr }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.pool_workqueue = type { ptr, ptr, i32, i32, i32, [16 x i32], i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.work_struct, %struct.callback_head, [344 x i8] }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.workqueue_struct = type { %struct.list_head, %struct.list_head, %struct.mutex, i32, i32, %struct.atomic_t, ptr, %struct.list_head, %struct.list_head, %struct.list_head, ptr, i32, i32, ptr, ptr, ptr, ptr, %struct.lock_class_key, %struct.lockdep_map, [24 x i8], %struct.callback_head, [12 x i8], i32, ptr, [0 x ptr], [120 x i8] }
%struct.trace_event_raw_workqueue_queue_work = type { %struct.trace_entry, ptr, ptr, i32, i32, i32, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.trace_event_raw_workqueue_activate_work = type { %struct.trace_entry, ptr, [0 x i8] }
%struct.trace_event_raw_workqueue_execute_start = type { %struct.trace_entry, ptr, ptr, [0 x i8] }
%struct.trace_event_raw_workqueue_execute_end = type { %struct.trace_entry, ptr, ptr, [0 x i8] }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.worker = type { %union.anon.57, ptr, ptr, ptr, i32, %struct.list_head, ptr, ptr, %struct.list_head, i32, i32, i32, i32, [24 x i8], ptr, ptr }
%union.anon.57 = type { %struct.list_head }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, ptr }
%struct.wq_flusher = type { %struct.list_head, i32, %struct.completion }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.53, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.29 }
%struct.llist_node = type { ptr }
%union.anon.29 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.rb_node = type { i32, ptr, ptr }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.31 }
%union.anon.31 = type { %struct.anon.32 }
%struct.anon.32 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.kuid_t = type { i32 }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.tlbflush_unmap_batch = type {}
%union.anon.53 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.wq_barrier = type { %struct.work_struct, %struct.completion, ptr }
%struct.cwt_wait = type { %struct.wait_queue_entry, ptr }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.workqueue_attrs = type { i32, ptr, i8 }
%struct.__va_list = type { ptr }
%struct.wq_device = type { ptr, %struct.device }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.work_for_cpu = type { %struct.work_struct, ptr, ptr, i32 }
%struct.apply_wqattrs_ctx = type { ptr, ptr, %struct.list_head, ptr, [0 x ptr] }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }

@__param_str_disable_numa = internal constant [23 x i8] c"workqueue.disable_numa\00", align 1
@param_ops_bool = external dso_local constant %struct.kernel_param_ops, align 4
@wq_disable_numa = internal global { i8, [31 x i8] } zeroinitializer, align 32
@__param_disable_numa = internal constant %struct.kernel_param { ptr @__param_str_disable_numa, ptr null, ptr @param_ops_bool, i16 292, i8 -1, i8 0, %union.anon.66 { ptr @wq_disable_numa } }, section "__param", align 4
@__UNIQUE_ID_disable_numatype242 = internal constant [37 x i8] c"workqueue.parmtype=disable_numa:bool\00", section ".modinfo", align 1
@__param_str_power_efficient = internal constant [26 x i8] c"workqueue.power_efficient\00", align 1
@wq_power_efficient = internal global { i8, [31 x i8] } { i8 1, [31 x i8] zeroinitializer }, align 32
@__param_power_efficient = internal constant %struct.kernel_param { ptr @__param_str_power_efficient, ptr null, ptr @param_ops_bool, i16 292, i8 -1, i8 0, %union.anon.66 { ptr @wq_power_efficient } }, section "__param", align 4
@__UNIQUE_ID_power_efficienttype243 = internal constant [40 x i8] c"workqueue.parmtype=power_efficient:bool\00", section ".modinfo", align 1
@__param_str_debug_force_rr_cpu = internal constant [29 x i8] c"workqueue.debug_force_rr_cpu\00", align 1
@wq_debug_force_rr_cpu = internal global { i8, [31 x i8] } { i8 1, [31 x i8] zeroinitializer }, align 32
@__param_debug_force_rr_cpu = internal constant %struct.kernel_param { ptr @__param_str_debug_force_rr_cpu, ptr null, ptr @param_ops_bool, i16 420, i8 -1, i8 0, %union.anon.66 { ptr @wq_debug_force_rr_cpu } }, section "__param", align 4
@__UNIQUE_ID_debug_force_rr_cputype244 = internal constant [43 x i8] c"workqueue.parmtype=debug_force_rr_cpu:bool\00", section ".modinfo", align 1
@system_wq = dso_local global ptr null, section ".data..read_mostly", align 4
@__kstrtab_system_wq = external dso_local constant [0 x i8], align 1
@__kstrtabns_system_wq = external dso_local constant [0 x i8], align 1
@__ksymtab_system_wq = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @system_wq to i32), ptr @__kstrtab_system_wq, ptr @__kstrtabns_system_wq }, section "___ksymtab+system_wq", align 4
@system_highpri_wq = dso_local global ptr null, section ".data..read_mostly", align 4
@__kstrtab_system_highpri_wq = external dso_local constant [0 x i8], align 1
@__kstrtabns_system_highpri_wq = external dso_local constant [0 x i8], align 1
@__ksymtab_system_highpri_wq = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @system_highpri_wq to i32), ptr @__kstrtab_system_highpri_wq, ptr @__kstrtabns_system_highpri_wq }, section "___ksymtab_gpl+system_highpri_wq", align 4
@system_long_wq = dso_local global ptr null, section ".data..read_mostly", align 4
@__kstrtab_system_long_wq = external dso_local constant [0 x i8], align 1
@__kstrtabns_system_long_wq = external dso_local constant [0 x i8], align 1
@__ksymtab_system_long_wq = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @system_long_wq to i32), ptr @__kstrtab_system_long_wq, ptr @__kstrtabns_system_long_wq }, section "___ksymtab_gpl+system_long_wq", align 4
@system_unbound_wq = dso_local global ptr null, section ".data..read_mostly", align 4
@__kstrtab_system_unbound_wq = external dso_local constant [0 x i8], align 1
@__kstrtabns_system_unbound_wq = external dso_local constant [0 x i8], align 1
@__ksymtab_system_unbound_wq = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @system_unbound_wq to i32), ptr @__kstrtab_system_unbound_wq, ptr @__kstrtabns_system_unbound_wq }, section "___ksymtab_gpl+system_unbound_wq", align 4
@system_freezable_wq = dso_local global ptr null, section ".data..read_mostly", align 4
@__kstrtab_system_freezable_wq = external dso_local constant [0 x i8], align 1
@__kstrtabns_system_freezable_wq = external dso_local constant [0 x i8], align 1
@__ksymtab_system_freezable_wq = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @system_freezable_wq to i32), ptr @__kstrtab_system_freezable_wq, ptr @__kstrtabns_system_freezable_wq }, section "___ksymtab_gpl+system_freezable_wq", align 4
@system_power_efficient_wq = dso_local global ptr null, section ".data..read_mostly", align 4
@__kstrtab_system_power_efficient_wq = external dso_local constant [0 x i8], align 1
@__kstrtabns_system_power_efficient_wq = external dso_local constant [0 x i8], align 1
@__ksymtab_system_power_efficient_wq = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @system_power_efficient_wq to i32), ptr @__kstrtab_system_power_efficient_wq, ptr @__kstrtabns_system_power_efficient_wq }, section "___ksymtab_gpl+system_power_efficient_wq", align 4
@system_freezable_power_efficient_wq = dso_local global ptr null, section ".data..read_mostly", align 4
@__kstrtab_system_freezable_power_efficient_wq = external dso_local constant [0 x i8], align 1
@__kstrtabns_system_freezable_power_efficient_wq = external dso_local constant [0 x i8], align 1
@__ksymtab_system_freezable_power_efficient_wq = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @system_freezable_power_efficient_wq to i32), ptr @__kstrtab_system_freezable_power_efficient_wq, ptr @__kstrtabns_system_freezable_power_efficient_wq }, section "___ksymtab_gpl+system_freezable_power_efficient_wq", align 4
@__tpstrtab_workqueue_queue_work = internal constant [21 x i8] c"workqueue_queue_work\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_workqueue_queue_work = dso_local global %struct.static_call_key { ptr @__traceiter_workqueue_queue_work }, align 4
@__tracepoint_workqueue_queue_work = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_workqueue_queue_work, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_workqueue_queue_work, ptr null, ptr @__traceiter_workqueue_queue_work, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_workqueue_queue_work = internal constant ptr @__tracepoint_workqueue_queue_work, section "__tracepoints_ptrs", align 4
@__tpstrtab_workqueue_activate_work = internal constant [24 x i8] c"workqueue_activate_work\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_workqueue_activate_work = dso_local global %struct.static_call_key { ptr @__traceiter_workqueue_activate_work }, align 4
@__tracepoint_workqueue_activate_work = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_workqueue_activate_work, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_workqueue_activate_work, ptr null, ptr @__traceiter_workqueue_activate_work, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_workqueue_activate_work = internal constant ptr @__tracepoint_workqueue_activate_work, section "__tracepoints_ptrs", align 4
@__tpstrtab_workqueue_execute_start = internal constant [24 x i8] c"workqueue_execute_start\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_workqueue_execute_start = dso_local global %struct.static_call_key { ptr @__traceiter_workqueue_execute_start }, align 4
@__tracepoint_workqueue_execute_start = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_workqueue_execute_start, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_workqueue_execute_start, ptr null, ptr @__traceiter_workqueue_execute_start, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_workqueue_execute_start = internal constant ptr @__tracepoint_workqueue_execute_start, section "__tracepoints_ptrs", align 4
@__tpstrtab_workqueue_execute_end = internal constant [22 x i8] c"workqueue_execute_end\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_workqueue_execute_end = dso_local global %struct.static_call_key { ptr @__traceiter_workqueue_execute_end }, align 4
@__tracepoint_workqueue_execute_end = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_workqueue_execute_end, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_workqueue_execute_end, ptr null, ptr @__traceiter_workqueue_execute_end, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_workqueue_execute_end = internal constant ptr @__tracepoint_workqueue_execute_end, section "__tracepoints_ptrs", align 4
@str__workqueue__trace_system_name = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"workqueue\00", [22 x i8] zeroinitializer }, align 32
@trace_event_fields_workqueue_queue_work = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.47, %union.anon.98 { %struct.anon.99 { ptr @.str.48, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.47, %union.anon.98 { %struct.anon.99 { ptr @.str.49, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.50, %union.anon.98 { %struct.anon.99 { ptr @.str.51, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.52, %union.anon.98 { %struct.anon.99 { ptr @.str.53, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.52, %union.anon.98 { %struct.anon.99 { ptr @.str.54, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_workqueue_queue_work = internal global %struct.trace_event_class { ptr @str__workqueue__trace_system_name, ptr @trace_event_raw_event_workqueue_queue_work, ptr @perf_trace_workqueue_queue_work, ptr @trace_event_reg, ptr @trace_event_fields_workqueue_queue_work, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_workqueue_queue_work, i64 24), ptr getelementptr (i8, ptr @event_class_workqueue_queue_work, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_workqueue_queue_work = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_workqueue_queue_work, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_workqueue_queue_work = internal global { [133 x i8], [59 x i8] } { [133 x i8] c"\22work struct=%p function=%ps workqueue=%s req_cpu=%u cpu=%u\22, REC->work, REC->function, __get_str(workqueue), REC->req_cpu, REC->cpu\00", [59 x i8] zeroinitializer }, align 32
@event_workqueue_queue_work = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_workqueue_queue_work, %union.anon.100 { ptr @__tracepoint_workqueue_queue_work }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_workqueue_queue_work }, ptr @print_fmt_workqueue_queue_work, ptr null, %union.anon.101 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_workqueue_queue_work = internal global ptr @event_workqueue_queue_work, section "_ftrace_events", align 4
@trace_event_fields_workqueue_activate_work = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.47, %union.anon.98 { %struct.anon.99 { ptr @.str.48, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_workqueue_activate_work = internal global %struct.trace_event_class { ptr @str__workqueue__trace_system_name, ptr @trace_event_raw_event_workqueue_activate_work, ptr @perf_trace_workqueue_activate_work, ptr @trace_event_reg, ptr @trace_event_fields_workqueue_activate_work, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_workqueue_activate_work, i64 24), ptr getelementptr (i8, ptr @event_class_workqueue_activate_work, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_workqueue_activate_work = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_workqueue_activate_work, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_workqueue_activate_work = internal global { [28 x i8], [36 x i8] } { [28 x i8] c"\22work struct %p\22, REC->work\00", [36 x i8] zeroinitializer }, align 32
@event_workqueue_activate_work = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_workqueue_activate_work, %union.anon.100 { ptr @__tracepoint_workqueue_activate_work }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_workqueue_activate_work }, ptr @print_fmt_workqueue_activate_work, ptr null, %union.anon.101 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_workqueue_activate_work = internal global ptr @event_workqueue_activate_work, section "_ftrace_events", align 4
@trace_event_fields_workqueue_execute_start = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.47, %union.anon.98 { %struct.anon.99 { ptr @.str.48, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.47, %union.anon.98 { %struct.anon.99 { ptr @.str.49, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_workqueue_execute_start = internal global %struct.trace_event_class { ptr @str__workqueue__trace_system_name, ptr @trace_event_raw_event_workqueue_execute_start, ptr @perf_trace_workqueue_execute_start, ptr @trace_event_reg, ptr @trace_event_fields_workqueue_execute_start, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_workqueue_execute_start, i64 24), ptr getelementptr (i8, ptr @event_class_workqueue_execute_start, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_workqueue_execute_start = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_workqueue_execute_start, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_workqueue_execute_start = internal global { [57 x i8], [39 x i8] } { [57 x i8] c"\22work struct %p: function %ps\22, REC->work, REC->function\00", [39 x i8] zeroinitializer }, align 32
@event_workqueue_execute_start = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_workqueue_execute_start, %union.anon.100 { ptr @__tracepoint_workqueue_execute_start }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_workqueue_execute_start }, ptr @print_fmt_workqueue_execute_start, ptr null, %union.anon.101 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_workqueue_execute_start = internal global ptr @event_workqueue_execute_start, section "_ftrace_events", align 4
@trace_event_fields_workqueue_execute_end = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.47, %union.anon.98 { %struct.anon.99 { ptr @.str.48, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.47, %union.anon.98 { %struct.anon.99 { ptr @.str.49, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_workqueue_execute_end = internal global %struct.trace_event_class { ptr @str__workqueue__trace_system_name, ptr @trace_event_raw_event_workqueue_execute_end, ptr @perf_trace_workqueue_execute_end, ptr @trace_event_reg, ptr @trace_event_fields_workqueue_execute_end, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_workqueue_execute_end, i64 24), ptr getelementptr (i8, ptr @event_class_workqueue_execute_end, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_workqueue_execute_end = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_workqueue_execute_end, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_workqueue_execute_end = internal global { [57 x i8], [39 x i8] } { [57 x i8] c"\22work struct %p: function %ps\22, REC->work, REC->function\00", [39 x i8] zeroinitializer }, align 32
@event_workqueue_execute_end = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_workqueue_execute_end, %union.anon.100 { ptr @__tracepoint_workqueue_execute_end }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_workqueue_execute_end }, ptr @print_fmt_workqueue_execute_end, ptr null, %union.anon.101 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_workqueue_execute_end = internal global ptr @event_workqueue_execute_end, section "_ftrace_events", align 4
@__bpf_trace_tp_map_workqueue_queue_work = internal global %union.anon.102 { %struct.bpf_raw_event_map { ptr @__tracepoint_workqueue_queue_work, ptr @__bpf_trace_workqueue_queue_work, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_workqueue_activate_work = internal global %union.anon.103 { %struct.bpf_raw_event_map { ptr @__tracepoint_workqueue_activate_work, ptr @__bpf_trace_workqueue_activate_work, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_workqueue_execute_start = internal global %union.anon.104 { %struct.bpf_raw_event_map { ptr @__tracepoint_workqueue_execute_start, ptr @__bpf_trace_workqueue_execute_start, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_workqueue_execute_end = internal global %union.anon.105 { %struct.bpf_raw_event_map { ptr @__tracepoint_workqueue_execute_end, ptr @__bpf_trace_workqueue_execute_end, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@work_debug_descr = internal constant { %struct.debug_obj_descr, [32 x i8] } { %struct.debug_obj_descr { ptr @.str.58, ptr @work_debug_hint, ptr @work_is_static_object, ptr @work_fixup_init, ptr null, ptr null, ptr @work_fixup_free, ptr null }, [32 x i8] zeroinitializer }, align 32
@__kstrtab___init_work = external dso_local constant [0 x i8], align 1
@__kstrtabns___init_work = external dso_local constant [0 x i8], align 1
@__ksymtab___init_work = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__init_work to i32), ptr @__kstrtab___init_work, ptr @__kstrtabns___init_work }, section "___ksymtab_gpl+__init_work", align 4
@__kstrtab_destroy_work_on_stack = external dso_local constant [0 x i8], align 1
@__kstrtabns_destroy_work_on_stack = external dso_local constant [0 x i8], align 1
@__ksymtab_destroy_work_on_stack = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @destroy_work_on_stack to i32), ptr @__kstrtab_destroy_work_on_stack, ptr @__kstrtabns_destroy_work_on_stack }, section "___ksymtab_gpl+destroy_work_on_stack", align 4
@__kstrtab_destroy_delayed_work_on_stack = external dso_local constant [0 x i8], align 1
@__kstrtabns_destroy_delayed_work_on_stack = external dso_local constant [0 x i8], align 1
@__ksymtab_destroy_delayed_work_on_stack = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @destroy_delayed_work_on_stack to i32), ptr @__kstrtab_destroy_delayed_work_on_stack, ptr @__kstrtabns_destroy_delayed_work_on_stack }, section "___ksymtab_gpl+destroy_delayed_work_on_stack", align 4
@__kstrtab_queue_work_on = external dso_local constant [0 x i8], align 1
@__kstrtabns_queue_work_on = external dso_local constant [0 x i8], align 1
@__ksymtab_queue_work_on = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @queue_work_on to i32), ptr @__kstrtab_queue_work_on, ptr @__kstrtabns_queue_work_on }, section "___ksymtab+queue_work_on", align 4
@queue_work_node.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"kernel/workqueue.c\00", [45 x i8] zeroinitializer }, align 32
@__kstrtab_queue_work_node = external dso_local constant [0 x i8], align 1
@__kstrtabns_queue_work_node = external dso_local constant [0 x i8], align 1
@__ksymtab_queue_work_node = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @queue_work_node to i32), ptr @__kstrtab_queue_work_node, ptr @__kstrtabns_queue_work_node }, section "___ksymtab_gpl+queue_work_node", align 4
@__kstrtab_delayed_work_timer_fn = external dso_local constant [0 x i8], align 1
@__kstrtabns_delayed_work_timer_fn = external dso_local constant [0 x i8], align 1
@__ksymtab_delayed_work_timer_fn = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @delayed_work_timer_fn to i32), ptr @__kstrtab_delayed_work_timer_fn, ptr @__kstrtabns_delayed_work_timer_fn }, section "___ksymtab+delayed_work_timer_fn", align 4
@__kstrtab_queue_delayed_work_on = external dso_local constant [0 x i8], align 1
@__kstrtabns_queue_delayed_work_on = external dso_local constant [0 x i8], align 1
@__ksymtab_queue_delayed_work_on = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @queue_delayed_work_on to i32), ptr @__kstrtab_queue_delayed_work_on, ptr @__kstrtabns_queue_delayed_work_on }, section "___ksymtab+queue_delayed_work_on", align 4
@__kstrtab_mod_delayed_work_on = external dso_local constant [0 x i8], align 1
@__kstrtabns_mod_delayed_work_on = external dso_local constant [0 x i8], align 1
@__ksymtab_mod_delayed_work_on = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mod_delayed_work_on to i32), ptr @__kstrtab_mod_delayed_work_on, ptr @__kstrtabns_mod_delayed_work_on }, section "___ksymtab_gpl+mod_delayed_work_on", align 4
@__kstrtab_queue_rcu_work = external dso_local constant [0 x i8], align 1
@__kstrtabns_queue_rcu_work = external dso_local constant [0 x i8], align 1
@__ksymtab_queue_rcu_work = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @queue_rcu_work to i32), ptr @__kstrtab_queue_rcu_work, ptr @__kstrtabns_queue_rcu_work }, section "___ksymtab+queue_rcu_work", align 4
@wq_online = internal global { i1, [31 x i8] } zeroinitializer, align 32
@flush_workqueue.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@flush_workqueue.__already_done.1 = internal unnamed_addr global i1 false, section ".data.once", align 1
@flush_workqueue.__already_done.2 = internal unnamed_addr global i1 false, section ".data.once", align 1
@flush_workqueue.__already_done.3 = internal unnamed_addr global i1 false, section ".data.once", align 1
@flush_workqueue.__already_done.4 = internal unnamed_addr global i1 false, section ".data.once", align 1
@flush_workqueue.__already_done.5 = internal unnamed_addr global i1 false, section ".data.once", align 1
@flush_workqueue.__already_done.6 = internal unnamed_addr global i1 false, section ".data.once", align 1
@flush_workqueue.__already_done.7 = internal unnamed_addr global i1 false, section ".data.once", align 1
@flush_workqueue.__already_done.8 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_flush_workqueue = external dso_local constant [0 x i8], align 1
@__kstrtabns_flush_workqueue = external dso_local constant [0 x i8], align 1
@__ksymtab_flush_workqueue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @flush_workqueue to i32), ptr @__kstrtab_flush_workqueue, ptr @__kstrtabns_flush_workqueue }, section "___ksymtab+flush_workqueue", align 4
@drain_workqueue.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.9 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"RCU-list traversed in non-reader section!\00", [54 x i8] zeroinitializer }, align 32
@drain_workqueue._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.10, ptr @.str.11, ptr @.str, i32 3009, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\014workqueue %s: %s() isn't complete after %u tries\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"drain_workqueue\00", [16 x i8] zeroinitializer }, align 32
@drain_workqueue._entry_ptr = internal global ptr @drain_workqueue._entry, section ".printk_index", align 4
@__kstrtab_drain_workqueue = external dso_local constant [0 x i8], align 1
@__kstrtabns_drain_workqueue = external dso_local constant [0 x i8], align 1
@__ksymtab_drain_workqueue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @drain_workqueue to i32), ptr @__kstrtab_drain_workqueue, ptr @__kstrtabns_drain_workqueue }, section "___ksymtab_gpl+drain_workqueue", align 4
@__kstrtab_flush_work = external dso_local constant [0 x i8], align 1
@__kstrtabns_flush_work = external dso_local constant [0 x i8], align 1
@__ksymtab_flush_work = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @flush_work to i32), ptr @__kstrtab_flush_work, ptr @__kstrtabns_flush_work }, section "___ksymtab_gpl+flush_work", align 4
@__kstrtab_cancel_work_sync = external dso_local constant [0 x i8], align 1
@__kstrtabns_cancel_work_sync = external dso_local constant [0 x i8], align 1
@__ksymtab_cancel_work_sync = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cancel_work_sync to i32), ptr @__kstrtab_cancel_work_sync, ptr @__kstrtabns_cancel_work_sync }, section "___ksymtab_gpl+cancel_work_sync", align 4
@__kstrtab_flush_delayed_work = external dso_local constant [0 x i8], align 1
@__kstrtabns_flush_delayed_work = external dso_local constant [0 x i8], align 1
@__ksymtab_flush_delayed_work = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @flush_delayed_work to i32), ptr @__kstrtab_flush_delayed_work, ptr @__kstrtabns_flush_delayed_work }, section "___ksymtab+flush_delayed_work", align 4
@__kstrtab_flush_rcu_work = external dso_local constant [0 x i8], align 1
@__kstrtabns_flush_rcu_work = external dso_local constant [0 x i8], align 1
@__ksymtab_flush_rcu_work = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @flush_rcu_work to i32), ptr @__kstrtab_flush_rcu_work, ptr @__kstrtabns_flush_rcu_work }, section "___ksymtab+flush_rcu_work", align 4
@__kstrtab_cancel_delayed_work = external dso_local constant [0 x i8], align 1
@__kstrtabns_cancel_delayed_work = external dso_local constant [0 x i8], align 1
@__ksymtab_cancel_delayed_work = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cancel_delayed_work to i32), ptr @__kstrtab_cancel_delayed_work, ptr @__kstrtabns_cancel_delayed_work }, section "___ksymtab+cancel_delayed_work", align 4
@__kstrtab_cancel_delayed_work_sync = external dso_local constant [0 x i8], align 1
@__kstrtabns_cancel_delayed_work_sync = external dso_local constant [0 x i8], align 1
@__ksymtab_cancel_delayed_work_sync = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cancel_delayed_work_sync to i32), ptr @__kstrtab_cancel_delayed_work_sync, ptr @__kstrtabns_cancel_delayed_work_sync }, section "___ksymtab+cancel_delayed_work_sync", align 4
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@schedule_on_each_cpu.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.12 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"(work_completion)(work)\00", [40 x i8] zeroinitializer }, align 32
@execute_in_process_context.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.13 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"(work_completion)(&ew->work)\00", [35 x i8] zeroinitializer }, align 32
@__kstrtab_execute_in_process_context = external dso_local constant [0 x i8], align 1
@__kstrtabns_execute_in_process_context = external dso_local constant [0 x i8], align 1
@__ksymtab_execute_in_process_context = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @execute_in_process_context to i32), ptr @__kstrtab_execute_in_process_context, ptr @__kstrtabns_execute_in_process_context }, section "___ksymtab_gpl+execute_in_process_context", align 4
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 4
@wq_pool_mutex = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.80, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @wq_pool_mutex, i64 52), ptr getelementptr (i8, ptr @wq_pool_mutex, i64 52) }, ptr @wq_pool_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.81, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@alloc_workqueue.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.14 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"&wq->mutex\00", [21 x i8] zeroinitializer }, align 32
@alloc_workqueue.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@workqueues = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @workqueues, ptr @workqueues }, [24 x i8] zeroinitializer }, align 32
@__kstrtab_alloc_workqueue = external dso_local constant [0 x i8], align 1
@__kstrtabns_alloc_workqueue = external dso_local constant [0 x i8], align 1
@__ksymtab_alloc_workqueue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @alloc_workqueue to i32), ptr @__kstrtab_alloc_workqueue, ptr @__kstrtabns_alloc_workqueue }, section "___ksymtab_gpl+alloc_workqueue", align 4
@wq_mayday_lock = internal global { %struct.raw_spinlock, [52 x i8] } { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.98, i8 0, i8 2, i8 0, i32 0, i32 0 } }, [52 x i8] zeroinitializer }, align 32
@destroy_workqueue.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@destroy_workqueue._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.15, ptr @.str.16, ptr @.str, i32 4455, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\014%s: %s has the following busy pwq\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"destroy_workqueue\00", [46 x i8] zeroinitializer }, align 32
@destroy_workqueue._entry_ptr = internal global ptr @destroy_workqueue._entry, section ".printk_index", align 4
@__kstrtab_destroy_workqueue = external dso_local constant [0 x i8], align 1
@__kstrtabns_destroy_workqueue = external dso_local constant [0 x i8], align 1
@__ksymtab_destroy_workqueue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @destroy_workqueue to i32), ptr @__kstrtab_destroy_workqueue, ptr @__kstrtabns_destroy_workqueue }, section "___ksymtab_gpl+destroy_workqueue", align 4
@workqueue_set_max_active.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_workqueue_set_max_active = external dso_local constant [0 x i8], align 1
@__kstrtabns_workqueue_set_max_active = external dso_local constant [0 x i8], align 1
@__ksymtab_workqueue_set_max_active = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @workqueue_set_max_active to i32), ptr @__kstrtab_workqueue_set_max_active, ptr @__kstrtabns_workqueue_set_max_active }, section "___ksymtab_gpl+workqueue_set_max_active", align 4
@__kstrtab_current_work = external dso_local constant [0 x i8], align 1
@__kstrtabns_current_work = external dso_local constant [0 x i8], align 1
@__ksymtab_current_work = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @current_work to i32), ptr @__kstrtab_current_work, ptr @__kstrtabns_current_work }, section "___ksymtab+current_work", align 4
@__kstrtab_workqueue_congested = external dso_local constant [0 x i8], align 1
@__kstrtabns_workqueue_congested = external dso_local constant [0 x i8], align 1
@__ksymtab_workqueue_congested = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @workqueue_congested to i32), ptr @__kstrtab_workqueue_congested, ptr @__kstrtabns_workqueue_congested }, section "___ksymtab_gpl+workqueue_congested", align 4
@__kstrtab_work_busy = external dso_local constant [0 x i8], align 1
@__kstrtabns_work_busy = external dso_local constant [0 x i8], align 1
@__ksymtab_work_busy = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @work_busy to i32), ptr @__kstrtab_work_busy, ptr @__kstrtabns_work_busy }, section "___ksymtab_gpl+work_busy", align 4
@__kstrtab_set_worker_desc = external dso_local constant [0 x i8], align 1
@__kstrtabns_set_worker_desc = external dso_local constant [0 x i8], align 1
@__ksymtab_set_worker_desc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @set_worker_desc to i32), ptr @__kstrtab_set_worker_desc, ptr @__kstrtabns_set_worker_desc }, section "___ksymtab_gpl+set_worker_desc", align 4
@print_worker_info._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.17, ptr @.str.18, ptr @.str, i32 4708, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"%sWorkqueue: %s %ps\00", [44 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"print_worker_info\00", [46 x i8] zeroinitializer }, align 32
@print_worker_info._entry_ptr = internal global ptr @print_worker_info._entry, section ".printk_index", align 4
@print_worker_info._entry.19 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.20, ptr @.str.18, ptr @.str, i32 4710, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"\01c (%s)\00", [24 x i8] zeroinitializer }, align 32
@print_worker_info._entry_ptr.21 = internal global ptr @print_worker_info._entry.19, section ".printk_index", align 4
@print_worker_info._entry.22 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.23, ptr @.str.18, ptr @.str, i32 4711, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"\01c\0A\00", [28 x i8] zeroinitializer }, align 32
@print_worker_info._entry_ptr.24 = internal global ptr @print_worker_info._entry.22, section ".printk_index", align 4
@show_one_workqueue.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@show_one_workqueue._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.25, ptr @.str.26, ptr @.str, i32 4828, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"\016workqueue %s: flags=0x%x\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"show_one_workqueue\00", [45 x i8] zeroinitializer }, align 32
@show_one_workqueue._entry_ptr = internal global ptr @show_one_workqueue._entry, section ".printk_index", align 4
@show_one_workqueue.__warned.27 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@show_all_workqueues._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.28, ptr @.str.29, ptr @.str, i32 4912, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\016Showing busy workqueues and worker pools:\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"show_all_workqueues\00", [44 x i8] zeroinitializer }, align 32
@show_all_workqueues._entry_ptr = internal global ptr @show_all_workqueues._entry, section ".printk_index", align 4
@show_all_workqueues.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@worker_pool_idr = internal global { %struct.idr, [36 x i8] } { %struct.idr { %struct.xarray { %struct.spinlock { %union.anon.0 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.143, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, i32 67108868, ptr null }, i32 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@show_all_workqueues.__warned.30 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.31 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"RCU or wq_pool_mutex should be held\00", [60 x i8] zeroinitializer }, align 32
@wq_pool_attach_mutex = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.158, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @wq_pool_attach_mutex, i64 52), ptr getelementptr (i8, ptr @wq_pool_attach_mutex, i64 52) }, ptr @wq_pool_attach_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.159, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"+%s\00", [28 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"-%s\00", [28 x i8] zeroinitializer }, align 32
@cpu_worker_pools = weak dso_local global [2 x %struct.worker_pool] zeroinitializer, section ".data..percpu..shared_aligned", align 128
@workqueue_online_cpu.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@work_on_cpu.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.34 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"(work_completion)(&wfc.work)\00", [35 x i8] zeroinitializer }, align 32
@__kstrtab_work_on_cpu = external dso_local constant [0 x i8], align 1
@__kstrtabns_work_on_cpu = external dso_local constant [0 x i8], align 1
@__ksymtab_work_on_cpu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @work_on_cpu to i32), ptr @__kstrtab_work_on_cpu, ptr @__kstrtabns_work_on_cpu }, section "___ksymtab_gpl+work_on_cpu", align 4
@__kstrtab_work_on_cpu_safe = external dso_local constant [0 x i8], align 1
@__kstrtabns_work_on_cpu_safe = external dso_local constant [0 x i8], align 1
@__ksymtab_work_on_cpu_safe = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @work_on_cpu_safe to i32), ptr @__kstrtab_work_on_cpu_safe, ptr @__kstrtabns_work_on_cpu_safe }, section "___ksymtab_gpl+work_on_cpu_safe", align 4
@freeze_workqueues_begin.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@workqueue_freezing = internal global { i1, [31 x i8] } zeroinitializer, align 32
@freeze_workqueues_begin.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@freeze_workqueues_busy.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@freeze_workqueues_busy.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@freeze_workqueues_busy.__already_done.35 = internal unnamed_addr global i1 false, section ".data.once", align 1
@thaw_workqueues.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@wq_unbound_cpumask = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@__initcall__kmod_workqueue__344_5707_wq_sysfs_init1 = internal global ptr @wq_sysfs_init, section ".initcall1.init", align 4
@wq_subsys = internal global { %struct.bus_type, [32 x i8] } { %struct.bus_type { ptr @.str.51, ptr null, ptr null, ptr null, ptr @wq_sysfs_groups, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, %struct.lock_class_key zeroinitializer, i8 0 }, [32 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"%s\00", [29 x i8] zeroinitializer }, align 32
@wq_sysfs_unbound_attrs = internal global { [5 x %struct.device_attribute], [52 x i8] } { [5 x %struct.device_attribute] [%struct.device_attribute { %struct.attribute { ptr @.str.178, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @wq_pool_ids_show, ptr null }, %struct.device_attribute { %struct.attribute { ptr @.str.179, i16 420, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @wq_nice_show, ptr @wq_nice_store }, %struct.device_attribute { %struct.attribute { ptr @.str.172, i16 420, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @wq_cpumask_show, ptr @wq_cpumask_store }, %struct.device_attribute { %struct.attribute { ptr @.str.180, i16 420, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @wq_numa_show, ptr @wq_numa_store }, %struct.device_attribute zeroinitializer], [52 x i8] zeroinitializer }, align 32
@wq_watchdog_touched_cpu = weak dso_local global i32 -30000, section ".data..percpu", align 4
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@wq_watchdog_touched = internal global { i32, [28 x i8] } { i32 -30000, [28 x i8] zeroinitializer }, align 32
@__param_str_watchdog_thresh = internal constant [26 x i8] c"workqueue.watchdog_thresh\00", align 1
@wq_watchdog_thresh_ops = internal constant { %struct.kernel_param_ops, [16 x i8] } { %struct.kernel_param_ops { i32 0, ptr @wq_watchdog_param_set_thresh, ptr @param_get_ulong, ptr null }, [16 x i8] zeroinitializer }, align 32
@wq_watchdog_thresh = internal global { i32, [28 x i8] } { i32 30, [28 x i8] zeroinitializer }, align 32
@__param_watchdog_thresh = internal constant %struct.kernel_param { ptr @__param_str_watchdog_thresh, ptr null, ptr @wq_watchdog_thresh_ops, i16 420, i8 -1, i8 0, %union.anon.66 { ptr @wq_watchdog_thresh } }, section "__param", align 4
@__const.workqueue_init_early.std_nice = private unnamed_addr constant [2 x i32] [i32 0, i32 -20], align 4
@.str.37 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"pool_workqueue\00", [17 x i8] zeroinitializer }, align 32
@pwq_cache = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@unbound_std_wq_attrs = internal global { [2 x ptr], [24 x i8] } zeroinitializer, align 32
@ordered_wq_attrs = internal global { [2 x ptr], [24 x i8] } zeroinitializer, align 32
@.str.38 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"events\00", [25 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"events_highpri\00", [17 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"events_long\00", [20 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"events_unbound\00", [17 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"events_freezable\00", [47 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"events_power_efficient\00", [41 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"events_freezable_power_efficient\00", [63 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"workqueue: failed to create early rescuer for %s\00", [47 x i8] zeroinitializer }, align 32
@unbound_pool_hash = internal global { [64 x %struct.hlist_head], [64 x i8] } zeroinitializer, align 32
@__pcpu_unique_wq_rr_cpu_last = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@wq_rr_cpu_last = weak dso_local global i32 0, section ".data..percpu", align 4
@__pcpu_unique_cpu_worker_pools = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@__pcpu_unique_wq_watchdog_touched_cpu = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@.str.46 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"(null)\00", [25 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"void *\00", [25 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"work\00", [27 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"function\00", [23 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"__data_loc char[]\00", [46 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"workqueue\00", [22 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"req_cpu\00", [24 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"cpu\00", [28 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"work struct=%p function=%ps workqueue=%s req_cpu=%u cpu=%u\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"work struct %p\0A\00", [16 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"work struct %p: function %ps\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"work_struct\00", [20 x i8] zeroinitializer }, align 32
@__queue_work.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@lockdep_recursion = external dso_local global i32, section ".data..percpu", align 4
@hardirqs_enabled = external dso_local global i32, section ".data..percpu", align 4
@__queue_work.__already_done.59 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__queue_work.__already_done.60 = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.61 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"workqueue: per-cpu pwq for %s on cpu%d has 0 refcnt\00", [44 x i8] zeroinitializer }, align 32
@wq_select_unbound_cpu.printed_dbg_warning = internal global { i1, [31 x i8] } zeroinitializer, align 32
@wq_select_unbound_cpu._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.62, ptr @.str.63, ptr @.str, i32 1416, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [74 x i8], [54 x i8] } { [74 x i8] c"\014workqueue: round-robin CPU selection forced, expect performance impact\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"wq_select_unbound_cpu\00", [42 x i8] zeroinitializer }, align 32
@wq_select_unbound_cpu._entry_ptr = internal global ptr @wq_select_unbound_cpu._entry, section ".printk_index", align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.66 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"include/trace/events/workqueue.h\00", [63 x i8] zeroinitializer }, align 32
@trace_workqueue_queue_work.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.68 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@trace_workqueue_activate_work.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@set_work_data.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@get_pwq.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__queue_delayed_work.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__queue_delayed_work.__already_done.69 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__queue_delayed_work.__already_done.70 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__queue_delayed_work.__already_done.71 = internal unnamed_addr global i1 false, section ".data.once", align 1
@put_pwq.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@init_completion.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.72 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"&x->wait\00", [23 x i8] zeroinitializer }, align 32
@flush_workqueue_prep_pwqs.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@flush_workqueue_prep_pwqs.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@flush_workqueue_prep_pwqs.__already_done.73 = internal unnamed_addr global i1 false, section ".data.once", align 1
@flush_workqueue_prep_pwqs.__already_done.74 = internal unnamed_addr global i1 false, section ".data.once", align 1
@check_flush_dependency.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.75 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"workqueue: PF_MEMALLOC task %d(%s) is flushing !WQ_MEM_RECLAIM %s:%ps\00", [58 x i8] zeroinitializer }, align 32
@check_flush_dependency.__already_done.76 = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.77 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"workqueue: WQ_MEM_RECLAIM %s:%ps is flushing !WQ_MEM_RECLAIM %s:%ps\00", [60 x i8] zeroinitializer }, align 32
@insert_wq_barrier.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.78 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"(work_completion)(&barr->work)\00", [33 x i8] zeroinitializer }, align 32
@__cancel_work_timer.cancel_waitq = internal global %struct.wait_queue_head { %struct.spinlock { %union.anon.0 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.79, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, %struct.list_head { ptr getelementptr (i8, ptr @__cancel_work_timer.cancel_waitq, i64 44), ptr getelementptr (i8, ptr @__cancel_work_timer.cancel_waitq, i64 44) } }, align 4
@.str.79 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"cancel_waitq.lock\00", [46 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@.str.80 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"wq_pool_mutex.wait_lock\00", [40 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"wq_pool_mutex\00", [18 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"&pool->lock\00", [20 x i8] zeroinitializer }, align 32
@manager_wait = internal global { %struct.rcuwait, [28 x i8] } zeroinitializer, align 32
@init_pwq.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.84 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"(work_completion)(&pwq->unbound_release_work)\00", [50 x i8] zeroinitializer }, align 32
@pwq_unbound_release_workfn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@wq_calc_node_cpumask._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.85, ptr @.str.86, ptr @.str, i32 3909, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"\014WARNING: workqueue cpumask: online intersect > possible intersect\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"wq_calc_node_cpumask\00", [43 x i8] zeroinitializer }, align 32
@wq_calc_node_cpumask._entry_ptr = internal global ptr @wq_calc_node_cpumask._entry, section ".printk_index", align 4
@wq_clamp_max_active._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.87, ptr @.str.88, ptr @.str, i32 4261, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [89 x i8], [39 x i8] } { [89 x i8] c"\014workqueue: max_active %d requested for %s is out of range, clamping between %d and %d\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"wq_clamp_max_active\00", [44 x i8] zeroinitializer }, align 32
@wq_clamp_max_active._entry_ptr = internal global ptr @wq_clamp_max_active._entry, section ".printk_index", align 4
@.str.89 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"%s%s\00", [27 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"(wq_completion)\00", [16 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"ordering guarantee broken for workqueue %s\0A\00", [52 x i8] zeroinitializer }, align 32
@rescuer_thread.__already_done.93 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rescuer_thread.__already_done.95 = internal unnamed_addr global i1 false, section ".data.once", align 1
@process_one_work.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@process_one_work._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.96, ptr @.str.97, ptr @.str, i32 2320, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [78 x i8], [50 x i8] } { [78 x i8] c"\013BUG: workqueue leaked lock or atomic: %s/0x%08x/%d\0A     last function: %ps\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"process_one_work\00", [47 x i8] zeroinitializer }, align 32
@process_one_work._entry_ptr = internal global ptr @process_one_work._entry, section ".printk_index", align 4
@worker_set_flags.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@trace_workqueue_execute_start.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_workqueue_execute_end.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@worker_clr_flags.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.98 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"wq_mayday_lock\00", [17 x i8] zeroinitializer }, align 32
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.99 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@unbound_pwq_by_node.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.101 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"RCU, wq->mutex or wq_pool_mutex should be held\00", [49 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.102 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@get_work_pool.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@show_pwq._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.103, ptr @.str.104, ptr @.str, i32 4745, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"\016  pwq %d:\00", [20 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"show_pwq\00", [23 x i8] zeroinitializer }, align 32
@show_pwq._entry_ptr = internal global ptr @show_pwq._entry, section ".printk_index", align 4
@show_pwq._entry.105 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.106, ptr @.str.104, ptr @.str, i32 4750, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"\01c active=%d/%d refcnt=%d%s\0A\00", [35 x i8] zeroinitializer }, align 32
@show_pwq._entry_ptr.107 = internal global ptr @show_pwq._entry.105, section ".printk_index", align 4
@.str.108 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c" MAYDAY\00", [24 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@show_pwq._entry.110 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.111, ptr @.str.104, ptr @.str, i32 4761, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"\016    in-flight:\00", [47 x i8] zeroinitializer }, align 32
@show_pwq._entry_ptr.112 = internal global ptr @show_pwq._entry.110, section ".printk_index", align 4
@show_pwq._entry.113 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.114, ptr @.str.104, ptr @.str, i32 4769, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"\01c%s %d%s:%ps\00", [18 x i8] zeroinitializer }, align 32
@show_pwq._entry_ptr.115 = internal global ptr @show_pwq._entry.113, section ".printk_index", align 4
@.str.116 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c",\00", [30 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"(RESCUER)\00", [22 x i8] zeroinitializer }, align 32
@show_pwq._entry.118 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.23, ptr @.str.104, ptr @.str, i32 4774, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@show_pwq._entry_ptr.119 = internal global ptr @show_pwq._entry.118, section ".printk_index", align 4
@show_pwq._entry.120 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.121, ptr @.str.104, ptr @.str, i32 4786, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"\016    pending:\00", [17 x i8] zeroinitializer }, align 32
@show_pwq._entry_ptr.122 = internal global ptr @show_pwq._entry.120, section ".printk_index", align 4
@show_pwq._entry.123 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.23, ptr @.str.104, ptr @.str, i32 4794, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@show_pwq._entry_ptr.124 = internal global ptr @show_pwq._entry.123, section ".printk_index", align 4
@show_pwq._entry.125 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.126, ptr @.str.104, ptr @.str, i32 4800, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"\016    inactive:\00", [16 x i8] zeroinitializer }, align 32
@show_pwq._entry_ptr.127 = internal global ptr @show_pwq._entry.125, section ".printk_index", align 4
@show_pwq._entry.128 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.23, ptr @.str.104, ptr @.str, i32 4805, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@show_pwq._entry_ptr.129 = internal global ptr @show_pwq._entry.128, section ".printk_index", align 4
@pr_cont_pool_info._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.130, ptr @.str.131, ptr @.str, i32 4717, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"\01c cpus=%*pbl\00", [18 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"pr_cont_pool_info\00", [46 x i8] zeroinitializer }, align 32
@pr_cont_pool_info._entry_ptr = internal global ptr @pr_cont_pool_info._entry, section ".printk_index", align 4
@pr_cont_pool_info._entry.132 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.133, ptr @.str.131, ptr @.str, i32 4719, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"\01c node=%d\00", [21 x i8] zeroinitializer }, align 32
@pr_cont_pool_info._entry_ptr.134 = internal global ptr @pr_cont_pool_info._entry.132, section ".printk_index", align 4
@pr_cont_pool_info._entry.135 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.136, ptr @.str.131, ptr @.str, i32 4720, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"\01c flags=0x%x nice=%d\00", [42 x i8] zeroinitializer }, align 32
@pr_cont_pool_info._entry_ptr.137 = internal global ptr @pr_cont_pool_info._entry.135, section ".printk_index", align 4
@pr_cont_work._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.138, ptr @.str.139, ptr @.str, i32 4731, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"\01c%s BAR(%d)\00", [19 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"pr_cont_work\00", [19 x i8] zeroinitializer }, align 32
@pr_cont_work._entry_ptr = internal global ptr @pr_cont_work._entry, section ".printk_index", align 4
@pr_cont_work._entry.140 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.141, ptr @.str.139, ptr @.str, i32 4733, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"\01c%s %ps\00", [23 x i8] zeroinitializer }, align 32
@pr_cont_work._entry_ptr.142 = internal global ptr @pr_cont_work._entry.140, section ".printk_index", align 4
@.str.143 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"worker_pool_idr.xa_lock\00", [40 x i8] zeroinitializer }, align 32
@show_one_worker_pool._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.144, ptr @.str.145, ptr @.str, i32 4872, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"\016pool %d:\00", [21 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"show_one_worker_pool\00", [43 x i8] zeroinitializer }, align 32
@show_one_worker_pool._entry_ptr = internal global ptr @show_one_worker_pool._entry, section ".printk_index", align 4
@show_one_worker_pool._entry.146 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.147, ptr @.str.145, ptr @.str, i32 4876, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"\01c hung=%us workers=%d\00", [41 x i8] zeroinitializer }, align 32
@show_one_worker_pool._entry_ptr.148 = internal global ptr @show_one_worker_pool._entry.146, section ".printk_index", align 4
@show_one_worker_pool._entry.149 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.150, ptr @.str.145, ptr @.str, i32 4879, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"\01c manager: %d\00", [17 x i8] zeroinitializer }, align 32
@show_one_worker_pool._entry_ptr.151 = internal global ptr @show_one_worker_pool._entry.149, section ".printk_index", align 4
@show_one_worker_pool._entry.152 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.153, ptr @.str.145, ptr @.str, i32 4882, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"\01c %s%d\00", [24 x i8] zeroinitializer }, align 32
@show_one_worker_pool._entry_ptr.154 = internal global ptr @show_one_worker_pool._entry.152, section ".printk_index", align 4
@.str.155 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"idle: \00", [25 x i8] zeroinitializer }, align 32
@show_one_worker_pool._entry.156 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.23, ptr @.str.145, ptr @.str, i32 4885, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@show_one_worker_pool._entry_ptr.157 = internal global ptr @show_one_worker_pool._entry.156, section ".printk_index", align 4
@.str.158 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"wq_pool_attach_mutex.wait_lock\00", [33 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"wq_pool_attach_mutex\00", [43 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%d:%d%s\00", [24 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"H\00", [30 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"u%d:%d\00", [25 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"kworker/%s\00", [21 x i8] zeroinitializer }, align 32
@worker_thread.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.164 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"kworker/dying\00", [18 x i8] zeroinitializer }, align 32
@worker_thread.__already_done.165 = internal unnamed_addr global i1 false, section ".data.once", align 1
@worker_leave_idle.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@worker_enter_idle.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@worker_enter_idle.__already_done.167 = internal unnamed_addr global i1 false, section ".data.once", align 1
@worker_enter_idle.__already_done.168 = internal unnamed_addr global i1 false, section ".data.once", align 1
@rebind_workers.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@rebind_workers.__already_done.169 = internal unnamed_addr global i1 false, section ".data.once", align 1
@restore_unbound_workers_cpumask.cpumask = internal global { %struct.cpumask, [28 x i8] } zeroinitializer, align 32
@restore_unbound_workers_cpumask.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@wq_update_unbound_numa._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.170, ptr @.str.171, ptr @.str, i32 4194, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"\014workqueue: allocation failed while updating NUMA affinity of \22%s\22\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"wq_update_unbound_numa\00", [41 x i8] zeroinitializer }, align 32
@wq_update_unbound_numa._entry_ptr = internal global ptr @wq_update_unbound_numa._entry, section ".printk_index", align 4
@unbind_workers.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@wq_sysfs_cpumask_attr = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.172, i16 420, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @wq_unbound_cpumask_show, ptr @wq_unbound_cpumask_store }, [36 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"cpumask\00", [24 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%*pb\0A\00", [26 x i8] zeroinitializer }, align 32
@wq_sysfs_groups = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @wq_sysfs_group, ptr null], [24 x i8] zeroinitializer }, align 32
@wq_sysfs_group = internal constant { %struct.attribute_group, [44 x i8] } { %struct.attribute_group { ptr null, ptr null, ptr null, ptr @wq_sysfs_attrs, ptr null }, [44 x i8] zeroinitializer }, align 32
@wq_sysfs_attrs = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @dev_attr_per_cpu, ptr @dev_attr_max_active, ptr null], [20 x i8] zeroinitializer }, align 32
@dev_attr_per_cpu = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.174, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @per_cpu_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_max_active = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.176, i16 420, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @max_active_show, ptr @max_active_store }, [36 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"per_cpu\00", [24 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%d\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"max_active\00", [21 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"%d\00", [29 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"pool_ids\00", [23 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"nice\00", [27 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"numa\00", [27 x i8] zeroinitializer }, align 32
@.str.181 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s%d:%d\00", [24 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"\0A\00", [30 x i8] zeroinitializer }, align 32
@wq_watchdog_timer = internal global { %struct.timer_list, [48 x i8] } zeroinitializer, align 32
@init_worker_pool.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@init_worker_pool.__key.184 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.185 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"(&pool->idle_timer)\00", [44 x i8] zeroinitializer }, align 32
@init_worker_pool.__key.186 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.187 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"(&pool->mayday_timer)\00", [42 x i8] zeroinitializer }, align 32
@xa_init_flags.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.188 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"&xa->xa_lock\00", [19 x i8] zeroinitializer }, align 32
@cpu_bit_bitmap = external dso_local local_unnamed_addr constant [33 x [1 x i32]], align 4
@wq_numa_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.189, ptr @.str.190, ptr @.str, i32 5961, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\016workqueue: NUMA affinity support disabled\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.190 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"wq_numa_init\00", [19 x i8] zeroinitializer }, align 32
@wq_numa_init._entry_ptr = internal global ptr @wq_numa_init._entry, section ".printk_index", align 4
@wq_numa_init._entry.191 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.192, ptr @.str.190, ptr @.str, i32 5967, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.192 = internal constant { [80 x i8], [48 x i8] } { [80 x i8] c"\014workqueue: NUMA node mapping not available for cpu%d, disabling NUMA support\0A\00", [48 x i8] zeroinitializer }, align 32
@wq_numa_init._entry_ptr.193 = internal global ptr @wq_numa_init._entry.191, section ".printk_index", align 4
@wq_watchdog_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.194 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"(&wq_watchdog_timer)\00", [43 x i8] zeroinitializer }, align 32
@wq_watchdog_timer_fn.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@wq_watchdog_timer_fn._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.195, ptr @.str.196, ptr @.str, i32 5878, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"\010BUG: workqueue lockup - pool\00", [33 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"wq_watchdog_timer_fn\00", [43 x i8] zeroinitializer }, align 32
@wq_watchdog_timer_fn._entry_ptr = internal global ptr @wq_watchdog_timer_fn._entry, section ".printk_index", align 4
@wq_watchdog_timer_fn._entry.197 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.198, ptr @.str.196, ptr @.str, i32 5881, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"\01c stuck for %us!\0A\00", [45 x i8] zeroinitializer }, align 32
@wq_watchdog_timer_fn._entry_ptr.199 = internal global ptr @wq_watchdog_timer_fn._entry.197, section ".printk_index", align 4
@__sancov_gen_cov_switch_values = internal global [14 x i64] [i64 12, i64 32, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12]
@___asan_gen_.200 = private unnamed_addr constant [16 x i8] c"wq_disable_numa\00", align 1
@___asan_gen_.202 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 301, i32 13 }
@___asan_gen_.203 = private unnamed_addr constant [19 x i8] c"wq_power_efficient\00", align 1
@___asan_gen_.205 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 305, i32 13 }
@___asan_gen_.206 = private unnamed_addr constant [22 x i8] c"wq_debug_force_rr_cpu\00", align 1
@___asan_gen_.208 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 336, i32 13 }
@___asan_gen_.209 = private unnamed_addr constant [34 x i8] c"str__workqueue__trace_system_name\00", align 1
@___asan_gen_.210 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.211 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.210, i32 36, i32 1 }
@___asan_gen_.212 = private unnamed_addr constant [40 x i8] c"trace_event_fields_workqueue_queue_work\00", align 1
@___asan_gen_.215 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_workqueue_queue_work\00", align 1
@___asan_gen_.218 = private unnamed_addr constant [31 x i8] c"print_fmt_workqueue_queue_work\00", align 1
@___asan_gen_.221 = private unnamed_addr constant [27 x i8] c"event_workqueue_queue_work\00", align 1
@___asan_gen_.224 = private unnamed_addr constant [43 x i8] c"trace_event_fields_workqueue_activate_work\00", align 1
@___asan_gen_.227 = private unnamed_addr constant [47 x i8] c"trace_event_type_funcs_workqueue_activate_work\00", align 1
@___asan_gen_.230 = private unnamed_addr constant [34 x i8] c"print_fmt_workqueue_activate_work\00", align 1
@___asan_gen_.233 = private unnamed_addr constant [30 x i8] c"event_workqueue_activate_work\00", align 1
@___asan_gen_.236 = private unnamed_addr constant [43 x i8] c"trace_event_fields_workqueue_execute_start\00", align 1
@___asan_gen_.239 = private unnamed_addr constant [47 x i8] c"trace_event_type_funcs_workqueue_execute_start\00", align 1
@___asan_gen_.242 = private unnamed_addr constant [34 x i8] c"print_fmt_workqueue_execute_start\00", align 1
@___asan_gen_.245 = private unnamed_addr constant [30 x i8] c"event_workqueue_execute_start\00", align 1
@___asan_gen_.248 = private unnamed_addr constant [41 x i8] c"trace_event_fields_workqueue_execute_end\00", align 1
@___asan_gen_.251 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_workqueue_execute_end\00", align 1
@___asan_gen_.254 = private unnamed_addr constant [32 x i8] c"print_fmt_workqueue_execute_end\00", align 1
@___asan_gen_.257 = private unnamed_addr constant [28 x i8] c"event_workqueue_execute_end\00", align 1
@___asan_gen_.259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.495, i32 108, i32 1 }
@___asan_gen_.260 = private unnamed_addr constant [17 x i8] c"work_debug_descr\00", align 1
@___asan_gen_.262 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 495, i32 37 }
@___asan_gen_.265 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 1639, i32 2 }
@___asan_gen_.266 = private unnamed_addr constant [10 x i8] c"wq_online\00", align 1
@___asan_gen_.269 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 2996, i32 2 }
@___asan_gen_.278 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 3008, i32 4 }
@___asan_gen_.284 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 3341, i32 3 }
@___asan_gen_.290 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 3372, i32 2 }
@___asan_gen_.291 = private unnamed_addr constant [14 x i8] c"wq_pool_mutex\00", align 1
@___asan_gen_.299 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4345, i32 2 }
@___asan_gen_.300 = private unnamed_addr constant [11 x i8] c"workqueues\00", align 1
@___asan_gen_.302 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 321, i32 8 }
@___asan_gen_.303 = private unnamed_addr constant [15 x i8] c"wq_mayday_lock\00", align 1
@___asan_gen_.314 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4454, i32 4 }
@___asan_gen_.323 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4708, i32 3 }
@___asan_gen_.329 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4710, i32 4 }
@___asan_gen_.335 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4711, i32 3 }
@___asan_gen_.344 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4828, i32 2 }
@___asan_gen_.353 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4912, i32 2 }
@___asan_gen_.354 = private unnamed_addr constant [16 x i8] c"worker_pool_idr\00", align 1
@___asan_gen_.359 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4917, i32 2 }
@___asan_gen_.360 = private unnamed_addr constant [21 x i8] c"wq_pool_attach_mutex\00", align 1
@___asan_gen_.365 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4949, i32 39 }
@___asan_gen_.368 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4952, i32 39 }
@___asan_gen_.374 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5201, i32 2 }
@___asan_gen_.375 = private unnamed_addr constant [19 x i8] c"workqueue_freezing\00", align 1
@___asan_gen_.376 = private unnamed_addr constant [19 x i8] c"wq_unbound_cpumask\00", align 1
@___asan_gen_.378 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 325, i32 22 }
@___asan_gen_.379 = private unnamed_addr constant [10 x i8] c"wq_subsys\00", align 1
@___asan_gen_.381 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5658, i32 24 }
@___asan_gen_.384 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5751, i32 29 }
@___asan_gen_.385 = private unnamed_addr constant [23 x i8] c"wq_sysfs_unbound_attrs\00", align 1
@___asan_gen_.387 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5650, i32 32 }
@___asan_gen_.388 = private unnamed_addr constant [20 x i8] c"wq_watchdog_touched\00", align 1
@___asan_gen_.390 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5826, i32 22 }
@___asan_gen_.391 = private unnamed_addr constant [23 x i8] c"wq_watchdog_thresh_ops\00", align 1
@___asan_gen_.393 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5932, i32 38 }
@___asan_gen_.394 = private unnamed_addr constant [19 x i8] c"wq_watchdog_thresh\00", align 1
@___asan_gen_.396 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5823, i32 22 }
@___asan_gen_.399 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 6017, i32 14 }
@___asan_gen_.400 = private unnamed_addr constant [10 x i8] c"pwq_cache\00", align 1
@___asan_gen_.402 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 296, i32 27 }
@___asan_gen_.403 = private unnamed_addr constant [21 x i8] c"unbound_std_wq_attrs\00", align 1
@___asan_gen_.405 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 351, i32 32 }
@___asan_gen_.406 = private unnamed_addr constant [17 x i8] c"ordered_wq_attrs\00", align 1
@___asan_gen_.408 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 354, i32 32 }
@___asan_gen_.411 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 6057, i32 30 }
@___asan_gen_.414 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 6058, i32 38 }
@___asan_gen_.417 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 6059, i32 35 }
@___asan_gen_.420 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 6060, i32 38 }
@___asan_gen_.423 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 6062, i32 40 }
@___asan_gen_.426 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 6064, i32 46 }
@___asan_gen_.429 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 6066, i32 56 }
@___asan_gen_.432 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 6111, i32 3 }
@___asan_gen_.433 = private unnamed_addr constant [18 x i8] c"unbound_pool_hash\00", align 1
@___asan_gen_.435 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 348, i32 8 }
@___asan_gen_.468 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.495, i32 59, i32 1 }
@___asan_gen_.471 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.495, i32 82, i32 1 }
@___asan_gen_.474 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 496, i32 11 }
@___asan_gen_.477 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 1509, i32 3 }
@___asan_gen_.478 = private unnamed_addr constant [42 x i8] c"wq_select_unbound_cpu.printed_dbg_warning\00", align 1
@___asan_gen_.487 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 1416, i32 3 }
@___asan_gen_.489 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.490 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.489, i32 108, i32 2 }
@___asan_gen_.495 = private unnamed_addr constant [36 x i8] c"../include/trace/events/workqueue.h\00", align 1
@___asan_gen_.496 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.495, i32 23, i32 1 }
@___asan_gen_.501 = private unnamed_addr constant [30 x i8] c"../include/linux/completion.h\00", align 1
@___asan_gen_.502 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.501, i32 87, i32 2 }
@___asan_gen_.505 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 2643, i32 2 }
@___asan_gen_.508 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 2646, i32 2 }
@___asan_gen_.514 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 2703, i32 2 }
@___asan_gen_.517 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 3134, i32 9 }
@___asan_gen_.523 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 315, i32 8 }
@___asan_gen_.526 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 3676, i32 2 }
@___asan_gen_.527 = private unnamed_addr constant [13 x i8] c"manager_wait\00", align 1
@___asan_gen_.529 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 319, i32 23 }
@___asan_gen_.535 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 3821, i32 2 }
@___asan_gen_.544 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 3908, i32 3 }
@___asan_gen_.553 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4260, i32 3 }
@___asan_gen_.556 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 3498, i32 36 }
@___asan_gen_.559 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 3498, i32 44 }
@___asan_gen_.562 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4243, i32 3 }
@___asan_gen_.571 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 2317, i32 3 }
@___asan_gen_.574 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 317, i32 8 }
@___asan_gen_.580 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.585, i32 695, i32 2 }
@___asan_gen_.583 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 577, i32 2 }
@___asan_gen_.585 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.586 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.585, i32 723, i32 2 }
@___asan_gen_.595 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4745, i32 2 }
@___asan_gen_.607 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4748, i32 2 }
@___asan_gen_.613 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4761, i32 3 }
@___asan_gen_.625 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4766, i32 4 }
@___asan_gen_.628 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4774, i32 3 }
@___asan_gen_.634 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4786, i32 3 }
@___asan_gen_.637 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4794, i32 3 }
@___asan_gen_.643 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4800, i32 3 }
@___asan_gen_.646 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4805, i32 3 }
@___asan_gen_.655 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4717, i32 2 }
@___asan_gen_.661 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4719, i32 3 }
@___asan_gen_.667 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4720, i32 2 }
@___asan_gen_.676 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4730, i32 3 }
@___asan_gen_.682 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4733, i32 3 }
@___asan_gen_.685 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 345, i32 8 }
@___asan_gen_.694 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4872, i32 2 }
@___asan_gen_.700 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4874, i32 2 }
@___asan_gen_.706 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4878, i32 3 }
@___asan_gen_.715 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4881, i32 3 }
@___asan_gen_.718 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4885, i32 2 }
@___asan_gen_.724 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 316, i32 8 }
@___asan_gen_.727 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 1962, i32 36 }
@___asan_gen_.730 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 1963, i32 30 }
@___asan_gen_.733 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 1965, i32 36 }
@___asan_gen_.736 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 1968, i32 12 }
@___asan_gen_.739 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 2412, i32 31 }
@___asan_gen_.740 = private unnamed_addr constant [8 x i8] c"cpumask\00", align 1
@___asan_gen_.742 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5097, i32 19 }
@___asan_gen_.751 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 4193, i32 3 }
@___asan_gen_.752 = private unnamed_addr constant [22 x i8] c"wq_sysfs_cpumask_attr\00", align 1
@___asan_gen_.754 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5693, i32 32 }
@___asan_gen_.757 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5694, i32 2 }
@___asan_gen_.760 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5669, i32 38 }
@___asan_gen_.761 = private unnamed_addr constant [16 x i8] c"wq_sysfs_groups\00", align 1
@___asan_gen_.764 = private unnamed_addr constant [15 x i8] c"wq_sysfs_group\00", align 1
@___asan_gen_.766 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5497, i32 1 }
@___asan_gen_.767 = private unnamed_addr constant [15 x i8] c"wq_sysfs_attrs\00", align 1
@___asan_gen_.769 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5492, i32 26 }
@___asan_gen_.770 = private unnamed_addr constant [17 x i8] c"dev_attr_per_cpu\00", align 1
@___asan_gen_.773 = private unnamed_addr constant [20 x i8] c"dev_attr_max_active\00", align 1
@___asan_gen_.778 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5467, i32 8 }
@___asan_gen_.781 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5465, i32 35 }
@___asan_gen_.784 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5490, i32 8 }
@___asan_gen_.787 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5484, i32 18 }
@___asan_gen_.790 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5651, i32 2 }
@___asan_gen_.793 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5652, i32 2 }
@___asan_gen_.796 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5654, i32 2 }
@___asan_gen_.799 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5510, i32 10 }
@___asan_gen_.802 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5514, i32 59 }
@___asan_gen_.803 = private unnamed_addr constant [18 x i8] c"wq_watchdog_timer\00", align 1
@___asan_gen_.805 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5824, i32 26 }
@___asan_gen_.808 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 3465, i32 2 }
@___asan_gen_.814 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 3475, i32 2 }
@___asan_gen_.820 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 3477, i32 2 }
@___asan_gen_.825 = private unnamed_addr constant [26 x i8] c"../include/linux/xarray.h\00", align 1
@___asan_gen_.826 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.825, i32 378, i32 2 }
@___asan_gen_.835 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5961, i32 3 }
@___asan_gen_.841 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5967, i32 4 }
@___asan_gen_.842 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.847 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5942, i32 2 }
@___asan_gen_.856 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5878, i32 4 }
@___asan_gen_.857 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.860 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.861 = private constant [22 x i8] c"../kernel/workqueue.c\00", align 1
@___asan_gen_.862 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.861, i32 5880, i32 4 }
@llvm.compiler.used = appending global [320 x ptr] [ptr @__UNIQUE_ID_debug_force_rr_cputype244, ptr @__UNIQUE_ID_disable_numatype242, ptr @__UNIQUE_ID_power_efficienttype243, ptr @__bpf_trace_tp_map_workqueue_activate_work, ptr @__bpf_trace_tp_map_workqueue_execute_end, ptr @__bpf_trace_tp_map_workqueue_execute_start, ptr @__bpf_trace_tp_map_workqueue_queue_work, ptr @__event_workqueue_activate_work, ptr @__event_workqueue_execute_end, ptr @__event_workqueue_execute_start, ptr @__event_workqueue_queue_work, ptr @__initcall__kmod_workqueue__344_5707_wq_sysfs_init1, ptr @__ksymtab___init_work, ptr @__ksymtab_alloc_workqueue, ptr @__ksymtab_cancel_delayed_work, ptr @__ksymtab_cancel_delayed_work_sync, ptr @__ksymtab_cancel_work_sync, ptr @__ksymtab_current_work, ptr @__ksymtab_delayed_work_timer_fn, ptr @__ksymtab_destroy_delayed_work_on_stack, ptr @__ksymtab_destroy_work_on_stack, ptr @__ksymtab_destroy_workqueue, ptr @__ksymtab_drain_workqueue, ptr @__ksymtab_execute_in_process_context, ptr @__ksymtab_flush_delayed_work, ptr @__ksymtab_flush_rcu_work, ptr @__ksymtab_flush_work, ptr @__ksymtab_flush_workqueue, ptr @__ksymtab_mod_delayed_work_on, ptr @__ksymtab_queue_delayed_work_on, ptr @__ksymtab_queue_rcu_work, ptr @__ksymtab_queue_work_node, ptr @__ksymtab_queue_work_on, ptr @__ksymtab_set_worker_desc, ptr @__ksymtab_system_freezable_power_efficient_wq, ptr @__ksymtab_system_freezable_wq, ptr @__ksymtab_system_highpri_wq, ptr @__ksymtab_system_long_wq, ptr @__ksymtab_system_power_efficient_wq, ptr @__ksymtab_system_unbound_wq, ptr @__ksymtab_system_wq, ptr @__ksymtab_work_busy, ptr @__ksymtab_work_on_cpu, ptr @__ksymtab_work_on_cpu_safe, ptr @__ksymtab_workqueue_congested, ptr @__ksymtab_workqueue_set_max_active, ptr @__param_debug_force_rr_cpu, ptr @__param_disable_numa, ptr @__param_power_efficient, ptr @__param_watchdog_thresh, ptr @__tracepoint_ptr_workqueue_activate_work, ptr @__tracepoint_ptr_workqueue_execute_end, ptr @__tracepoint_ptr_workqueue_execute_start, ptr @__tracepoint_ptr_workqueue_queue_work, ptr @__tracepoint_workqueue_activate_work, ptr @__tracepoint_workqueue_execute_end, ptr @__tracepoint_workqueue_execute_start, ptr @__tracepoint_workqueue_queue_work, ptr @destroy_workqueue._entry, ptr @destroy_workqueue._entry_ptr, ptr @drain_workqueue._entry, ptr @drain_workqueue._entry_ptr, ptr @event_class_workqueue_activate_work, ptr @event_class_workqueue_execute_end, ptr @event_class_workqueue_execute_start, ptr @event_class_workqueue_queue_work, ptr @event_workqueue_activate_work, ptr @event_workqueue_execute_end, ptr @event_workqueue_execute_start, ptr @event_workqueue_queue_work, ptr @pr_cont_pool_info._entry, ptr @pr_cont_pool_info._entry.132, ptr @pr_cont_pool_info._entry.135, ptr @pr_cont_pool_info._entry_ptr, ptr @pr_cont_pool_info._entry_ptr.134, ptr @pr_cont_pool_info._entry_ptr.137, ptr @pr_cont_work._entry, ptr @pr_cont_work._entry.140, ptr @pr_cont_work._entry_ptr, ptr @pr_cont_work._entry_ptr.142, ptr @print_worker_info._entry, ptr @print_worker_info._entry.19, ptr @print_worker_info._entry.22, ptr @print_worker_info._entry_ptr, ptr @print_worker_info._entry_ptr.21, ptr @print_worker_info._entry_ptr.24, ptr @process_one_work._entry, ptr @process_one_work._entry_ptr, ptr @show_all_workqueues._entry, ptr @show_all_workqueues._entry_ptr, ptr @show_one_worker_pool._entry, ptr @show_one_worker_pool._entry.146, ptr @show_one_worker_pool._entry.149, ptr @show_one_worker_pool._entry.152, ptr @show_one_worker_pool._entry.156, ptr @show_one_worker_pool._entry_ptr, ptr @show_one_worker_pool._entry_ptr.148, ptr @show_one_worker_pool._entry_ptr.151, ptr @show_one_worker_pool._entry_ptr.154, ptr @show_one_worker_pool._entry_ptr.157, ptr @show_one_workqueue._entry, ptr @show_one_workqueue._entry_ptr, ptr @show_pwq._entry, ptr @show_pwq._entry.105, ptr @show_pwq._entry.110, ptr @show_pwq._entry.113, ptr @show_pwq._entry.118, ptr @show_pwq._entry.120, ptr @show_pwq._entry.123, ptr @show_pwq._entry.125, ptr @show_pwq._entry.128, ptr @show_pwq._entry_ptr, ptr @show_pwq._entry_ptr.107, ptr @show_pwq._entry_ptr.112, ptr @show_pwq._entry_ptr.115, ptr @show_pwq._entry_ptr.119, ptr @show_pwq._entry_ptr.122, ptr @show_pwq._entry_ptr.124, ptr @show_pwq._entry_ptr.127, ptr @show_pwq._entry_ptr.129, ptr @wq_calc_node_cpumask._entry, ptr @wq_calc_node_cpumask._entry_ptr, ptr @wq_clamp_max_active._entry, ptr @wq_clamp_max_active._entry_ptr, ptr @wq_numa_init._entry, ptr @wq_numa_init._entry.191, ptr @wq_numa_init._entry_ptr, ptr @wq_numa_init._entry_ptr.193, ptr @wq_select_unbound_cpu._entry, ptr @wq_select_unbound_cpu._entry_ptr, ptr @wq_update_unbound_numa._entry, ptr @wq_update_unbound_numa._entry_ptr, ptr @wq_watchdog_timer_fn._entry, ptr @wq_watchdog_timer_fn._entry.197, ptr @wq_watchdog_timer_fn._entry_ptr, ptr @wq_watchdog_timer_fn._entry_ptr.199, ptr @wq_disable_numa, ptr @wq_power_efficient, ptr @wq_debug_force_rr_cpu, ptr @str__workqueue__trace_system_name, ptr @trace_event_fields_workqueue_queue_work, ptr @trace_event_type_funcs_workqueue_queue_work, ptr @print_fmt_workqueue_queue_work, ptr @trace_event_fields_workqueue_activate_work, ptr @trace_event_type_funcs_workqueue_activate_work, ptr @print_fmt_workqueue_activate_work, ptr @trace_event_fields_workqueue_execute_start, ptr @trace_event_type_funcs_workqueue_execute_start, ptr @print_fmt_workqueue_execute_start, ptr @trace_event_fields_workqueue_execute_end, ptr @trace_event_type_funcs_workqueue_execute_end, ptr @print_fmt_workqueue_execute_end, ptr @work_debug_descr, ptr @.str, ptr @wq_online, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @schedule_on_each_cpu.__key, ptr @.str.12, ptr @execute_in_process_context.__key, ptr @.str.13, ptr @wq_pool_mutex, ptr @alloc_workqueue.__key, ptr @.str.14, ptr @workqueues, ptr @wq_mayday_lock, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.20, ptr @.str.23, ptr @.str.25, ptr @.str.26, ptr @.str.28, ptr @.str.29, ptr @worker_pool_idr, ptr @.str.31, ptr @wq_pool_attach_mutex, ptr @.str.32, ptr @.str.33, ptr @work_on_cpu.__key, ptr @.str.34, ptr @workqueue_freezing, ptr @wq_unbound_cpumask, ptr @wq_subsys, ptr @.str.36, ptr @wq_sysfs_unbound_attrs, ptr @wq_watchdog_touched, ptr @wq_watchdog_thresh_ops, ptr @wq_watchdog_thresh, ptr @.str.37, ptr @pwq_cache, ptr @unbound_std_wq_attrs, ptr @ordered_wq_attrs, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @unbound_pool_hash, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.61, ptr @wq_select_unbound_cpu.printed_dbg_warning, ptr @.str.62, ptr @.str.63, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @init_completion.__key, ptr @.str.72, ptr @.str.75, ptr @.str.77, ptr @insert_wq_barrier.__key, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @manager_wait, ptr @init_pwq.__key, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.106, ptr @.str.108, ptr @.str.109, ptr @.str.111, ptr @.str.114, ptr @.str.116, ptr @.str.117, ptr @.str.121, ptr @.str.126, ptr @.str.130, ptr @.str.131, ptr @.str.133, ptr @.str.136, ptr @.str.138, ptr @.str.139, ptr @.str.141, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.147, ptr @.str.150, ptr @.str.153, ptr @.str.155, ptr @.str.158, ptr @.str.159, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @restore_unbound_workers_cpumask.cpumask, ptr @.str.170, ptr @.str.171, ptr @wq_sysfs_cpumask_attr, ptr @.str.172, ptr @.str.173, ptr @wq_sysfs_groups, ptr @wq_sysfs_group, ptr @wq_sysfs_attrs, ptr @dev_attr_per_cpu, ptr @dev_attr_max_active, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @.str.181, ptr @.str.183, ptr @wq_watchdog_timer, ptr @init_worker_pool.__key, ptr @init_worker_pool.__key.184, ptr @.str.185, ptr @init_worker_pool.__key.186, ptr @.str.187, ptr @xa_init_flags.__key, ptr @.str.188, ptr @.str.189, ptr @.str.190, ptr @.str.192, ptr @wq_watchdog_init.__key, ptr @.str.194, ptr @.str.195, ptr @.str.196, ptr @.str.198], section "llvm.metadata"
@0 = internal global [223 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_disable_numa to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.200 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_power_efficient to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.203 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_debug_force_rr_cpu to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.206 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__workqueue__trace_system_name to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.209 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_workqueue_queue_work to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.212 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_workqueue_queue_work to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_workqueue_queue_work to i32), i32 133, i32 192, i32 ptrtoint (ptr @___asan_gen_.218 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_workqueue_queue_work to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.221 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_workqueue_activate_work to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.224 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_workqueue_activate_work to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.227 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_workqueue_activate_work to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.230 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_workqueue_activate_work to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.233 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_workqueue_execute_start to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.236 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_workqueue_execute_start to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.239 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_workqueue_execute_start to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.242 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_workqueue_execute_start to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.245 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_workqueue_execute_end to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.248 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_workqueue_execute_end to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.251 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_workqueue_execute_end to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.254 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_workqueue_execute_end to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.257 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @work_debug_descr to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.260 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.262 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_online to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.266 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.269 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @drain_workqueue._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @schedule_on_each_cpu.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.284 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.284 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @execute_in_process_context.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.290 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_pool_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.291 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alloc_workqueue.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @workqueues to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.300 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_mayday_lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.303 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @destroy_workqueue._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_worker_info._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.323 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.323 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.323 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_worker_info._entry.19 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_worker_info._entry.22 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_one_workqueue._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_all_workqueues._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @worker_pool_idr to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.359 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_pool_attach_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.360 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.368 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @work_on_cpu.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @workqueue_freezing to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.375 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_unbound_cpumask to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.378 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_subsys to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_sysfs_unbound_attrs to i32), i32 140, i32 192, i32 ptrtoint (ptr @___asan_gen_.385 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_watchdog_touched to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_watchdog_thresh_ops to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.391 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_watchdog_thresh to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.399 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pwq_cache to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @unbound_std_wq_attrs to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ordered_wq_attrs to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.406 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.408 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.420 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.423 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.432 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @unbound_pool_hash to i32), i32 256, i32 320, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_select_unbound_cpu.printed_dbg_warning to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.478 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_select_unbound_cpu._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 74, i32 128, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_completion.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @insert_wq_barrier.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @manager_wait to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_pwq.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_calc_node_cpumask._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_clamp_max_active._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 89, i32 128, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @process_one_work._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 78, i32 128, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_pwq._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.595 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.595 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.595 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_pwq._entry.105 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_pwq._entry.110 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_pwq._entry.113 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_pwq._entry.118 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.628 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_pwq._entry.120 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.634 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.634 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_pwq._entry.123 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_pwq._entry.125 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_pwq._entry.128 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pr_cont_pool_info._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pr_cont_pool_info._entry.132 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pr_cont_pool_info._entry.135 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.667 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.667 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pr_cont_work._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pr_cont_work._entry.140 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_one_worker_pool._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_one_worker_pool._entry.146 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.700 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.700 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_one_worker_pool._entry.149 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_one_worker_pool._entry.152 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.715 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @show_one_worker_pool._entry.156 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.733 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.736 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @restore_unbound_workers_cpumask.cpumask to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.742 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_update_unbound_numa._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_sysfs_cpumask_attr to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.754 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.757 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.760 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_sysfs_groups to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_sysfs_group to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.764 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_sysfs_attrs to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.767 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_per_cpu to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.778 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_max_active to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.778 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.787 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.793 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.796 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.802 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_watchdog_timer to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.803 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_worker_pool.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_worker_pool.__key.184 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_worker_pool.__key.186 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @xa_init_flags.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_numa_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_numa_init._entry.191 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_watchdog_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_watchdog_timer_fn._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.856 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.856 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.856 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @wq_watchdog_timer_fn._entry.197 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.862 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.862 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_workqueue_queue_work(ptr nocapture readnone %__data, i32 noundef %req_cpu, ptr noundef %pwq, ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_workqueue_queue_work, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %req_cpu, ptr noundef %pwq, ptr noundef %work) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_workqueue_activate_work(ptr nocapture readnone %__data, ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_workqueue_activate_work, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %work) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_workqueue_execute_start(ptr nocapture readnone %__data, ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_workqueue_execute_start, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %work) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_workqueue_execute_end(ptr nocapture readnone %__data, ptr noundef %work, ptr noundef %function) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_workqueue_execute_end, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %work, ptr noundef %function) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_workqueue_queue_work(ptr noundef %__data, i32 noundef %req_cpu, ptr nocapture noundef readonly %pwq, ptr noundef %work) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #21
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !679

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !680

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #21
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %wq.i = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 1
  %3 = ptrtoint ptr %wq.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %wq.i, align 4
  %name.i = getelementptr inbounds %struct.workqueue_struct, ptr %4, i32 0, i32 19
  %call.i33 = tail call i32 @strlen(ptr noundef nonnull %name.i) #24
  %add = add i32 %call.i33, 29
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #21
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %add.i = shl i32 %call.i33, 16
  %or.i = add i32 %add.i, 65564
  %__data_loc_workqueue = getelementptr inbounds %struct.trace_event_raw_workqueue_queue_work, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %__data_loc_workqueue to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_workqueue, align 4
  %work6 = getelementptr inbounds %struct.trace_event_raw_workqueue_queue_work, ptr %call3, i32 0, i32 1
  %6 = ptrtoint ptr %work6 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %work, ptr %work6, align 4
  %func = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 2
  %7 = ptrtoint ptr %func to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %func, align 4
  %function = getelementptr inbounds %struct.trace_event_raw_workqueue_queue_work, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %function to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %8, ptr %function, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 28
  %10 = ptrtoint ptr %wq.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %wq.i, align 4
  %name = getelementptr inbounds %struct.workqueue_struct, ptr %11, i32 0, i32 19
  %tobool8.not = icmp eq ptr %name, null
  %spec.select = select i1 %tobool8.not, ptr @.str.46, ptr %name
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #25
  %req_cpu13 = getelementptr inbounds %struct.trace_event_raw_workqueue_queue_work, ptr %call3, i32 0, i32 4
  %12 = ptrtoint ptr %req_cpu13 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %req_cpu, ptr %req_cpu13, align 4
  %13 = ptrtoint ptr %pwq to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %pwq, align 512
  %cpu = getelementptr inbounds %struct.worker_pool, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %cpu, align 4
  %cpu14 = getelementptr inbounds %struct.trace_event_raw_workqueue_queue_work, ptr %call3, i32 0, i32 5
  %17 = ptrtoint ptr %cpu14 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %cpu14, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_workqueue_queue_work(ptr noundef %__data, i32 noundef %req_cpu, ptr nocapture noundef readonly %pwq, ptr noundef %work) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #21
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !681
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #21
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !681
  %wq.i = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 1
  %2 = ptrtoint ptr %wq.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %wq.i, align 4
  %name.i = getelementptr inbounds %struct.workqueue_struct, ptr %3, i32 0, i32 19
  %call.i = tail call i32 @strlen(ptr noundef nonnull %name.i) #24
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65564
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i.not = icmp eq ptr %17, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 40
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #21
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #21
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !669) #21
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_workqueue = getelementptr inbounds %struct.trace_event_raw_workqueue_queue_work, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %__data_loc_workqueue to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_workqueue, align 4
  %work17 = getelementptr inbounds %struct.trace_event_raw_workqueue_queue_work, ptr %call13, i32 0, i32 1
  %30 = ptrtoint ptr %work17 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %work, ptr %work17, align 4
  %func = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 2
  %31 = ptrtoint ptr %func to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %func, align 4
  %function = getelementptr inbounds %struct.trace_event_raw_workqueue_queue_work, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %function to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %32, ptr %function, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 28
  %34 = ptrtoint ptr %wq.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %wq.i, align 4
  %name = getelementptr inbounds %struct.workqueue_struct, ptr %35, i32 0, i32 19
  %tobool20.not = icmp eq ptr %name, null
  %spec.select = select i1 %tobool20.not, ptr @.str.46, ptr %name
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #25
  %req_cpu25 = getelementptr inbounds %struct.trace_event_raw_workqueue_queue_work, ptr %call13, i32 0, i32 4
  %36 = ptrtoint ptr %req_cpu25 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %req_cpu, ptr %req_cpu25, align 4
  %37 = ptrtoint ptr %pwq to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %pwq, align 512
  %cpu26 = getelementptr inbounds %struct.worker_pool, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %cpu26 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %cpu26, align 4
  %cpu27 = getelementptr inbounds %struct.trace_event_raw_workqueue_queue_work, ptr %call13, i32 0, i32 5
  %41 = ptrtoint ptr %cpu27 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %cpu27, align 4
  %42 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %rctx, align 4
  %44 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %43, ptr noundef %__data, i64 noundef 1, ptr noundef %45, ptr noundef %13, ptr noundef null) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_workqueue_activate_work(ptr noundef %__data, ptr noundef %work) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #21
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !679

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !680

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #21
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 12) #21
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %work6 = getelementptr inbounds %struct.trace_event_raw_workqueue_activate_work, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %work6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %work, ptr %work6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_workqueue_activate_work(ptr noundef %__data, ptr noundef %work) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #21
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !681
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #21
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !681
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 12, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #21
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #21
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !669) #21
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %work17 = getelementptr inbounds %struct.trace_event_raw_workqueue_activate_work, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %work17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %work, ptr %work17, align 4
  %28 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rctx, align 4
  %30 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 12, i32 noundef %29, ptr noundef %__data, i64 noundef 1, ptr noundef %31, ptr noundef %11, ptr noundef null) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_workqueue_execute_start(ptr noundef %__data, ptr noundef %work) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #21
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !679

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !680

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #21
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #21
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %work6 = getelementptr inbounds %struct.trace_event_raw_workqueue_execute_start, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %work6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %work, ptr %work6, align 4
  %func = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 2
  %4 = ptrtoint ptr %func to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %func, align 4
  %function = getelementptr inbounds %struct.trace_event_raw_workqueue_execute_start, ptr %call3, i32 0, i32 2
  %6 = ptrtoint ptr %function to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %5, ptr %function, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_workqueue_execute_start(ptr noundef %__data, ptr noundef %work) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #21
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !681
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #21
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !681
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #21
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #21
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !669) #21
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %work17 = getelementptr inbounds %struct.trace_event_raw_workqueue_execute_start, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %work17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %work, ptr %work17, align 4
  %func = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 2
  %28 = ptrtoint ptr %func to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %func, align 4
  %function = getelementptr inbounds %struct.trace_event_raw_workqueue_execute_start, ptr %call13, i32 0, i32 2
  %30 = ptrtoint ptr %function to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %29, ptr %function, align 4
  %31 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rctx, align 4
  %33 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %32, ptr noundef %__data, i64 noundef 1, ptr noundef %34, ptr noundef %11, ptr noundef null) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_workqueue_execute_end(ptr noundef %__data, ptr noundef %work, ptr noundef %function) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #21
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !679

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !680

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #21
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #21
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %work6 = getelementptr inbounds %struct.trace_event_raw_workqueue_execute_end, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %work6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %work, ptr %work6, align 4
  %function7 = getelementptr inbounds %struct.trace_event_raw_workqueue_execute_end, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %function7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %function, ptr %function7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_workqueue_execute_end(ptr noundef %__data, ptr noundef %work, ptr noundef %function) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #21
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !681
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #21
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !681
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #21
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #21
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !669) #21
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %work17 = getelementptr inbounds %struct.trace_event_raw_workqueue_execute_end, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %work17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %work, ptr %work17, align 4
  %function18 = getelementptr inbounds %struct.trace_event_raw_workqueue_execute_end, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %function18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %function, ptr %function18, align 4
  %29 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rctx, align 4
  %31 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %30, ptr noundef %__data, i64 noundef 1, ptr noundef %32, ptr noundef %11, ptr noundef null) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_workqueue_queue_work(ptr noundef %__data, i32 noundef %req_cpu, ptr noundef %pwq, ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %conv = zext i32 %req_cpu to i64
  %0 = ptrtoint ptr %pwq to i32
  %conv4 = zext i32 %0 to i64
  %1 = ptrtoint ptr %work to i32
  %conv8 = zext i32 %1 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_workqueue_activate_work(ptr noundef %__data, ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %work to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_workqueue_execute_start(ptr noundef %__data, ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %work to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_workqueue_execute_end(ptr noundef %__data, ptr noundef %work, ptr noundef %function) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %work to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %function to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__init_work(ptr noundef %work, i32 noundef %onstack) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %onstack)
  %tobool.not = icmp eq i32 %onstack, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @debug_object_init_on_stack(ptr noundef %work, ptr noundef nonnull @work_debug_descr) #21
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @debug_object_init(ptr noundef %work, ptr noundef nonnull @work_debug_descr) #21
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_object_init_on_stack(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_object_init(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @destroy_work_on_stack(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @debug_object_free(ptr noundef %work, ptr noundef nonnull @work_debug_descr) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_object_free(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @destroy_delayed_work_on_stack(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %timer = getelementptr inbounds %struct.delayed_work, ptr %work, i32 0, i32 1
  tail call void @destroy_timer_on_stack(ptr noundef %timer) #21
  tail call void @debug_object_free(ptr noundef %work, ptr noundef nonnull @work_debug_descr) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @destroy_timer_on_stack(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @wq_worker_running(ptr noundef %task) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @kthread_data(ptr noundef %task) #21
  %sleeping = getelementptr inbounds %struct.worker, ptr %call, i32 0, i32 12
  %0 = ptrtoint ptr %sleeping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sleeping, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %do.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.body:                                          ; preds = %entry
  %2 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %5, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !682
  %flags = getelementptr inbounds %struct.worker, ptr %call, i32 0, i32 10
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags, align 4
  %and = and i32 %7, 456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %if.then2, label %do.body.do.body4_crit_edge

do.body.do.body4_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body4

if.then2:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  %pool = getelementptr inbounds %struct.worker, ptr %call, i32 0, i32 7
  %8 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pool, align 4
  %nr_running = getelementptr inbounds %struct.worker_pool, ptr %9, i32 0, i32 6
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_running, i32 noundef 4) #21
  tail call void @llvm.prefetch.p0(ptr %nr_running, i32 1, i32 3, i32 1) #21
  %10 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_running, ptr %nr_running, i32 1, ptr elementtype(i32) %nr_running) #21, !srcloc !683
  br label %do.body4

do.body4:                                         ; preds = %if.then2, %do.body.do.body4_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !684
  %11 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i11 = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i11 to ptr
  %preempt_count.i.i12 = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %preempt_count.i.i12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %preempt_count.i.i12, align 4
  %sub.i = add i32 %14, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i12, align 4
  %15 = ptrtoint ptr %sleeping to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 0, ptr %sleeping, align 4
  br label %cleanup

cleanup:                                          ; preds = %do.body4, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kthread_data(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @wq_worker_sleeping(ptr noundef %task) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @kthread_data(ptr noundef %task) #21
  %flags = getelementptr inbounds %struct.worker, ptr %call, i32 0, i32 10
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %and = and i32 %1, 456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %pool1 = getelementptr inbounds %struct.worker, ptr %call, i32 0, i32 7
  %2 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool1, align 4
  %sleeping = getelementptr inbounds %struct.worker, ptr %call, i32 0, i32 12
  %4 = ptrtoint ptr %sleeping to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sleeping, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool2.not = icmp eq i32 %5, 0
  br i1 %tobool2.not, label %if.end4, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %6 = ptrtoint ptr %sleeping to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 1, ptr %sleeping, align 4
  tail call void @_raw_spin_lock_irq(ptr noundef %3) #21
  %7 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %flags, align 4
  %and7 = and i32 %8, 456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %tobool8.not = icmp eq i32 %and7, 0
  br i1 %tobool8.not, label %if.end11, label %if.end4.cleanup.sink.split_crit_edge

if.end4.cleanup.sink.split_crit_edge:             ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.sink.split

if.end11:                                         ; preds = %if.end4
  %nr_running = getelementptr inbounds %struct.worker_pool, ptr %3, i32 0, i32 6
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_running, i32 noundef 4) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !685
  tail call void @llvm.prefetch.p0(ptr %nr_running, i32 1, i32 3, i32 1) #21
  %9 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_running, ptr %nr_running, i32 1, ptr elementtype(i32) %nr_running) #21, !srcloc !686
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %9, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !687
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.i.i, label %land.lhs.true, label %if.end11.cleanup.sink.split_crit_edge

if.end11.cleanup.sink.split_crit_edge:            ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.sink.split

land.lhs.true:                                    ; preds = %if.end11
  %worklist = getelementptr inbounds %struct.worker_pool, ptr %3, i32 0, i32 7
  %10 = ptrtoint ptr %worklist to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %worklist, align 4
  %cmp.i.not = icmp eq ptr %11, %worklist
  br i1 %cmp.i.not, label %land.lhs.true.cleanup.sink.split_crit_edge, label %if.then15

land.lhs.true.cleanup.sink.split_crit_edge:       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.sink.split

if.then15:                                        ; preds = %land.lhs.true
  %idle_list.i = getelementptr inbounds %struct.worker_pool, ptr %3, i32 0, i32 10
  %12 = ptrtoint ptr %idle_list.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %idle_list.i, align 4
  %cmp.i.not.i = icmp eq ptr %13, %idle_list.i
  %tobool17.not36 = icmp eq ptr %13, null
  %tobool17.not = or i1 %cmp.i.not.i, %tobool17.not36
  br i1 %tobool17.not, label %if.then15.cleanup.sink.split_crit_edge, label %if.then18

if.then15.cleanup.sink.split_crit_edge:           ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.sink.split

if.then18:                                        ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #23
  %task19 = getelementptr inbounds %struct.worker, ptr %13, i32 0, i32 6
  %14 = ptrtoint ptr %task19 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task19, align 4
  %call20 = tail call i32 @wake_up_process(ptr noundef %15) #21
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.then18, %if.then15.cleanup.sink.split_crit_edge, %land.lhs.true.cleanup.sink.split_crit_edge, %if.end11.cleanup.sink.split_crit_edge, %if.end4.cleanup.sink.split_crit_edge
  tail call void @_raw_spin_unlock_irq(ptr noundef %3) #21
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wake_up_process(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @wq_worker_last_func(ptr noundef %task) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @kthread_data(ptr noundef %task) #21
  %last_func = getelementptr inbounds %struct.worker, ptr %call, i32 0, i32 15
  %0 = ptrtoint ptr %last_func to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %last_func, align 4
  ret ptr %1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @queue_work_on(i32 noundef %cpu, ptr noundef %wq, ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !688
  %and.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.then, label %entry.do.end11_crit_edge

entry.do.end11_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end11

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_off() #21
  br label %do.end11

do.end11:                                         ; preds = %if.then, %entry.do.end11_crit_edge
  %call12 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %work) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %if.then14, label %do.end11.do.body16_crit_edge

do.end11.do.body16_crit_edge:                     ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body16

if.then14:                                        ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @__queue_work(i32 noundef %cpu, ptr noundef %wq, ptr noundef %work)
  br label %do.body16

do.body16:                                        ; preds = %if.then14, %do.end11.do.body16_crit_edge
  br i1 %tobool.not, label %if.then25, label %do.body16.do.body27_crit_edge

do.body16.do.body27_crit_edge:                    ; preds = %do.body16
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body27

if.then25:                                        ; preds = %do.body16
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_on() #21
  br label %do.body27

do.body27:                                        ; preds = %if.then25, %do.body16.do.body27_crit_edge
  %1 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #21, !srcloc !689
  %and.i.i = and i32 %1, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool35.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool35.not, label %if.then39, label %do.body27.do.end42_crit_edge, !prof !680

do.body27.do.end42_crit_edge:                     ; preds = %do.body27
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end42

if.then39:                                        ; preds = %do.body27
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @warn_bogus_irq_restore() #21
  br label %do.end42

do.end42:                                         ; preds = %if.then39, %do.body27.do.end42_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #21, !srcloc !690
  ret i1 %tobool13.not
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__queue_work(i32 noundef %cpu, ptr noundef %wq, ptr noundef %work) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end87_crit_edge, label %land.lhs.true

entry.if.end87_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end87

land.lhs.true:                                    ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %4, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !691
  %5 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu14 = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu14 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu14, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !692
  %14 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i409 = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i409 to ptr
  %preempt_count.i.i410 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i410 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i410, align 4
  %sub.i = add i32 %17, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i410, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool21.not = icmp eq i32 %13, 0
  br i1 %tobool21.not, label %land.rhs, label %land.lhs.true.if.end87_crit_edge

land.lhs.true.if.end87_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end87

land.rhs:                                         ; preds = %land.lhs.true
  %18 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i411 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i411 to ptr
  %preempt_count.i.i412 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i412 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i412, align 4
  %add.i413 = add i32 %21, 1
  store volatile i32 %add.i413, ptr %preempt_count.i.i412, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !693
  %22 = ptrtoint ptr %cpu14 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cpu14, align 4
  %arrayidx45 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %23
  %24 = ptrtoint ptr %arrayidx45 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx45, align 4
  %add46 = add i32 %25, ptrtoint (ptr @hardirqs_enabled to i32)
  %26 = inttoptr i32 %add46 to ptr
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %26, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !694
  %29 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i414 = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i414 to ptr
  %preempt_count.i.i415 = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i415 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i415, align 4
  %sub.i416 = add i32 %32, -1
  store volatile i32 %sub.i416, ptr %preempt_count.i.i415, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool53.not = icmp eq i32 %28, 0
  br i1 %tobool53.not, label %land.rhs.if.end87_crit_edge, label %land.rhs56

land.rhs.if.end87_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end87

land.rhs56:                                       ; preds = %land.rhs
  %.b404 = load i1, ptr @__queue_work.__already_done, align 1
  br i1 %.b404, label %land.rhs56.if.end87_crit_edge, label %if.then, !prof !679

land.rhs56.if.end87_crit_edge:                    ; preds = %land.rhs56
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end87

if.then:                                          ; preds = %land.rhs56
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @__queue_work.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1450, i32 noundef 9, ptr noundef null) #21
  br label %if.end87

if.end87:                                         ; preds = %if.then, %land.rhs56.if.end87_crit_edge, %land.rhs.if.end87_crit_edge, %land.lhs.true.if.end87_crit_edge, %entry.if.end87_crit_edge
  %flags = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 22
  %33 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %flags, align 128
  %and = and i32 %34, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool97.not = icmp eq i32 %and, 0
  br i1 %tobool97.not, label %if.end87.if.end163_crit_edge, label %land.lhs.true104, !prof !679

if.end87.if.end163_crit_edge:                     ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end163

land.lhs.true104:                                 ; preds = %if.end87
  %call106 = tail call fastcc zeroext i1 @is_chained_work(ptr noundef %wq)
  br i1 %call106, label %land.lhs.true104.if.end163_crit_edge, label %land.rhs115

land.lhs.true104.if.end163_crit_edge:             ; preds = %land.lhs.true104
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end163

land.rhs115:                                      ; preds = %land.lhs.true104
  %.b400403 = load i1, ptr @__queue_work.__already_done.59, align 1
  br i1 %.b400403, label %land.rhs115.cleanup_crit_edge, label %if.then126, !prof !679

land.rhs115.cleanup_crit_edge:                    ; preds = %land.rhs115
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then126:                                       ; preds = %land.rhs115
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @__queue_work.__already_done.59, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1455, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end163:                                        ; preds = %land.lhs.true104.if.end163_crit_edge, %if.end87.if.end163_crit_edge
  %35 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i.i = and i32 %35, -16384
  %36 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %36, i32 0, i32 1
  %37 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %38, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !695
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #21
  %call.i = tail call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i, label %if.end163.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end163.rcu_read_lock.exit_crit_edge:           ; preds = %if.end163
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end163
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 696, ptr noundef nonnull @.str.100) #21
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end163.rcu_read_lock.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %cpu)
  %cmp = icmp eq i32 %cpu, 4
  %dep_map.i = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 2, i32 5
  %numa_pwq_tbl.i = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 24
  %cpu_pwqs = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 23
  %39 = ptrtoint ptr %work to i32
  %mul.i.i.i = mul i32 %39, 1640531527
  %shr.i.i = lshr i32 %mul.i.i.i, 26
  %func.i = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 2
  br label %retry

retry:                                            ; preds = %if.then223, %rcu_read_lock.exit
  %cpu.addr.0 = phi i32 [ %cpu, %rcu_read_lock.exit ], [ %cpu.addr.3, %if.then223 ]
  %40 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %flags, align 128
  %and165 = and i32 %41, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and165)
  %tobool166.not = icmp eq i32 %and165, 0
  br i1 %tobool166.not, label %if.else, label %if.then167

if.then167:                                       ; preds = %retry
  br i1 %cmp, label %if.then168, label %if.then167.if.end172_crit_edge

if.then167.if.end172_crit_edge:                   ; preds = %if.then167
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end172

if.then168:                                       ; preds = %if.then167
  %42 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i417 = and i32 %42, -16384
  %43 = inttoptr i32 %and.i417 to ptr
  %cpu170 = getelementptr inbounds %struct.thread_info, ptr %43, i32 0, i32 3
  %44 = ptrtoint ptr %cpu170 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %cpu170, align 4
  %46 = load i8, ptr @wq_debug_force_rr_cpu, align 1, !range !696
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %46)
  %tobool.not.i418 = icmp eq i8 %46, 0
  br i1 %tobool.not.i418, label %if.then.i419, label %if.else.i, !prof !679

if.then.i419:                                     ; preds = %if.then168
  %47 = load ptr, ptr @wq_unbound_cpumask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %48 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %48, i32 %45)
  %cmp.not.i.i.i.i = icmp ugt i32 %48, %45
  br i1 %cmp.not.i.i.i.i, label %if.then.i419.cpumask_test_cpu.exit.i_crit_edge, label %land.rhs.i.i.i.i

if.then.i419.cpumask_test_cpu.exit.i_crit_edge:   ; preds = %if.then.i419
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpumask_test_cpu.exit.i

land.rhs.i.i.i.i:                                 ; preds = %if.then.i419
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpumask_test_cpu.exit.i_crit_edge, label %if.then.i.i.i.i, !prof !679

land.rhs.i.i.i.i.cpumask_test_cpu.exit.i_crit_edge: ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpumask_test_cpu.exit.i

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.66, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpumask_test_cpu.exit.i

cpumask_test_cpu.exit.i:                          ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpumask_test_cpu.exit.i_crit_edge, %if.then.i419.cpumask_test_cpu.exit.i_crit_edge
  %div3.i.i.i = lshr i32 %45, 5
  %arrayidx.i.i.i = getelementptr i32, ptr %47, i32 %div3.i.i.i
  %49 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i420 = and i32 %45, 31
  %51 = shl nuw i32 1, %and.i.i.i420
  %52 = and i32 %50, %51
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool4.not.i = icmp eq i32 %52, 0
  br i1 %tobool4.not.i, label %cpumask_test_cpu.exit.i.cpumask_empty.exit.i_crit_edge, label %cpumask_test_cpu.exit.i.if.end172_crit_edge

cpumask_test_cpu.exit.i.if.end172_crit_edge:      ; preds = %cpumask_test_cpu.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end172

cpumask_test_cpu.exit.i.cpumask_empty.exit.i_crit_edge: ; preds = %cpumask_test_cpu.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpumask_empty.exit.i

if.else.i:                                        ; preds = %if.then168
  %.b75.i = load i1, ptr @wq_select_unbound_cpu.printed_dbg_warning, align 1
  br i1 %.b75.i, label %if.else.i.cpumask_empty.exit.i_crit_edge, label %do.end.i

if.else.i.cpumask_empty.exit.i_crit_edge:         ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpumask_empty.exit.i

do.end.i:                                         ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  %call8.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.62) #26
  store i1 true, ptr @wq_select_unbound_cpu.printed_dbg_warning, align 1
  br label %cpumask_empty.exit.i

cpumask_empty.exit.i:                             ; preds = %do.end.i, %if.else.i.cpumask_empty.exit.i_crit_edge, %cpumask_test_cpu.exit.i.cpumask_empty.exit.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %53 = load i32, ptr @nr_cpu_ids, align 4
  %54 = load ptr, ptr @wq_unbound_cpumask, align 4
  %call.i.i.i = tail call i32 @_find_first_bit_be(ptr noundef %54, i32 noundef %53) #21
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i.i, i32 %53)
  %cmp4.i.i.i = icmp eq i32 %call.i.i.i, %53
  br i1 %cmp4.i.i.i, label %cpumask_empty.exit.i.if.end172_crit_edge, label %if.end13.i

cpumask_empty.exit.i.if.end172_crit_edge:         ; preds = %cpumask_empty.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end172

if.end13.i:                                       ; preds = %cpumask_empty.exit.i
  %55 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i = and i32 %55, -16384
  %56 = inttoptr i32 %and.i.i to ptr
  %cpu26.i = getelementptr inbounds %struct.thread_info, ptr %56, i32 0, i32 3
  %57 = ptrtoint ptr %cpu26.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %cpu26.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %58
  %59 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %arrayidx.i, align 4
  %add.i421 = add i32 %60, ptrtoint (ptr @wq_rr_cpu_last to i32)
  %61 = inttoptr i32 %add.i421 to ptr
  %62 = ptrtoint ptr %61 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %61, align 4
  %64 = load ptr, ptr @wq_unbound_cpumask, align 4
  %call28.i = tail call i32 @cpumask_next_and(i32 noundef %63, ptr noundef %64, ptr noundef nonnull @__cpu_online_mask) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %65 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call28.i, i32 %65)
  %cmp.not.i = icmp ult i32 %call28.i, %65
  br i1 %cmp.not.i, label %if.end13.i.if.end46.i_crit_edge, label %if.end.i.i82.i, !prof !679

if.end13.i.if.end46.i_crit_edge:                  ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end46.i

if.end.i.i82.i:                                   ; preds = %if.end13.i
  %call6.i.i.i = tail call i32 @_find_first_and_bit(ptr noundef %64, ptr noundef nonnull @__cpu_online_mask, i32 noundef %65) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %66 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call6.i.i.i, i32 %66)
  %cmp37.not.i = icmp ult i32 %call6.i.i.i, %66
  br i1 %cmp37.not.i, label %if.end.i.i82.i.if.end46.i_crit_edge, label %if.end.i.i82.i.if.end172_crit_edge, !prof !679

if.end.i.i82.i.if.end172_crit_edge:               ; preds = %if.end.i.i82.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end172

if.end.i.i82.i.if.end46.i_crit_edge:              ; preds = %if.end.i.i82.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end46.i

if.end46.i:                                       ; preds = %if.end.i.i82.i.if.end46.i_crit_edge, %if.end13.i.if.end46.i_crit_edge
  %new_cpu.0.i = phi i32 [ %call6.i.i.i, %if.end.i.i82.i.if.end46.i_crit_edge ], [ %call28.i, %if.end13.i.if.end46.i_crit_edge ]
  %67 = ptrtoint ptr %cpu26.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %cpu26.i, align 4
  %arrayidx62.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %68
  %69 = ptrtoint ptr %arrayidx62.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %arrayidx62.i, align 4
  %add63.i = add i32 %70, ptrtoint (ptr @wq_rr_cpu_last to i32)
  %71 = inttoptr i32 %add63.i to ptr
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %new_cpu.0.i, ptr %71, align 4
  br label %if.end172

if.end172:                                        ; preds = %if.end46.i, %if.end.i.i82.i.if.end172_crit_edge, %cpumask_empty.exit.i.if.end172_crit_edge, %cpumask_test_cpu.exit.i.if.end172_crit_edge, %if.then167.if.end172_crit_edge
  %cpu.addr.1 = phi i32 [ %cpu.addr.0, %if.then167.if.end172_crit_edge ], [ %new_cpu.0.i, %if.end46.i ], [ %45, %cpumask_test_cpu.exit.i.if.end172_crit_edge ], [ %45, %cpumask_empty.exit.i.if.end172_crit_edge ], [ %45, %if.end.i.i82.i.if.end172_crit_edge ]
  %call.i422 = tail call i32 @rcu_read_lock_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i422)
  %tobool.not.i423 = icmp eq i32 %call.i422, 0
  br i1 %tobool.not.i423, label %land.lhs.true.i424, label %if.end172.unbound_pwq_by_node.exit_crit_edge

if.end172.unbound_pwq_by_node.exit_crit_edge:     ; preds = %if.end172
  call void @__sanitizer_cov_trace_pc() #23
  br label %unbound_pwq_by_node.exit

land.lhs.true.i424:                               ; preds = %if.end172
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool2.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool2.not.i, label %land.lhs.true3.i, label %land.lhs.true.i424.unbound_pwq_by_node.exit_crit_edge

land.lhs.true.i424.unbound_pwq_by_node.exit_crit_edge: ; preds = %land.lhs.true.i424
  call void @__sanitizer_cov_trace_pc() #23
  br label %unbound_pwq_by_node.exit

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i424
  %call.i2.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i2.i)
  %tobool5.not.i = icmp eq i32 %call.i2.i, 0
  br i1 %tobool5.not.i, label %land.lhs.true6.i, label %land.lhs.true3.i.unbound_pwq_by_node.exit_crit_edge

land.lhs.true3.i.unbound_pwq_by_node.exit_crit_edge: ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %unbound_pwq_by_node.exit

land.lhs.true6.i:                                 ; preds = %land.lhs.true3.i
  %call7.i = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %land.lhs.true6.i.unbound_pwq_by_node.exit_crit_edge, label %land.lhs.true9.i

land.lhs.true6.i.unbound_pwq_by_node.exit_crit_edge: ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %unbound_pwq_by_node.exit

land.lhs.true9.i:                                 ; preds = %land.lhs.true6.i
  %.b1.i = load i1, ptr @unbound_pwq_by_node.__warned, align 1
  br i1 %.b1.i, label %land.lhs.true9.i.unbound_pwq_by_node.exit_crit_edge, label %if.then.i425

land.lhs.true9.i.unbound_pwq_by_node.exit_crit_edge: ; preds = %land.lhs.true9.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %unbound_pwq_by_node.exit

if.then.i425:                                     ; preds = %land.lhs.true9.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @unbound_pwq_by_node.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 577, ptr noundef nonnull @.str.101) #21
  br label %unbound_pwq_by_node.exit

unbound_pwq_by_node.exit:                         ; preds = %if.then.i425, %land.lhs.true9.i.unbound_pwq_by_node.exit_crit_edge, %land.lhs.true6.i.unbound_pwq_by_node.exit_crit_edge, %land.lhs.true3.i.unbound_pwq_by_node.exit_crit_edge, %land.lhs.true.i424.unbound_pwq_by_node.exit_crit_edge, %if.end172.unbound_pwq_by_node.exit_crit_edge
  %73 = ptrtoint ptr %numa_pwq_tbl.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load volatile ptr, ptr %numa_pwq_tbl.i, align 4
  br label %if.end188

if.else:                                          ; preds = %retry
  br i1 %cmp, label %if.then175, label %if.else.do.body179_crit_edge

if.else.do.body179_crit_edge:                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body179

if.then175:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  %75 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i426 = and i32 %75, -16384
  %76 = inttoptr i32 %and.i426 to ptr
  %cpu177 = getelementptr inbounds %struct.thread_info, ptr %76, i32 0, i32 3
  %77 = ptrtoint ptr %cpu177 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %cpu177, align 4
  br label %do.body179

do.body179:                                       ; preds = %if.then175, %if.else.do.body179_crit_edge
  %cpu.addr.2 = phi i32 [ %78, %if.then175 ], [ %cpu.addr.0, %if.else.do.body179_crit_edge ]
  %79 = ptrtoint ptr %cpu_pwqs to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %cpu_pwqs, align 4
  %81 = ptrtoint ptr %80 to i32
  %arrayidx186 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu.addr.2
  %82 = ptrtoint ptr %arrayidx186 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %arrayidx186, align 4
  %add187 = add i32 %83, %81
  %84 = inttoptr i32 %add187 to ptr
  br label %if.end188

if.end188:                                        ; preds = %do.body179, %unbound_pwq_by_node.exit
  %pwq.0 = phi ptr [ %74, %unbound_pwq_by_node.exit ], [ %84, %do.body179 ]
  %cpu.addr.3 = phi i32 [ %cpu.addr.1, %unbound_pwq_by_node.exit ], [ %cpu.addr.2, %do.body179 ]
  %call189 = tail call fastcc ptr @get_work_pool(ptr noundef %work)
  %tobool190.not = icmp eq ptr %call189, null
  br i1 %tobool190.not, label %if.end188.if.end209.sink.split_crit_edge, label %land.lhs.true191

if.end188.if.end209.sink.split_crit_edge:         ; preds = %if.end188
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end209.sink.split

land.lhs.true191:                                 ; preds = %if.end188
  %85 = ptrtoint ptr %pwq.0 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %pwq.0, align 512
  %cmp192.not = icmp eq ptr %call189, %86
  br i1 %cmp192.not, label %land.lhs.true191.if.end209.sink.split_crit_edge, label %if.then193

land.lhs.true191.if.end209.sink.split_crit_edge:  ; preds = %land.lhs.true191
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end209.sink.split

if.then193:                                       ; preds = %land.lhs.true191
  tail call void @_raw_spin_lock(ptr noundef nonnull %call189) #21
  %arrayidx.i427 = getelementptr %struct.worker_pool, ptr %call189, i32 0, i32 13, i32 %shr.i.i
  %87 = ptrtoint ptr %arrayidx.i427 to i32
  call void @__asan_load4_noabort(i32 %87)
  %worker.024.i = load ptr, ptr %arrayidx.i427, align 4
  %tobool2.not25.i = icmp eq ptr %worker.024.i, null
  br i1 %tobool2.not25.i, label %if.then193.if.else201_crit_edge, label %if.then193.for.body.i_crit_edge

if.then193.for.body.i_crit_edge:                  ; preds = %if.then193
  br label %for.body.i

if.then193.if.else201_crit_edge:                  ; preds = %if.then193
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else201

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.then193.for.body.i_crit_edge
  %worker.026.i = phi ptr [ %worker.0.i, %for.inc.i.for.body.i_crit_edge ], [ %worker.024.i, %if.then193.for.body.i_crit_edge ]
  %current_work.i = getelementptr inbounds %struct.worker, ptr %worker.026.i, i32 0, i32 1
  %88 = ptrtoint ptr %current_work.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %current_work.i, align 4
  %cmp.i = icmp eq ptr %89, %work
  br i1 %cmp.i, label %land.lhs.true.i428, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

land.lhs.true.i428:                               ; preds = %for.body.i
  %current_func.i = getelementptr inbounds %struct.worker, ptr %worker.026.i, i32 0, i32 2
  %90 = ptrtoint ptr %current_func.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %current_func.i, align 4
  %92 = ptrtoint ptr %func.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %func.i, align 4
  %cmp3.i = icmp eq ptr %91, %93
  br i1 %cmp3.i, label %land.lhs.true196, label %land.lhs.true.i428.for.inc.i_crit_edge

land.lhs.true.i428.for.inc.i_crit_edge:           ; preds = %land.lhs.true.i428
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true.i428.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %94 = ptrtoint ptr %worker.026.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %worker.0.i = load ptr, ptr %worker.026.i, align 4
  %tobool2.not.i429 = icmp eq ptr %worker.0.i, null
  br i1 %tobool2.not.i429, label %for.inc.i.if.else201_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.if.else201_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else201

land.lhs.true196:                                 ; preds = %land.lhs.true.i428
  %current_pwq = getelementptr inbounds %struct.worker, ptr %worker.026.i, i32 0, i32 3
  %95 = ptrtoint ptr %current_pwq to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %current_pwq, align 4
  %wq197 = getelementptr inbounds %struct.pool_workqueue, ptr %96, i32 0, i32 1
  %97 = ptrtoint ptr %wq197 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %wq197, align 4
  %cmp198 = icmp eq ptr %98, %wq
  br i1 %cmp198, label %land.lhs.true196.if.end209_crit_edge, label %land.lhs.true196.if.else201_crit_edge

land.lhs.true196.if.else201_crit_edge:            ; preds = %land.lhs.true196
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else201

land.lhs.true196.if.end209_crit_edge:             ; preds = %land.lhs.true196
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end209

if.else201:                                       ; preds = %land.lhs.true196.if.else201_crit_edge, %for.inc.i.if.else201_crit_edge, %if.then193.if.else201_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef nonnull %call189) #21
  br label %if.end209.sink.split

if.end209.sink.split:                             ; preds = %if.else201, %land.lhs.true191.if.end209.sink.split_crit_edge, %if.end188.if.end209.sink.split_crit_edge
  %99 = ptrtoint ptr %pwq.0 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %pwq.0, align 512
  tail call void @_raw_spin_lock(ptr noundef %100) #21
  br label %if.end209

if.end209:                                        ; preds = %if.end209.sink.split, %land.lhs.true196.if.end209_crit_edge
  %pwq.2 = phi ptr [ %96, %land.lhs.true196.if.end209_crit_edge ], [ %pwq.0, %if.end209.sink.split ]
  %refcnt = getelementptr inbounds %struct.pool_workqueue, ptr %pwq.2, i32 0, i32 4
  %101 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %refcnt, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %102)
  %tobool210.not = icmp eq i32 %102, 0
  br i1 %tobool210.not, label %if.then219, label %if.end209.if.end284_crit_edge, !prof !680

if.end209.if.end284_crit_edge:                    ; preds = %if.end209
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end284

if.then219:                                       ; preds = %if.end209
  %103 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %flags, align 128
  %and221 = and i32 %104, 2
  %tobool222.not = icmp eq i32 %and221, 0
  br i1 %tobool222.not, label %land.end242, label %if.then223

if.then223:                                       ; preds = %if.then219
  call void @__sanitizer_cov_trace_pc() #23
  %105 = ptrtoint ptr %pwq.2 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %pwq.2, align 512
  tail call void @_raw_spin_unlock(ptr noundef %106) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !697
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #21, !srcloc !698
  br label %retry

land.end242:                                      ; preds = %if.then219
  %.b401402 = load i1, ptr @__queue_work.__already_done.60, align 1
  br i1 %.b401402, label %land.end242.if.end284_crit_edge, label %if.then249, !prof !679

land.end242.if.end284_crit_edge:                  ; preds = %land.end242
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end284

if.then249:                                       ; preds = %land.end242
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @__queue_work.__already_done.60, align 1
  %name = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 19
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1510, i32 noundef 9, ptr noundef nonnull @.str.61, ptr noundef %name, i32 noundef %cpu.addr.3) #21
  br label %if.end284

if.end284:                                        ; preds = %if.then249, %land.end242.if.end284_crit_edge, %if.end209.if.end284_crit_edge
  tail call fastcc void @trace_workqueue_queue_work(i32 noundef %cpu, ptr noundef %pwq.2, ptr noundef %work)
  %entry286 = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 1
  %107 = ptrtoint ptr %entry286 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load volatile ptr, ptr %entry286, align 4
  %cmp.i430.not = icmp eq ptr %108, %entry286
  br i1 %cmp.i430.not, label %if.end322.critedge, label %do.end306, !prof !679

do.end306:                                        ; preds = %if.end284
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1516, i32 noundef 9, ptr noundef null) #21
  br label %out

if.end322.critedge:                               ; preds = %if.end284
  %work_color = getelementptr inbounds %struct.pool_workqueue, ptr %pwq.2, i32 0, i32 2
  %109 = ptrtoint ptr %work_color to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %work_color, align 8
  %arrayidx323 = getelementptr %struct.pool_workqueue, ptr %pwq.2, i32 0, i32 5, i32 %110
  %111 = ptrtoint ptr %arrayidx323 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %arrayidx323, align 4
  %inc = add i32 %112, 1
  store i32 %inc, ptr %arrayidx323, align 4
  %113 = load i32, ptr %work_color, align 8
  %shl.i = shl i32 %113, 5
  %nr_active = getelementptr inbounds %struct.pool_workqueue, ptr %pwq.2, i32 0, i32 6
  %114 = ptrtoint ptr %nr_active to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %nr_active, align 4
  %max_active = getelementptr inbounds %struct.pool_workqueue, ptr %pwq.2, i32 0, i32 7
  %116 = ptrtoint ptr %max_active to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %max_active, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %115, i32 %117)
  %cmp326 = icmp slt i32 %115, %117
  br i1 %cmp326, label %if.then333, label %if.else343, !prof !679

if.then333:                                       ; preds = %if.end322.critedge
  tail call fastcc void @trace_workqueue_activate_work(ptr noundef %work)
  %118 = ptrtoint ptr %nr_active to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %nr_active, align 4
  %inc335 = add i32 %119, 1
  store i32 %inc335, ptr %nr_active, align 4
  %120 = ptrtoint ptr %pwq.2 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %pwq.2, align 512
  %worklist337 = getelementptr inbounds %struct.worker_pool, ptr %121, i32 0, i32 7
  %122 = ptrtoint ptr %worklist337 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load volatile ptr, ptr %worklist337, align 4
  %cmp.i431.not = icmp eq ptr %123, %worklist337
  br i1 %cmp.i431.not, label %if.then340, label %if.then333.if.end344_crit_edge

if.then333.if.end344_crit_edge:                   ; preds = %if.then333
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end344

if.then340:                                       ; preds = %if.then333
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %124 = load volatile i32, ptr @jiffies, align 128
  %watchdog_ts = getelementptr inbounds %struct.worker_pool, ptr %121, i32 0, i32 5
  %125 = ptrtoint ptr %watchdog_ts to i32
  call void @__asan_store4_noabort(i32 %125)
  store i32 %124, ptr %watchdog_ts, align 4
  br label %if.end344

if.else343:                                       ; preds = %if.end322.critedge
  call void @__sanitizer_cov_trace_pc() #23
  %or = or i32 %shl.i, 2
  %inactive_works = getelementptr inbounds %struct.pool_workqueue, ptr %pwq.2, i32 0, i32 8
  br label %if.end344

if.end344:                                        ; preds = %if.else343, %if.then340, %if.then333.if.end344_crit_edge
  %work_flags.0 = phi i32 [ %shl.i, %if.then340 ], [ %shl.i, %if.then333.if.end344_crit_edge ], [ %or, %if.else343 ]
  %worklist.0 = phi ptr [ %worklist337, %if.then340 ], [ %worklist337, %if.then333.if.end344_crit_edge ], [ %inactive_works, %if.else343 ]
  %call.i433 = tail call i32 @debug_object_activate(ptr noundef %work, ptr noundef nonnull @work_debug_descr) #21
  tail call fastcc void @insert_work(ptr noundef %pwq.2, ptr noundef %work, ptr noundef %worklist.0, i32 noundef %work_flags.0)
  br label %out

out:                                              ; preds = %if.end344, %do.end306
  %126 = ptrtoint ptr %pwq.2 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %pwq.2, align 512
  tail call void @_raw_spin_unlock(ptr noundef %127) #21
  %call.i434 = tail call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i434, label %out.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i437

out.rcu_read_unlock.exit_crit_edge:               ; preds = %out
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

land.lhs.true.i437:                               ; preds = %out
  %call1.i435 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i435)
  %tobool.not.i436 = icmp eq i32 %call1.i435, 0
  br i1 %tobool.not.i436, label %land.lhs.true.i437.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i439

land.lhs.true.i437.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i437
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

land.lhs.true2.i439:                              ; preds = %land.lhs.true.i437
  %.b4.i438 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i438, label %land.lhs.true2.i439.rcu_read_unlock.exit_crit_edge, label %if.then.i440

land.lhs.true2.i439.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i439
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

if.then.i440:                                     ; preds = %land.lhs.true2.i439
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 724, ptr noundef nonnull @.str.102) #21
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i440, %land.lhs.true2.i439.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i437.rcu_read_unlock.exit_crit_edge, %out.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !699
  %128 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i.i441 = and i32 %128, -16384
  %129 = inttoptr i32 %and.i.i.i.i.i441 to ptr
  %preempt_count.i.i.i.i442 = getelementptr inbounds %struct.thread_info, ptr %129, i32 0, i32 1
  %130 = ptrtoint ptr %preempt_count.i.i.i.i442 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load volatile i32, ptr %preempt_count.i.i.i.i442, align 4
  %sub.i.i.i443 = add i32 %131, -1
  store volatile i32 %sub.i.i.i443, ptr %preempt_count.i.i.i.i442, align 4
  tail call void @rcu_read_unlock_strict() #21
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #21
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit, %if.then126, %land.rhs115.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @queue_work_node(i32 %node, ptr noundef %wq, ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %flags1 = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 22
  %0 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags1, align 128
  %and = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end30_crit_edge

entry.if.end30_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end30

land.rhs:                                         ; preds = %entry
  %.b103 = load i1, ptr @queue_work_node.__already_done, align 1
  br i1 %.b103, label %land.rhs.if.end30_crit_edge, label %if.then, !prof !679

land.rhs.if.end30_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end30

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @queue_work_node.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1639, i32 noundef 9, ptr noundef null) #21
  br label %if.end30

if.end30:                                         ; preds = %if.then, %land.rhs.if.end30_crit_edge, %entry.if.end30_crit_edge
  %2 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !688
  %and.i = and i32 %2, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool50.not = icmp eq i32 %and.i, 0
  br i1 %tobool50.not, label %if.then51, label %if.end30.do.end54_crit_edge

if.end30.do.end54_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end54

if.then51:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_off() #21
  br label %do.end54

do.end54:                                         ; preds = %if.then51, %if.end30.do.end54_crit_edge
  %call55 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %work) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call55)
  %tobool56.not = icmp eq i32 %call55, 0
  br i1 %tobool56.not, label %if.then57, label %do.end54.do.body60_crit_edge

do.end54.do.body60_crit_edge:                     ; preds = %do.end54
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body60

if.then57:                                        ; preds = %do.end54
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @__queue_work(i32 noundef 4, ptr noundef %wq, ptr noundef %work)
  br label %do.body60

do.body60:                                        ; preds = %if.then57, %do.end54.do.body60_crit_edge
  br i1 %tobool50.not, label %if.then69, label %do.body60.do.body71_crit_edge

do.body60.do.body71_crit_edge:                    ; preds = %do.body60
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body71

if.then69:                                        ; preds = %do.body60
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_on() #21
  br label %do.body71

do.body71:                                        ; preds = %if.then69, %do.body60.do.body71_crit_edge
  %3 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #21, !srcloc !689
  %and.i.i = and i32 %3, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool79.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool79.not, label %if.then88, label %do.body71.do.end91_crit_edge, !prof !680

do.body71.do.end91_crit_edge:                     ; preds = %do.body71
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end91

if.then88:                                        ; preds = %do.body71
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @warn_bogus_irq_restore() #21
  br label %do.end91

do.end91:                                         ; preds = %if.then88, %do.body71.do.end91_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %2) #21, !srcloc !690
  ret i1 %tobool56.not
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @delayed_work_timer_fn(ptr noundef %t) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %t, i32 -44
  %cpu = getelementptr i8, ptr %t, i32 52
  %0 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cpu, align 4
  %wq = getelementptr i8, ptr %t, i32 48
  %2 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %wq, align 4
  tail call fastcc void @__queue_work(i32 noundef %1, ptr noundef %3, ptr noundef %add.ptr)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @queue_delayed_work_on(i32 noundef %cpu, ptr noundef %wq, ptr noundef %dwork, i32 noundef %delay) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !688
  %and.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.then, label %entry.do.end11_crit_edge

entry.do.end11_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end11

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_off() #21
  br label %do.end11

do.end11:                                         ; preds = %if.then, %entry.do.end11_crit_edge
  %call12 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %dwork) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %if.then14, label %do.end11.do.body16_crit_edge

do.end11.do.body16_crit_edge:                     ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body16

if.then14:                                        ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @__queue_delayed_work(i32 noundef %cpu, ptr noundef %wq, ptr noundef %dwork, i32 noundef %delay)
  br label %do.body16

do.body16:                                        ; preds = %if.then14, %do.end11.do.body16_crit_edge
  br i1 %tobool.not, label %if.then25, label %do.body16.do.body27_crit_edge

do.body16.do.body27_crit_edge:                    ; preds = %do.body16
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body27

if.then25:                                        ; preds = %do.body16
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_on() #21
  br label %do.body27

do.body27:                                        ; preds = %if.then25, %do.body16.do.body27_crit_edge
  %1 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #21, !srcloc !689
  %and.i.i = and i32 %1, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool35.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool35.not, label %if.then39, label %do.body27.do.end42_crit_edge, !prof !680

do.body27.do.end42_crit_edge:                     ; preds = %do.body27
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end42

if.then39:                                        ; preds = %do.body27
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @warn_bogus_irq_restore() #21
  br label %do.end42

do.end42:                                         ; preds = %if.then39, %do.body27.do.end42_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #21, !srcloc !690
  ret i1 %tobool13.not
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__queue_delayed_work(i32 noundef %cpu, ptr noundef %wq, ptr noundef %dwork, i32 noundef %delay) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %timer1 = getelementptr inbounds %struct.delayed_work, ptr %dwork, i32 0, i32 1
  %tobool.not = icmp eq ptr %wq, null
  br i1 %tobool.not, label %land.rhs, label %entry.if.end31_crit_edge

entry.if.end31_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end31

land.rhs:                                         ; preds = %entry
  %.b248 = load i1, ptr @__queue_delayed_work.__already_done, align 1
  br i1 %.b248, label %land.rhs.if.end31_crit_edge, label %if.then, !prof !679

land.rhs.if.end31_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end31

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @__queue_delayed_work.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1670, i32 noundef 9, ptr noundef null) #21
  br label %if.end31

if.end31:                                         ; preds = %if.then, %land.rhs.if.end31_crit_edge, %entry.if.end31_crit_edge
  %function = getelementptr inbounds %struct.delayed_work, ptr %dwork, i32 0, i32 1, i32 2
  %0 = ptrtoint ptr %function to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %function, align 4
  %cmp.not = icmp eq ptr %1, @delayed_work_timer_fn
  br i1 %cmp.not, label %if.end31.if.end84_crit_edge, label %land.rhs46

if.end31.if.end84_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end84

land.rhs46:                                       ; preds = %if.end31
  %.b242247 = load i1, ptr @__queue_delayed_work.__already_done.69, align 1
  br i1 %.b242247, label %land.rhs46.if.end84_crit_edge, label %if.then57, !prof !679

land.rhs46.if.end84_crit_edge:                    ; preds = %land.rhs46
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end84

if.then57:                                        ; preds = %land.rhs46
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @__queue_delayed_work.__already_done.69, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1671, i32 noundef 9, ptr noundef null) #21
  br label %if.end84

if.end84:                                         ; preds = %if.then57, %land.rhs46.if.end84_crit_edge, %if.end31.if.end84_crit_edge
  %pprev.i.i = getelementptr inbounds %struct.delayed_work, ptr %dwork, i32 0, i32 1, i32 0, i32 1
  %2 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %pprev.i.i, align 4
  %tobool.not.i.i.not = icmp eq ptr %3, null
  br i1 %tobool.not.i.i.not, label %if.end84.if.end138_crit_edge, label %land.rhs100

if.end84.if.end138_crit_edge:                     ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end138

land.rhs100:                                      ; preds = %if.end84
  %.b243246 = load i1, ptr @__queue_delayed_work.__already_done.70, align 1
  br i1 %.b243246, label %land.rhs100.if.end138_crit_edge, label %if.then111, !prof !679

land.rhs100.if.end138_crit_edge:                  ; preds = %land.rhs100
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end138

if.then111:                                       ; preds = %land.rhs100
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @__queue_delayed_work.__already_done.70, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1672, i32 noundef 9, ptr noundef null) #21
  br label %if.end138

if.end138:                                        ; preds = %if.then111, %land.rhs100.if.end138_crit_edge, %if.end84.if.end138_crit_edge
  %entry147 = getelementptr inbounds %struct.work_struct, ptr %dwork, i32 0, i32 1
  %4 = ptrtoint ptr %entry147 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %entry147, align 4
  %cmp.i.not = icmp eq ptr %5, %entry147
  br i1 %cmp.i.not, label %if.end138.if.end196_crit_edge, label %land.rhs158

if.end138.if.end196_crit_edge:                    ; preds = %if.end138
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end196

land.rhs158:                                      ; preds = %if.end138
  %.b244245 = load i1, ptr @__queue_delayed_work.__already_done.71, align 1
  br i1 %.b244245, label %land.rhs158.if.end196_crit_edge, label %if.then169, !prof !679

land.rhs158.if.end196_crit_edge:                  ; preds = %land.rhs158
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end196

if.then169:                                       ; preds = %land.rhs158
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @__queue_delayed_work.__already_done.71, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1673, i32 noundef 9, ptr noundef null) #21
  br label %if.end196

if.end196:                                        ; preds = %if.then169, %land.rhs158.if.end196_crit_edge, %if.end138.if.end196_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %delay)
  %tobool204.not = icmp eq i32 %delay, 0
  br i1 %tobool204.not, label %if.then205, label %if.end207

if.then205:                                       ; preds = %if.end196
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @__queue_work(i32 noundef %cpu, ptr noundef %wq, ptr noundef %dwork)
  br label %cleanup

if.end207:                                        ; preds = %if.end196
  %wq208 = getelementptr inbounds %struct.delayed_work, ptr %dwork, i32 0, i32 2
  %6 = ptrtoint ptr %wq208 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %wq, ptr %wq208, align 4
  %cpu209 = getelementptr inbounds %struct.delayed_work, ptr %dwork, i32 0, i32 3
  %7 = ptrtoint ptr %cpu209 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %cpu, ptr %cpu209, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %8 = load volatile i32, ptr @jiffies, align 128
  %add = add i32 %8, %delay
  %expires = getelementptr inbounds %struct.delayed_work, ptr %dwork, i32 0, i32 1, i32 1
  %9 = ptrtoint ptr %expires to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %add, ptr %expires, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %cpu)
  %cmp210.not = icmp eq i32 %cpu, 4
  br i1 %cmp210.not, label %if.else, label %if.then217, !prof !679

if.then217:                                       ; preds = %if.end207
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @add_timer_on(ptr noundef %timer1, i32 noundef %cpu) #21
  br label %cleanup

if.else:                                          ; preds = %if.end207
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @add_timer(ptr noundef %timer1) #21
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then217, %if.then205
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @mod_delayed_work_on(i32 noundef %cpu, ptr noundef %wq, ptr noundef %dwork, i32 noundef %delay) #0 align 64 {
entry:
  %flags = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flags) #21
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %flags, align 4, !annotation !681
  br label %do.body

do.body:                                          ; preds = %do.body.do.body_crit_edge, %entry
  %call = call fastcc i32 @try_to_grab_pending(ptr noundef %dwork, i1 noundef zeroext true, ptr noundef nonnull %flags)
  %cmp = icmp eq i32 %call, -11
  br i1 %cmp, label %do.body.do.body_crit_edge, label %do.end, !prof !680

do.body.do.body_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body

do.end:                                           ; preds = %do.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call)
  %cmp2 = icmp sgt i32 %call, -1
  br i1 %cmp2, label %if.then, label %do.end.if.end40_crit_edge, !prof !679

do.end.if.end40_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end40

if.then:                                          ; preds = %do.end
  tail call fastcc void @__queue_delayed_work(i32 noundef %cpu, ptr noundef %wq, ptr noundef %dwork, i32 noundef %delay)
  %1 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags, align 4
  %and.i = and i32 %2, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool13.not = icmp eq i32 %and.i, 0
  br i1 %tobool13.not, label %if.then14, label %if.then.do.body15_crit_edge

if.then.do.body15_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body15

if.then14:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_on() #21
  br label %do.body15

do.body15:                                        ; preds = %if.then14, %if.then.do.body15_crit_edge
  %3 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #21, !srcloc !689
  %and.i.i = and i32 %3, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool23.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool23.not, label %if.then32, label %do.body15.do.end35_crit_edge, !prof !680

do.body15.do.end35_crit_edge:                     ; preds = %do.body15
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end35

if.then32:                                        ; preds = %do.body15
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @warn_bogus_irq_restore() #21
  br label %do.end35

do.end35:                                         ; preds = %if.then32, %do.body15.do.end35_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %2) #21, !srcloc !690
  br label %if.end40

if.end40:                                         ; preds = %do.end35, %do.end.if.end40_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool41 = icmp ne i32 %call, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flags) #21
  ret i1 %tobool41
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @try_to_grab_pending(ptr noundef %work, i1 noundef zeroext %is_dwork, ptr nocapture noundef %flags) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !688
  %1 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %0, ptr %flags, align 4
  %and.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.then, label %entry.do.end11_crit_edge

entry.do.end11_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end11

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_off() #21
  br label %do.end11

do.end11:                                         ; preds = %if.then, %entry.do.end11_crit_edge
  br i1 %is_dwork, label %if.then13, label %do.end11.if.end21_crit_edge

do.end11.if.end21_crit_edge:                      ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end21

if.then13:                                        ; preds = %do.end11
  %timer = getelementptr inbounds %struct.delayed_work, ptr %work, i32 0, i32 1
  %call15 = tail call i32 @del_timer(ptr noundef %timer) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %if.then13.if.end21_crit_edge, label %if.then13.cleanup93_crit_edge

if.then13.cleanup93_crit_edge:                    ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup93

if.then13.if.end21_crit_edge:                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end21

if.end21:                                         ; preds = %if.then13.if.end21_crit_edge, %do.end11.if.end21_crit_edge
  %call22 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %work) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %if.end21.cleanup93_crit_edge, label %if.end25

if.end21.cleanup93_crit_edge:                     ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup93

if.end25:                                         ; preds = %if.end21
  %2 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %5, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !695
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #21
  %call.i = tail call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i, label %if.end25.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end25.rcu_read_lock.exit_crit_edge:            ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end25
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 696, ptr noundef nonnull @.str.100) #21
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end25.rcu_read_lock.exit_crit_edge
  %call26 = tail call fastcc ptr @get_work_pool(ptr noundef %work)
  %tobool27.not = icmp eq ptr %call26, null
  br i1 %tobool27.not, label %rcu_read_lock.exit.fail_crit_edge, label %if.end29

rcu_read_lock.exit.fail_crit_edge:                ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %fail

if.end29:                                         ; preds = %rcu_read_lock.exit
  tail call void @_raw_spin_lock(ptr noundef nonnull %call26) #21
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %work, i32 noundef 4) #21
  %6 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %work, align 4
  %and.i115 = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i115)
  %tobool.not.i116 = icmp eq i32 %and.i115, 0
  %and2.i = and i32 %7, -512
  %8 = inttoptr i32 %and2.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i)
  %tobool31.not139 = icmp eq i32 %and2.i, 0
  %tobool31.not = or i1 %tobool.not.i116, %tobool31.not139
  br i1 %tobool31.not, label %if.end29.if.end43_crit_edge, label %land.lhs.true

if.end29.if.end43_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end43

land.lhs.true:                                    ; preds = %if.end29
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 512
  %cmp33 = icmp eq ptr %10, %call26
  br i1 %cmp33, label %if.then35, label %land.lhs.true.if.end43_crit_edge

land.lhs.true.if.end43_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end43

if.then35:                                        ; preds = %land.lhs.true
  tail call void @debug_object_deactivate(ptr noundef %work, ptr noundef nonnull @work_debug_descr) #21
  %11 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %work, align 4
  %and = and i32 %12, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool37.not = icmp eq i32 %and, 0
  br i1 %tobool37.not, label %if.then35.if.end39_crit_edge, label %if.then38

if.then35.if.end39_crit_edge:                     ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end39

if.then38:                                        ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @pwq_activate_inactive_work(ptr noundef %work)
  br label %if.end39

if.end39:                                         ; preds = %if.then38, %if.then35.if.end39_crit_edge
  %entry40 = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 1
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %entry40) #21
  br i1 %call.i.i, label %if.end.i.i, label %if.end39.list_del_init.exit_crit_edge

if.end39.list_del_init.exit_crit_edge:            ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 1, i32 1
  %13 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %prev.i.i, align 4
  %15 = ptrtoint ptr %entry40 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %entry40, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %14, ptr %prev1.i.i.i, align 4
  %18 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %16, ptr %14, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %if.end39.list_del_init.exit_crit_edge
  %19 = ptrtoint ptr %entry40 to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %entry40, ptr %entry40, align 4
  %prev.i3.i = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 1, i32 1
  %20 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %entry40, ptr %prev.i3.i, align 4
  %21 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %work, align 4
  tail call fastcc void @pwq_dec_nr_in_flight(ptr noundef nonnull %8, i32 noundef %22)
  %id = getelementptr inbounds %struct.worker_pool, ptr %call26, i32 0, i32 3
  %23 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %id, align 4
  %25 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %work, align 4
  %and1.i.i.i = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %list_del_init.exit.set_work_pool_and_keep_pending.exit_crit_edge

list_del_init.exit.set_work_pool_and_keep_pending.exit_crit_edge: ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_work_pool_and_keep_pending.exit

land.rhs.i.i:                                     ; preds = %list_del_init.exit
  %.b45.i.i = load i1, ptr @set_work_data.__already_done, align 1
  br i1 %.b45.i.i, label %land.rhs.i.i.set_work_pool_and_keep_pending.exit_crit_edge, label %if.then.i.i, !prof !679

land.rhs.i.i.set_work_pool_and_keep_pending.exit_crit_edge: ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_work_pool_and_keep_pending.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @set_work_data.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 630, i32 noundef 9, ptr noundef null) #21
  br label %set_work_pool_and_keep_pending.exit

set_work_pool_and_keep_pending.exit:              ; preds = %if.then.i.i, %land.rhs.i.i.set_work_pool_and_keep_pending.exit_crit_edge, %list_del_init.exit.set_work_pool_and_keep_pending.exit_crit_edge
  %shl.i = shl i32 %24, 6
  %27 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %work, align 4
  %and.i.i.i = and i32 %28, 16
  %or.i.i = or i32 %and.i.i.i, %shl.i
  %or40.i.i = or i32 %or.i.i, 1
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %work, i32 noundef 4) #21
  %29 = ptrtoint ptr %work to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile i32 %or40.i.i, ptr %work, align 4
  tail call void @_raw_spin_unlock(ptr noundef nonnull %call26) #21
  %call.i117 = tail call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i117, label %set_work_pool_and_keep_pending.exit.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i120

set_work_pool_and_keep_pending.exit.rcu_read_unlock.exit_crit_edge: ; preds = %set_work_pool_and_keep_pending.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

land.lhs.true.i120:                               ; preds = %set_work_pool_and_keep_pending.exit
  %call1.i118 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i118)
  %tobool.not.i119 = icmp eq i32 %call1.i118, 0
  br i1 %tobool.not.i119, label %land.lhs.true.i120.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i122

land.lhs.true.i120.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i120
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

land.lhs.true2.i122:                              ; preds = %land.lhs.true.i120
  %.b4.i121 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i121, label %land.lhs.true2.i122.rcu_read_unlock.exit_crit_edge, label %if.then.i123

land.lhs.true2.i122.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i122
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

if.then.i123:                                     ; preds = %land.lhs.true2.i122
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 724, ptr noundef nonnull @.str.102) #21
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i123, %land.lhs.true2.i122.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i120.rcu_read_unlock.exit_crit_edge, %set_work_pool_and_keep_pending.exit.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !699
  %30 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i.i124 = and i32 %30, -16384
  %31 = inttoptr i32 %and.i.i.i.i.i124 to ptr
  %preempt_count.i.i.i.i125 = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %preempt_count.i.i.i.i125 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %preempt_count.i.i.i.i125, align 4
  %sub.i.i.i = add i32 %33, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i125, align 4
  tail call void @rcu_read_unlock_strict() #21
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #21
  br label %cleanup93

if.end43:                                         ; preds = %land.lhs.true.if.end43_crit_edge, %if.end29.if.end43_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef nonnull %call26) #21
  br label %fail

fail:                                             ; preds = %if.end43, %rcu_read_lock.exit.fail_crit_edge
  %call.i126 = tail call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i126, label %fail.rcu_read_unlock.exit136_crit_edge, label %land.lhs.true.i129

fail.rcu_read_unlock.exit136_crit_edge:           ; preds = %fail
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit136

land.lhs.true.i129:                               ; preds = %fail
  %call1.i127 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i127)
  %tobool.not.i128 = icmp eq i32 %call1.i127, 0
  br i1 %tobool.not.i128, label %land.lhs.true.i129.rcu_read_unlock.exit136_crit_edge, label %land.lhs.true2.i131

land.lhs.true.i129.rcu_read_unlock.exit136_crit_edge: ; preds = %land.lhs.true.i129
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit136

land.lhs.true2.i131:                              ; preds = %land.lhs.true.i129
  %.b4.i130 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i130, label %land.lhs.true2.i131.rcu_read_unlock.exit136_crit_edge, label %if.then.i132

land.lhs.true2.i131.rcu_read_unlock.exit136_crit_edge: ; preds = %land.lhs.true2.i131
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit136

if.then.i132:                                     ; preds = %land.lhs.true2.i131
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 724, ptr noundef nonnull @.str.102) #21
  br label %rcu_read_unlock.exit136

rcu_read_unlock.exit136:                          ; preds = %if.then.i132, %land.lhs.true2.i131.rcu_read_unlock.exit136_crit_edge, %land.lhs.true.i129.rcu_read_unlock.exit136_crit_edge, %fail.rcu_read_unlock.exit136_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !699
  %34 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i.i133 = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i.i.i.i133 to ptr
  %preempt_count.i.i.i.i134 = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %preempt_count.i.i.i.i134 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %preempt_count.i.i.i.i134, align 4
  %sub.i.i.i135 = add i32 %37, -1
  store volatile i32 %sub.i.i.i135, ptr %preempt_count.i.i.i.i134, align 4
  tail call void @rcu_read_unlock_strict() #21
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #21
  %38 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %flags, align 4
  %and.i137 = and i32 %39, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i137)
  %tobool53.not = icmp eq i32 %and.i137, 0
  br i1 %tobool53.not, label %if.then54, label %rcu_read_unlock.exit136.do.body56_crit_edge

rcu_read_unlock.exit136.do.body56_crit_edge:      ; preds = %rcu_read_unlock.exit136
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body56

if.then54:                                        ; preds = %rcu_read_unlock.exit136
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_on() #21
  br label %do.body56

do.body56:                                        ; preds = %if.then54, %rcu_read_unlock.exit136.do.body56_crit_edge
  %40 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #21, !srcloc !689
  %and.i.i = and i32 %40, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool64.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool64.not, label %if.then73, label %do.body56.do.end76_crit_edge, !prof !680

do.body56.do.end76_crit_edge:                     ; preds = %do.body56
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end76

if.then73:                                        ; preds = %do.body56
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @warn_bogus_irq_restore() #21
  br label %do.end76

do.end76:                                         ; preds = %if.then73, %do.body56.do.end76_crit_edge
  %41 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %flags, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %42) #21, !srcloc !690
  %call.i.i.i138 = tail call zeroext i1 @__kasan_check_read(ptr noundef %work, i32 noundef 4) #21
  %43 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %work, align 4
  %45 = and i32 %44, 36
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %45)
  %46 = icmp eq i32 %45, 32
  br i1 %46, label %do.end76.cleanup93_crit_edge, label %do.end88

do.end76.cleanup93_crit_edge:                     ; preds = %do.end76
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup93

do.end88:                                         ; preds = %do.end76
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !700
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #21, !srcloc !701
  br label %cleanup93

cleanup93:                                        ; preds = %do.end88, %do.end76.cleanup93_crit_edge, %rcu_read_unlock.exit, %if.end21.cleanup93_crit_edge, %if.then13.cleanup93_crit_edge
  %retval.1 = phi i32 [ 1, %rcu_read_unlock.exit ], [ -11, %do.end88 ], [ 1, %if.then13.cleanup93_crit_edge ], [ 0, %if.end21.cleanup93_crit_edge ], [ -2, %do.end76.cleanup93_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @queue_rcu_work(ptr noundef %wq, ptr noundef %rwork) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %rwork) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %wq2 = getelementptr inbounds %struct.rcu_work, ptr %rwork, i32 0, i32 2
  %0 = ptrtoint ptr %wq2 to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %wq, ptr %wq2, align 4
  %rcu = getelementptr inbounds %struct.rcu_work, ptr %rwork, i32 0, i32 1
  tail call void @call_rcu(ptr noundef %rcu, ptr noundef nonnull @rcu_work_rcufn) #21
  br label %cleanup

cleanup:                                          ; preds = %if.then, %entry.cleanup_crit_edge
  ret i1 %tobool.not
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_work_rcufn(ptr noundef %rcu) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #21, !srcloc !689
  %and.i.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not = icmp eq i32 %and.i.i, 0
  tail call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #21, !srcloc !702
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_off() #21
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %add.ptr = getelementptr i8, ptr %rcu, i32 -44
  %wq = getelementptr i8, ptr %rcu, i32 8
  %1 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %wq, align 4
  tail call fastcc void @__queue_work(i32 noundef 4, ptr noundef %2, ptr noundef %add.ptr)
  tail call void @trace_hardirqs_on() #21
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !703
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @flush_workqueue(ptr noundef %wq) #0 align 64 {
entry:
  %this_flusher = alloca %struct.wq_flusher, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 68, ptr nonnull %this_flusher) #21
  %0 = getelementptr inbounds i8, ptr %this_flusher, i32 16
  %1 = call ptr @memset(ptr %0, i32 255, i32 52)
  %2 = ptrtoint ptr %this_flusher to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %this_flusher, ptr %this_flusher, align 4
  %prev = getelementptr inbounds %struct.list_head, ptr %this_flusher, i32 0, i32 1
  %3 = ptrtoint ptr %prev to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %this_flusher, ptr %prev, align 4
  %flush_color = getelementptr inbounds %struct.wq_flusher, ptr %this_flusher, i32 0, i32 1
  %4 = ptrtoint ptr %flush_color to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %flush_color, align 4
  %done = getelementptr inbounds %struct.wq_flusher, ptr %this_flusher, i32 0, i32 2
  %5 = ptrtoint ptr %done to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %done, align 4
  %wait.i = getelementptr inbounds %struct.wq_flusher, ptr %this_flusher, i32 0, i32 2, i32 1
  call void @__init_swait_queue_head(ptr noundef %wait.i, ptr noundef nonnull @.str.72, ptr noundef nonnull @init_completion.__key) #21
  %.b768 = load i1, ptr @wq_online, align 1
  br i1 %.b768, label %if.end28, label %do.end, !prof !679

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2824, i32 noundef 9, ptr noundef null) #21
  br label %cleanup667

if.end28:                                         ; preds = %entry
  %lockdep_map = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 18
  br label %__here

__here:                                           ; preds = %if.end28
  call void @lock_acquire(ptr noundef %lockdep_map, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@flush_workqueue, %__here) to i32)) #21
  br label %__here31

__here31:                                         ; preds = %__here
  call void @lock_release(ptr noundef %lockdep_map, i32 noundef ptrtoint (ptr blockaddress(@flush_workqueue, %__here31) to i32)) #21
  %mutex = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 2
  call void @mutex_lock_nested(ptr noundef %mutex, i32 noundef 0) #21
  %work_color = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 3
  %6 = ptrtoint ptr %work_color to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %work_color, align 4
  %add.i = add i32 %7, 1
  %rem.i = srem i32 %add.i, 16
  %flush_color33 = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 4
  %8 = ptrtoint ptr %flush_color33 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flush_color33, align 16
  call void @__sanitizer_cov_trace_cmp4(i32 %rem.i, i32 %9)
  %cmp.not = icmp eq i32 %rem.i, %9
  %flusher_overflow219 = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 8
  br i1 %cmp.not, label %if.else217, label %if.then34

if.then34:                                        ; preds = %__here31
  %10 = ptrtoint ptr %flusher_overflow219 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %flusher_overflow219, align 4
  %cmp.i.not = icmp eq ptr %11, %flusher_overflow219
  br i1 %cmp.i.not, label %if.then34.if.end80_crit_edge, label %land.rhs

if.then34.if.end80_crit_edge:                     ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end80

land.rhs:                                         ; preds = %if.then34
  %.b759777 = load i1, ptr @flush_workqueue.__already_done, align 1
  br i1 %.b759777, label %land.rhs.if.end80_crit_edge, label %if.then53, !prof !679

land.rhs.if.end80_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end80

if.then53:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @flush_workqueue.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2843, i32 noundef 9, ptr noundef null) #21
  br label %if.end80

if.end80:                                         ; preds = %if.then53, %land.rhs.if.end80_crit_edge, %if.then34.if.end80_crit_edge
  %12 = ptrtoint ptr %work_color to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %work_color, align 4
  %14 = ptrtoint ptr %flush_color to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %flush_color, align 4
  store i32 %rem.i, ptr %work_color, align 4
  %first_flusher = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 6
  %15 = ptrtoint ptr %first_flusher to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %first_flusher, align 8
  %tobool91.not = icmp eq ptr %16, null
  %17 = ptrtoint ptr %flush_color33 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %flush_color33, align 16
  call void @__sanitizer_cov_trace_cmp4(i32 %18, i32 %13)
  %cmp96.not = icmp eq i32 %18, %13
  br i1 %tobool91.not, label %if.then92, label %if.else

if.then92:                                        ; preds = %if.end80
  br i1 %cmp96.not, label %if.then92.if.end141_crit_edge, label %land.rhs103

if.then92.if.end141_crit_edge:                    ; preds = %if.then92
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end141

land.rhs103:                                      ; preds = %if.then92
  %.b760775 = load i1, ptr @flush_workqueue.__already_done.1, align 1
  br i1 %.b760775, label %land.rhs103.if.end141_crit_edge, label %if.then114, !prof !679

land.rhs103.if.end141_crit_edge:                  ; preds = %land.rhs103
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end141

if.then114:                                       ; preds = %land.rhs103
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @flush_workqueue.__already_done.1, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2849, i32 noundef 9, ptr noundef null) #21
  br label %if.end141

if.end141:                                        ; preds = %if.then114, %land.rhs103.if.end141_crit_edge, %if.then92.if.end141_crit_edge
  %19 = ptrtoint ptr %first_flusher to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %this_flusher, ptr %first_flusher, align 8
  %20 = ptrtoint ptr %flush_color33 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flush_color33, align 16
  %22 = ptrtoint ptr %work_color to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %work_color, align 4
  %call152 = call fastcc zeroext i1 @flush_workqueue_prep_pwqs(ptr noundef %wq, i32 noundef %21, i32 noundef %23)
  br i1 %call152, label %if.end141.if.end220_crit_edge, label %if.then153

if.end141.if.end220_crit_edge:                    ; preds = %if.end141
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end220

if.then153:                                       ; preds = %if.end141
  call void @__sanitizer_cov_trace_pc() #23
  %24 = ptrtoint ptr %flush_color33 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %rem.i, ptr %flush_color33, align 16
  %25 = ptrtoint ptr %first_flusher to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %first_flusher, align 8
  br label %out_unlock

if.else:                                          ; preds = %if.end80
  br i1 %cmp96.not, label %land.rhs167, label %if.else.if.end205_crit_edge

if.else.if.end205_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end205

land.rhs167:                                      ; preds = %if.else
  %.b761776 = load i1, ptr @flush_workqueue.__already_done.2, align 1
  br i1 %.b761776, label %land.rhs167.if.end205_crit_edge, label %if.then178, !prof !679

land.rhs167.if.end205_crit_edge:                  ; preds = %land.rhs167
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end205

if.then178:                                       ; preds = %land.rhs167
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @flush_workqueue.__already_done.2, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2862, i32 noundef 9, ptr noundef null) #21
  br label %if.end205

if.end205:                                        ; preds = %if.then178, %land.rhs167.if.end205_crit_edge, %if.else.if.end205_crit_edge
  %flusher_queue = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 7
  %prev.i = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 7, i32 1
  %26 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %prev.i, align 4
  %call.i.i = call zeroext i1 @__list_add_valid(ptr noundef nonnull %this_flusher, ptr noundef %27, ptr noundef %flusher_queue) #21
  br i1 %call.i.i, label %if.end.i.i, label %if.end205.list_add_tail.exit_crit_edge

if.end205.list_add_tail.exit_crit_edge:           ; preds = %if.end205
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %if.end205
  call void @__sanitizer_cov_trace_pc() #23
  %28 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %this_flusher, ptr %prev.i, align 4
  %29 = ptrtoint ptr %this_flusher to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %flusher_queue, ptr %this_flusher, align 4
  %30 = ptrtoint ptr %prev to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %27, ptr %prev, align 4
  %31 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile ptr %this_flusher, ptr %27, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %if.end205.list_add_tail.exit_crit_edge
  %32 = ptrtoint ptr %work_color to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %work_color, align 4
  %call215 = call fastcc zeroext i1 @flush_workqueue_prep_pwqs(ptr noundef %wq, i32 noundef -1, i32 noundef %33)
  br label %if.end220

if.else217:                                       ; preds = %__here31
  %prev.i779 = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 8, i32 1
  %34 = ptrtoint ptr %prev.i779 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %prev.i779, align 4
  %call.i.i780 = call zeroext i1 @__list_add_valid(ptr noundef nonnull %this_flusher, ptr noundef %35, ptr noundef %flusher_overflow219) #21
  br i1 %call.i.i780, label %if.end.i.i782, label %if.else217.if.end220_crit_edge

if.else217.if.end220_crit_edge:                   ; preds = %if.else217
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end220

if.end.i.i782:                                    ; preds = %if.else217
  call void @__sanitizer_cov_trace_pc() #23
  %36 = ptrtoint ptr %prev.i779 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %this_flusher, ptr %prev.i779, align 4
  %37 = ptrtoint ptr %this_flusher to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %flusher_overflow219, ptr %this_flusher, align 4
  %38 = ptrtoint ptr %prev to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %35, ptr %prev, align 4
  %39 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile ptr %this_flusher, ptr %35, align 4
  br label %if.end220

if.end220:                                        ; preds = %if.end.i.i782, %if.else217.if.end220_crit_edge, %list_add_tail.exit, %if.end141.if.end220_crit_edge
  call fastcc void @check_flush_dependency(ptr noundef %wq, ptr noundef null)
  call void @mutex_unlock(ptr noundef %mutex) #21
  call void @wait_for_completion(ptr noundef %done) #21
  %first_flusher227 = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 6
  %40 = ptrtoint ptr %first_flusher227 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile ptr, ptr %first_flusher227, align 8
  %cmp228.not = icmp eq ptr %41, %this_flusher
  br i1 %cmp228.not, label %if.end230, label %if.end220.cleanup667_crit_edge

if.end220.cleanup667_crit_edge:                   ; preds = %if.end220
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup667

if.end230:                                        ; preds = %if.end220
  call void @mutex_lock_nested(ptr noundef %mutex, i32 noundef 0) #21
  %42 = ptrtoint ptr %first_flusher227 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %first_flusher227, align 8
  %cmp233.not = icmp eq ptr %43, %this_flusher
  br i1 %cmp233.not, label %do.body240, label %if.end230.out_unlock_crit_edge

if.end230.out_unlock_crit_edge:                   ; preds = %if.end230
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_unlock

do.body240:                                       ; preds = %if.end230
  %44 = ptrtoint ptr %first_flusher227 to i32
  call void @__asan_store4_noabort(i32 %44)
  store volatile ptr null, ptr %first_flusher227, align 8
  %45 = ptrtoint ptr %this_flusher to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile ptr, ptr %this_flusher, align 4
  %cmp.i784.not = icmp eq ptr %46, %this_flusher
  br i1 %cmp.i784.not, label %do.body240.if.end296_crit_edge, label %land.rhs258

do.body240.if.end296_crit_edge:                   ; preds = %do.body240
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end296

land.rhs258:                                      ; preds = %do.body240
  %.b762774 = load i1, ptr @flush_workqueue.__already_done.3, align 1
  br i1 %.b762774, label %land.rhs258.if.end296_crit_edge, label %if.then269, !prof !679

land.rhs258.if.end296_crit_edge:                  ; preds = %land.rhs258
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end296

if.then269:                                       ; preds = %land.rhs258
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @flush_workqueue.__already_done.3, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2898, i32 noundef 9, ptr noundef null) #21
  br label %if.end296

if.end296:                                        ; preds = %if.then269, %land.rhs258.if.end296_crit_edge, %do.body240.if.end296_crit_edge
  %47 = ptrtoint ptr %flush_color33 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %flush_color33, align 16
  %49 = ptrtoint ptr %flush_color to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %flush_color, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %48, i32 %50)
  %cmp307.not = icmp eq i32 %48, %50
  br i1 %cmp307.not, label %if.end296.if.end352_crit_edge, label %land.rhs314

if.end296.if.end352_crit_edge:                    ; preds = %if.end296
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end352

land.rhs314:                                      ; preds = %if.end296
  %.b763773 = load i1, ptr @flush_workqueue.__already_done.4, align 1
  br i1 %.b763773, label %land.rhs314.if.end352_crit_edge, label %if.then325, !prof !679

land.rhs314.if.end352_crit_edge:                  ; preds = %land.rhs314
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end352

if.then325:                                       ; preds = %land.rhs314
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @flush_workqueue.__already_done.4, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2899, i32 noundef 9, ptr noundef null) #21
  br label %if.end352

if.end352:                                        ; preds = %if.then325, %land.rhs314.if.end352_crit_edge, %if.end296.if.end352_crit_edge
  %flusher_queue362 = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 7
  %flusher_overflow388 = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 8
  %prev.i798 = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 7, i32 1
  %prev2.i.i = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 8, i32 1
  br label %while.cond

while.cond:                                       ; preds = %cleanup, %if.end352
  %51 = ptrtoint ptr %flusher_queue362 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %flusher_queue362, align 4
  %cmp372.not811 = icmp eq ptr %52, %flusher_queue362
  br i1 %cmp372.not811, label %while.cond.for.end_crit_edge, label %while.cond.for.body_crit_edge

while.cond.for.body_crit_edge:                    ; preds = %while.cond
  br label %for.body

while.cond.for.end_crit_edge:                     ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %list_del_init.exit.for.body_crit_edge, %while.cond.for.body_crit_edge
  %next360.0812 = phi ptr [ %tmp361.0814, %list_del_init.exit.for.body_crit_edge ], [ %52, %while.cond.for.body_crit_edge ]
  %53 = ptrtoint ptr %next360.0812 to i32
  call void @__asan_load4_noabort(i32 %53)
  %tmp361.0814 = load ptr, ptr %next360.0812, align 4
  %flush_color375 = getelementptr inbounds %struct.wq_flusher, ptr %next360.0812, i32 0, i32 1
  %54 = ptrtoint ptr %flush_color375 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %flush_color375, align 4
  %56 = ptrtoint ptr %flush_color33 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %flush_color33, align 16
  call void @__sanitizer_cov_trace_cmp4(i32 %55, i32 %57)
  %cmp377.not = icmp eq i32 %55, %57
  br i1 %cmp377.not, label %if.end379, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

if.end379:                                        ; preds = %for.body
  %call.i.i786 = call zeroext i1 @__list_del_entry_valid(ptr noundef %next360.0812) #21
  br i1 %call.i.i786, label %if.end.i.i787, label %if.end379.list_del_init.exit_crit_edge

if.end379.list_del_init.exit_crit_edge:           ; preds = %if.end379
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del_init.exit

if.end.i.i787:                                    ; preds = %if.end379
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %next360.0812, i32 0, i32 1
  %58 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %prev.i.i, align 4
  %60 = ptrtoint ptr %next360.0812 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %next360.0812, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %61, i32 0, i32 1
  %62 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %59, ptr %prev1.i.i.i, align 4
  %63 = ptrtoint ptr %59 to i32
  call void @__asan_store4_noabort(i32 %63)
  store volatile ptr %61, ptr %59, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i787, %if.end379.list_del_init.exit_crit_edge
  %64 = ptrtoint ptr %next360.0812 to i32
  call void @__asan_store4_noabort(i32 %64)
  store volatile ptr %next360.0812, ptr %next360.0812, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %next360.0812, i32 0, i32 1
  %65 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr %next360.0812, ptr %prev.i3.i, align 4
  %done381 = getelementptr inbounds %struct.wq_flusher, ptr %next360.0812, i32 0, i32 2
  call void @complete(ptr noundef %done381) #21
  %cmp372.not = icmp eq ptr %tmp361.0814, %flusher_queue362
  br i1 %cmp372.not, label %list_del_init.exit.for.end_crit_edge, label %list_del_init.exit.for.body_crit_edge

list_del_init.exit.for.body_crit_edge:            ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

list_del_init.exit.for.end_crit_edge:             ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %list_del_init.exit.for.end_crit_edge, %for.body.for.end_crit_edge, %while.cond.for.end_crit_edge
  %next360.0.lcssa = phi ptr [ %flusher_queue362, %while.cond.for.end_crit_edge ], [ %next360.0812, %for.body.for.end_crit_edge ], [ %flusher_queue362, %list_del_init.exit.for.end_crit_edge ]
  %66 = ptrtoint ptr %flusher_overflow388 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile ptr, ptr %flusher_overflow388, align 4
  %cmp.i788.not = icmp eq ptr %67, %flusher_overflow388
  br i1 %cmp.i788.not, label %for.end.if.end441_crit_edge, label %land.rhs391

for.end.if.end441_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end441

land.rhs391:                                      ; preds = %for.end
  %68 = ptrtoint ptr %flush_color33 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %flush_color33, align 16
  %70 = ptrtoint ptr %work_color to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %work_color, align 4
  %add.i790 = add i32 %71, 1
  %rem.i791 = srem i32 %add.i790, 16
  call void @__sanitizer_cov_trace_cmp4(i32 %69, i32 %rem.i791)
  %cmp395.not = icmp eq i32 %69, %rem.i791
  br i1 %cmp395.not, label %land.rhs391.if.end441_crit_edge, label %land.rhs403

land.rhs391.if.end441_crit_edge:                  ; preds = %land.rhs391
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end441

land.rhs403:                                      ; preds = %land.rhs391
  %.b764772 = load i1, ptr @flush_workqueue.__already_done.5, align 1
  br i1 %.b764772, label %land.rhs403.if.end441_crit_edge, label %if.then414, !prof !679

land.rhs403.if.end441_crit_edge:                  ; preds = %land.rhs403
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end441

if.then414:                                       ; preds = %land.rhs403
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @flush_workqueue.__already_done.5, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2913, i32 noundef 9, ptr noundef null) #21
  br label %if.end441

if.end441:                                        ; preds = %if.then414, %land.rhs403.if.end441_crit_edge, %land.rhs391.if.end441_crit_edge, %for.end.if.end441_crit_edge
  %72 = ptrtoint ptr %flush_color33 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %flush_color33, align 16
  %add.i792 = add i32 %73, 1
  %rem.i793 = srem i32 %add.i792, 16
  store i32 %rem.i793, ptr %flush_color33, align 16
  %74 = ptrtoint ptr %flusher_overflow388 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load volatile ptr, ptr %flusher_overflow388, align 4
  %cmp.i794.not = icmp eq ptr %75, %flusher_overflow388
  br i1 %cmp.i794.not, label %if.end441.if.end484_crit_edge, label %for.cond461.preheader

if.end441.if.end484_crit_edge:                    ; preds = %if.end441
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end484

for.cond461.preheader:                            ; preds = %if.end441
  %76 = ptrtoint ptr %flusher_overflow388 to i32
  call void @__asan_load4_noabort(i32 %76)
  %tmp361.1816 = load ptr, ptr %flusher_overflow388, align 4
  %cmp464.not817 = icmp eq ptr %tmp361.1816, %flusher_overflow388
  br i1 %cmp464.not817, label %for.cond461.preheader.for.end476_crit_edge, label %for.cond461.preheader.for.body467_crit_edge

for.cond461.preheader.for.body467_crit_edge:      ; preds = %for.cond461.preheader
  br label %for.body467

for.cond461.preheader.for.end476_crit_edge:       ; preds = %for.cond461.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end476

for.body467:                                      ; preds = %for.body467.for.body467_crit_edge, %for.cond461.preheader.for.body467_crit_edge
  %tmp361.1818 = phi ptr [ %tmp361.1, %for.body467.for.body467_crit_edge ], [ %tmp361.1816, %for.cond461.preheader.for.body467_crit_edge ]
  %77 = ptrtoint ptr %work_color to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %work_color, align 4
  %flush_color469 = getelementptr inbounds %struct.wq_flusher, ptr %tmp361.1818, i32 0, i32 1
  %79 = ptrtoint ptr %flush_color469 to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %78, ptr %flush_color469, align 4
  %80 = ptrtoint ptr %tmp361.1818 to i32
  call void @__asan_load4_noabort(i32 %80)
  %tmp361.1 = load ptr, ptr %tmp361.1818, align 4
  %cmp464.not = icmp eq ptr %tmp361.1, %flusher_overflow388
  br i1 %cmp464.not, label %for.body467.for.end476_crit_edge, label %for.body467.for.body467_crit_edge

for.body467.for.body467_crit_edge:                ; preds = %for.body467
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body467

for.body467.for.end476_crit_edge:                 ; preds = %for.body467
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end476

for.end476:                                       ; preds = %for.body467.for.end476_crit_edge, %for.cond461.preheader.for.end476_crit_edge
  %81 = ptrtoint ptr %work_color to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %work_color, align 4
  %add.i796 = add i32 %82, 1
  %rem.i797 = srem i32 %add.i796, 16
  store i32 %rem.i797, ptr %work_color, align 4
  %83 = ptrtoint ptr %flusher_overflow388 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load volatile ptr, ptr %flusher_overflow388, align 4
  %cmp.i.not.i = icmp eq ptr %84, %flusher_overflow388
  br i1 %cmp.i.not.i, label %for.end476.list_splice_tail_init.exit_crit_edge, label %if.then.i

for.end476.list_splice_tail_init.exit_crit_edge:  ; preds = %for.end476
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_splice_tail_init.exit

if.then.i:                                        ; preds = %for.end476
  call void @__sanitizer_cov_trace_pc() #23
  %85 = ptrtoint ptr %prev.i798 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %prev.i798, align 4
  %87 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %prev2.i.i, align 4
  %prev3.i.i799 = getelementptr inbounds %struct.list_head, ptr %84, i32 0, i32 1
  %89 = ptrtoint ptr %prev3.i.i799 to i32
  call void @__asan_store4_noabort(i32 %89)
  store ptr %86, ptr %prev3.i.i799, align 4
  %90 = ptrtoint ptr %86 to i32
  call void @__asan_store4_noabort(i32 %90)
  store ptr %84, ptr %86, align 4
  %91 = ptrtoint ptr %88 to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr %flusher_queue362, ptr %88, align 4
  store ptr %88, ptr %prev.i798, align 4
  %92 = ptrtoint ptr %flusher_overflow388 to i32
  call void @__asan_store4_noabort(i32 %92)
  store volatile ptr %flusher_overflow388, ptr %flusher_overflow388, align 4
  store ptr %flusher_overflow388, ptr %prev2.i.i, align 4
  br label %list_splice_tail_init.exit

list_splice_tail_init.exit:                       ; preds = %if.then.i, %for.end476.list_splice_tail_init.exit_crit_edge
  %93 = ptrtoint ptr %work_color to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %work_color, align 4
  %call483 = call fastcc zeroext i1 @flush_workqueue_prep_pwqs(ptr noundef %wq, i32 noundef -1, i32 noundef %94)
  br label %if.end484

if.end484:                                        ; preds = %list_splice_tail_init.exit, %if.end441.if.end484_crit_edge
  %95 = ptrtoint ptr %flusher_queue362 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load volatile ptr, ptr %flusher_queue362, align 4
  %cmp.i800.not = icmp eq ptr %96, %flusher_queue362
  %97 = ptrtoint ptr %flush_color33 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %flush_color33, align 16
  %99 = ptrtoint ptr %work_color to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %work_color, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %98, i32 %100)
  %cmp492.not = icmp eq i32 %98, %100
  br i1 %cmp.i800.not, label %if.then488, label %if.end545

if.then488:                                       ; preds = %if.end484
  br i1 %cmp492.not, label %if.then488.out_unlock_crit_edge, label %land.rhs499

if.then488.out_unlock_crit_edge:                  ; preds = %if.then488
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_unlock

land.rhs499:                                      ; preds = %if.then488
  %.b765771 = load i1, ptr @flush_workqueue.__already_done.6, align 1
  br i1 %.b765771, label %land.rhs499.out_unlock_crit_edge, label %if.then510, !prof !679

land.rhs499.out_unlock_crit_edge:                 ; preds = %land.rhs499
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_unlock

if.then510:                                       ; preds = %land.rhs499
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @flush_workqueue.__already_done.6, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2937, i32 noundef 9, ptr noundef null) #21
  br label %out_unlock

if.end545:                                        ; preds = %if.end484
  br i1 %cmp492.not, label %land.rhs556, label %if.end545.if.end594_crit_edge

if.end545.if.end594_crit_edge:                    ; preds = %if.end545
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end594

land.rhs556:                                      ; preds = %if.end545
  %.b766770 = load i1, ptr @flush_workqueue.__already_done.7, align 1
  br i1 %.b766770, label %land.rhs556.if.end594_crit_edge, label %if.then567, !prof !679

land.rhs556.if.end594_crit_edge:                  ; preds = %land.rhs556
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end594

if.then567:                                       ; preds = %land.rhs556
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @flush_workqueue.__already_done.7, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2945, i32 noundef 9, ptr noundef null) #21
  br label %if.end594

if.end594:                                        ; preds = %if.then567, %land.rhs556.if.end594_crit_edge, %if.end545.if.end594_crit_edge
  %101 = ptrtoint ptr %flush_color33 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %flush_color33, align 16
  %flush_color604 = getelementptr inbounds %struct.wq_flusher, ptr %next360.0.lcssa, i32 0, i32 1
  %103 = ptrtoint ptr %flush_color604 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %flush_color604, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %102, i32 %104)
  %cmp605.not = icmp eq i32 %102, %104
  br i1 %cmp605.not, label %if.end594.if.end650_crit_edge, label %land.rhs612

if.end594.if.end650_crit_edge:                    ; preds = %if.end594
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end650

land.rhs612:                                      ; preds = %if.end594
  %.b767769 = load i1, ptr @flush_workqueue.__already_done.8, align 1
  br i1 %.b767769, label %land.rhs612.if.end650_crit_edge, label %if.then623, !prof !679

land.rhs612.if.end650_crit_edge:                  ; preds = %land.rhs612
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end650

if.then623:                                       ; preds = %land.rhs612
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @flush_workqueue.__already_done.8, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2946, i32 noundef 9, ptr noundef null) #21
  br label %if.end650

if.end650:                                        ; preds = %if.then623, %land.rhs612.if.end650_crit_edge, %if.end594.if.end650_crit_edge
  %call.i.i802 = call zeroext i1 @__list_del_entry_valid(ptr noundef %next360.0.lcssa) #21
  br i1 %call.i.i802, label %if.end.i.i805, label %if.end650.list_del_init.exit807_crit_edge

if.end650.list_del_init.exit807_crit_edge:        ; preds = %if.end650
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del_init.exit807

if.end.i.i805:                                    ; preds = %if.end650
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i803 = getelementptr inbounds %struct.list_head, ptr %next360.0.lcssa, i32 0, i32 1
  %105 = ptrtoint ptr %prev.i.i803 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %prev.i.i803, align 4
  %107 = ptrtoint ptr %next360.0.lcssa to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %next360.0.lcssa, align 4
  %prev1.i.i.i804 = getelementptr inbounds %struct.list_head, ptr %108, i32 0, i32 1
  %109 = ptrtoint ptr %prev1.i.i.i804 to i32
  call void @__asan_store4_noabort(i32 %109)
  store ptr %106, ptr %prev1.i.i.i804, align 4
  %110 = ptrtoint ptr %106 to i32
  call void @__asan_store4_noabort(i32 %110)
  store volatile ptr %108, ptr %106, align 4
  br label %list_del_init.exit807

list_del_init.exit807:                            ; preds = %if.end.i.i805, %if.end650.list_del_init.exit807_crit_edge
  %111 = ptrtoint ptr %next360.0.lcssa to i32
  call void @__asan_store4_noabort(i32 %111)
  store volatile ptr %next360.0.lcssa, ptr %next360.0.lcssa, align 4
  %prev.i3.i806 = getelementptr inbounds %struct.list_head, ptr %next360.0.lcssa, i32 0, i32 1
  %112 = ptrtoint ptr %prev.i3.i806 to i32
  call void @__asan_store4_noabort(i32 %112)
  store ptr %next360.0.lcssa, ptr %prev.i3.i806, align 4
  %113 = ptrtoint ptr %first_flusher227 to i32
  call void @__asan_store4_noabort(i32 %113)
  store ptr %next360.0.lcssa, ptr %first_flusher227, align 8
  %114 = ptrtoint ptr %flush_color33 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %flush_color33, align 16
  %call661 = call fastcc zeroext i1 @flush_workqueue_prep_pwqs(ptr noundef %wq, i32 noundef %115, i32 noundef -1)
  br i1 %call661, label %list_del_init.exit807.out_unlock_crit_edge, label %cleanup

list_del_init.exit807.out_unlock_crit_edge:       ; preds = %list_del_init.exit807
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_unlock

cleanup:                                          ; preds = %list_del_init.exit807
  call void @__sanitizer_cov_trace_pc() #23
  %116 = ptrtoint ptr %first_flusher227 to i32
  call void @__asan_store4_noabort(i32 %116)
  store ptr null, ptr %first_flusher227, align 8
  br label %while.cond

out_unlock:                                       ; preds = %list_del_init.exit807.out_unlock_crit_edge, %if.then510, %land.rhs499.out_unlock_crit_edge, %if.then488.out_unlock_crit_edge, %if.end230.out_unlock_crit_edge, %if.then153
  call void @mutex_unlock(ptr noundef %mutex) #21
  br label %cleanup667

cleanup667:                                       ; preds = %out_unlock, %if.end220.cleanup667_crit_edge, %do.end
  call void @llvm.lifetime.end.p0(i64 68, ptr nonnull %this_flusher) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @flush_workqueue_prep_pwqs(ptr noundef %wq, i32 noundef %flush_color, i32 noundef %work_color) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %flush_color)
  %cmp = icmp sgt i32 %flush_color, -1
  br i1 %cmp, label %if.then, label %entry.do.body39_crit_edge

entry.do.body39_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body39

if.then:                                          ; preds = %entry
  %nr_pwqs_to_flush = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 5
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %nr_pwqs_to_flush, i32 noundef 4) #21
  %0 = ptrtoint ptr %nr_pwqs_to_flush to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %nr_pwqs_to_flush, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.then.if.end29_crit_edge, label %land.rhs

if.then.if.end29_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29

land.rhs:                                         ; preds = %if.then
  %.b236 = load i1, ptr @flush_workqueue_prep_pwqs.__already_done, align 1
  br i1 %.b236, label %land.rhs.if.end29_crit_edge, label %if.then8, !prof !679

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29

if.then8:                                         ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @flush_workqueue_prep_pwqs.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2775, i32 noundef 9, ptr noundef null) #21
  br label %if.end29

if.end29:                                         ; preds = %if.then8, %land.rhs.if.end29_crit_edge, %if.then.if.end29_crit_edge
  %call.i.i237 = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_pwqs_to_flush, i32 noundef 4) #21
  %2 = ptrtoint ptr %nr_pwqs_to_flush to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile i32 1, ptr %nr_pwqs_to_flush, align 4
  br label %do.body39

do.body39:                                        ; preds = %if.end29, %entry.do.body39_crit_edge
  %dep_map = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 2, i32 5
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool41.not = icmp eq i32 %call.i, 0
  br i1 %tobool41.not, label %land.lhs.true, label %do.body39.do.end52_crit_edge

do.body39.do.end52_crit_edge:                     ; preds = %do.body39
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end52

land.lhs.true:                                    ; preds = %do.body39
  %call42 = tail call i32 @rcu_read_lock_any_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42)
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %land.lhs.true44, label %land.lhs.true.do.end52_crit_edge

land.lhs.true.do.end52_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end52

land.lhs.true44:                                  ; preds = %land.lhs.true
  %call45 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call45)
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %land.lhs.true44.do.end52_crit_edge, label %land.lhs.true47

land.lhs.true44.do.end52_crit_edge:               ; preds = %land.lhs.true44
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end52

land.lhs.true47:                                  ; preds = %land.lhs.true44
  %.b228235 = load i1, ptr @flush_workqueue_prep_pwqs.__warned, align 1
  br i1 %.b228235, label %land.lhs.true47.do.end52_crit_edge, label %if.then49

land.lhs.true47.do.end52_crit_edge:               ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end52

if.then49:                                        ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @flush_workqueue_prep_pwqs.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 2779, ptr noundef nonnull @.str.9) #21
  br label %do.end52

do.end52:                                         ; preds = %if.then49, %land.lhs.true47.do.end52_crit_edge, %land.lhs.true44.do.end52_crit_edge, %land.lhs.true.do.end52_crit_edge, %do.body39.do.end52_crit_edge
  %3 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %3)
  %.pn240 = load volatile ptr, ptr %wq, align 4
  %cmp59.not241 = icmp eq ptr %.pn240, %wq
  br i1 %cmp59.not241, label %do.end52.for.end_crit_edge, label %for.body.lr.ph

do.end52.for.end_crit_edge:                       ; preds = %do.end52
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %do.end52
  %nr_pwqs_to_flush121 = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 5
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %work_color)
  %cmp124 = icmp sgt i32 %work_color, -1
  br label %for.body

for.body:                                         ; preds = %if.end183.for.body_crit_edge, %for.body.lr.ph
  %.pn243 = phi ptr [ %.pn240, %for.body.lr.ph ], [ %.pn, %if.end183.for.body_crit_edge ]
  %wait.0.off0242 = phi i1 [ false, %for.body.lr.ph ], [ %wait.1.off0, %if.end183.for.body_crit_edge ]
  %pwq.0 = getelementptr i8, ptr %.pn243, i32 -100
  %4 = ptrtoint ptr %pwq.0 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pwq.0, align 512
  tail call void @_raw_spin_lock_irq(ptr noundef %5) #21
  br i1 %cmp, label %if.then62, label %for.body.if.end123_crit_edge

for.body.if.end123_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end123

if.then62:                                        ; preds = %for.body
  %flush_color64 = getelementptr i8, ptr %.pn243, i32 -88
  %6 = ptrtoint ptr %flush_color64 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flush_color64, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %7)
  %cmp65.not = icmp eq i32 %7, -1
  br i1 %cmp65.not, label %if.then62.if.end110_crit_edge, label %land.rhs72

if.then62.if.end110_crit_edge:                    ; preds = %if.then62
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end110

land.rhs72:                                       ; preds = %if.then62
  %.b229234 = load i1, ptr @flush_workqueue_prep_pwqs.__already_done.73, align 1
  br i1 %.b229234, label %land.rhs72.if.end110_crit_edge, label %if.then83, !prof !679

land.rhs72.if.end110_crit_edge:                   ; preds = %land.rhs72
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end110

if.then83:                                        ; preds = %land.rhs72
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @flush_workqueue_prep_pwqs.__already_done.73, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2785, i32 noundef 9, ptr noundef null) #21
  br label %if.end110

if.end110:                                        ; preds = %if.then83, %land.rhs72.if.end110_crit_edge, %if.then62.if.end110_crit_edge
  %nr_in_flight = getelementptr i8, ptr %.pn243, i32 -80
  %arrayidx = getelementptr [16 x i32], ptr %nr_in_flight, i32 0, i32 %flush_color
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool118.not = icmp eq i32 %9, 0
  br i1 %tobool118.not, label %if.end110.if.end123_crit_edge, label %if.then119

if.end110.if.end123_crit_edge:                    ; preds = %if.end110
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end123

if.then119:                                       ; preds = %if.end110
  call void @__sanitizer_cov_trace_pc() #23
  %10 = ptrtoint ptr %flush_color64 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %flush_color, ptr %flush_color64, align 4
  %call.i.i238 = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_pwqs_to_flush121, i32 noundef 4) #21
  tail call void @llvm.prefetch.p0(ptr %nr_pwqs_to_flush121, i32 1, i32 3, i32 1) #21
  %11 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_pwqs_to_flush121, ptr %nr_pwqs_to_flush121, i32 1, ptr elementtype(i32) %nr_pwqs_to_flush121) #21, !srcloc !683
  br label %if.end123

if.end123:                                        ; preds = %if.then119, %if.end110.if.end123_crit_edge, %for.body.if.end123_crit_edge
  %wait.1.off0 = phi i1 [ true, %if.then119 ], [ %wait.0.off0242, %if.end110.if.end123_crit_edge ], [ %wait.0.off0242, %for.body.if.end123_crit_edge ]
  br i1 %cmp124, label %if.then125, label %if.end123.if.end183_crit_edge

if.end123.if.end183_crit_edge:                    ; preds = %if.end123
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end183

if.then125:                                       ; preds = %if.end123
  %work_color127 = getelementptr i8, ptr %.pn243, i32 -92
  %12 = ptrtoint ptr %work_color127 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %work_color127, align 8
  %add.i = add i32 %13, 1
  %rem.i = srem i32 %add.i, 16
  call void @__sanitizer_cov_trace_cmp4(i32 %rem.i, i32 %work_color)
  %cmp129.not = icmp eq i32 %rem.i, %work_color
  br i1 %cmp129.not, label %if.then125.if.end174_crit_edge, label %land.rhs136

if.then125.if.end174_crit_edge:                   ; preds = %if.then125
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end174

land.rhs136:                                      ; preds = %if.then125
  %.b230233 = load i1, ptr @flush_workqueue_prep_pwqs.__already_done.74, align 1
  br i1 %.b230233, label %land.rhs136.if.end174_crit_edge, label %if.then147, !prof !679

land.rhs136.if.end174_crit_edge:                  ; preds = %land.rhs136
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end174

if.then147:                                       ; preds = %land.rhs136
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @flush_workqueue_prep_pwqs.__already_done.74, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2795, i32 noundef 9, ptr noundef null) #21
  br label %if.end174

if.end174:                                        ; preds = %if.then147, %land.rhs136.if.end174_crit_edge, %if.then125.if.end174_crit_edge
  %14 = ptrtoint ptr %work_color127 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %work_color, ptr %work_color127, align 8
  br label %if.end183

if.end183:                                        ; preds = %if.end174, %if.end123.if.end183_crit_edge
  tail call void @_raw_spin_unlock_irq(ptr noundef %5) #21
  %15 = ptrtoint ptr %.pn243 to i32
  call void @__asan_load4_noabort(i32 %15)
  %.pn = load volatile ptr, ptr %.pn243, align 4
  %cmp59.not = icmp eq ptr %.pn, %wq
  br i1 %cmp59.not, label %if.end183.for.end_crit_edge, label %if.end183.for.body_crit_edge

if.end183.for.body_crit_edge:                     ; preds = %if.end183
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

if.end183.for.end_crit_edge:                      ; preds = %if.end183
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %if.end183.for.end_crit_edge, %do.end52.for.end_crit_edge
  %wait.0.off0.lcssa = phi i1 [ false, %do.end52.for.end_crit_edge ], [ %wait.1.off0, %if.end183.for.end_crit_edge ]
  br i1 %cmp, label %land.lhs.true195, label %for.end.if.end199_crit_edge

for.end.if.end199_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end199

land.lhs.true195:                                 ; preds = %for.end
  %nr_pwqs_to_flush196 = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 5
  %call.i.i239 = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_pwqs_to_flush196, i32 noundef 4) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !685
  tail call void @llvm.prefetch.p0(ptr %nr_pwqs_to_flush196, i32 1, i32 3, i32 1) #21
  %16 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_pwqs_to_flush196, ptr %nr_pwqs_to_flush196, i32 1, ptr elementtype(i32) %nr_pwqs_to_flush196) #21, !srcloc !686
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %16, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !687
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.i.i, label %if.then198, label %land.lhs.true195.if.end199_crit_edge

land.lhs.true195.if.end199_crit_edge:             ; preds = %land.lhs.true195
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end199

if.then198:                                       ; preds = %land.lhs.true195
  call void @__sanitizer_cov_trace_pc() #23
  %first_flusher = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 6
  %17 = ptrtoint ptr %first_flusher to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %first_flusher, align 8
  %done = getelementptr inbounds %struct.wq_flusher, ptr %18, i32 0, i32 2
  tail call void @complete(ptr noundef %done) #21
  br label %if.end199

if.end199:                                        ; preds = %if.then198, %land.lhs.true195.if.end199_crit_edge, %for.end.if.end199_crit_edge
  ret i1 %wait.0.off0.lcssa
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @check_flush_dependency(ptr noundef %target_wq, ptr noundef readonly %target_work) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %target_work, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %func = getelementptr inbounds %struct.work_struct, ptr %target_work, i32 0, i32 2
  %0 = ptrtoint ptr %func to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %func, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi ptr [ %1, %cond.true ], [ null, %entry.cond.end_crit_edge ]
  %flags = getelementptr inbounds %struct.workqueue_struct, ptr %target_wq, i32 0, i32 22
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 128
  %and = and i32 %3, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %if.end, label %cond.end.cleanup_crit_edge

cond.end.cleanup_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %cond.end
  %4 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i, align 4
  %and.i = and i32 %7, 15728640
  %8 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i13.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i13.i to ptr
  %preempt_count.i14.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i14.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i14.i, align 4
  %and2.i = and i32 %11, 983040
  %or.i = or i32 %and2.i, %and.i
  %12 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i15.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i15.i to ptr
  %preempt_count.i16.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %preempt_count.i16.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %preempt_count.i16.i, align 4
  %and5.i = and i32 %15, 256
  %or6.i = or i32 %or.i, %and5.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or6.i)
  %tobool.not.i = icmp eq i32 %or6.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.end.current_wq_worker.exit_crit_edge

if.end.current_wq_worker.exit_crit_edge:          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %current_wq_worker.exit

land.lhs.true.i:                                  ; preds = %if.end
  %16 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 2
  %18 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task.i, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 3
  %20 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flags.i, align 4
  %and8.i = and i32 %21, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i)
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  br i1 %tobool9.not.i, label %land.lhs.true.i.current_wq_worker.exit_crit_edge, label %if.then.i

land.lhs.true.i.current_wq_worker.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %current_wq_worker.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  %call12.i = tail call ptr @kthread_data(ptr noundef %19) #21
  br label %current_wq_worker.exit

current_wq_worker.exit:                           ; preds = %if.then.i, %land.lhs.true.i.current_wq_worker.exit_crit_edge, %if.end.current_wq_worker.exit_crit_edge
  %retval.0.i = phi ptr [ %call12.i, %if.then.i ], [ null, %land.lhs.true.i.current_wq_worker.exit_crit_edge ], [ null, %if.end.current_wq_worker.exit_crit_edge ]
  %22 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i128 = and i32 %22, -16384
  %23 = inttoptr i32 %and.i128 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %task, align 8
  %flags3 = getelementptr inbounds %struct.task_struct, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %flags3 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %flags3, align 4
  %and4 = and i32 %27, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool5.not = icmp eq i32 %and4, 0
  br i1 %tobool5.not, label %current_wq_worker.exit.if.end40_crit_edge, label %land.rhs

current_wq_worker.exit.if.end40_crit_edge:        ; preds = %current_wq_worker.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end40

land.rhs:                                         ; preds = %current_wq_worker.exit
  %.b126 = load i1, ptr @check_flush_dependency.__already_done, align 1
  br i1 %.b126, label %land.rhs.if.end40_crit_edge, label %if.then13, !prof !679

land.rhs.if.end40_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end40

if.then13:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @check_flush_dependency.__already_done, align 1
  %pid = getelementptr inbounds %struct.task_struct, ptr %25, i32 0, i32 68
  %28 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %pid, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %25, i32 0, i32 101
  %name = getelementptr inbounds %struct.workqueue_struct, ptr %target_wq, i32 0, i32 19
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2645, i32 noundef 9, ptr noundef nonnull @.str.75, i32 noundef %29, ptr noundef %comm, ptr noundef %name, ptr noundef %cond) #21
  br label %if.end40

if.end40:                                         ; preds = %if.then13, %land.rhs.if.end40_crit_edge, %current_wq_worker.exit.if.end40_crit_edge
  %tobool49.not = icmp eq ptr %retval.0.i, null
  br i1 %tobool49.not, label %if.end40.cleanup_crit_edge, label %land.rhs50

if.end40.cleanup_crit_edge:                       ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

land.rhs50:                                       ; preds = %if.end40
  %current_pwq = getelementptr inbounds %struct.worker, ptr %retval.0.i, i32 0, i32 3
  %30 = ptrtoint ptr %current_pwq to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %current_pwq, align 4
  %wq = getelementptr inbounds %struct.pool_workqueue, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %wq, align 4
  %flags51 = getelementptr inbounds %struct.workqueue_struct, ptr %33, i32 0, i32 22
  %34 = ptrtoint ptr %flags51 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %flags51, align 128
  %and52 = and i32 %35, 262152
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %and52)
  %cmp = icmp eq i32 %and52, 8
  br i1 %cmp, label %land.rhs60, label %land.rhs50.cleanup_crit_edge

land.rhs50.cleanup_crit_edge:                     ; preds = %land.rhs50
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

land.rhs60:                                       ; preds = %land.rhs50
  %.b124125 = load i1, ptr @check_flush_dependency.__already_done.76, align 1
  br i1 %.b124125, label %land.rhs60.cleanup_crit_edge, label %if.then71, !prof !679

land.rhs60.cleanup_crit_edge:                     ; preds = %land.rhs60
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then71:                                        ; preds = %land.rhs60
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @check_flush_dependency.__already_done.76, align 1
  %name87 = getelementptr inbounds %struct.workqueue_struct, ptr %33, i32 0, i32 19
  %current_func = getelementptr inbounds %struct.worker, ptr %retval.0.i, i32 0, i32 2
  %36 = ptrtoint ptr %current_func to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %current_func, align 4
  %name89 = getelementptr inbounds %struct.workqueue_struct, ptr %target_wq, i32 0, i32 19
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2650, i32 noundef 9, ptr noundef nonnull @.str.77, ptr noundef %name87, ptr noundef %37, ptr noundef %name89, ptr noundef %cond) #21
  br label %cleanup

cleanup:                                          ; preds = %if.then71, %land.rhs60.cleanup_crit_edge, %land.rhs50.cleanup_crit_edge, %if.end40.cleanup_crit_edge, %cond.end.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @wait_for_completion(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @complete(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @drain_workqueue(ptr noundef %wq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %mutex = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 2
  tail call void @mutex_lock_nested(ptr noundef %mutex, i32 noundef 0) #21
  %nr_drainers = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 11
  %0 = ptrtoint ptr %nr_drainers to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nr_drainers, align 8
  %inc = add i32 %1, 1
  store i32 %inc, ptr %nr_drainers, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %flags = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 22
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 128
  %or = or i32 %3, 65536
  store i32 %or, ptr %flags, align 128
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call void @mutex_unlock(ptr noundef %mutex) #21
  %dep_map = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 2, i32 5
  %name = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 19
  br label %reflush

reflush.loopexit:                                 ; preds = %do.end35, %lor.lhs.false.reflush.loopexit_crit_edge
  tail call void @mutex_unlock(ptr noundef %mutex) #21
  br label %reflush

reflush:                                          ; preds = %reflush.loopexit, %if.end
  %flush_cnt.0 = phi i32 [ 0, %if.end ], [ %inc27, %reflush.loopexit ]
  tail call void @flush_workqueue(ptr noundef %wq)
  tail call void @mutex_lock_nested(ptr noundef %mutex, i32 noundef 0) #21
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool4.not = icmp eq i32 %call.i, 0
  br i1 %tobool4.not, label %land.lhs.true, label %reflush.for.cond.preheader_crit_edge

reflush.for.cond.preheader_crit_edge:             ; preds = %reflush
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.preheader

land.lhs.true:                                    ; preds = %reflush
  %call5 = tail call i32 @rcu_read_lock_any_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %land.lhs.true7, label %land.lhs.true.for.cond.preheader_crit_edge

land.lhs.true.for.cond.preheader_crit_edge:       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.preheader

land.lhs.true7:                                   ; preds = %land.lhs.true
  %call8 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %land.lhs.true7.for.cond.preheader_crit_edge, label %land.lhs.true10

land.lhs.true7.for.cond.preheader_crit_edge:      ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.preheader

land.lhs.true10:                                  ; preds = %land.lhs.true7
  %.b76 = load i1, ptr @drain_workqueue.__warned, align 1
  br i1 %.b76, label %land.lhs.true10.for.cond.preheader_crit_edge, label %if.then12

land.lhs.true10.for.cond.preheader_crit_edge:     ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.preheader

if.then12:                                        ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @drain_workqueue.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 2996, ptr noundef nonnull @.str.9) #21
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then12, %land.lhs.true10.for.cond.preheader_crit_edge, %land.lhs.true7.for.cond.preheader_crit_edge, %land.lhs.true.for.cond.preheader_crit_edge, %reflush.for.cond.preheader_crit_edge
  br label %for.cond

for.cond:                                         ; preds = %land.rhs.for.cond_crit_edge, %for.cond.preheader
  %.pn.in = phi ptr [ %.pn, %land.rhs.for.cond_crit_edge ], [ %wq, %for.cond.preheader ]
  %4 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pn = load volatile ptr, ptr %.pn.in, align 4
  %pwq.0 = getelementptr i8, ptr %.pn, i32 -100
  %cmp.not = icmp eq ptr %.pn, %wq
  br i1 %cmp.not, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond
  %5 = ptrtoint ptr %pwq.0 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pwq.0, align 512
  tail call void @_raw_spin_lock_irq(ptr noundef %6) #21
  %nr_active = getelementptr i8, ptr %.pn, i32 -16
  %7 = ptrtoint ptr %nr_active to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %nr_active, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool19.not = icmp eq i32 %8, 0
  br i1 %tobool19.not, label %land.rhs, label %if.end26.critedge

land.rhs:                                         ; preds = %for.body
  %inactive_works = getelementptr i8, ptr %.pn, i32 -8
  %9 = ptrtoint ptr %inactive_works to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile ptr, ptr %inactive_works, align 4
  %cmp.i = icmp eq ptr %10, %inactive_works
  %11 = ptrtoint ptr %pwq.0 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %pwq.0, align 512
  tail call void @_raw_spin_unlock_irq(ptr noundef %12) #21
  br i1 %cmp.i, label %land.rhs.for.cond_crit_edge, label %land.rhs.if.end26_crit_edge

land.rhs.if.end26_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end26

land.rhs.for.cond_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond

if.end26.critedge:                                ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %13 = ptrtoint ptr %pwq.0 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %pwq.0, align 512
  tail call void @_raw_spin_unlock_irq(ptr noundef %14) #21
  br label %if.end26

if.end26:                                         ; preds = %if.end26.critedge, %land.rhs.if.end26_crit_edge
  %inc27 = add i32 %flush_cnt.0, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %inc27)
  %cmp28 = icmp eq i32 %inc27, 10
  br i1 %cmp28, label %if.end26.do.end35_crit_edge, label %lor.lhs.false

if.end26.do.end35_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end35

lor.lhs.false:                                    ; preds = %if.end26
  %rem = urem i32 %inc27, 100
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem)
  %cmp29 = icmp eq i32 %rem, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1001, i32 %inc27)
  %cmp31 = icmp ult i32 %inc27, 1001
  %or.cond = and i1 %cmp31, %cmp29
  br i1 %or.cond, label %lor.lhs.false.do.end35_crit_edge, label %lor.lhs.false.reflush.loopexit_crit_edge

lor.lhs.false.reflush.loopexit_crit_edge:         ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %reflush.loopexit

lor.lhs.false.do.end35_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end35

do.end35:                                         ; preds = %lor.lhs.false.do.end35_crit_edge, %if.end26.do.end35_crit_edge
  %call37 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.10, ptr noundef %name, ptr noundef nonnull @.str.11, i32 noundef %inc27) #26
  br label %reflush.loopexit

for.end:                                          ; preds = %for.cond
  %15 = ptrtoint ptr %nr_drainers to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %nr_drainers, align 8
  %dec = add i32 %16, -1
  store i32 %dec, ptr %nr_drainers, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %tobool50.not = icmp eq i32 %dec, 0
  br i1 %tobool50.not, label %if.then51, label %for.end.if.end53_crit_edge

for.end.if.end53_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end53

if.then51:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  %flags52 = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 22
  %17 = ptrtoint ptr %flags52 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %flags52, align 128
  %and = and i32 %18, -65537
  store i32 %and, ptr %flags52, align 128
  br label %if.end53

if.end53:                                         ; preds = %if.then51, %for.end.if.end53_crit_edge
  tail call void @mutex_unlock(ptr noundef %mutex) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_any_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @flush_work(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc zeroext i1 @__flush_work(ptr noundef %work, i1 noundef zeroext false)
  ret i1 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @__flush_work(ptr noundef %work, i1 noundef zeroext %from_cancel) #0 align 64 {
entry:
  %barr = alloca %struct.wq_barrier, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %barr) #21
  %0 = call ptr @memset(ptr %barr, i32 255, i32 104)
  %.b76 = load i1, ptr @wq_online, align 1
  br i1 %.b76, label %if.end23, label %do.end, !prof !679

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3081, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end23:                                         ; preds = %entry
  %func = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 2
  %1 = ptrtoint ptr %func to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %func, align 4
  %tobool25.not = icmp eq ptr %2, null
  br i1 %tobool25.not, label %do.end43, label %if.end59, !prof !680

do.end43:                                         ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3084, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end59:                                         ; preds = %if.end23
  br i1 %from_cancel, label %if.end59.if.end66_crit_edge, label %if.then61

if.end59.if.end66_crit_edge:                      ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end66

if.then61:                                        ; preds = %if.end59
  %lockdep_map = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 3
  br label %__here

__here:                                           ; preds = %if.then61
  tail call void @lock_acquire(ptr noundef %lockdep_map, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@__flush_work, %__here) to i32)) #21
  br label %__here64

__here64:                                         ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @lock_release(ptr noundef %lockdep_map, i32 noundef ptrtoint (ptr blockaddress(@__flush_work, %__here64) to i32)) #21
  br label %if.end66

if.end66:                                         ; preds = %__here64, %if.end59.if.end66_crit_edge
  %call = call fastcc zeroext i1 @start_flush_work(ptr noundef %work, ptr noundef nonnull %barr, i1 noundef zeroext %from_cancel)
  br i1 %call, label %if.then68, label %if.end66.cleanup_crit_edge

if.end66.cleanup_crit_edge:                       ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then68:                                        ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #23
  %done = getelementptr inbounds %struct.wq_barrier, ptr %barr, i32 0, i32 1
  call void @wait_for_completion(ptr noundef %done) #21
  call void @debug_object_free(ptr noundef nonnull %barr, ptr noundef nonnull @work_debug_descr) #21
  br label %cleanup

cleanup:                                          ; preds = %if.then68, %if.end66.cleanup_crit_edge, %do.end43, %do.end
  %retval.0 = phi i1 [ false, %do.end ], [ false, %do.end43 ], [ true, %if.then68 ], [ false, %if.end66.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %barr) #21
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @cancel_work_sync(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc zeroext i1 @__cancel_work_timer(ptr noundef %work, i1 noundef zeroext false)
  ret i1 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @__cancel_work_timer(ptr noundef %work, i1 noundef zeroext %is_dwork) unnamed_addr #0 align 64 {
entry:
  %barr.i = alloca %struct.wq_barrier, align 4
  %flags = alloca i32, align 4
  %cwait = alloca %struct.cwt_wait, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flags) #21
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %flags, align 4, !annotation !681
  %1 = getelementptr inbounds %struct.wait_queue_entry, ptr %cwait, i32 0, i32 1
  %2 = getelementptr inbounds %struct.wait_queue_entry, ptr %cwait, i32 0, i32 2
  %3 = getelementptr inbounds %struct.wait_queue_entry, ptr %cwait, i32 0, i32 3
  %4 = getelementptr inbounds %struct.wait_queue_entry, ptr %cwait, i32 0, i32 3, i32 1
  %5 = getelementptr inbounds %struct.cwt_wait, ptr %cwait, i32 0, i32 1
  br label %do.body

do.body:                                          ; preds = %do.cond19.do.body_crit_edge, %entry
  %call = call fastcc i32 @try_to_grab_pending(ptr noundef %work, i1 noundef zeroext %is_dwork, ptr noundef nonnull %flags)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %call)
  %cmp = icmp eq i32 %call, -2
  br i1 %cmp, label %if.then, label %do.body.do.cond19_crit_edge, !prof !680

do.body.do.cond19_crit_edge:                      ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.cond19

if.then:                                          ; preds = %do.body
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %cwait) #21
  %6 = call ptr @memset(ptr %cwait, i32 255, i32 24)
  %7 = call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %task, align 8
  %11 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %10, ptr %1, align 4
  %12 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %3, ptr %3, align 4
  %13 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %3, ptr %4, align 4
  %14 = ptrtoint ptr %cwait to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %cwait, align 4
  %15 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr @cwt_wakefn, ptr %2, align 4
  %16 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %work, ptr %5, align 4
  %call14 = call zeroext i1 @prepare_to_wait_exclusive(ptr noundef nonnull @__cancel_work_timer.cancel_waitq, ptr noundef nonnull %cwait, i32 noundef 2) #21
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %work, i32 noundef 4) #21
  %17 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %work, align 4
  %19 = and i32 %18, 36
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %19)
  %20 = icmp eq i32 %19, 32
  br i1 %20, label %if.then16, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then16:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  call void @schedule() #21
  br label %if.end

if.end:                                           ; preds = %if.then16, %if.then.if.end_crit_edge
  call void @finish_wait(ptr noundef nonnull @__cancel_work_timer.cancel_waitq, ptr noundef nonnull %cwait) #21
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %cwait) #21
  br label %do.cond19

do.cond19:                                        ; preds = %if.end, %do.body.do.cond19_crit_edge
  %cmp20 = icmp slt i32 %call, 0
  br i1 %cmp20, label %do.cond19.do.body_crit_edge, label %do.end27, !prof !680

do.cond19.do.body_crit_edge:                      ; preds = %do.cond19
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body

do.end27:                                         ; preds = %do.cond19
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %work, i32 noundef 4) #21
  %21 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %work, align 4
  %and.i.i = and i32 %22, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %do.end27
  call void @__sanitizer_cov_trace_pc() #23
  %and2.i.i = and i32 %22, -512
  %23 = inttoptr i32 %and2.i.i to ptr
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %23, align 512
  %id.i.i = getelementptr inbounds %struct.worker_pool, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %id.i.i, align 4
  br label %get_work_pool_id.exit.i

if.end.i.i:                                       ; preds = %do.end27
  call void @__sanitizer_cov_trace_pc() #23
  %shr.i.i = lshr i32 %22, 6
  br label %get_work_pool_id.exit.i

get_work_pool_id.exit.i:                          ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %27, %if.then.i.i ], [ %shr.i.i, %if.end.i.i ]
  %28 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %work, align 4
  %and1.i.i.i = and i32 %29, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.not.i3.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.not.i3.i, label %land.rhs.i.i, label %get_work_pool_id.exit.i.mark_work_canceling.exit_crit_edge

get_work_pool_id.exit.i.mark_work_canceling.exit_crit_edge: ; preds = %get_work_pool_id.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %mark_work_canceling.exit

land.rhs.i.i:                                     ; preds = %get_work_pool_id.exit.i
  %.b45.i.i = load i1, ptr @set_work_data.__already_done, align 1
  br i1 %.b45.i.i, label %land.rhs.i.i.mark_work_canceling.exit_crit_edge, label %if.then.i4.i, !prof !679

land.rhs.i.i.mark_work_canceling.exit_crit_edge:  ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %mark_work_canceling.exit

if.then.i4.i:                                     ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @set_work_data.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 630, i32 noundef 9, ptr noundef null) #21
  br label %mark_work_canceling.exit

mark_work_canceling.exit:                         ; preds = %if.then.i4.i, %land.rhs.i.i.mark_work_canceling.exit_crit_edge, %get_work_pool_id.exit.i.mark_work_canceling.exit_crit_edge
  %shl.i = shl i32 %retval.0.i.i, 6
  %30 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %work, align 4
  %and.i.i.i = and i32 %31, 16
  %or.i.i = or i32 %and.i.i.i, %shl.i
  %or40.i.i = or i32 %or.i.i, 33
  %call.i.i.i5.i = call zeroext i1 @__kasan_check_write(ptr noundef %work, i32 noundef 4) #21
  %32 = ptrtoint ptr %work to i32
  call void @__asan_store4_noabort(i32 %32)
  store volatile i32 %or40.i.i, ptr %work, align 4
  %33 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %flags, align 4
  %and.i84 = and i32 %34, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i84)
  %tobool32.not = icmp eq i32 %and.i84, 0
  br i1 %tobool32.not, label %if.then33, label %mark_work_canceling.exit.do.body35_crit_edge

mark_work_canceling.exit.do.body35_crit_edge:     ; preds = %mark_work_canceling.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body35

if.then33:                                        ; preds = %mark_work_canceling.exit
  call void @__sanitizer_cov_trace_pc() #23
  call void @trace_hardirqs_on() #21
  br label %do.body35

do.body35:                                        ; preds = %if.then33, %mark_work_canceling.exit.do.body35_crit_edge
  %35 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #21, !srcloc !689
  %and.i.i85 = and i32 %35, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i85)
  %tobool43.not = icmp eq i32 %and.i.i85, 0
  br i1 %tobool43.not, label %if.then52, label %do.body35.do.end55_crit_edge, !prof !680

do.body35.do.end55_crit_edge:                     ; preds = %do.body35
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end55

if.then52:                                        ; preds = %do.body35
  call void @__sanitizer_cov_trace_pc() #23
  call void @warn_bogus_irq_restore() #21
  br label %do.end55

do.end55:                                         ; preds = %if.then52, %do.body35.do.end55_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %34) #21, !srcloc !690
  %.b83 = load i1, ptr @wq_online, align 1
  br i1 %.b83, label %if.end23.i, label %do.end55.if.end63_crit_edge

do.end55.if.end63_crit_edge:                      ; preds = %do.end55
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end63

if.end23.i:                                       ; preds = %do.end55
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %barr.i) #21
  %36 = call ptr @memset(ptr %barr.i, i32 255, i32 104)
  %func.i = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 2
  %37 = ptrtoint ptr %func.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %func.i, align 4
  %tobool25.not.i = icmp eq ptr %38, null
  br i1 %tobool25.not.i, label %do.end43.i, label %if.end59.i, !prof !680

do.end43.i:                                       ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3084, i32 noundef 9, ptr noundef null) #21
  br label %__flush_work.exit

if.end59.i:                                       ; preds = %if.end23.i
  %call.i = call fastcc zeroext i1 @start_flush_work(ptr noundef %work, ptr noundef nonnull %barr.i, i1 noundef zeroext true) #21
  br i1 %call.i, label %if.then68.i, label %if.end59.i.__flush_work.exit_crit_edge

if.end59.i.__flush_work.exit_crit_edge:           ; preds = %if.end59.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__flush_work.exit

if.then68.i:                                      ; preds = %if.end59.i
  call void @__sanitizer_cov_trace_pc() #23
  %done.i = getelementptr inbounds %struct.wq_barrier, ptr %barr.i, i32 0, i32 1
  call void @wait_for_completion(ptr noundef %done.i) #21
  call void @debug_object_free(ptr noundef nonnull %barr.i, ptr noundef nonnull @work_debug_descr) #21
  br label %__flush_work.exit

__flush_work.exit:                                ; preds = %if.then68.i, %if.end59.i.__flush_work.exit_crit_edge, %do.end43.i
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %barr.i) #21
  br label %if.end63

if.end63:                                         ; preds = %__flush_work.exit, %do.end55.if.end63_crit_edge
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !704
  %39 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %work, align 4
  %and1.i.i.i86 = and i32 %40, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i86)
  %tobool.not.i.i87 = icmp eq i32 %and1.i.i.i86, 0
  br i1 %tobool.not.i.i87, label %land.rhs.i.i89, label %if.end63.clear_work_data.exit_crit_edge

if.end63.clear_work_data.exit_crit_edge:          ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #23
  br label %clear_work_data.exit

land.rhs.i.i89:                                   ; preds = %if.end63
  %.b45.i.i88 = load i1, ptr @set_work_data.__already_done, align 1
  br i1 %.b45.i.i88, label %land.rhs.i.i89.clear_work_data.exit_crit_edge, label %if.then.i.i90, !prof !679

land.rhs.i.i89.clear_work_data.exit_crit_edge:    ; preds = %land.rhs.i.i89
  call void @__sanitizer_cov_trace_pc() #23
  br label %clear_work_data.exit

if.then.i.i90:                                    ; preds = %land.rhs.i.i89
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @set_work_data.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 630, i32 noundef 9, ptr noundef null) #21
  br label %clear_work_data.exit

clear_work_data.exit:                             ; preds = %if.then.i.i90, %land.rhs.i.i89.clear_work_data.exit_crit_edge, %if.end63.clear_work_data.exit_crit_edge
  %41 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %work, align 4
  %and.i.i.i91 = and i32 %42, 16
  %or40.i.i92 = or i32 %and.i.i.i91, -64
  %call.i.i.i.i93 = call zeroext i1 @__kasan_check_write(ptr noundef %work, i32 noundef 4) #21
  %43 = ptrtoint ptr %work to i32
  call void @__asan_store4_noabort(i32 %43)
  store volatile i32 %or40.i.i92, ptr %work, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !705
  %44 = load volatile ptr, ptr getelementptr inbounds (%struct.wait_queue_head, ptr @__cancel_work_timer.cancel_waitq, i32 0, i32 1), align 4
  %cmp.i.i.not = icmp eq ptr %44, getelementptr inbounds (%struct.wait_queue_head, ptr @__cancel_work_timer.cancel_waitq, i32 0, i32 1)
  br i1 %cmp.i.i.not, label %clear_work_data.exit.if.end73_crit_edge, label %if.then72

clear_work_data.exit.if.end73_crit_edge:          ; preds = %clear_work_data.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end73

if.then72:                                        ; preds = %clear_work_data.exit
  call void @__sanitizer_cov_trace_pc() #23
  call void @__wake_up(ptr noundef nonnull @__cancel_work_timer.cancel_waitq, i32 noundef 3, i32 noundef 1, ptr noundef %work) #21
  br label %if.end73

if.end73:                                         ; preds = %if.then72, %clear_work_data.exit.if.end73_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool74 = icmp ne i32 %call, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flags) #21
  ret i1 %tobool74
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @flush_delayed_work(ptr noundef %dwork) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #21, !srcloc !689
  %and.i.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not = icmp eq i32 %and.i.i, 0
  tail call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #21, !srcloc !702
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_off() #21
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %timer = getelementptr inbounds %struct.delayed_work, ptr %dwork, i32 0, i32 1
  %call2 = tail call i32 @del_timer_sync(ptr noundef %timer) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.end.do.body6_crit_edge, label %if.then4

if.end.do.body6_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body6

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %cpu = getelementptr inbounds %struct.delayed_work, ptr %dwork, i32 0, i32 3
  %1 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %cpu, align 4
  %wq = getelementptr inbounds %struct.delayed_work, ptr %dwork, i32 0, i32 2
  %3 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %wq, align 4
  tail call fastcc void @__queue_work(i32 noundef %2, ptr noundef %4, ptr noundef %dwork)
  br label %do.body6

do.body6:                                         ; preds = %if.then4, %if.end.do.body6_crit_edge
  tail call void @trace_hardirqs_on() #21
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !703
  %call.i = tail call fastcc zeroext i1 @__flush_work(ptr noundef %dwork, i1 noundef zeroext false) #21
  ret i1 %call.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @del_timer_sync(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @flush_rcu_work(ptr noundef %rwork) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %rwork to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %rwork, align 4
  %and1.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @rcu_barrier() #21
  %call.i = tail call fastcc zeroext i1 @__flush_work(ptr noundef %rwork, i1 noundef zeroext false) #21
  br label %return

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call.i7 = tail call fastcc zeroext i1 @__flush_work(ptr noundef %rwork, i1 noundef zeroext false) #21
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i1 [ true, %if.then ], [ %call.i7, %if.else ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_barrier() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @cancel_delayed_work(ptr noundef %dwork) #0 align 64 {
entry:
  %flags.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flags.i) #21
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %flags.i, align 4, !annotation !681
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %entry
  %call.i = call fastcc i32 @try_to_grab_pending(ptr noundef %dwork, i1 noundef zeroext true, ptr noundef nonnull %flags.i) #21
  %cmp.i = icmp eq i32 %call.i, -11
  br i1 %cmp.i, label %do.body.i.do.body.i_crit_edge, label %do.end.i, !prof !680

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body.i

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp3.i = icmp slt i32 %call.i, 0
  br i1 %cmp3.i, label %do.end.i.__cancel_work.exit_crit_edge, label %if.end.i, !prof !680

do.end.i.__cancel_work.exit_crit_edge:            ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__cancel_work.exit

if.end.i:                                         ; preds = %do.end.i
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dwork, i32 noundef 4) #21
  %1 = ptrtoint ptr %dwork to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %dwork, align 4
  %and.i.i = and i32 %2, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %and2.i.i = and i32 %2, -512
  %3 = inttoptr i32 %and2.i.i to ptr
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 512
  %id.i.i = getelementptr inbounds %struct.worker_pool, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %id.i.i, align 4
  br label %get_work_pool_id.exit.i

if.end.i.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %shr.i.i = lshr i32 %2, 6
  br label %get_work_pool_id.exit.i

get_work_pool_id.exit.i:                          ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %7, %if.then.i.i ], [ %shr.i.i, %if.end.i.i ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !706
  %8 = ptrtoint ptr %dwork to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %dwork, align 4
  %and1.i.i.i.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.rhs.i.i.i, label %get_work_pool_id.exit.i.set_work_pool_and_clear_pending.exit.i_crit_edge

get_work_pool_id.exit.i.set_work_pool_and_clear_pending.exit.i_crit_edge: ; preds = %get_work_pool_id.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_work_pool_and_clear_pending.exit.i

land.rhs.i.i.i:                                   ; preds = %get_work_pool_id.exit.i
  %.b45.i.i.i = load i1, ptr @set_work_data.__already_done, align 1
  br i1 %.b45.i.i.i, label %land.rhs.i.i.i.set_work_pool_and_clear_pending.exit.i_crit_edge, label %if.then.i.i.i, !prof !679

land.rhs.i.i.i.set_work_pool_and_clear_pending.exit.i_crit_edge: ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_work_pool_and_clear_pending.exit.i

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @set_work_data.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 630, i32 noundef 9, ptr noundef null) #21
  br label %set_work_pool_and_clear_pending.exit.i

set_work_pool_and_clear_pending.exit.i:           ; preds = %if.then.i.i.i, %land.rhs.i.i.i.set_work_pool_and_clear_pending.exit.i_crit_edge, %get_work_pool_id.exit.i.set_work_pool_and_clear_pending.exit.i_crit_edge
  %shl.i.i = shl i32 %retval.0.i.i, 6
  %10 = ptrtoint ptr %dwork to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %dwork, align 4
  %and.i.i.i.i = and i32 %11, 16
  %or40.i.i.i = or i32 %and.i.i.i.i, %shl.i.i
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dwork, i32 noundef 4) #21
  %12 = ptrtoint ptr %dwork to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile i32 %or40.i.i.i, ptr %dwork, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !707
  %13 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %flags.i, align 4
  %and.i1.i = and i32 %14, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i1.i)
  %tobool15.not.i = icmp eq i32 %and.i1.i, 0
  br i1 %tobool15.not.i, label %if.then16.i, label %set_work_pool_and_clear_pending.exit.i.do.body18.i_crit_edge

set_work_pool_and_clear_pending.exit.i.do.body18.i_crit_edge: ; preds = %set_work_pool_and_clear_pending.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body18.i

if.then16.i:                                      ; preds = %set_work_pool_and_clear_pending.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_on() #21
  br label %do.body18.i

do.body18.i:                                      ; preds = %if.then16.i, %set_work_pool_and_clear_pending.exit.i.do.body18.i_crit_edge
  %15 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #21, !srcloc !689
  %and.i.i.i = and i32 %15, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool26.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool26.not.i, label %if.then35.i, label %do.body18.i.do.end38.i_crit_edge, !prof !680

do.body18.i.do.end38.i_crit_edge:                 ; preds = %do.body18.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end38.i

if.then35.i:                                      ; preds = %do.body18.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @warn_bogus_irq_restore() #21
  br label %do.end38.i

do.end38.i:                                       ; preds = %if.then35.i, %do.body18.i.do.end38.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %14) #21, !srcloc !690
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool43.i = icmp ne i32 %call.i, 0
  br label %__cancel_work.exit

__cancel_work.exit:                               ; preds = %do.end38.i, %do.end.i.__cancel_work.exit_crit_edge
  %retval.0.i = phi i1 [ %tobool43.i, %do.end38.i ], [ false, %do.end.i.__cancel_work.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flags.i) #21
  ret i1 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @cancel_delayed_work_sync(ptr noundef %dwork) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc zeroext i1 @__cancel_work_timer(ptr noundef %dwork, i1 noundef zeroext true)
  ret i1 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @schedule_on_each_cpu(ptr noundef %func) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call noalias ptr @__alloc_percpu(i32 noundef 44, i32 noundef 4) #28
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @cpus_read_lock() #21
  %call139 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call139, i32 %0)
  %cmp40 = icmp ult i32 %call139, %0
  br i1 %cmp40, label %for.body.lr.ph, label %if.end.for.cond9.preheader_crit_edge

if.end.for.cond9.preheader_crit_edge:             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond9.preheader

for.body.lr.ph:                                   ; preds = %if.end
  %1 = ptrtoint ptr %call to i32
  br label %for.body

for.cond9.preheader:                              ; preds = %schedule_work_on.exit.for.cond9.preheader_crit_edge, %if.end.for.cond9.preheader_crit_edge
  %call1042 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call1042, i32 %2)
  %cmp1143 = icmp ult i32 %call1042, %2
  br i1 %cmp1143, label %do.body13.lr.ph, label %for.cond9.preheader.for.end23_crit_edge

for.cond9.preheader.for.end23_crit_edge:          ; preds = %for.cond9.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end23

do.body13.lr.ph:                                  ; preds = %for.cond9.preheader
  %3 = ptrtoint ptr %call to i32
  br label %do.body13

for.body:                                         ; preds = %schedule_work_on.exit.for.body_crit_edge, %for.body.lr.ph
  %call141 = phi i32 [ %call139, %for.body.lr.ph ], [ %call1, %schedule_work_on.exit.for.body_crit_edge ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call141
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, %1
  %6 = inttoptr i32 %add to ptr
  tail call void @debug_object_init(ptr noundef %6, ptr noundef nonnull @work_debug_descr) #21
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 -64, ptr %6, align 4
  %lockdep_map = getelementptr inbounds %struct.work_struct, ptr %6, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.12, ptr noundef nonnull @schedule_on_each_cpu.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #21
  %entry4 = getelementptr inbounds %struct.work_struct, ptr %6, i32 0, i32 1
  %8 = ptrtoint ptr %entry4 to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %entry4, ptr %entry4, align 4
  %prev.i = getelementptr inbounds %struct.work_struct, ptr %6, i32 0, i32 1, i32 1
  %9 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %entry4, ptr %prev.i, align 4
  %func5 = getelementptr inbounds %struct.work_struct, ptr %6, i32 0, i32 2
  %10 = ptrtoint ptr %func5 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %func, ptr %func5, align 4
  %11 = load ptr, ptr @system_wq, align 4
  %12 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !688
  %and.i.i.i = and i32 %12, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %for.body.do.end11.i.i_crit_edge

for.body.do.end11.i.i_crit_edge:                  ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end11.i.i

if.then.i.i:                                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_off() #21
  br label %do.end11.i.i

do.end11.i.i:                                     ; preds = %if.then.i.i, %for.body.do.end11.i.i_crit_edge
  %call12.i.i = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %6) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12.i.i)
  %tobool13.not.i.i = icmp eq i32 %call12.i.i, 0
  br i1 %tobool13.not.i.i, label %if.then14.i.i, label %do.end11.i.i.do.body16.i.i_crit_edge

do.end11.i.i.do.body16.i.i_crit_edge:             ; preds = %do.end11.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body16.i.i

if.then14.i.i:                                    ; preds = %do.end11.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @__queue_work(i32 noundef %call141, ptr noundef %11, ptr noundef %6) #21
  br label %do.body16.i.i

do.body16.i.i:                                    ; preds = %if.then14.i.i, %do.end11.i.i.do.body16.i.i_crit_edge
  br i1 %tobool.not.i.i, label %if.then25.i.i, label %do.body16.i.i.do.body27.i.i_crit_edge

do.body16.i.i.do.body27.i.i_crit_edge:            ; preds = %do.body16.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body27.i.i

if.then25.i.i:                                    ; preds = %do.body16.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_on() #21
  br label %do.body27.i.i

do.body27.i.i:                                    ; preds = %if.then25.i.i, %do.body16.i.i.do.body27.i.i_crit_edge
  %13 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #21, !srcloc !689
  %and.i.i.i.i = and i32 %13, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool35.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool35.not.i.i, label %if.then39.i.i, label %do.body27.i.i.schedule_work_on.exit_crit_edge, !prof !680

do.body27.i.i.schedule_work_on.exit_crit_edge:    ; preds = %do.body27.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %schedule_work_on.exit

if.then39.i.i:                                    ; preds = %do.body27.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @warn_bogus_irq_restore() #21
  br label %schedule_work_on.exit

schedule_work_on.exit:                            ; preds = %if.then39.i.i, %do.body27.i.i.schedule_work_on.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %12) #21, !srcloc !690
  %call1 = tail call i32 @cpumask_next(i32 noundef %call141, ptr noundef nonnull @__cpu_online_mask) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %14 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call1, %14
  br i1 %cmp, label %schedule_work_on.exit.for.body_crit_edge, label %schedule_work_on.exit.for.cond9.preheader_crit_edge

schedule_work_on.exit.for.cond9.preheader_crit_edge: ; preds = %schedule_work_on.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond9.preheader

schedule_work_on.exit.for.body_crit_edge:         ; preds = %schedule_work_on.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

do.body13:                                        ; preds = %do.body13.do.body13_crit_edge, %do.body13.lr.ph
  %call1044 = phi i32 [ %call1042, %do.body13.lr.ph ], [ %call10, %do.body13.do.body13_crit_edge ]
  %arrayidx20 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call1044
  %15 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx20, align 4
  %add21 = add i32 %16, %3
  %17 = inttoptr i32 %add21 to ptr
  %call.i = tail call fastcc zeroext i1 @__flush_work(ptr noundef %17, i1 noundef zeroext false) #21
  %call10 = tail call i32 @cpumask_next(i32 noundef %call1044, ptr noundef nonnull @__cpu_online_mask) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %18 = load i32, ptr @nr_cpu_ids, align 4
  %cmp11 = icmp ult i32 %call10, %18
  br i1 %cmp11, label %do.body13.do.body13_crit_edge, label %do.body13.for.end23_crit_edge

do.body13.for.end23_crit_edge:                    ; preds = %do.body13
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end23

do.body13.do.body13_crit_edge:                    ; preds = %do.body13
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body13

for.end23:                                        ; preds = %do.body13.for.end23_crit_edge, %for.cond9.preheader.for.end23_crit_edge
  tail call void @cpus_read_unlock() #21
  tail call void @free_percpu(ptr noundef nonnull %call) #21
  br label %cleanup

cleanup:                                          ; preds = %for.end23, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %for.end23 ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__alloc_percpu(i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @cpus_read_lock() local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @cpus_read_unlock() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_percpu(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @execute_in_process_context(ptr noundef %fn, ptr noundef %ew) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %3, 15728640
  %4 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i21 = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i21 to ptr
  %preempt_count.i22 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i22 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i22, align 4
  %and2 = and i32 %7, 983040
  %or = or i32 %and2, %and
  %8 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i23 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i23 to ptr
  %preempt_count.i24 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i24 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i24, align 4
  %and4 = and i32 %11, 65280
  %or5 = or i32 %or, %and4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or5)
  %tobool.not = icmp eq i32 %or5, 0
  br i1 %tobool.not, label %if.then, label %do.body

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %fn(ptr noundef %ew) #21
  br label %return

do.body:                                          ; preds = %entry
  tail call void @debug_object_init(ptr noundef %ew, ptr noundef nonnull @work_debug_descr) #21
  %12 = ptrtoint ptr %ew to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 -64, ptr %ew, align 4
  %lockdep_map = getelementptr inbounds %struct.work_struct, ptr %ew, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.13, ptr noundef nonnull @execute_in_process_context.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #21
  %entry10 = getelementptr inbounds %struct.work_struct, ptr %ew, i32 0, i32 1
  %13 = ptrtoint ptr %entry10 to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %entry10, ptr %entry10, align 4
  %prev.i = getelementptr inbounds %struct.work_struct, ptr %ew, i32 0, i32 1, i32 1
  %14 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %entry10, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.work_struct, ptr %ew, i32 0, i32 2
  %15 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %fn, ptr %func, align 4
  %16 = load ptr, ptr @system_wq, align 4
  %17 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !688
  %and.i.i.i.i = and i32 %17, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %do.body.do.end11.i.i.i_crit_edge

do.body.do.end11.i.i.i_crit_edge:                 ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end11.i.i.i

if.then.i.i.i:                                    ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_off() #21
  br label %do.end11.i.i.i

do.end11.i.i.i:                                   ; preds = %if.then.i.i.i, %do.body.do.end11.i.i.i_crit_edge
  %call12.i.i.i = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %ew) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12.i.i.i)
  %tobool13.not.i.i.i = icmp eq i32 %call12.i.i.i, 0
  br i1 %tobool13.not.i.i.i, label %if.then14.i.i.i, label %do.end11.i.i.i.do.body16.i.i.i_crit_edge

do.end11.i.i.i.do.body16.i.i.i_crit_edge:         ; preds = %do.end11.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body16.i.i.i

if.then14.i.i.i:                                  ; preds = %do.end11.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @__queue_work(i32 noundef 4, ptr noundef %16, ptr noundef %ew) #21
  br label %do.body16.i.i.i

do.body16.i.i.i:                                  ; preds = %if.then14.i.i.i, %do.end11.i.i.i.do.body16.i.i.i_crit_edge
  br i1 %tobool.not.i.i.i, label %if.then25.i.i.i, label %do.body16.i.i.i.do.body27.i.i.i_crit_edge

do.body16.i.i.i.do.body27.i.i.i_crit_edge:        ; preds = %do.body16.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body27.i.i.i

if.then25.i.i.i:                                  ; preds = %do.body16.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_on() #21
  br label %do.body27.i.i.i

do.body27.i.i.i:                                  ; preds = %if.then25.i.i.i, %do.body16.i.i.i.do.body27.i.i.i_crit_edge
  %18 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #21, !srcloc !689
  %and.i.i.i.i.i = and i32 %18, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool35.not.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool35.not.i.i.i, label %if.then39.i.i.i, label %do.body27.i.i.i.schedule_work.exit_crit_edge, !prof !680

do.body27.i.i.i.schedule_work.exit_crit_edge:     ; preds = %do.body27.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %schedule_work.exit

if.then39.i.i.i:                                  ; preds = %do.body27.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @warn_bogus_irq_restore() #21
  br label %schedule_work.exit

schedule_work.exit:                               ; preds = %if.then39.i.i.i, %do.body27.i.i.i.schedule_work.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %17) #21, !srcloc !690
  br label %return

return:                                           ; preds = %schedule_work.exit, %if.then
  %retval.0 = phi i32 [ 1, %schedule_work.exit ], [ 0, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @schedule_work(ptr noundef %work) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %0 = load ptr, ptr @system_wq, align 4
  %1 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !688
  %and.i.i.i = and i32 %1, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %entry.do.end11.i.i_crit_edge

entry.do.end11.i.i_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end11.i.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_off() #21
  br label %do.end11.i.i

do.end11.i.i:                                     ; preds = %if.then.i.i, %entry.do.end11.i.i_crit_edge
  %call12.i.i = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %work) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12.i.i)
  %tobool13.not.i.i = icmp eq i32 %call12.i.i, 0
  br i1 %tobool13.not.i.i, label %if.then14.i.i, label %do.end11.i.i.do.body16.i.i_crit_edge

do.end11.i.i.do.body16.i.i_crit_edge:             ; preds = %do.end11.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body16.i.i

if.then14.i.i:                                    ; preds = %do.end11.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @__queue_work(i32 noundef 4, ptr noundef %0, ptr noundef %work) #21
  br label %do.body16.i.i

do.body16.i.i:                                    ; preds = %if.then14.i.i, %do.end11.i.i.do.body16.i.i_crit_edge
  br i1 %tobool.not.i.i, label %if.then25.i.i, label %do.body16.i.i.do.body27.i.i_crit_edge

do.body16.i.i.do.body27.i.i_crit_edge:            ; preds = %do.body16.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body27.i.i

if.then25.i.i:                                    ; preds = %do.body16.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_on() #21
  br label %do.body27.i.i

do.body27.i.i:                                    ; preds = %if.then25.i.i, %do.body16.i.i.do.body27.i.i_crit_edge
  %2 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #21, !srcloc !689
  %and.i.i.i.i = and i32 %2, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool35.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool35.not.i.i, label %if.then39.i.i, label %do.body27.i.i.queue_work.exit_crit_edge, !prof !680

do.body27.i.i.queue_work.exit_crit_edge:          ; preds = %do.body27.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %queue_work.exit

if.then39.i.i:                                    ; preds = %do.body27.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @warn_bogus_irq_restore() #21
  br label %queue_work.exit

queue_work.exit:                                  ; preds = %if.then39.i.i, %do.body27.i.i.queue_work.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %1) #21, !srcloc !690
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @free_workqueue_attrs(ptr noundef %attrs) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %attrs, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %cpumask = getelementptr inbounds %struct.workqueue_attrs, ptr %attrs, i32 0, i32 1
  %0 = ptrtoint ptr %cpumask to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cpumask, align 4
  tail call void @free_cpumask_var(ptr noundef %1) #21
  tail call void @kfree(ptr noundef nonnull %attrs) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_cpumask_var(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @alloc_workqueue_attrs() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 12) #29
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %cpumask = getelementptr inbounds %struct.workqueue_attrs, ptr %call7.i.i, i32 0, i32 1
  %call1 = tail call zeroext i1 @alloc_cpumask_var(ptr noundef %cpumask, i32 noundef 3264) #21
  %1 = ptrtoint ptr %cpumask to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %cpumask, align 4
  br i1 %call1, label %if.end3, label %if.then.i

if.end3:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %3 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i = add i32 %3, 31
  %4 = lshr i32 %sub.i.i, 3
  %mul.i.i = and i32 %4, 536870908
  %5 = call ptr @memcpy(ptr %2, ptr @__cpu_possible_mask, i32 %mul.i.i)
  br label %cleanup

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @free_cpumask_var(ptr noundef %2) #21
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #21
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %if.end3, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %call7.i.i, %if.end3 ], [ null, %if.then.i ], [ null, %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @alloc_cpumask_var(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @apply_workqueue_attrs(ptr noundef %wq, ptr nocapture noundef readonly %attrs) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @lockdep_assert_cpus_held() #21
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_mutex, i32 noundef 0) #21
  %call = tail call fastcc i32 @apply_workqueue_attrs_locked(ptr noundef %wq, ptr noundef %attrs)
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_mutex) #21
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_assert_cpus_held() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @apply_workqueue_attrs_locked(ptr noundef %wq, ptr nocapture noundef readonly %attrs) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 22
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 128
  %and = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.end, label %if.end23, !prof !680

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4075, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end23:                                         ; preds = %entry
  %2 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %wq, align 4
  %cmp.i.not = icmp eq ptr %3, %wq
  br i1 %cmp.i.not, label %if.end23.if.end64_crit_edge, label %if.then25

if.end23.if.end64_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end64

if.then25:                                        ; preds = %if.end23
  %and28 = and i32 %1, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28)
  %tobool29.not = icmp eq i32 %and28, 0
  br i1 %tobool29.not, label %if.end61, label %do.end45, !prof !679

do.end45:                                         ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4080, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end61:                                         ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #23
  %and63 = and i32 %1, -131073
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %and63, ptr %flags, align 128
  br label %if.end64

if.end64:                                         ; preds = %if.end61, %if.end23.if.end64_crit_edge
  %call65 = tail call fastcc ptr @apply_wqattrs_prepare(ptr noundef %wq, ptr noundef %attrs)
  %tobool66.not = icmp eq ptr %call65, null
  br i1 %tobool66.not, label %if.end64.cleanup_crit_edge, label %if.end68

if.end64.cleanup_crit_edge:                       ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end68:                                         ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @apply_wqattrs_commit(ptr noundef nonnull %call65)
  tail call fastcc void @apply_wqattrs_cleanup(ptr noundef nonnull %call65)
  br label %cleanup

cleanup:                                          ; preds = %if.end68, %if.end64.cleanup_crit_edge, %do.end45, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ 0, %if.end68 ], [ -22, %do.end45 ], [ -12, %if.end64.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @alloc_workqueue(ptr nocapture noundef readonly %fmt, i32 noundef %flags, i32 noundef %max_active, ...) #0 align 64 {
entry:
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #21
  %0 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !681
  %and = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp ne i32 %and, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %max_active)
  %cmp = icmp eq i32 %max_active, 1
  %or.cond = and i1 %tobool.not, %cmp
  %or = or i32 %flags, 131072
  %flags.addr.0 = select i1 %or.cond, i32 %or, i32 %flags
  %and1 = and i32 %flags.addr.0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool2.not = icmp eq i32 %and1, 0
  br i1 %tobool2.not, label %entry.if.end7_crit_edge, label %land.lhs.true3

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7

land.lhs.true3:                                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %1 = load i8, ptr @wq_power_efficient, align 1, !range !696
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool4.not = icmp eq i8 %1, 0
  %or6 = or i32 %flags.addr.0, 2
  %spec.select = select i1 %tobool4.not, i32 %flags.addr.0, i32 %or6
  br label %if.end7

if.end7:                                          ; preds = %land.lhs.true3, %entry.if.end7_crit_edge
  %flags.addr.1 = phi i32 [ %flags.addr.0, %entry.if.end7_crit_edge ], [ %spec.select, %land.lhs.true3 ]
  %and8 = and i32 %flags.addr.1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  %spec.select132 = select i1 %tobool9.not, i32 384, i32 388
  %call9.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %spec.select132, i32 noundef 3520) #28
  %tobool12.not = icmp eq ptr %call9.i.i, null
  br i1 %tobool12.not, label %if.end7.cleanup_crit_edge, label %if.end14

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end14:                                         ; preds = %if.end7
  br i1 %tobool9.not, label %if.end14.if.end23_crit_edge, label %if.then17

if.end14.if.end23_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end23

if.then17:                                        ; preds = %if.end14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3520, i32 noundef 12) #29
  %tobool.not.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i, label %if.then17.alloc_workqueue_attrs.exit.thread_crit_edge, label %if.end.i

if.then17.alloc_workqueue_attrs.exit.thread_crit_edge: ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #23
  br label %alloc_workqueue_attrs.exit.thread

if.end.i:                                         ; preds = %if.then17
  %cpumask.i = getelementptr inbounds %struct.workqueue_attrs, ptr %call7.i.i.i, i32 0, i32 1
  %call1.i = tail call zeroext i1 @alloc_cpumask_var(ptr noundef %cpumask.i, i32 noundef 3264) #21
  %3 = ptrtoint ptr %cpumask.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %cpumask.i, align 4
  br i1 %call1.i, label %alloc_workqueue_attrs.exit, label %if.then.i.i133

if.then.i.i133:                                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @free_cpumask_var(ptr noundef %4) #21
  tail call void @kfree(ptr noundef nonnull %call7.i.i.i) #21
  br label %alloc_workqueue_attrs.exit.thread

alloc_workqueue_attrs.exit.thread:                ; preds = %if.then.i.i133, %if.then17.alloc_workqueue_attrs.exit.thread_crit_edge
  %unbound_attrs159 = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 13
  %5 = ptrtoint ptr %unbound_attrs159 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %unbound_attrs159, align 32
  br label %err_free_wq

alloc_workqueue_attrs.exit:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %6 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i.i = add i32 %6, 31
  %7 = lshr i32 %sub.i.i.i, 3
  %mul.i.i.i = and i32 %7, 536870908
  %8 = call ptr @memcpy(ptr %4, ptr @__cpu_possible_mask, i32 %mul.i.i.i)
  %unbound_attrs = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 13
  %9 = ptrtoint ptr %unbound_attrs to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %call7.i.i.i, ptr %unbound_attrs, align 32
  br label %if.end23

if.end23:                                         ; preds = %alloc_workqueue_attrs.exit, %if.end14.if.end23_crit_edge
  call void @llvm.va_start(ptr nonnull %args)
  %name = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 19
  %10 = ptrtoint ptr %args to i32
  call void @__asan_load4_noabort(i32 %10)
  %.fca.0.load = load i32, ptr %args, align 4
  %.fca.0.insert = insertvalue [1 x i32] poison, i32 %.fca.0.load, 0
  %call24 = call i32 @vsnprintf(ptr noundef %name, i32 noundef 24, ptr noundef %fmt, [1 x i32] %.fca.0.insert)
  call void @llvm.va_end(ptr nonnull %args)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %max_active)
  %tobool25.not = icmp eq i32 %max_active, 0
  %. = select i1 %tobool25.not, i32 256, i32 %max_active
  br i1 %tobool9.not, label %if.end23.cond.end3.i_crit_edge, label %if.end.i.i.i

if.end23.cond.end3.i_crit_edge:                   ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end3.i

if.end.i.i.i:                                     ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %11 = load i32, ptr @nr_cpu_ids, align 4
  %call4.i.i.i = call i32 @__bitmap_weight(ptr noundef nonnull @__cpu_possible_mask, i32 noundef %11) #21
  %mul.i = shl i32 %call4.i.i.i, 2
  %12 = call i32 @llvm.smax.i32(i32 %mul.i, i32 512) #21
  br label %cond.end3.i

cond.end3.i:                                      ; preds = %if.end.i.i.i, %if.end23.cond.end3.i_crit_edge
  %cond4.i = phi i32 [ %12, %if.end.i.i.i ], [ 512, %if.end23.cond.end3.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %.)
  %cmp5.i = icmp slt i32 %., 1
  call void @__sanitizer_cov_trace_cmp4(i32 %cond4.i, i32 %.)
  %cmp6.i = icmp slt i32 %cond4.i, %.
  %or.cond.i = select i1 %cmp5.i, i1 true, i1 %cmp6.i
  br i1 %or.cond.i, label %do.end.i, label %cond.end3.i.wq_clamp_max_active.exit_crit_edge

cond.end3.i.wq_clamp_max_active.exit_crit_edge:   ; preds = %cond.end3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %wq_clamp_max_active.exit

do.end.i:                                         ; preds = %cond.end3.i
  call void @__sanitizer_cov_trace_pc() #23
  %call8.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.87, i32 noundef %., ptr noundef %name, i32 noundef 1, i32 noundef %cond4.i) #26
  br label %wq_clamp_max_active.exit

wq_clamp_max_active.exit:                         ; preds = %do.end.i, %cond.end3.i.wq_clamp_max_active.exit_crit_edge
  %13 = call i32 @llvm.smax.i32(i32 %., i32 1) #21
  %14 = call i32 @llvm.umin.i32(i32 %13, i32 %cond4.i) #21
  %flags29 = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 22
  %15 = ptrtoint ptr %flags29 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %flags.addr.1, ptr %flags29, align 128
  %saved_max_active = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 12
  %16 = ptrtoint ptr %saved_max_active to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %14, ptr %saved_max_active, align 4
  %mutex = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 2
  call void @__mutex_init(ptr noundef %mutex, ptr noundef nonnull @.str.14, ptr noundef nonnull @alloc_workqueue.__key) #21
  %nr_pwqs_to_flush = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 5
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %nr_pwqs_to_flush, i32 noundef 4) #21
  %17 = ptrtoint ptr %nr_pwqs_to_flush to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile i32 0, ptr %nr_pwqs_to_flush, align 4
  %18 = ptrtoint ptr %call9.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %call9.i.i, ptr %call9.i.i, align 128
  %prev.i = getelementptr inbounds %struct.list_head, ptr %call9.i.i, i32 0, i32 1
  %19 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %call9.i.i, ptr %prev.i, align 4
  %flusher_queue = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 7
  %20 = ptrtoint ptr %flusher_queue to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %flusher_queue, ptr %flusher_queue, align 4
  %prev.i137 = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 7, i32 1
  %21 = ptrtoint ptr %prev.i137 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %flusher_queue, ptr %prev.i137, align 128
  %flusher_overflow = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 8
  %22 = ptrtoint ptr %flusher_overflow to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %flusher_overflow, ptr %flusher_overflow, align 4
  %prev.i138 = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 8, i32 1
  %23 = ptrtoint ptr %prev.i138 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %flusher_overflow, ptr %prev.i138, align 8
  %maydays = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 9
  %24 = ptrtoint ptr %maydays to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %maydays, ptr %maydays, align 4
  %prev.i139 = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 9, i32 1
  %25 = ptrtoint ptr %prev.i139 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %maydays, ptr %prev.i139, align 16
  %key.i = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 17
  call void @lockdep_register_key(ptr noundef %key.i) #21
  %call.i = call noalias ptr (i32, ptr, ...) @kasprintf(i32 noundef 3264, ptr noundef nonnull @.str.89, ptr noundef nonnull @.str.90, ptr noundef %name) #21
  %tobool.not.i140 = icmp eq ptr %call.i, null
  %spec.select.i = select i1 %tobool.not.i140, ptr %name, ptr %call.i
  %lock_name3.i = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 16
  %26 = ptrtoint ptr %lock_name3.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %spec.select.i, ptr %lock_name3.i, align 4
  %lockdep_map.i = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 18
  call void @lockdep_init_map_type(ptr noundef %lockdep_map.i, ptr noundef %spec.select.i, ptr noundef %key.i, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #21
  %list = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 1
  %27 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %list, ptr %list, align 8
  %prev.i141 = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 1, i32 1
  %28 = ptrtoint ptr %prev.i141 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %list, ptr %prev.i141, align 4
  %29 = ptrtoint ptr %flags29 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %flags29, align 128
  %and.i142 = and i32 %30, 16
  %and2.i = and i32 %30, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i)
  %tobool3.not.i = icmp eq i32 %and2.i, 0
  br i1 %tobool3.not.i, label %if.then.i, label %if.end22.i

if.then.i:                                        ; preds = %wq_clamp_max_active.exit
  %call.i143 = call noalias ptr @__alloc_percpu(i32 noundef 512, i32 noundef 512) #28
  %cpu_pwqs.i = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 23
  %31 = ptrtoint ptr %cpu_pwqs.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %call.i143, ptr %cpu_pwqs.i, align 4
  %tobool5.not.i = icmp eq ptr %call.i143, null
  br i1 %tobool5.not.i, label %if.then.i.err_unreg_lockdep_crit_edge, label %for.cond.preheader.i

if.then.i.err_unreg_lockdep_crit_edge:            ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %err_unreg_lockdep

for.cond.preheader.i:                             ; preds = %if.then.i
  %call796.i = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %32 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call796.i, i32 %32)
  %cmp97.i = icmp ult i32 %call796.i, %32
  br i1 %cmp97.i, label %for.body.lr.ph.i, label %for.cond.preheader.i.if.end33_crit_edge

for.cond.preheader.i.if.end33_crit_edge:          ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end33

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %and.lobit.i = lshr exact i32 %and.i142, 4
  br label %for.body.i

for.body.i:                                       ; preds = %init_pwq.exit.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %call798.i = phi i32 [ %call796.i, %for.body.lr.ph.i ], [ %call7.i, %init_pwq.exit.i.for.body.i_crit_edge ]
  %33 = ptrtoint ptr %cpu_pwqs.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %cpu_pwqs.i, align 4
  %35 = ptrtoint ptr %34 to i32
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call798.i
  %36 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %37, %35
  %and.i.i = and i32 %add.i, 511
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %init_pwq.exit.i, label %do.body3.i.i, !prof !679

do.body3.i.i:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/workqueue.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3810, 0\0A.popsection", ""() #21, !srcloc !708
  unreachable

init_pwq.exit.i:                                  ; preds = %for.body.i
  %add18.i = add i32 %37, ptrtoint (ptr @cpu_worker_pools to i32)
  %38 = inttoptr i32 %add18.i to ptr
  %arrayidx20.i = getelementptr %struct.worker_pool, ptr %38, i32 %and.lobit.i
  %39 = inttoptr i32 %add.i to ptr
  %40 = call ptr @memset(ptr %39, i32 0, i32 512)
  %41 = ptrtoint ptr %39 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %arrayidx20.i, ptr %39, align 512
  %wq8.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %39, i32 0, i32 1
  %42 = ptrtoint ptr %wq8.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %call9.i.i, ptr %wq8.i.i, align 4
  %flush_color.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %39, i32 0, i32 3
  %43 = ptrtoint ptr %flush_color.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 -1, ptr %flush_color.i.i, align 4
  %refcnt.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %39, i32 0, i32 4
  %44 = ptrtoint ptr %refcnt.i.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 1, ptr %refcnt.i.i, align 16
  %inactive_works.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %39, i32 0, i32 8
  %45 = ptrtoint ptr %inactive_works.i.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile ptr %inactive_works.i.i, ptr %inactive_works.i.i, align 4
  %prev.i.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %39, i32 0, i32 8, i32 1
  %46 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %inactive_works.i.i, ptr %prev.i.i.i, align 4
  %pwqs_node.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %39, i32 0, i32 9
  %47 = ptrtoint ptr %pwqs_node.i.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store volatile ptr %pwqs_node.i.i, ptr %pwqs_node.i.i, align 4
  %prev.i29.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %39, i32 0, i32 9, i32 1
  %48 = ptrtoint ptr %prev.i29.i.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %pwqs_node.i.i, ptr %prev.i29.i.i, align 4
  %mayday_node.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %39, i32 0, i32 10
  %49 = ptrtoint ptr %mayday_node.i.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store volatile ptr %mayday_node.i.i, ptr %mayday_node.i.i, align 4
  %prev.i30.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %39, i32 0, i32 10, i32 1
  %50 = ptrtoint ptr %prev.i30.i.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %mayday_node.i.i, ptr %prev.i30.i.i, align 4
  %unbound_release_work.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %39, i32 0, i32 11
  call void @debug_object_init(ptr noundef %unbound_release_work.i.i, ptr noundef nonnull @work_debug_descr) #21
  %51 = ptrtoint ptr %unbound_release_work.i.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 -64, ptr %unbound_release_work.i.i, align 4
  %lockdep_map.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %39, i32 0, i32 11, i32 3
  call void @lockdep_init_map_type(ptr noundef %lockdep_map.i.i, ptr noundef nonnull @.str.84, ptr noundef nonnull @init_pwq.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #21
  %entry13.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %39, i32 0, i32 11, i32 1
  %52 = ptrtoint ptr %entry13.i.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store volatile ptr %entry13.i.i, ptr %entry13.i.i, align 4
  %prev.i31.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %39, i32 0, i32 11, i32 1, i32 1
  %53 = ptrtoint ptr %prev.i31.i.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %entry13.i.i, ptr %prev.i31.i.i, align 4
  %func.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %39, i32 0, i32 11, i32 2
  %54 = ptrtoint ptr %func.i.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr @pwq_unbound_release_workfn, ptr %func.i.i, align 4
  call void @mutex_lock_nested(ptr noundef %mutex, i32 noundef 0) #21
  call fastcc void @link_pwq(ptr noundef %39) #21
  call void @mutex_unlock(ptr noundef %mutex) #21
  %call7.i = call i32 @cpumask_next(i32 noundef %call798.i, ptr noundef nonnull @__cpu_possible_mask) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %55 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.i = icmp ult i32 %call7.i, %55
  br i1 %cmp.i, label %init_pwq.exit.i.for.body.i_crit_edge, label %init_pwq.exit.i.if.end33_crit_edge

init_pwq.exit.i.if.end33_crit_edge:               ; preds = %init_pwq.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end33

init_pwq.exit.i.for.body.i_crit_edge:             ; preds = %init_pwq.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

if.end22.i:                                       ; preds = %wq_clamp_max_active.exit
  call void @cpus_read_lock() #21
  %56 = ptrtoint ptr %flags29 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %flags29, align 128
  %and24.i = and i32 %57, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and24.i)
  %tobool25.not.i = icmp eq i32 %and24.i, 0
  %and.lobit93.i = lshr exact i32 %and.i142, 4
  br i1 %tobool25.not.i, label %if.else.i, label %if.then26.i

if.then26.i:                                      ; preds = %if.end22.i
  %arrayidx29.i = getelementptr [2 x ptr], ptr @ordered_wq_attrs, i32 0, i32 %and.lobit93.i
  %58 = ptrtoint ptr %arrayidx29.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %arrayidx29.i, align 4
  call void @lockdep_assert_cpus_held() #21
  call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_mutex, i32 noundef 0) #21
  %call.i.i144 = call fastcc i32 @apply_workqueue_attrs_locked(ptr noundef nonnull %call9.i.i, ptr noundef %59) #21
  call void @mutex_unlock(ptr noundef nonnull @wq_pool_mutex) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i144)
  %tobool31.not.i = icmp eq i32 %call.i.i144, 0
  br i1 %tobool31.not.i, label %land.rhs.i, label %if.then26.i.alloc_and_link_pwqs.exit_crit_edge

if.then26.i.alloc_and_link_pwqs.exit_crit_edge:   ; preds = %if.then26.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %alloc_and_link_pwqs.exit

land.rhs.i:                                       ; preds = %if.then26.i
  %60 = ptrtoint ptr %call9.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %call9.i.i, align 128
  %dfl_pwq.i = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 14
  %62 = ptrtoint ptr %dfl_pwq.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %dfl_pwq.i, align 4
  %pwqs_node.i = getelementptr inbounds %struct.pool_workqueue, ptr %63, i32 0, i32 9
  %cmp32.not.i = icmp eq ptr %61, %pwqs_node.i
  br i1 %cmp32.not.i, label %lor.rhs.i, label %land.rhs.i.do.end48.i_crit_edge

land.rhs.i.do.end48.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end48.i

lor.rhs.i:                                        ; preds = %land.rhs.i
  %64 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %prev.i, align 4
  %cmp36.not.i = icmp eq ptr %65, %61
  br i1 %cmp36.not.i, label %lor.rhs.i.alloc_and_link_pwqs.exit.thread167_crit_edge, label %lor.rhs.i.do.end48.i_crit_edge, !prof !679

lor.rhs.i.do.end48.i_crit_edge:                   ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end48.i

lor.rhs.i.alloc_and_link_pwqs.exit.thread167_crit_edge: ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %alloc_and_link_pwqs.exit.thread167

do.end48.i:                                       ; preds = %lor.rhs.i.do.end48.i_crit_edge, %land.rhs.i.do.end48.i_crit_edge
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4245, i32 noundef 9, ptr noundef nonnull @.str.91, ptr noundef %name) #21
  br label %alloc_and_link_pwqs.exit.thread167

if.else.i:                                        ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #23
  %arrayidx65.i = getelementptr [2 x ptr], ptr @unbound_std_wq_attrs, i32 0, i32 %and.lobit93.i
  %66 = ptrtoint ptr %arrayidx65.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %arrayidx65.i, align 4
  call void @lockdep_assert_cpus_held() #21
  call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_mutex, i32 noundef 0) #21
  %call.i95.i = call fastcc i32 @apply_workqueue_attrs_locked(ptr noundef nonnull %call9.i.i, ptr noundef %67) #21
  call void @mutex_unlock(ptr noundef nonnull @wq_pool_mutex) #21
  br label %alloc_and_link_pwqs.exit

alloc_and_link_pwqs.exit.thread167:               ; preds = %do.end48.i, %lor.rhs.i.alloc_and_link_pwqs.exit.thread167_crit_edge
  call void @cpus_read_unlock() #21
  br label %if.end33

alloc_and_link_pwqs.exit:                         ; preds = %if.else.i, %if.then26.i.alloc_and_link_pwqs.exit_crit_edge
  %ret.0.i = phi i32 [ %call.i95.i, %if.else.i ], [ %call.i.i144, %if.then26.i.alloc_and_link_pwqs.exit_crit_edge ]
  call void @cpus_read_unlock() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0.i)
  %cmp31 = icmp slt i32 %ret.0.i, 0
  br i1 %cmp31, label %alloc_and_link_pwqs.exit.err_unreg_lockdep_crit_edge, label %alloc_and_link_pwqs.exit.if.end33_crit_edge

alloc_and_link_pwqs.exit.if.end33_crit_edge:      ; preds = %alloc_and_link_pwqs.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end33

alloc_and_link_pwqs.exit.err_unreg_lockdep_crit_edge: ; preds = %alloc_and_link_pwqs.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %err_unreg_lockdep

if.end33:                                         ; preds = %alloc_and_link_pwqs.exit.if.end33_crit_edge, %alloc_and_link_pwqs.exit.thread167, %init_pwq.exit.i.if.end33_crit_edge, %for.cond.preheader.i.if.end33_crit_edge
  %.b130 = load i1, ptr @wq_online, align 1
  br i1 %.b130, label %land.lhs.true35, label %if.end33.if.end39_crit_edge

if.end33.if.end39_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end39

land.lhs.true35:                                  ; preds = %if.end33
  %call36 = call fastcc i32 @init_rescuer(ptr noundef nonnull %call9.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36)
  %cmp37 = icmp slt i32 %call36, 0
  br i1 %cmp37, label %land.lhs.true35.err_destroy_crit_edge, label %land.lhs.true35.if.end39_crit_edge

land.lhs.true35.if.end39_crit_edge:               ; preds = %land.lhs.true35
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end39

land.lhs.true35.err_destroy_crit_edge:            ; preds = %land.lhs.true35
  call void @__sanitizer_cov_trace_pc() #23
  br label %err_destroy

if.end39:                                         ; preds = %land.lhs.true35.if.end39_crit_edge, %if.end33.if.end39_crit_edge
  %68 = ptrtoint ptr %flags29 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %flags29, align 128
  %and41 = and i32 %69, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and41)
  %tobool42.not = icmp eq i32 %and41, 0
  br i1 %tobool42.not, label %if.end39.if.end47_crit_edge, label %land.lhs.true43

if.end39.if.end47_crit_edge:                      ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end47

land.lhs.true43:                                  ; preds = %if.end39
  %call44 = call i32 @workqueue_sysfs_register(ptr noundef nonnull %call9.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call44)
  %tobool45.not = icmp eq i32 %call44, 0
  br i1 %tobool45.not, label %land.lhs.true43.if.end47_crit_edge, label %land.lhs.true43.err_destroy_crit_edge

land.lhs.true43.err_destroy_crit_edge:            ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #23
  br label %err_destroy

land.lhs.true43.if.end47_crit_edge:               ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end47

if.end47:                                         ; preds = %land.lhs.true43.if.end47_crit_edge, %if.end39.if.end47_crit_edge
  call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_mutex, i32 noundef 0) #21
  call void @mutex_lock_nested(ptr noundef %mutex, i32 noundef 0) #21
  %dep_map = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 2, i32 5
  %call.i148 = call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i148)
  %tobool52.not = icmp eq i32 %call.i148, 0
  br i1 %tobool52.not, label %land.lhs.true53, label %if.end47.do.end64_crit_edge

if.end47.do.end64_crit_edge:                      ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end64

land.lhs.true53:                                  ; preds = %if.end47
  %call54 = call i32 @rcu_read_lock_any_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call54)
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %land.lhs.true56, label %land.lhs.true53.do.end64_crit_edge

land.lhs.true53.do.end64_crit_edge:               ; preds = %land.lhs.true53
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end64

land.lhs.true56:                                  ; preds = %land.lhs.true53
  %call57 = call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call57)
  %tobool58.not = icmp eq i32 %call57, 0
  br i1 %tobool58.not, label %land.lhs.true56.do.end64_crit_edge, label %land.lhs.true59

land.lhs.true56.do.end64_crit_edge:               ; preds = %land.lhs.true56
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end64

land.lhs.true59:                                  ; preds = %land.lhs.true56
  %.b129131 = load i1, ptr @alloc_workqueue.__warned, align 1
  br i1 %.b129131, label %land.lhs.true59.do.end64_crit_edge, label %if.then61

land.lhs.true59.do.end64_crit_edge:               ; preds = %land.lhs.true59
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end64

if.then61:                                        ; preds = %land.lhs.true59
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @alloc_workqueue.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 4372, ptr noundef nonnull @.str.9) #21
  br label %do.end64

do.end64:                                         ; preds = %if.then61, %land.lhs.true59.do.end64_crit_edge, %land.lhs.true56.do.end64_crit_edge, %land.lhs.true53.do.end64_crit_edge, %if.end47.do.end64_crit_edge
  %70 = ptrtoint ptr %call9.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %.pn170 = load volatile ptr, ptr %call9.i.i, align 128
  %cmp71.not171 = icmp eq ptr %.pn170, %call9.i.i
  br i1 %cmp71.not171, label %do.end64.for.end_crit_edge, label %do.end64.for.body_crit_edge

do.end64.for.body_crit_edge:                      ; preds = %do.end64
  br label %for.body

do.end64.for.end_crit_edge:                       ; preds = %do.end64
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %do.end64.for.body_crit_edge
  %.pn172 = phi ptr [ %.pn, %for.body.for.body_crit_edge ], [ %.pn170, %do.end64.for.body_crit_edge ]
  %pwq.0 = getelementptr i8, ptr %.pn172, i32 -100
  call fastcc void @pwq_adjust_max_active(ptr noundef %pwq.0)
  %71 = ptrtoint ptr %.pn172 to i32
  call void @__asan_load4_noabort(i32 %71)
  %.pn = load volatile ptr, ptr %.pn172, align 4
  %cmp71.not = icmp eq ptr %.pn, %call9.i.i
  br i1 %cmp71.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %do.end64.for.end_crit_edge
  call void @mutex_unlock(ptr noundef %mutex) #21
  %72 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @workqueues, i32 0, i32 1), align 4
  %call.i.i149 = call zeroext i1 @__list_add_valid(ptr noundef %list, ptr noundef %72, ptr noundef nonnull @workqueues) #21
  br i1 %call.i.i149, label %if.end.i.i, label %for.end.list_add_tail_rcu.exit_crit_edge

for.end.list_add_tail_rcu.exit_crit_edge:         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_add_tail_rcu.exit

if.end.i.i:                                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  %73 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr @workqueues, ptr %list, align 8
  %74 = ptrtoint ptr %prev.i141 to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr %72, ptr %prev.i141, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !709
  %75 = ptrtoint ptr %72 to i32
  call void @__asan_store4_noabort(i32 %75)
  store volatile ptr %list, ptr %72, align 4
  store ptr %list, ptr getelementptr inbounds (%struct.list_head, ptr @workqueues, i32 0, i32 1), align 4
  br label %list_add_tail_rcu.exit

list_add_tail_rcu.exit:                           ; preds = %if.end.i.i, %for.end.list_add_tail_rcu.exit_crit_edge
  call void @mutex_unlock(ptr noundef nonnull @wq_pool_mutex) #21
  br label %cleanup

err_unreg_lockdep:                                ; preds = %alloc_and_link_pwqs.exit.err_unreg_lockdep_crit_edge, %if.then.i.err_unreg_lockdep_crit_edge
  call void @lockdep_unregister_key(ptr noundef %key.i) #21
  %76 = ptrtoint ptr %lock_name3.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %lock_name3.i, align 4
  %cmp.not.i = icmp eq ptr %77, %name
  br i1 %cmp.not.i, label %err_unreg_lockdep.err_free_wq_crit_edge, label %if.then.i152

err_unreg_lockdep.err_free_wq_crit_edge:          ; preds = %err_unreg_lockdep
  call void @__sanitizer_cov_trace_pc() #23
  br label %err_free_wq

if.then.i152:                                     ; preds = %err_unreg_lockdep
  call void @__sanitizer_cov_trace_pc() #23
  call void @kfree(ptr noundef %77) #21
  br label %err_free_wq

err_free_wq:                                      ; preds = %if.then.i152, %err_unreg_lockdep.err_free_wq_crit_edge, %alloc_workqueue_attrs.exit.thread
  %unbound_attrs83 = getelementptr inbounds %struct.workqueue_struct, ptr %call9.i.i, i32 0, i32 13
  %78 = ptrtoint ptr %unbound_attrs83 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %unbound_attrs83, align 32
  %tobool.not.i154 = icmp eq ptr %79, null
  br i1 %tobool.not.i154, label %err_free_wq.free_workqueue_attrs.exit_crit_edge, label %if.then.i156

err_free_wq.free_workqueue_attrs.exit_crit_edge:  ; preds = %err_free_wq
  call void @__sanitizer_cov_trace_pc() #23
  br label %free_workqueue_attrs.exit

if.then.i156:                                     ; preds = %err_free_wq
  call void @__sanitizer_cov_trace_pc() #23
  %cpumask.i155 = getelementptr inbounds %struct.workqueue_attrs, ptr %79, i32 0, i32 1
  %80 = ptrtoint ptr %cpumask.i155 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %cpumask.i155, align 4
  call void @free_cpumask_var(ptr noundef %81) #21
  call void @kfree(ptr noundef nonnull %79) #21
  br label %free_workqueue_attrs.exit

free_workqueue_attrs.exit:                        ; preds = %if.then.i156, %err_free_wq.free_workqueue_attrs.exit_crit_edge
  call void @kfree(ptr noundef nonnull %call9.i.i) #21
  br label %cleanup

err_destroy:                                      ; preds = %land.lhs.true43.err_destroy_crit_edge, %land.lhs.true35.err_destroy_crit_edge
  call void @destroy_workqueue(ptr noundef nonnull %call9.i.i)
  br label %cleanup

cleanup:                                          ; preds = %err_destroy, %free_workqueue_attrs.exit, %list_add_tail_rcu.exit, %if.end7.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %free_workqueue_attrs.exit ], [ null, %err_destroy ], [ %call9.i.i, %list_add_tail_rcu.exit ], [ null, %if.end7.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #21
  ret ptr %retval.0
}

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start(ptr) #7

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @vsnprintf(ptr nocapture noundef, i32 noundef, ptr nocapture noundef readonly, [1 x i32] noundef) local_unnamed_addr #8

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end(ptr) #7

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @init_rescuer(ptr noundef %wq) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 22
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 128
  %and = and i32 %1, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call.i.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3520, i32 noundef 96) #29
  %tobool.not.i = icmp eq ptr %call.i.i.i.i, null
  br i1 %tobool.not.i, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %3 = ptrtoint ptr %call.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile ptr %call.i.i.i.i, ptr %call.i.i.i.i, align 8
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %call.i.i.i.i, i32 0, i32 1
  %4 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call.i.i.i.i, ptr %prev.i.i, align 4
  %scheduled.i = getelementptr inbounds %struct.worker, ptr %call.i.i.i.i, i32 0, i32 5
  %5 = ptrtoint ptr %scheduled.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %scheduled.i, ptr %scheduled.i, align 8
  %prev.i1.i = getelementptr inbounds %struct.worker, ptr %call.i.i.i.i, i32 0, i32 5, i32 1
  %6 = ptrtoint ptr %prev.i1.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %scheduled.i, ptr %prev.i1.i, align 4
  %node1.i = getelementptr inbounds %struct.worker, ptr %call.i.i.i.i, i32 0, i32 8
  %7 = ptrtoint ptr %node1.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %node1.i, ptr %node1.i, align 8
  %prev.i2.i = getelementptr inbounds %struct.worker, ptr %call.i.i.i.i, i32 0, i32 8, i32 1
  %8 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %node1.i, ptr %prev.i2.i, align 4
  %flags.i = getelementptr inbounds %struct.worker, ptr %call.i.i.i.i, i32 0, i32 10
  %9 = ptrtoint ptr %flags.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 8, ptr %flags.i, align 4
  %rescue_wq = getelementptr inbounds %struct.worker, ptr %call.i.i.i.i, i32 0, i32 14
  %10 = ptrtoint ptr %rescue_wq to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %wq, ptr %rescue_wq, align 8
  %name = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 19
  %call4 = tail call ptr (ptr, ptr, i32, ptr, ...) @kthread_create_on_node(ptr noundef nonnull @rescuer_thread, ptr noundef nonnull %call.i.i.i.i, i32 noundef -1, ptr noundef nonnull @.str.36, ptr noundef %name) #21
  %task = getelementptr inbounds %struct.worker, ptr %call.i.i.i.i, i32 0, i32 6
  %11 = ptrtoint ptr %task to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %call4, ptr %task, align 8
  %cmp.i = icmp ugt ptr %call4, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then7, label %if.end10

if.then7:                                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  %12 = ptrtoint ptr %call4 to i32
  tail call void @kfree(ptr noundef nonnull %call.i.i.i.i) #21
  br label %cleanup

if.end10:                                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  %rescuer11 = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 10
  %13 = ptrtoint ptr %rescuer11 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %call.i.i.i.i, ptr %rescuer11, align 4
  tail call void @kthread_bind_mask(ptr noundef %call4, ptr noundef nonnull @__cpu_possible_mask) #21
  %14 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task, align 8
  %call14 = tail call i32 @wake_up_process(ptr noundef %15) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end10, %if.then7, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %12, %if.then7 ], [ 0, %if.end10 ], [ 0, %entry.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @workqueue_sysfs_register(ptr noundef %wq) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 22
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 128
  %and = and i32 %1, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end22, label %do.end, !prof !679

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5741, i32 noundef 9, ptr noundef null) #21
  br label %cleanup57

if.end22:                                         ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3520, i32 noundef 936) #29
  %wq_dev23 = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 15
  %3 = ptrtoint ptr %wq_dev23 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %call7.i.i, ptr %wq_dev23, align 8
  %tobool24.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool24.not, label %if.end22.cleanup57_crit_edge, label %if.end26

if.end22.cleanup57_crit_edge:                     ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup57

if.end26:                                         ; preds = %if.end22
  %4 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %wq, ptr %call7.i.i, align 8
  %dev = getelementptr inbounds %struct.wq_device, ptr %call7.i.i, i32 0, i32 1
  %bus = getelementptr inbounds %struct.wq_device, ptr %call7.i.i, i32 0, i32 1, i32 5
  %5 = ptrtoint ptr %bus to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr @wq_subsys, ptr %bus, align 8
  %release = getelementptr inbounds %struct.wq_device, ptr %call7.i.i, i32 0, i32 1, i32 35
  %6 = ptrtoint ptr %release to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr @wq_device_release, ptr %release, align 4
  %name = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 19
  %call30 = tail call i32 (ptr, ptr, ...) @dev_set_name(ptr noundef %dev, ptr noundef nonnull @.str.36, ptr noundef %name) #21
  %uevent_suppress.i = getelementptr inbounds %struct.wq_device, ptr %call7.i.i, i32 0, i32 1, i32 0, i32 8
  %7 = ptrtoint ptr %uevent_suppress.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %bf.load.i = load i8, ptr %uevent_suppress.i, align 4
  %bf.set.i = or i8 %bf.load.i, 8
  store i8 %bf.set.i, ptr %uevent_suppress.i, align 4
  %call33 = tail call i32 @device_register(ptr noundef %dev) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %if.end38, label %if.then35

if.then35:                                        ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @put_device(ptr noundef %dev) #21
  %8 = ptrtoint ptr %wq_dev23 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %wq_dev23, align 8
  br label %cleanup57

if.end38:                                         ; preds = %if.end26
  %9 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %flags, align 128
  %and40 = and i32 %10, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and40)
  %tobool41.not = icmp eq i32 %and40, 0
  br i1 %tobool41.not, label %if.end38.if.end53_crit_edge, label %for.cond.preheader

if.end38.if.end53_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end53

for.cond.preheader:                               ; preds = %if.end38
  %11 = load ptr, ptr @wq_sysfs_unbound_attrs, align 4
  %tobool45.not86 = icmp eq ptr %11, null
  br i1 %tobool45.not86, label %for.cond.preheader.if.end53_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.if.end53_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end53

for.cond:                                         ; preds = %for.body
  %incdec.ptr = getelementptr %struct.device_attribute, ptr %attr.087, i32 1
  %12 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %incdec.ptr, align 4
  %tobool45.not = icmp eq ptr %13, null
  br i1 %tobool45.not, label %for.cond.if.end53_crit_edge, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.cond.if.end53_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end53

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %attr.087 = phi ptr [ %incdec.ptr, %for.cond.for.body_crit_edge ], [ @wq_sysfs_unbound_attrs, %for.cond.preheader.for.body_crit_edge ]
  %call47 = tail call i32 @device_create_file(ptr noundef %dev, ptr noundef %attr.087) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call47)
  %tobool48.not = icmp eq i32 %call47, 0
  br i1 %tobool48.not, label %for.cond, label %cleanup

cleanup:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @device_unregister(ptr noundef %dev) #21
  %14 = ptrtoint ptr %wq_dev23 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %wq_dev23, align 8
  br label %cleanup57

if.end53:                                         ; preds = %for.cond.if.end53_crit_edge, %for.cond.preheader.if.end53_crit_edge, %if.end38.if.end53_crit_edge
  %15 = ptrtoint ptr %uevent_suppress.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %bf.load.i83 = load i8, ptr %uevent_suppress.i, align 4
  %bf.clear.i84 = and i8 %bf.load.i83, -9
  store i8 %bf.clear.i84, ptr %uevent_suppress.i, align 4
  %call56 = tail call i32 @kobject_uevent(ptr noundef %dev, i32 noundef 0) #21
  br label %cleanup57

cleanup57:                                        ; preds = %if.end53, %cleanup, %if.then35, %if.end22.cleanup57_crit_edge, %do.end
  %retval.1 = phi i32 [ -22, %do.end ], [ %call33, %if.then35 ], [ 0, %if.end53 ], [ %call47, %cleanup ], [ -12, %if.end22.cleanup57_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pwq_adjust_max_active(ptr noundef %pwq) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %wq1 = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 1
  %0 = ptrtoint ptr %wq1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %wq1, align 4
  %flags = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 22
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 128
  %and = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %4 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool3.not = icmp eq i32 %4, 0
  br i1 %tobool3.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %entry
  %dep_map = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 2, i32 5
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !680

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3766, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  br i1 %tobool.not, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.end
  %max_active = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 7
  %5 = ptrtoint ptr %max_active to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %max_active, align 8
  %saved_max_active = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 12
  %7 = ptrtoint ptr %saved_max_active to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %saved_max_active, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %6, i32 %8)
  %cmp28 = icmp eq i32 %6, %8
  br i1 %cmp28, label %land.lhs.true.cleanup_crit_edge, label %do.body31.thread

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.body31.thread:                                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  %9 = ptrtoint ptr %pwq to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pwq, align 512
  %call3483 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %10) #21
  br label %if.then39

lor.lhs.false:                                    ; preds = %if.end
  %11 = ptrtoint ptr %pwq to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %pwq, align 512
  %call34 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %12) #21
  %.b82 = load i1, ptr @workqueue_freezing, align 1
  br i1 %.b82, label %if.else, label %lor.lhs.false.if.then39_crit_edge

lor.lhs.false.if.then39_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then39

if.then39:                                        ; preds = %lor.lhs.false.if.then39_crit_edge, %do.body31.thread
  %call3485 = phi i32 [ %call3483, %do.body31.thread ], [ %call34, %lor.lhs.false.if.then39_crit_edge ]
  %saved_max_active40 = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 12
  %13 = ptrtoint ptr %saved_max_active40 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %saved_max_active40, align 4
  %max_active41 = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 7
  %15 = ptrtoint ptr %max_active41 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %max_active41, align 8
  %nr_active = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 6
  %inactive_works = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 8
  %16 = ptrtoint ptr %inactive_works to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %inactive_works, align 4
  %cmp.i.not86 = icmp eq ptr %17, %inactive_works
  br i1 %cmp.i.not86, label %if.then39.do.body55_crit_edge, label %land.rhs44.preheader

if.then39.do.body55_crit_edge:                    ; preds = %if.then39
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body55

land.rhs44.preheader:                             ; preds = %if.then39
  %18 = ptrtoint ptr %nr_active to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %nr_active, align 4
  %20 = ptrtoint ptr %max_active41 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %max_active41, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %19, i32 %21)
  %cmp4692 = icmp slt i32 %19, %21
  br i1 %cmp4692, label %land.rhs44.preheader.while.body_crit_edge, label %land.rhs44.preheader.do.body55_crit_edge

land.rhs44.preheader.do.body55_crit_edge:         ; preds = %land.rhs44.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body55

land.rhs44.preheader.while.body_crit_edge:        ; preds = %land.rhs44.preheader
  br label %while.body

land.rhs44:                                       ; preds = %while.body
  %22 = ptrtoint ptr %nr_active to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %nr_active, align 4
  %24 = ptrtoint ptr %max_active41 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %max_active41, align 8
  %cmp46 = icmp slt i32 %23, %25
  br i1 %cmp46, label %land.rhs44.while.body_crit_edge, label %while.end

land.rhs44.while.body_crit_edge:                  ; preds = %land.rhs44
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body

while.body:                                       ; preds = %land.rhs44.while.body_crit_edge, %land.rhs44.preheader.while.body_crit_edge
  %26 = phi ptr [ %28, %land.rhs44.while.body_crit_edge ], [ %17, %land.rhs44.preheader.while.body_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %26, i32 -4
  tail call fastcc void @pwq_activate_inactive_work(ptr noundef %add.ptr.i) #21
  %27 = ptrtoint ptr %inactive_works to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile ptr, ptr %inactive_works, align 4
  %cmp.i.not = icmp eq ptr %28, %inactive_works
  br i1 %cmp.i.not, label %while.body.if.then50_crit_edge, label %land.rhs44

while.body.if.then50_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then50

while.end:                                        ; preds = %land.rhs44
  br i1 %cmp4692, label %while.end.if.then50_crit_edge, label %while.end.do.body55_crit_edge

while.end.do.body55_crit_edge:                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body55

while.end.if.then50_crit_edge:                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then50

if.then50:                                        ; preds = %while.end.if.then50_crit_edge, %while.body.if.then50_crit_edge
  %29 = ptrtoint ptr %pwq to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %pwq, align 512
  %idle_list.i.i = getelementptr inbounds %struct.worker_pool, ptr %30, i32 0, i32 10
  %31 = ptrtoint ptr %idle_list.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile ptr, ptr %idle_list.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %32, %idle_list.i.i
  %tobool.not5.i = icmp eq ptr %32, null
  %tobool.not.i = or i1 %cmp.i.not.i.i, %tobool.not5.i
  br i1 %tobool.not.i, label %if.then50.do.body55_crit_edge, label %if.then.i, !prof !680

if.then50.do.body55_crit_edge:                    ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body55

if.then.i:                                        ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #23
  %task.i = getelementptr inbounds %struct.worker, ptr %32, i32 0, i32 6
  %33 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %task.i, align 4
  %call3.i = tail call i32 @wake_up_process(ptr noundef %34) #21
  br label %do.body55

if.else:                                          ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  %max_active53 = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 7
  %35 = ptrtoint ptr %max_active53 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 0, ptr %max_active53, align 8
  br label %do.body55

do.body55:                                        ; preds = %if.else, %if.then.i, %if.then50.do.body55_crit_edge, %while.end.do.body55_crit_edge, %land.rhs44.preheader.do.body55_crit_edge, %if.then39.do.body55_crit_edge
  %call3484 = phi i32 [ %call3485, %while.end.do.body55_crit_edge ], [ %call34, %if.else ], [ %call3485, %if.then50.do.body55_crit_edge ], [ %call3485, %if.then.i ], [ %call3485, %if.then39.do.body55_crit_edge ], [ %call3485, %land.rhs44.preheader.do.body55_crit_edge ]
  %36 = ptrtoint ptr %pwq to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %pwq, align 512
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %37, i32 noundef %call3484) #21
  br label %cleanup

cleanup:                                          ; preds = %do.body55, %land.lhs.true.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @destroy_workqueue(ptr noundef %wq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %wq_dev1.i = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 15
  %0 = ptrtoint ptr %wq_dev1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %wq_dev1.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.workqueue_sysfs_unregister.exit_crit_edge, label %if.end.i

entry.workqueue_sysfs_unregister.exit_crit_edge:  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %workqueue_sysfs_unregister.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %2 = ptrtoint ptr %wq_dev1.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %wq_dev1.i, align 8
  %dev.i = getelementptr inbounds %struct.wq_device, ptr %1, i32 0, i32 1
  tail call void @device_unregister(ptr noundef %dev.i) #21
  br label %workqueue_sysfs_unregister.exit

workqueue_sysfs_unregister.exit:                  ; preds = %if.end.i, %entry.workqueue_sysfs_unregister.exit_crit_edge
  tail call void @drain_workqueue(ptr noundef %wq)
  %rescuer = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 10
  %3 = ptrtoint ptr %rescuer to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rescuer, align 4
  %tobool.not = icmp eq ptr %4, null
  br i1 %tobool.not, label %workqueue_sysfs_unregister.exit.if.end_crit_edge, label %if.then

workqueue_sysfs_unregister.exit.if.end_crit_edge: ; preds = %workqueue_sysfs_unregister.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %workqueue_sysfs_unregister.exit
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @wq_mayday_lock) #21
  %5 = ptrtoint ptr %rescuer to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %rescuer, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @wq_mayday_lock) #21
  %task = getelementptr inbounds %struct.worker, ptr %4, i32 0, i32 6
  %6 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task, align 4
  %call = tail call i32 @kthread_stop(ptr noundef %7) #21
  tail call void @kfree(ptr noundef nonnull %4) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %workqueue_sysfs_unregister.exit.if.end_crit_edge
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_mutex, i32 noundef 0) #21
  %mutex = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 2
  tail call void @mutex_lock_nested(ptr noundef %mutex, i32 noundef 0) #21
  %dep_map = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 2, i32 5
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool6.not = icmp eq i32 %call.i, 0
  br i1 %tobool6.not, label %land.lhs.true, label %if.end.do.end_crit_edge

if.end.do.end_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

land.lhs.true:                                    ; preds = %if.end
  %call7 = tail call i32 @rcu_read_lock_any_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %land.lhs.true9, label %land.lhs.true.do.end_crit_edge

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

land.lhs.true9:                                   ; preds = %land.lhs.true
  %call10 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %land.lhs.true9.do.end_crit_edge, label %land.lhs.true12

land.lhs.true9.do.end_crit_edge:                  ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

land.lhs.true12:                                  ; preds = %land.lhs.true9
  %.b131 = load i1, ptr @destroy_workqueue.__warned, align 1
  br i1 %.b131, label %land.lhs.true12.do.end_crit_edge, label %if.then14

land.lhs.true12.do.end_crit_edge:                 ; preds = %land.lhs.true12
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

if.then14:                                        ; preds = %land.lhs.true12
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @destroy_workqueue.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 4451, ptr noundef nonnull @.str.9) #21
  br label %do.end

do.end:                                           ; preds = %if.then14, %land.lhs.true12.do.end_crit_edge, %land.lhs.true9.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %if.end.do.end_crit_edge
  %8 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %8)
  %.pn141 = load volatile ptr, ptr %wq, align 4
  %cmp.not143 = icmp eq ptr %.pn141, %wq
  br i1 %cmp.not143, label %do.end.for.end_crit_edge, label %do.end.for.body_crit_edge

do.end.for.body_crit_edge:                        ; preds = %do.end
  br label %for.body

do.end.for.end_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %if.end57.for.body_crit_edge, %do.end.for.body_crit_edge
  %.pn144 = phi ptr [ %.pn, %if.end57.for.body_crit_edge ], [ %.pn141, %do.end.for.body_crit_edge ]
  %pwq.0145 = getelementptr i8, ptr %.pn144, i32 -100
  %9 = ptrtoint ptr %pwq.0145 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pwq.0145, align 512
  tail call void @_raw_spin_lock_irq(ptr noundef %10) #21
  %arrayidx.i = getelementptr i8, ptr %.pn144, i32 -80
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not.i132 = icmp eq i32 %12, 0
  br i1 %tobool.not.i132, label %for.cond.i, label %for.body.do.end33_crit_edge, !prof !710

for.body.do.end33_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end33

for.cond.i:                                       ; preds = %for.body
  %arrayidx.1.i = getelementptr i8, ptr %.pn144, i32 -76
  %13 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.not.1.i = icmp eq i32 %14, 0
  br i1 %tobool.not.1.i, label %for.cond.1.i, label %for.cond.i.do.end33_crit_edge, !prof !710

for.cond.i.do.end33_crit_edge:                    ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end33

for.cond.1.i:                                     ; preds = %for.cond.i
  %arrayidx.2.i = getelementptr i8, ptr %.pn144, i32 -72
  %15 = ptrtoint ptr %arrayidx.2.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.2.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.not.2.i = icmp eq i32 %16, 0
  br i1 %tobool.not.2.i, label %for.cond.2.i, label %for.cond.1.i.do.end33_crit_edge, !prof !710

for.cond.1.i.do.end33_crit_edge:                  ; preds = %for.cond.1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end33

for.cond.2.i:                                     ; preds = %for.cond.1.i
  %arrayidx.3.i = getelementptr i8, ptr %.pn144, i32 -68
  %17 = ptrtoint ptr %arrayidx.3.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx.3.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.not.3.i = icmp eq i32 %18, 0
  br i1 %tobool.not.3.i, label %for.cond.3.i, label %for.cond.2.i.do.end33_crit_edge, !prof !710

for.cond.2.i.do.end33_crit_edge:                  ; preds = %for.cond.2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end33

for.cond.3.i:                                     ; preds = %for.cond.2.i
  %arrayidx.4.i = getelementptr i8, ptr %.pn144, i32 -64
  %19 = ptrtoint ptr %arrayidx.4.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx.4.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.not.4.i = icmp eq i32 %20, 0
  br i1 %tobool.not.4.i, label %for.cond.4.i, label %for.cond.3.i.do.end33_crit_edge, !prof !710

for.cond.3.i.do.end33_crit_edge:                  ; preds = %for.cond.3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end33

for.cond.4.i:                                     ; preds = %for.cond.3.i
  %arrayidx.5.i = getelementptr i8, ptr %.pn144, i32 -60
  %21 = ptrtoint ptr %arrayidx.5.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx.5.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.not.5.i = icmp eq i32 %22, 0
  br i1 %tobool.not.5.i, label %for.cond.5.i, label %for.cond.4.i.do.end33_crit_edge, !prof !710

for.cond.4.i.do.end33_crit_edge:                  ; preds = %for.cond.4.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end33

for.cond.5.i:                                     ; preds = %for.cond.4.i
  %arrayidx.6.i = getelementptr i8, ptr %.pn144, i32 -56
  %23 = ptrtoint ptr %arrayidx.6.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx.6.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool.not.6.i = icmp eq i32 %24, 0
  br i1 %tobool.not.6.i, label %for.cond.6.i, label %for.cond.5.i.do.end33_crit_edge, !prof !710

for.cond.5.i.do.end33_crit_edge:                  ; preds = %for.cond.5.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end33

for.cond.6.i:                                     ; preds = %for.cond.5.i
  %arrayidx.7.i = getelementptr i8, ptr %.pn144, i32 -52
  %25 = ptrtoint ptr %arrayidx.7.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %arrayidx.7.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.not.7.i = icmp eq i32 %26, 0
  br i1 %tobool.not.7.i, label %for.cond.7.i, label %for.cond.6.i.do.end33_crit_edge, !prof !710

for.cond.6.i.do.end33_crit_edge:                  ; preds = %for.cond.6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end33

for.cond.7.i:                                     ; preds = %for.cond.6.i
  %arrayidx.8.i = getelementptr i8, ptr %.pn144, i32 -48
  %27 = ptrtoint ptr %arrayidx.8.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx.8.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool.not.8.i = icmp eq i32 %28, 0
  br i1 %tobool.not.8.i, label %for.cond.8.i, label %for.cond.7.i.do.end33_crit_edge, !prof !710

for.cond.7.i.do.end33_crit_edge:                  ; preds = %for.cond.7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end33

for.cond.8.i:                                     ; preds = %for.cond.7.i
  %arrayidx.9.i = getelementptr i8, ptr %.pn144, i32 -44
  %29 = ptrtoint ptr %arrayidx.9.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %arrayidx.9.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool.not.9.i = icmp eq i32 %30, 0
  br i1 %tobool.not.9.i, label %for.cond.9.i, label %for.cond.8.i.do.end33_crit_edge, !prof !710

for.cond.8.i.do.end33_crit_edge:                  ; preds = %for.cond.8.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end33

for.cond.9.i:                                     ; preds = %for.cond.8.i
  %arrayidx.10.i = getelementptr i8, ptr %.pn144, i32 -40
  %31 = ptrtoint ptr %arrayidx.10.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %arrayidx.10.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.not.10.i = icmp eq i32 %32, 0
  br i1 %tobool.not.10.i, label %for.cond.10.i, label %for.cond.9.i.do.end33_crit_edge, !prof !710

for.cond.9.i.do.end33_crit_edge:                  ; preds = %for.cond.9.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end33

for.cond.10.i:                                    ; preds = %for.cond.9.i
  %arrayidx.11.i = getelementptr i8, ptr %.pn144, i32 -36
  %33 = ptrtoint ptr %arrayidx.11.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx.11.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool.not.11.i = icmp eq i32 %34, 0
  br i1 %tobool.not.11.i, label %for.cond.11.i, label %for.cond.10.i.do.end33_crit_edge, !prof !710

for.cond.10.i.do.end33_crit_edge:                 ; preds = %for.cond.10.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end33

for.cond.11.i:                                    ; preds = %for.cond.10.i
  %arrayidx.12.i = getelementptr i8, ptr %.pn144, i32 -32
  %35 = ptrtoint ptr %arrayidx.12.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %arrayidx.12.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool.not.12.i = icmp eq i32 %36, 0
  br i1 %tobool.not.12.i, label %for.cond.12.i, label %for.cond.11.i.do.end33_crit_edge, !prof !710

for.cond.11.i.do.end33_crit_edge:                 ; preds = %for.cond.11.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end33

for.cond.12.i:                                    ; preds = %for.cond.11.i
  %arrayidx.13.i = getelementptr i8, ptr %.pn144, i32 -28
  %37 = ptrtoint ptr %arrayidx.13.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx.13.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool.not.13.i = icmp eq i32 %38, 0
  br i1 %tobool.not.13.i, label %for.cond.13.i, label %for.cond.12.i.do.end33_crit_edge, !prof !710

for.cond.12.i.do.end33_crit_edge:                 ; preds = %for.cond.12.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end33

for.cond.13.i:                                    ; preds = %for.cond.12.i
  %arrayidx.14.i = getelementptr i8, ptr %.pn144, i32 -24
  %39 = ptrtoint ptr %arrayidx.14.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx.14.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool.not.14.i = icmp eq i32 %40, 0
  br i1 %tobool.not.14.i, label %for.cond.14.i, label %for.cond.13.i.do.end33_crit_edge, !prof !710

for.cond.13.i.do.end33_crit_edge:                 ; preds = %for.cond.13.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end33

for.cond.14.i:                                    ; preds = %for.cond.13.i
  %arrayidx.15.i = getelementptr i8, ptr %.pn144, i32 -20
  %41 = ptrtoint ptr %arrayidx.15.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %arrayidx.15.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool.not.15.i = icmp eq i32 %42, 0
  br i1 %tobool.not.15.i, label %for.cond.15.i, label %for.cond.14.i.do.end33_crit_edge, !prof !710

for.cond.14.i.do.end33_crit_edge:                 ; preds = %for.cond.14.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end33

for.cond.15.i:                                    ; preds = %for.cond.14.i
  %wq.i = getelementptr i8, ptr %.pn144, i32 -96
  %43 = ptrtoint ptr %wq.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %wq.i, align 4
  %dfl_pwq.i = getelementptr inbounds %struct.workqueue_struct, ptr %44, i32 0, i32 14
  %45 = ptrtoint ptr %dfl_pwq.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %dfl_pwq.i, align 4
  %cmp1.not.i = icmp eq ptr %46, %pwq.0145
  br i1 %cmp1.not.i, label %for.cond.15.i.if.end4.i_crit_edge, label %land.lhs.true.i

for.cond.15.i.if.end4.i_crit_edge:                ; preds = %for.cond.15.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end4.i

land.lhs.true.i:                                  ; preds = %for.cond.15.i
  %refcnt.i = getelementptr i8, ptr %.pn144, i32 -84
  %47 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %refcnt.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %48)
  %cmp2.i = icmp sgt i32 %48, 1
  br i1 %cmp2.i, label %land.lhs.true.i.do.end33_crit_edge, label %land.lhs.true.i.if.end4.i_crit_edge, !prof !711

land.lhs.true.i.if.end4.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end4.i

land.lhs.true.i.do.end33_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end33

if.end4.i:                                        ; preds = %land.lhs.true.i.if.end4.i_crit_edge, %for.cond.15.i.if.end4.i_crit_edge
  %nr_active.i = getelementptr i8, ptr %.pn144, i32 -16
  %49 = ptrtoint ptr %nr_active.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %nr_active.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %tobool5.not.i = icmp eq i32 %50, 0
  br i1 %tobool5.not.i, label %pwq_busy.exit, label %if.end4.i.do.end33_crit_edge, !prof !710

if.end4.i.do.end33_crit_edge:                     ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end33

pwq_busy.exit:                                    ; preds = %if.end4.i
  %inactive_works.i = getelementptr i8, ptr %.pn144, i32 -8
  %51 = ptrtoint ptr %inactive_works.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile ptr, ptr %inactive_works.i, align 4
  %cmp.i.i.not = icmp eq ptr %52, %inactive_works.i
  br i1 %cmp.i.i.not, label %if.end57, label %pwq_busy.exit.do.end33_crit_edge, !prof !679

pwq_busy.exit.do.end33_crit_edge:                 ; preds = %pwq_busy.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end33

do.end33:                                         ; preds = %pwq_busy.exit.do.end33_crit_edge, %if.end4.i.do.end33_crit_edge, %land.lhs.true.i.do.end33_crit_edge, %for.cond.14.i.do.end33_crit_edge, %for.cond.13.i.do.end33_crit_edge, %for.cond.12.i.do.end33_crit_edge, %for.cond.11.i.do.end33_crit_edge, %for.cond.10.i.do.end33_crit_edge, %for.cond.9.i.do.end33_crit_edge, %for.cond.8.i.do.end33_crit_edge, %for.cond.7.i.do.end33_crit_edge, %for.cond.6.i.do.end33_crit_edge, %for.cond.5.i.do.end33_crit_edge, %for.cond.4.i.do.end33_crit_edge, %for.cond.3.i.do.end33_crit_edge, %for.cond.2.i.do.end33_crit_edge, %for.cond.1.i.do.end33_crit_edge, %for.cond.i.do.end33_crit_edge, %for.body.do.end33_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4453, i32 noundef 9, ptr noundef null) #21
  %name = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 19
  %call53 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.15, ptr noundef nonnull @.str.16, ptr noundef %name) #26
  tail call fastcc void @show_pwq(ptr noundef %pwq.0145)
  %53 = ptrtoint ptr %pwq.0145 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %pwq.0145, align 512
  tail call void @_raw_spin_unlock_irq(ptr noundef %54) #21
  tail call void @mutex_unlock(ptr noundef %mutex) #21
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_mutex) #21
  tail call void @show_one_workqueue(ptr noundef %wq)
  br label %cleanup

if.end57:                                         ; preds = %pwq_busy.exit
  %55 = ptrtoint ptr %pwq.0145 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %pwq.0145, align 512
  tail call void @_raw_spin_unlock_irq(ptr noundef %56) #21
  %57 = ptrtoint ptr %.pn144 to i32
  call void @__asan_load4_noabort(i32 %57)
  %.pn = load volatile ptr, ptr %.pn144, align 4
  %cmp.not = icmp eq ptr %.pn, %wq
  br i1 %cmp.not, label %if.end57.for.end_crit_edge, label %if.end57.for.body_crit_edge

if.end57.for.body_crit_edge:                      ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

if.end57.for.end_crit_edge:                       ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %if.end57.for.end_crit_edge, %do.end.for.end_crit_edge
  tail call void @mutex_unlock(ptr noundef %mutex) #21
  %list = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 1
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %list) #21
  br i1 %call.i.i, label %if.end.i.i, label %for.end.list_del_rcu.exit_crit_edge

for.end.list_del_rcu.exit_crit_edge:              ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del_rcu.exit

if.end.i.i:                                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 1, i32 1
  %58 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %prev.i.i, align 4
  %60 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %61, i32 0, i32 1
  %62 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %59, ptr %prev1.i.i.i, align 4
  %63 = ptrtoint ptr %59 to i32
  call void @__asan_store4_noabort(i32 %63)
  store volatile ptr %61, ptr %59, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i, %for.end.list_del_rcu.exit_crit_edge
  %prev.i = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 1, i32 1
  %64 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_mutex) #21
  %flags = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 22
  %65 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %flags, align 128
  %and = and i32 %66, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool70.not = icmp eq i32 %and, 0
  br i1 %tobool70.not, label %if.then71, label %for.body74

if.then71:                                        ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_pc() #23
  %key.i = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 17
  tail call void @lockdep_unregister_key(ptr noundef %key.i) #21
  %rcu = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 20
  tail call void @call_rcu(ptr noundef %rcu, ptr noundef nonnull @rcu_free_wq) #21
  br label %cleanup

for.body74:                                       ; preds = %list_del_rcu.exit
  %numa_pwq_tbl = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 24
  %67 = ptrtoint ptr %numa_pwq_tbl to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile ptr, ptr %numa_pwq_tbl, align 4
  store volatile ptr null, ptr %numa_pwq_tbl, align 4
  %tobool.not.i133 = icmp eq ptr %68, null
  br i1 %tobool.not.i133, label %for.body74.put_pwq_unlocked.exit_crit_edge, label %if.then.i

for.body74.put_pwq_unlocked.exit_crit_edge:       ; preds = %for.body74
  call void @__sanitizer_cov_trace_pc() #23
  br label %put_pwq_unlocked.exit

if.then.i:                                        ; preds = %for.body74
  call void @__sanitizer_cov_trace_pc() #23
  %69 = ptrtoint ptr %68 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %68, align 512
  tail call void @_raw_spin_lock_irq(ptr noundef %70) #21
  tail call fastcc void @put_pwq(ptr noundef nonnull %68) #21
  %71 = ptrtoint ptr %68 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %68, align 512
  tail call void @_raw_spin_unlock_irq(ptr noundef %72) #21
  br label %put_pwq_unlocked.exit

put_pwq_unlocked.exit:                            ; preds = %if.then.i, %for.body74.put_pwq_unlocked.exit_crit_edge
  %dfl_pwq = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 14
  %73 = ptrtoint ptr %dfl_pwq to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %dfl_pwq, align 4
  store ptr null, ptr %dfl_pwq, align 4
  %tobool.not.i135 = icmp eq ptr %74, null
  br i1 %tobool.not.i135, label %put_pwq_unlocked.exit.cleanup_crit_edge, label %if.then.i136

put_pwq_unlocked.exit.cleanup_crit_edge:          ; preds = %put_pwq_unlocked.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then.i136:                                     ; preds = %put_pwq_unlocked.exit
  call void @__sanitizer_cov_trace_pc() #23
  %75 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %74, align 512
  tail call void @_raw_spin_lock_irq(ptr noundef %76) #21
  tail call fastcc void @put_pwq(ptr noundef nonnull %74) #21
  %77 = ptrtoint ptr %74 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %74, align 512
  tail call void @_raw_spin_unlock_irq(ptr noundef %78) #21
  br label %cleanup

cleanup:                                          ; preds = %if.then.i136, %put_pwq_unlocked.exit.cleanup_crit_edge, %if.then71, %do.end33
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kthread_stop(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @show_pwq(ptr noundef %pwq) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %pwq to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pwq, align 512
  %id = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %id, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.103, i32 noundef %3) #26
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %attrs.i = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 18
  %5 = ptrtoint ptr %attrs.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %attrs.i, align 4
  %cpumask.i = getelementptr inbounds %struct.workqueue_attrs, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %cpumask.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %cpumask.i, align 4
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.130, i32 noundef %4, ptr noundef %8) #26
  %node.i = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 2
  %9 = ptrtoint ptr %node.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %node.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %10)
  %cmp.not.i = icmp eq i32 %10, -1
  br i1 %cmp.not.i, label %entry.pr_cont_pool_info.exit_crit_edge, label %do.end2.i

entry.pr_cont_pool_info.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %pr_cont_pool_info.exit

do.end2.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call5.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.133, i32 noundef %10) #26
  br label %pr_cont_pool_info.exit

pr_cont_pool_info.exit:                           ; preds = %do.end2.i, %entry.pr_cont_pool_info.exit_crit_edge
  %flags.i = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 4
  %11 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %flags.i, align 4
  %13 = ptrtoint ptr %attrs.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %attrs.i, align 4
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %call10.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.136, i32 noundef %12, i32 noundef %16) #26
  %nr_active = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 6
  %17 = ptrtoint ptr %nr_active to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %nr_active, align 4
  %max_active = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 7
  %19 = ptrtoint ptr %max_active to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %max_active, align 8
  %refcnt = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 4
  %21 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %refcnt, align 16
  %mayday_node = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 10
  %23 = ptrtoint ptr %mayday_node to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile ptr, ptr %mayday_node, align 4
  %cmp.i.not = icmp eq ptr %24, %mayday_node
  %cond = select i1 %cmp.i.not, ptr @.str.109, ptr @.str.108
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.106, i32 noundef %18, i32 noundef %20, i32 noundef %22, ptr noundef nonnull %cond) #26
  br label %for.body

for.body:                                         ; preds = %for.inc27.for.body_crit_edge, %pr_cont_pool_info.exit
  %bkt.0306 = phi i32 [ 0, %pr_cont_pool_info.exit ], [ %inc, %for.inc27.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.worker_pool, ptr %1, i32 0, i32 13, i32 %bkt.0306
  br label %for.cond13

for.cond13:                                       ; preds = %for.body15.for.cond13_crit_edge, %for.body
  %worker.1.in = phi ptr [ %arrayidx, %for.body ], [ %worker.1, %for.body15.for.cond13_crit_edge ]
  %25 = ptrtoint ptr %worker.1.in to i32
  call void @__asan_load4_noabort(i32 %25)
  %worker.1 = load ptr, ptr %worker.1.in, align 4
  %tobool14.not = icmp eq ptr %worker.1, null
  br i1 %tobool14.not, label %for.inc27, label %for.body15

for.body15:                                       ; preds = %for.cond13
  %current_pwq = getelementptr inbounds %struct.worker, ptr %worker.1, i32 0, i32 3
  %26 = ptrtoint ptr %current_pwq to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %current_pwq, align 4
  %cmp16 = icmp eq ptr %27, %pwq
  br i1 %cmp16, label %if.then30, label %for.body15.for.cond13_crit_edge

for.body15.for.cond13_crit_edge:                  ; preds = %for.body15
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond13

for.inc27:                                        ; preds = %for.cond13
  %inc = add nuw nsw i32 %bkt.0306, 1
  %cmp8 = icmp ult i32 %bkt.0306, 63
  br i1 %cmp8, label %for.inc27.for.body_crit_edge, label %for.inc27.if.end110_crit_edge

for.inc27.if.end110_crit_edge:                    ; preds = %for.inc27
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end110

for.inc27.for.body_crit_edge:                     ; preds = %for.inc27
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

if.then30:                                        ; preds = %for.body15
  %call35 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.111) #26
  br label %for.body41

for.body41:                                       ; preds = %for.inc102.for.body41_crit_edge, %if.then30
  %bkt.1316 = phi i32 [ 0, %if.then30 ], [ %inc103, %for.inc102.for.body41_crit_edge ]
  %comma.0.off0315 = phi i1 [ false, %if.then30 ], [ %comma.1.off0.lcssa, %for.inc102.for.body41_crit_edge ]
  %arrayidx44 = getelementptr %struct.worker_pool, ptr %1, i32 0, i32 13, i32 %bkt.1316
  %28 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load4_noabort(i32 %28)
  %worker.3311 = load ptr, ptr %arrayidx44, align 4
  %tobool56.not312 = icmp eq ptr %worker.3311, null
  br i1 %tobool56.not312, label %for.body41.for.inc102_crit_edge, label %for.body41.for.body57_crit_edge

for.body41.for.body57_crit_edge:                  ; preds = %for.body41
  br label %for.body57

for.body41.for.inc102_crit_edge:                  ; preds = %for.body41
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc102

for.body57:                                       ; preds = %for.inc89.for.body57_crit_edge, %for.body41.for.body57_crit_edge
  %worker.3314 = phi ptr [ %worker.3, %for.inc89.for.body57_crit_edge ], [ %worker.3311, %for.body41.for.body57_crit_edge ]
  %comma.1.off0313 = phi i1 [ %comma.2.off0, %for.inc89.for.body57_crit_edge ], [ %comma.0.off0315, %for.body41.for.body57_crit_edge ]
  %current_pwq58 = getelementptr inbounds %struct.worker, ptr %worker.3314, i32 0, i32 3
  %29 = ptrtoint ptr %current_pwq58 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %current_pwq58, align 4
  %cmp59.not = icmp eq ptr %30, %pwq
  br i1 %cmp59.not, label %do.end64, label %for.body57.for.inc89_crit_edge

for.body57.for.inc89_crit_edge:                   ; preds = %for.body57
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc89

do.end64:                                         ; preds = %for.body57
  %cond67 = select i1 %comma.1.off0313, ptr @.str.116, ptr @.str.109
  %task = getelementptr inbounds %struct.worker, ptr %worker.3314, i32 0, i32 6
  %31 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %task, align 4
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %32, i32 0, i32 68
  %33 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %pid.i, align 8
  %rescue_wq = getelementptr inbounds %struct.worker, ptr %worker.3314, i32 0, i32 14
  %35 = ptrtoint ptr %rescue_wq to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %rescue_wq, align 4
  %tobool69.not = icmp eq ptr %36, null
  %cond70 = select i1 %tobool69.not, ptr @.str.109, ptr @.str.117
  %current_func = getelementptr inbounds %struct.worker, ptr %worker.3314, i32 0, i32 2
  %37 = ptrtoint ptr %current_func to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %current_func, align 4
  %call71 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.114, ptr noundef nonnull %cond67, i32 noundef %34, ptr noundef nonnull %cond70, ptr noundef %38) #26
  %scheduled = getelementptr inbounds %struct.worker, ptr %worker.3314, i32 0, i32 5
  %39 = ptrtoint ptr %scheduled to i32
  call void @__asan_load4_noabort(i32 %39)
  %.pn274308 = load ptr, ptr %scheduled, align 4
  %cmp79.not309 = icmp eq ptr %.pn274308, %scheduled
  br i1 %cmp79.not309, label %do.end64.for.inc89_crit_edge, label %do.end64.for.body81_crit_edge

do.end64.for.body81_crit_edge:                    ; preds = %do.end64
  br label %for.body81

do.end64.for.inc89_crit_edge:                     ; preds = %do.end64
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc89

for.body81:                                       ; preds = %pr_cont_work.exit.for.body81_crit_edge, %do.end64.for.body81_crit_edge
  %.pn274310 = phi ptr [ %.pn274, %pr_cont_work.exit.for.body81_crit_edge ], [ %.pn274308, %do.end64.for.body81_crit_edge ]
  %func.i = getelementptr i8, ptr %.pn274310, i32 8
  %40 = ptrtoint ptr %func.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %func.i, align 4
  %cmp.i278 = icmp eq ptr %41, @wq_barrier_func
  br i1 %cmp.i278, label %if.then.i, label %do.end5.i

if.then.i:                                        ; preds = %for.body81
  call void @__sanitizer_cov_trace_pc() #23
  %task.i = getelementptr i8, ptr %.pn274310, i32 96
  %42 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %task.i, align 4
  %pid.i.i = getelementptr inbounds %struct.task_struct, ptr %43, i32 0, i32 68
  %44 = ptrtoint ptr %pid.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %pid.i.i, align 8
  %call2.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.138, ptr noundef nonnull @.str.109, i32 noundef %45) #26
  br label %pr_cont_work.exit

do.end5.i:                                        ; preds = %for.body81
  call void @__sanitizer_cov_trace_pc() #23
  %call10.i279 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.141, ptr noundef nonnull @.str.109, ptr noundef %41) #26
  br label %pr_cont_work.exit

pr_cont_work.exit:                                ; preds = %do.end5.i, %if.then.i
  %46 = ptrtoint ptr %.pn274310 to i32
  call void @__asan_load4_noabort(i32 %46)
  %.pn274 = load ptr, ptr %.pn274310, align 4
  %cmp79.not = icmp eq ptr %.pn274, %scheduled
  br i1 %cmp79.not, label %pr_cont_work.exit.for.inc89_crit_edge, label %pr_cont_work.exit.for.body81_crit_edge

pr_cont_work.exit.for.body81_crit_edge:           ; preds = %pr_cont_work.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body81

pr_cont_work.exit.for.inc89_crit_edge:            ; preds = %pr_cont_work.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc89

for.inc89:                                        ; preds = %pr_cont_work.exit.for.inc89_crit_edge, %do.end64.for.inc89_crit_edge, %for.body57.for.inc89_crit_edge
  %comma.2.off0 = phi i1 [ %comma.1.off0313, %for.body57.for.inc89_crit_edge ], [ true, %do.end64.for.inc89_crit_edge ], [ true, %pr_cont_work.exit.for.inc89_crit_edge ]
  %47 = ptrtoint ptr %worker.3314 to i32
  call void @__asan_load4_noabort(i32 %47)
  %worker.3 = load ptr, ptr %worker.3314, align 4
  %tobool56.not = icmp eq ptr %worker.3, null
  br i1 %tobool56.not, label %for.inc89.for.inc102_crit_edge, label %for.inc89.for.body57_crit_edge

for.inc89.for.body57_crit_edge:                   ; preds = %for.inc89
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body57

for.inc89.for.inc102_crit_edge:                   ; preds = %for.inc89
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc102

for.inc102:                                       ; preds = %for.inc89.for.inc102_crit_edge, %for.body41.for.inc102_crit_edge
  %comma.1.off0.lcssa = phi i1 [ %comma.0.off0315, %for.body41.for.inc102_crit_edge ], [ %comma.2.off0, %for.inc89.for.inc102_crit_edge ]
  %inc103 = add nuw nsw i32 %bkt.1316, 1
  %exitcond.not = icmp eq i32 %inc103, 64
  br i1 %exitcond.not, label %do.end107, label %for.inc102.for.body41_crit_edge

for.inc102.for.body41_crit_edge:                  ; preds = %for.inc102
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body41

do.end107:                                        ; preds = %for.inc102
  call void @__sanitizer_cov_trace_pc() #23
  %call109 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.23) #26
  br label %if.end110

if.end110:                                        ; preds = %do.end107, %for.inc27.if.end110_crit_edge
  %worklist = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 7
  br label %for.cond115

for.cond115:                                      ; preds = %for.body120.for.cond115_crit_edge, %if.end110
  %.pn.in = phi ptr [ %worklist, %if.end110 ], [ %.pn, %for.body120.for.cond115_crit_edge ]
  %48 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %48)
  %.pn = load ptr, ptr %.pn.in, align 4
  %cmp118.not = icmp eq ptr %.pn, %worklist
  br i1 %cmp118.not, label %for.cond115.if.end170_crit_edge, label %for.body120

for.cond115.if.end170_crit_edge:                  ; preds = %for.cond115
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end170

for.body120:                                      ; preds = %for.cond115
  %work.1 = getelementptr i8, ptr %.pn, i32 -4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %work.1, i32 noundef 4) #21
  %49 = ptrtoint ptr %work.1 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %work.1, align 4
  %and.i = and i32 %50, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %and2.i = and i32 %50, -512
  %51 = inttoptr i32 %and2.i to ptr
  %retval.0.i = select i1 %tobool.not.i, ptr null, ptr %51
  %cmp122 = icmp eq ptr %retval.0.i, %pwq
  br i1 %cmp122, label %if.then133.critedge, label %for.body120.for.cond115_crit_edge

for.body120.for.cond115_crit_edge:                ; preds = %for.body120
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond115

if.then133.critedge:                              ; preds = %for.body120
  %call139 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.121) #26
  %52 = ptrtoint ptr %worklist to i32
  call void @__asan_load4_noabort(i32 %52)
  %.pn270317 = load ptr, ptr %worklist, align 4
  %cmp148.not319 = icmp eq ptr %.pn270317, %worklist
  br i1 %cmp148.not319, label %if.then133.critedge.do.end167_crit_edge, label %if.then133.critedge.for.body150_crit_edge

if.then133.critedge.for.body150_crit_edge:        ; preds = %if.then133.critedge
  br label %for.body150

if.then133.critedge.do.end167_crit_edge:          ; preds = %if.then133.critedge
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end167

for.body150:                                      ; preds = %for.inc158.for.body150_crit_edge, %if.then133.critedge.for.body150_crit_edge
  %.pn270321 = phi ptr [ %.pn270, %for.inc158.for.body150_crit_edge ], [ %.pn270317, %if.then133.critedge.for.body150_crit_edge ]
  %comma134.0.off0320 = phi i1 [ %comma134.1.off0, %for.inc158.for.body150_crit_edge ], [ false, %if.then133.critedge.for.body150_crit_edge ]
  %work.2322 = getelementptr i8, ptr %.pn270321, i32 -4
  %call.i.i.i280 = tail call zeroext i1 @__kasan_check_read(ptr noundef %work.2322, i32 noundef 4) #21
  %53 = ptrtoint ptr %work.2322 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %work.2322, align 4
  %and.i281 = and i32 %54, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i281)
  %tobool.not.i282 = icmp eq i32 %and.i281, 0
  %and2.i283 = and i32 %54, -512
  %55 = inttoptr i32 %and2.i283 to ptr
  %retval.0.i284 = select i1 %tobool.not.i282, ptr null, ptr %55
  %cmp152.not = icmp eq ptr %retval.0.i284, %pwq
  br i1 %cmp152.not, label %if.end154, label %for.body150.for.inc158_crit_edge

for.body150.for.inc158_crit_edge:                 ; preds = %for.body150
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc158

if.end154:                                        ; preds = %for.body150
  %func.i285 = getelementptr i8, ptr %.pn270321, i32 8
  %56 = ptrtoint ptr %func.i285 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %func.i285, align 4
  %cmp.i286 = icmp eq ptr %57, @wq_barrier_func
  %cond.i = select i1 %comma134.0.off0320, ptr @.str.116, ptr @.str.109
  br i1 %cmp.i286, label %if.then.i290, label %do.end5.i292

if.then.i290:                                     ; preds = %if.end154
  call void @__sanitizer_cov_trace_pc() #23
  %task.i287 = getelementptr i8, ptr %.pn270321, i32 96
  %58 = ptrtoint ptr %task.i287 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %task.i287, align 4
  %pid.i.i288 = getelementptr inbounds %struct.task_struct, ptr %59, i32 0, i32 68
  %60 = ptrtoint ptr %pid.i.i288 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %pid.i.i288, align 8
  %call2.i289 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.138, ptr noundef nonnull %cond.i, i32 noundef %61) #26
  br label %pr_cont_work.exit293

do.end5.i292:                                     ; preds = %if.end154
  call void @__sanitizer_cov_trace_pc() #23
  %call10.i291 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.141, ptr noundef nonnull %cond.i, ptr noundef %57) #26
  br label %pr_cont_work.exit293

pr_cont_work.exit293:                             ; preds = %do.end5.i292, %if.then.i290
  %62 = ptrtoint ptr %work.2322 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %work.2322, align 4
  %and = and i32 %63, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool156.not = icmp eq i32 %and, 0
  br label %for.inc158

for.inc158:                                       ; preds = %pr_cont_work.exit293, %for.body150.for.inc158_crit_edge
  %comma134.1.off0 = phi i1 [ %comma134.0.off0320, %for.body150.for.inc158_crit_edge ], [ %tobool156.not, %pr_cont_work.exit293 ]
  %64 = ptrtoint ptr %.pn270321 to i32
  call void @__asan_load4_noabort(i32 %64)
  %.pn270 = load ptr, ptr %.pn270321, align 4
  %cmp148.not = icmp eq ptr %.pn270, %worklist
  br i1 %cmp148.not, label %for.inc158.do.end167_crit_edge, label %for.inc158.for.body150_crit_edge

for.inc158.for.body150_crit_edge:                 ; preds = %for.inc158
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body150

for.inc158.do.end167_crit_edge:                   ; preds = %for.inc158
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end167

do.end167:                                        ; preds = %for.inc158.do.end167_crit_edge, %if.then133.critedge.do.end167_crit_edge
  %call169 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.23) #26
  br label %if.end170

if.end170:                                        ; preds = %do.end167, %for.cond115.if.end170_crit_edge
  %inactive_works = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 8
  %65 = ptrtoint ptr %inactive_works to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile ptr, ptr %inactive_works, align 4
  %cmp.i294.not = icmp eq ptr %66, %inactive_works
  br i1 %cmp.i294.not, label %if.end170.if.end209_crit_edge, label %if.then173

if.end170.if.end209_crit_edge:                    ; preds = %if.end170
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end209

if.then173:                                       ; preds = %if.end170
  %call179 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.126) #26
  %67 = ptrtoint ptr %inactive_works to i32
  call void @__asan_load4_noabort(i32 %67)
  %.pn267323 = load ptr, ptr %inactive_works, align 4
  %cmp188.not324 = icmp eq ptr %.pn267323, %inactive_works
  br i1 %cmp188.not324, label %if.then173.do.end206_crit_edge, label %if.then173.for.body190_crit_edge

if.then173.for.body190_crit_edge:                 ; preds = %if.then173
  br label %for.body190

if.then173.do.end206_crit_edge:                   ; preds = %if.then173
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end206

for.body190:                                      ; preds = %pr_cont_work.exit305.for.body190_crit_edge, %if.then173.for.body190_crit_edge
  %.pn267326 = phi ptr [ %.pn267, %pr_cont_work.exit305.for.body190_crit_edge ], [ %.pn267323, %if.then173.for.body190_crit_edge ]
  %comma174.0.off0325 = phi i1 [ %tobool194.not, %pr_cont_work.exit305.for.body190_crit_edge ], [ false, %if.then173.for.body190_crit_edge ]
  %work.3 = getelementptr i8, ptr %.pn267326, i32 -4
  %func.i296 = getelementptr i8, ptr %.pn267326, i32 8
  %68 = ptrtoint ptr %func.i296 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %func.i296, align 4
  %cmp.i297 = icmp eq ptr %69, @wq_barrier_func
  %cond.i298 = select i1 %comma174.0.off0325, ptr @.str.116, ptr @.str.109
  br i1 %cmp.i297, label %if.then.i302, label %do.end5.i304

if.then.i302:                                     ; preds = %for.body190
  call void @__sanitizer_cov_trace_pc() #23
  %task.i299 = getelementptr i8, ptr %.pn267326, i32 96
  %70 = ptrtoint ptr %task.i299 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %task.i299, align 4
  %pid.i.i300 = getelementptr inbounds %struct.task_struct, ptr %71, i32 0, i32 68
  %72 = ptrtoint ptr %pid.i.i300 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %pid.i.i300, align 8
  %call2.i301 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.138, ptr noundef nonnull %cond.i298, i32 noundef %73) #26
  br label %pr_cont_work.exit305

do.end5.i304:                                     ; preds = %for.body190
  call void @__sanitizer_cov_trace_pc() #23
  %call10.i303 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.141, ptr noundef nonnull %cond.i298, ptr noundef %69) #26
  br label %pr_cont_work.exit305

pr_cont_work.exit305:                             ; preds = %do.end5.i304, %if.then.i302
  %74 = ptrtoint ptr %work.3 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %work.3, align 4
  %and193 = and i32 %75, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and193)
  %tobool194.not = icmp eq i32 %and193, 0
  %76 = ptrtoint ptr %.pn267326 to i32
  call void @__asan_load4_noabort(i32 %76)
  %.pn267 = load ptr, ptr %.pn267326, align 4
  %cmp188.not = icmp eq ptr %.pn267, %inactive_works
  br i1 %cmp188.not, label %pr_cont_work.exit305.do.end206_crit_edge, label %pr_cont_work.exit305.for.body190_crit_edge

pr_cont_work.exit305.for.body190_crit_edge:       ; preds = %pr_cont_work.exit305
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body190

pr_cont_work.exit305.do.end206_crit_edge:         ; preds = %pr_cont_work.exit305
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end206

do.end206:                                        ; preds = %pr_cont_work.exit305.do.end206_crit_edge, %if.then173.do.end206_crit_edge
  %call208 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.23) #26
  br label %if.end209

if.end209:                                        ; preds = %do.end206, %if.end170.if.end209_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @show_one_workqueue(ptr noundef %wq) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %dep_map = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 2, i32 5
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.for.cond.preheader_crit_edge

entry.for.cond.preheader_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.preheader

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @rcu_read_lock_any_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.lhs.true3, label %land.lhs.true.for.cond.preheader_crit_edge

land.lhs.true.for.cond.preheader_crit_edge:       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.preheader

land.lhs.true3:                                   ; preds = %land.lhs.true
  %call4 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %land.lhs.true3.for.cond.preheader_crit_edge, label %land.lhs.true6

land.lhs.true3.for.cond.preheader_crit_edge:      ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.preheader

land.lhs.true6:                                   ; preds = %land.lhs.true3
  %.b124 = load i1, ptr @show_one_workqueue.__warned, align 1
  br i1 %.b124, label %land.lhs.true6.for.cond.preheader_crit_edge, label %if.then

land.lhs.true6.for.cond.preheader_crit_edge:      ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.preheader

if.then:                                          ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @show_one_workqueue.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 4819, ptr noundef nonnull @.str.9) #21
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then, %land.lhs.true6.for.cond.preheader_crit_edge, %land.lhs.true3.for.cond.preheader_crit_edge, %land.lhs.true.for.cond.preheader_crit_edge, %entry.for.cond.preheader_crit_edge
  br label %for.cond

for.cond:                                         ; preds = %lor.lhs.false.for.cond_crit_edge, %for.cond.preheader
  %.pn.in = phi ptr [ %.pn, %lor.lhs.false.for.cond_crit_edge ], [ %wq, %for.cond.preheader ]
  %0 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn = load volatile ptr, ptr %.pn.in, align 4
  %cmp.not = icmp eq ptr %.pn, %wq
  br i1 %cmp.not, label %for.cond.cleanup_crit_edge, label %for.body

for.cond.cleanup_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.body:                                         ; preds = %for.cond
  %nr_active = getelementptr i8, ptr %.pn, i32 -16
  %1 = ptrtoint ptr %nr_active to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %nr_active, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool13.not = icmp eq i32 %2, 0
  br i1 %tobool13.not, label %lor.lhs.false, label %for.body.do.end32_crit_edge

for.body.do.end32_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end32

lor.lhs.false:                                    ; preds = %for.body
  %inactive_works = getelementptr i8, ptr %.pn, i32 -8
  %3 = ptrtoint ptr %inactive_works to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %inactive_works, align 4
  %cmp.i.not = icmp eq ptr %4, %inactive_works
  br i1 %cmp.i.not, label %lor.lhs.false.for.cond_crit_edge, label %lor.lhs.false.do.end32_crit_edge

lor.lhs.false.do.end32_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end32

lor.lhs.false.for.cond_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond

do.end32:                                         ; preds = %lor.lhs.false.do.end32_crit_edge, %for.body.do.end32_crit_edge
  %name = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 19
  %flags34 = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 22
  %5 = ptrtoint ptr %flags34 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %flags34, align 128
  %call35 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.25, ptr noundef %name, i32 noundef %6) #26
  %call.i126 = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i126)
  %tobool40.not = icmp eq i32 %call.i126, 0
  br i1 %tobool40.not, label %land.lhs.true41, label %do.end32.do.end52_crit_edge

do.end32.do.end52_crit_edge:                      ; preds = %do.end32
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end52

land.lhs.true41:                                  ; preds = %do.end32
  %call42 = tail call i32 @rcu_read_lock_any_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42)
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %land.lhs.true44, label %land.lhs.true41.do.end52_crit_edge

land.lhs.true41.do.end52_crit_edge:               ; preds = %land.lhs.true41
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end52

land.lhs.true44:                                  ; preds = %land.lhs.true41
  %call45 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call45)
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %land.lhs.true44.do.end52_crit_edge, label %land.lhs.true47

land.lhs.true44.do.end52_crit_edge:               ; preds = %land.lhs.true44
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end52

land.lhs.true47:                                  ; preds = %land.lhs.true44
  %.b121123 = load i1, ptr @show_one_workqueue.__warned.27, align 1
  br i1 %.b121123, label %land.lhs.true47.do.end52_crit_edge, label %if.then49

land.lhs.true47.do.end52_crit_edge:               ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end52

if.then49:                                        ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @show_one_workqueue.__warned.27, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 4830, ptr noundef nonnull @.str.9) #21
  br label %do.end52

do.end52:                                         ; preds = %if.then49, %land.lhs.true47.do.end52_crit_edge, %land.lhs.true44.do.end52_crit_edge, %land.lhs.true41.do.end52_crit_edge, %do.end32.do.end52_crit_edge
  %7 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pn122130 = load volatile ptr, ptr %wq, align 4
  %cmp65.not132 = icmp eq ptr %.pn122130, %wq
  br i1 %cmp65.not132, label %do.end52.cleanup_crit_edge, label %do.end52.do.body67_crit_edge

do.end52.do.body67_crit_edge:                     ; preds = %do.end52
  br label %do.body67

do.end52.cleanup_crit_edge:                       ; preds = %do.end52
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.body67:                                        ; preds = %do.body81.do.body67_crit_edge, %do.end52.do.body67_crit_edge
  %.pn122133 = phi ptr [ %.pn122, %do.body81.do.body67_crit_edge ], [ %.pn122130, %do.end52.do.body67_crit_edge ]
  %pwq.1134 = getelementptr i8, ptr %.pn122133, i32 -100
  %8 = ptrtoint ptr %pwq.1134 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pwq.1134, align 512
  %call70 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %9) #21
  %nr_active73 = getelementptr i8, ptr %.pn122133, i32 -16
  %10 = ptrtoint ptr %nr_active73 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %nr_active73, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool74.not = icmp eq i32 %11, 0
  br i1 %tobool74.not, label %lor.lhs.false75, label %do.body67.if.then79_crit_edge

do.body67.if.then79_crit_edge:                    ; preds = %do.body67
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then79

lor.lhs.false75:                                  ; preds = %do.body67
  %inactive_works76 = getelementptr i8, ptr %.pn122133, i32 -8
  %12 = ptrtoint ptr %inactive_works76 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %inactive_works76, align 4
  %cmp.i127.not = icmp eq ptr %13, %inactive_works76
  br i1 %cmp.i127.not, label %lor.lhs.false75.do.body81_crit_edge, label %lor.lhs.false75.if.then79_crit_edge

lor.lhs.false75.if.then79_crit_edge:              ; preds = %lor.lhs.false75
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then79

lor.lhs.false75.do.body81_crit_edge:              ; preds = %lor.lhs.false75
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body81

if.then79:                                        ; preds = %lor.lhs.false75.if.then79_crit_edge, %do.body67.if.then79_crit_edge
  tail call void @__printk_safe_enter() #21
  tail call fastcc void @show_pwq(ptr noundef %pwq.1134)
  tail call void @__printk_safe_exit() #21
  br label %do.body81

do.body81:                                        ; preds = %if.then79, %lor.lhs.false75.do.body81_crit_edge
  %14 = ptrtoint ptr %pwq.1134 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %pwq.1134, align 512
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %15, i32 noundef %call70) #21
  tail call void @touch_softlockup_watchdog() #21
  %16 = ptrtoint ptr %.pn122133 to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pn122 = load volatile ptr, ptr %.pn122133, align 4
  %cmp65.not = icmp eq ptr %.pn122, %wq
  br i1 %cmp65.not, label %do.body81.cleanup_crit_edge, label %do.body81.do.body67_crit_edge

do.body81.do.body67_crit_edge:                    ; preds = %do.body81
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body67

do.body81.cleanup_crit_edge:                      ; preds = %do.body81
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

cleanup:                                          ; preds = %do.body81.cleanup_crit_edge, %do.end52.cleanup_crit_edge, %for.cond.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_free_wq(ptr noundef %rcu) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %lock_name.i = getelementptr i8, ptr %rcu, i32 -64
  %0 = ptrtoint ptr %lock_name.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %lock_name.i, align 4
  %name.i = getelementptr i8, ptr %rcu, i32 -24
  %cmp.not.i = icmp eq ptr %1, %name.i
  br i1 %cmp.not.i, label %entry.wq_free_lockdep.exit_crit_edge, label %if.then.i

entry.wq_free_lockdep.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %wq_free_lockdep.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @kfree(ptr noundef %1) #21
  br label %wq_free_lockdep.exit

wq_free_lockdep.exit:                             ; preds = %if.then.i, %entry.wq_free_lockdep.exit_crit_edge
  %flags = getelementptr i8, ptr %rcu, i32 20
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 128
  %and = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then, label %if.else

if.then:                                          ; preds = %wq_free_lockdep.exit
  call void @__sanitizer_cov_trace_pc() #23
  %cpu_pwqs = getelementptr i8, ptr %rcu, i32 24
  %4 = ptrtoint ptr %cpu_pwqs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cpu_pwqs, align 4
  tail call void @free_percpu(ptr noundef %5) #21
  br label %if.end

if.else:                                          ; preds = %wq_free_lockdep.exit
  %unbound_attrs = getelementptr i8, ptr %rcu, i32 -76
  %6 = ptrtoint ptr %unbound_attrs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %unbound_attrs, align 32
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %if.else.if.end_crit_edge, label %if.then.i5

if.else.if.end_crit_edge:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then.i5:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  %cpumask.i = getelementptr inbounds %struct.workqueue_attrs, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %cpumask.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %cpumask.i, align 4
  tail call void @free_cpumask_var(ptr noundef %9) #21
  tail call void @kfree(ptr noundef nonnull %7) #21
  br label %if.end

if.end:                                           ; preds = %if.then.i5, %if.else.if.end_crit_edge, %if.then
  %add.ptr = getelementptr i8, ptr %rcu, i32 -236
  tail call void @kfree(ptr noundef %add.ptr) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @workqueue_set_max_active(ptr noundef %wq, i32 noundef %max_active) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 22
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 128
  %and = and i32 %1, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end22, label %do.end, !prof !679

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4519, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end22:                                         ; preds = %entry
  %name = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 19
  %and.i = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end22.cond.end3.i_crit_edge, label %if.end.i.i.i

if.end22.cond.end3.i_crit_edge:                   ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end3.i

if.end.i.i.i:                                     ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  %call4.i.i.i = tail call i32 @__bitmap_weight(ptr noundef nonnull @__cpu_possible_mask, i32 noundef %2) #21
  %mul.i = shl i32 %call4.i.i.i, 2
  %3 = tail call i32 @llvm.smax.i32(i32 %mul.i, i32 512) #21
  br label %cond.end3.i

cond.end3.i:                                      ; preds = %if.end.i.i.i, %if.end22.cond.end3.i_crit_edge
  %cond4.i = phi i32 [ %3, %if.end.i.i.i ], [ 512, %if.end22.cond.end3.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %max_active)
  %cmp5.i = icmp slt i32 %max_active, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %cond4.i, i32 %max_active)
  %cmp6.i = icmp slt i32 %cond4.i, %max_active
  %or.cond.i = select i1 %cmp5.i, i1 true, i1 %cmp6.i
  br i1 %or.cond.i, label %do.end.i, label %cond.end3.i.wq_clamp_max_active.exit_crit_edge

cond.end3.i.wq_clamp_max_active.exit_crit_edge:   ; preds = %cond.end3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %wq_clamp_max_active.exit

do.end.i:                                         ; preds = %cond.end3.i
  call void @__sanitizer_cov_trace_pc() #23
  %call8.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.87, i32 noundef %max_active, ptr noundef %name, i32 noundef 1, i32 noundef %cond4.i) #26
  br label %wq_clamp_max_active.exit

wq_clamp_max_active.exit:                         ; preds = %do.end.i, %cond.end3.i.wq_clamp_max_active.exit_crit_edge
  %4 = tail call i32 @llvm.smax.i32(i32 %max_active, i32 1) #21
  %5 = tail call i32 @llvm.umin.i32(i32 %4, i32 %cond4.i) #21
  %mutex = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 2
  tail call void @mutex_lock_nested(ptr noundef %mutex, i32 noundef 0) #21
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags, align 128
  %and25 = and i32 %7, -131073
  store i32 %and25, ptr %flags, align 128
  %saved_max_active = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 12
  %8 = ptrtoint ptr %saved_max_active to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %5, ptr %saved_max_active, align 4
  %dep_map = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 2, i32 5
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool29.not = icmp eq i32 %call.i, 0
  br i1 %tobool29.not, label %land.lhs.true, label %wq_clamp_max_active.exit.do.end40_crit_edge

wq_clamp_max_active.exit.do.end40_crit_edge:      ; preds = %wq_clamp_max_active.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end40

land.lhs.true:                                    ; preds = %wq_clamp_max_active.exit
  %call30 = tail call i32 @rcu_read_lock_any_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30)
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %land.lhs.true32, label %land.lhs.true.do.end40_crit_edge

land.lhs.true.do.end40_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end40

land.lhs.true32:                                  ; preds = %land.lhs.true
  %call33 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %land.lhs.true32.do.end40_crit_edge, label %land.lhs.true35

land.lhs.true32.do.end40_crit_edge:               ; preds = %land.lhs.true32
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end40

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %.b70 = load i1, ptr @workqueue_set_max_active.__warned, align 1
  br i1 %.b70, label %land.lhs.true35.do.end40_crit_edge, label %if.then37

land.lhs.true35.do.end40_crit_edge:               ; preds = %land.lhs.true35
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end40

if.then37:                                        ; preds = %land.lhs.true35
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @workqueue_set_max_active.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 4529, ptr noundef nonnull @.str.9) #21
  br label %do.end40

do.end40:                                         ; preds = %if.then37, %land.lhs.true35.do.end40_crit_edge, %land.lhs.true32.do.end40_crit_edge, %land.lhs.true.do.end40_crit_edge, %wq_clamp_max_active.exit.do.end40_crit_edge
  %9 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %9)
  %.pn71 = load volatile ptr, ptr %wq, align 4
  %cmp.not72 = icmp eq ptr %.pn71, %wq
  br i1 %cmp.not72, label %do.end40.for.end_crit_edge, label %do.end40.for.body_crit_edge

do.end40.for.body_crit_edge:                      ; preds = %do.end40
  br label %for.body

do.end40.for.end_crit_edge:                       ; preds = %do.end40
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %do.end40.for.body_crit_edge
  %.pn73 = phi ptr [ %.pn, %for.body.for.body_crit_edge ], [ %.pn71, %do.end40.for.body_crit_edge ]
  %pwq.0 = getelementptr i8, ptr %.pn73, i32 -100
  tail call fastcc void @pwq_adjust_max_active(ptr noundef %pwq.0)
  %10 = ptrtoint ptr %.pn73 to i32
  call void @__asan_load4_noabort(i32 %10)
  %.pn = load volatile ptr, ptr %.pn73, align 4
  %cmp.not = icmp eq ptr %.pn, %wq
  br i1 %cmp.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %do.end40.for.end_crit_edge
  tail call void @mutex_unlock(ptr noundef %mutex) #21
  br label %cleanup

cleanup:                                          ; preds = %for.end, %do.end
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @current_work() #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %and.i = and i32 %3, 15728640
  %4 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i13.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i13.i to ptr
  %preempt_count.i14.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i14.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i14.i, align 4
  %and2.i = and i32 %7, 983040
  %or.i = or i32 %and2.i, %and.i
  %8 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i15.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i15.i to ptr
  %preempt_count.i16.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i16.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i16.i, align 4
  %and5.i = and i32 %11, 256
  %or6.i = or i32 %or.i, %and5.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or6.i)
  %tobool.not.i = icmp eq i32 %or6.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %entry.cond.end_crit_edge

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

land.lhs.true.i:                                  ; preds = %entry
  %12 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 3
  %16 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %flags.i, align 4
  %and8.i = and i32 %17, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i)
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  br i1 %tobool9.not.i, label %land.lhs.true.i.cond.end_crit_edge, label %current_wq_worker.exit

land.lhs.true.i.cond.end_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

current_wq_worker.exit:                           ; preds = %land.lhs.true.i
  %call12.i = tail call ptr @kthread_data(ptr noundef %15) #21
  %tobool.not = icmp eq ptr %call12.i, null
  br i1 %tobool.not, label %current_wq_worker.exit.cond.end_crit_edge, label %cond.true

current_wq_worker.exit.cond.end_crit_edge:        ; preds = %current_wq_worker.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

cond.true:                                        ; preds = %current_wq_worker.exit
  call void @__sanitizer_cov_trace_pc() #23
  %current_work = getelementptr inbounds %struct.worker, ptr %call12.i, i32 0, i32 1
  %18 = ptrtoint ptr %current_work to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %current_work, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %current_wq_worker.exit.cond.end_crit_edge, %land.lhs.true.i.cond.end_crit_edge, %entry.cond.end_crit_edge
  %cond = phi ptr [ %19, %cond.true ], [ null, %current_wq_worker.exit.cond.end_crit_edge ], [ null, %land.lhs.true.i.cond.end_crit_edge ], [ null, %entry.cond.end_crit_edge ]
  ret ptr %cond
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @current_is_workqueue_rescuer() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %and.i = and i32 %3, 15728640
  %4 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i13.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i13.i to ptr
  %preempt_count.i14.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i14.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i14.i, align 4
  %and2.i = and i32 %7, 983040
  %or.i = or i32 %and2.i, %and.i
  %8 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i15.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i15.i to ptr
  %preempt_count.i16.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i16.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i16.i, align 4
  %and5.i = and i32 %11, 256
  %or6.i = or i32 %or.i, %and5.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or6.i)
  %tobool.not.i = icmp eq i32 %or6.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %entry.land.end_crit_edge

entry.land.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.end

land.lhs.true.i:                                  ; preds = %entry
  %12 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 3
  %16 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %flags.i, align 4
  %and8.i = and i32 %17, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i)
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  br i1 %tobool9.not.i, label %land.lhs.true.i.land.end_crit_edge, label %current_wq_worker.exit

land.lhs.true.i.land.end_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.end

current_wq_worker.exit:                           ; preds = %land.lhs.true.i
  %call12.i = tail call ptr @kthread_data(ptr noundef %15) #21
  %tobool.not = icmp eq ptr %call12.i, null
  br i1 %tobool.not, label %current_wq_worker.exit.land.end_crit_edge, label %land.rhs

current_wq_worker.exit.land.end_crit_edge:        ; preds = %current_wq_worker.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.end

land.rhs:                                         ; preds = %current_wq_worker.exit
  call void @__sanitizer_cov_trace_pc() #23
  %rescue_wq = getelementptr inbounds %struct.worker, ptr %call12.i, i32 0, i32 14
  %18 = ptrtoint ptr %rescue_wq to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %rescue_wq, align 4
  %tobool1 = icmp ne ptr %19, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %current_wq_worker.exit.land.end_crit_edge, %land.lhs.true.i.land.end_crit_edge, %entry.land.end_crit_edge
  %20 = phi i1 [ false, %current_wq_worker.exit.land.end_crit_edge ], [ %tobool1, %land.rhs ], [ false, %land.lhs.true.i.land.end_crit_edge ], [ false, %entry.land.end_crit_edge ]
  ret i1 %20
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @workqueue_congested(i32 noundef %cpu, ptr noundef %wq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !695
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #21
  %call.i = tail call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 696, ptr noundef nonnull @.str.100) #21
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %4 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %7, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !712
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %cpu)
  %cmp = icmp eq i32 %cpu, 4
  br i1 %cmp, label %if.then, label %rcu_read_lock.exit.if.end_crit_edge

rcu_read_lock.exit.if.end_crit_edge:              ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #23
  %8 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i to ptr
  %cpu1 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu1, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %rcu_read_lock.exit.if.end_crit_edge
  %cpu.addr.0 = phi i32 [ %11, %if.then ], [ %cpu, %rcu_read_lock.exit.if.end_crit_edge ]
  %flags = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 22
  %12 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %flags, align 128
  %and = and i32 %13, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.body3, label %if.else

do.body3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %cpu_pwqs = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 23
  %14 = ptrtoint ptr %cpu_pwqs to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %cpu_pwqs, align 4
  %16 = ptrtoint ptr %15 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu.addr.0
  %17 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx, align 4
  %add = add i32 %18, %16
  %19 = inttoptr i32 %add to ptr
  br label %if.end8

if.else:                                          ; preds = %if.end
  %call.i21 = tail call i32 @rcu_read_lock_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i21)
  %tobool.not.i22 = icmp eq i32 %call.i21, 0
  br i1 %tobool.not.i22, label %land.lhs.true.i23, label %if.else.unbound_pwq_by_node.exit_crit_edge

if.else.unbound_pwq_by_node.exit_crit_edge:       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %unbound_pwq_by_node.exit

land.lhs.true.i23:                                ; preds = %if.else
  %dep_map.i = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 2, i32 5
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool2.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool2.not.i, label %land.lhs.true3.i, label %land.lhs.true.i23.unbound_pwq_by_node.exit_crit_edge

land.lhs.true.i23.unbound_pwq_by_node.exit_crit_edge: ; preds = %land.lhs.true.i23
  call void @__sanitizer_cov_trace_pc() #23
  br label %unbound_pwq_by_node.exit

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i23
  %call.i2.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i2.i)
  %tobool5.not.i = icmp eq i32 %call.i2.i, 0
  br i1 %tobool5.not.i, label %land.lhs.true6.i, label %land.lhs.true3.i.unbound_pwq_by_node.exit_crit_edge

land.lhs.true3.i.unbound_pwq_by_node.exit_crit_edge: ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %unbound_pwq_by_node.exit

land.lhs.true6.i:                                 ; preds = %land.lhs.true3.i
  %call7.i = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %land.lhs.true6.i.unbound_pwq_by_node.exit_crit_edge, label %land.lhs.true9.i

land.lhs.true6.i.unbound_pwq_by_node.exit_crit_edge: ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %unbound_pwq_by_node.exit

land.lhs.true9.i:                                 ; preds = %land.lhs.true6.i
  %.b1.i = load i1, ptr @unbound_pwq_by_node.__warned, align 1
  br i1 %.b1.i, label %land.lhs.true9.i.unbound_pwq_by_node.exit_crit_edge, label %if.then.i24

land.lhs.true9.i.unbound_pwq_by_node.exit_crit_edge: ; preds = %land.lhs.true9.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %unbound_pwq_by_node.exit

if.then.i24:                                      ; preds = %land.lhs.true9.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @unbound_pwq_by_node.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 577, ptr noundef nonnull @.str.101) #21
  br label %unbound_pwq_by_node.exit

unbound_pwq_by_node.exit:                         ; preds = %if.then.i24, %land.lhs.true9.i.unbound_pwq_by_node.exit_crit_edge, %land.lhs.true6.i.unbound_pwq_by_node.exit_crit_edge, %land.lhs.true3.i.unbound_pwq_by_node.exit_crit_edge, %land.lhs.true.i23.unbound_pwq_by_node.exit_crit_edge, %if.else.unbound_pwq_by_node.exit_crit_edge
  %numa_pwq_tbl.i = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 24
  %20 = ptrtoint ptr %numa_pwq_tbl.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile ptr, ptr %numa_pwq_tbl.i, align 4
  br label %if.end8

if.end8:                                          ; preds = %unbound_pwq_by_node.exit, %do.body3
  %pwq.0 = phi ptr [ %21, %unbound_pwq_by_node.exit ], [ %19, %do.body3 ]
  %inactive_works = getelementptr inbounds %struct.pool_workqueue, ptr %pwq.0, i32 0, i32 8
  %22 = ptrtoint ptr %inactive_works to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile ptr, ptr %inactive_works, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !713
  %24 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i19 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i19 to ptr
  %preempt_count.i.i20 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i20 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i20, align 4
  %sub.i = add i32 %27, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i20, align 4
  %call.i25 = tail call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i25, label %if.end8.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i28

if.end8.rcu_read_unlock.exit_crit_edge:           ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

land.lhs.true.i28:                                ; preds = %if.end8
  %call1.i26 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i26)
  %tobool.not.i27 = icmp eq i32 %call1.i26, 0
  br i1 %tobool.not.i27, label %land.lhs.true.i28.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i30

land.lhs.true.i28.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i28
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

land.lhs.true2.i30:                               ; preds = %land.lhs.true.i28
  %.b4.i29 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i29, label %land.lhs.true2.i30.rcu_read_unlock.exit_crit_edge, label %if.then.i31

land.lhs.true2.i30.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i30
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

if.then.i31:                                      ; preds = %land.lhs.true2.i30
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 724, ptr noundef nonnull @.str.102) #21
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i31, %land.lhs.true2.i30.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i28.rcu_read_unlock.exit_crit_edge, %if.end8.rcu_read_unlock.exit_crit_edge
  %cmp.i = icmp ne ptr %23, %inactive_works
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !699
  %28 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i.i32 = and i32 %28, -16384
  %29 = inttoptr i32 %and.i.i.i.i.i32 to ptr
  %preempt_count.i.i.i.i33 = getelementptr inbounds %struct.thread_info, ptr %29, i32 0, i32 1
  %30 = ptrtoint ptr %preempt_count.i.i.i.i33 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %preempt_count.i.i.i.i33, align 4
  %sub.i.i.i = add i32 %31, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i33, align 4
  tail call void @rcu_read_unlock_strict() #21
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #21
  ret i1 %cmp.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @work_busy(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %work, align 4
  %and1.i = and i32 %1, 1
  %2 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %5, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !695
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #21
  %call.i = tail call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 696, ptr noundef nonnull @.str.100) #21
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %call1 = tail call fastcc ptr @get_work_pool(ptr noundef %work)
  %tobool2.not = icmp eq ptr %call1, null
  br i1 %tobool2.not, label %rcu_read_lock.exit.if.end19_crit_edge, label %do.body

rcu_read_lock.exit.if.end19_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end19

do.body:                                          ; preds = %rcu_read_lock.exit
  %call4 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull %call1) #21
  %6 = ptrtoint ptr %work to i32
  %mul.i.i.i = mul i32 %6, 1640531527
  %shr.i.i = lshr i32 %mul.i.i.i, 26
  %arrayidx.i = getelementptr %struct.worker_pool, ptr %call1, i32 0, i32 13, i32 %shr.i.i
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %worker.024.i = load ptr, ptr %arrayidx.i, align 4
  %tobool2.not25.i = icmp eq ptr %worker.024.i, null
  br i1 %tobool2.not25.i, label %do.body.find_worker_executing_work.exit_crit_edge, label %for.body.lr.ph.i

do.body.find_worker_executing_work.exit_crit_edge: ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %find_worker_executing_work.exit

for.body.lr.ph.i:                                 ; preds = %do.body
  %func.i = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %worker.026.i = phi ptr [ %worker.024.i, %for.body.lr.ph.i ], [ %worker.0.i, %for.inc.i.for.body.i_crit_edge ]
  %current_work.i = getelementptr inbounds %struct.worker, ptr %worker.026.i, i32 0, i32 1
  %8 = ptrtoint ptr %current_work.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %current_work.i, align 4
  %cmp.i = icmp eq ptr %9, %work
  br i1 %cmp.i, label %land.lhs.true.i28, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

land.lhs.true.i28:                                ; preds = %for.body.i
  %current_func.i = getelementptr inbounds %struct.worker, ptr %worker.026.i, i32 0, i32 2
  %10 = ptrtoint ptr %current_func.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %current_func.i, align 4
  %12 = ptrtoint ptr %func.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %func.i, align 4
  %cmp3.i = icmp eq ptr %11, %13
  br i1 %cmp3.i, label %land.lhs.true.i28.find_worker_executing_work.exit_crit_edge, label %land.lhs.true.i28.for.inc.i_crit_edge

land.lhs.true.i28.for.inc.i_crit_edge:            ; preds = %land.lhs.true.i28
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

land.lhs.true.i28.find_worker_executing_work.exit_crit_edge: ; preds = %land.lhs.true.i28
  call void @__sanitizer_cov_trace_pc() #23
  br label %find_worker_executing_work.exit

for.inc.i:                                        ; preds = %land.lhs.true.i28.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %14 = ptrtoint ptr %worker.026.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %worker.0.i = load ptr, ptr %worker.026.i, align 4
  %tobool2.not.i = icmp eq ptr %worker.0.i, null
  br i1 %tobool2.not.i, label %for.inc.i.find_worker_executing_work.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.find_worker_executing_work.exit_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %find_worker_executing_work.exit

find_worker_executing_work.exit:                  ; preds = %for.inc.i.find_worker_executing_work.exit_crit_edge, %land.lhs.true.i28.find_worker_executing_work.exit_crit_edge, %do.body.find_worker_executing_work.exit_crit_edge
  %worker.0.lcssa.i = phi ptr [ null, %do.body.find_worker_executing_work.exit_crit_edge ], [ %worker.026.i, %land.lhs.true.i28.find_worker_executing_work.exit_crit_edge ], [ null, %for.inc.i.find_worker_executing_work.exit_crit_edge ]
  %tobool6.not = icmp eq ptr %worker.0.lcssa.i, null
  %or8 = or i32 %and1.i, 2
  %spec.select27 = select i1 %tobool6.not, i32 %and1.i, i32 %or8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull %call1, i32 noundef %call4) #21
  br label %if.end19

if.end19:                                         ; preds = %find_worker_executing_work.exit, %rcu_read_lock.exit.if.end19_crit_edge
  %ret.2 = phi i32 [ %spec.select27, %find_worker_executing_work.exit ], [ %and1.i, %rcu_read_lock.exit.if.end19_crit_edge ]
  %call.i29 = tail call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i29, label %if.end19.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i32

if.end19.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

land.lhs.true.i32:                                ; preds = %if.end19
  %call1.i30 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i30)
  %tobool.not.i31 = icmp eq i32 %call1.i30, 0
  br i1 %tobool.not.i31, label %land.lhs.true.i32.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i34

land.lhs.true.i32.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i32
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

land.lhs.true2.i34:                               ; preds = %land.lhs.true.i32
  %.b4.i33 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i33, label %land.lhs.true2.i34.rcu_read_unlock.exit_crit_edge, label %if.then.i35

land.lhs.true2.i34.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i34
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

if.then.i35:                                      ; preds = %land.lhs.true2.i34
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 724, ptr noundef nonnull @.str.102) #21
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i35, %land.lhs.true2.i34.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i32.rcu_read_unlock.exit_crit_edge, %if.end19.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !699
  %15 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i.i36 = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i.i.i.i36 to ptr
  %preempt_count.i.i.i.i37 = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %preempt_count.i.i.i.i37 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %preempt_count.i.i.i.i37, align 4
  %sub.i.i.i = add i32 %18, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i37, align 4
  tail call void @rcu_read_unlock_strict() #21
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #21
  ret i32 %ret.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @get_work_pool(ptr noundef %work) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %work, i32 noundef 4) #21
  %0 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %work, align 4
  %call2 = tail call i32 @rcu_read_lock_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.do.end_crit_edge

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool4.not = icmp eq i32 %call.i, 0
  br i1 %tobool4.not, label %land.lhs.true5, label %land.lhs.true.do.end_crit_edge

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

land.lhs.true5:                                   ; preds = %land.lhs.true
  %call6 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %land.lhs.true5.do.end_crit_edge, label %land.lhs.true8

land.lhs.true5.do.end_crit_edge:                  ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

land.lhs.true8:                                   ; preds = %land.lhs.true5
  %.b21 = load i1, ptr @get_work_pool.__warned, align 1
  br i1 %.b21, label %land.lhs.true8.do.end_crit_edge, label %if.then

land.lhs.true8.do.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

if.then:                                          ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @get_work_pool.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 726, ptr noundef nonnull @.str.31) #21
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true8.do.end_crit_edge, %land.lhs.true5.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool10.not = icmp eq i32 %and, 0
  br i1 %tobool10.not, label %if.end13, label %if.then11

if.then11:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #23
  %and12 = and i32 %1, -512
  %2 = inttoptr i32 %and12 to ptr
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %2, align 512
  br label %cleanup

if.end13:                                         ; preds = %do.end
  %shr = lshr i32 %1, 6
  call void @__sanitizer_cov_trace_const_cmp4(i32 67108863, i32 %shr)
  %cmp = icmp eq i32 %shr, 67108863
  br i1 %cmp, label %if.end13.cleanup_crit_edge, label %if.end15

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end15:                                         ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #23
  %call16 = tail call ptr @idr_find(ptr noundef nonnull @worker_pool_idr, i32 noundef %shr) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end15, %if.end13.cleanup_crit_edge, %if.then11
  %retval.0 = phi ptr [ %4, %if.then11 ], [ %call16, %if.end15 ], [ null, %if.end13.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @set_worker_desc(ptr nocapture noundef readonly %fmt, ...) #0 align 64 {
entry:
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %and.i = and i32 %3, 15728640
  %4 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i13.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i13.i to ptr
  %preempt_count.i14.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i14.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i14.i, align 4
  %and2.i = and i32 %7, 983040
  %or.i = or i32 %and2.i, %and.i
  %8 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i15.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i15.i to ptr
  %preempt_count.i16.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i16.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i16.i, align 4
  %and5.i = and i32 %11, 256
  %or6.i = or i32 %or.i, %and5.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or6.i)
  %tobool.not.i = icmp eq i32 %or6.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %entry.current_wq_worker.exit.thread_crit_edge

entry.current_wq_worker.exit.thread_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %current_wq_worker.exit.thread

land.lhs.true.i:                                  ; preds = %entry
  %12 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 3
  %16 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %flags.i, align 4
  %and8.i = and i32 %17, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i)
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  br i1 %tobool9.not.i, label %land.lhs.true.i.current_wq_worker.exit.thread_crit_edge, label %current_wq_worker.exit

land.lhs.true.i.current_wq_worker.exit.thread_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %current_wq_worker.exit.thread

current_wq_worker.exit.thread:                    ; preds = %land.lhs.true.i.current_wq_worker.exit.thread_crit_edge, %entry.current_wq_worker.exit.thread_crit_edge
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #21
  br label %if.end

current_wq_worker.exit:                           ; preds = %land.lhs.true.i
  %call12.i = tail call ptr @kthread_data(ptr noundef %15) #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #21
  %18 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !681
  %tobool.not = icmp eq ptr %call12.i, null
  br i1 %tobool.not, label %current_wq_worker.exit.if.end_crit_edge, label %if.then

current_wq_worker.exit.if.end_crit_edge:          ; preds = %current_wq_worker.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %current_wq_worker.exit
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.va_start(ptr nonnull %args)
  %desc = getelementptr inbounds %struct.worker, ptr %call12.i, i32 0, i32 13
  %19 = ptrtoint ptr %args to i32
  call void @__asan_load4_noabort(i32 %19)
  %.fca.0.load = load i32, ptr %args, align 4
  %.fca.0.insert = insertvalue [1 x i32] poison, i32 %.fca.0.load, 0
  %call1 = call i32 @vsnprintf(ptr noundef %desc, i32 noundef 24, ptr noundef %fmt, [1 x i32] %.fca.0.insert)
  call void @llvm.va_end(ptr nonnull %args)
  br label %if.end

if.end:                                           ; preds = %if.then, %current_wq_worker.exit.if.end_crit_edge, %current_wq_worker.exit.thread
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @print_worker_info(ptr noundef %log_lvl, ptr noundef %task) local_unnamed_addr #0 align 64 {
entry:
  %fn = alloca ptr, align 4
  %name = alloca [24 x i8], align 1
  %desc = alloca [24 x i8], align 1
  %pwq = alloca ptr, align 4
  %wq = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %fn) #21
  %0 = ptrtoint ptr %fn to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %fn, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %name) #21
  %1 = call ptr @memset(ptr %name, i32 0, i32 24)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %desc) #21
  %2 = call ptr @memset(ptr %desc, i32 0, i32 24)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pwq) #21
  %3 = ptrtoint ptr %pwq to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %pwq, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %wq) #21
  %4 = ptrtoint ptr %wq to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %wq, align 4
  %flags = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 3
  %5 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %flags, align 4
  %and = and i32 %6, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call ptr @kthread_probe_data(ptr noundef %task) #21
  %current_func = getelementptr inbounds %struct.worker, ptr %call, i32 0, i32 2
  %call1 = call i32 @copy_from_kernel_nofault(ptr noundef nonnull %fn, ptr noundef %current_func, i32 noundef 4) #21
  %current_pwq = getelementptr inbounds %struct.worker, ptr %call, i32 0, i32 3
  %call2 = call i32 @copy_from_kernel_nofault(ptr noundef nonnull %pwq, ptr noundef %current_pwq, i32 noundef 4) #21
  %7 = ptrtoint ptr %pwq to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pwq, align 4
  %wq3 = getelementptr inbounds %struct.pool_workqueue, ptr %8, i32 0, i32 1
  %call4 = call i32 @copy_from_kernel_nofault(ptr noundef nonnull %wq, ptr noundef %wq3, i32 noundef 4) #21
  %9 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %wq, align 4
  %name5 = getelementptr inbounds %struct.workqueue_struct, ptr %10, i32 0, i32 19
  %call7 = call i32 @copy_from_kernel_nofault(ptr noundef nonnull %name, ptr noundef %name5, i32 noundef 23) #21
  %desc9 = getelementptr inbounds %struct.worker, ptr %call, i32 0, i32 13
  %call11 = call i32 @copy_from_kernel_nofault(ptr noundef nonnull %desc, ptr noundef %desc9, i32 noundef 23) #21
  %11 = ptrtoint ptr %fn to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %fn, align 4
  %tobool12.not = icmp eq ptr %12, null
  br i1 %tobool12.not, label %lor.lhs.false, label %if.end.do.end_crit_edge

if.end.do.end_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

lor.lhs.false:                                    ; preds = %if.end
  %13 = ptrtoint ptr %name to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %name, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool13.not = icmp eq i8 %14, 0
  br i1 %tobool13.not, label %lor.lhs.false14, label %lor.lhs.false.do.end_crit_edge

lor.lhs.false.do.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %15 = ptrtoint ptr %desc to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %desc, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool17.not = icmp eq i8 %16, 0
  br i1 %tobool17.not, label %lor.lhs.false14.cleanup_crit_edge, label %lor.lhs.false14.do.end_crit_edge

lor.lhs.false14.do.end_crit_edge:                 ; preds = %lor.lhs.false14
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

lor.lhs.false14.cleanup_crit_edge:                ; preds = %lor.lhs.false14
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.end:                                           ; preds = %lor.lhs.false14.do.end_crit_edge, %lor.lhs.false.do.end_crit_edge, %if.end.do.end_crit_edge
  %call20 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.17, ptr noundef %log_lvl, ptr noundef nonnull %name, ptr noundef %12) #26
  %call23 = call i32 @strcmp(ptr noundef nonnull %name, ptr noundef nonnull %desc) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %do.end.do.end35_crit_edge, label %do.end28

do.end.do.end35_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end35

do.end28:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #23
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.20, ptr noundef nonnull %desc) #26
  br label %do.end35

do.end35:                                         ; preds = %do.end28, %do.end.do.end35_crit_edge
  %call37 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.23) #26
  br label %cleanup

cleanup:                                          ; preds = %do.end35, %lor.lhs.false14.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %wq) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pwq) #21
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %desc) #21
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %name) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %fn) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kthread_probe_data(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @copy_from_kernel_nofault(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #9

; Function Attrs: null_pointer_is_valid
declare dso_local void @__printk_safe_enter() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__printk_safe_exit() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @show_all_workqueues() local_unnamed_addr #0 align 64 {
entry:
  %pi = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pi) #21
  %0 = ptrtoint ptr %pi to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %pi, align 4, !annotation !681
  %1 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %4, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !695
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #21
  %call.i = tail call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 696, ptr noundef nonnull @.str.100) #21
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.28) #26
  %call2 = tail call i32 @rcu_read_lock_any_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end8_crit_edge

rcu_read_lock.exit.do.end8_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end8

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call3 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %land.lhs.true.do.end8_crit_edge, label %land.lhs.true5

land.lhs.true.do.end8_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end8

land.lhs.true5:                                   ; preds = %land.lhs.true
  %.b51 = load i1, ptr @show_all_workqueues.__warned, align 1
  br i1 %.b51, label %land.lhs.true5.do.end8_crit_edge, label %if.then

land.lhs.true5.do.end8_crit_edge:                 ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end8

if.then:                                          ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @show_all_workqueues.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 4914, ptr noundef nonnull @.str.9) #21
  br label %do.end8

do.end8:                                          ; preds = %if.then, %land.lhs.true5.do.end8_crit_edge, %land.lhs.true.do.end8_crit_edge, %rcu_read_lock.exit.do.end8_crit_edge
  %.pn64 = load volatile ptr, ptr @workqueues, align 4
  %cmp.not65 = icmp eq ptr %.pn64, @workqueues
  br i1 %cmp.not65, label %do.end8.for.cond22.preheader_crit_edge, label %do.end8.for.body_crit_edge

do.end8.for.body_crit_edge:                       ; preds = %do.end8
  br label %for.body

do.end8.for.cond22.preheader_crit_edge:           ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond22.preheader

for.cond22.preheader:                             ; preds = %for.body.for.cond22.preheader_crit_edge, %do.end8.for.cond22.preheader_crit_edge
  %5 = ptrtoint ptr %pi to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %pi, align 4
  %call2367 = call ptr @idr_get_next(ptr noundef nonnull @worker_pool_idr, ptr noundef nonnull %pi) #21
  %cmp24.not68 = icmp eq ptr %call2367, null
  br i1 %cmp24.not68, label %for.cond22.preheader.for.end46_crit_edge, label %for.cond22.preheader.do.body26_crit_edge

for.cond22.preheader.do.body26_crit_edge:         ; preds = %for.cond22.preheader
  br label %do.body26

for.cond22.preheader.for.end46_crit_edge:         ; preds = %for.cond22.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end46

for.body:                                         ; preds = %for.body.for.body_crit_edge, %do.end8.for.body_crit_edge
  %.pn66 = phi ptr [ %.pn, %for.body.for.body_crit_edge ], [ %.pn64, %do.end8.for.body_crit_edge ]
  %wq.0 = getelementptr i8, ptr %.pn66, i32 -8
  tail call void @show_one_workqueue(ptr noundef %wq.0)
  %6 = ptrtoint ptr %.pn66 to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pn = load volatile ptr, ptr %.pn66, align 4
  %cmp.not = icmp eq ptr %.pn, @workqueues
  br i1 %cmp.not, label %for.body.for.cond22.preheader_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.for.cond22.preheader_crit_edge:          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond22.preheader

do.body26:                                        ; preds = %show_one_worker_pool.exit.do.body26_crit_edge, %for.cond22.preheader.do.body26_crit_edge
  %call2369 = phi ptr [ %call23, %show_one_worker_pool.exit.do.body26_crit_edge ], [ %call2367, %for.cond22.preheader.do.body26_crit_edge ]
  %call27 = call i32 @rcu_read_lock_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %land.lhs.true29, label %do.body26.if.else_crit_edge

do.body26.if.else_crit_edge:                      ; preds = %do.body26
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

land.lhs.true29:                                  ; preds = %do.body26
  %call.i52 = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i52)
  %tobool31.not = icmp eq i32 %call.i52, 0
  br i1 %tobool31.not, label %land.lhs.true32, label %land.lhs.true29.if.else_crit_edge

land.lhs.true29.if.else_crit_edge:                ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

land.lhs.true32:                                  ; preds = %land.lhs.true29
  %call33 = call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %land.lhs.true32.if.else_crit_edge, label %land.lhs.true35

land.lhs.true32.if.else_crit_edge:                ; preds = %land.lhs.true32
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %.b4950 = load i1, ptr @show_all_workqueues.__warned.30, align 1
  br i1 %.b4950, label %land.lhs.true35.if.else_crit_edge, label %if.then37

land.lhs.true35.if.else_crit_edge:                ; preds = %land.lhs.true35
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

if.then37:                                        ; preds = %land.lhs.true35
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @show_all_workqueues.__warned.30, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 4917, ptr noundef nonnull @.str.31) #21
  br label %if.else

if.else:                                          ; preds = %if.then37, %land.lhs.true35.if.else_crit_edge, %land.lhs.true32.if.else_crit_edge, %land.lhs.true29.if.else_crit_edge, %do.body26.if.else_crit_edge
  %call.i53 = call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull %call2369) #21
  %nr_workers.i = getelementptr inbounds %struct.worker_pool, ptr %call2369, i32 0, i32 8
  %7 = ptrtoint ptr %nr_workers.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %nr_workers.i, align 4
  %nr_idle.i = getelementptr inbounds %struct.worker_pool, ptr %call2369, i32 0, i32 9
  %9 = ptrtoint ptr %nr_idle.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %nr_idle.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %10)
  %cmp1.i = icmp eq i32 %8, %10
  br i1 %cmp1.i, label %if.else.show_one_worker_pool.exit_crit_edge, label %if.end.i

if.else.show_one_worker_pool.exit_crit_edge:      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %show_one_worker_pool.exit

if.end.i:                                         ; preds = %if.else
  call void @__printk_safe_enter() #21
  %id.i = getelementptr inbounds %struct.worker_pool, ptr %call2369, i32 0, i32 3
  %11 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %id.i, align 4
  %call7.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.144, i32 noundef %12) #26
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %13 = load i32, ptr @nr_cpu_ids, align 4
  %attrs.i.i = getelementptr inbounds %struct.worker_pool, ptr %call2369, i32 0, i32 18
  %14 = ptrtoint ptr %attrs.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %attrs.i.i, align 4
  %cpumask.i.i = getelementptr inbounds %struct.workqueue_attrs, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %cpumask.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %cpumask.i.i, align 4
  %call.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.130, i32 noundef %13, ptr noundef %17) #26
  %node.i.i = getelementptr inbounds %struct.worker_pool, ptr %call2369, i32 0, i32 2
  %18 = ptrtoint ptr %node.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %node.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %19)
  %cmp.not.i.i = icmp eq i32 %19, -1
  br i1 %cmp.not.i.i, label %if.end.i.pr_cont_pool_info.exit.i_crit_edge, label %do.end2.i.i

if.end.i.pr_cont_pool_info.exit.i_crit_edge:      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %pr_cont_pool_info.exit.i

do.end2.i.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %call5.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.133, i32 noundef %19) #26
  br label %pr_cont_pool_info.exit.i

pr_cont_pool_info.exit.i:                         ; preds = %do.end2.i.i, %if.end.i.pr_cont_pool_info.exit.i_crit_edge
  %flags.i.i = getelementptr inbounds %struct.worker_pool, ptr %call2369, i32 0, i32 4
  %20 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flags.i.i, align 4
  %22 = ptrtoint ptr %attrs.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %attrs.i.i, align 4
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %23, align 4
  %call10.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.136, i32 noundef %21, i32 noundef %25) #26
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %26 = load volatile i32, ptr @jiffies, align 128
  %watchdog_ts.i = getelementptr inbounds %struct.worker_pool, ptr %call2369, i32 0, i32 5
  %27 = ptrtoint ptr %watchdog_ts.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %watchdog_ts.i, align 4
  %sub.i = sub i32 %26, %28
  %call12.i = call i32 @jiffies_to_msecs(i32 noundef %sub.i) #21
  %div.i = udiv i32 %call12.i, 1000
  %29 = ptrtoint ptr %nr_workers.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %nr_workers.i, align 4
  %call14.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.147, i32 noundef %div.i, i32 noundef %30) #26
  %manager.i = getelementptr inbounds %struct.worker_pool, ptr %call2369, i32 0, i32 14
  %31 = ptrtoint ptr %manager.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %manager.i, align 4
  %tobool.not.i54 = icmp eq ptr %32, null
  br i1 %tobool.not.i54, label %pr_cont_pool_info.exit.i.if.end23.i_crit_edge, label %do.end18.i

pr_cont_pool_info.exit.i.if.end23.i_crit_edge:    ; preds = %pr_cont_pool_info.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end23.i

do.end18.i:                                       ; preds = %pr_cont_pool_info.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  %task.i = getelementptr inbounds %struct.worker, ptr %32, i32 0, i32 6
  %33 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %task.i, align 4
  %pid.i.i = getelementptr inbounds %struct.task_struct, ptr %34, i32 0, i32 68
  %35 = ptrtoint ptr %pid.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %pid.i.i, align 8
  %call22.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.150, i32 noundef %36) #26
  br label %if.end23.i

if.end23.i:                                       ; preds = %do.end18.i, %pr_cont_pool_info.exit.i.if.end23.i_crit_edge
  %idle_list.i = getelementptr inbounds %struct.worker_pool, ptr %call2369, i32 0, i32 10
  %37 = ptrtoint ptr %idle_list.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %worker.069.i = load ptr, ptr %idle_list.i, align 4
  %cmp26.not70.i = icmp eq ptr %worker.069.i, %idle_list.i
  br i1 %cmp26.not70.i, label %if.end23.i.do.end43.i_crit_edge, label %do.end30.preheader.i

if.end23.i.do.end43.i_crit_edge:                  ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end43.i

do.end30.preheader.i:                             ; preds = %if.end23.i
  %task34.peel.i = getelementptr inbounds %struct.worker, ptr %worker.069.i, i32 0, i32 6
  %38 = ptrtoint ptr %task34.peel.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %task34.peel.i, align 4
  %pid.i68.peel.i = getelementptr inbounds %struct.task_struct, ptr %39, i32 0, i32 68
  %40 = ptrtoint ptr %pid.i68.peel.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %pid.i68.peel.i, align 8
  %call36.peel.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.153, ptr noundef nonnull @.str.155, i32 noundef %41) #26
  %42 = ptrtoint ptr %worker.069.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %worker.0.peel.i = load ptr, ptr %worker.069.i, align 4
  %cmp26.not.peel.i = icmp eq ptr %worker.0.peel.i, %idle_list.i
  br i1 %cmp26.not.peel.i, label %do.end30.preheader.i.do.end43.i_crit_edge, label %do.end30.preheader.i.do.end30.i_crit_edge

do.end30.preheader.i.do.end30.i_crit_edge:        ; preds = %do.end30.preheader.i
  br label %do.end30.i

do.end30.preheader.i.do.end43.i_crit_edge:        ; preds = %do.end30.preheader.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end43.i

do.end30.i:                                       ; preds = %do.end30.i.do.end30.i_crit_edge, %do.end30.preheader.i.do.end30.i_crit_edge
  %worker.072.i = phi ptr [ %worker.0.i, %do.end30.i.do.end30.i_crit_edge ], [ %worker.0.peel.i, %do.end30.preheader.i.do.end30.i_crit_edge ]
  %task34.i = getelementptr inbounds %struct.worker, ptr %worker.072.i, i32 0, i32 6
  %43 = ptrtoint ptr %task34.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %task34.i, align 4
  %pid.i68.i = getelementptr inbounds %struct.task_struct, ptr %44, i32 0, i32 68
  %45 = ptrtoint ptr %pid.i68.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %pid.i68.i, align 8
  %call36.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.153, ptr noundef nonnull @.str.109, i32 noundef %46) #26
  %47 = ptrtoint ptr %worker.072.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %worker.0.i = load ptr, ptr %worker.072.i, align 4
  %cmp26.not.i = icmp eq ptr %worker.0.i, %idle_list.i
  br i1 %cmp26.not.i, label %do.end30.i.do.end43.i_crit_edge, label %do.end30.i.do.end30.i_crit_edge, !llvm.loop !714

do.end30.i.do.end30.i_crit_edge:                  ; preds = %do.end30.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end30.i

do.end30.i.do.end43.i_crit_edge:                  ; preds = %do.end30.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end43.i

do.end43.i:                                       ; preds = %do.end30.i.do.end43.i_crit_edge, %do.end30.preheader.i.do.end43.i_crit_edge, %if.end23.i.do.end43.i_crit_edge
  %call45.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.23) #26
  call void @__printk_safe_exit() #21
  br label %show_one_worker_pool.exit

show_one_worker_pool.exit:                        ; preds = %do.end43.i, %if.else.show_one_worker_pool.exit_crit_edge
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull %call2369, i32 noundef %call.i53) #21
  call void @touch_softlockup_watchdog() #21
  %48 = ptrtoint ptr %pi to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %pi, align 4
  %add = add i32 %49, 1
  store i32 %add, ptr %pi, align 4
  %call23 = call ptr @idr_get_next(ptr noundef nonnull @worker_pool_idr, ptr noundef nonnull %pi) #21
  %cmp24.not = icmp eq ptr %call23, null
  br i1 %cmp24.not, label %show_one_worker_pool.exit.for.end46_crit_edge, label %show_one_worker_pool.exit.do.body26_crit_edge

show_one_worker_pool.exit.do.body26_crit_edge:    ; preds = %show_one_worker_pool.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body26

show_one_worker_pool.exit.for.end46_crit_edge:    ; preds = %show_one_worker_pool.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end46

for.end46:                                        ; preds = %show_one_worker_pool.exit.for.end46_crit_edge, %for.cond22.preheader.for.end46_crit_edge
  %call.i55 = call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i55, label %for.end46.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i58

for.end46.rcu_read_unlock.exit_crit_edge:         ; preds = %for.end46
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

land.lhs.true.i58:                                ; preds = %for.end46
  %call1.i56 = call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i56)
  %tobool.not.i57 = icmp eq i32 %call1.i56, 0
  br i1 %tobool.not.i57, label %land.lhs.true.i58.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i60

land.lhs.true.i58.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i58
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

land.lhs.true2.i60:                               ; preds = %land.lhs.true.i58
  %.b4.i59 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i59, label %land.lhs.true2.i60.rcu_read_unlock.exit_crit_edge, label %if.then.i61

land.lhs.true2.i60.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i60
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

if.then.i61:                                      ; preds = %land.lhs.true2.i60
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 724, ptr noundef nonnull @.str.102) #21
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i61, %land.lhs.true2.i60.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i58.rcu_read_unlock.exit_crit_edge, %for.end46.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !699
  %50 = call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i.i62 = and i32 %50, -16384
  %51 = inttoptr i32 %and.i.i.i.i.i62 to ptr
  %preempt_count.i.i.i.i63 = getelementptr inbounds %struct.thread_info, ptr %51, i32 0, i32 1
  %52 = ptrtoint ptr %preempt_count.i.i.i.i63 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %preempt_count.i.i.i.i63, align 4
  %sub.i.i.i = add i32 %53, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i63, align 4
  call void @rcu_read_unlock_strict() #21
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pi) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @idr_get_next(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @wq_worker_comm(ptr noundef %buf, i32 noundef %size, ptr noundef %task) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %comm = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 101
  %call = tail call i32 @strscpy(ptr noundef %buf, ptr noundef %comm, i32 noundef %size) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_attach_mutex, i32 noundef 0) #21
  %flags = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 3
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %and = and i32 %1, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end.if.end23_crit_edge, label %if.then1

if.end.if.end23_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end23

if.then1:                                         ; preds = %if.end
  %call2 = tail call ptr @kthread_data(ptr noundef %task) #21
  %pool3 = getelementptr inbounds %struct.worker, ptr %call2, i32 0, i32 7
  %2 = ptrtoint ptr %pool3 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool3, align 4
  %tobool4.not = icmp eq ptr %3, null
  br i1 %tobool4.not, label %if.then1.if.end23_crit_edge, label %if.then5

if.then1.if.end23_crit_edge:                      ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end23

if.then5:                                         ; preds = %if.then1
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull %3) #21
  %desc = getelementptr inbounds %struct.worker, ptr %call2, i32 0, i32 13
  %4 = ptrtoint ptr %desc to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %desc, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %cmp6.not = icmp eq i8 %5, 0
  br i1 %cmp6.not, label %if.then5.if.end20_crit_edge, label %if.then8

if.then5.if.end20_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end20

if.then8:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #23
  %current_work = getelementptr inbounds %struct.worker, ptr %call2, i32 0, i32 1
  %6 = ptrtoint ptr %current_work to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %current_work, align 4
  %tobool9.not = icmp eq ptr %7, null
  %add.ptr14 = getelementptr i8, ptr %buf, i32 %call
  %sub15 = sub i32 %size, %call
  %.str.33..str.32 = select i1 %tobool9.not, ptr @.str.33, ptr @.str.32
  %call13 = tail call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr14, i32 noundef %sub15, ptr noundef nonnull %.str.33..str.32, ptr noundef %desc) #21
  br label %if.end20

if.end20:                                         ; preds = %if.then8, %if.then5.if.end20_crit_edge
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull %3) #21
  br label %if.end23

if.end23:                                         ; preds = %if.end20, %if.then1.if.end23_crit_edge, %if.end.if.end23_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_attach_mutex) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @strscpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @scnprintf(ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @workqueue_prepare_cpu(i32 noundef %cpu) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr @cpu_worker_pools to i32)
  %2 = inttoptr i32 %add to ptr
  %arrayidx1221 = getelementptr [2 x %struct.worker_pool], ptr %2, i32 0, i32 2
  %cmp22 = icmp ugt ptr %arrayidx1221, %2
  br i1 %cmp22, label %entry.for.body_crit_edge, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %pool.023 = phi ptr [ %incdec.ptr, %for.inc.for.body_crit_edge ], [ %2, %entry.for.body_crit_edge ]
  %nr_workers = getelementptr inbounds %struct.worker_pool, ptr %pool.023, i32 0, i32 8
  %3 = ptrtoint ptr %nr_workers to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %nr_workers, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %if.end, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.end:                                           ; preds = %for.body
  %call = tail call fastcc ptr @create_worker(ptr noundef %pool.023)
  %tobool13.not = icmp eq ptr %call, null
  br i1 %tobool13.not, label %if.end.cleanup_crit_edge, label %if.end.for.inc_crit_edge

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.inc:                                          ; preds = %if.end.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %incdec.ptr = getelementptr %struct.worker_pool, ptr %pool.023, i32 1
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx, align 4
  %add11 = add i32 %6, ptrtoint (ptr @cpu_worker_pools to i32)
  %7 = inttoptr i32 %add11 to ptr
  %arrayidx12 = getelementptr [2 x %struct.worker_pool], ptr %7, i32 0, i32 2
  %cmp = icmp ult ptr %incdec.ptr, %arrayidx12
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.cleanup_crit_edge

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @create_worker(ptr noundef %pool) unnamed_addr #0 align 64 {
entry:
  %id_buf = alloca [16 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %id_buf) #21
  %worker_ida = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 17
  %0 = call ptr @memset(ptr %id_buf, i32 255, i32 16)
  %call.i = tail call i32 @ida_alloc_range(ptr noundef %worker_ida, i32 noundef 0, i32 noundef -1, i32 noundef 3264) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %node = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %1 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call.i.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %1, i32 noundef 3520, i32 noundef 96) #29
  %tobool.not.i = icmp eq ptr %call.i.i.i.i, null
  br i1 %tobool.not.i, label %if.end.fail_crit_edge, label %if.end3

if.end.fail_crit_edge:                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %fail

if.end3:                                          ; preds = %if.end
  %2 = ptrtoint ptr %call.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %call.i.i.i.i, ptr %call.i.i.i.i, align 8
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %call.i.i.i.i, i32 0, i32 1
  %3 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %call.i.i.i.i, ptr %prev.i.i, align 4
  %scheduled.i = getelementptr inbounds %struct.worker, ptr %call.i.i.i.i, i32 0, i32 5
  %4 = ptrtoint ptr %scheduled.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %scheduled.i, ptr %scheduled.i, align 8
  %prev.i1.i = getelementptr inbounds %struct.worker, ptr %call.i.i.i.i, i32 0, i32 5, i32 1
  %5 = ptrtoint ptr %prev.i1.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %scheduled.i, ptr %prev.i1.i, align 4
  %node1.i = getelementptr inbounds %struct.worker, ptr %call.i.i.i.i, i32 0, i32 8
  %6 = ptrtoint ptr %node1.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %node1.i, ptr %node1.i, align 8
  %prev.i2.i = getelementptr inbounds %struct.worker, ptr %call.i.i.i.i, i32 0, i32 8, i32 1
  %7 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %node1.i, ptr %prev.i2.i, align 4
  %flags.i = getelementptr inbounds %struct.worker, ptr %call.i.i.i.i, i32 0, i32 10
  %8 = ptrtoint ptr %flags.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 8, ptr %flags.i, align 4
  %id4 = getelementptr inbounds %struct.worker, ptr %call.i.i.i.i, i32 0, i32 11
  %9 = ptrtoint ptr %id4 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %call.i, ptr %id4, align 8
  %cpu = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 1
  %10 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %11)
  %cmp5 = icmp sgt i32 %11, -1
  br i1 %cmp5, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  %attrs = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 18
  %12 = ptrtoint ptr %attrs to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %attrs, align 4
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp8 = icmp slt i32 %15, 0
  %cond = select i1 %cmp8, ptr @.str.161, ptr @.str.109
  %call9 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %id_buf, i32 noundef 16, ptr noundef nonnull @.str.160, i32 noundef %11, i32 noundef %call.i, ptr noundef nonnull %cond)
  br label %if.end13

if.else:                                          ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  %id11 = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 3
  %16 = ptrtoint ptr %id11 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %id11, align 4
  %call12 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %id_buf, i32 noundef 16, ptr noundef nonnull @.str.162, i32 noundef %17, i32 noundef %call.i)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then6
  %18 = ptrtoint ptr %node to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %node, align 4
  %call16 = call ptr (ptr, ptr, i32, ptr, ...) @kthread_create_on_node(ptr noundef nonnull @worker_thread, ptr noundef nonnull %call.i.i.i.i, i32 noundef %19, ptr noundef nonnull @.str.163, ptr noundef nonnull %id_buf) #21
  %task = getelementptr inbounds %struct.worker, ptr %call.i.i.i.i, i32 0, i32 6
  %20 = ptrtoint ptr %task to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %call16, ptr %task, align 8
  %cmp.i = icmp ugt ptr %call16, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end13.fail_crit_edge, label %if.end20

if.end13.fail_crit_edge:                          ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #23
  br label %fail

if.end20:                                         ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #23
  %attrs22 = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 18
  %21 = ptrtoint ptr %attrs22 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %attrs22, align 4
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %22, align 4
  call void @set_user_nice(ptr noundef %call16, i32 noundef %24) #21
  %25 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %task, align 8
  %27 = ptrtoint ptr %attrs22 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %attrs22, align 4
  %cpumask = getelementptr inbounds %struct.workqueue_attrs, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %cpumask to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %cpumask, align 4
  call void @kthread_bind_mask(ptr noundef %26, ptr noundef %30) #21
  call fastcc void @worker_attach_to_pool(ptr noundef nonnull %call.i.i.i.i, ptr noundef %pool)
  call void @_raw_spin_lock_irq(ptr noundef %pool) #21
  %pool26 = getelementptr inbounds %struct.worker, ptr %call.i.i.i.i, i32 0, i32 7
  %31 = ptrtoint ptr %pool26 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %pool26, align 4
  %nr_workers = getelementptr inbounds %struct.worker_pool, ptr %32, i32 0, i32 8
  %33 = ptrtoint ptr %nr_workers to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %nr_workers, align 4
  %inc = add i32 %34, 1
  store i32 %inc, ptr %nr_workers, align 4
  call fastcc void @worker_enter_idle(ptr noundef nonnull %call.i.i.i.i)
  %35 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %task, align 8
  %call28 = call i32 @wake_up_process(ptr noundef %36) #21
  call void @_raw_spin_unlock_irq(ptr noundef %pool) #21
  br label %cleanup

fail:                                             ; preds = %if.end13.fail_crit_edge, %if.end.fail_crit_edge
  call void @ida_free(ptr noundef %worker_ida, i32 noundef %call.i) #21
  call void @kfree(ptr noundef %call.i.i.i.i) #21
  br label %cleanup

cleanup:                                          ; preds = %fail, %if.end20, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %fail ], [ %call.i.i.i.i, %if.end20 ], [ null, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %id_buf) #21
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @workqueue_online_cpu(i32 noundef %cpu) local_unnamed_addr #0 align 64 {
entry:
  %pi = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pi) #21
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_mutex, i32 noundef 0) #21
  %0 = ptrtoint ptr %pi to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %pi, align 4
  %call56 = call ptr @idr_get_next(ptr noundef nonnull @worker_pool_idr, ptr noundef nonnull %pi) #21
  %cmp.not57 = icmp eq ptr %call56, null
  br i1 %cmp.not57, label %entry.for.cond22.preheader_crit_edge, label %do.body.lr.ph

entry.for.cond22.preheader_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond22.preheader

do.body.lr.ph:                                    ; preds = %entry
  %div3.i.i.i = lshr i32 %cpu, 5
  %and.i.i.i = and i32 %cpu, 31
  %1 = shl nuw i32 1, %and.i.i.i
  br label %do.body

for.cond22.preheader:                             ; preds = %if.end19.for.cond22.preheader_crit_edge, %entry.for.cond22.preheader_crit_edge
  %.pn59 = load ptr, ptr @workqueues, align 4
  %cmp23.not60 = icmp eq ptr %.pn59, @workqueues
  br i1 %cmp23.not60, label %for.cond22.preheader.for.end30_crit_edge, label %for.cond22.preheader.for.body24_crit_edge

for.cond22.preheader.for.body24_crit_edge:        ; preds = %for.cond22.preheader
  br label %for.body24

for.cond22.preheader.for.end30_crit_edge:         ; preds = %for.cond22.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end30

do.body:                                          ; preds = %if.end19.do.body_crit_edge, %do.body.lr.ph
  %call58 = phi ptr [ %call56, %do.body.lr.ph ], [ %call, %if.end19.do.body_crit_edge ]
  %call1 = call i32 @rcu_read_lock_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.lhs.true, label %do.body.if.else_crit_edge

do.body.if.else_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

land.lhs.true:                                    ; preds = %do.body
  %call.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool3.not = icmp eq i32 %call.i, 0
  br i1 %tobool3.not, label %land.lhs.true4, label %land.lhs.true.if.else_crit_edge

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

land.lhs.true4:                                   ; preds = %land.lhs.true
  %call5 = call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %land.lhs.true4.if.else_crit_edge, label %land.lhs.true7

land.lhs.true4.if.else_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

land.lhs.true7:                                   ; preds = %land.lhs.true4
  %.b38 = load i1, ptr @workqueue_online_cpu.__warned, align 1
  br i1 %.b38, label %land.lhs.true7.if.else_crit_edge, label %if.then

land.lhs.true7.if.else_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

if.then:                                          ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @workqueue_online_cpu.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 5134, ptr noundef nonnull @.str.31) #21
  br label %if.else

if.else:                                          ; preds = %if.then, %land.lhs.true7.if.else_crit_edge, %land.lhs.true4.if.else_crit_edge, %land.lhs.true.if.else_crit_edge, %do.body.if.else_crit_edge
  call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_attach_mutex, i32 noundef 0) #21
  %cpu11 = getelementptr inbounds %struct.worker_pool, ptr %call58, i32 0, i32 1
  %2 = ptrtoint ptr %cpu11 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu11, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %cpu)
  %cmp12 = icmp eq i32 %3, %cpu
  br i1 %cmp12, label %if.then13, label %if.else14

if.then13:                                        ; preds = %if.else
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %4 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.then13.if.end.i_crit_edge, label %land.rhs.i

if.then13.if.end.i_crit_edge:                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %if.then13
  %call.i.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_attach_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !680

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5039, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %if.then13.if.end.i_crit_edge
  %workers.i = getelementptr inbounds %struct.worker_pool, ptr %call58, i32 0, i32 15
  %5 = ptrtoint ptr %workers.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn297.i = load ptr, ptr %workers.i, align 4
  %cmp26.not298.i = icmp eq ptr %.pn297.i, %workers.i
  br i1 %cmp26.not298.i, label %if.end.i.for.end.i_crit_edge, label %do.body29.lr.ph.i

if.end.i.for.end.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

do.body29.lr.ph.i:                                ; preds = %if.end.i
  %attrs.i = getelementptr inbounds %struct.worker_pool, ptr %call58, i32 0, i32 18
  br label %do.body29.i

do.body29.i:                                      ; preds = %for.inc.i.do.body29.i_crit_edge, %do.body29.lr.ph.i
  %.pn299.i = phi ptr [ %.pn297.i, %do.body29.lr.ph.i ], [ %.pn.i, %for.inc.i.do.body29.i_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %6 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool31.not.i = icmp eq i32 %6, 0
  br i1 %tobool31.not.i, label %do.body29.i.if.else.i_crit_edge, label %land.rhs32.i

do.body29.i.if.else.i_crit_edge:                  ; preds = %do.body29.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else.i

land.rhs32.i:                                     ; preds = %do.body29.i
  %call.i295.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_attach_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i295.i)
  %cmp34.not.i = icmp eq i32 %call.i295.i, 0
  br i1 %cmp34.not.i, label %do.end53.i, label %land.rhs32.i.if.else.i_crit_edge, !prof !680

land.rhs32.i.if.else.i_crit_edge:                 ; preds = %land.rhs32.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else.i

do.end53.i:                                       ; preds = %land.rhs32.i
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5048, i32 noundef 9, ptr noundef null) #21
  br label %if.else.i

if.else.i:                                        ; preds = %do.end53.i, %land.rhs32.i.if.else.i_crit_edge, %do.body29.i.if.else.i_crit_edge
  %task.i = getelementptr i8, ptr %.pn299.i, i32 -8
  %7 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task.i, align 4
  %9 = ptrtoint ptr %cpu11 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu11, align 4
  call void @kthread_set_per_cpu(ptr noundef %8, i32 noundef %10) #21
  %11 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %task.i, align 4
  %13 = ptrtoint ptr %attrs.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %attrs.i, align 4
  %cpumask.i = getelementptr inbounds %struct.workqueue_attrs, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %cpumask.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cpumask.i, align 4
  %call73.i = call i32 @set_cpus_allowed_ptr(ptr noundef %12, ptr noundef %16) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call73.i)
  %cmp74.i = icmp slt i32 %call73.i, 0
  br i1 %cmp74.i, label %land.rhs80.i, label %if.else.i.for.inc.i_crit_edge

if.else.i.for.inc.i_crit_edge:                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

land.rhs80.i:                                     ; preds = %if.else.i
  %.b294.i = load i1, ptr @rebind_workers.__already_done, align 1
  br i1 %.b294.i, label %land.rhs80.i.for.inc.i_crit_edge, label %if.then91.i, !prof !679

land.rhs80.i.for.inc.i_crit_edge:                 ; preds = %land.rhs80.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.then91.i:                                      ; preds = %land.rhs80.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rebind_workers.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5051, i32 noundef 9, ptr noundef null) #21
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then91.i, %land.rhs80.i.for.inc.i_crit_edge, %if.else.i.for.inc.i_crit_edge
  %17 = ptrtoint ptr %.pn299.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %.pn.i = load ptr, ptr %.pn299.i, align 4
  %cmp26.not.i = icmp eq ptr %.pn.i, %workers.i
  br i1 %cmp26.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.do.body29.i_crit_edge

for.inc.i.do.body29.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body29.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end.i.for.end.i_crit_edge
  call void @_raw_spin_lock_irq(ptr noundef nonnull %call58) #21
  %flags.i = getelementptr inbounds %struct.worker_pool, ptr %call58, i32 0, i32 4
  %18 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %19, -5
  store i32 %and.i, ptr %flags.i, align 4
  %20 = ptrtoint ptr %workers.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %.pn292300.i = load ptr, ptr %workers.i, align 4
  %cmp140.not301.i = icmp eq ptr %.pn292300.i, %workers.i
  br i1 %cmp140.not301.i, label %for.end.i.rebind_workers.exit_crit_edge, label %for.end.i.do.body144.i_crit_edge

for.end.i.do.body144.i_crit_edge:                 ; preds = %for.end.i
  br label %do.body144.i

for.end.i.rebind_workers.exit_crit_edge:          ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %rebind_workers.exit

do.body144.i:                                     ; preds = %if.end238.i.do.body144.i_crit_edge, %for.end.i.do.body144.i_crit_edge
  %.pn292302.i = phi ptr [ %.pn292.i, %if.end238.i.do.body144.i_crit_edge ], [ %.pn292300.i, %for.end.i.do.body144.i_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %21 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool146.not.i = icmp eq i32 %21, 0
  br i1 %tobool146.not.i, label %do.body144.i.if.else187.i_crit_edge, label %land.rhs147.i

do.body144.i.if.else187.i_crit_edge:              ; preds = %do.body144.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else187.i

land.rhs147.i:                                    ; preds = %do.body144.i
  %call.i296.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_attach_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i296.i)
  %cmp149.not.i = icmp eq i32 %call.i296.i, 0
  br i1 %cmp149.not.i, label %do.end168.i, label %land.rhs147.i.if.else187.i_crit_edge, !prof !680

land.rhs147.i.if.else187.i_crit_edge:             ; preds = %land.rhs147.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else187.i

do.end168.i:                                      ; preds = %land.rhs147.i
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5058, i32 noundef 9, ptr noundef null) #21
  br label %if.else187.i

if.else187.i:                                     ; preds = %do.end168.i, %land.rhs147.i.if.else187.i_crit_edge, %do.body144.i.if.else187.i_crit_edge
  %flags188.i = getelementptr i8, ptr %.pn292302.i, i32 12
  %22 = ptrtoint ptr %flags188.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %flags188.i, align 4
  %and190.i = and i32 %23, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and190.i)
  %tobool191.not.i = icmp eq i32 %and190.i, 0
  br i1 %tobool191.not.i, label %land.rhs200.i, label %if.else187.i.if.end238.i_crit_edge

if.else187.i.if.end238.i_crit_edge:               ; preds = %if.else187.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end238.i

land.rhs200.i:                                    ; preds = %if.else187.i
  %.b291293.i = load i1, ptr @rebind_workers.__already_done.169, align 1
  br i1 %.b291293.i, label %land.rhs200.i.if.end238.i_crit_edge, label %if.then211.i, !prof !679

land.rhs200.i.if.end238.i_crit_edge:              ; preds = %land.rhs200.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end238.i

if.then211.i:                                     ; preds = %land.rhs200.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rebind_workers.__already_done.169, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5076, i32 noundef 9, ptr noundef null) #21
  br label %if.end238.i

if.end238.i:                                      ; preds = %if.then211.i, %land.rhs200.i.if.end238.i_crit_edge, %if.else187.i.if.end238.i_crit_edge
  %or.i = and i32 %23, -385
  %and246.i = or i32 %or.i, 256
  %24 = ptrtoint ptr %flags188.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile i32 %and246.i, ptr %flags188.i, align 4
  %25 = ptrtoint ptr %.pn292302.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %.pn292.i = load ptr, ptr %.pn292302.i, align 4
  %cmp140.not.i = icmp eq ptr %.pn292.i, %workers.i
  br i1 %cmp140.not.i, label %if.end238.i.rebind_workers.exit_crit_edge, label %if.end238.i.do.body144.i_crit_edge

if.end238.i.do.body144.i_crit_edge:               ; preds = %if.end238.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body144.i

if.end238.i.rebind_workers.exit_crit_edge:        ; preds = %if.end238.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %rebind_workers.exit

rebind_workers.exit:                              ; preds = %if.end238.i.rebind_workers.exit_crit_edge, %for.end.i.rebind_workers.exit_crit_edge
  call void @_raw_spin_unlock_irq(ptr noundef nonnull %call58) #21
  br label %if.end19

if.else14:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp16 = icmp slt i32 %3, 0
  br i1 %cmp16, label %if.then17, label %if.else14.if.end19_crit_edge

if.else14.if.end19_crit_edge:                     ; preds = %if.else14
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end19

if.then17:                                        ; preds = %if.else14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %26 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.not.i39 = icmp eq i32 %26, 0
  br i1 %tobool.not.i39, label %if.then17.if.end.i46_crit_edge, label %land.rhs.i42

if.then17.if.end.i46_crit_edge:                   ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i46

land.rhs.i42:                                     ; preds = %if.then17
  %call.i.i40 = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_attach_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i40)
  %cmp.not.i41 = icmp eq i32 %call.i.i40, 0
  br i1 %cmp.not.i41, label %do.end.i43, label %land.rhs.i42.if.end.i46_crit_edge, !prof !680

land.rhs.i42.if.end.i46_crit_edge:                ; preds = %land.rhs.i42
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i46

do.end.i43:                                       ; preds = %land.rhs.i42
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5100, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i46

if.end.i46:                                       ; preds = %do.end.i43, %land.rhs.i42.if.end.i46_crit_edge, %if.then17.if.end.i46_crit_edge
  %attrs.i44 = getelementptr inbounds %struct.worker_pool, ptr %call58, i32 0, i32 18
  %27 = ptrtoint ptr %attrs.i44 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %attrs.i44, align 4
  %cpumask.i45 = getelementptr inbounds %struct.workqueue_attrs, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %cpumask.i45 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %cpumask.i45, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %31 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %31, i32 %cpu)
  %cmp.not.i.i.i.i = icmp ugt i32 %31, %cpu
  br i1 %cmp.not.i.i.i.i, label %if.end.i46.cpumask_test_cpu.exit.i_crit_edge, label %land.rhs.i.i.i.i

if.end.i46.cpumask_test_cpu.exit.i_crit_edge:     ; preds = %if.end.i46
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpumask_test_cpu.exit.i

land.rhs.i.i.i.i:                                 ; preds = %if.end.i46
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpumask_test_cpu.exit.i_crit_edge, label %if.then.i.i.i.i, !prof !679

land.rhs.i.i.i.i.cpumask_test_cpu.exit.i_crit_edge: ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpumask_test_cpu.exit.i

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.66, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpumask_test_cpu.exit.i

cpumask_test_cpu.exit.i:                          ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpumask_test_cpu.exit.i_crit_edge, %if.end.i46.cpumask_test_cpu.exit.i_crit_edge
  %arrayidx.i.i.i = getelementptr i32, ptr %30, i32 %div3.i.i.i
  %32 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %34 = and i32 %33, %1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool25.not.i = icmp eq i32 %34, 0
  br i1 %tobool25.not.i, label %cpumask_test_cpu.exit.i.if.end19_crit_edge, label %if.end.i.i.i

cpumask_test_cpu.exit.i.if.end19_crit_edge:       ; preds = %cpumask_test_cpu.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end19

if.end.i.i.i:                                     ; preds = %cpumask_test_cpu.exit.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %35 = load i32, ptr @nr_cpu_ids, align 4
  %36 = ptrtoint ptr %attrs.i44 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %attrs.i44, align 4
  %cpumask29.i = getelementptr inbounds %struct.workqueue_attrs, ptr %37, i32 0, i32 1
  %38 = ptrtoint ptr %cpumask29.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %cpumask29.i, align 4
  %call.i.i.i = call i32 @__bitmap_and(ptr noundef nonnull @restore_unbound_workers_cpumask.cpumask, ptr noundef %39, ptr noundef nonnull @__cpu_online_mask, i32 noundef %35) #21
  %workers.i47 = getelementptr inbounds %struct.worker_pool, ptr %call58, i32 0, i32 15
  %40 = ptrtoint ptr %workers.i47 to i32
  call void @__asan_load4_noabort(i32 %40)
  %.pn151.i = load ptr, ptr %workers.i47, align 4
  %cmp33.not152.i = icmp eq ptr %.pn151.i, %workers.i47
  br i1 %cmp33.not152.i, label %if.end.i.i.i.if.end19_crit_edge, label %if.end.i.i.i.do.body36.i_crit_edge

if.end.i.i.i.do.body36.i_crit_edge:               ; preds = %if.end.i.i.i
  br label %do.body36.i

if.end.i.i.i.if.end19_crit_edge:                  ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end19

do.body36.i:                                      ; preds = %for.inc.i51.do.body36.i_crit_edge, %if.end.i.i.i.do.body36.i_crit_edge
  %.pn153.i = phi ptr [ %.pn.i50, %for.inc.i51.do.body36.i_crit_edge ], [ %.pn151.i, %if.end.i.i.i.do.body36.i_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %41 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool38.not.i = icmp eq i32 %41, 0
  br i1 %tobool38.not.i, label %do.body36.i.if.else.i49_crit_edge, label %land.rhs39.i

do.body36.i.if.else.i49_crit_edge:                ; preds = %do.body36.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else.i49

land.rhs39.i:                                     ; preds = %do.body36.i
  %call.i150.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_attach_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i150.i)
  %cmp41.not.i = icmp eq i32 %call.i150.i, 0
  br i1 %cmp41.not.i, label %do.end60.i, label %land.rhs39.i.if.else.i49_crit_edge, !prof !680

land.rhs39.i.if.else.i49_crit_edge:               ; preds = %land.rhs39.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else.i49

do.end60.i:                                       ; preds = %land.rhs39.i
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5109, i32 noundef 9, ptr noundef null) #21
  br label %if.else.i49

if.else.i49:                                      ; preds = %do.end60.i, %land.rhs39.i.if.else.i49_crit_edge, %do.body36.i.if.else.i49_crit_edge
  %task.i48 = getelementptr i8, ptr %.pn153.i, i32 -8
  %42 = ptrtoint ptr %task.i48 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %task.i48, align 4
  %call79.i = call i32 @set_cpus_allowed_ptr(ptr noundef %43, ptr noundef nonnull @restore_unbound_workers_cpumask.cpumask) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call79.i)
  %cmp80.i = icmp slt i32 %call79.i, 0
  br i1 %cmp80.i, label %land.rhs86.i, label %if.else.i49.for.inc.i51_crit_edge

if.else.i49.for.inc.i51_crit_edge:                ; preds = %if.else.i49
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i51

land.rhs86.i:                                     ; preds = %if.else.i49
  %.b147.i = load i1, ptr @restore_unbound_workers_cpumask.__already_done, align 1
  br i1 %.b147.i, label %land.rhs86.i.for.inc.i51_crit_edge, label %if.then97.i, !prof !679

land.rhs86.i.for.inc.i51_crit_edge:               ; preds = %land.rhs86.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i51

if.then97.i:                                      ; preds = %land.rhs86.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @restore_unbound_workers_cpumask.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5110, i32 noundef 9, ptr noundef null) #21
  br label %for.inc.i51

for.inc.i51:                                      ; preds = %if.then97.i, %land.rhs86.i.for.inc.i51_crit_edge, %if.else.i49.for.inc.i51_crit_edge
  %44 = ptrtoint ptr %.pn153.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %.pn.i50 = load ptr, ptr %.pn153.i, align 4
  %cmp33.not.i = icmp eq ptr %.pn.i50, %workers.i47
  br i1 %cmp33.not.i, label %for.inc.i51.if.end19_crit_edge, label %for.inc.i51.do.body36.i_crit_edge

for.inc.i51.do.body36.i_crit_edge:                ; preds = %for.inc.i51
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body36.i

for.inc.i51.if.end19_crit_edge:                   ; preds = %for.inc.i51
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end19

if.end19:                                         ; preds = %for.inc.i51.if.end19_crit_edge, %if.end.i.i.i.if.end19_crit_edge, %cpumask_test_cpu.exit.i.if.end19_crit_edge, %if.else14.if.end19_crit_edge, %rebind_workers.exit
  call void @mutex_unlock(ptr noundef nonnull @wq_pool_attach_mutex) #21
  %45 = ptrtoint ptr %pi to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %pi, align 4
  %add = add i32 %46, 1
  store i32 %add, ptr %pi, align 4
  %call = call ptr @idr_get_next(ptr noundef nonnull @worker_pool_idr, ptr noundef nonnull %pi) #21
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %if.end19.for.cond22.preheader_crit_edge, label %if.end19.do.body_crit_edge

if.end19.do.body_crit_edge:                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body

if.end19.for.cond22.preheader_crit_edge:          ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond22.preheader

for.body24:                                       ; preds = %wq_update_unbound_numa.exit.for.body24_crit_edge, %for.cond22.preheader.for.body24_crit_edge
  %.pn61 = phi ptr [ %.pn, %wq_update_unbound_numa.exit.for.body24_crit_edge ], [ %.pn59, %for.cond22.preheader.for.body24_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %47 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool1.not.i = icmp eq i32 %47, 0
  br i1 %tobool1.not.i, label %for.body24.wq_update_unbound_numa.exit_crit_edge, label %land.rhs.i54

for.body24.wq_update_unbound_numa.exit_crit_edge: ; preds = %for.body24
  call void @__sanitizer_cov_trace_pc() #23
  br label %wq_update_unbound_numa.exit

land.rhs.i54:                                     ; preds = %for.body24
  %call.i.i52 = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i52)
  %cmp.not.i53 = icmp eq i32 %call.i.i52, 0
  br i1 %cmp.not.i53, label %do.end.i55, label %land.rhs.i54.wq_update_unbound_numa.exit_crit_edge, !prof !680

land.rhs.i54.wq_update_unbound_numa.exit_crit_edge: ; preds = %land.rhs.i54
  call void @__sanitizer_cov_trace_pc() #23
  br label %wq_update_unbound_numa.exit

do.end.i55:                                       ; preds = %land.rhs.i54
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4160, i32 noundef 9, ptr noundef null) #21
  br label %wq_update_unbound_numa.exit

wq_update_unbound_numa.exit:                      ; preds = %do.end.i55, %land.rhs.i54.wq_update_unbound_numa.exit_crit_edge, %for.body24.wq_update_unbound_numa.exit_crit_edge
  %48 = ptrtoint ptr %.pn61 to i32
  call void @__asan_load4_noabort(i32 %48)
  %.pn = load ptr, ptr %.pn61, align 4
  %cmp23.not = icmp eq ptr %.pn, @workqueues
  br i1 %cmp23.not, label %wq_update_unbound_numa.exit.for.end30_crit_edge, label %wq_update_unbound_numa.exit.for.body24_crit_edge

wq_update_unbound_numa.exit.for.body24_crit_edge: ; preds = %wq_update_unbound_numa.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body24

wq_update_unbound_numa.exit.for.end30_crit_edge:  ; preds = %wq_update_unbound_numa.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end30

for.end30:                                        ; preds = %wq_update_unbound_numa.exit.for.end30_crit_edge, %for.cond22.preheader.for.end30_crit_edge
  call void @mutex_unlock(ptr noundef nonnull @wq_pool_mutex) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pi) #21
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @workqueue_offline_cpu(i32 noundef %cpu) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu1 = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu1, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %cpu)
  %cmp.not = icmp eq i32 %3, %cpu
  br i1 %cmp.not, label %if.end22, label %do.end, !prof !679

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5158, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end22:                                         ; preds = %entry
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %4 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %5, ptrtoint (ptr @cpu_worker_pools to i32)
  %6 = inttoptr i32 %add.i to ptr
  %arrayidx12210.i = getelementptr [2 x %struct.worker_pool], ptr %6, i32 0, i32 2
  %cmp211.i = icmp ugt ptr %arrayidx12210.i, %6
  br i1 %cmp211.i, label %if.end22.for.body.i_crit_edge, label %if.end22.unbind_workers.exit_crit_edge

if.end22.unbind_workers.exit_crit_edge:           ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #23
  br label %unbind_workers.exit

if.end22.for.body.i_crit_edge:                    ; preds = %if.end22
  br label %for.body.i

for.body.i:                                       ; preds = %for.end176.i.for.body.i_crit_edge, %if.end22.for.body.i_crit_edge
  %pool.0212.i = phi ptr [ %incdec.ptr.i, %for.end176.i.for.body.i_crit_edge ], [ %6, %if.end22.for.body.i_crit_edge ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_attach_mutex, i32 noundef 0) #21
  tail call void @_raw_spin_lock_irq(ptr noundef %pool.0212.i) #21
  %workers.i = getelementptr inbounds %struct.worker_pool, ptr %pool.0212.i, i32 0, i32 15
  %7 = ptrtoint ptr %workers.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pn203.i = load ptr, ptr %workers.i, align 4
  %cmp16.not204.i = icmp eq ptr %.pn203.i, %workers.i
  br i1 %cmp16.not204.i, label %for.body.i.for.end.i_crit_edge, label %for.body.i.do.body18.i_crit_edge

for.body.i.do.body18.i_crit_edge:                 ; preds = %for.body.i
  br label %do.body18.i

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

do.body18.i:                                      ; preds = %if.else.i.do.body18.i_crit_edge, %for.body.i.do.body18.i_crit_edge
  %.pn205.i = phi ptr [ %.pn.i, %if.else.i.do.body18.i_crit_edge ], [ %.pn203.i, %for.body.i.do.body18.i_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %8 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i = icmp eq i32 %8, 0
  br i1 %tobool.not.i, label %do.body18.i.if.else.i_crit_edge, label %land.rhs.i

do.body18.i.if.else.i_crit_edge:                  ; preds = %do.body18.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else.i

land.rhs.i:                                       ; preds = %do.body18.i
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_attach_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp19.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp19.not.i, label %do.end32.i, label %land.rhs.i.if.else.i_crit_edge, !prof !680

land.rhs.i.if.else.i_crit_edge:                   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else.i

do.end32.i:                                       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4996, i32 noundef 9, ptr noundef null) #21
  br label %if.else.i

if.else.i:                                        ; preds = %do.end32.i, %land.rhs.i.if.else.i_crit_edge, %do.body18.i.if.else.i_crit_edge
  %flags.i = getelementptr i8, ptr %.pn205.i, i32 12
  %9 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %flags.i, align 4
  %or.i = or i32 %10, 128
  store i32 %or.i, ptr %flags.i, align 4
  %11 = ptrtoint ptr %.pn205.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %.pn.i = load ptr, ptr %.pn205.i, align 4
  %cmp16.not.i = icmp eq ptr %.pn.i, %workers.i
  br i1 %cmp16.not.i, label %if.else.i.for.end.i_crit_edge, label %if.else.i.do.body18.i_crit_edge

if.else.i.do.body18.i_crit_edge:                  ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body18.i

if.else.i.for.end.i_crit_edge:                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.end.i:                                        ; preds = %if.else.i.for.end.i_crit_edge, %for.body.i.for.end.i_crit_edge
  %flags56.i = getelementptr inbounds %struct.worker_pool, ptr %pool.0212.i, i32 0, i32 4
  %12 = ptrtoint ptr %flags56.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %flags56.i, align 4
  %or57.i = or i32 %13, 4
  store i32 %or57.i, ptr %flags56.i, align 4
  %nr_running.i = getelementptr inbounds %struct.worker_pool, ptr %pool.0212.i, i32 0, i32 6
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_running.i, i32 noundef 4) #21
  %14 = ptrtoint ptr %nr_running.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile i32 0, ptr %nr_running.i, align 4
  %idle_list.i.i.i = getelementptr inbounds %struct.worker_pool, ptr %pool.0212.i, i32 0, i32 10
  %15 = ptrtoint ptr %idle_list.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %idle_list.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %16, %idle_list.i.i.i
  %tobool.not5.i.i = icmp eq ptr %16, null
  %tobool.not.i.i = or i1 %cmp.i.not.i.i.i, %tobool.not5.i.i
  br i1 %tobool.not.i.i, label %for.end.i.wake_up_worker.exit.i_crit_edge, label %if.then.i.i, !prof !680

for.end.i.wake_up_worker.exit.i_crit_edge:        ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %wake_up_worker.exit.i

if.then.i.i:                                      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %task.i.i = getelementptr inbounds %struct.worker, ptr %16, i32 0, i32 6
  %17 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %task.i.i, align 4
  %call3.i.i = tail call i32 @wake_up_process(ptr noundef %18) #21
  br label %wake_up_worker.exit.i

wake_up_worker.exit.i:                            ; preds = %if.then.i.i, %for.end.i.wake_up_worker.exit.i_crit_edge
  tail call void @_raw_spin_unlock_irq(ptr noundef %pool.0212.i) #21
  %19 = ptrtoint ptr %workers.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pn200206.i = load ptr, ptr %workers.i, align 4
  %cmp67.not207.i = icmp eq ptr %.pn200206.i, %workers.i
  br i1 %cmp67.not207.i, label %wake_up_worker.exit.i.for.end176.i_crit_edge, label %wake_up_worker.exit.i.do.body71.i_crit_edge

wake_up_worker.exit.i.do.body71.i_crit_edge:      ; preds = %wake_up_worker.exit.i
  br label %do.body71.i

wake_up_worker.exit.i.for.end176.i_crit_edge:     ; preds = %wake_up_worker.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end176.i

do.body71.i:                                      ; preds = %for.inc170.i.do.body71.i_crit_edge, %wake_up_worker.exit.i.do.body71.i_crit_edge
  %.pn200208.i = phi ptr [ %.pn200.i, %for.inc170.i.do.body71.i_crit_edge ], [ %.pn200206.i, %wake_up_worker.exit.i.do.body71.i_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %20 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool73.not.i = icmp eq i32 %20, 0
  br i1 %tobool73.not.i, label %do.body71.i.if.else114.i_crit_edge, label %land.rhs74.i

do.body71.i.if.else114.i_crit_edge:               ; preds = %do.body71.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else114.i

land.rhs74.i:                                     ; preds = %do.body71.i
  %call.i202.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_attach_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i202.i)
  %cmp76.not.i = icmp eq i32 %call.i202.i, 0
  br i1 %cmp76.not.i, label %do.end95.i, label %land.rhs74.i.if.else114.i_crit_edge, !prof !680

land.rhs74.i.if.else114.i_crit_edge:              ; preds = %land.rhs74.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else114.i

do.end95.i:                                       ; preds = %land.rhs74.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5020, i32 noundef 9, ptr noundef null) #21
  br label %if.else114.i

if.else114.i:                                     ; preds = %do.end95.i, %land.rhs74.i.if.else114.i_crit_edge, %do.body71.i.if.else114.i_crit_edge
  %task.i = getelementptr i8, ptr %.pn200208.i, i32 -8
  %21 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %task.i, align 4
  tail call void @kthread_set_per_cpu(ptr noundef %22, i32 noundef -1) #21
  %23 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %task.i, align 4
  %call116.i = tail call i32 @set_cpus_allowed_ptr(ptr noundef %24, ptr noundef nonnull @__cpu_possible_mask) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call116.i)
  %cmp117.i = icmp slt i32 %call116.i, 0
  br i1 %cmp117.i, label %land.rhs123.i, label %if.else114.i.for.inc170.i_crit_edge

if.else114.i.for.inc170.i_crit_edge:              ; preds = %if.else114.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc170.i

land.rhs123.i:                                    ; preds = %if.else114.i
  %.b201.i = load i1, ptr @unbind_workers.__already_done, align 1
  br i1 %.b201.i, label %land.rhs123.i.for.inc170.i_crit_edge, label %if.then134.i, !prof !679

land.rhs123.i.for.inc170.i_crit_edge:             ; preds = %land.rhs123.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc170.i

if.then134.i:                                     ; preds = %land.rhs123.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @unbind_workers.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5022, i32 noundef 9, ptr noundef null) #21
  br label %for.inc170.i

for.inc170.i:                                     ; preds = %if.then134.i, %land.rhs123.i.for.inc170.i_crit_edge, %if.else114.i.for.inc170.i_crit_edge
  %25 = ptrtoint ptr %.pn200208.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %.pn200.i = load ptr, ptr %.pn200208.i, align 4
  %cmp67.not.i = icmp eq ptr %.pn200.i, %workers.i
  br i1 %cmp67.not.i, label %for.inc170.i.for.end176.i_crit_edge, label %for.inc170.i.do.body71.i_crit_edge

for.inc170.i.do.body71.i_crit_edge:               ; preds = %for.inc170.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body71.i

for.inc170.i.for.end176.i_crit_edge:              ; preds = %for.inc170.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end176.i

for.end176.i:                                     ; preds = %for.inc170.i.for.end176.i_crit_edge, %wake_up_worker.exit.i.for.end176.i_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_attach_mutex) #21
  %incdec.ptr.i = getelementptr %struct.worker_pool, ptr %pool.0212.i, i32 1
  %26 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx.i, align 4
  %add11.i = add i32 %27, ptrtoint (ptr @cpu_worker_pools to i32)
  %28 = inttoptr i32 %add11.i to ptr
  %arrayidx12.i = getelementptr [2 x %struct.worker_pool], ptr %28, i32 0, i32 2
  %cmp.i = icmp ult ptr %incdec.ptr.i, %arrayidx12.i
  br i1 %cmp.i, label %for.end176.i.for.body.i_crit_edge, label %for.end176.i.unbind_workers.exit_crit_edge

for.end176.i.unbind_workers.exit_crit_edge:       ; preds = %for.end176.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %unbind_workers.exit

for.end176.i.for.body.i_crit_edge:                ; preds = %for.end176.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

unbind_workers.exit:                              ; preds = %for.end176.i.unbind_workers.exit_crit_edge, %if.end22.unbind_workers.exit_crit_edge
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_mutex, i32 noundef 0) #21
  %.pn38 = load ptr, ptr @workqueues, align 4
  %cmp24.not39 = icmp eq ptr %.pn38, @workqueues
  br i1 %cmp24.not39, label %unbind_workers.exit.for.end_crit_edge, label %unbind_workers.exit.for.body_crit_edge

unbind_workers.exit.for.body_crit_edge:           ; preds = %unbind_workers.exit
  br label %for.body

unbind_workers.exit.for.end_crit_edge:            ; preds = %unbind_workers.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %wq_update_unbound_numa.exit.for.body_crit_edge, %unbind_workers.exit.for.body_crit_edge
  %.pn40 = phi ptr [ %.pn, %wq_update_unbound_numa.exit.for.body_crit_edge ], [ %.pn38, %unbind_workers.exit.for.body_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %29 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool1.not.i = icmp eq i32 %29, 0
  br i1 %tobool1.not.i, label %for.body.wq_update_unbound_numa.exit_crit_edge, label %land.rhs.i37

for.body.wq_update_unbound_numa.exit_crit_edge:   ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %wq_update_unbound_numa.exit

land.rhs.i37:                                     ; preds = %for.body
  %call.i.i36 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i36)
  %cmp.not.i = icmp eq i32 %call.i.i36, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i37.wq_update_unbound_numa.exit_crit_edge, !prof !680

land.rhs.i37.wq_update_unbound_numa.exit_crit_edge: ; preds = %land.rhs.i37
  call void @__sanitizer_cov_trace_pc() #23
  br label %wq_update_unbound_numa.exit

do.end.i:                                         ; preds = %land.rhs.i37
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4160, i32 noundef 9, ptr noundef null) #21
  br label %wq_update_unbound_numa.exit

wq_update_unbound_numa.exit:                      ; preds = %do.end.i, %land.rhs.i37.wq_update_unbound_numa.exit_crit_edge, %for.body.wq_update_unbound_numa.exit_crit_edge
  %30 = ptrtoint ptr %.pn40 to i32
  call void @__asan_load4_noabort(i32 %30)
  %.pn = load ptr, ptr %.pn40, align 4
  %cmp24.not = icmp eq ptr %.pn, @workqueues
  br i1 %cmp24.not, label %wq_update_unbound_numa.exit.for.end_crit_edge, label %wq_update_unbound_numa.exit.for.body_crit_edge

wq_update_unbound_numa.exit.for.body_crit_edge:   ; preds = %wq_update_unbound_numa.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

wq_update_unbound_numa.exit.for.end_crit_edge:    ; preds = %wq_update_unbound_numa.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %wq_update_unbound_numa.exit.for.end_crit_edge, %unbind_workers.exit.for.end_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_mutex) #21
  br label %cleanup

cleanup:                                          ; preds = %for.end, %do.end
  %retval.0 = phi i32 [ -1, %do.end ], [ 0, %for.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @work_on_cpu(i32 noundef %cpu, ptr noundef %fn, ptr noundef %arg) #0 align 64 {
entry:
  %wfc = alloca %struct.work_for_cpu, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %wfc) #21
  %0 = call ptr @memset(ptr %wfc, i32 0, i32 56)
  %fn1 = getelementptr inbounds %struct.work_for_cpu, ptr %wfc, i32 0, i32 1
  %1 = ptrtoint ptr %fn1 to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %fn, ptr %fn1, align 4
  %arg2 = getelementptr inbounds %struct.work_for_cpu, ptr %wfc, i32 0, i32 2
  %2 = ptrtoint ptr %arg2 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %arg, ptr %arg2, align 4
  call void @debug_object_init_on_stack(ptr noundef nonnull %wfc, ptr noundef nonnull @work_debug_descr) #21
  %3 = ptrtoint ptr %wfc to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -64, ptr %wfc, align 4
  %lockdep_map = getelementptr inbounds %struct.work_struct, ptr %wfc, i32 0, i32 3
  call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.34, ptr noundef nonnull @work_on_cpu.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #21
  %entry6 = getelementptr inbounds %struct.work_struct, ptr %wfc, i32 0, i32 1
  %4 = ptrtoint ptr %entry6 to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %entry6, ptr %entry6, align 4
  %prev.i = getelementptr inbounds %struct.work_struct, ptr %wfc, i32 0, i32 1, i32 1
  %5 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %entry6, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.work_struct, ptr %wfc, i32 0, i32 2
  %6 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr @work_for_cpu_fn, ptr %func, align 4
  %7 = load ptr, ptr @system_wq, align 4
  %8 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !688
  %and.i.i.i = and i32 %8, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %entry.do.end11.i.i_crit_edge

entry.do.end11.i.i_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end11.i.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  call void @trace_hardirqs_off() #21
  br label %do.end11.i.i

do.end11.i.i:                                     ; preds = %if.then.i.i, %entry.do.end11.i.i_crit_edge
  %call12.i.i = call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef nonnull %wfc) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12.i.i)
  %tobool13.not.i.i = icmp eq i32 %call12.i.i, 0
  br i1 %tobool13.not.i.i, label %if.then14.i.i, label %do.end11.i.i.do.body16.i.i_crit_edge

do.end11.i.i.do.body16.i.i_crit_edge:             ; preds = %do.end11.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body16.i.i

if.then14.i.i:                                    ; preds = %do.end11.i.i
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @__queue_work(i32 noundef %cpu, ptr noundef %7, ptr noundef nonnull %wfc) #21
  br label %do.body16.i.i

do.body16.i.i:                                    ; preds = %if.then14.i.i, %do.end11.i.i.do.body16.i.i_crit_edge
  br i1 %tobool.not.i.i, label %if.then25.i.i, label %do.body16.i.i.do.body27.i.i_crit_edge

do.body16.i.i.do.body27.i.i_crit_edge:            ; preds = %do.body16.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body27.i.i

if.then25.i.i:                                    ; preds = %do.body16.i.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @trace_hardirqs_on() #21
  br label %do.body27.i.i

do.body27.i.i:                                    ; preds = %if.then25.i.i, %do.body16.i.i.do.body27.i.i_crit_edge
  %9 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #21, !srcloc !689
  %and.i.i.i.i = and i32 %9, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool35.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool35.not.i.i, label %if.then39.i.i, label %do.body27.i.i.schedule_work_on.exit_crit_edge, !prof !680

do.body27.i.i.schedule_work_on.exit_crit_edge:    ; preds = %do.body27.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %schedule_work_on.exit

if.then39.i.i:                                    ; preds = %do.body27.i.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @warn_bogus_irq_restore() #21
  br label %schedule_work_on.exit

schedule_work_on.exit:                            ; preds = %if.then39.i.i, %do.body27.i.i.schedule_work_on.exit_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %8) #21, !srcloc !690
  %call.i = call fastcc zeroext i1 @__flush_work(ptr noundef nonnull %wfc, i1 noundef zeroext false) #21
  call void @debug_object_free(ptr noundef nonnull %wfc, ptr noundef nonnull @work_debug_descr) #21
  %ret = getelementptr inbounds %struct.work_for_cpu, ptr %wfc, i32 0, i32 3
  %10 = ptrtoint ptr %ret to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %ret, align 4
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %wfc) #21
  ret i32 %11
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @work_for_cpu_fn(ptr nocapture noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %fn = getelementptr inbounds %struct.work_for_cpu, ptr %work, i32 0, i32 1
  %0 = ptrtoint ptr %fn to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fn, align 4
  %arg = getelementptr inbounds %struct.work_for_cpu, ptr %work, i32 0, i32 2
  %2 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arg, align 4
  %call = tail call i32 %1(ptr noundef %3) #21
  %ret = getelementptr inbounds %struct.work_for_cpu, ptr %work, i32 0, i32 3
  %4 = ptrtoint ptr %ret to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %call, ptr %ret, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @work_on_cpu_safe(i32 noundef %cpu, ptr noundef %fn, ptr noundef %arg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @cpus_read_lock() #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %0, i32 %cpu)
  %cmp.not.i.i.i.i = icmp ugt i32 %0, %cpu
  br i1 %cmp.not.i.i.i.i, label %entry.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

entry.cpu_online.exit_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %entry
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !679

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.66, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %entry.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %cpu, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %1 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i = and i32 %cpu, 31
  %3 = shl nuw i32 1, %and.i.i.i
  %4 = and i32 %2, %3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.i.not = icmp eq i32 %4, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end_crit_edge, label %if.then

cpu_online.exit.if.end_crit_edge:                 ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  %call1 = tail call i32 @work_on_cpu(i32 noundef %cpu, ptr noundef %fn, ptr noundef %arg)
  br label %if.end

if.end:                                           ; preds = %if.then, %cpu_online.exit.if.end_crit_edge
  %ret.0 = phi i32 [ %call1, %if.then ], [ -19, %cpu_online.exit.if.end_crit_edge ]
  tail call void @cpus_read_unlock() #21
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @freeze_workqueues_begin() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_mutex, i32 noundef 0) #21
  %.b9193 = load i1, ptr @workqueue_freezing, align 1
  br i1 %.b9193, label %land.rhs, label %entry.if.end28_crit_edge

entry.if.end28_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end28

land.rhs:                                         ; preds = %entry
  %.b96 = load i1, ptr @freeze_workqueues_begin.__already_done, align 1
  br i1 %.b96, label %land.rhs.if.end28_crit_edge, label %if.then, !prof !679

land.rhs.if.end28_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end28

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @freeze_workqueues_begin.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5252, i32 noundef 9, ptr noundef null) #21
  br label %if.end28

if.end28:                                         ; preds = %if.then, %land.rhs.if.end28_crit_edge, %entry.if.end28_crit_edge
  store i1 true, ptr @workqueue_freezing, align 1
  %.pn100 = load ptr, ptr @workqueues, align 4
  %cmp.not102 = icmp eq ptr %.pn100, @workqueues
  br i1 %cmp.not102, label %if.end28.for.end80_crit_edge, label %if.end28.for.body_crit_edge

if.end28.for.body_crit_edge:                      ; preds = %if.end28
  br label %for.body

if.end28.for.end80_crit_edge:                     ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end80

for.body:                                         ; preds = %for.end.for.body_crit_edge, %if.end28.for.body_crit_edge
  %.pn103 = phi ptr [ %.pn, %for.end.for.body_crit_edge ], [ %.pn100, %if.end28.for.body_crit_edge ]
  %wq.0104 = getelementptr i8, ptr %.pn103, i32 -8
  %mutex = getelementptr i8, ptr %.pn103, i32 8
  tail call void @mutex_lock_nested(ptr noundef %mutex, i32 noundef 0) #21
  %dep_map = getelementptr i8, ptr %.pn103, i32 72
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool41.not = icmp eq i32 %call.i, 0
  br i1 %tobool41.not, label %land.lhs.true, label %for.body.do.end52_crit_edge

for.body.do.end52_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end52

land.lhs.true:                                    ; preds = %for.body
  %call42 = tail call i32 @rcu_read_lock_any_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42)
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %land.lhs.true44, label %land.lhs.true.do.end52_crit_edge

land.lhs.true.do.end52_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end52

land.lhs.true44:                                  ; preds = %land.lhs.true
  %call45 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call45)
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %land.lhs.true44.do.end52_crit_edge, label %land.lhs.true47

land.lhs.true44.do.end52_crit_edge:               ; preds = %land.lhs.true44
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end52

land.lhs.true47:                                  ; preds = %land.lhs.true44
  %.b9295 = load i1, ptr @freeze_workqueues_begin.__warned, align 1
  br i1 %.b9295, label %land.lhs.true47.do.end52_crit_edge, label %if.then49

land.lhs.true47.do.end52_crit_edge:               ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end52

if.then49:                                        ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @freeze_workqueues_begin.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 5257, ptr noundef nonnull @.str.9) #21
  br label %do.end52

do.end52:                                         ; preds = %if.then49, %land.lhs.true47.do.end52_crit_edge, %land.lhs.true44.do.end52_crit_edge, %land.lhs.true.do.end52_crit_edge, %for.body.do.end52_crit_edge
  %0 = ptrtoint ptr %wq.0104 to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn9497 = load volatile ptr, ptr %wq.0104, align 4
  %cmp62.not98 = icmp eq ptr %.pn9497, %wq.0104
  br i1 %cmp62.not98, label %do.end52.for.end_crit_edge, label %do.end52.for.body63_crit_edge

do.end52.for.body63_crit_edge:                    ; preds = %do.end52
  br label %for.body63

do.end52.for.end_crit_edge:                       ; preds = %do.end52
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body63:                                       ; preds = %for.body63.for.body63_crit_edge, %do.end52.for.body63_crit_edge
  %.pn9499 = phi ptr [ %.pn94, %for.body63.for.body63_crit_edge ], [ %.pn9497, %do.end52.for.body63_crit_edge ]
  %pwq.0 = getelementptr i8, ptr %.pn9499, i32 -100
  tail call fastcc void @pwq_adjust_max_active(ptr noundef %pwq.0)
  %1 = ptrtoint ptr %.pn9499 to i32
  call void @__asan_load4_noabort(i32 %1)
  %.pn94 = load volatile ptr, ptr %.pn9499, align 4
  %cmp62.not = icmp eq ptr %.pn94, %wq.0104
  br i1 %cmp62.not, label %for.body63.for.end_crit_edge, label %for.body63.for.body63_crit_edge

for.body63.for.body63_crit_edge:                  ; preds = %for.body63
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body63

for.body63.for.end_crit_edge:                     ; preds = %for.body63
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.body63.for.end_crit_edge, %do.end52.for.end_crit_edge
  tail call void @mutex_unlock(ptr noundef %mutex) #21
  %2 = ptrtoint ptr %.pn103 to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn = load ptr, ptr %.pn103, align 4
  %cmp.not = icmp eq ptr %.pn, @workqueues
  br i1 %cmp.not, label %for.end.for.end80_crit_edge, label %for.end.for.body_crit_edge

for.end.for.body_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end.for.end80_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end80

for.end80:                                        ; preds = %for.end.for.end80_crit_edge, %if.end28.for.end80_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_mutex) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @freeze_workqueues_busy() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_mutex, i32 noundef 0) #21
  %.b157 = load i1, ptr @workqueue_freezing, align 1
  br i1 %.b157, label %entry.if.end29_crit_edge, label %land.rhs

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b154161 = load i1, ptr @freeze_workqueues_busy.__already_done, align 1
  br i1 %.b154161, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !679

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @freeze_workqueues_busy.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5286, i32 noundef 9, ptr noundef null) #21
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  %.pn186 = load ptr, ptr @workqueues, align 4
  %cmp.not188 = icmp eq ptr %.pn186, @workqueues
  br i1 %cmp.not188, label %if.end29.out_unlock_crit_edge, label %if.end29.for.body_crit_edge

if.end29.for.body_crit_edge:                      ; preds = %if.end29
  br label %for.body

if.end29.out_unlock_crit_edge:                    ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_unlock

for.body:                                         ; preds = %for.inc134.for.body_crit_edge, %if.end29.for.body_crit_edge
  %.pn189 = phi ptr [ %.pn, %for.inc134.for.body_crit_edge ], [ %.pn186, %if.end29.for.body_crit_edge ]
  %wq.0190 = getelementptr i8, ptr %.pn189, i32 -8
  %flags = getelementptr i8, ptr %.pn189, i32 248
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 128
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool40.not = icmp eq i32 %and, 0
  br i1 %tobool40.not, label %for.body.for.inc134_crit_edge, label %if.end42

for.body.for.inc134_crit_edge:                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc134

if.end42:                                         ; preds = %for.body
  %2 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %5, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !695
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #21
  %call.i = tail call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i, label %if.end42.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end42.rcu_read_lock.exit_crit_edge:            ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end42
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 696, ptr noundef nonnull @.str.100) #21
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end42.rcu_read_lock.exit_crit_edge
  %dep_map = getelementptr i8, ptr %.pn189, i32 72
  %call.i162 = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i162)
  %tobool44.not = icmp eq i32 %call.i162, 0
  br i1 %tobool44.not, label %land.lhs.true, label %rcu_read_lock.exit.for.cond63.preheader_crit_edge

rcu_read_lock.exit.for.cond63.preheader_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond63.preheader

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call45 = tail call i32 @rcu_read_lock_any_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call45)
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %land.lhs.true47, label %land.lhs.true.for.cond63.preheader_crit_edge

land.lhs.true.for.cond63.preheader_crit_edge:     ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond63.preheader

land.lhs.true47:                                  ; preds = %land.lhs.true
  %call48 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call48)
  %tobool49.not = icmp eq i32 %call48, 0
  br i1 %tobool49.not, label %land.lhs.true47.for.cond63.preheader_crit_edge, label %land.lhs.true50

land.lhs.true47.for.cond63.preheader_crit_edge:   ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond63.preheader

land.lhs.true50:                                  ; preds = %land.lhs.true47
  %.b155160 = load i1, ptr @freeze_workqueues_busy.__warned, align 1
  br i1 %.b155160, label %land.lhs.true50.for.cond63.preheader_crit_edge, label %if.then52

land.lhs.true50.for.cond63.preheader_crit_edge:   ; preds = %land.lhs.true50
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond63.preheader

if.then52:                                        ; preds = %land.lhs.true50
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @freeze_workqueues_busy.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 5296, ptr noundef nonnull @.str.9) #21
  br label %for.cond63.preheader

for.cond63.preheader:                             ; preds = %if.then52, %land.lhs.true50.for.cond63.preheader_crit_edge, %land.lhs.true47.for.cond63.preheader_crit_edge, %land.lhs.true.for.cond63.preheader_crit_edge, %rcu_read_lock.exit.for.cond63.preheader_crit_edge
  br label %for.cond63

for.cond63:                                       ; preds = %if.end113.for.cond63_crit_edge, %for.cond63.preheader
  %.pn158.in = phi ptr [ %.pn158, %if.end113.for.cond63_crit_edge ], [ %wq.0190, %for.cond63.preheader ]
  %6 = ptrtoint ptr %.pn158.in to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pn158 = load volatile ptr, ptr %.pn158.in, align 4
  %cmp65.not = icmp eq ptr %.pn158, %wq.0190
  br i1 %cmp65.not, label %for.end, label %for.body66

for.body66:                                       ; preds = %for.cond63
  %nr_active = getelementptr i8, ptr %.pn158, i32 -16
  %7 = ptrtoint ptr %nr_active to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %nr_active, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp68 = icmp slt i32 %8, 0
  br i1 %cmp68, label %land.rhs75, label %for.body66.if.end113_crit_edge

for.body66.if.end113_crit_edge:                   ; preds = %for.body66
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end113

land.rhs75:                                       ; preds = %for.body66
  %.b156159 = load i1, ptr @freeze_workqueues_busy.__already_done.35, align 1
  br i1 %.b156159, label %land.rhs75.if.then123_crit_edge, label %if.then86, !prof !679

land.rhs75.if.then123_crit_edge:                  ; preds = %land.rhs75
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then123

if.then86:                                        ; preds = %land.rhs75
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @freeze_workqueues_busy.__already_done.35, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5297, i32 noundef 9, ptr noundef null) #21
  %9 = ptrtoint ptr %nr_active to i32
  call void @__asan_load4_noabort(i32 %9)
  %.pr = load i32, ptr %nr_active, align 4
  br label %if.end113

if.end113:                                        ; preds = %if.then86, %for.body66.if.end113_crit_edge
  %10 = phi i32 [ %8, %for.body66.if.end113_crit_edge ], [ %.pr, %if.then86 ]
  %tobool122.not = icmp eq i32 %10, 0
  br i1 %tobool122.not, label %if.end113.for.cond63_crit_edge, label %if.end113.if.then123_crit_edge

if.end113.if.then123_crit_edge:                   ; preds = %if.end113
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then123

if.end113.for.cond63_crit_edge:                   ; preds = %if.end113
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond63

if.then123:                                       ; preds = %if.end113.if.then123_crit_edge, %land.rhs75.if.then123_crit_edge
  %call.i163 = tail call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i163, label %if.then123.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i166

if.then123.rcu_read_unlock.exit_crit_edge:        ; preds = %if.then123
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

land.lhs.true.i166:                               ; preds = %if.then123
  %call1.i164 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i164)
  %tobool.not.i165 = icmp eq i32 %call1.i164, 0
  br i1 %tobool.not.i165, label %land.lhs.true.i166.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i168

land.lhs.true.i166.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i166
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

land.lhs.true2.i168:                              ; preds = %land.lhs.true.i166
  %.b4.i167 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i167, label %land.lhs.true2.i168.rcu_read_unlock.exit_crit_edge, label %if.then.i169

land.lhs.true2.i168.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i168
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

if.then.i169:                                     ; preds = %land.lhs.true2.i168
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 724, ptr noundef nonnull @.str.102) #21
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i169, %land.lhs.true2.i168.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i166.rcu_read_unlock.exit_crit_edge, %if.then123.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !699
  %11 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i.i170 = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i.i.i170 to ptr
  %preempt_count.i.i.i.i171 = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %preempt_count.i.i.i.i171 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %preempt_count.i.i.i.i171, align 4
  %sub.i.i.i = add i32 %14, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i171, align 4
  tail call void @rcu_read_unlock_strict() #21
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #21
  br label %out_unlock

for.end:                                          ; preds = %for.cond63
  %call.i172 = tail call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i172, label %for.end.rcu_read_unlock.exit182_crit_edge, label %land.lhs.true.i175

for.end.rcu_read_unlock.exit182_crit_edge:        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit182

land.lhs.true.i175:                               ; preds = %for.end
  %call1.i173 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i173)
  %tobool.not.i174 = icmp eq i32 %call1.i173, 0
  br i1 %tobool.not.i174, label %land.lhs.true.i175.rcu_read_unlock.exit182_crit_edge, label %land.lhs.true2.i177

land.lhs.true.i175.rcu_read_unlock.exit182_crit_edge: ; preds = %land.lhs.true.i175
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit182

land.lhs.true2.i177:                              ; preds = %land.lhs.true.i175
  %.b4.i176 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i176, label %land.lhs.true2.i177.rcu_read_unlock.exit182_crit_edge, label %if.then.i178

land.lhs.true2.i177.rcu_read_unlock.exit182_crit_edge: ; preds = %land.lhs.true2.i177
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit182

if.then.i178:                                     ; preds = %land.lhs.true2.i177
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 724, ptr noundef nonnull @.str.102) #21
  br label %rcu_read_unlock.exit182

rcu_read_unlock.exit182:                          ; preds = %if.then.i178, %land.lhs.true2.i177.rcu_read_unlock.exit182_crit_edge, %land.lhs.true.i175.rcu_read_unlock.exit182_crit_edge, %for.end.rcu_read_unlock.exit182_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !699
  %15 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i.i179 = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i.i.i.i179 to ptr
  %preempt_count.i.i.i.i180 = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %preempt_count.i.i.i.i180 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %preempt_count.i.i.i.i180, align 4
  %sub.i.i.i181 = add i32 %18, -1
  store volatile i32 %sub.i.i.i181, ptr %preempt_count.i.i.i.i180, align 4
  tail call void @rcu_read_unlock_strict() #21
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #21
  br label %for.inc134

for.inc134:                                       ; preds = %rcu_read_unlock.exit182, %for.body.for.inc134_crit_edge
  %19 = ptrtoint ptr %.pn189 to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pn = load ptr, ptr %.pn189, align 4
  %cmp.not = icmp eq ptr %.pn, @workqueues
  br i1 %cmp.not, label %for.inc134.out_unlock_crit_edge, label %for.inc134.for.body_crit_edge

for.inc134.for.body_crit_edge:                    ; preds = %for.inc134
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.inc134.out_unlock_crit_edge:                  ; preds = %for.inc134
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_unlock

out_unlock:                                       ; preds = %for.inc134.out_unlock_crit_edge, %rcu_read_unlock.exit, %if.end29.out_unlock_crit_edge
  %cmp.not185 = phi i1 [ true, %rcu_read_unlock.exit ], [ false, %if.end29.out_unlock_crit_edge ], [ false, %for.inc134.out_unlock_crit_edge ]
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_mutex) #21
  ret i1 %cmp.not185
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @thaw_workqueues() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_mutex, i32 noundef 0) #21
  %.b49 = load i1, ptr @workqueue_freezing, align 1
  br i1 %.b49, label %if.end, label %entry.out_unlock_crit_edge

entry.out_unlock_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_unlock

if.end:                                           ; preds = %entry
  store i1 false, ptr @workqueue_freezing, align 1
  %.pn55 = load ptr, ptr @workqueues, align 4
  %cmp.not57 = icmp eq ptr %.pn55, @workqueues
  br i1 %cmp.not57, label %if.end.out_unlock_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.out_unlock_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_unlock

for.body:                                         ; preds = %for.end.for.body_crit_edge, %if.end.for.body_crit_edge
  %.pn58 = phi ptr [ %.pn, %for.end.for.body_crit_edge ], [ %.pn55, %if.end.for.body_crit_edge ]
  %wq.059 = getelementptr i8, ptr %.pn58, i32 -8
  %mutex = getelementptr i8, ptr %.pn58, i32 8
  tail call void @mutex_lock_nested(ptr noundef %mutex, i32 noundef 0) #21
  %dep_map = getelementptr i8, ptr %.pn58, i32 72
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool2.not = icmp eq i32 %call.i, 0
  br i1 %tobool2.not, label %land.lhs.true, label %for.body.do.end_crit_edge

for.body.do.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

land.lhs.true:                                    ; preds = %for.body
  %call3 = tail call i32 @rcu_read_lock_any_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %land.lhs.true5, label %land.lhs.true.do.end_crit_edge

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

land.lhs.true5:                                   ; preds = %land.lhs.true
  %call6 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %land.lhs.true5.do.end_crit_edge, label %land.lhs.true8

land.lhs.true5.do.end_crit_edge:                  ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

land.lhs.true8:                                   ; preds = %land.lhs.true5
  %.b4851 = load i1, ptr @thaw_workqueues.__warned, align 1
  br i1 %.b4851, label %land.lhs.true8.do.end_crit_edge, label %if.then10

land.lhs.true8.do.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

if.then10:                                        ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @thaw_workqueues.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 5335, ptr noundef nonnull @.str.9) #21
  br label %do.end

do.end:                                           ; preds = %if.then10, %land.lhs.true8.do.end_crit_edge, %land.lhs.true5.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %for.body.do.end_crit_edge
  %0 = ptrtoint ptr %wq.059 to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn5052 = load volatile ptr, ptr %wq.059, align 4
  %cmp21.not53 = icmp eq ptr %.pn5052, %wq.059
  br i1 %cmp21.not53, label %do.end.for.end_crit_edge, label %do.end.for.body22_crit_edge

do.end.for.body22_crit_edge:                      ; preds = %do.end
  br label %for.body22

do.end.for.end_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body22:                                       ; preds = %for.body22.for.body22_crit_edge, %do.end.for.body22_crit_edge
  %.pn5054 = phi ptr [ %.pn50, %for.body22.for.body22_crit_edge ], [ %.pn5052, %do.end.for.body22_crit_edge ]
  %pwq.0 = getelementptr i8, ptr %.pn5054, i32 -100
  tail call fastcc void @pwq_adjust_max_active(ptr noundef %pwq.0)
  %1 = ptrtoint ptr %.pn5054 to i32
  call void @__asan_load4_noabort(i32 %1)
  %.pn50 = load volatile ptr, ptr %.pn5054, align 4
  %cmp21.not = icmp eq ptr %.pn50, %wq.059
  br i1 %cmp21.not, label %for.body22.for.end_crit_edge, label %for.body22.for.body22_crit_edge

for.body22.for.body22_crit_edge:                  ; preds = %for.body22
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body22

for.body22.for.end_crit_edge:                     ; preds = %for.body22
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.body22.for.end_crit_edge, %do.end.for.end_crit_edge
  tail call void @mutex_unlock(ptr noundef %mutex) #21
  %2 = ptrtoint ptr %.pn58 to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn = load ptr, ptr %.pn58, align 4
  %cmp.not = icmp eq ptr %.pn, @workqueues
  br i1 %cmp.not, label %for.end.out_unlock_crit_edge, label %for.end.for.body_crit_edge

for.end.for.body_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end.out_unlock_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_unlock

out_unlock:                                       ; preds = %for.end.out_unlock_crit_edge, %if.end.out_unlock_crit_edge, %entry.out_unlock_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_mutex) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @workqueue_set_unbound_cpumask(ptr noundef %cpumask) local_unnamed_addr #0 align 64 {
entry:
  %ctxs.i = alloca %struct.list_head, align 4
  %saved_cpumask = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %saved_cpumask) #21
  %0 = ptrtoint ptr %saved_cpumask to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %saved_cpumask, align 4, !annotation !681
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %1 = load i32, ptr @nr_cpu_ids, align 4
  %call.i.i = tail call i32 @__bitmap_and(ptr noundef %cpumask, ptr noundef %cpumask, ptr noundef nonnull @__cpu_possible_mask, i32 noundef %1) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  %call.i.i21 = tail call i32 @_find_first_bit_be(ptr noundef %cpumask, i32 noundef %2) #21
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i21, i32 %2)
  %cmp4.i.i = icmp eq i32 %call.i.i21, %2
  br i1 %cmp4.i.i, label %entry.if.end10_crit_edge, label %if.then

entry.if.end10_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end10

if.then:                                          ; preds = %entry
  tail call void @cpus_read_lock() #21
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_mutex, i32 noundef 0) #21
  %3 = load ptr, ptr @wq_unbound_cpumask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %call13.i.i = tail call i32 @__bitmap_equal(ptr noundef %cpumask, ptr noundef %3, i32 noundef %4) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i.i)
  %tobool.i.not = icmp eq i32 %call13.i.i, 0
  br i1 %tobool.i.not, label %if.end, label %if.then.out_unlock_crit_edge

if.then.out_unlock_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_unlock

if.end:                                           ; preds = %if.then
  %call4 = call zeroext i1 @zalloc_cpumask_var(ptr noundef nonnull %saved_cpumask, i32 noundef 3264) #21
  br i1 %call4, label %if.end6, label %if.end.out_unlock_crit_edge

if.end.out_unlock_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_unlock

if.end6:                                          ; preds = %if.end
  %5 = ptrtoint ptr %saved_cpumask to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %saved_cpumask, align 4
  %7 = load ptr, ptr @wq_unbound_cpumask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %8 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i32 = add i32 %8, 31
  %9 = lshr i32 %sub.i.i32, 3
  %mul.i.i = and i32 %9, 536870908
  %10 = call ptr @memcpy(ptr %6, ptr %7, i32 %mul.i.i)
  %11 = load ptr, ptr @wq_unbound_cpumask, align 4
  %12 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i33 = add i32 %12, 31
  %13 = lshr i32 %sub.i.i33, 3
  %mul.i.i34 = and i32 %13, 536870908
  %14 = call ptr @memcpy(ptr %11, ptr %cpumask, i32 %mul.i.i34)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %ctxs.i) #21
  %15 = getelementptr inbounds %struct.list_head, ptr %ctxs.i, i32 0, i32 1
  %16 = ptrtoint ptr %ctxs.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %ctxs.i, ptr %ctxs.i, align 4
  %17 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %ctxs.i, ptr %15, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %18 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.not.i = icmp eq i32 %18, 0
  br i1 %tobool.not.i, label %if.end6.if.end.i_crit_edge, label %land.rhs.i

if.end6.if.end.i_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %if.end6
  %call.i.i35 = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i35)
  %cmp.not.i = icmp eq i32 %call.i.i35, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !680

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5352, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %if.end6.if.end.i_crit_edge
  %.pn86.i = load ptr, ptr @workqueues, align 4
  %cmp25.not88.i = icmp eq ptr %.pn86.i, @workqueues
  br i1 %cmp25.not88.i, label %if.end.i.for.end.i_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  br label %for.body.i

if.end.i.for.end.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end.i.for.body.i_crit_edge
  %.pn89.i = phi ptr [ %.pn.i, %for.inc.i.for.body.i_crit_edge ], [ %.pn86.i, %if.end.i.for.body.i_crit_edge ]
  %flags.i = getelementptr i8, ptr %.pn89.i, i32 248
  %19 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %flags.i, align 128
  %21 = and i32 %20, 131074
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %21)
  %22 = icmp eq i32 %21, 2
  br i1 %22, label %if.end35.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.end35.i:                                       ; preds = %for.body.i
  %wq.090.i = getelementptr i8, ptr %.pn89.i, i32 -8
  %unbound_attrs.i = getelementptr i8, ptr %.pn89.i, i32 152
  %23 = ptrtoint ptr %unbound_attrs.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %unbound_attrs.i, align 32
  %call36.i = call fastcc ptr @apply_wqattrs_prepare(ptr noundef %wq.090.i, ptr noundef %24) #21
  %tobool37.not.i = icmp eq ptr %call36.i, null
  br i1 %tobool37.not.i, label %if.end35.i.for.end.i_crit_edge, label %if.end39.i

if.end35.i.for.end.i_crit_edge:                   ; preds = %if.end35.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

if.end39.i:                                       ; preds = %if.end35.i
  %list40.i = getelementptr inbounds %struct.apply_wqattrs_ctx, ptr %call36.i, i32 0, i32 2
  %25 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %15, align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %list40.i, ptr noundef %26, ptr noundef nonnull %ctxs.i) #21
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end39.i.for.inc.i_crit_edge

if.end39.i.for.inc.i_crit_edge:                   ; preds = %if.end39.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.end.i.i.i:                                     ; preds = %if.end39.i
  call void @__sanitizer_cov_trace_pc() #23
  %27 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %list40.i, ptr %15, align 4
  %28 = ptrtoint ptr %list40.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %ctxs.i, ptr %list40.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.apply_wqattrs_ctx, ptr %call36.i, i32 0, i32 2, i32 1
  %29 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %26, ptr %prev3.i.i.i, align 4
  %30 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr %list40.i, ptr %26, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end.i.i.i, %if.end39.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %31 = ptrtoint ptr %.pn89.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %.pn.i = load ptr, ptr %.pn89.i, align 4
  %cmp25.not.i = icmp eq ptr %.pn.i, @workqueues
  br i1 %cmp25.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end35.i.for.end.i_crit_edge, %if.end.i.for.end.i_crit_edge
  %cmp25.not.lcssa.i = phi i1 [ true, %if.end.i.for.end.i_crit_edge ], [ true, %for.inc.i.for.end.i_crit_edge ], [ false, %if.end35.i.for.end.i_crit_edge ]
  %cmp = phi i1 [ false, %if.end.i.for.end.i_crit_edge ], [ false, %for.inc.i.for.end.i_crit_edge ], [ true, %if.end35.i.for.end.i_crit_edge ]
  %ret.0.i = phi i32 [ 0, %if.end.i.for.end.i_crit_edge ], [ 0, %for.inc.i.for.end.i_crit_edge ], [ -12, %if.end35.i.for.end.i_crit_edge ]
  %32 = ptrtoint ptr %ctxs.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %ctxs.i, align 4
  %cmp57.not97.i = icmp eq ptr %33, %ctxs.i
  br i1 %cmp57.not97.i, label %for.end.i.workqueue_apply_unbound_cpumask.exit_crit_edge, label %for.end.i.for.body60.i_crit_edge

for.end.i.for.body60.i_crit_edge:                 ; preds = %for.end.i
  br label %for.body60.i

for.end.i.workqueue_apply_unbound_cpumask.exit_crit_edge: ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %workqueue_apply_unbound_cpumask.exit

for.body60.i:                                     ; preds = %if.end63.i.for.body60.i_crit_edge, %for.end.i.for.body60.i_crit_edge
  %.pn8499.in.i = phi ptr [ %.pn8499.i, %if.end63.i.for.body60.i_crit_edge ], [ %33, %for.end.i.for.body60.i_crit_edge ]
  %ctx.098.i = getelementptr i8, ptr %.pn8499.in.i, i32 -8
  %34 = ptrtoint ptr %.pn8499.in.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %.pn8499.i = load ptr, ptr %.pn8499.in.i, align 4
  br i1 %cmp25.not.lcssa.i, label %if.then62.i, label %for.body60.i.if.end63.i_crit_edge

for.body60.i.if.end63.i_crit_edge:                ; preds = %for.body60.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end63.i

if.then62.i:                                      ; preds = %for.body60.i
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @apply_wqattrs_commit(ptr noundef %ctx.098.i) #21
  br label %if.end63.i

if.end63.i:                                       ; preds = %if.then62.i, %for.body60.i.if.end63.i_crit_edge
  call fastcc void @apply_wqattrs_cleanup(ptr noundef %ctx.098.i) #21
  %cmp57.not.i = icmp eq ptr %.pn8499.i, %ctxs.i
  br i1 %cmp57.not.i, label %if.end63.i.workqueue_apply_unbound_cpumask.exit_crit_edge, label %if.end63.i.for.body60.i_crit_edge

if.end63.i.for.body60.i_crit_edge:                ; preds = %if.end63.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body60.i

if.end63.i.workqueue_apply_unbound_cpumask.exit_crit_edge: ; preds = %if.end63.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %workqueue_apply_unbound_cpumask.exit

workqueue_apply_unbound_cpumask.exit:             ; preds = %if.end63.i.workqueue_apply_unbound_cpumask.exit_crit_edge, %for.end.i.workqueue_apply_unbound_cpumask.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %ctxs.i) #21
  br i1 %cmp, label %if.then8, label %workqueue_apply_unbound_cpumask.exit.if.end9_crit_edge

workqueue_apply_unbound_cpumask.exit.if.end9_crit_edge: ; preds = %workqueue_apply_unbound_cpumask.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

if.then8:                                         ; preds = %workqueue_apply_unbound_cpumask.exit
  call void @__sanitizer_cov_trace_pc() #23
  %35 = load ptr, ptr @wq_unbound_cpumask, align 4
  %36 = ptrtoint ptr %saved_cpumask to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %saved_cpumask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %38 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i36 = add i32 %38, 31
  %39 = lshr i32 %sub.i.i36, 3
  %mul.i.i37 = and i32 %39, 536870908
  %40 = call ptr @memcpy(ptr %35, ptr %37, i32 %mul.i.i37)
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %workqueue_apply_unbound_cpumask.exit.if.end9_crit_edge
  %41 = ptrtoint ptr %saved_cpumask to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %saved_cpumask, align 4
  call void @free_cpumask_var(ptr noundef %42) #21
  br label %out_unlock

out_unlock:                                       ; preds = %if.end9, %if.end.out_unlock_crit_edge, %if.then.out_unlock_crit_edge
  %ret.0 = phi i32 [ %ret.0.i, %if.end9 ], [ 0, %if.then.out_unlock_crit_edge ], [ -12, %if.end.out_unlock_crit_edge ]
  call void @mutex_unlock(ptr noundef nonnull @wq_pool_mutex) #21
  call void @cpus_read_unlock() #21
  br label %if.end10

if.end10:                                         ; preds = %out_unlock, %entry.if.end10_crit_edge
  %ret.1 = phi i32 [ -22, %entry.if.end10_crit_edge ], [ %ret.0, %out_unlock ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %saved_cpumask) #21
  ret i32 %ret.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @zalloc_cpumask_var(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @wq_sysfs_init() #10 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @subsys_virtual_register(ptr noundef nonnull @wq_subsys, ptr noundef null) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %0 = load ptr, ptr getelementptr inbounds (%struct.bus_type, ptr @wq_subsys, i32 0, i32 2), align 4
  %call1 = tail call i32 @device_create_file(ptr noundef %0, ptr noundef nonnull @wq_sysfs_cpumask_attr) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @wq_device_release(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %dev, i32 -8
  tail call void @kfree(ptr noundef %add.ptr) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_set_name(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @device_register(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_device(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @device_create_file(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_unregister(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kobject_uevent(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @wq_watchdog_touch(i32 noundef %cpu) local_unnamed_addr #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %cpu)
  %cmp = icmp sgt i32 %cpu, -1
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %0 = load volatile i32, ptr @jiffies, align 128
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %arrayidx, align 4
  %add = add i32 %2, ptrtoint (ptr @wq_watchdog_touched_cpu to i32)
  %3 = inttoptr i32 %add to ptr
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %0, ptr %3, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %5 = load volatile i32, ptr @jiffies, align 128
  store i32 %5, ptr @wq_watchdog_touched, align 4
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @workqueue_init_early() local_unnamed_addr #10 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @alloc_cpumask_var(ptr noundef nonnull @wq_unbound_cpumask, i32 noundef 3264) #21
  br i1 %call, label %do.end11, label %do.body4, !prof !679

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/workqueue.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 6014, 0\0A.popsection", ""() #21, !srcloc !716
  unreachable

do.end11:                                         ; preds = %entry
  %0 = load ptr, ptr @wq_unbound_cpumask, align 4
  %call12 = tail call ptr @housekeeping_cpumask(i32 noundef 96) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %1 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i = add i32 %1, 31
  %2 = lshr i32 %sub.i.i, 3
  %mul.i.i = and i32 %2, 536870908
  %3 = call ptr @memcpy(ptr %0, ptr %call12, i32 %mul.i.i)
  %call13 = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.37, i32 noundef 512, i32 noundef 512, i32 noundef 262144, ptr noundef null) #21
  store ptr %call13, ptr @pwq_cache, align 4
  %call14210 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call14210, i32 %4)
  %cmp211 = icmp ult i32 %call14210, %4
  br i1 %cmp211, label %do.end11.for.body_crit_edge, label %do.end11.for.body78.preheader_crit_edge

do.end11.for.body78.preheader_crit_edge:          ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body78.preheader

do.end11.for.body_crit_edge:                      ; preds = %do.end11
  br label %for.body

for.body78.preheader:                             ; preds = %for.cond.loopexit.for.body78.preheader_crit_edge, %do.end11.for.body78.preheader_crit_edge
  br label %for.body78

for.cond.loopexit:                                ; preds = %do.end74.for.cond.loopexit_crit_edge, %for.body.for.cond.loopexit_crit_edge
  %call14 = tail call i32 @cpumask_next(i32 noundef %call14212, ptr noundef nonnull @__cpu_possible_mask) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %5 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call14, %5
  br i1 %cmp, label %for.cond.loopexit.for.body_crit_edge, label %for.cond.loopexit.for.body78.preheader_crit_edge

for.cond.loopexit.for.body78.preheader_crit_edge: ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body78.preheader

for.cond.loopexit.for.body_crit_edge:             ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body:                                         ; preds = %for.cond.loopexit.for.body_crit_edge, %do.end11.for.body_crit_edge
  %call14212 = phi i32 [ %call14, %for.cond.loopexit.for.body_crit_edge ], [ %call14210, %do.end11.for.body_crit_edge ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call14212
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx, align 4
  %add = add i32 %7, ptrtoint (ptr @cpu_worker_pools to i32)
  %8 = inttoptr i32 %add to ptr
  %arrayidx30206 = getelementptr [2 x %struct.worker_pool], ptr %8, i32 0, i32 2
  %cmp31207 = icmp ugt ptr %arrayidx30206, %8
  br i1 %cmp31207, label %do.body33.lr.ph, label %for.body.for.cond.loopexit_crit_edge

for.body.for.cond.loopexit_crit_edge:             ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.loopexit

do.body33.lr.ph:                                  ; preds = %for.body
  %rem.i = and i32 %call14212, 31
  %add.i = add nuw nsw i32 %rem.i, 1
  %arrayidx.i = getelementptr [33 x [1 x i32]], ptr @cpu_bit_bitmap, i32 0, i32 %add.i
  %div3.i = lshr i32 %call14212, 5
  %idx.neg.i = sub nsw i32 0, %div3.i
  %add.ptr.i = getelementptr i32, ptr %arrayidx.i, i32 %idx.neg.i
  br label %do.body33

do.body33:                                        ; preds = %do.end74.do.body33_crit_edge, %do.body33.lr.ph
  %i.0209 = phi i32 [ 0, %do.body33.lr.ph ], [ %inc, %do.end74.do.body33_crit_edge ]
  %pool.0208 = phi ptr [ %8, %do.body33.lr.ph ], [ %incdec.ptr, %do.end74.do.body33_crit_edge ]
  %call34 = tail call fastcc i32 @init_worker_pool(ptr noundef %pool.0208)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call34)
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %do.end51, label %do.body43, !prof !679

do.body43:                                        ; preds = %do.body33
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/workqueue.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 6025, 0\0A.popsection", ""() #21, !srcloc !717
  unreachable

do.end51:                                         ; preds = %do.body33
  %cpu52 = getelementptr inbounds %struct.worker_pool, ptr %pool.0208, i32 0, i32 1
  %9 = ptrtoint ptr %cpu52 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %call14212, ptr %cpu52, align 4
  %attrs = getelementptr inbounds %struct.worker_pool, ptr %pool.0208, i32 0, i32 18
  %10 = ptrtoint ptr %attrs to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %attrs, align 4
  %cpumask = getelementptr inbounds %struct.workqueue_attrs, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %cpumask to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %cpumask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %14 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i200 = add i32 %14, 31
  %15 = lshr i32 %sub.i.i200, 3
  %mul.i.i201 = and i32 %15, 536870908
  %16 = call ptr @memcpy(ptr %13, ptr %add.ptr.i, i32 %mul.i.i201)
  %arrayidx54 = getelementptr [2 x i32], ptr @__const.workqueue_init_early.std_nice, i32 0, i32 %i.0209
  %17 = ptrtoint ptr %arrayidx54 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx54, align 4
  %19 = load ptr, ptr %attrs, align 4
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %18, ptr %19, align 4
  %node = getelementptr inbounds %struct.worker_pool, ptr %pool.0208, i32 0, i32 2
  %21 = ptrtoint ptr %node to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %node, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_mutex, i32 noundef 0) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %22 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.not.i = icmp eq i32 %22, 0
  br i1 %tobool.not.i, label %do.end51.if.end.i_crit_edge, label %land.rhs.i

do.end51.if.end.i_crit_edge:                      ; preds = %do.end51
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %do.end51
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !680

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 551, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %do.end51.if.end.i_crit_edge
  %call24.i = tail call i32 @idr_alloc(ptr noundef nonnull @worker_pool_idr, ptr noundef %pool.0208, i32 noundef 0, i32 noundef 67108863, i32 noundef 3264) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call24.i)
  %cmp25.i = icmp sgt i32 %call24.i, -1
  br i1 %cmp25.i, label %do.end74, label %do.body66

do.body66:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/workqueue.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 6033, 0\0A.popsection", ""() #21, !srcloc !718
  unreachable

do.end74:                                         ; preds = %if.end.i
  %id.i = getelementptr inbounds %struct.worker_pool, ptr %pool.0208, i32 0, i32 3
  %23 = ptrtoint ptr %id.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %call24.i, ptr %id.i, align 4
  %inc = add i32 %i.0209, 1
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_mutex) #21
  %incdec.ptr = getelementptr %struct.worker_pool, ptr %pool.0208, i32 1
  %24 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx, align 4
  %add29 = add i32 %25, ptrtoint (ptr @cpu_worker_pools to i32)
  %26 = inttoptr i32 %add29 to ptr
  %arrayidx30 = getelementptr [2 x %struct.worker_pool], ptr %26, i32 0, i32 2
  %cmp31 = icmp ult ptr %incdec.ptr, %arrayidx30
  br i1 %cmp31, label %do.end74.do.body33_crit_edge, label %do.end74.for.cond.loopexit_crit_edge

do.end74.for.cond.loopexit_crit_edge:             ; preds = %do.end74
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.loopexit

do.end74.do.body33_crit_edge:                     ; preds = %do.end74
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body33

for.body78:                                       ; preds = %do.end124.for.body78_crit_edge, %for.body78.preheader
  %cmp77 = phi i1 [ false, %do.end124.for.body78_crit_edge ], [ true, %for.body78.preheader ]
  %i.1213 = phi i32 [ 1, %do.end124.for.body78_crit_edge ], [ 0, %for.body78.preheader ]
  %call81 = tail call ptr @alloc_workqueue_attrs()
  %tobool82.not = icmp eq ptr %call81, null
  br i1 %tobool82.not, label %do.body92, label %do.end100, !prof !680

do.body92:                                        ; preds = %for.body78
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/workqueue.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 6042, 0\0A.popsection", ""() #21, !srcloc !719
  unreachable

do.end100:                                        ; preds = %for.body78
  %arrayidx101 = getelementptr [2 x i32], ptr @__const.workqueue_init_early.std_nice, i32 0, i32 %i.1213
  %27 = ptrtoint ptr %arrayidx101 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx101, align 4
  %29 = ptrtoint ptr %call81 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %call81, align 4
  %arrayidx103 = getelementptr [2 x ptr], ptr @unbound_std_wq_attrs, i32 0, i32 %i.1213
  %30 = ptrtoint ptr %arrayidx103 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %call81, ptr %arrayidx103, align 4
  %call105 = tail call ptr @alloc_workqueue_attrs()
  %tobool106.not = icmp eq ptr %call105, null
  br i1 %tobool106.not, label %do.body116, label %do.end124, !prof !680

do.body116:                                       ; preds = %do.end100
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/workqueue.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 6051, 0\0A.popsection", ""() #21, !srcloc !720
  unreachable

do.end124:                                        ; preds = %do.end100
  %31 = ptrtoint ptr %call105 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %28, ptr %call105, align 4
  %no_numa = getelementptr inbounds %struct.workqueue_attrs, ptr %call105, i32 0, i32 2
  %32 = ptrtoint ptr %no_numa to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 1, ptr %no_numa, align 4
  %arrayidx127 = getelementptr [2 x ptr], ptr @ordered_wq_attrs, i32 0, i32 %i.1213
  %33 = ptrtoint ptr %arrayidx127 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %call105, ptr %arrayidx127, align 4
  br i1 %cmp77, label %do.end124.for.body78_crit_edge, label %for.end130

do.end124.for.body78_crit_edge:                   ; preds = %do.end124
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body78

for.end130:                                       ; preds = %do.end124
  %call131 = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.38, i32 noundef 0, i32 noundef 0)
  store ptr %call131, ptr @system_wq, align 4
  %call132 = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.39, i32 noundef 16, i32 noundef 0)
  store ptr %call132, ptr @system_highpri_wq, align 4
  %call133 = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.40, i32 noundef 0, i32 noundef 0)
  store ptr %call133, ptr @system_long_wq, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %34 = load i32, ptr @nr_cpu_ids, align 4
  %call4.i.i = tail call i32 @__bitmap_weight(ptr noundef nonnull @__cpu_possible_mask, i32 noundef %34) #21
  %mul = shl i32 %call4.i.i, 2
  %35 = tail call i32 @llvm.smax.i32(i32 %mul, i32 512)
  %call137 = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.41, i32 noundef 2, i32 noundef %35)
  store ptr %call137, ptr @system_unbound_wq, align 4
  %call138 = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.42, i32 noundef 4, i32 noundef 0)
  store ptr %call138, ptr @system_freezable_wq, align 4
  %call139 = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.43, i32 noundef 128, i32 noundef 0)
  store ptr %call139, ptr @system_power_efficient_wq, align 4
  %call140 = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.44, i32 noundef 132, i32 noundef 0)
  store ptr %call140, ptr @system_freezable_power_efficient_wq, align 4
  %36 = load ptr, ptr @system_wq, align 4
  %tobool142.not = icmp eq ptr %36, null
  br i1 %tobool142.not, label %for.end130.do.body162_crit_edge, label %lor.lhs.false, !prof !680

for.end130.do.body162_crit_edge:                  ; preds = %for.end130
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body162

lor.lhs.false:                                    ; preds = %for.end130
  %37 = load ptr, ptr @system_highpri_wq, align 4
  %tobool143.not = icmp eq ptr %37, null
  br i1 %tobool143.not, label %lor.lhs.false.do.body162_crit_edge, label %lor.lhs.false144, !prof !680

lor.lhs.false.do.body162_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body162

lor.lhs.false144:                                 ; preds = %lor.lhs.false
  %38 = load ptr, ptr @system_long_wq, align 4
  %tobool145.not = icmp eq ptr %38, null
  br i1 %tobool145.not, label %lor.lhs.false144.do.body162_crit_edge, label %lor.lhs.false146, !prof !680

lor.lhs.false144.do.body162_crit_edge:            ; preds = %lor.lhs.false144
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body162

lor.lhs.false146:                                 ; preds = %lor.lhs.false144
  %39 = load ptr, ptr @system_unbound_wq, align 4
  %tobool147.not = icmp eq ptr %39, null
  br i1 %tobool147.not, label %lor.lhs.false146.do.body162_crit_edge, label %lor.lhs.false148, !prof !680

lor.lhs.false146.do.body162_crit_edge:            ; preds = %lor.lhs.false146
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body162

lor.lhs.false148:                                 ; preds = %lor.lhs.false146
  %40 = load ptr, ptr @system_freezable_wq, align 4
  %tobool149.not = icmp eq ptr %40, null
  br i1 %tobool149.not, label %lor.lhs.false148.do.body162_crit_edge, label %lor.lhs.false150, !prof !680

lor.lhs.false148.do.body162_crit_edge:            ; preds = %lor.lhs.false148
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body162

lor.lhs.false150:                                 ; preds = %lor.lhs.false148
  %41 = load ptr, ptr @system_power_efficient_wq, align 4
  %tobool151.not = icmp eq ptr %41, null
  %tobool152.not = icmp eq ptr %call140, null
  %spec.select = select i1 %tobool151.not, i1 true, i1 %tobool152.not, !prof !680
  br i1 %spec.select, label %lor.lhs.false150.do.body162_crit_edge, label %do.end170, !prof !680

lor.lhs.false150.do.body162_crit_edge:            ; preds = %lor.lhs.false150
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body162

do.body162:                                       ; preds = %lor.lhs.false150.do.body162_crit_edge, %lor.lhs.false148.do.body162_crit_edge, %lor.lhs.false146.do.body162_crit_edge, %lor.lhs.false144.do.body162_crit_edge, %lor.lhs.false.do.body162_crit_edge, %for.end130.do.body162_crit_edge
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/workqueue.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 6072, 0\0A.popsection", ""() #21, !srcloc !721
  unreachable

do.end170:                                        ; preds = %lor.lhs.false150
  call void @__sanitizer_cov_trace_pc() #23
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @housekeeping_cpumask(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmem_cache_create(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @init_worker_pool(ptr noundef %pool) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__raw_spin_lock_init(ptr noundef %pool, ptr noundef nonnull @.str.82, ptr noundef nonnull @init_worker_pool.__key, i16 noundef signext 2) #21
  %id = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 3
  %0 = ptrtoint ptr %id to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %id, align 4
  %cpu = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 1
  %1 = ptrtoint ptr %cpu to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %cpu, align 4
  %node = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 2
  %2 = ptrtoint ptr %node to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %node, align 4
  %flags = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 4
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags, align 4
  %or = or i32 %4, 4
  store i32 %or, ptr %flags, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %5 = load volatile i32, ptr @jiffies, align 128
  %watchdog_ts = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 5
  %6 = ptrtoint ptr %watchdog_ts to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %watchdog_ts, align 4
  %worklist = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 7
  %7 = ptrtoint ptr %worklist to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %worklist, ptr %worklist, align 4
  %prev.i = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 7, i32 1
  %8 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %worklist, ptr %prev.i, align 4
  %idle_list = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 10
  %9 = ptrtoint ptr %idle_list to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %idle_list, ptr %idle_list, align 4
  %prev.i22 = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 10, i32 1
  %10 = ptrtoint ptr %prev.i22 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %idle_list, ptr %prev.i22, align 4
  %busy_hash = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 13
  %11 = call ptr @memset(ptr %busy_hash, i32 0, i32 256)
  %idle_timer = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 11
  tail call void @init_timer_key(ptr noundef %idle_timer, ptr noundef nonnull @idle_worker_timeout, i32 noundef 524288, ptr noundef nonnull @.str.185, ptr noundef nonnull @init_worker_pool.__key.184) #21
  %mayday_timer = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 12
  tail call void @init_timer_key(ptr noundef %mayday_timer, ptr noundef nonnull @pool_mayday_timeout, i32 noundef 0, ptr noundef nonnull @.str.187, ptr noundef nonnull @init_worker_pool.__key.186) #21
  %workers = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 15
  %12 = ptrtoint ptr %workers to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %workers, ptr %workers, align 4
  %prev.i23 = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 15, i32 1
  %13 = ptrtoint ptr %prev.i23 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %workers, ptr %prev.i23, align 4
  %worker_ida = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 17
  tail call void @__raw_spin_lock_init(ptr noundef %worker_ida, ptr noundef nonnull @.str.188, ptr noundef nonnull @xa_init_flags.__key, i16 noundef signext 3) #21
  %xa_flags.i.i = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 17, i32 0, i32 1
  %14 = ptrtoint ptr %xa_flags.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 67108869, ptr %xa_flags.i.i, align 4
  %xa_head.i.i = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 17, i32 0, i32 2
  %15 = ptrtoint ptr %xa_head.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %xa_head.i.i, align 4
  %hash_node = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 19
  %16 = ptrtoint ptr %hash_node to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %hash_node, align 4
  %pprev.i = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 19, i32 1
  %17 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %pprev.i, align 4
  %refcnt = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 20
  %18 = ptrtoint ptr %refcnt to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 1, ptr %refcnt, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %19 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %19, i32 noundef 3520, i32 noundef 12) #29
  %tobool.not.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i, label %entry.alloc_workqueue_attrs.exit_crit_edge, label %if.end.i

entry.alloc_workqueue_attrs.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %alloc_workqueue_attrs.exit

if.end.i:                                         ; preds = %entry
  %cpumask.i = getelementptr inbounds %struct.workqueue_attrs, ptr %call7.i.i.i, i32 0, i32 1
  %call1.i = tail call zeroext i1 @alloc_cpumask_var(ptr noundef %cpumask.i, i32 noundef 3264) #21
  %20 = ptrtoint ptr %cpumask.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %cpumask.i, align 4
  br i1 %call1.i, label %if.end3.i, label %if.then.i.i

if.end3.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %22 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i.i = add i32 %22, 31
  %23 = lshr i32 %sub.i.i.i, 3
  %mul.i.i.i = and i32 %23, 536870908
  %24 = call ptr @memcpy(ptr %21, ptr @__cpu_possible_mask, i32 %mul.i.i.i)
  br label %alloc_workqueue_attrs.exit

if.then.i.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @free_cpumask_var(ptr noundef %21) #21
  tail call void @kfree(ptr noundef nonnull %call7.i.i.i) #21
  br label %alloc_workqueue_attrs.exit

alloc_workqueue_attrs.exit:                       ; preds = %if.then.i.i, %if.end3.i, %entry.alloc_workqueue_attrs.exit_crit_edge
  %retval.0.i = phi ptr [ %call7.i.i.i, %if.end3.i ], [ null, %if.then.i.i ], [ null, %entry.alloc_workqueue_attrs.exit_crit_edge ]
  %attrs = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 18
  %25 = ptrtoint ptr %attrs to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %retval.0.i, ptr %attrs, align 4
  %tobool.not = icmp eq ptr %retval.0.i, null
  %. = select i1 %tobool.not, i32 -12, i32 0
  ret i32 %.
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @workqueue_init() local_unnamed_addr #10 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_mutex, i32 noundef 0) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %call191 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #27
  call void @__sanitizer_cov_trace_cmp4(i32 %call191, i32 %0)
  %cmp192 = icmp ult i32 %call191, %0
  br i1 %cmp192, label %entry.do.body_crit_edge, label %entry.for.cond18.preheader_crit_edge

entry.for.cond18.preheader_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond18.preheader

entry.do.body_crit_edge:                          ; preds = %entry
  br label %do.body

for.cond.loopexit:                                ; preds = %for.body15.for.cond.loopexit_crit_edge, %do.body.for.cond.loopexit_crit_edge
  %call = tail call i32 @cpumask_next(i32 noundef %call193, ptr noundef nonnull @__cpu_possible_mask) #27
  %cmp = icmp ult i32 %call, %0
  br i1 %cmp, label %for.cond.loopexit.do.body_crit_edge, label %for.cond.loopexit.for.cond18.preheader_crit_edge

for.cond.loopexit.for.cond18.preheader_crit_edge: ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond18.preheader

for.cond.loopexit.do.body_crit_edge:              ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body

for.cond18.preheader:                             ; preds = %for.cond.loopexit.for.cond18.preheader_crit_edge, %entry.for.cond18.preheader_crit_edge
  %.pn194 = load ptr, ptr @workqueues, align 4
  %cmp19.not195 = icmp eq ptr %.pn194, @workqueues
  br i1 %cmp19.not195, label %for.cond18.preheader.for.end53_crit_edge, label %for.cond18.preheader.for.body20_crit_edge

for.cond18.preheader.for.body20_crit_edge:        ; preds = %for.cond18.preheader
  br label %for.body20

for.cond18.preheader.for.end53_crit_edge:         ; preds = %for.cond18.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end53

do.body:                                          ; preds = %for.cond.loopexit.do.body_crit_edge, %entry.do.body_crit_edge
  %call193 = phi i32 [ %call, %for.cond.loopexit.do.body_crit_edge ], [ %call191, %entry.do.body_crit_edge ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call193
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %arrayidx, align 4
  %add = add i32 %2, ptrtoint (ptr @cpu_worker_pools to i32)
  %3 = inttoptr i32 %add to ptr
  %arrayidx13188 = getelementptr [2 x %struct.worker_pool], ptr %3, i32 0, i32 2
  %cmp14189 = icmp ugt ptr %arrayidx13188, %3
  br i1 %cmp14189, label %do.body.for.body15_crit_edge, label %do.body.for.cond.loopexit_crit_edge

do.body.for.cond.loopexit_crit_edge:              ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.loopexit

do.body.for.body15_crit_edge:                     ; preds = %do.body
  br label %for.body15

for.body15:                                       ; preds = %for.body15.for.body15_crit_edge, %do.body.for.body15_crit_edge
  %pool.0190 = phi ptr [ %incdec.ptr, %for.body15.for.body15_crit_edge ], [ %3, %do.body.for.body15_crit_edge ]
  %node = getelementptr inbounds %struct.worker_pool, ptr %pool.0190, i32 0, i32 2
  %4 = ptrtoint ptr %node to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %node, align 4
  %incdec.ptr = getelementptr %struct.worker_pool, ptr %pool.0190, i32 1
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx, align 4
  %add12 = add i32 %6, ptrtoint (ptr @cpu_worker_pools to i32)
  %7 = inttoptr i32 %add12 to ptr
  %arrayidx13 = getelementptr [2 x %struct.worker_pool], ptr %7, i32 0, i32 2
  %cmp14 = icmp ult ptr %incdec.ptr, %arrayidx13
  br i1 %cmp14, label %for.body15.for.body15_crit_edge, label %for.body15.for.cond.loopexit_crit_edge

for.body15.for.cond.loopexit_crit_edge:           ; preds = %for.body15
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.loopexit

for.body15.for.body15_crit_edge:                  ; preds = %for.body15
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body15

for.body20:                                       ; preds = %if.end.for.body20_crit_edge, %for.cond18.preheader.for.body20_crit_edge
  %.pn196 = phi ptr [ %.pn, %if.end.for.body20_crit_edge ], [ %.pn194, %for.cond18.preheader.for.body20_crit_edge ]
  %wq.0 = getelementptr i8, ptr %.pn196, i32 -8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %8 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool1.not.i = icmp eq i32 %8, 0
  br i1 %tobool1.not.i, label %for.body20.wq_update_unbound_numa.exit_crit_edge, label %land.rhs.i

for.body20.wq_update_unbound_numa.exit_crit_edge: ; preds = %for.body20
  call void @__sanitizer_cov_trace_pc() #23
  br label %wq_update_unbound_numa.exit

land.rhs.i:                                       ; preds = %for.body20
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.wq_update_unbound_numa.exit_crit_edge, !prof !680

land.rhs.i.wq_update_unbound_numa.exit_crit_edge: ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %wq_update_unbound_numa.exit

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4160, i32 noundef 9, ptr noundef null) #21
  br label %wq_update_unbound_numa.exit

wq_update_unbound_numa.exit:                      ; preds = %do.end.i, %land.rhs.i.wq_update_unbound_numa.exit_crit_edge, %for.body20.wq_update_unbound_numa.exit_crit_edge
  %call23 = tail call fastcc i32 @init_rescuer(ptr noundef %wq.0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %tobool.not = icmp eq i32 %call23, 0
  br i1 %tobool.not, label %wq_update_unbound_numa.exit.if.end_crit_edge, label %do.end35, !prof !679

wq_update_unbound_numa.exit.if.end_crit_edge:     ; preds = %wq_update_unbound_numa.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end35:                                         ; preds = %wq_update_unbound_numa.exit
  call void @__sanitizer_cov_trace_pc() #23
  %name = getelementptr i8, ptr %.pn196, i32 204
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6113, i32 noundef 9, ptr noundef nonnull @.str.45, ptr noundef %name) #21
  br label %if.end

if.end:                                           ; preds = %do.end35, %wq_update_unbound_numa.exit.if.end_crit_edge
  %9 = ptrtoint ptr %.pn196 to i32
  call void @__asan_load4_noabort(i32 %9)
  %.pn = load ptr, ptr %.pn196, align 4
  %cmp19.not = icmp eq ptr %.pn, @workqueues
  br i1 %cmp19.not, label %if.end.for.end53_crit_edge, label %if.end.for.body20_crit_edge

if.end.for.body20_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body20

if.end.for.end53_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end53

for.end53:                                        ; preds = %if.end.for.end53_crit_edge, %for.cond18.preheader.for.end53_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_mutex) #21
  %call55201 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %10 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call55201, i32 %10)
  %cmp56202 = icmp ult i32 %call55201, %10
  br i1 %cmp56202, label %for.end53.do.body58_crit_edge, label %for.end53.for.body109.preheader_crit_edge

for.end53.for.body109.preheader_crit_edge:        ; preds = %for.end53
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body109.preheader

for.end53.do.body58_crit_edge:                    ; preds = %for.end53
  br label %do.body58

for.body109.preheader:                            ; preds = %for.cond54.loopexit.for.body109.preheader_crit_edge, %for.end53.for.body109.preheader_crit_edge
  br label %for.body109

for.cond54.loopexit:                              ; preds = %for.cond68.for.cond54.loopexit_crit_edge, %do.body58.for.cond54.loopexit_crit_edge
  %call55 = tail call i32 @cpumask_next(i32 noundef %call55203, ptr noundef nonnull @__cpu_online_mask) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %11 = load i32, ptr @nr_cpu_ids, align 4
  %cmp56 = icmp ult i32 %call55, %11
  br i1 %cmp56, label %for.cond54.loopexit.do.body58_crit_edge, label %for.cond54.loopexit.for.body109.preheader_crit_edge

for.cond54.loopexit.for.body109.preheader_crit_edge: ; preds = %for.cond54.loopexit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body109.preheader

for.cond54.loopexit.do.body58_crit_edge:          ; preds = %for.cond54.loopexit
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body58

do.body58:                                        ; preds = %for.cond54.loopexit.do.body58_crit_edge, %for.end53.do.body58_crit_edge
  %call55203 = phi i32 [ %call55, %for.cond54.loopexit.do.body58_crit_edge ], [ %call55201, %for.end53.do.body58_crit_edge ]
  %arrayidx65 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call55203
  %12 = ptrtoint ptr %arrayidx65 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx65, align 4
  %add66 = add i32 %13, ptrtoint (ptr @cpu_worker_pools to i32)
  %14 = inttoptr i32 %add66 to ptr
  %arrayidx78198 = getelementptr [2 x %struct.worker_pool], ptr %14, i32 0, i32 2
  %cmp79199 = icmp ugt ptr %arrayidx78198, %14
  br i1 %cmp79199, label %do.body58.for.body80_crit_edge, label %do.body58.for.cond54.loopexit_crit_edge

do.body58.for.cond54.loopexit_crit_edge:          ; preds = %do.body58
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond54.loopexit

do.body58.for.body80_crit_edge:                   ; preds = %do.body58
  br label %for.body80

for.cond68:                                       ; preds = %for.body80
  %incdec.ptr103 = getelementptr %struct.worker_pool, ptr %pool.1200, i32 1
  %15 = ptrtoint ptr %arrayidx65 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx65, align 4
  %add77 = add i32 %16, ptrtoint (ptr @cpu_worker_pools to i32)
  %17 = inttoptr i32 %add77 to ptr
  %arrayidx78 = getelementptr [2 x %struct.worker_pool], ptr %17, i32 0, i32 2
  %cmp79 = icmp ult ptr %incdec.ptr103, %arrayidx78
  br i1 %cmp79, label %for.cond68.for.body80_crit_edge, label %for.cond68.for.cond54.loopexit_crit_edge

for.cond68.for.cond54.loopexit_crit_edge:         ; preds = %for.cond68
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond54.loopexit

for.cond68.for.body80_crit_edge:                  ; preds = %for.cond68
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body80

for.body80:                                       ; preds = %for.cond68.for.body80_crit_edge, %do.body58.for.body80_crit_edge
  %pool.1200 = phi ptr [ %incdec.ptr103, %for.cond68.for.body80_crit_edge ], [ %14, %do.body58.for.body80_crit_edge ]
  %flags = getelementptr inbounds %struct.worker_pool, ptr %pool.1200, i32 0, i32 4
  %18 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %flags, align 4
  %and = and i32 %19, -5
  store i32 %and, ptr %flags, align 4
  %call82 = tail call fastcc ptr @create_worker(ptr noundef %pool.1200)
  %tobool83.not = icmp eq ptr %call82, null
  br i1 %tobool83.not, label %do.body93, label %for.cond68, !prof !680

do.body93:                                        ; preds = %for.body80
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/workqueue.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 6122, 0\0A.popsection", ""() #21, !srcloc !722
  unreachable

for.body109:                                      ; preds = %for.inc153.for.body109_crit_edge, %for.body109.preheader
  %bkt.0206 = phi i32 [ %inc, %for.inc153.for.body109_crit_edge ], [ 0, %for.body109.preheader ]
  %arrayidx110 = getelementptr [64 x %struct.hlist_head], ptr @unbound_pool_hash, i32 0, i32 %bkt.0206
  %20 = ptrtoint ptr %arrayidx110 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx110, align 4
  %tobool112.not = icmp eq ptr %21, null
  %add.ptr115 = getelementptr i8, ptr %21, i32 -516
  %tobool117.not204207 = icmp eq ptr %add.ptr115, null
  %tobool117.not204 = or i1 %tobool112.not, %tobool117.not204207
  br i1 %tobool117.not204, label %for.body109.for.inc153_crit_edge, label %for.body109.do.body119_crit_edge

for.body109.do.body119_crit_edge:                 ; preds = %for.body109
  br label %do.body119

for.body109.for.inc153_crit_edge:                 ; preds = %for.body109
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc153

do.body119:                                       ; preds = %for.inc140.do.body119_crit_edge, %for.body109.do.body119_crit_edge
  %pool.3205 = phi ptr [ %add.ptr148, %for.inc140.do.body119_crit_edge ], [ %add.ptr115, %for.body109.do.body119_crit_edge ]
  %call120 = tail call fastcc ptr @create_worker(ptr noundef nonnull %pool.3205)
  %tobool121.not = icmp eq ptr %call120, null
  br i1 %tobool121.not, label %do.body131, label %for.inc140, !prof !680

do.body131:                                       ; preds = %do.body119
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/workqueue.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 6127, 0\0A.popsection", ""() #21, !srcloc !723
  unreachable

for.inc140:                                       ; preds = %do.body119
  %hash_node = getelementptr inbounds %struct.worker_pool, ptr %pool.3205, i32 0, i32 19
  %22 = ptrtoint ptr %hash_node to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %hash_node, align 4
  %tobool144.not = icmp eq ptr %23, null
  %add.ptr148 = getelementptr i8, ptr %23, i32 -516
  %tobool117.not208 = icmp eq ptr %add.ptr148, null
  %tobool117.not = or i1 %tobool144.not, %tobool117.not208
  br i1 %tobool117.not, label %for.inc140.for.inc153_crit_edge, label %for.inc140.do.body119_crit_edge

for.inc140.do.body119_crit_edge:                  ; preds = %for.inc140
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body119

for.inc140.for.inc153_crit_edge:                  ; preds = %for.inc140
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc153

for.inc153:                                       ; preds = %for.inc140.for.inc153_crit_edge, %for.body109.for.inc153_crit_edge
  %inc = add nuw nsw i32 %bkt.0206, 1
  %exitcond.not = icmp eq i32 %inc, 64
  br i1 %exitcond.not, label %for.end154, label %for.inc153.for.body109_crit_edge

for.inc153.for.body109_crit_edge:                 ; preds = %for.inc153
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body109

for.end154:                                       ; preds = %for.inc153
  store i1 true, ptr @wq_online, align 1
  tail call void @init_timer_key(ptr noundef nonnull @wq_watchdog_timer, ptr noundef nonnull @wq_watchdog_timer_fn, i32 noundef 524288, ptr noundef nonnull @.str.194, ptr noundef nonnull @wq_watchdog_init.__key) #21
  %24 = load i32, ptr @wq_watchdog_thresh, align 4
  store i32 0, ptr @wq_watchdog_thresh, align 4
  %call.i.i184 = tail call i32 @del_timer_sync(ptr noundef nonnull @wq_watchdog_timer) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool.not.i.i = icmp eq i32 %24, 0
  br i1 %tobool.not.i.i, label %for.end154.wq_watchdog_init.exit_crit_edge, label %if.then.i.i

for.end154.wq_watchdog_init.exit_crit_edge:       ; preds = %for.end154
  call void @__sanitizer_cov_trace_pc() #23
  br label %wq_watchdog_init.exit

if.then.i.i:                                      ; preds = %for.end154
  store i32 %24, ptr @wq_watchdog_thresh, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %25 = load volatile i32, ptr @jiffies, align 128
  store i32 %25, ptr @wq_watchdog_touched, align 4
  %call4.i.i.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %26 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call4.i.i.i, i32 %26)
  %cmp5.i.i.i = icmp ult i32 %call4.i.i.i, %26
  br i1 %cmp5.i.i.i, label %if.then.i.i.for.body.i.i.i_crit_edge, label %if.then.i.i.wq_watchdog_reset_touched.exit.i.i_crit_edge

if.then.i.i.wq_watchdog_reset_touched.exit.i.i_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %wq_watchdog_reset_touched.exit.i.i

if.then.i.i.for.body.i.i.i_crit_edge:             ; preds = %if.then.i.i
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i.for.body.i.i.i_crit_edge, %if.then.i.i.for.body.i.i.i_crit_edge
  %call6.i.i.i = phi i32 [ %call.i.i.i, %for.body.i.i.i.for.body.i.i.i_crit_edge ], [ %call4.i.i.i, %if.then.i.i.for.body.i.i.i_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %27 = load volatile i32, ptr @jiffies, align 128
  %arrayidx.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call6.i.i.i
  %28 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx.i.i.i, align 4
  %add.i.i.i = add i32 %29, ptrtoint (ptr @wq_watchdog_touched_cpu to i32)
  %30 = inttoptr i32 %add.i.i.i to ptr
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %27, ptr %30, align 4
  %call.i.i.i = tail call i32 @cpumask_next(i32 noundef %call6.i.i.i, ptr noundef nonnull @__cpu_possible_mask) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %32 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.i.i.i = icmp ult i32 %call.i.i.i, %32
  br i1 %cmp.i.i.i, label %for.body.i.i.i.for.body.i.i.i_crit_edge, label %for.body.i.i.i.wq_watchdog_reset_touched.exit.i.i_crit_edge

for.body.i.i.i.wq_watchdog_reset_touched.exit.i.i_crit_edge: ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %wq_watchdog_reset_touched.exit.i.i

for.body.i.i.i.for.body.i.i.i_crit_edge:          ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.i.i

wq_watchdog_reset_touched.exit.i.i:               ; preds = %for.body.i.i.i.wq_watchdog_reset_touched.exit.i.i_crit_edge, %if.then.i.i.wq_watchdog_reset_touched.exit.i.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %33 = load volatile i32, ptr @jiffies, align 128
  %mul.i.i = mul i32 %24, 100
  %add.i.i = add i32 %33, %mul.i.i
  %call1.i.i = tail call i32 @mod_timer(ptr noundef nonnull @wq_watchdog_timer, i32 noundef %add.i.i) #21
  br label %wq_watchdog_init.exit

wq_watchdog_init.exit:                            ; preds = %wq_watchdog_reset_touched.exit.i.i, %for.end154.wq_watchdog_init.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #12

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #9

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_workqueue_queue_work(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %work = getelementptr inbounds %struct.trace_event_raw_workqueue_queue_work, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %work, align 4
  %function = getelementptr inbounds %struct.trace_event_raw_workqueue_queue_work, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %function to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %function, align 4
  %__data_loc_workqueue = getelementptr inbounds %struct.trace_event_raw_workqueue_queue_work, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %__data_loc_workqueue to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %__data_loc_workqueue, align 4
  %and = and i32 %7, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %req_cpu = getelementptr inbounds %struct.trace_event_raw_workqueue_queue_work, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %req_cpu to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %req_cpu, align 4
  %cpu = getelementptr inbounds %struct.trace_event_raw_workqueue_queue_work, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.55, ptr noundef %3, ptr noundef %5, ptr noundef %add.ptr, i32 noundef %9, i32 noundef %11) #21
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_workqueue_activate_work(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %work = getelementptr inbounds %struct.trace_event_raw_workqueue_activate_work, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %work, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.56, ptr noundef %3) #21
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_workqueue_execute_start(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %work = getelementptr inbounds %struct.trace_event_raw_workqueue_execute_start, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %work, align 4
  %function = getelementptr inbounds %struct.trace_event_raw_workqueue_execute_start, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %function to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %function, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.57, ptr noundef %3, ptr noundef %5) #21
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_workqueue_execute_end(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %work = getelementptr inbounds %struct.trace_event_raw_workqueue_execute_end, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %work, align 4
  %function = getelementptr inbounds %struct.trace_event_raw_workqueue_execute_end, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %function to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %function, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.57, ptr noundef %3, ptr noundef %5) #21
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #13

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #13

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #14

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run3(ptr noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run1(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run2(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal ptr @work_debug_hint(ptr nocapture noundef readonly %addr) #15 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %func = getelementptr inbounds %struct.work_struct, ptr %addr, i32 0, i32 2
  %0 = ptrtoint ptr %func to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %func, align 4
  ret ptr %1
}

; Function Attrs: argmemonly mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal zeroext i1 @work_is_static_object(ptr noundef %addr) #16 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %addr, align 4
  %2 = and i32 %1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool = icmp ne i32 %2, 0
  ret i1 %tobool
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i1 @work_fixup_init(ptr noundef %addr, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %state)
  %cond = icmp eq i32 %state, 3
  br i1 %cond, label %sw.bb, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call.i = tail call fastcc zeroext i1 @__cancel_work_timer(ptr noundef %addr, i1 noundef zeroext false) #21
  tail call void @debug_object_init(ptr noundef %addr, ptr noundef nonnull @work_debug_descr) #21
  br label %cleanup

cleanup:                                          ; preds = %sw.bb, %entry.cleanup_crit_edge
  ret i1 %cond
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i1 @work_fixup_free(ptr noundef %addr, i32 noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %state)
  %cond = icmp eq i32 %state, 3
  br i1 %cond, label %sw.bb, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call.i = tail call fastcc zeroext i1 @__cancel_work_timer(ptr noundef %addr, i1 noundef zeroext false) #21
  tail call void @debug_object_free(ptr noundef %addr, ptr noundef nonnull @work_debug_descr) #21
  br label %cleanup

cleanup:                                          ; preds = %sw.bb, %entry.cleanup_crit_edge
  ret i1 %cond
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #17

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @is_chained_work(ptr noundef readnone %wq) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %and.i = and i32 %3, 15728640
  %4 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i13.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i13.i to ptr
  %preempt_count.i14.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i14.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i14.i, align 4
  %and2.i = and i32 %7, 983040
  %or.i = or i32 %and2.i, %and.i
  %8 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i15.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i15.i to ptr
  %preempt_count.i16.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i16.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i16.i, align 4
  %and5.i = and i32 %11, 256
  %or6.i = or i32 %or.i, %and5.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or6.i)
  %tobool.not.i = icmp eq i32 %or6.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %entry.land.end_crit_edge

entry.land.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.end

land.lhs.true.i:                                  ; preds = %entry
  %12 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 3
  %16 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %flags.i, align 4
  %and8.i = and i32 %17, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i)
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  br i1 %tobool9.not.i, label %land.lhs.true.i.land.end_crit_edge, label %current_wq_worker.exit

land.lhs.true.i.land.end_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.end

current_wq_worker.exit:                           ; preds = %land.lhs.true.i
  %call12.i = tail call ptr @kthread_data(ptr noundef %15) #21
  %tobool.not = icmp eq ptr %call12.i, null
  br i1 %tobool.not, label %current_wq_worker.exit.land.end_crit_edge, label %land.rhs

current_wq_worker.exit.land.end_crit_edge:        ; preds = %current_wq_worker.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.end

land.rhs:                                         ; preds = %current_wq_worker.exit
  call void @__sanitizer_cov_trace_pc() #23
  %current_pwq = getelementptr inbounds %struct.worker, ptr %call12.i, i32 0, i32 3
  %18 = ptrtoint ptr %current_pwq to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %current_pwq, align 4
  %wq1 = getelementptr inbounds %struct.pool_workqueue, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %wq1 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %wq1, align 4
  %cmp = icmp eq ptr %21, %wq
  br label %land.end

land.end:                                         ; preds = %land.rhs, %current_wq_worker.exit.land.end_crit_edge, %land.lhs.true.i.land.end_crit_edge, %entry.land.end_crit_edge
  %22 = phi i1 [ false, %current_wq_worker.exit.land.end_crit_edge ], [ %cmp, %land.rhs ], [ false, %land.lhs.true.i.land.end_crit_edge ], [ false, %entry.land.end_crit_edge ]
  ret i1 %22
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_workqueue_queue_work(i32 noundef %req_cpu, ptr noundef %pwq, ptr noundef %work) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_workqueue_queue_work, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_workqueue_queue_work, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !724

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !679

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.66, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !725
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_workqueue_queue_work, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, i32 noundef %req_cpu, ptr noundef %pwq, ptr noundef %work) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !726
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !726
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !679

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.66, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !727
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_workqueue_queue_work, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_workqueue_queue_work.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_workqueue_queue_work.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.67, i32 noundef 49, ptr noundef nonnull @.str.68) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !728
  %38 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_workqueue_activate_work(ptr noundef %work) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_workqueue_activate_work, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_workqueue_activate_work, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !724

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !679

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.66, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !729
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_workqueue_activate_work, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %work) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !730
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !730
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !679

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.66, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !727
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_workqueue_activate_work, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_workqueue_activate_work.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_workqueue_activate_work.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.67, i32 noundef 74, ptr noundef nonnull @.str.68) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !728
  %38 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @insert_work(ptr noundef %pwq, ptr noundef %work, ptr noundef %head, i32 noundef %extra_flags) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %pwq to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pwq, align 512
  tail call void @kasan_record_aux_stack_noalloc(ptr noundef %work) #21
  %2 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %work, align 4
  %and1.i.i.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %entry.set_work_pwq.exit_crit_edge

entry.set_work_pwq.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_work_pwq.exit

land.rhs.i.i:                                     ; preds = %entry
  %.b45.i.i = load i1, ptr @set_work_data.__already_done, align 1
  br i1 %.b45.i.i, label %land.rhs.i.i.set_work_pwq.exit_crit_edge, label %if.then.i.i, !prof !679

land.rhs.i.i.set_work_pwq.exit_crit_edge:         ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_work_pwq.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @set_work_data.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 630, i32 noundef 9, ptr noundef null) #21
  br label %set_work_pwq.exit

set_work_pwq.exit:                                ; preds = %if.then.i.i, %land.rhs.i.i.set_work_pwq.exit_crit_edge, %entry.set_work_pwq.exit_crit_edge
  %4 = ptrtoint ptr %pwq to i32
  %5 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %work, align 4
  %and.i.i.i = and i32 %6, 16
  %or.i = or i32 %4, %extra_flags
  %or.i.i = or i32 %or.i, %and.i.i.i
  %or40.i.i = or i32 %or.i.i, 5
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %work, i32 noundef 4) #21
  %7 = ptrtoint ptr %work to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile i32 %or40.i.i, ptr %work, align 4
  %entry2 = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 1
  %prev.i = getelementptr inbounds %struct.list_head, ptr %head, i32 0, i32 1
  %8 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %entry2, ptr noundef %9, ptr noundef %head) #21
  br i1 %call.i.i, label %if.end.i.i, label %set_work_pwq.exit.list_add_tail.exit_crit_edge

set_work_pwq.exit.list_add_tail.exit_crit_edge:   ; preds = %set_work_pwq.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %set_work_pwq.exit
  call void @__sanitizer_cov_trace_pc() #23
  %10 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %entry2, ptr %prev.i, align 4
  %11 = ptrtoint ptr %entry2 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %head, ptr %entry2, align 4
  %prev3.i.i = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 1, i32 1
  %12 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %9, ptr %prev3.i.i, align 4
  %13 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %entry2, ptr %9, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %set_work_pwq.exit.list_add_tail.exit_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %14 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.not.i = icmp eq i32 %14, 0
  br i1 %tobool.not.i, label %list_add_tail.exit.if.end.i_crit_edge, label %land.rhs.i

list_add_tail.exit.if.end.i_crit_edge:            ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %list_add_tail.exit
  %15 = ptrtoint ptr %pwq to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %pwq, align 512
  %dep_map.i = getelementptr inbounds %struct.raw_spinlock, ptr %16, i32 0, i32 4
  %call.i.i11 = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i11)
  %cmp.not.i = icmp eq i32 %call.i.i11, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !680

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1122, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %list_add_tail.exit.if.end.i_crit_edge
  %refcnt.i = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 4
  %17 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %refcnt.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %18)
  %cmp24.i = icmp slt i32 %18, 1
  br i1 %cmp24.i, label %land.rhs30.i, label %if.end.i.get_pwq.exit_crit_edge

if.end.i.get_pwq.exit_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %get_pwq.exit

land.rhs30.i:                                     ; preds = %if.end.i
  %.b82.i = load i1, ptr @get_pwq.__already_done, align 1
  br i1 %.b82.i, label %land.rhs30.i.get_pwq.exit_crit_edge, label %if.then41.i, !prof !679

land.rhs30.i.get_pwq.exit_crit_edge:              ; preds = %land.rhs30.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %get_pwq.exit

if.then41.i:                                      ; preds = %land.rhs30.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @get_pwq.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1123, i32 noundef 9, ptr noundef null) #21
  br label %get_pwq.exit

get_pwq.exit:                                     ; preds = %if.then41.i, %land.rhs30.i.get_pwq.exit_crit_edge, %if.end.i.get_pwq.exit_crit_edge
  %19 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %refcnt.i, align 16
  %inc.i = add i32 %20, 1
  store i32 %inc.i, ptr %refcnt.i, align 16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !731
  %nr_running.i = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 6
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %nr_running.i, i32 noundef 4) #21
  %21 = ptrtoint ptr %nr_running.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %nr_running.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.not.i12 = icmp eq i32 %22, 0
  br i1 %tobool.not.i12, label %if.then, label %get_pwq.exit.if.end_crit_edge

get_pwq.exit.if.end_crit_edge:                    ; preds = %get_pwq.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %get_pwq.exit
  %idle_list.i.i = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 10
  %23 = ptrtoint ptr %idle_list.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile ptr, ptr %idle_list.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %24, %idle_list.i.i
  %tobool.not5.i = icmp eq ptr %24, null
  %tobool.not.i13 = or i1 %cmp.i.not.i.i, %tobool.not5.i
  br i1 %tobool.not.i13, label %if.then.if.end_crit_edge, label %if.then.i, !prof !680

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %task.i = getelementptr inbounds %struct.worker, ptr %24, i32 0, i32 6
  %25 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %task.i, align 4
  %call3.i = tail call i32 @wake_up_process(ptr noundef %26) #21
  br label %if.end

if.end:                                           ; preds = %if.then.i, %if.then.if.end_crit_edge, %get_pwq.exit.if.end_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next_and(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_first_and_bit(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_object_activate(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kasan_record_aux_stack_noalloc(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @add_timer_on(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @add_timer(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @del_timer(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pwq_activate_inactive_work(ptr noundef %work) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %work, i32 noundef 4) #21
  %0 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %work, align 4
  %and.i11 = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i11)
  %tobool.not.i = icmp eq i32 %and.i11, 0
  %and2.i = and i32 %1, -512
  %2 = inttoptr i32 %and2.i to ptr
  %retval.0.i = select i1 %tobool.not.i, ptr null, ptr %2
  tail call fastcc void @trace_workqueue_activate_work(ptr noundef %work)
  %3 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %retval.0.i, align 512
  %worklist = getelementptr inbounds %struct.worker_pool, ptr %4, i32 0, i32 7
  %5 = ptrtoint ptr %worklist to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %worklist, align 4
  %cmp.i.not = icmp eq ptr %6, %worklist
  br i1 %cmp.i.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %7 = load volatile i32, ptr @jiffies, align 128
  %watchdog_ts = getelementptr inbounds %struct.worker_pool, ptr %4, i32 0, i32 5
  %8 = ptrtoint ptr %watchdog_ts to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %watchdog_ts, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %9 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %retval.0.i, align 512
  %worklist4 = getelementptr inbounds %struct.worker_pool, ptr %10, i32 0, i32 7
  %prev.i2.i.i = getelementptr inbounds %struct.worker_pool, ptr %10, i32 0, i32 7, i32 1
  br label %for.cond.i

for.cond.i:                                       ; preds = %list_move_tail.exit.i.for.cond.i_crit_edge, %if.end
  %work.addr.0.i = phi ptr [ %work, %if.end ], [ %n.0.i, %list_move_tail.exit.i.for.cond.i_crit_edge ]
  %.pn.in.i = getelementptr inbounds %struct.work_struct, ptr %work.addr.0.i, i32 0, i32 1
  %11 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %.pn.i = load ptr, ptr %.pn.in.i, align 4
  %n.0.i = getelementptr i8, ptr %.pn.i, i32 -4
  %call.i.i.i12 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %.pn.in.i) #21
  br i1 %call.i.i.i12, label %if.end.i.i.i, label %for.cond.i.__list_del_entry.exit.i.i_crit_edge

for.cond.i.__list_del_entry.exit.i.i_crit_edge:   ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__list_del_entry.exit.i.i

if.end.i.i.i:                                     ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i.i = getelementptr inbounds %struct.work_struct, ptr %work.addr.0.i, i32 0, i32 1, i32 1
  %12 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %prev.i.i.i, align 4
  %14 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %.pn.in.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %13, ptr %prev1.i.i.i.i, align 4
  %17 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %15, ptr %13, align 4
  br label %__list_del_entry.exit.i.i

__list_del_entry.exit.i.i:                        ; preds = %if.end.i.i.i, %for.cond.i.__list_del_entry.exit.i.i_crit_edge
  %18 = ptrtoint ptr %prev.i2.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %prev.i2.i.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %.pn.in.i, ptr noundef %19, ptr noundef %worklist4) #21
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %__list_del_entry.exit.i.i.list_move_tail.exit.i_crit_edge

__list_del_entry.exit.i.i.list_move_tail.exit.i_crit_edge: ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_move_tail.exit.i

if.end.i.i.i.i:                                   ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %20 = ptrtoint ptr %prev.i2.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %.pn.in.i, ptr %prev.i2.i.i, align 4
  %21 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %worklist4, ptr %.pn.in.i, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.work_struct, ptr %work.addr.0.i, i32 0, i32 1, i32 1
  %22 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %19, ptr %prev3.i.i.i.i, align 4
  %23 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %.pn.in.i, ptr %19, align 4
  br label %list_move_tail.exit.i

list_move_tail.exit.i:                            ; preds = %if.end.i.i.i.i, %__list_del_entry.exit.i.i.list_move_tail.exit.i_crit_edge
  %24 = ptrtoint ptr %work.addr.0.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %work.addr.0.i, align 4
  %and.i13 = and i32 %25, 8
  %tobool.not.i14 = icmp eq i32 %and.i13, 0
  br i1 %tobool.not.i14, label %move_linked_works.exit, label %list_move_tail.exit.i.for.cond.i_crit_edge

list_move_tail.exit.i.for.cond.i_crit_edge:       ; preds = %list_move_tail.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.i

move_linked_works.exit:                           ; preds = %list_move_tail.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  %26 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %work, align 4
  %and.i = and i32 %27, -3
  store i32 %and.i, ptr %work, align 4
  %nr_active = getelementptr inbounds %struct.pool_workqueue, ptr %retval.0.i, i32 0, i32 6
  %28 = ptrtoint ptr %nr_active to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %nr_active, align 4
  %inc = add i32 %29, 1
  store i32 %inc, ptr %nr_active, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pwq_dec_nr_in_flight(ptr noundef %pwq, i32 noundef %work_data) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %shr.i = lshr i32 %work_data, 5
  %and.i = and i32 %shr.i, 15
  %and = and i32 %work_data, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end7_crit_edge

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7

if.then:                                          ; preds = %entry
  %nr_active = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 6
  %0 = ptrtoint ptr %nr_active to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nr_active, align 4
  %dec = add i32 %1, -1
  store i32 %dec, ptr %nr_active, align 4
  %inactive_works = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 8
  %2 = ptrtoint ptr %inactive_works to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %inactive_works, align 4
  %cmp.i.not = icmp eq ptr %3, %inactive_works
  br i1 %cmp.i.not, label %if.then.if.end7_crit_edge, label %if.then3

if.then.if.end7_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7

if.then3:                                         ; preds = %if.then
  %max_active = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 7
  %4 = ptrtoint ptr %max_active to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %max_active, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %dec, i32 %5)
  %cmp = icmp slt i32 %dec, %5
  br i1 %cmp, label %if.then5, label %if.then3.if.end7_crit_edge

if.then3.if.end7_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7

if.then5:                                         ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #23
  %add.ptr.i = getelementptr i8, ptr %3, i32 -4
  tail call fastcc void @pwq_activate_inactive_work(ptr noundef %add.ptr.i) #21
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %if.then3.if.end7_crit_edge, %if.then.if.end7_crit_edge, %entry.if.end7_crit_edge
  %arrayidx = getelementptr %struct.pool_workqueue, ptr %pwq, i32 0, i32 5, i32 %and.i
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx, align 4
  %dec8 = add i32 %7, -1
  store i32 %dec8, ptr %arrayidx, align 4
  %flush_color = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 3
  %8 = ptrtoint ptr %flush_color to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flush_color, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %and.i)
  %cmp9.not = icmp eq i32 %9, %and.i
  br i1 %cmp9.not, label %if.end13, label %if.end7.out_put_crit_edge, !prof !680

if.end7.out_put_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_put

if.end13:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec8)
  %tobool16.not = icmp eq i32 %dec8, 0
  br i1 %tobool16.not, label %if.end18, label %if.end13.out_put_crit_edge

if.end13.out_put_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_put

if.end18:                                         ; preds = %if.end13
  %10 = ptrtoint ptr %flush_color to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 -1, ptr %flush_color, align 4
  %wq = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 1
  %11 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %wq, align 4
  %nr_pwqs_to_flush = getelementptr inbounds %struct.workqueue_struct, ptr %12, i32 0, i32 5
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_pwqs_to_flush, i32 noundef 4) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !685
  tail call void @llvm.prefetch.p0(ptr %nr_pwqs_to_flush, i32 1, i32 3, i32 1) #21
  %13 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_pwqs_to_flush, ptr %nr_pwqs_to_flush, i32 1, ptr elementtype(i32) %nr_pwqs_to_flush) #21, !srcloc !686
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %13, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !687
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.i.i, label %if.then21, label %if.end18.out_put_crit_edge

if.end18.out_put_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_put

if.then21:                                        ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #23
  %14 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %wq, align 4
  %first_flusher = getelementptr inbounds %struct.workqueue_struct, ptr %15, i32 0, i32 6
  %16 = ptrtoint ptr %first_flusher to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %first_flusher, align 8
  %done = getelementptr inbounds %struct.wq_flusher, ptr %17, i32 0, i32 2
  tail call void @complete(ptr noundef %done) #21
  br label %out_put

out_put:                                          ; preds = %if.then21, %if.end18.out_put_crit_edge, %if.end13.out_put_crit_edge, %if.end7.out_put_crit_edge
  tail call fastcc void @put_pwq(ptr noundef %pwq)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_object_deactivate(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @move_linked_works(ptr noundef %work, ptr noundef %head, ptr noundef writeonly %nextp) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %prev.i2.i = getelementptr inbounds %struct.list_head, ptr %head, i32 0, i32 1
  br label %for.cond

for.cond:                                         ; preds = %list_move_tail.exit.for.cond_crit_edge, %entry
  %work.addr.0 = phi ptr [ %work, %entry ], [ %n.0, %list_move_tail.exit.for.cond_crit_edge ]
  %.pn.in = getelementptr inbounds %struct.work_struct, ptr %work.addr.0, i32 0, i32 1
  %0 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn = load ptr, ptr %.pn.in, align 4
  %n.0 = getelementptr i8, ptr %.pn, i32 -4
  %cmp.not = icmp eq ptr %.pn.in, null
  br i1 %cmp.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.cond
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %.pn.in) #21
  br i1 %call.i.i, label %if.end.i.i, label %for.body.__list_del_entry.exit.i_crit_edge

for.body.__list_del_entry.exit.i_crit_edge:       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %__list_del_entry.exit.i

if.end.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i = getelementptr inbounds %struct.work_struct, ptr %work.addr.0, i32 0, i32 1, i32 1
  %1 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %prev.i.i, align 4
  %3 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %.pn.in, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %2, ptr %prev1.i.i.i, align 4
  %6 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %4, ptr %2, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i, %for.body.__list_del_entry.exit.i_crit_edge
  %7 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev.i2.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %.pn.in, ptr noundef %8, ptr noundef %head) #21
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.list_move_tail.exit_crit_edge

__list_del_entry.exit.i.list_move_tail.exit_crit_edge: ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_move_tail.exit

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  %9 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %.pn.in, ptr %prev.i2.i, align 4
  %10 = ptrtoint ptr %.pn.in to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %head, ptr %.pn.in, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.work_struct, ptr %work.addr.0, i32 0, i32 1, i32 1
  %11 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %prev3.i.i.i, align 4
  %12 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %.pn.in, ptr %8, align 4
  br label %list_move_tail.exit

list_move_tail.exit:                              ; preds = %if.end.i.i.i, %__list_del_entry.exit.i.list_move_tail.exit_crit_edge
  %13 = ptrtoint ptr %work.addr.0 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %work.addr.0, align 4
  %and = and i32 %14, 8
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %list_move_tail.exit.for.end_crit_edge, label %list_move_tail.exit.for.cond_crit_edge

list_move_tail.exit.for.cond_crit_edge:           ; preds = %list_move_tail.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond

list_move_tail.exit.for.end_crit_edge:            ; preds = %list_move_tail.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %list_move_tail.exit.for.end_crit_edge, %for.cond.for.end_crit_edge
  %tobool9.not = icmp eq ptr %nextp, null
  br i1 %tobool9.not, label %for.end.if.end11_crit_edge, label %if.then10

for.end.if.end11_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end11

if.then10:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  %15 = ptrtoint ptr %nextp to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %n.0, ptr %nextp, align 4
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %for.end.if.end11_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @put_pwq(ptr noundef %pwq) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %entry
  %1 = ptrtoint ptr %pwq to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %pwq, align 512
  %dep_map = getelementptr inbounds %struct.raw_spinlock, ptr %2, i32 0, i32 4
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !680

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1136, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %refcnt = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 4
  %3 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %refcnt, align 16
  %dec = add i32 %4, -1
  store i32 %dec, ptr %refcnt, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %tobool24.not = icmp eq i32 %dec, 0
  br i1 %tobool24.not, label %if.end32, label %if.end.return_crit_edge, !prof !680

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end32:                                         ; preds = %if.end
  %wq = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 1
  %5 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %wq, align 4
  %flags = getelementptr inbounds %struct.workqueue_struct, ptr %6, i32 0, i32 22
  %7 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %flags, align 128
  %and = and i32 %8, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool33.not = icmp eq i32 %and, 0
  br i1 %tobool33.not, label %land.rhs41, label %if.end89.critedge

land.rhs41:                                       ; preds = %if.end32
  %.b97 = load i1, ptr @put_pwq.__already_done, align 1
  br i1 %.b97, label %land.rhs41.return_crit_edge, label %if.then52, !prof !679

land.rhs41.return_crit_edge:                      ; preds = %land.rhs41
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.then52:                                        ; preds = %land.rhs41
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @put_pwq.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1139, i32 noundef 9, ptr noundef null) #21
  br label %return

if.end89.critedge:                                ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #23
  %unbound_release_work = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 11
  tail call fastcc void @schedule_work(ptr noundef %unbound_release_work)
  br label %return

return:                                           ; preds = %if.end89.critedge, %if.then52, %land.rhs41.return_crit_edge, %if.end.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_swait_queue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @start_flush_work(ptr noundef %work, ptr noundef %barr, i1 noundef zeroext %from_cancel) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 3028) #21
  %0 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !695
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #21
  %call.i = tail call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 696, ptr noundef nonnull @.str.100) #21
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %call = tail call fastcc ptr @get_work_pool(ptr noundef %work)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %rcu_read_lock.exit
  %call.i51 = tail call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i51, label %if.then.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i54

if.then.rcu_read_unlock.exit_crit_edge:           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

land.lhs.true.i54:                                ; preds = %if.then
  %call1.i52 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i52)
  %tobool.not.i53 = icmp eq i32 %call1.i52, 0
  br i1 %tobool.not.i53, label %land.lhs.true.i54.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i56

land.lhs.true.i54.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i54
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

land.lhs.true2.i56:                               ; preds = %land.lhs.true.i54
  %.b4.i55 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i55, label %land.lhs.true2.i56.rcu_read_unlock.exit_crit_edge, label %if.then.i57

land.lhs.true2.i56.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i56
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

if.then.i57:                                      ; preds = %land.lhs.true2.i56
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 724, ptr noundef nonnull @.str.102) #21
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i57, %land.lhs.true2.i56.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i54.rcu_read_unlock.exit_crit_edge, %if.then.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !699
  br label %cleanup

if.end:                                           ; preds = %rcu_read_lock.exit
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull %call) #21
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %work, i32 noundef 4) #21
  %4 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %work, align 4
  %and.i = and i32 %5, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i60 = icmp eq i32 %and.i, 0
  %and2.i = and i32 %5, -512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i)
  %tobool5.not92 = icmp eq i32 %and2.i, 0
  %tobool5.not = or i1 %tobool.not.i60, %tobool5.not92
  br i1 %tobool5.not, label %if.else, label %if.then6

if.then6:                                         ; preds = %if.end
  %6 = inttoptr i32 %and2.i to ptr
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 512
  %cmp.not = icmp eq ptr %8, %call
  br i1 %cmp.not, label %if.then6.if.end16_crit_edge, label %if.then6.already_gone_crit_edge, !prof !679

if.then6.already_gone_crit_edge:                  ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #23
  br label %already_gone

if.then6.if.end16_crit_edge:                      ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

if.else:                                          ; preds = %if.end
  %9 = ptrtoint ptr %work to i32
  %mul.i.i.i = mul i32 %9, 1640531527
  %shr.i.i = lshr i32 %mul.i.i.i, 26
  %arrayidx.i = getelementptr %struct.worker_pool, ptr %call, i32 0, i32 13, i32 %shr.i.i
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %worker.024.i = load ptr, ptr %arrayidx.i, align 4
  %tobool2.not25.i = icmp eq ptr %worker.024.i, null
  br i1 %tobool2.not25.i, label %if.else.already_gone_crit_edge, label %for.body.lr.ph.i

if.else.already_gone_crit_edge:                   ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %already_gone

for.body.lr.ph.i:                                 ; preds = %if.else
  %func.i = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %worker.026.i = phi ptr [ %worker.024.i, %for.body.lr.ph.i ], [ %worker.0.i, %for.inc.i.for.body.i_crit_edge ]
  %current_work.i = getelementptr inbounds %struct.worker, ptr %worker.026.i, i32 0, i32 1
  %11 = ptrtoint ptr %current_work.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %current_work.i, align 4
  %cmp.i = icmp eq ptr %12, %work
  br i1 %cmp.i, label %land.lhs.true.i61, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

land.lhs.true.i61:                                ; preds = %for.body.i
  %current_func.i = getelementptr inbounds %struct.worker, ptr %worker.026.i, i32 0, i32 2
  %13 = ptrtoint ptr %current_func.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %current_func.i, align 4
  %15 = ptrtoint ptr %func.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %func.i, align 4
  %cmp3.i = icmp eq ptr %14, %16
  br i1 %cmp3.i, label %if.end15, label %land.lhs.true.i61.for.inc.i_crit_edge

land.lhs.true.i61.for.inc.i_crit_edge:            ; preds = %land.lhs.true.i61
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true.i61.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %17 = ptrtoint ptr %worker.026.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %worker.0.i = load ptr, ptr %worker.026.i, align 4
  %tobool2.not.i = icmp eq ptr %worker.0.i, null
  br i1 %tobool2.not.i, label %for.inc.i.already_gone_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.already_gone_crit_edge:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %already_gone

if.end15:                                         ; preds = %land.lhs.true.i61
  call void @__sanitizer_cov_trace_pc() #23
  %current_pwq = getelementptr inbounds %struct.worker, ptr %worker.026.i, i32 0, i32 3
  %18 = ptrtoint ptr %current_pwq to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %current_pwq, align 4
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then6.if.end16_crit_edge
  %pwq.0 = phi ptr [ %6, %if.then6.if.end16_crit_edge ], [ %19, %if.end15 ]
  %worker.0 = phi ptr [ null, %if.then6.if.end16_crit_edge ], [ %worker.026.i, %if.end15 ]
  %wq = getelementptr inbounds %struct.pool_workqueue, ptr %pwq.0, i32 0, i32 1
  %20 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %wq, align 4
  tail call fastcc void @check_flush_dependency(ptr noundef %21, ptr noundef %work)
  tail call void @debug_object_init_on_stack(ptr noundef %barr, ptr noundef nonnull @work_debug_descr) #21
  %22 = ptrtoint ptr %barr to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 -64, ptr %barr, align 4
  %lockdep_map.i = getelementptr inbounds %struct.work_struct, ptr %barr, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map.i, ptr noundef nonnull @.str.78, ptr noundef nonnull @insert_wq_barrier.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #21
  %entry4.i = getelementptr inbounds %struct.work_struct, ptr %barr, i32 0, i32 1
  %23 = ptrtoint ptr %entry4.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %entry4.i, ptr %entry4.i, align 4
  %prev.i.i = getelementptr inbounds %struct.work_struct, ptr %barr, i32 0, i32 1, i32 1
  %24 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %entry4.i, ptr %prev.i.i, align 4
  %func.i62 = getelementptr inbounds %struct.work_struct, ptr %barr, i32 0, i32 2
  %25 = ptrtoint ptr %func.i62 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr @wq_barrier_func, ptr %func.i62, align 4
  %26 = ptrtoint ptr %barr to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %barr, align 4
  %or.i.i = or i32 %27, 1
  store i32 %or.i.i, ptr %barr, align 4
  %done.i = getelementptr inbounds %struct.wq_barrier, ptr %barr, i32 0, i32 1
  %28 = ptrtoint ptr %done.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %done.i, align 4
  %wait.i.i = getelementptr inbounds %struct.wq_barrier, ptr %barr, i32 0, i32 1, i32 1
  tail call void @__init_swait_queue_head(ptr noundef %wait.i.i, ptr noundef nonnull @.str.72, ptr noundef nonnull @init_completion.__key) #21
  %29 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 2
  %31 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %task.i, align 8
  %task8.i = getelementptr inbounds %struct.wq_barrier, ptr %barr, i32 0, i32 2
  %33 = ptrtoint ptr %task8.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %32, ptr %task8.i, align 4
  %tobool.not.i63 = icmp eq ptr %worker.0, null
  br i1 %tobool.not.i63, label %if.else.i, label %if.then.i64

if.then.i64:                                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #23
  %scheduled.i = getelementptr inbounds %struct.worker, ptr %worker.0, i32 0, i32 5
  %34 = ptrtoint ptr %scheduled.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %scheduled.i, align 4
  %current_color.i = getelementptr inbounds %struct.worker, ptr %worker.0, i32 0, i32 4
  %36 = ptrtoint ptr %current_color.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %current_color.i, align 4
  br label %insert_wq_barrier.exit

if.else.i:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #23
  %entry10.i = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 1
  %38 = ptrtoint ptr %entry10.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %entry10.i, align 4
  %40 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %work, align 4
  %and.i65 = and i32 %41, 8
  %or12.i = or i32 %and.i65, 2
  %shr.i.i66 = lshr i32 %41, 5
  %and.i38.i = and i32 %shr.i.i66, 15
  %or.i37.i = or i32 %41, 8
  store i32 %or.i37.i, ptr %work, align 4
  br label %insert_wq_barrier.exit

insert_wq_barrier.exit:                           ; preds = %if.else.i, %if.then.i64
  %head.0.i = phi ptr [ %35, %if.then.i64 ], [ %39, %if.else.i ]
  %work_color.0.i = phi i32 [ %37, %if.then.i64 ], [ %and.i38.i, %if.else.i ]
  %work_flags.0.i = phi i32 [ 2, %if.then.i64 ], [ %or12.i, %if.else.i ]
  %arrayidx.i67 = getelementptr %struct.pool_workqueue, ptr %pwq.0, i32 0, i32 5, i32 %work_color.0.i
  %42 = ptrtoint ptr %arrayidx.i67 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %arrayidx.i67, align 4
  %inc.i = add i32 %43, 1
  store i32 %inc.i, ptr %arrayidx.i67, align 4
  %shl.i.i = shl i32 %work_color.0.i, 5
  %or15.i = or i32 %work_flags.0.i, %shl.i.i
  %call.i.i = tail call i32 @debug_object_activate(ptr noundef %barr, ptr noundef nonnull @work_debug_descr) #21
  tail call fastcc void @insert_work(ptr noundef %pwq.0, ptr noundef %barr, ptr noundef %head.0.i, i32 noundef %or15.i) #21
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull %call) #21
  br i1 %from_cancel, label %insert_wq_barrier.exit.if.end29_crit_edge, label %land.lhs.true

insert_wq_barrier.exit.if.end29_crit_edge:        ; preds = %insert_wq_barrier.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29

land.lhs.true:                                    ; preds = %insert_wq_barrier.exit
  %44 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %wq, align 4
  %saved_max_active = getelementptr inbounds %struct.workqueue_struct, ptr %45, i32 0, i32 12
  %46 = ptrtoint ptr %saved_max_active to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %saved_max_active, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %47)
  %cmp20 = icmp eq i32 %47, 1
  br i1 %cmp20, label %land.lhs.true.__here_crit_edge, label %lor.lhs.false

land.lhs.true.__here_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %__here

lor.lhs.false:                                    ; preds = %land.lhs.true
  %rescuer = getelementptr inbounds %struct.workqueue_struct, ptr %45, i32 0, i32 10
  %48 = ptrtoint ptr %rescuer to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %rescuer, align 4
  %tobool22.not = icmp eq ptr %49, null
  br i1 %tobool22.not, label %lor.lhs.false.if.end29_crit_edge, label %lor.lhs.false.__here_crit_edge

lor.lhs.false.__here_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %__here

lor.lhs.false.if.end29_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29

__here:                                           ; preds = %lor.lhs.false.__here_crit_edge, %land.lhs.true.__here_crit_edge
  %lockdep_map = getelementptr inbounds %struct.workqueue_struct, ptr %45, i32 0, i32 18
  tail call void @lock_acquire(ptr noundef %lockdep_map, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@start_flush_work, %__here) to i32)) #21
  br label %__here27

__here27:                                         ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #23
  %50 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %wq, align 4
  %lockdep_map26 = getelementptr inbounds %struct.workqueue_struct, ptr %51, i32 0, i32 18
  tail call void @lock_release(ptr noundef %lockdep_map26, i32 noundef ptrtoint (ptr blockaddress(@start_flush_work, %__here27) to i32)) #21
  br label %if.end29

if.end29:                                         ; preds = %__here27, %lor.lhs.false.if.end29_crit_edge, %insert_wq_barrier.exit.if.end29_crit_edge
  %call.i68 = tail call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i68, label %if.end29.rcu_read_unlock.exit78_crit_edge, label %land.lhs.true.i71

if.end29.rcu_read_unlock.exit78_crit_edge:        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit78

land.lhs.true.i71:                                ; preds = %if.end29
  %call1.i69 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i69)
  %tobool.not.i70 = icmp eq i32 %call1.i69, 0
  br i1 %tobool.not.i70, label %land.lhs.true.i71.rcu_read_unlock.exit78_crit_edge, label %land.lhs.true2.i73

land.lhs.true.i71.rcu_read_unlock.exit78_crit_edge: ; preds = %land.lhs.true.i71
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit78

land.lhs.true2.i73:                               ; preds = %land.lhs.true.i71
  %.b4.i72 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i72, label %land.lhs.true2.i73.rcu_read_unlock.exit78_crit_edge, label %if.then.i74

land.lhs.true2.i73.rcu_read_unlock.exit78_crit_edge: ; preds = %land.lhs.true2.i73
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit78

if.then.i74:                                      ; preds = %land.lhs.true2.i73
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 724, ptr noundef nonnull @.str.102) #21
  br label %rcu_read_unlock.exit78

rcu_read_unlock.exit78:                           ; preds = %if.then.i74, %land.lhs.true2.i73.rcu_read_unlock.exit78_crit_edge, %land.lhs.true.i71.rcu_read_unlock.exit78_crit_edge, %if.end29.rcu_read_unlock.exit78_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !699
  br label %cleanup

already_gone:                                     ; preds = %for.inc.i.already_gone_crit_edge, %if.else.already_gone_crit_edge, %if.then6.already_gone_crit_edge
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull %call) #21
  %call.i79 = tail call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i79, label %already_gone.rcu_read_unlock.exit89_crit_edge, label %land.lhs.true.i82

already_gone.rcu_read_unlock.exit89_crit_edge:    ; preds = %already_gone
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit89

land.lhs.true.i82:                                ; preds = %already_gone
  %call1.i80 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i80)
  %tobool.not.i81 = icmp eq i32 %call1.i80, 0
  br i1 %tobool.not.i81, label %land.lhs.true.i82.rcu_read_unlock.exit89_crit_edge, label %land.lhs.true2.i84

land.lhs.true.i82.rcu_read_unlock.exit89_crit_edge: ; preds = %land.lhs.true.i82
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit89

land.lhs.true2.i84:                               ; preds = %land.lhs.true.i82
  %.b4.i83 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i83, label %land.lhs.true2.i84.rcu_read_unlock.exit89_crit_edge, label %if.then.i85

land.lhs.true2.i84.rcu_read_unlock.exit89_crit_edge: ; preds = %land.lhs.true2.i84
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit89

if.then.i85:                                      ; preds = %land.lhs.true2.i84
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 724, ptr noundef nonnull @.str.102) #21
  br label %rcu_read_unlock.exit89

rcu_read_unlock.exit89:                           ; preds = %if.then.i85, %land.lhs.true2.i84.rcu_read_unlock.exit89_crit_edge, %land.lhs.true.i82.rcu_read_unlock.exit89_crit_edge, %already_gone.rcu_read_unlock.exit89_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !699
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit89, %rcu_read_unlock.exit78, %rcu_read_unlock.exit
  %retval.0 = phi i1 [ false, %rcu_read_unlock.exit89 ], [ true, %rcu_read_unlock.exit78 ], [ false, %rcu_read_unlock.exit ]
  %52 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i.i86 = and i32 %52, -16384
  %53 = inttoptr i32 %and.i.i.i.i.i86 to ptr
  %preempt_count.i.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %53, i32 0, i32 1
  %54 = ptrtoint ptr %preempt_count.i.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %preempt_count.i.i.i.i87, align 4
  %sub.i.i.i88 = add i32 %55, -1
  store volatile i32 %sub.i.i.i88, ptr %preempt_count.i.i.i.i87, align 4
  tail call void @rcu_read_unlock_strict() #21
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #21
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @wq_barrier_func(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %done = getelementptr inbounds %struct.wq_barrier, ptr %work, i32 0, i32 1
  tail call void @complete(ptr noundef %done) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @autoremove_wake_function(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cwt_wakefn(ptr noundef %wait, i32 noundef %mode, i32 noundef %sync, ptr noundef %key) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %work = getelementptr inbounds %struct.cwt_wait, ptr %wait, i32 0, i32 1
  %0 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %work, align 4
  %cmp.not = icmp eq ptr %1, %key
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call = tail call i32 @autoremove_wake_function(ptr noundef %wait, i32 noundef %mode, i32 noundef %sync, ptr noundef %key) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.end ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @prepare_to_wait_exclusive(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_wait(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #18

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @apply_wqattrs_prepare(ptr noundef %wq, ptr nocapture noundef readonly %attrs) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !680

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3972, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %1 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %1, i32 noundef 3520, i32 noundef 24) #29
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3520, i32 noundef 12) #29
  %tobool.not.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i, label %if.end.alloc_workqueue_attrs.exit_crit_edge, label %if.end.i

if.end.alloc_workqueue_attrs.exit_crit_edge:      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %alloc_workqueue_attrs.exit

if.end.i:                                         ; preds = %if.end
  %cpumask.i = getelementptr inbounds %struct.workqueue_attrs, ptr %call7.i.i.i, i32 0, i32 1
  %call1.i = tail call zeroext i1 @alloc_cpumask_var(ptr noundef %cpumask.i, i32 noundef 3264) #21
  %3 = ptrtoint ptr %cpumask.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %cpumask.i, align 4
  br i1 %call1.i, label %if.end3.i, label %if.then.i.i

if.end3.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %5 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i.i = add i32 %5, 31
  %6 = lshr i32 %sub.i.i.i, 3
  %mul.i.i.i = and i32 %6, 536870908
  %7 = call ptr @memcpy(ptr %4, ptr @__cpu_possible_mask, i32 %mul.i.i.i)
  br label %alloc_workqueue_attrs.exit

if.then.i.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @free_cpumask_var(ptr noundef %4) #21
  tail call void @kfree(ptr noundef nonnull %call7.i.i.i) #21
  br label %alloc_workqueue_attrs.exit

alloc_workqueue_attrs.exit:                       ; preds = %if.then.i.i, %if.end3.i, %if.end.alloc_workqueue_attrs.exit_crit_edge
  %retval.0.i = phi ptr [ %call7.i.i.i, %if.end3.i ], [ null, %if.then.i.i ], [ null, %if.end.alloc_workqueue_attrs.exit_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %8 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i113 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %8, i32 noundef 3520, i32 noundef 12) #29
  %tobool.not.i114 = icmp eq ptr %call7.i.i.i113, null
  br i1 %tobool.not.i114, label %alloc_workqueue_attrs.exit.out_free.thread_crit_edge, label %if.end.i117

alloc_workqueue_attrs.exit.out_free.thread_crit_edge: ; preds = %alloc_workqueue_attrs.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_free.thread

if.end.i117:                                      ; preds = %alloc_workqueue_attrs.exit
  %cpumask.i115 = getelementptr inbounds %struct.workqueue_attrs, ptr %call7.i.i.i113, i32 0, i32 1
  %call1.i116 = tail call zeroext i1 @alloc_cpumask_var(ptr noundef %cpumask.i115, i32 noundef 3264) #21
  %9 = ptrtoint ptr %cpumask.i115 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %cpumask.i115, align 4
  br i1 %call1.i116, label %alloc_workqueue_attrs.exit123, label %if.then.i.i121

if.then.i.i121:                                   ; preds = %if.end.i117
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @free_cpumask_var(ptr noundef %10) #21
  tail call void @kfree(ptr noundef nonnull %call7.i.i.i113) #21
  br label %out_free.thread

out_free.thread:                                  ; preds = %if.then.i.i121, %alloc_workqueue_attrs.exit.out_free.thread_crit_edge
  %tobool29.not184 = icmp eq ptr %retval.0.i, null
  br i1 %tobool29.not184, label %out_free.thread.free_workqueue_attrs.exit181_crit_edge, label %out_free.thread.if.then.i179_crit_edge

out_free.thread.if.then.i179_crit_edge:           ; preds = %out_free.thread
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i179

out_free.thread.free_workqueue_attrs.exit181_crit_edge: ; preds = %out_free.thread
  call void @__sanitizer_cov_trace_pc() #23
  br label %free_workqueue_attrs.exit181

alloc_workqueue_attrs.exit123:                    ; preds = %if.end.i117
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %11 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i.i118 = add i32 %11, 31
  %12 = lshr i32 %sub.i.i.i118, 3
  %mul.i.i.i119 = and i32 %12, 536870908
  %13 = call ptr @memcpy(ptr %10, ptr @__cpu_possible_mask, i32 %mul.i.i.i119)
  %tobool28.not = icmp eq ptr %call7.i.i, null
  %tobool29.not = icmp eq ptr %retval.0.i, null
  %or.cond = select i1 %tobool28.not, i1 true, i1 %tobool29.not
  br i1 %or.cond, label %alloc_workqueue_attrs.exit123.if.then.i174_crit_edge, label %if.end33

alloc_workqueue_attrs.exit123.if.then.i174_crit_edge: ; preds = %alloc_workqueue_attrs.exit123
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i174

if.end33:                                         ; preds = %alloc_workqueue_attrs.exit123
  %14 = ptrtoint ptr %attrs to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %attrs, align 4
  %16 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %retval.0.i, align 8
  %cpumask.i124 = getelementptr inbounds %struct.workqueue_attrs, ptr %retval.0.i, i32 0, i32 1
  %17 = ptrtoint ptr %cpumask.i124 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %cpumask.i124, align 4
  %cpumask2.i = getelementptr inbounds %struct.workqueue_attrs, ptr %attrs, i32 0, i32 1
  %19 = ptrtoint ptr %cpumask2.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %cpumask2.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i.i125 = add i32 %21, 31
  %22 = lshr i32 %sub.i.i.i125, 3
  %mul.i.i.i126 = and i32 %22, 536870908
  %23 = call ptr @memcpy(ptr %18, ptr %20, i32 %mul.i.i.i126)
  %no_numa.i = getelementptr inbounds %struct.workqueue_attrs, ptr %attrs, i32 0, i32 2
  %24 = ptrtoint ptr %no_numa.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %no_numa.i, align 4, !range !696
  %no_numa3.i = getelementptr inbounds %struct.workqueue_attrs, ptr %retval.0.i, i32 0, i32 2
  %26 = ptrtoint ptr %no_numa3.i to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 %25, ptr %no_numa3.i, align 8
  %27 = load i32, ptr @nr_cpu_ids, align 4
  %28 = load ptr, ptr @wq_unbound_cpumask, align 4
  %29 = load ptr, ptr %cpumask.i124, align 4
  %call.i.i = tail call i32 @__bitmap_and(ptr noundef %29, ptr noundef %29, ptr noundef %28, i32 noundef %27) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %30 = load i32, ptr @nr_cpu_ids, align 4
  %31 = ptrtoint ptr %cpumask.i124 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %cpumask.i124, align 4
  %call.i.i133 = tail call i32 @_find_first_bit_be(ptr noundef %32, i32 noundef %30) #21
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i133, i32 %30)
  %cmp4.i.i = icmp eq i32 %call.i.i133, %30
  br i1 %cmp4.i.i, label %if.then44, label %if.end33.if.end46_crit_edge, !prof !680

if.end33.if.end46_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end46

if.then44:                                        ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #23
  %33 = ptrtoint ptr %cpumask.i124 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %cpumask.i124, align 4
  %35 = load ptr, ptr @wq_unbound_cpumask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %36 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i135 = add i32 %36, 31
  %37 = lshr i32 %sub.i.i135, 3
  %mul.i.i = and i32 %37, 536870908
  %38 = call ptr @memcpy(ptr %34, ptr %35, i32 %mul.i.i)
  br label %if.end46

if.end46:                                         ; preds = %if.then44, %if.end33.if.end46_crit_edge
  %39 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %retval.0.i, align 8
  %41 = ptrtoint ptr %call7.i.i.i113 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %call7.i.i.i113, align 8
  %42 = ptrtoint ptr %cpumask.i115 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %cpumask.i115, align 4
  %44 = ptrtoint ptr %cpumask.i124 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %cpumask.i124, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %46 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i.i138 = add i32 %46, 31
  %47 = lshr i32 %sub.i.i.i138, 3
  %mul.i.i.i139 = and i32 %47, 536870908
  %48 = call ptr @memcpy(ptr %43, ptr %45, i32 %mul.i.i.i139)
  %49 = ptrtoint ptr %no_numa3.i to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %no_numa3.i, align 8, !range !696
  %no_numa3.i141 = getelementptr inbounds %struct.workqueue_attrs, ptr %call7.i.i.i113, i32 0, i32 2
  %51 = ptrtoint ptr %no_numa3.i141 to i32
  call void @__asan_store1_noabort(i32 %51)
  store i8 %50, ptr %no_numa3.i141, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %52 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool.not.i142 = icmp eq i32 %52, 0
  br i1 %tobool.not.i142, label %if.end46.if.end.i145_crit_edge, label %land.rhs.i

if.end46.if.end.i145_crit_edge:                   ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i145

land.rhs.i:                                       ; preds = %if.end46
  %call.i39.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i39.i)
  %cmp.not.i = icmp eq i32 %call.i39.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i145_crit_edge, !prof !680

land.rhs.i.if.end.i145_crit_edge:                 ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i145

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3852, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i145

if.end.i145:                                      ; preds = %do.end.i, %land.rhs.i.if.end.i145_crit_edge, %if.end46.if.end.i145_crit_edge
  %53 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %retval.0.i, align 8
  %add.i.i.i.i.i = add i32 %54, -559038733
  %xor3.i.i.i.i.i = xor i32 %add.i.i.i.i.i, -1874655147
  %sub5.i.i.i.i.i = add i32 %xor3.i.i.i.i.i, -407022722
  %xor6.i.i.i.i.i = xor i32 %sub5.i.i.i.i.i, -559038733
  %or.i1.i.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %sub5.i.i.i.i.i, i32 %sub5.i.i.i.i.i, i32 25) #21
  %sub8.i.i.i.i.i = sub i32 %xor6.i.i.i.i.i, %or.i1.i.i.i.i.i
  %xor9.i.i.i.i.i = xor i32 %sub8.i.i.i.i.i, -1874655147
  %or.i2.i.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %sub8.i.i.i.i.i, i32 %sub8.i.i.i.i.i, i32 16) #21
  %sub11.i.i.i.i.i = sub i32 %xor9.i.i.i.i.i, %or.i2.i.i.i.i.i
  %xor12.i.i.i.i.i = xor i32 %sub11.i.i.i.i.i, %sub5.i.i.i.i.i
  %or.i3.i.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %sub11.i.i.i.i.i, i32 %sub11.i.i.i.i.i, i32 4) #21
  %sub14.i.i.i.i.i = sub i32 %xor12.i.i.i.i.i, %or.i3.i.i.i.i.i
  %xor15.i.i.i.i.i = xor i32 %sub14.i.i.i.i.i, %sub8.i.i.i.i.i
  %or.i4.i.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %sub14.i.i.i.i.i, i32 %sub14.i.i.i.i.i, i32 14) #21
  %sub17.i.i.i.i.i = sub i32 %xor15.i.i.i.i.i, %or.i4.i.i.i.i.i
  %xor18.i.i.i.i.i = xor i32 %sub17.i.i.i.i.i, %sub11.i.i.i.i.i
  %or.i5.i.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %sub17.i.i.i.i.i, i32 %sub17.i.i.i.i.i, i32 24) #21
  %sub20.i.i.i.i.i = sub i32 %xor18.i.i.i.i.i, %or.i5.i.i.i.i.i
  %55 = ptrtoint ptr %cpumask.i124 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %cpumask.i124, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %57 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i.i143 = add i32 %57, 31
  %58 = lshr i32 %sub.i.i.i143, 3
  %mul.i.i.i144 = and i32 %58, 536870908
  %add.i.i.i.i = add nuw nsw i32 %mul.i.i.i144, -559038737
  %add1.i.i.i.i = add i32 %add.i.i.i.i, %sub20.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %mul.i.i.i144)
  %cmp213.i.i.i.i = icmp ugt i32 %mul.i.i.i144, 12
  br i1 %cmp213.i.i.i.i, label %if.end.i145.while.body.i.i.i.i_crit_edge, label %if.end.i145.while.end.i.i.i.i_crit_edge

if.end.i145.while.end.i.i.i.i_crit_edge:          ; preds = %if.end.i145
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end.i.i.i.i

if.end.i145.while.body.i.i.i.i_crit_edge:         ; preds = %if.end.i145
  br label %while.body.i.i.i.i

while.body.i.i.i.i:                               ; preds = %while.body.i.i.i.i.while.body.i.i.i.i_crit_edge, %if.end.i145.while.body.i.i.i.i_crit_edge
  %k.0218.i.i.i.i = phi ptr [ %add.ptr31.i.i.i.i, %while.body.i.i.i.i.while.body.i.i.i.i_crit_edge ], [ %56, %if.end.i145.while.body.i.i.i.i_crit_edge ]
  %c.0217.i.i.i.i = phi i32 [ %xor28.i.i.i.i, %while.body.i.i.i.i.while.body.i.i.i.i_crit_edge ], [ %add1.i.i.i.i, %if.end.i145.while.body.i.i.i.i_crit_edge ]
  %b.0216.i.i.i.i = phi i32 [ %add29.i.i.i.i, %while.body.i.i.i.i.while.body.i.i.i.i_crit_edge ], [ %add1.i.i.i.i, %if.end.i145.while.body.i.i.i.i_crit_edge ]
  %a.0215.i.i.i.i = phi i32 [ %add25.i.i.i.i, %while.body.i.i.i.i.while.body.i.i.i.i_crit_edge ], [ %add1.i.i.i.i, %if.end.i145.while.body.i.i.i.i_crit_edge ]
  %length.addr.0214.i.i.i.i = phi i32 [ %sub30.i.i.i.i, %while.body.i.i.i.i.while.body.i.i.i.i_crit_edge ], [ %mul.i.i.i144, %if.end.i145.while.body.i.i.i.i_crit_edge ]
  %59 = ptrtoint ptr %k.0218.i.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %59, i32 4)
  %60 = load i32, ptr %k.0218.i.i.i.i, align 1
  %add2.i.i.i.i = add i32 %60, %a.0215.i.i.i.i
  %add.ptr.i.i.i.i = getelementptr i8, ptr %k.0218.i.i.i.i, i32 4
  %61 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %61, i32 4)
  %62 = load i32, ptr %add.ptr.i.i.i.i, align 1
  %add4.i.i.i.i = add i32 %62, %b.0216.i.i.i.i
  %add.ptr5.i.i.i.i = getelementptr i8, ptr %k.0218.i.i.i.i, i32 8
  %63 = ptrtoint ptr %add.ptr5.i.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %63, i32 4)
  %64 = load i32, ptr %add.ptr5.i.i.i.i, align 1
  %add7.i.i.i.i = add i32 %64, %c.0217.i.i.i.i
  %sub.i.i.i.i = sub i32 %add2.i.i.i.i, %add7.i.i.i.i
  %or.i.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %add7.i.i.i.i, i32 %add7.i.i.i.i, i32 4) #21
  %xor.i.i.i.i = xor i32 %sub.i.i.i.i, %or.i.i.i.i.i
  %add9.i.i.i.i = add i32 %add7.i.i.i.i, %add4.i.i.i.i
  %sub10.i.i.i.i = sub i32 %add4.i.i.i.i, %xor.i.i.i.i
  %or.i201.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %xor.i.i.i.i, i32 %xor.i.i.i.i, i32 6) #21
  %xor12.i.i.i.i = xor i32 %sub10.i.i.i.i, %or.i201.i.i.i.i
  %add13.i.i.i.i = add i32 %xor.i.i.i.i, %add9.i.i.i.i
  %sub14.i.i.i.i = sub i32 %add9.i.i.i.i, %xor12.i.i.i.i
  %or.i202.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %xor12.i.i.i.i, i32 %xor12.i.i.i.i, i32 8) #21
  %xor16.i.i.i.i = xor i32 %sub14.i.i.i.i, %or.i202.i.i.i.i
  %add17.i.i.i.i = add i32 %xor12.i.i.i.i, %add13.i.i.i.i
  %sub18.i.i.i.i = sub i32 %add13.i.i.i.i, %xor16.i.i.i.i
  %or.i203.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %xor16.i.i.i.i, i32 %xor16.i.i.i.i, i32 16) #21
  %xor20.i.i.i.i = xor i32 %sub18.i.i.i.i, %or.i203.i.i.i.i
  %add21.i.i.i.i = add i32 %xor16.i.i.i.i, %add17.i.i.i.i
  %sub22.i.i.i.i = sub i32 %add17.i.i.i.i, %xor20.i.i.i.i
  %or.i204.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %xor20.i.i.i.i, i32 %xor20.i.i.i.i, i32 19) #21
  %xor24.i.i.i.i = xor i32 %sub22.i.i.i.i, %or.i204.i.i.i.i
  %add25.i.i.i.i = add i32 %xor20.i.i.i.i, %add21.i.i.i.i
  %sub26.i.i.i.i = sub i32 %add21.i.i.i.i, %xor24.i.i.i.i
  %or.i205.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %xor24.i.i.i.i, i32 %xor24.i.i.i.i, i32 4) #21
  %xor28.i.i.i.i = xor i32 %sub26.i.i.i.i, %or.i205.i.i.i.i
  %add29.i.i.i.i = add i32 %xor24.i.i.i.i, %add25.i.i.i.i
  %sub30.i.i.i.i = add i32 %length.addr.0214.i.i.i.i, -12
  %add.ptr31.i.i.i.i = getelementptr i8, ptr %k.0218.i.i.i.i, i32 12
  %cmp.i.i.i.i = icmp ugt i32 %sub30.i.i.i.i, 12
  br i1 %cmp.i.i.i.i, label %while.body.i.i.i.i.while.body.i.i.i.i_crit_edge, label %while.body.i.i.i.i.while.end.i.i.i.i_crit_edge

while.body.i.i.i.i.while.end.i.i.i.i_crit_edge:   ; preds = %while.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end.i.i.i.i

while.body.i.i.i.i.while.body.i.i.i.i_crit_edge:  ; preds = %while.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i.i.i.i

while.end.i.i.i.i:                                ; preds = %while.body.i.i.i.i.while.end.i.i.i.i_crit_edge, %if.end.i145.while.end.i.i.i.i_crit_edge
  %length.addr.0.lcssa.i.i.i.i = phi i32 [ %mul.i.i.i144, %if.end.i145.while.end.i.i.i.i_crit_edge ], [ %sub30.i.i.i.i, %while.body.i.i.i.i.while.end.i.i.i.i_crit_edge ]
  %a.0.lcssa.i.i.i.i = phi i32 [ %add1.i.i.i.i, %if.end.i145.while.end.i.i.i.i_crit_edge ], [ %add25.i.i.i.i, %while.body.i.i.i.i.while.end.i.i.i.i_crit_edge ]
  %b.0.lcssa.i.i.i.i = phi i32 [ %add1.i.i.i.i, %if.end.i145.while.end.i.i.i.i_crit_edge ], [ %add29.i.i.i.i, %while.body.i.i.i.i.while.end.i.i.i.i_crit_edge ]
  %c.0.lcssa.i.i.i.i = phi i32 [ %add1.i.i.i.i, %if.end.i145.while.end.i.i.i.i_crit_edge ], [ %xor28.i.i.i.i, %while.body.i.i.i.i.while.end.i.i.i.i_crit_edge ]
  %k.0.lcssa.i.i.i.i = phi ptr [ %56, %if.end.i145.while.end.i.i.i.i_crit_edge ], [ %add.ptr31.i.i.i.i, %while.body.i.i.i.i.while.end.i.i.i.i_crit_edge ]
  %65 = zext i32 %length.addr.0.lcssa.i.i.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %65, ptr @__sancov_gen_cov_switch_values)
  switch i32 %length.addr.0.lcssa.i.i.i.i, label %while.end.i.i.i.i.wqattrs_hash.exit.i.i_crit_edge [
    i32 12, label %sw.bb.i.i.i.i
    i32 11, label %while.end.i.i.i.i.sw.bb33.i.i.i.i_crit_edge
    i32 10, label %while.end.i.i.i.i.sw.bb38.i.i.i.i_crit_edge
    i32 9, label %while.end.i.i.i.i.sw.bb43.i.i.i.i_crit_edge
    i32 8, label %while.end.i.i.i.i.sw.bb47.i.i.i.i_crit_edge
    i32 7, label %while.end.i.i.i.i.sw.bb52.i.i.i.i_crit_edge
    i32 6, label %while.end.i.i.i.i.sw.bb57.i.i.i.i_crit_edge
    i32 5, label %while.end.i.i.i.i.sw.bb62.i.i.i.i_crit_edge
    i32 4, label %while.end.i.i.i.i.sw.bb66.i.i.i.i_crit_edge
    i32 3, label %while.end.i.i.i.i.sw.bb71.i.i.i.i_crit_edge
    i32 2, label %while.end.i.i.i.i.sw.bb76.i.i.i.i_crit_edge
    i32 1, label %while.end.i.i.i.i.sw.bb81.i.i.i.i_crit_edge
  ]

while.end.i.i.i.i.sw.bb81.i.i.i.i_crit_edge:      ; preds = %while.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb81.i.i.i.i

while.end.i.i.i.i.sw.bb76.i.i.i.i_crit_edge:      ; preds = %while.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb76.i.i.i.i

while.end.i.i.i.i.sw.bb71.i.i.i.i_crit_edge:      ; preds = %while.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb71.i.i.i.i

while.end.i.i.i.i.sw.bb66.i.i.i.i_crit_edge:      ; preds = %while.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb66.i.i.i.i

while.end.i.i.i.i.sw.bb62.i.i.i.i_crit_edge:      ; preds = %while.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb62.i.i.i.i

while.end.i.i.i.i.sw.bb57.i.i.i.i_crit_edge:      ; preds = %while.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb57.i.i.i.i

while.end.i.i.i.i.sw.bb52.i.i.i.i_crit_edge:      ; preds = %while.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb52.i.i.i.i

while.end.i.i.i.i.sw.bb47.i.i.i.i_crit_edge:      ; preds = %while.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb47.i.i.i.i

while.end.i.i.i.i.sw.bb43.i.i.i.i_crit_edge:      ; preds = %while.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb43.i.i.i.i

while.end.i.i.i.i.sw.bb38.i.i.i.i_crit_edge:      ; preds = %while.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb38.i.i.i.i

while.end.i.i.i.i.sw.bb33.i.i.i.i_crit_edge:      ; preds = %while.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb33.i.i.i.i

while.end.i.i.i.i.wqattrs_hash.exit.i.i_crit_edge: ; preds = %while.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %wqattrs_hash.exit.i.i

sw.bb.i.i.i.i:                                    ; preds = %while.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %arrayidx.i.i.i.i = getelementptr i8, ptr %k.0.lcssa.i.i.i.i, i32 11
  %66 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %arrayidx.i.i.i.i, align 1
  %conv.i.i.i.i = zext i8 %67 to i32
  %shl.i.i.i.i = shl nuw i32 %conv.i.i.i.i, 24
  %add32.i.i.i.i = add i32 %shl.i.i.i.i, %c.0.lcssa.i.i.i.i
  br label %sw.bb33.i.i.i.i

sw.bb33.i.i.i.i:                                  ; preds = %sw.bb.i.i.i.i, %while.end.i.i.i.i.sw.bb33.i.i.i.i_crit_edge
  %c.1.i.i.i.i = phi i32 [ %c.0.lcssa.i.i.i.i, %while.end.i.i.i.i.sw.bb33.i.i.i.i_crit_edge ], [ %add32.i.i.i.i, %sw.bb.i.i.i.i ]
  %arrayidx34.i.i.i.i = getelementptr i8, ptr %k.0.lcssa.i.i.i.i, i32 10
  %68 = ptrtoint ptr %arrayidx34.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %arrayidx34.i.i.i.i, align 1
  %conv35.i.i.i.i = zext i8 %69 to i32
  %shl36.i.i.i.i = shl nuw nsw i32 %conv35.i.i.i.i, 16
  %add37.i.i.i.i = add i32 %shl36.i.i.i.i, %c.1.i.i.i.i
  br label %sw.bb38.i.i.i.i

sw.bb38.i.i.i.i:                                  ; preds = %sw.bb33.i.i.i.i, %while.end.i.i.i.i.sw.bb38.i.i.i.i_crit_edge
  %c.2.i.i.i.i = phi i32 [ %c.0.lcssa.i.i.i.i, %while.end.i.i.i.i.sw.bb38.i.i.i.i_crit_edge ], [ %add37.i.i.i.i, %sw.bb33.i.i.i.i ]
  %arrayidx39.i.i.i.i = getelementptr i8, ptr %k.0.lcssa.i.i.i.i, i32 9
  %70 = ptrtoint ptr %arrayidx39.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %70)
  %71 = load i8, ptr %arrayidx39.i.i.i.i, align 1
  %conv40.i.i.i.i = zext i8 %71 to i32
  %shl41.i.i.i.i = shl nuw nsw i32 %conv40.i.i.i.i, 8
  %add42.i.i.i.i = add i32 %shl41.i.i.i.i, %c.2.i.i.i.i
  br label %sw.bb43.i.i.i.i

sw.bb43.i.i.i.i:                                  ; preds = %sw.bb38.i.i.i.i, %while.end.i.i.i.i.sw.bb43.i.i.i.i_crit_edge
  %c.3.i.i.i.i = phi i32 [ %c.0.lcssa.i.i.i.i, %while.end.i.i.i.i.sw.bb43.i.i.i.i_crit_edge ], [ %add42.i.i.i.i, %sw.bb38.i.i.i.i ]
  %arrayidx44.i.i.i.i = getelementptr i8, ptr %k.0.lcssa.i.i.i.i, i32 8
  %72 = ptrtoint ptr %arrayidx44.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %72)
  %73 = load i8, ptr %arrayidx44.i.i.i.i, align 1
  %conv45.i.i.i.i = zext i8 %73 to i32
  %add46.i.i.i.i = add i32 %c.3.i.i.i.i, %conv45.i.i.i.i
  br label %sw.bb47.i.i.i.i

sw.bb47.i.i.i.i:                                  ; preds = %sw.bb43.i.i.i.i, %while.end.i.i.i.i.sw.bb47.i.i.i.i_crit_edge
  %c.4.i.i.i.i = phi i32 [ %c.0.lcssa.i.i.i.i, %while.end.i.i.i.i.sw.bb47.i.i.i.i_crit_edge ], [ %add46.i.i.i.i, %sw.bb43.i.i.i.i ]
  %arrayidx48.i.i.i.i = getelementptr i8, ptr %k.0.lcssa.i.i.i.i, i32 7
  %74 = ptrtoint ptr %arrayidx48.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %74)
  %75 = load i8, ptr %arrayidx48.i.i.i.i, align 1
  %conv49.i.i.i.i = zext i8 %75 to i32
  %shl50.i.i.i.i = shl nuw i32 %conv49.i.i.i.i, 24
  %add51.i.i.i.i = add i32 %shl50.i.i.i.i, %b.0.lcssa.i.i.i.i
  br label %sw.bb52.i.i.i.i

sw.bb52.i.i.i.i:                                  ; preds = %sw.bb47.i.i.i.i, %while.end.i.i.i.i.sw.bb52.i.i.i.i_crit_edge
  %b.1.i.i.i.i = phi i32 [ %b.0.lcssa.i.i.i.i, %while.end.i.i.i.i.sw.bb52.i.i.i.i_crit_edge ], [ %add51.i.i.i.i, %sw.bb47.i.i.i.i ]
  %c.5.i.i.i.i = phi i32 [ %c.0.lcssa.i.i.i.i, %while.end.i.i.i.i.sw.bb52.i.i.i.i_crit_edge ], [ %c.4.i.i.i.i, %sw.bb47.i.i.i.i ]
  %arrayidx53.i.i.i.i = getelementptr i8, ptr %k.0.lcssa.i.i.i.i, i32 6
  %76 = ptrtoint ptr %arrayidx53.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %arrayidx53.i.i.i.i, align 1
  %conv54.i.i.i.i = zext i8 %77 to i32
  %shl55.i.i.i.i = shl nuw nsw i32 %conv54.i.i.i.i, 16
  %add56.i.i.i.i = add i32 %shl55.i.i.i.i, %b.1.i.i.i.i
  br label %sw.bb57.i.i.i.i

sw.bb57.i.i.i.i:                                  ; preds = %sw.bb52.i.i.i.i, %while.end.i.i.i.i.sw.bb57.i.i.i.i_crit_edge
  %b.2.i.i.i.i = phi i32 [ %b.0.lcssa.i.i.i.i, %while.end.i.i.i.i.sw.bb57.i.i.i.i_crit_edge ], [ %add56.i.i.i.i, %sw.bb52.i.i.i.i ]
  %c.6.i.i.i.i = phi i32 [ %c.0.lcssa.i.i.i.i, %while.end.i.i.i.i.sw.bb57.i.i.i.i_crit_edge ], [ %c.5.i.i.i.i, %sw.bb52.i.i.i.i ]
  %arrayidx58.i.i.i.i = getelementptr i8, ptr %k.0.lcssa.i.i.i.i, i32 5
  %78 = ptrtoint ptr %arrayidx58.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %78)
  %79 = load i8, ptr %arrayidx58.i.i.i.i, align 1
  %conv59.i.i.i.i = zext i8 %79 to i32
  %shl60.i.i.i.i = shl nuw nsw i32 %conv59.i.i.i.i, 8
  %add61.i.i.i.i = add i32 %shl60.i.i.i.i, %b.2.i.i.i.i
  br label %sw.bb62.i.i.i.i

sw.bb62.i.i.i.i:                                  ; preds = %sw.bb57.i.i.i.i, %while.end.i.i.i.i.sw.bb62.i.i.i.i_crit_edge
  %b.3.i.i.i.i = phi i32 [ %b.0.lcssa.i.i.i.i, %while.end.i.i.i.i.sw.bb62.i.i.i.i_crit_edge ], [ %add61.i.i.i.i, %sw.bb57.i.i.i.i ]
  %c.7.i.i.i.i = phi i32 [ %c.0.lcssa.i.i.i.i, %while.end.i.i.i.i.sw.bb62.i.i.i.i_crit_edge ], [ %c.6.i.i.i.i, %sw.bb57.i.i.i.i ]
  %arrayidx63.i.i.i.i = getelementptr i8, ptr %k.0.lcssa.i.i.i.i, i32 4
  %80 = ptrtoint ptr %arrayidx63.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %80)
  %81 = load i8, ptr %arrayidx63.i.i.i.i, align 1
  %conv64.i.i.i.i = zext i8 %81 to i32
  %add65.i.i.i.i = add i32 %b.3.i.i.i.i, %conv64.i.i.i.i
  br label %sw.bb66.i.i.i.i

sw.bb66.i.i.i.i:                                  ; preds = %sw.bb62.i.i.i.i, %while.end.i.i.i.i.sw.bb66.i.i.i.i_crit_edge
  %b.4.i.i.i.i = phi i32 [ %b.0.lcssa.i.i.i.i, %while.end.i.i.i.i.sw.bb66.i.i.i.i_crit_edge ], [ %add65.i.i.i.i, %sw.bb62.i.i.i.i ]
  %c.8.i.i.i.i = phi i32 [ %c.0.lcssa.i.i.i.i, %while.end.i.i.i.i.sw.bb66.i.i.i.i_crit_edge ], [ %c.7.i.i.i.i, %sw.bb62.i.i.i.i ]
  %arrayidx67.i.i.i.i = getelementptr i8, ptr %k.0.lcssa.i.i.i.i, i32 3
  %82 = ptrtoint ptr %arrayidx67.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %82)
  %83 = load i8, ptr %arrayidx67.i.i.i.i, align 1
  %conv68.i.i.i.i = zext i8 %83 to i32
  %shl69.i.i.i.i = shl nuw i32 %conv68.i.i.i.i, 24
  %add70.i.i.i.i = add i32 %shl69.i.i.i.i, %a.0.lcssa.i.i.i.i
  br label %sw.bb71.i.i.i.i

sw.bb71.i.i.i.i:                                  ; preds = %sw.bb66.i.i.i.i, %while.end.i.i.i.i.sw.bb71.i.i.i.i_crit_edge
  %a.1.i.i.i.i = phi i32 [ %a.0.lcssa.i.i.i.i, %while.end.i.i.i.i.sw.bb71.i.i.i.i_crit_edge ], [ %add70.i.i.i.i, %sw.bb66.i.i.i.i ]
  %b.5.i.i.i.i = phi i32 [ %b.0.lcssa.i.i.i.i, %while.end.i.i.i.i.sw.bb71.i.i.i.i_crit_edge ], [ %b.4.i.i.i.i, %sw.bb66.i.i.i.i ]
  %c.9.i.i.i.i = phi i32 [ %c.0.lcssa.i.i.i.i, %while.end.i.i.i.i.sw.bb71.i.i.i.i_crit_edge ], [ %c.8.i.i.i.i, %sw.bb66.i.i.i.i ]
  %arrayidx72.i.i.i.i = getelementptr i8, ptr %k.0.lcssa.i.i.i.i, i32 2
  %84 = ptrtoint ptr %arrayidx72.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %84)
  %85 = load i8, ptr %arrayidx72.i.i.i.i, align 1
  %conv73.i.i.i.i = zext i8 %85 to i32
  %shl74.i.i.i.i = shl nuw nsw i32 %conv73.i.i.i.i, 16
  %add75.i.i.i.i = add i32 %shl74.i.i.i.i, %a.1.i.i.i.i
  br label %sw.bb76.i.i.i.i

sw.bb76.i.i.i.i:                                  ; preds = %sw.bb71.i.i.i.i, %while.end.i.i.i.i.sw.bb76.i.i.i.i_crit_edge
  %a.2.i.i.i.i = phi i32 [ %a.0.lcssa.i.i.i.i, %while.end.i.i.i.i.sw.bb76.i.i.i.i_crit_edge ], [ %add75.i.i.i.i, %sw.bb71.i.i.i.i ]
  %b.6.i.i.i.i = phi i32 [ %b.0.lcssa.i.i.i.i, %while.end.i.i.i.i.sw.bb76.i.i.i.i_crit_edge ], [ %b.5.i.i.i.i, %sw.bb71.i.i.i.i ]
  %c.10.i.i.i.i = phi i32 [ %c.0.lcssa.i.i.i.i, %while.end.i.i.i.i.sw.bb76.i.i.i.i_crit_edge ], [ %c.9.i.i.i.i, %sw.bb71.i.i.i.i ]
  %arrayidx77.i.i.i.i = getelementptr i8, ptr %k.0.lcssa.i.i.i.i, i32 1
  %86 = ptrtoint ptr %arrayidx77.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %86)
  %87 = load i8, ptr %arrayidx77.i.i.i.i, align 1
  %conv78.i.i.i.i = zext i8 %87 to i32
  %shl79.i.i.i.i = shl nuw nsw i32 %conv78.i.i.i.i, 8
  %add80.i.i.i.i = add i32 %shl79.i.i.i.i, %a.2.i.i.i.i
  br label %sw.bb81.i.i.i.i

sw.bb81.i.i.i.i:                                  ; preds = %sw.bb76.i.i.i.i, %while.end.i.i.i.i.sw.bb81.i.i.i.i_crit_edge
  %a.3.i.i.i.i = phi i32 [ %a.0.lcssa.i.i.i.i, %while.end.i.i.i.i.sw.bb81.i.i.i.i_crit_edge ], [ %add80.i.i.i.i, %sw.bb76.i.i.i.i ]
  %b.7.i.i.i.i = phi i32 [ %b.0.lcssa.i.i.i.i, %while.end.i.i.i.i.sw.bb81.i.i.i.i_crit_edge ], [ %b.6.i.i.i.i, %sw.bb76.i.i.i.i ]
  %c.11.i.i.i.i = phi i32 [ %c.0.lcssa.i.i.i.i, %while.end.i.i.i.i.sw.bb81.i.i.i.i_crit_edge ], [ %c.10.i.i.i.i, %sw.bb76.i.i.i.i ]
  %88 = ptrtoint ptr %k.0.lcssa.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %88)
  %89 = load i8, ptr %k.0.lcssa.i.i.i.i, align 1
  %conv83.i.i.i.i = zext i8 %89 to i32
  %add84.i.i.i.i = add i32 %a.3.i.i.i.i, %conv83.i.i.i.i
  %xor85.i.i.i.i = xor i32 %c.11.i.i.i.i, %b.7.i.i.i.i
  %or.i206.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %b.7.i.i.i.i, i32 %b.7.i.i.i.i, i32 14) #21
  %sub87.i.i.i.i = sub i32 %xor85.i.i.i.i, %or.i206.i.i.i.i
  %xor88.i.i.i.i = xor i32 %add84.i.i.i.i, %sub87.i.i.i.i
  %or.i207.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %sub87.i.i.i.i, i32 %sub87.i.i.i.i, i32 11) #21
  %sub90.i.i.i.i = sub i32 %xor88.i.i.i.i, %or.i207.i.i.i.i
  %xor91.i.i.i.i = xor i32 %sub90.i.i.i.i, %b.7.i.i.i.i
  %or.i208.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %sub90.i.i.i.i, i32 %sub90.i.i.i.i, i32 25) #21
  %sub93.i.i.i.i = sub i32 %xor91.i.i.i.i, %or.i208.i.i.i.i
  %xor94.i.i.i.i = xor i32 %sub93.i.i.i.i, %sub87.i.i.i.i
  %or.i209.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %sub93.i.i.i.i, i32 %sub93.i.i.i.i, i32 16) #21
  %sub96.i.i.i.i = sub i32 %xor94.i.i.i.i, %or.i209.i.i.i.i
  %xor97.i.i.i.i = xor i32 %sub96.i.i.i.i, %sub90.i.i.i.i
  %or.i210.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %sub96.i.i.i.i, i32 %sub96.i.i.i.i, i32 4) #21
  %sub99.i.i.i.i = sub i32 %xor97.i.i.i.i, %or.i210.i.i.i.i
  %xor100.i.i.i.i = xor i32 %sub99.i.i.i.i, %sub93.i.i.i.i
  %or.i211.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %sub99.i.i.i.i, i32 %sub99.i.i.i.i, i32 14) #21
  %sub102.i.i.i.i = sub i32 %xor100.i.i.i.i, %or.i211.i.i.i.i
  %xor103.i.i.i.i = xor i32 %sub102.i.i.i.i, %sub96.i.i.i.i
  %or.i212.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %sub102.i.i.i.i, i32 %sub102.i.i.i.i, i32 24) #21
  %sub105.i.i.i.i = sub i32 %xor103.i.i.i.i, %or.i212.i.i.i.i
  br label %wqattrs_hash.exit.i.i

wqattrs_hash.exit.i.i:                            ; preds = %sw.bb81.i.i.i.i, %while.end.i.i.i.i.wqattrs_hash.exit.i.i_crit_edge
  %c.12.i.i.i.i = phi i32 [ %c.0.lcssa.i.i.i.i, %while.end.i.i.i.i.wqattrs_hash.exit.i.i_crit_edge ], [ %sub105.i.i.i.i, %sw.bb81.i.i.i.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %90 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %90)
  %tobool.not.i.i146 = icmp eq i32 %90, 0
  br i1 %tobool.not.i.i146, label %wqattrs_hash.exit.i.i.if.end.i.i147_crit_edge, label %land.rhs.i.i

wqattrs_hash.exit.i.i.if.end.i.i147_crit_edge:    ; preds = %wqattrs_hash.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i147

land.rhs.i.i:                                     ; preds = %wqattrs_hash.exit.i.i
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp.not.i.i, label %do.end.i.i, label %land.rhs.i.i.if.end.i.i147_crit_edge, !prof !680

land.rhs.i.i.if.end.i.i147_crit_edge:             ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i147

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3650, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i.i147

if.end.i.i147:                                    ; preds = %do.end.i.i, %land.rhs.i.i.if.end.i.i147_crit_edge, %wqattrs_hash.exit.i.i.if.end.i.i147_crit_edge
  %mul.i.i.i.i = mul i32 %c.12.i.i.i.i, 1640531527
  %shr.i.i.i = lshr i32 %mul.i.i.i.i, 26
  %arrayidx.i.i = getelementptr [64 x %struct.hlist_head], ptr @unbound_pool_hash, i32 0, i32 %shr.i.i.i
  %91 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool27.not.i.i = icmp eq ptr %92, null
  %add.ptr.i.i = getelementptr i8, ptr %92, i32 -516
  %tobool29.not141145.i.i = icmp eq ptr %add.ptr.i.i, null
  %tobool29.not141.i.i = or i1 %tobool27.not.i.i, %tobool29.not141145.i.i
  br i1 %tobool29.not141.i.i, label %if.end.i.i147.if.end56.i.i_crit_edge, label %if.end.i.i147.for.body.i.i_crit_edge

if.end.i.i147.for.body.i.i_crit_edge:             ; preds = %if.end.i.i147
  br label %for.body.i.i

if.end.i.i147.if.end56.i.i_crit_edge:             ; preds = %if.end.i.i147
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end56.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %if.end.i.i147.for.body.i.i_crit_edge
  %pool.0142.i.i = phi ptr [ %add.ptr40.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %add.ptr.i.i, %if.end.i.i147.for.body.i.i_crit_edge ]
  %attrs30.i.i = getelementptr inbounds %struct.worker_pool, ptr %pool.0142.i.i, i32 0, i32 18
  %93 = ptrtoint ptr %attrs30.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %attrs30.i.i, align 4
  %95 = ptrtoint ptr %94 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %94, align 4
  %97 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %retval.0.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %96, i32 %98)
  %cmp.not.i.i.i = icmp eq i32 %96, %98
  br i1 %cmp.not.i.i.i, label %if.end.i.i.i, label %for.body.i.i.for.inc.i.i_crit_edge

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i.i

if.end.i.i.i:                                     ; preds = %for.body.i.i
  %cpumask.i124.i.i = getelementptr inbounds %struct.workqueue_attrs, ptr %94, i32 0, i32 1
  %99 = ptrtoint ptr %cpumask.i124.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %cpumask.i124.i.i, align 4
  %101 = ptrtoint ptr %cpumask.i124 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %cpumask.i124, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %103 = load i32, ptr @nr_cpu_ids, align 4
  %call13.i.i.i.i.i = tail call i32 @__bitmap_equal(ptr noundef %100, ptr noundef %102, i32 noundef %103) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i.i.i.i.i)
  %tobool.i.i.not.i.i = icmp eq i32 %call13.i.i.i.i.i, 0
  br i1 %tobool.i.i.not.i.i, label %if.end.i.i.i.for.inc.i.i_crit_edge, label %if.then32.i.i

if.end.i.i.i.for.inc.i.i_crit_edge:               ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i.i

if.then32.i.i:                                    ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %refcnt.i.i = getelementptr inbounds %struct.worker_pool, ptr %pool.0142.i.i, i32 0, i32 20
  %104 = ptrtoint ptr %refcnt.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %refcnt.i.i, align 4
  %inc.i.i = add i32 %105, 1
  store i32 %inc.i.i, ptr %refcnt.i.i, align 4
  br label %if.end27.i

for.inc.i.i:                                      ; preds = %if.end.i.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %hash_node.i.i = getelementptr inbounds %struct.worker_pool, ptr %pool.0142.i.i, i32 0, i32 19
  %106 = ptrtoint ptr %hash_node.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %hash_node.i.i, align 4
  %tobool36.not.i.i = icmp eq ptr %107, null
  %add.ptr40.i.i = getelementptr i8, ptr %107, i32 -516
  %tobool29.not147.i.i = icmp eq ptr %add.ptr40.i.i, null
  %tobool29.not.i.i = or i1 %tobool36.not.i.i, %tobool29.not147.i.i
  br i1 %tobool29.not.i.i, label %for.inc.i.i.if.end56.i.i_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.i

for.inc.i.i.if.end56.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end56.i.i

if.end56.i.i:                                     ; preds = %for.inc.i.i.if.end56.i.i_crit_edge, %if.end.i.i147.if.end56.i.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %108 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call.i.i.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %108, i32 noundef 3520, i32 noundef 536) #29
  %tobool58.not.i.i = icmp eq ptr %call.i.i.i.i.i, null
  br i1 %tobool58.not.i.i, label %if.end56.i.i.alloc_unbound_pwq.exit.thread_crit_edge, label %lor.lhs.false.i.i

if.end56.i.i.alloc_unbound_pwq.exit.thread_crit_edge: ; preds = %if.end56.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %alloc_unbound_pwq.exit.thread

lor.lhs.false.i.i:                                ; preds = %if.end56.i.i
  %call59.i.i = tail call fastcc i32 @init_worker_pool(ptr noundef nonnull %call.i.i.i.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call59.i.i)
  %cmp60.i.i = icmp slt i32 %call59.i.i, 0
  br i1 %cmp60.i.i, label %lor.lhs.false.i.i.alloc_unbound_pwq.exit.thread.sink.split_crit_edge, label %if.end62.i.i

lor.lhs.false.i.i.alloc_unbound_pwq.exit.thread.sink.split_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %alloc_unbound_pwq.exit.thread.sink.split

if.end62.i.i:                                     ; preds = %lor.lhs.false.i.i
  %dep_map.i.i = getelementptr inbounds %struct.raw_spinlock, ptr %call.i.i.i.i.i, i32 0, i32 4
  %109 = ptrtoint ptr %dep_map.i.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %dep_map.i.i, align 8
  %wait_type_inner.i.i = getelementptr inbounds %struct.raw_spinlock, ptr %call.i.i.i.i.i, i32 0, i32 4, i32 4
  %111 = ptrtoint ptr %wait_type_inner.i.i to i32
  call void @__asan_load1_noabort(i32 %111)
  %112 = load i8, ptr %wait_type_inner.i.i, align 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map.i.i, ptr noundef nonnull @.str.82, ptr noundef %110, i32 noundef 1, i8 noundef zeroext %112, i8 noundef zeroext 0, i8 noundef zeroext 0) #21
  %attrs69.i.i = getelementptr inbounds %struct.worker_pool, ptr %call.i.i.i.i.i, i32 0, i32 18
  %113 = ptrtoint ptr %attrs69.i.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %attrs69.i.i, align 8
  %115 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %retval.0.i, align 8
  %117 = ptrtoint ptr %114 to i32
  call void @__asan_store4_noabort(i32 %117)
  store i32 %116, ptr %114, align 4
  %cpumask.i126.i.i = getelementptr inbounds %struct.workqueue_attrs, ptr %114, i32 0, i32 1
  %118 = ptrtoint ptr %cpumask.i126.i.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %cpumask.i126.i.i, align 4
  %120 = ptrtoint ptr %cpumask.i124 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %cpumask.i124, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %122 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i.i128.i.i = add i32 %122, 31
  %123 = lshr i32 %sub.i.i.i128.i.i, 3
  %mul.i.i.i.i.i = and i32 %123, 536870908
  %124 = call ptr @memcpy(ptr %119, ptr %121, i32 %mul.i.i.i.i.i)
  %125 = ptrtoint ptr %no_numa3.i to i32
  call void @__asan_load1_noabort(i32 %125)
  %126 = load i8, ptr %no_numa3.i, align 8, !range !696
  %no_numa3.i.i.i = getelementptr inbounds %struct.workqueue_attrs, ptr %114, i32 0, i32 2
  %127 = ptrtoint ptr %no_numa3.i.i.i to i32
  call void @__asan_store1_noabort(i32 %127)
  store i8 %126, ptr %no_numa3.i.i.i, align 4
  %node70.i.i = getelementptr inbounds %struct.worker_pool, ptr %call.i.i.i.i.i, i32 0, i32 2
  %128 = ptrtoint ptr %node70.i.i to i32
  call void @__asan_store4_noabort(i32 %128)
  store i32 -1, ptr %node70.i.i, align 8
  %129 = load ptr, ptr %attrs69.i.i, align 8
  %no_numa.i.i = getelementptr inbounds %struct.workqueue_attrs, ptr %129, i32 0, i32 2
  %130 = ptrtoint ptr %no_numa.i.i to i32
  call void @__asan_store1_noabort(i32 %130)
  store i8 0, ptr %no_numa.i.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %131 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %131)
  %tobool.not.i.i.i = icmp eq i32 %131, 0
  br i1 %tobool.not.i.i.i, label %if.end62.i.i.if.end.i130.i.i_crit_edge, label %land.rhs.i.i.i

if.end62.i.i.if.end.i130.i.i_crit_edge:           ; preds = %if.end62.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i130.i.i

land.rhs.i.i.i:                                   ; preds = %if.end62.i.i
  %call.i.i.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %cmp.not.i129.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %cmp.not.i129.i.i, label %do.end.i.i.i, label %land.rhs.i.i.i.if.end.i130.i.i_crit_edge, !prof !680

land.rhs.i.i.i.if.end.i130.i.i_crit_edge:         ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i130.i.i

do.end.i.i.i:                                     ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 551, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i130.i.i

if.end.i130.i.i:                                  ; preds = %do.end.i.i.i, %land.rhs.i.i.i.if.end.i130.i.i_crit_edge, %if.end62.i.i.if.end.i130.i.i_crit_edge
  %call24.i.i.i = tail call i32 @idr_alloc(ptr noundef nonnull @worker_pool_idr, ptr noundef nonnull %call.i.i.i.i.i, i32 noundef 0, i32 noundef 67108863, i32 noundef 3264) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call24.i.i.i)
  %cmp25.i.i.i = icmp sgt i32 %call24.i.i.i, -1
  br i1 %cmp25.i.i.i, label %if.end75.i.i, label %if.end.i130.i.i.alloc_unbound_pwq.exit.thread.sink.split_crit_edge

if.end.i130.i.i.alloc_unbound_pwq.exit.thread.sink.split_crit_edge: ; preds = %if.end.i130.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %alloc_unbound_pwq.exit.thread.sink.split

if.end75.i.i:                                     ; preds = %if.end.i130.i.i
  %id.i.i.i = getelementptr inbounds %struct.worker_pool, ptr %call.i.i.i.i.i, i32 0, i32 3
  %132 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_store4_noabort(i32 %132)
  store i32 %call24.i.i.i, ptr %id.i.i.i, align 4
  %.b120.i.i = load i1, ptr @wq_online, align 1
  br i1 %.b120.i.i, label %land.lhs.true.i.i, label %if.end75.i.i.if.end80.i.i_crit_edge

if.end75.i.i.if.end80.i.i_crit_edge:              ; preds = %if.end75.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end80.i.i

land.lhs.true.i.i:                                ; preds = %if.end75.i.i
  %call77.i.i = tail call fastcc ptr @create_worker(ptr noundef nonnull %call.i.i.i.i.i) #21
  %tobool78.not.i.i = icmp eq ptr %call77.i.i, null
  br i1 %tobool78.not.i.i, label %land.lhs.true.i.i.alloc_unbound_pwq.exit.thread.sink.split_crit_edge, label %land.lhs.true.i.i.if.end80.i.i_crit_edge

land.lhs.true.i.i.if.end80.i.i_crit_edge:         ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end80.i.i

land.lhs.true.i.i.alloc_unbound_pwq.exit.thread.sink.split_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %alloc_unbound_pwq.exit.thread.sink.split

if.end80.i.i:                                     ; preds = %land.lhs.true.i.i.if.end80.i.i_crit_edge, %if.end75.i.i.if.end80.i.i_crit_edge
  %hash_node81.i.i = getelementptr inbounds %struct.worker_pool, ptr %call.i.i.i.i.i, i32 0, i32 19
  %133 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %arrayidx.i.i, align 4
  %135 = ptrtoint ptr %hash_node81.i.i to i32
  call void @__asan_store4_noabort(i32 %135)
  store volatile ptr %134, ptr %hash_node81.i.i, align 4
  %tobool.not.i134.i.i = icmp eq ptr %134, null
  br i1 %tobool.not.i134.i.i, label %if.end80.i.i.hlist_add_head.exit.i.i_crit_edge, label %do.body12.i.i.i

if.end80.i.i.hlist_add_head.exit.i.i_crit_edge:   ; preds = %if.end80.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %hlist_add_head.exit.i.i

do.body12.i.i.i:                                  ; preds = %if.end80.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %pprev.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %134, i32 0, i32 1
  %136 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %136)
  store volatile ptr %hash_node81.i.i, ptr %pprev.i.i.i, align 4
  br label %hlist_add_head.exit.i.i

hlist_add_head.exit.i.i:                          ; preds = %do.body12.i.i.i, %if.end80.i.i.hlist_add_head.exit.i.i_crit_edge
  %137 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %137)
  store volatile ptr %hash_node81.i.i, ptr %arrayidx.i.i, align 4
  %pprev34.i.i.i = getelementptr inbounds %struct.worker_pool, ptr %call.i.i.i.i.i, i32 0, i32 19, i32 1
  %138 = ptrtoint ptr %pprev34.i.i.i to i32
  call void @__asan_store4_noabort(i32 %138)
  store volatile ptr %arrayidx.i.i, ptr %pprev34.i.i.i, align 8
  br label %if.end27.i

if.end27.i:                                       ; preds = %hlist_add_head.exit.i.i, %if.then32.i.i
  %retval.0.i.i148 = phi ptr [ %pool.0142.i.i, %if.then32.i.i ], [ %call.i.i.i.i.i, %hlist_add_head.exit.i.i ]
  %139 = load ptr, ptr @pwq_cache, align 4
  %call.i.i149 = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %139, i32 noundef 3264) #21
  %tobool29.not.i = icmp eq ptr %call.i.i149, null
  br i1 %tobool29.not.i, label %if.end27.i.alloc_unbound_pwq.exit.thread.sink.split_crit_edge, label %if.end31.i

if.end27.i.alloc_unbound_pwq.exit.thread.sink.split_crit_edge: ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %alloc_unbound_pwq.exit.thread.sink.split

if.end31.i:                                       ; preds = %if.end27.i
  %140 = ptrtoint ptr %call.i.i149 to i32
  %and.i.i150 = and i32 %140, 504
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i150)
  %tobool.not.i40.i = icmp eq i32 %and.i.i150, 0
  br i1 %tobool.not.i40.i, label %for.body, label %do.body3.i.i, !prof !679

do.body3.i.i:                                     ; preds = %if.end31.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/workqueue.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3810, 0\0A.popsection", ""() #21, !srcloc !708
  unreachable

alloc_unbound_pwq.exit.thread.sink.split:         ; preds = %if.end27.i.alloc_unbound_pwq.exit.thread.sink.split_crit_edge, %land.lhs.true.i.i.alloc_unbound_pwq.exit.thread.sink.split_crit_edge, %if.end.i130.i.i.alloc_unbound_pwq.exit.thread.sink.split_crit_edge, %lor.lhs.false.i.i.alloc_unbound_pwq.exit.thread.sink.split_crit_edge
  %retval.0.i.i148.sink = phi ptr [ %call.i.i.i.i.i, %land.lhs.true.i.i.alloc_unbound_pwq.exit.thread.sink.split_crit_edge ], [ %call.i.i.i.i.i, %if.end.i130.i.i.alloc_unbound_pwq.exit.thread.sink.split_crit_edge ], [ %call.i.i.i.i.i, %lor.lhs.false.i.i.alloc_unbound_pwq.exit.thread.sink.split_crit_edge ], [ %retval.0.i.i148, %if.end27.i.alloc_unbound_pwq.exit.thread.sink.split_crit_edge ]
  tail call fastcc void @put_unbound_pool(ptr noundef nonnull %retval.0.i.i148.sink) #21
  br label %alloc_unbound_pwq.exit.thread

alloc_unbound_pwq.exit.thread:                    ; preds = %alloc_unbound_pwq.exit.thread.sink.split, %if.end56.i.i.alloc_unbound_pwq.exit.thread_crit_edge
  %dfl_pwq192 = getelementptr inbounds %struct.apply_wqattrs_ctx, ptr %call7.i.i, i32 0, i32 3
  %141 = ptrtoint ptr %dfl_pwq192 to i32
  call void @__asan_store4_noabort(i32 %141)
  store ptr null, ptr %dfl_pwq192, align 8
  br label %if.then.i174

for.body:                                         ; preds = %if.end31.i
  call void @__sanitizer_cov_trace_pc() #23
  %142 = call ptr @memset(ptr %call.i.i149, i32 0, i32 512)
  %143 = ptrtoint ptr %call.i.i149 to i32
  call void @__asan_store4_noabort(i32 %143)
  store ptr %retval.0.i.i148, ptr %call.i.i149, align 512
  %wq8.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %call.i.i149, i32 0, i32 1
  %144 = ptrtoint ptr %wq8.i.i to i32
  call void @__asan_store4_noabort(i32 %144)
  store ptr %wq, ptr %wq8.i.i, align 4
  %flush_color.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %call.i.i149, i32 0, i32 3
  %145 = ptrtoint ptr %flush_color.i.i to i32
  call void @__asan_store4_noabort(i32 %145)
  store i32 -1, ptr %flush_color.i.i, align 4
  %refcnt.i41.i = getelementptr inbounds %struct.pool_workqueue, ptr %call.i.i149, i32 0, i32 4
  %146 = ptrtoint ptr %refcnt.i41.i to i32
  call void @__asan_store4_noabort(i32 %146)
  store i32 1, ptr %refcnt.i41.i, align 16
  %inactive_works.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %call.i.i149, i32 0, i32 8
  %147 = ptrtoint ptr %inactive_works.i.i to i32
  call void @__asan_store4_noabort(i32 %147)
  store volatile ptr %inactive_works.i.i, ptr %inactive_works.i.i, align 4
  %prev.i.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %call.i.i149, i32 0, i32 8, i32 1
  %148 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %148)
  store ptr %inactive_works.i.i, ptr %prev.i.i.i, align 8
  %pwqs_node.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %call.i.i149, i32 0, i32 9
  %149 = ptrtoint ptr %pwqs_node.i.i to i32
  call void @__asan_store4_noabort(i32 %149)
  store volatile ptr %pwqs_node.i.i, ptr %pwqs_node.i.i, align 4
  %prev.i29.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %call.i.i149, i32 0, i32 9, i32 1
  %150 = ptrtoint ptr %prev.i29.i.i to i32
  call void @__asan_store4_noabort(i32 %150)
  store ptr %pwqs_node.i.i, ptr %prev.i29.i.i, align 8
  %mayday_node.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %call.i.i149, i32 0, i32 10
  %151 = ptrtoint ptr %mayday_node.i.i to i32
  call void @__asan_store4_noabort(i32 %151)
  store volatile ptr %mayday_node.i.i, ptr %mayday_node.i.i, align 4
  %prev.i30.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %call.i.i149, i32 0, i32 10, i32 1
  %152 = ptrtoint ptr %prev.i30.i.i to i32
  call void @__asan_store4_noabort(i32 %152)
  store ptr %mayday_node.i.i, ptr %prev.i30.i.i, align 8
  %unbound_release_work.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %call.i.i149, i32 0, i32 11
  tail call void @debug_object_init(ptr noundef %unbound_release_work.i.i, ptr noundef nonnull @work_debug_descr) #21
  %153 = ptrtoint ptr %unbound_release_work.i.i to i32
  call void @__asan_store4_noabort(i32 %153)
  store i32 -64, ptr %unbound_release_work.i.i, align 4
  %lockdep_map.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %call.i.i149, i32 0, i32 11, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map.i.i, ptr noundef nonnull @.str.84, ptr noundef nonnull @init_pwq.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #21
  %entry13.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %call.i.i149, i32 0, i32 11, i32 1
  %154 = ptrtoint ptr %entry13.i.i to i32
  call void @__asan_store4_noabort(i32 %154)
  store volatile ptr %entry13.i.i, ptr %entry13.i.i, align 8
  %prev.i31.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %call.i.i149, i32 0, i32 11, i32 1, i32 1
  %155 = ptrtoint ptr %prev.i31.i.i to i32
  call void @__asan_store4_noabort(i32 %155)
  store ptr %entry13.i.i, ptr %prev.i31.i.i, align 4
  %func.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %call.i.i149, i32 0, i32 11, i32 2
  %156 = ptrtoint ptr %func.i.i to i32
  call void @__asan_store4_noabort(i32 %156)
  store ptr @pwq_unbound_release_workfn, ptr %func.i.i, align 8
  %dfl_pwq = getelementptr inbounds %struct.apply_wqattrs_ctx, ptr %call7.i.i, i32 0, i32 3
  %157 = ptrtoint ptr %dfl_pwq to i32
  call void @__asan_store4_noabort(i32 %157)
  store ptr %call.i.i149, ptr %dfl_pwq, align 8
  %158 = ptrtoint ptr %cpumask.i115 to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %cpumask.i115, align 4
  %160 = ptrtoint ptr %cpumask.i124 to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %cpumask.i124, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %162 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i.i152 = add i32 %162, 31
  %163 = lshr i32 %sub.i.i.i152, 3
  %mul.i.i.i153 = and i32 %163, 536870908
  %164 = call ptr @memcpy(ptr %159, ptr %161, i32 %mul.i.i.i153)
  %165 = load ptr, ptr %dfl_pwq, align 8
  %refcnt = getelementptr inbounds %struct.pool_workqueue, ptr %165, i32 0, i32 4
  %166 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load i32, ptr %refcnt, align 16
  %inc = add i32 %167, 1
  store i32 %inc, ptr %refcnt, align 16
  %168 = load ptr, ptr %dfl_pwq, align 8
  %pwq_tbl64 = getelementptr inbounds %struct.apply_wqattrs_ctx, ptr %call7.i.i, i32 0, i32 4
  %169 = ptrtoint ptr %pwq_tbl64 to i32
  call void @__asan_store4_noabort(i32 %169)
  store ptr %168, ptr %pwq_tbl64, align 4
  %170 = ptrtoint ptr %attrs to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %attrs, align 4
  %172 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_store4_noabort(i32 %172)
  store i32 %171, ptr %retval.0.i, align 8
  %173 = load ptr, ptr %cpumask.i124, align 4
  %174 = ptrtoint ptr %cpumask2.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %cpumask2.i, align 4
  %176 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i.i156 = add i32 %176, 31
  %177 = lshr i32 %sub.i.i.i156, 3
  %mul.i.i.i157 = and i32 %177, 536870908
  %178 = call ptr @memcpy(ptr %173, ptr %175, i32 %mul.i.i.i157)
  %179 = ptrtoint ptr %no_numa.i to i32
  call void @__asan_load1_noabort(i32 %179)
  %180 = load i8, ptr %no_numa.i, align 4, !range !696
  %181 = ptrtoint ptr %no_numa3.i to i32
  call void @__asan_store1_noabort(i32 %181)
  store i8 %180, ptr %no_numa3.i, align 8
  %182 = load i32, ptr @nr_cpu_ids, align 4
  %183 = load ptr, ptr %cpumask.i124, align 4
  %call.i.i166 = tail call i32 @__bitmap_and(ptr noundef %183, ptr noundef %183, ptr noundef nonnull @__cpu_possible_mask, i32 noundef %182) #21
  %attrs70 = getelementptr inbounds %struct.apply_wqattrs_ctx, ptr %call7.i.i, i32 0, i32 1
  %184 = ptrtoint ptr %attrs70 to i32
  call void @__asan_store4_noabort(i32 %184)
  store ptr %retval.0.i, ptr %attrs70, align 4
  %185 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %185)
  store ptr %wq, ptr %call7.i.i, align 8
  %186 = ptrtoint ptr %cpumask.i115 to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %cpumask.i115, align 4
  tail call void @free_cpumask_var(ptr noundef %187) #21
  tail call void @kfree(ptr noundef nonnull %call7.i.i.i113) #21
  br label %cleanup

if.then.i174:                                     ; preds = %alloc_unbound_pwq.exit.thread, %alloc_workqueue_attrs.exit123.if.then.i174_crit_edge
  %188 = ptrtoint ptr %cpumask.i115 to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load ptr, ptr %cpumask.i115, align 4
  tail call void @free_cpumask_var(ptr noundef %189) #21
  tail call void @kfree(ptr noundef nonnull %call7.i.i.i113) #21
  br i1 %tobool29.not, label %if.then.i174.free_workqueue_attrs.exit181_crit_edge, label %if.then.i174.if.then.i179_crit_edge

if.then.i174.if.then.i179_crit_edge:              ; preds = %if.then.i174
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i179

if.then.i174.free_workqueue_attrs.exit181_crit_edge: ; preds = %if.then.i174
  call void @__sanitizer_cov_trace_pc() #23
  br label %free_workqueue_attrs.exit181

if.then.i179:                                     ; preds = %if.then.i174.if.then.i179_crit_edge, %out_free.thread.if.then.i179_crit_edge
  %cpumask.i178 = getelementptr inbounds %struct.workqueue_attrs, ptr %retval.0.i, i32 0, i32 1
  %190 = ptrtoint ptr %cpumask.i178 to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %cpumask.i178, align 4
  tail call void @free_cpumask_var(ptr noundef %191) #21
  tail call void @kfree(ptr noundef nonnull %retval.0.i) #21
  br label %free_workqueue_attrs.exit181

free_workqueue_attrs.exit181:                     ; preds = %if.then.i179, %if.then.i174.free_workqueue_attrs.exit181_crit_edge, %out_free.thread.free_workqueue_attrs.exit181_crit_edge
  tail call fastcc void @apply_wqattrs_cleanup(ptr noundef %call7.i.i)
  br label %cleanup

cleanup:                                          ; preds = %free_workqueue_attrs.exit181, %for.body
  %retval.0 = phi ptr [ null, %free_workqueue_attrs.exit181 ], [ %call7.i.i, %for.body ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @apply_wqattrs_commit(ptr nocapture noundef %ctx) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ctx, align 4
  %mutex = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 2
  tail call void @mutex_lock_nested(ptr noundef %mutex, i32 noundef 0) #21
  %2 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ctx, align 4
  %unbound_attrs = getelementptr inbounds %struct.workqueue_struct, ptr %3, i32 0, i32 13
  %4 = ptrtoint ptr %unbound_attrs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %unbound_attrs, align 32
  %attrs = getelementptr inbounds %struct.apply_wqattrs_ctx, ptr %ctx, i32 0, i32 1
  %6 = ptrtoint ptr %attrs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %attrs, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %10 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %5, align 4
  %cpumask.i = getelementptr inbounds %struct.workqueue_attrs, ptr %5, i32 0, i32 1
  %11 = ptrtoint ptr %cpumask.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %cpumask.i, align 4
  %cpumask2.i = getelementptr inbounds %struct.workqueue_attrs, ptr %7, i32 0, i32 1
  %13 = ptrtoint ptr %cpumask2.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %cpumask2.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %15 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i.i = add i32 %15, 31
  %16 = lshr i32 %sub.i.i.i, 3
  %mul.i.i.i = and i32 %16, 536870908
  %17 = call ptr @memcpy(ptr %12, ptr %14, i32 %mul.i.i.i)
  %no_numa.i = getelementptr inbounds %struct.workqueue_attrs, ptr %7, i32 0, i32 2
  %18 = ptrtoint ptr %no_numa.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %no_numa.i, align 4, !range !696
  %no_numa3.i = getelementptr inbounds %struct.workqueue_attrs, ptr %5, i32 0, i32 2
  %20 = ptrtoint ptr %no_numa3.i to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %19, ptr %no_numa3.i, align 4
  %21 = load ptr, ptr %ctx, align 4
  %pwq_tbl = getelementptr inbounds %struct.apply_wqattrs_ctx, ptr %ctx, i32 0, i32 4
  %22 = ptrtoint ptr %pwq_tbl to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pwq_tbl, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %24 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool.not.i = icmp eq i32 %24, 0
  br i1 %tobool.not.i, label %entry.numa_pwq_tbl_install.exit_crit_edge, label %land.rhs.i

entry.numa_pwq_tbl_install.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %numa_pwq_tbl_install.exit

land.rhs.i:                                       ; preds = %entry
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !680

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3927, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %.pr.i = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr.i)
  %tobool26.not.i = icmp eq i32 %.pr.i, 0
  br i1 %tobool26.not.i, label %if.end.i.numa_pwq_tbl_install.exit_crit_edge, label %land.rhs27.i

if.end.i.numa_pwq_tbl_install.exit_crit_edge:     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %numa_pwq_tbl_install.exit

land.rhs27.i:                                     ; preds = %if.end.i
  %dep_map.i = getelementptr inbounds %struct.workqueue_struct, ptr %21, i32 0, i32 2, i32 5
  %call.i1.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i1.i)
  %cmp29.not.i = icmp eq i32 %call.i1.i, 0
  br i1 %cmp29.not.i, label %do.end48.i, label %land.rhs27.i.numa_pwq_tbl_install.exit_crit_edge, !prof !680

land.rhs27.i.numa_pwq_tbl_install.exit_crit_edge: ; preds = %land.rhs27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %numa_pwq_tbl_install.exit

do.end48.i:                                       ; preds = %land.rhs27.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3928, i32 noundef 9, ptr noundef null) #21
  br label %numa_pwq_tbl_install.exit

numa_pwq_tbl_install.exit:                        ; preds = %do.end48.i, %land.rhs27.i.numa_pwq_tbl_install.exit_crit_edge, %if.end.i.numa_pwq_tbl_install.exit_crit_edge, %entry.numa_pwq_tbl_install.exit_crit_edge
  tail call fastcc void @link_pwq(ptr noundef %23) #21
  %numa_pwq_tbl.i = getelementptr inbounds %struct.workqueue_struct, ptr %21, i32 0, i32 24
  %25 = ptrtoint ptr %numa_pwq_tbl.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile ptr, ptr %numa_pwq_tbl.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !732
  %27 = ptrtoint ptr %numa_pwq_tbl.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %23, ptr %numa_pwq_tbl.i, align 4
  %28 = ptrtoint ptr %pwq_tbl to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %26, ptr %pwq_tbl, align 4
  %dfl_pwq = getelementptr inbounds %struct.apply_wqattrs_ctx, ptr %ctx, i32 0, i32 3
  %29 = ptrtoint ptr %dfl_pwq to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %dfl_pwq, align 4
  tail call fastcc void @link_pwq(ptr noundef %30)
  %31 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %ctx, align 4
  %dfl_pwq6 = getelementptr inbounds %struct.workqueue_struct, ptr %32, i32 0, i32 14
  %33 = ptrtoint ptr %dfl_pwq6 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %dfl_pwq6, align 4
  %35 = ptrtoint ptr %dfl_pwq to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %dfl_pwq, align 4
  store ptr %36, ptr %dfl_pwq6, align 4
  store ptr %34, ptr %dfl_pwq, align 4
  %37 = load ptr, ptr %ctx, align 4
  %mutex12 = getelementptr inbounds %struct.workqueue_struct, ptr %37, i32 0, i32 2
  tail call void @mutex_unlock(ptr noundef %mutex12) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @apply_wqattrs_cleanup(ptr noundef %ctx) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %ctx, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

for.body:                                         ; preds = %entry
  %pwq_tbl = getelementptr inbounds %struct.apply_wqattrs_ctx, ptr %ctx, i32 0, i32 4
  %0 = ptrtoint ptr %pwq_tbl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pwq_tbl, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %for.body.put_pwq_unlocked.exit_crit_edge, label %if.then.i

for.body.put_pwq_unlocked.exit_crit_edge:         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %put_pwq_unlocked.exit

if.then.i:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 512
  tail call void @_raw_spin_lock_irq(ptr noundef %3) #21
  tail call fastcc void @put_pwq(ptr noundef nonnull %1) #21
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %1, align 512
  tail call void @_raw_spin_unlock_irq(ptr noundef %5) #21
  br label %put_pwq_unlocked.exit

put_pwq_unlocked.exit:                            ; preds = %if.then.i, %for.body.put_pwq_unlocked.exit_crit_edge
  %dfl_pwq = getelementptr inbounds %struct.apply_wqattrs_ctx, ptr %ctx, i32 0, i32 3
  %6 = ptrtoint ptr %dfl_pwq to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dfl_pwq, align 4
  %tobool.not.i6 = icmp eq ptr %7, null
  br i1 %tobool.not.i6, label %put_pwq_unlocked.exit.put_pwq_unlocked.exit8_crit_edge, label %if.then.i7

put_pwq_unlocked.exit.put_pwq_unlocked.exit8_crit_edge: ; preds = %put_pwq_unlocked.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %put_pwq_unlocked.exit8

if.then.i7:                                       ; preds = %put_pwq_unlocked.exit
  call void @__sanitizer_cov_trace_pc() #23
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 512
  tail call void @_raw_spin_lock_irq(ptr noundef %9) #21
  tail call fastcc void @put_pwq(ptr noundef nonnull %7) #21
  %10 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %7, align 512
  tail call void @_raw_spin_unlock_irq(ptr noundef %11) #21
  br label %put_pwq_unlocked.exit8

put_pwq_unlocked.exit8:                           ; preds = %if.then.i7, %put_pwq_unlocked.exit.put_pwq_unlocked.exit8_crit_edge
  %attrs = getelementptr inbounds %struct.apply_wqattrs_ctx, ptr %ctx, i32 0, i32 1
  %12 = ptrtoint ptr %attrs to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %attrs, align 4
  %tobool.not.i9 = icmp eq ptr %13, null
  br i1 %tobool.not.i9, label %put_pwq_unlocked.exit8.free_workqueue_attrs.exit_crit_edge, label %if.then.i10

put_pwq_unlocked.exit8.free_workqueue_attrs.exit_crit_edge: ; preds = %put_pwq_unlocked.exit8
  call void @__sanitizer_cov_trace_pc() #23
  br label %free_workqueue_attrs.exit

if.then.i10:                                      ; preds = %put_pwq_unlocked.exit8
  call void @__sanitizer_cov_trace_pc() #23
  %cpumask.i = getelementptr inbounds %struct.workqueue_attrs, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %cpumask.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %cpumask.i, align 4
  tail call void @free_cpumask_var(ptr noundef %15) #21
  tail call void @kfree(ptr noundef nonnull %13) #21
  br label %free_workqueue_attrs.exit

free_workqueue_attrs.exit:                        ; preds = %if.then.i10, %put_pwq_unlocked.exit8.free_workqueue_attrs.exit_crit_edge
  tail call void @kfree(ptr noundef nonnull %ctx) #21
  br label %if.end

if.end:                                           ; preds = %free_workqueue_attrs.exit, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @put_unbound_pool(ptr noundef %pool) #0 align 64 {
entry:
  %detach_completion = alloca %struct.completion, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %detach_completion) #21
  %0 = getelementptr inbounds i8, ptr %detach_completion, i32 4
  %1 = call ptr @memset(ptr %0, i32 255, i32 52)
  %2 = ptrtoint ptr %detach_completion to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %detach_completion, align 4
  %wait.i = getelementptr inbounds %struct.completion, ptr %detach_completion, i32 0, i32 1
  call void @__init_swait_queue_head(ptr noundef %wait.i, ptr noundef nonnull @.str.72, ptr noundef nonnull @init_completion.__key) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %3 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !680

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3582, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %refcnt = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 20
  %4 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %refcnt, align 4
  %dec = add i32 %5, -1
  store i32 %dec, ptr %refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %tobool25.not = icmp eq i32 %dec, 0
  br i1 %tobool25.not, label %if.end27, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end27:                                         ; preds = %if.end
  %cpu = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 1
  %6 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %7)
  %cmp29 = icmp sgt i32 %7, -1
  br i1 %cmp29, label %do.end47, label %lor.lhs.false.critedge, !prof !680

do.end47:                                         ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3588, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

lor.lhs.false.critedge:                           ; preds = %if.end27
  %worklist = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 7
  %8 = ptrtoint ptr %worklist to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile ptr, ptr %worklist, align 4
  %cmp.i.not = icmp eq ptr %9, %worklist
  br i1 %cmp.i.not, label %if.end98, label %do.end82, !prof !679

do.end82:                                         ; preds = %lor.lhs.false.critedge
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3589, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end98:                                         ; preds = %lor.lhs.false.critedge
  %id = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 3
  %10 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %11)
  %cmp99 = icmp sgt i32 %11, -1
  br i1 %cmp99, label %if.then100, label %if.end98.if.end103_crit_edge

if.end98.if.end103_crit_edge:                     ; preds = %if.end98
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end103

if.then100:                                       ; preds = %if.end98
  call void @__sanitizer_cov_trace_pc() #23
  %call102 = call ptr @idr_remove(ptr noundef nonnull @worker_pool_idr, i32 noundef %11) #21
  br label %if.end103

if.end103:                                        ; preds = %if.then100, %if.end98.if.end103_crit_edge
  %hash_node = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 19
  %pprev.i.i.i = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 19, i32 1
  %12 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pprev.i.i.i, align 4
  %tobool.not.i.not.i.i = icmp eq ptr %13, null
  br i1 %tobool.not.i.not.i.i, label %if.end103.hash_del.exit_crit_edge, label %if.then.i.i

if.end103.hash_del.exit_crit_edge:                ; preds = %if.end103
  call void @__sanitizer_cov_trace_pc() #23
  br label %hash_del.exit

if.then.i.i:                                      ; preds = %if.end103
  %14 = ptrtoint ptr %hash_node to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %hash_node, align 4
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %15, ptr %13, align 4
  %tobool.not.i3.i.i = icmp eq ptr %15, null
  br i1 %tobool.not.i3.i.i, label %if.then.i.i.__hlist_del.exit.i.i_crit_edge, label %do.body13.i.i.i

if.then.i.i.__hlist_del.exit.i.i_crit_edge:       ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__hlist_del.exit.i.i

do.body13.i.i.i:                                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %pprev14.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %15, i32 0, i32 1
  %17 = ptrtoint ptr %pprev14.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %13, ptr %pprev14.i.i.i, align 4
  br label %__hlist_del.exit.i.i

__hlist_del.exit.i.i:                             ; preds = %do.body13.i.i.i, %if.then.i.i.__hlist_del.exit.i.i_crit_edge
  %18 = ptrtoint ptr %hash_node to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr null, ptr %hash_node, align 4
  %19 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr null, ptr %pprev.i.i.i, align 4
  br label %hash_del.exit

hash_del.exit:                                    ; preds = %__hlist_del.exit.i.i, %if.end103.hash_del.exit_crit_edge
  %20 = call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task.i, align 8
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !733
  store volatile ptr %23, ptr @manager_wait, align 4
  %flags.i = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 4
  br label %__here

__here:                                           ; preds = %if.end181, %hash_del.exit
  %24 = call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 2
  %26 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %task, align 8
  %task_state_change = getelementptr inbounds %struct.task_struct, ptr %27, i32 0, i32 212
  %28 = ptrtoint ptr %task_state_change to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 ptrtoint (ptr blockaddress(@put_unbound_pool, %__here) to i32), ptr %task_state_change, align 4
  %29 = load ptr, ptr %task, align 8
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile i32 2, ptr %29, align 128
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !734
  call void @_raw_spin_lock_irq(ptr noundef %pool) #21
  %31 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %flags.i, align 4
  %and.i262 = and i32 %32, 1
  %tobool.not.i = icmp eq i32 %and.i262, 0
  br i1 %tobool.not.i, label %for.end, label %if.end181

if.end181:                                        ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #23
  call void @_raw_spin_unlock_irq(ptr noundef %pool) #21
  call void @schedule() #21
  br label %__here

for.end:                                          ; preds = %__here
  call fastcc void @finish_rcuwait(ptr noundef nonnull @manager_wait)
  %33 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %flags.i, align 4
  %or = or i32 %34, 1
  store i32 %or, ptr %flags.i, align 4
  %idle_list.i = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 10
  %35 = ptrtoint ptr %idle_list.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile ptr, ptr %idle_list.i, align 4
  %cmp.i.not.i266 = icmp eq ptr %36, %idle_list.i
  %tobool190.not265267 = icmp eq ptr %36, null
  %tobool190.not268 = or i1 %cmp.i.not.i266, %tobool190.not265267
  br i1 %tobool190.not268, label %for.end.while.end_crit_edge, label %for.end.while.body_crit_edge

for.end.while.body_crit_edge:                     ; preds = %for.end
  br label %while.body

for.end.while.end_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %for.end.while.body_crit_edge
  %37 = phi ptr [ %39, %while.body.while.body_crit_edge ], [ %36, %for.end.while.body_crit_edge ]
  call fastcc void @destroy_worker(ptr noundef nonnull %37)
  %38 = ptrtoint ptr %idle_list.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile ptr, ptr %idle_list.i, align 4
  %cmp.i.not.i = icmp eq ptr %39, %idle_list.i
  %tobool190.not265 = icmp eq ptr %39, null
  %tobool190.not = or i1 %cmp.i.not.i, %tobool190.not265
  br i1 %tobool190.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %for.end.while.end_crit_edge
  %nr_workers = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 8
  %40 = ptrtoint ptr %nr_workers to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %nr_workers, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool192.not = icmp eq i32 %41, 0
  br i1 %tobool192.not, label %lor.rhs, label %while.end.do.end209_crit_edge

while.end.do.end209_crit_edge:                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end209

lor.rhs:                                          ; preds = %while.end
  %nr_idle = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 9
  %42 = ptrtoint ptr %nr_idle to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %nr_idle, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool193.not = icmp eq i32 %43, 0
  br i1 %tobool193.not, label %lor.rhs.if.end215_crit_edge, label %lor.rhs.do.end209_crit_edge, !prof !679

lor.rhs.do.end209_crit_edge:                      ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end209

lor.rhs.if.end215_crit_edge:                      ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end215

do.end209:                                        ; preds = %lor.rhs.do.end209_crit_edge, %while.end.do.end209_crit_edge
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3610, i32 noundef 9, ptr noundef null) #21
  br label %if.end215

if.end215:                                        ; preds = %do.end209, %lor.rhs.if.end215_crit_edge
  call void @_raw_spin_unlock_irq(ptr noundef %pool) #21
  call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_attach_mutex, i32 noundef 0) #21
  %workers = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 15
  %44 = ptrtoint ptr %workers to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile ptr, ptr %workers, align 4
  %cmp.i263.not = icmp eq ptr %45, %workers
  br i1 %cmp.i263.not, label %if.end215.if.end227_crit_edge, label %if.then225

if.end215.if.end227_crit_edge:                    ; preds = %if.end215
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end227

if.then225:                                       ; preds = %if.end215
  call void @__sanitizer_cov_trace_pc() #23
  %detach_completion226 = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 16
  %46 = ptrtoint ptr %detach_completion226 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %detach_completion, ptr %detach_completion226, align 4
  br label %if.end227

if.end227:                                        ; preds = %if.then225, %if.end215.if.end227_crit_edge
  call void @mutex_unlock(ptr noundef nonnull @wq_pool_attach_mutex) #21
  %detach_completion228 = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 16
  %47 = ptrtoint ptr %detach_completion228 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %detach_completion228, align 4
  %tobool229.not = icmp eq ptr %48, null
  br i1 %tobool229.not, label %if.end227.if.end232_crit_edge, label %if.then230

if.end227.if.end232_crit_edge:                    ; preds = %if.end227
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end232

if.then230:                                       ; preds = %if.end227
  call void @__sanitizer_cov_trace_pc() #23
  call void @wait_for_completion(ptr noundef nonnull %48) #21
  br label %if.end232

if.end232:                                        ; preds = %if.then230, %if.end227.if.end232_crit_edge
  %idle_timer = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 11
  %call233 = call i32 @del_timer_sync(ptr noundef %idle_timer) #21
  %mayday_timer = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 12
  %call234 = call i32 @del_timer_sync(ptr noundef %mayday_timer) #21
  %rcu = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 21
  call void @call_rcu(ptr noundef %rcu, ptr noundef nonnull @rcu_free_pool) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end232, %do.end82, %do.end47, %if.end.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %detach_completion) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kmem_cache_alloc(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @idr_remove(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @finish_rcuwait(ptr nocapture noundef readnone %w) #19 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  store volatile ptr null, ptr @manager_wait, align 4
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %0 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task72 = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task72 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task72, align 8
  %task_state_change = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 212
  %4 = ptrtoint ptr %task_state_change to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 ptrtoint (ptr blockaddress(@finish_rcuwait, %__here) to i32), ptr %task_state_change, align 4
  %5 = load ptr, ptr %task72, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile i32 0, ptr %5, align 128
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @destroy_worker(ptr noundef %worker) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %pool1 = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 7
  %0 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pool1, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %entry
  %dep_map = getelementptr inbounds %struct.raw_spinlock, ptr %1, i32 0, i32 4
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !680

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2007, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %current_work = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 1
  %3 = ptrtoint ptr %current_work to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %current_work, align 4
  %tobool26.not = icmp eq ptr %4, null
  br i1 %tobool26.not, label %lor.lhs.false.critedge, label %do.end42, !prof !679

do.end42:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2010, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

lor.lhs.false.critedge:                           ; preds = %if.end
  %scheduled = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 5
  %5 = ptrtoint ptr %scheduled to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %scheduled, align 4
  %cmp.i.not = icmp eq ptr %6, %scheduled
  br i1 %cmp.i.not, label %lor.lhs.false92.critedge, label %do.end77, !prof !679

do.end77:                                         ; preds = %lor.lhs.false.critedge
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2011, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

lor.lhs.false92.critedge:                         ; preds = %lor.lhs.false.critedge
  %flags = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 10
  %7 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %flags, align 4
  %and = and i32 %8, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool94.not = icmp eq i32 %and, 0
  br i1 %tobool94.not, label %do.end112, label %if.end128, !prof !680

do.end112:                                        ; preds = %lor.lhs.false92.critedge
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2012, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end128:                                        ; preds = %lor.lhs.false92.critedge
  %nr_workers = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 8
  %9 = ptrtoint ptr %nr_workers to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %nr_workers, align 4
  %dec = add i32 %10, -1
  store i32 %dec, ptr %nr_workers, align 4
  %nr_idle = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 9
  %11 = ptrtoint ptr %nr_idle to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %nr_idle, align 4
  %dec129 = add i32 %12, -1
  store i32 %dec129, ptr %nr_idle, align 4
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %worker) #21
  br i1 %call.i.i, label %if.end.i.i, label %if.end128.list_del_init.exit_crit_edge

if.end128.list_del_init.exit_crit_edge:           ; preds = %if.end128
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %if.end128
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %worker, i32 0, i32 1
  %13 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %prev.i.i, align 4
  %15 = ptrtoint ptr %worker to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %worker, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %14, ptr %prev1.i.i.i, align 4
  %18 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %16, ptr %14, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %if.end128.list_del_init.exit_crit_edge
  %19 = ptrtoint ptr %worker to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %worker, ptr %worker, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %worker, i32 0, i32 1
  %20 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %worker, ptr %prev.i3.i, align 4
  %21 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %flags, align 4
  %or = or i32 %22, 2
  store i32 %or, ptr %flags, align 4
  %task = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 6
  %23 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %task, align 4
  %call131 = tail call i32 @wake_up_process(ptr noundef %24) #21
  br label %cleanup

cleanup:                                          ; preds = %list_del_init.exit, %do.end112, %do.end77, %do.end42
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_free_pool(ptr noundef %rcu) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %worker_ida = getelementptr i8, ptr %rcu, i32 -68
  tail call void @ida_destroy(ptr noundef %worker_ida) #21
  %attrs = getelementptr i8, ptr %rcu, i32 -16
  %0 = ptrtoint ptr %attrs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %attrs, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.free_workqueue_attrs.exit_crit_edge, label %if.then.i

entry.free_workqueue_attrs.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %free_workqueue_attrs.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %cpumask.i = getelementptr inbounds %struct.workqueue_attrs, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cpumask.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %cpumask.i, align 4
  tail call void @free_cpumask_var(ptr noundef %3) #21
  tail call void @kfree(ptr noundef nonnull %1) #21
  br label %free_workqueue_attrs.exit

free_workqueue_attrs.exit:                        ; preds = %if.then.i, %entry.free_workqueue_attrs.exit_crit_edge
  %add.ptr = getelementptr i8, ptr %rcu, i32 -528
  tail call void @kfree(ptr noundef %add.ptr) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @ida_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @pwq_unbound_release_workfn(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -116
  %wq1 = getelementptr i8, ptr %work, i32 -112
  %0 = ptrtoint ptr %wq1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %wq1, align 4
  %2 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %add.ptr, align 512
  %pwqs_node = getelementptr i8, ptr %work, i32 -16
  %4 = ptrtoint ptr %pwqs_node to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %pwqs_node, align 4
  %cmp.i.not = icmp eq ptr %5, %pwqs_node
  br i1 %cmp.i.not, label %if.end54.critedge, label %if.then

if.then:                                          ; preds = %entry
  %flags = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 22
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags, align 128
  %and = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  br i1 %tobool3.not, label %land.rhs, label %if.end44

land.rhs:                                         ; preds = %if.then
  %.b69 = load i1, ptr @pwq_unbound_release_workfn.__already_done, align 1
  br i1 %.b69, label %land.rhs.cleanup_crit_edge, label %if.then12, !prof !679

land.rhs.cleanup_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then12:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @pwq_unbound_release_workfn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3726, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

if.end44:                                         ; preds = %if.then
  %mutex = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 2
  tail call void @mutex_lock_nested(ptr noundef %mutex, i32 noundef 0) #21
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %pwqs_node) #21
  br i1 %call.i.i, label %if.end.i.i, label %if.end44.list_del_rcu.exit_crit_edge

if.end44.list_del_rcu.exit_crit_edge:             ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del_rcu.exit

if.end.i.i:                                       ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i = getelementptr i8, ptr %work, i32 -12
  %8 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %prev.i.i, align 4
  %10 = ptrtoint ptr %pwqs_node to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pwqs_node, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %9, ptr %prev1.i.i.i, align 4
  %13 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %11, ptr %9, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i, %if.end44.list_del_rcu.exit_crit_edge
  %prev.i = getelementptr i8, ptr %work, i32 -12
  %14 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %15 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %1, align 4
  %cmp.i71 = icmp eq ptr %16, %1
  tail call void @mutex_unlock(ptr noundef %mutex) #21
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_mutex, i32 noundef 0) #21
  tail call fastcc void @put_unbound_pool(ptr noundef %3)
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_mutex) #21
  %rcu = getelementptr i8, ptr %work, i32 44
  tail call void @call_rcu(ptr noundef %rcu, ptr noundef nonnull @rcu_free_pwq) #21
  br i1 %cmp.i71, label %if.then52, label %list_del_rcu.exit.cleanup_crit_edge

list_del_rcu.exit.cleanup_crit_edge:              ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then52:                                        ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_pc() #23
  %key.i = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 17
  tail call void @lockdep_unregister_key(ptr noundef %key.i) #21
  %rcu53 = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 20
  tail call void @call_rcu(ptr noundef %rcu53, ptr noundef nonnull @rcu_free_wq) #21
  br label %cleanup

if.end54.critedge:                                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_mutex, i32 noundef 0) #21
  tail call fastcc void @put_unbound_pool(ptr noundef %3)
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_mutex) #21
  %rcu.c = getelementptr i8, ptr %work, i32 44
  tail call void @call_rcu(ptr noundef %rcu.c, ptr noundef nonnull @rcu_free_pwq) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end54.critedge, %if.then52, %list_del_rcu.exit.cleanup_crit_edge, %if.then12, %land.rhs.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rcu_free_pwq(ptr noundef %rcu) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @pwq_cache, align 4
  %add.ptr = getelementptr i8, ptr %rcu, i32 -160
  tail call void @kmem_cache_free(ptr noundef %0, ptr noundef %add.ptr) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_free(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @link_pwq(ptr noundef %pwq) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %wq1 = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 1
  %0 = ptrtoint ptr %wq1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %wq1, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %entry
  %dep_map = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 2, i32 5
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !680

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3829, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %pwqs_node = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 9
  %3 = ptrtoint ptr %pwqs_node to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %pwqs_node, align 4
  %cmp.i.not = icmp eq ptr %4, %pwqs_node
  br i1 %cmp.i.not, label %if.end28, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end28:                                         ; preds = %if.end
  %work_color = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 3
  %5 = ptrtoint ptr %work_color to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %work_color, align 4
  %work_color29 = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 2
  %7 = ptrtoint ptr %work_color29 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %work_color29, align 8
  tail call fastcc void @pwq_adjust_max_active(ptr noundef %pwq)
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %1, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %pwqs_node, ptr noundef %1, ptr noundef %9) #21
  br i1 %call.i.i, label %if.end.i.i, label %if.end28.cleanup_crit_edge

if.end28.cleanup_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i.i:                                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #23
  %10 = ptrtoint ptr %pwqs_node to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %9, ptr %pwqs_node, align 4
  %prev2.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %pwq, i32 0, i32 9, i32 1
  %11 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %1, ptr %prev2.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !709
  %12 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %pwqs_node, ptr %1, align 4
  %prev37.i.i = getelementptr inbounds %struct.list_head, ptr %9, i32 0, i32 1
  %13 = ptrtoint ptr %prev37.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %pwqs_node, ptr %prev37.i.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end.i.i, %if.end28.cleanup_crit_edge, %if.end.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_register_key(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kasprintf(i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kthread_create_on_node(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rescuer_thread(ptr noundef %__rescuer) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %rescue_wq = getelementptr inbounds %struct.worker, ptr %__rescuer, i32 0, i32 14
  %0 = ptrtoint ptr %rescue_wq to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rescue_wq, align 4
  %scheduled1 = getelementptr inbounds %struct.worker, ptr %__rescuer, i32 0, i32 5
  %2 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task, align 8
  tail call void @set_user_nice(ptr noundef %5, i32 noundef -20) #21
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_attach_mutex, i32 noundef 0) #21
  %6 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task.i, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags.i, align 4
  %and.sink.i = or i32 %11, 32
  store i32 %and.sink.i, ptr %flags.i, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_attach_mutex) #21
  %maydays = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 9
  %prev.i2.i.i = getelementptr inbounds %struct.worker, ptr %__rescuer, i32 0, i32 5, i32 1
  %rescuer230 = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 10
  %prev.i = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 9, i32 1
  %flags = getelementptr inbounds %struct.worker, ptr %__rescuer, i32 0, i32 10
  br label %__here

__here:                                           ; preds = %if.end368, %entry
  %12 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task, align 8
  %task_state_change = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 212
  %14 = ptrtoint ptr %task_state_change to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 ptrtoint (ptr blockaddress(@rescuer_thread, %__here) to i32), ptr %task_state_change, align 4
  %15 = load ptr, ptr %task, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile i32 1026, ptr %15, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !735
  %call63 = tail call zeroext i1 @kthread_should_stop() #21
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @wq_mayday_lock) #21
  %17 = ptrtoint ptr %maydays to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile ptr, ptr %maydays, align 4
  %cmp.i.not449 = icmp eq ptr %18, %maydays
  br i1 %cmp.i.not449, label %__here.while.end_crit_edge, label %__here.while.body_crit_edge

__here.while.body_crit_edge:                      ; preds = %__here
  br label %while.body

__here.while.end_crit_edge:                       ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

while.body:                                       ; preds = %if.end244.while.body_crit_edge, %__here.while.body_crit_edge
  %19 = phi ptr [ %101, %if.end244.while.body_crit_edge ], [ %18, %__here.while.body_crit_edge ]
  %add.ptr = getelementptr i8, ptr %19, i32 -108
  %20 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %add.ptr, align 512
  br label %__here121

__here121:                                        ; preds = %while.body
  %22 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task, align 8
  %task_state_change125 = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 212
  %24 = ptrtoint ptr %task_state_change125 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 ptrtoint (ptr blockaddress(@rescuer_thread, %__here121) to i32), ptr %task_state_change125, align 4
  %25 = load ptr, ptr %task, align 8
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile i32 0, ptr %25, align 128
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %19) #21
  br i1 %call.i.i, label %if.end.i.i, label %__here121.list_del_init.exit_crit_edge

__here121.list_del_init.exit_crit_edge:           ; preds = %__here121
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %__here121
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %19, i32 0, i32 1
  %27 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %prev.i.i, align 4
  %29 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %19, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %28, ptr %prev1.i.i.i, align 4
  %32 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %32)
  store volatile ptr %30, ptr %28, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %__here121.list_del_init.exit_crit_edge
  %33 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %19, ptr %19, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %19, i32 0, i32 1
  %34 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %19, ptr %prev.i3.i, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @wq_mayday_lock) #21
  tail call fastcc void @worker_attach_to_pool(ptr noundef %__rescuer, ptr noundef %21)
  tail call void @_raw_spin_lock_irq(ptr noundef %21) #21
  %35 = ptrtoint ptr %scheduled1 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile ptr, ptr %scheduled1, align 4
  %cmp.i418.not = icmp eq ptr %36, %scheduled1
  br i1 %cmp.i418.not, label %list_del_init.exit.if.end191_crit_edge, label %land.rhs153

list_del_init.exit.if.end191_crit_edge:           ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end191

land.rhs153:                                      ; preds = %list_del_init.exit
  %.b416 = load i1, ptr @rescuer_thread.__already_done.93, align 1
  br i1 %.b416, label %land.rhs153.if.end191_crit_edge, label %if.then164, !prof !679

land.rhs153.if.end191_crit_edge:                  ; preds = %land.rhs153
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end191

if.then164:                                       ; preds = %land.rhs153
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rescuer_thread.__already_done.93, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2550, i32 noundef 9, ptr noundef null) #21
  br label %if.end191

if.end191:                                        ; preds = %if.then164, %land.rhs153.if.end191_crit_edge, %list_del_init.exit.if.end191_crit_edge
  %worklist = getelementptr inbounds %struct.worker_pool, ptr %21, i32 0, i32 7
  %37 = ptrtoint ptr %worklist to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %worklist, align 4
  %cmp.not445 = icmp eq ptr %38, %worklist
  br i1 %cmp.not445, label %if.end191.for.end_crit_edge, label %for.body.lr.ph

if.end191.for.end_crit_edge:                      ; preds = %if.end191
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end191
  %add.ptr202 = getelementptr i8, ptr %38, i32 -4
  %watchdog_ts = getelementptr inbounds %struct.worker_pool, ptr %21, i32 0, i32 5
  br label %for.body

for.body:                                         ; preds = %if.end218.for.body_crit_edge, %for.body.lr.ph
  %work.0448 = phi ptr [ %add.ptr202, %for.body.lr.ph ], [ %n.0, %if.end218.for.body_crit_edge ]
  %first.0.off0447 = phi i1 [ true, %for.body.lr.ph ], [ false, %if.end218.for.body_crit_edge ]
  %.pn.in446 = phi ptr [ %38, %for.body.lr.ph ], [ %entry220, %if.end218.for.body_crit_edge ]
  %39 = ptrtoint ptr %.pn.in446 to i32
  call void @__asan_load4_noabort(i32 %39)
  %.pn = load ptr, ptr %.pn.in446, align 4
  %storemerge = getelementptr i8, ptr %.pn, i32 -4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %work.0448, i32 noundef 4) #21
  %40 = ptrtoint ptr %work.0448 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %work.0448, align 4
  %and.i420 = and i32 %41, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i420)
  %tobool.not.i = icmp eq i32 %and.i420, 0
  %and2.i = and i32 %41, -512
  %42 = inttoptr i32 %and2.i to ptr
  %retval.0.i = select i1 %tobool.not.i, ptr null, ptr %42
  %cmp213 = icmp eq ptr %retval.0.i, %add.ptr
  br i1 %cmp213, label %if.then214, label %for.body.if.end218_crit_edge

for.body.if.end218_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end218

if.then214:                                       ; preds = %for.body
  br i1 %first.0.off0447, label %if.then216, label %if.then214.for.cond.i.preheader_crit_edge

if.then214.for.cond.i.preheader_crit_edge:        ; preds = %if.then214
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.i.preheader

if.then216:                                       ; preds = %if.then214
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %43 = load volatile i32, ptr @jiffies, align 128
  %44 = ptrtoint ptr %watchdog_ts to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %watchdog_ts, align 4
  br label %for.cond.i.preheader

for.cond.i.preheader:                             ; preds = %if.then216, %if.then214.for.cond.i.preheader_crit_edge
  br label %for.cond.i

for.cond.i:                                       ; preds = %list_move_tail.exit.i.for.cond.i_crit_edge, %for.cond.i.preheader
  %work.addr.0.i = phi ptr [ %n.0.i, %list_move_tail.exit.i.for.cond.i_crit_edge ], [ %work.0448, %for.cond.i.preheader ]
  %.pn.in.i = getelementptr inbounds %struct.work_struct, ptr %work.addr.0.i, i32 0, i32 1
  %45 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %.pn.i = load ptr, ptr %.pn.in.i, align 4
  %n.0.i = getelementptr i8, ptr %.pn.i, i32 -4
  %call.i.i.i421 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %.pn.in.i) #21
  br i1 %call.i.i.i421, label %if.end.i.i.i, label %for.cond.i.__list_del_entry.exit.i.i_crit_edge

for.cond.i.__list_del_entry.exit.i.i_crit_edge:   ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__list_del_entry.exit.i.i

if.end.i.i.i:                                     ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i.i = getelementptr inbounds %struct.work_struct, ptr %work.addr.0.i, i32 0, i32 1, i32 1
  %46 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %prev.i.i.i, align 4
  %48 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %.pn.in.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %47, ptr %prev1.i.i.i.i, align 4
  %51 = ptrtoint ptr %47 to i32
  call void @__asan_store4_noabort(i32 %51)
  store volatile ptr %49, ptr %47, align 4
  br label %__list_del_entry.exit.i.i

__list_del_entry.exit.i.i:                        ; preds = %if.end.i.i.i, %for.cond.i.__list_del_entry.exit.i.i_crit_edge
  %52 = ptrtoint ptr %prev.i2.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %prev.i2.i.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %.pn.in.i, ptr noundef %53, ptr noundef %scheduled1) #21
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %__list_del_entry.exit.i.i.list_move_tail.exit.i_crit_edge

__list_del_entry.exit.i.i.list_move_tail.exit.i_crit_edge: ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_move_tail.exit.i

if.end.i.i.i.i:                                   ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %54 = ptrtoint ptr %prev.i2.i.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %.pn.in.i, ptr %prev.i2.i.i, align 4
  %55 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %scheduled1, ptr %.pn.in.i, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.work_struct, ptr %work.addr.0.i, i32 0, i32 1, i32 1
  %56 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %53, ptr %prev3.i.i.i.i, align 4
  %57 = ptrtoint ptr %53 to i32
  call void @__asan_store4_noabort(i32 %57)
  store volatile ptr %.pn.in.i, ptr %53, align 4
  br label %list_move_tail.exit.i

list_move_tail.exit.i:                            ; preds = %if.end.i.i.i.i, %__list_del_entry.exit.i.i.list_move_tail.exit.i_crit_edge
  %58 = ptrtoint ptr %work.addr.0.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %work.addr.0.i, align 4
  %and.i422 = and i32 %59, 8
  %tobool.not.i423 = icmp eq i32 %and.i422, 0
  br i1 %tobool.not.i423, label %list_move_tail.exit.i.if.end218_crit_edge, label %list_move_tail.exit.i.for.cond.i_crit_edge

list_move_tail.exit.i.for.cond.i_crit_edge:       ; preds = %list_move_tail.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.i

list_move_tail.exit.i.if.end218_crit_edge:        ; preds = %list_move_tail.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end218

if.end218:                                        ; preds = %list_move_tail.exit.i.if.end218_crit_edge, %for.body.if.end218_crit_edge
  %n.0 = phi ptr [ %storemerge, %for.body.if.end218_crit_edge ], [ %n.0.i, %list_move_tail.exit.i.if.end218_crit_edge ]
  %entry220 = getelementptr inbounds %struct.work_struct, ptr %n.0, i32 0, i32 1
  %cmp.not = icmp eq ptr %entry220, %worklist
  br i1 %cmp.not, label %if.end218.for.end_crit_edge, label %if.end218.for.body_crit_edge

if.end218.for.body_crit_edge:                     ; preds = %if.end218
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

if.end218.for.end_crit_edge:                      ; preds = %if.end218
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %if.end218.for.end_crit_edge, %if.end191.for.end_crit_edge
  %60 = ptrtoint ptr %scheduled1 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile ptr, ptr %scheduled1, align 4
  %cmp.i424.not = icmp eq ptr %61, %scheduled1
  br i1 %cmp.i424.not, label %for.end.if.end241_crit_edge, label %if.then226

for.end.if.end241_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end241

if.then226:                                       ; preds = %for.end
  %62 = ptrtoint ptr %scheduled1 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile ptr, ptr %scheduled1, align 4
  %cmp.i.not4.i = icmp eq ptr %63, %scheduled1
  br i1 %cmp.i.not4.i, label %if.then226.process_scheduled_works.exit_crit_edge, label %if.then226.while.body.i_crit_edge

if.then226.while.body.i_crit_edge:                ; preds = %if.then226
  br label %while.body.i

if.then226.process_scheduled_works.exit_crit_edge: ; preds = %if.then226
  call void @__sanitizer_cov_trace_pc() #23
  br label %process_scheduled_works.exit

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %if.then226.while.body.i_crit_edge
  %64 = phi ptr [ %66, %while.body.i.while.body.i_crit_edge ], [ %63, %if.then226.while.body.i_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %64, i32 -4
  tail call fastcc void @process_one_work(ptr noundef %__rescuer, ptr noundef %add.ptr.i) #21
  %65 = ptrtoint ptr %scheduled1 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile ptr, ptr %scheduled1, align 4
  %cmp.i.not.i = icmp eq ptr %66, %scheduled1
  br i1 %cmp.i.not.i, label %while.body.i.process_scheduled_works.exit_crit_edge, label %while.body.i.while.body.i_crit_edge

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i

while.body.i.process_scheduled_works.exit_crit_edge: ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %process_scheduled_works.exit

process_scheduled_works.exit:                     ; preds = %while.body.i.process_scheduled_works.exit_crit_edge, %if.then226.process_scheduled_works.exit_crit_edge
  %nr_active = getelementptr i8, ptr %19, i32 -24
  %67 = ptrtoint ptr %nr_active to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %nr_active, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %tobool227.not = icmp eq i32 %68, 0
  br i1 %tobool227.not, label %process_scheduled_works.exit.if.end241_crit_edge, label %land.lhs.true

process_scheduled_works.exit.if.end241_crit_edge: ; preds = %process_scheduled_works.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end241

land.lhs.true:                                    ; preds = %process_scheduled_works.exit
  %69 = ptrtoint ptr %worklist to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile ptr, ptr %worklist, align 4
  %cmp.i.not.i.i = icmp eq ptr %70, %worklist
  br i1 %cmp.i.not.i.i, label %land.lhs.true.if.end241_crit_edge, label %need_more_worker.exit.i

land.lhs.true.if.end241_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end241

need_more_worker.exit.i:                          ; preds = %land.lhs.true
  %nr_running.i.i.i = getelementptr inbounds %struct.worker_pool, ptr %21, i32 0, i32 6
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %nr_running.i.i.i, i32 noundef 4) #21
  %71 = ptrtoint ptr %nr_running.i.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load volatile i32, ptr %nr_running.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %72)
  %tobool.not.i.i.i = icmp eq i32 %72, 0
  br i1 %tobool.not.i.i.i, label %need_to_create_worker.exit, label %need_more_worker.exit.i.if.end241_crit_edge

need_more_worker.exit.i.if.end241_crit_edge:      ; preds = %need_more_worker.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end241

need_to_create_worker.exit:                       ; preds = %need_more_worker.exit.i
  %nr_idle.i.i = getelementptr inbounds %struct.worker_pool, ptr %21, i32 0, i32 9
  %73 = ptrtoint ptr %nr_idle.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %nr_idle.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %74)
  %tobool.i.not.i = icmp eq i32 %74, 0
  br i1 %tobool.i.not.i, label %if.then229, label %need_to_create_worker.exit.if.end241_crit_edge

need_to_create_worker.exit.if.end241_crit_edge:   ; preds = %need_to_create_worker.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end241

if.then229:                                       ; preds = %need_to_create_worker.exit
  tail call void @_raw_spin_lock(ptr noundef nonnull @wq_mayday_lock) #21
  %75 = ptrtoint ptr %rescuer230 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %rescuer230, align 4
  %tobool231.not = icmp eq ptr %76, null
  br i1 %tobool231.not, label %if.then229.if.end239_crit_edge, label %land.lhs.true232

if.then229.if.end239_crit_edge:                   ; preds = %if.then229
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end239

land.lhs.true232:                                 ; preds = %if.then229
  %77 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile ptr, ptr %19, align 4
  %cmp.i426.not = icmp eq ptr %78, %19
  br i1 %cmp.i426.not, label %if.then236, label %land.lhs.true232.if.end239_crit_edge

land.lhs.true232.if.end239_crit_edge:             ; preds = %land.lhs.true232
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end239

if.then236:                                       ; preds = %land.lhs.true232
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %79 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %79)
  %tobool.not.i428 = icmp eq i32 %79, 0
  br i1 %tobool.not.i428, label %if.then236.if.end.i_crit_edge, label %land.rhs.i430

if.then236.if.end.i_crit_edge:                    ; preds = %if.then236
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i430:                                    ; preds = %if.then236
  %80 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %add.ptr, align 512
  %dep_map.i = getelementptr inbounds %struct.raw_spinlock, ptr %81, i32 0, i32 4
  %call.i.i429 = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i429)
  %cmp.not.i = icmp eq i32 %call.i.i429, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i430.if.end.i_crit_edge, !prof !680

land.rhs.i430.if.end.i_crit_edge:                 ; preds = %land.rhs.i430
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i430
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1122, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i430.if.end.i_crit_edge, %if.then236.if.end.i_crit_edge
  %refcnt.i = getelementptr i8, ptr %19, i32 -92
  %82 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %refcnt.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %83)
  %cmp24.i = icmp slt i32 %83, 1
  br i1 %cmp24.i, label %land.rhs30.i, label %if.end.i.get_pwq.exit_crit_edge

if.end.i.get_pwq.exit_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %get_pwq.exit

land.rhs30.i:                                     ; preds = %if.end.i
  %.b82.i = load i1, ptr @get_pwq.__already_done, align 1
  br i1 %.b82.i, label %land.rhs30.i.get_pwq.exit_crit_edge, label %if.then41.i, !prof !679

land.rhs30.i.get_pwq.exit_crit_edge:              ; preds = %land.rhs30.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %get_pwq.exit

if.then41.i:                                      ; preds = %land.rhs30.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @get_pwq.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1123, i32 noundef 9, ptr noundef null) #21
  br label %get_pwq.exit

get_pwq.exit:                                     ; preds = %if.then41.i, %land.rhs30.i.get_pwq.exit_crit_edge, %if.end.i.get_pwq.exit_crit_edge
  %84 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %refcnt.i, align 16
  %inc.i = add i32 %85, 1
  store i32 %inc.i, ptr %refcnt.i, align 16
  %86 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %prev.i, align 4
  %call.i.i431 = tail call zeroext i1 @__list_add_valid(ptr noundef %19, ptr noundef %87, ptr noundef %maydays) #21
  br i1 %call.i.i431, label %if.end.i.i432, label %get_pwq.exit.if.end239_crit_edge

get_pwq.exit.if.end239_crit_edge:                 ; preds = %get_pwq.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end239

if.end.i.i432:                                    ; preds = %get_pwq.exit
  call void @__sanitizer_cov_trace_pc() #23
  %88 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %88)
  store ptr %19, ptr %prev.i, align 4
  %89 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %89)
  store ptr %maydays, ptr %19, align 4
  %90 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %90)
  store ptr %87, ptr %prev.i3.i, align 4
  %91 = ptrtoint ptr %87 to i32
  call void @__asan_store4_noabort(i32 %91)
  store volatile ptr %19, ptr %87, align 4
  br label %if.end239

if.end239:                                        ; preds = %if.end.i.i432, %get_pwq.exit.if.end239_crit_edge, %land.lhs.true232.if.end239_crit_edge, %if.then229.if.end239_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef nonnull @wq_mayday_lock) #21
  br label %if.end241

if.end241:                                        ; preds = %if.end239, %need_to_create_worker.exit.if.end241_crit_edge, %need_more_worker.exit.i.if.end241_crit_edge, %land.lhs.true.if.end241_crit_edge, %process_scheduled_works.exit.if.end241_crit_edge, %for.end.if.end241_crit_edge
  tail call fastcc void @put_pwq(ptr noundef %add.ptr)
  %92 = ptrtoint ptr %worklist to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile ptr, ptr %worklist, align 4
  %cmp.i.not.i433 = icmp eq ptr %93, %worklist
  br i1 %cmp.i.not.i433, label %if.end241.if.end244_crit_edge, label %need_more_worker.exit

if.end241.if.end244_crit_edge:                    ; preds = %if.end241
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end244

need_more_worker.exit:                            ; preds = %if.end241
  %nr_running.i.i = getelementptr inbounds %struct.worker_pool, ptr %21, i32 0, i32 6
  %call.i.i.i.i434 = tail call zeroext i1 @__kasan_check_read(ptr noundef %nr_running.i.i, i32 noundef 4) #21
  %94 = ptrtoint ptr %nr_running.i.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load volatile i32, ptr %nr_running.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %95)
  %tobool.not.i.i = icmp eq i32 %95, 0
  br i1 %tobool.not.i.i, label %if.then243, label %need_more_worker.exit.if.end244_crit_edge

need_more_worker.exit.if.end244_crit_edge:        ; preds = %need_more_worker.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end244

if.then243:                                       ; preds = %need_more_worker.exit
  %idle_list.i.i = getelementptr inbounds %struct.worker_pool, ptr %21, i32 0, i32 10
  %96 = ptrtoint ptr %idle_list.i.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load volatile ptr, ptr %idle_list.i.i, align 4
  %cmp.i.not.i.i436 = icmp eq ptr %97, %idle_list.i.i
  %tobool.not5.i = icmp eq ptr %97, null
  %tobool.not.i437 = or i1 %cmp.i.not.i.i436, %tobool.not5.i
  br i1 %tobool.not.i437, label %if.then243.if.end244_crit_edge, label %if.then.i, !prof !680

if.then243.if.end244_crit_edge:                   ; preds = %if.then243
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end244

if.then.i:                                        ; preds = %if.then243
  call void @__sanitizer_cov_trace_pc() #23
  %task.i438 = getelementptr inbounds %struct.worker, ptr %97, i32 0, i32 6
  %98 = ptrtoint ptr %task.i438 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %task.i438, align 4
  %call3.i = tail call i32 @wake_up_process(ptr noundef %99) #21
  br label %if.end244

if.end244:                                        ; preds = %if.then.i, %if.then243.if.end244_crit_edge, %need_more_worker.exit.if.end244_crit_edge, %if.end241.if.end244_crit_edge
  tail call void @_raw_spin_unlock_irq(ptr noundef %21) #21
  tail call fastcc void @worker_detach_from_pool(ptr noundef %__rescuer)
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @wq_mayday_lock) #21
  %100 = ptrtoint ptr %maydays to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load volatile ptr, ptr %maydays, align 4
  %cmp.i.not = icmp eq ptr %101, %maydays
  br i1 %cmp.i.not, label %if.end244.while.end_crit_edge, label %if.end244.while.body_crit_edge

if.end244.while.body_crit_edge:                   ; preds = %if.end244
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body

if.end244.while.end_crit_edge:                    ; preds = %if.end244
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

while.end:                                        ; preds = %if.end244.while.end_crit_edge, %__here.while.end_crit_edge
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @wq_mayday_lock) #21
  br i1 %call63, label %__here298, label %if.end319

__here298:                                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #23
  %102 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %task, align 8
  %task_state_change302 = getelementptr inbounds %struct.task_struct, ptr %103, i32 0, i32 212
  %104 = ptrtoint ptr %task_state_change302 to i32
  call void @__asan_store4_noabort(i32 %104)
  store i32 ptrtoint (ptr blockaddress(@rescuer_thread, %__here298) to i32), ptr %task_state_change302, align 4
  %105 = load ptr, ptr %task, align 8
  %106 = ptrtoint ptr %105 to i32
  call void @__asan_store4_noabort(i32 %106)
  store volatile i32 0, ptr %105, align 128
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_attach_mutex, i32 noundef 0) #21
  %107 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i440 = and i32 %107, -16384
  %108 = inttoptr i32 %and.i.i440 to ptr
  %task.i441 = getelementptr inbounds %struct.thread_info, ptr %108, i32 0, i32 2
  %109 = ptrtoint ptr %task.i441 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %task.i441, align 8
  %flags.i442 = getelementptr inbounds %struct.task_struct, ptr %110, i32 0, i32 3
  %111 = ptrtoint ptr %flags.i442 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %flags.i442, align 4
  %and.i443 = and i32 %112, -33
  store i32 %and.i443, ptr %flags.i442, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_attach_mutex) #21
  ret i32 0

if.end319:                                        ; preds = %while.end
  %113 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %flags, align 4
  %and = and i32 %114, 456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool321.not = icmp eq i32 %and, 0
  br i1 %tobool321.not, label %land.rhs330, label %if.end319.if.end368_crit_edge

if.end319.if.end368_crit_edge:                    ; preds = %if.end319
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end368

land.rhs330:                                      ; preds = %if.end319
  %.b414415 = load i1, ptr @rescuer_thread.__already_done.95, align 1
  br i1 %.b414415, label %land.rhs330.if.end368_crit_edge, label %if.then341, !prof !679

land.rhs330.if.end368_crit_edge:                  ; preds = %land.rhs330
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end368

if.then341:                                       ; preds = %land.rhs330
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rescuer_thread.__already_done.95, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2616, i32 noundef 9, ptr noundef null) #21
  br label %if.end368

if.end368:                                        ; preds = %if.then341, %land.rhs330.if.end368_crit_edge, %if.end319.if.end368_crit_edge
  tail call void @schedule() #21
  br label %__here
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kthread_bind_mask(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @set_user_nice(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @kthread_should_stop() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @worker_attach_to_pool(ptr noundef %worker, ptr noundef %pool) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_attach_mutex, i32 noundef 0) #21
  %flags = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 4
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %flags1 = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 10
  %2 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags1, align 4
  %or = or i32 %3, 128
  store i32 %or, ptr %flags1, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %task = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 6
  %4 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task, align 4
  %cpu = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 1
  %6 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu, align 4
  tail call void @kthread_set_per_cpu(ptr noundef %5, i32 noundef %7) #21
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %rescue_wq = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 14
  %8 = ptrtoint ptr %rescue_wq to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %rescue_wq, align 4
  %tobool2.not = icmp eq ptr %9, null
  br i1 %tobool2.not, label %if.end.if.end5_crit_edge, label %if.then3

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end5

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %task4 = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 6
  %10 = ptrtoint ptr %task4 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %task4, align 4
  %attrs = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 18
  %12 = ptrtoint ptr %attrs to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %attrs, align 4
  %cpumask = getelementptr inbounds %struct.workqueue_attrs, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %cpumask to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %cpumask, align 4
  %call = tail call i32 @set_cpus_allowed_ptr(ptr noundef %11, ptr noundef %15) #21
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %if.end.if.end5_crit_edge
  %node = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 8
  %workers = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 15
  %prev.i = getelementptr inbounds %struct.worker_pool, ptr %pool, i32 0, i32 15, i32 1
  %16 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %node, ptr noundef %17, ptr noundef %workers) #21
  br i1 %call.i.i, label %if.end.i.i, label %if.end5.list_add_tail.exit_crit_edge

if.end5.list_add_tail.exit_crit_edge:             ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #23
  %18 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %node, ptr %prev.i, align 4
  %19 = ptrtoint ptr %node to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %workers, ptr %node, align 4
  %prev3.i.i = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 8, i32 1
  %20 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %17, ptr %prev3.i.i, align 4
  %21 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %node, ptr %17, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %if.end5.list_add_tail.exit_crit_edge
  %pool6 = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 7
  %22 = ptrtoint ptr %pool6 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %pool, ptr %pool6, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_attach_mutex) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @worker_detach_from_pool(ptr noundef %worker) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %pool1 = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 7
  %0 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pool1, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_attach_mutex, i32 noundef 0) #21
  %task = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 6
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 4
  tail call void @kthread_set_per_cpu(ptr noundef %3, i32 noundef -1) #21
  %node = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 8
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %node) #21
  br i1 %call.i.i, label %if.end.i.i, label %entry.list_del.exit_crit_edge

entry.list_del.exit_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 8, i32 1
  %4 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev.i.i, align 4
  %6 = ptrtoint ptr %node to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %node, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %prev1.i.i.i, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %7, ptr %5, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %entry.list_del.exit_crit_edge
  %10 = ptrtoint ptr %node to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 256 to ptr), ptr %node, align 4
  %prev.i = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 8, i32 1
  %11 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %12 = ptrtoint ptr %pool1 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %pool1, align 4
  %workers = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 15
  %13 = ptrtoint ptr %workers to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile ptr, ptr %workers, align 4
  %cmp.i.not = icmp eq ptr %14, %workers
  br i1 %cmp.i.not, label %if.then, label %list_del.exit.if.end_crit_edge

list_del.exit.if.end_crit_edge:                   ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #23
  %detach_completion3 = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 16
  %15 = ptrtoint ptr %detach_completion3 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %detach_completion3, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %list_del.exit.if.end_crit_edge
  %detach_completion.0 = phi ptr [ %16, %if.then ], [ null, %list_del.exit.if.end_crit_edge ]
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_attach_mutex) #21
  %flags = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 10
  %17 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %flags, align 4
  %and = and i32 %18, -385
  store i32 %and, ptr %flags, align 4
  %tobool4.not = icmp eq ptr %detach_completion.0, null
  br i1 %tobool4.not, label %if.end.if.end6_crit_edge, label %if.then5

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end6

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @complete(ptr noundef nonnull %detach_completion.0) #21
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end.if.end6_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kthread_set_per_cpu(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @set_cpus_allowed_ptr(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @process_one_work(ptr noundef %worker, ptr noundef %work) #0 align 64 {
entry:
  %lockdep_map = alloca %struct.lockdep_map, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %work, i32 noundef 4) #21
  %0 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %work, align 4
  %and.i = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %and2.i = and i32 %1, -512
  %2 = inttoptr i32 %and2.i to ptr
  %retval.0.i = select i1 %tobool.not.i, ptr null, ptr %2
  %pool1 = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 7
  %3 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %pool1, align 4
  %wq = getelementptr inbounds %struct.pool_workqueue, ptr %retval.0.i, i32 0, i32 1
  %5 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %wq, align 4
  %flags = getelementptr inbounds %struct.workqueue_struct, ptr %6, i32 0, i32 22
  %7 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %flags, align 128
  %and = and i32 %8, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %lockdep_map) #21
  %lockdep_map2 = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 3
  %9 = call ptr @memcpy(ptr %lockdep_map, ptr %lockdep_map2, i32 28)
  %uglygep.i = getelementptr inbounds i8, ptr %lockdep_map, i32 4
  %10 = ptrtoint ptr %uglygep.i to i32
  call void @__asan_storeN_noabort(i32 %10, i32 8)
  store i64 0, ptr %uglygep.i, align 4
  %flags3 = getelementptr inbounds %struct.worker_pool, ptr %4, i32 0, i32 4
  %11 = ptrtoint ptr %flags3 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %flags3, align 4
  %and4 = and i32 %12, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool5.not = icmp eq i32 %and4, 0
  br i1 %tobool5.not, label %land.rhs, label %entry.if.end38_crit_edge

entry.if.end38_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end38

land.rhs:                                         ; preds = %entry
  %13 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i190 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i190 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 3
  %15 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %cpu, align 4
  %cpu7 = getelementptr inbounds %struct.worker_pool, ptr %4, i32 0, i32 1
  %17 = ptrtoint ptr %cpu7 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %cpu7, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %18)
  %cmp.not = icmp eq i32 %16, %18
  br i1 %cmp.not, label %land.rhs.if.end38_crit_edge, label %land.rhs11

land.rhs.if.end38_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end38

land.rhs11:                                       ; preds = %land.rhs
  %.b186 = load i1, ptr @process_one_work.__already_done, align 1
  br i1 %.b186, label %land.rhs11.if.end38_crit_edge, label %if.then, !prof !679

land.rhs11.if.end38_crit_edge:                    ; preds = %land.rhs11
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end38

if.then:                                          ; preds = %land.rhs11
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @process_one_work.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2222, i32 noundef 9, ptr noundef null) #21
  br label %if.end38

if.end38:                                         ; preds = %if.then, %land.rhs11.if.end38_crit_edge, %land.rhs.if.end38_crit_edge, %entry.if.end38_crit_edge
  %19 = ptrtoint ptr %work to i32
  %mul.i.i.i = mul i32 %19, 1640531527
  %shr.i.i = lshr i32 %mul.i.i.i, 26
  %arrayidx.i = getelementptr %struct.worker_pool, ptr %4, i32 0, i32 13, i32 %shr.i.i
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %worker.024.i = load ptr, ptr %arrayidx.i, align 4
  %tobool2.not25.i = icmp eq ptr %worker.024.i, null
  br i1 %tobool2.not25.i, label %if.end38.if.end55_crit_edge, label %for.body.lr.ph.i

if.end38.if.end55_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end55

for.body.lr.ph.i:                                 ; preds = %if.end38
  %func.i = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %worker.026.i = phi ptr [ %worker.024.i, %for.body.lr.ph.i ], [ %worker.0.i, %for.inc.i.for.body.i_crit_edge ]
  %current_work.i = getelementptr inbounds %struct.worker, ptr %worker.026.i, i32 0, i32 1
  %21 = ptrtoint ptr %current_work.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %current_work.i, align 4
  %cmp.i = icmp eq ptr %22, %work
  br i1 %cmp.i, label %land.lhs.true.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %current_func.i = getelementptr inbounds %struct.worker, ptr %worker.026.i, i32 0, i32 2
  %23 = ptrtoint ptr %current_func.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %current_func.i, align 4
  %25 = ptrtoint ptr %func.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %func.i, align 4
  %cmp3.i = icmp eq ptr %24, %26
  br i1 %cmp3.i, label %if.then54, label %land.lhs.true.i.for.inc.i_crit_edge

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %27 = ptrtoint ptr %worker.026.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %worker.0.i = load ptr, ptr %worker.026.i, align 4
  %tobool2.not.i = icmp eq ptr %worker.0.i, null
  br i1 %tobool2.not.i, label %for.inc.i.if.end55_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.if.end55_crit_edge:                     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end55

if.then54:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  %scheduled = getelementptr inbounds %struct.worker, ptr %worker.026.i, i32 0, i32 5
  tail call fastcc void @move_linked_works(ptr noundef %work, ptr noundef %scheduled, ptr noundef null)
  br label %cleanup

if.end55:                                         ; preds = %for.inc.i.if.end55_crit_edge, %if.end38.if.end55_crit_edge
  tail call void @debug_object_deactivate(ptr noundef %work, ptr noundef nonnull @work_debug_descr) #21
  %28 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx.i, align 4
  %30 = ptrtoint ptr %worker to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr %29, ptr %worker, align 4
  %tobool.not.i191 = icmp eq ptr %29, null
  br i1 %tobool.not.i191, label %if.end55.hlist_add_head.exit_crit_edge, label %do.body12.i

if.end55.hlist_add_head.exit_crit_edge:           ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #23
  br label %hlist_add_head.exit

do.body12.i:                                      ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #23
  %pprev.i = getelementptr inbounds %struct.hlist_node, ptr %29, i32 0, i32 1
  %31 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile ptr %worker, ptr %pprev.i, align 4
  br label %hlist_add_head.exit

hlist_add_head.exit:                              ; preds = %do.body12.i, %if.end55.hlist_add_head.exit_crit_edge
  %32 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store volatile ptr %worker, ptr %arrayidx.i, align 4
  %pprev34.i = getelementptr inbounds %struct.hlist_node, ptr %worker, i32 0, i32 1
  %33 = ptrtoint ptr %pprev34.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %arrayidx.i, ptr %pprev34.i, align 4
  %current_work = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 1
  %34 = ptrtoint ptr %current_work to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %work, ptr %current_work, align 4
  %func = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 2
  %35 = ptrtoint ptr %func to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %func, align 4
  %current_func = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 2
  %37 = ptrtoint ptr %current_func to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %36, ptr %current_func, align 4
  %current_pwq = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 3
  %38 = ptrtoint ptr %current_pwq to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %retval.0.i, ptr %current_pwq, align 4
  %39 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %work, align 4
  %shr.i192 = lshr i32 %40, 5
  %and.i193 = and i32 %shr.i192, 15
  %current_color = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 4
  %41 = ptrtoint ptr %current_color to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %and.i193, ptr %current_color, align 4
  %desc = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 13
  %42 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %wq, align 4
  %name = getelementptr inbounds %struct.workqueue_struct, ptr %43, i32 0, i32 19
  %call60 = tail call i32 @strscpy(ptr noundef %desc, ptr noundef %name, i32 noundef 24) #21
  %entry61 = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 1
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %entry61) #21
  br i1 %call.i.i, label %if.end.i.i, label %hlist_add_head.exit.list_del_init.exit_crit_edge

hlist_add_head.exit.list_del_init.exit_crit_edge: ; preds = %hlist_add_head.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %hlist_add_head.exit
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 1, i32 1
  %44 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %prev.i.i, align 4
  %46 = ptrtoint ptr %entry61 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %entry61, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %47, i32 0, i32 1
  %48 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %45, ptr %prev1.i.i.i, align 4
  %49 = ptrtoint ptr %45 to i32
  call void @__asan_store4_noabort(i32 %49)
  store volatile ptr %47, ptr %45, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %hlist_add_head.exit.list_del_init.exit_crit_edge
  %50 = ptrtoint ptr %entry61 to i32
  call void @__asan_store4_noabort(i32 %50)
  store volatile ptr %entry61, ptr %entry61, align 4
  %prev.i3.i = getelementptr inbounds %struct.work_struct, ptr %work, i32 0, i32 1, i32 1
  %51 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %entry61, ptr %prev.i3.i, align 4
  br i1 %tobool.not, label %list_del_init.exit.if.end70_crit_edge, label %if.then69, !prof !679

list_del_init.exit.if.end70_crit_edge:            ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end70

if.then69:                                        ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @worker_set_flags(ptr noundef %worker, i32 noundef 64)
  br label %if.end70

if.end70:                                         ; preds = %if.then69, %list_del_init.exit.if.end70_crit_edge
  %worklist.i = getelementptr inbounds %struct.worker_pool, ptr %4, i32 0, i32 7
  %52 = ptrtoint ptr %worklist.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile ptr, ptr %worklist.i, align 4
  %cmp.i.not.i = icmp eq ptr %53, %worklist.i
  br i1 %cmp.i.not.i, label %if.end70.if.end73_crit_edge, label %need_more_worker.exit

if.end70.if.end73_crit_edge:                      ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end73

need_more_worker.exit:                            ; preds = %if.end70
  %nr_running.i.i = getelementptr inbounds %struct.worker_pool, ptr %4, i32 0, i32 6
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %nr_running.i.i, i32 noundef 4) #21
  %54 = ptrtoint ptr %nr_running.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %nr_running.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %55)
  %tobool.not.i.i = icmp eq i32 %55, 0
  br i1 %tobool.not.i.i, label %if.then72, label %need_more_worker.exit.if.end73_crit_edge

need_more_worker.exit.if.end73_crit_edge:         ; preds = %need_more_worker.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end73

if.then72:                                        ; preds = %need_more_worker.exit
  %idle_list.i.i = getelementptr inbounds %struct.worker_pool, ptr %4, i32 0, i32 10
  %56 = ptrtoint ptr %idle_list.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile ptr, ptr %idle_list.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %57, %idle_list.i.i
  %tobool.not5.i = icmp eq ptr %57, null
  %tobool.not.i194 = or i1 %cmp.i.not.i.i, %tobool.not5.i
  br i1 %tobool.not.i194, label %if.then72.if.end73_crit_edge, label %if.then.i, !prof !680

if.then72.if.end73_crit_edge:                     ; preds = %if.then72
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end73

if.then.i:                                        ; preds = %if.then72
  call void @__sanitizer_cov_trace_pc() #23
  %task.i = getelementptr inbounds %struct.worker, ptr %57, i32 0, i32 6
  %58 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %task.i, align 4
  %call3.i = tail call i32 @wake_up_process(ptr noundef %59) #21
  br label %if.end73

if.end73:                                         ; preds = %if.then.i, %if.then72.if.end73_crit_edge, %need_more_worker.exit.if.end73_crit_edge, %if.end70.if.end73_crit_edge
  %id = getelementptr inbounds %struct.worker_pool, ptr %4, i32 0, i32 3
  %60 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %id, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !706
  %62 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %work, align 4
  %and1.i.i.i = and i32 %63, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.not.i.i195 = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.not.i.i195, label %land.rhs.i.i, label %if.end73.set_work_pool_and_clear_pending.exit_crit_edge

if.end73.set_work_pool_and_clear_pending.exit_crit_edge: ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_work_pool_and_clear_pending.exit

land.rhs.i.i:                                     ; preds = %if.end73
  %.b45.i.i = load i1, ptr @set_work_data.__already_done, align 1
  br i1 %.b45.i.i, label %land.rhs.i.i.set_work_pool_and_clear_pending.exit_crit_edge, label %if.then.i.i, !prof !679

land.rhs.i.i.set_work_pool_and_clear_pending.exit_crit_edge: ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_work_pool_and_clear_pending.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @set_work_data.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 630, i32 noundef 9, ptr noundef null) #21
  br label %set_work_pool_and_clear_pending.exit

set_work_pool_and_clear_pending.exit:             ; preds = %if.then.i.i, %land.rhs.i.i.set_work_pool_and_clear_pending.exit_crit_edge, %if.end73.set_work_pool_and_clear_pending.exit_crit_edge
  %shl.i = shl i32 %61, 6
  %64 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %work, align 4
  %and.i.i.i = and i32 %65, 16
  %or40.i.i = or i32 %and.i.i.i, %shl.i
  %call.i.i.i.i196 = tail call zeroext i1 @__kasan_check_write(ptr noundef %work, i32 noundef 4) #21
  %66 = ptrtoint ptr %work to i32
  call void @__asan_store4_noabort(i32 %66)
  store volatile i32 %or40.i.i, ptr %work, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !707
  tail call void @_raw_spin_unlock_irq(ptr noundef %4) #21
  br label %__here

__here:                                           ; preds = %set_work_pool_and_clear_pending.exit
  %67 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %wq, align 4
  %lockdep_map75 = getelementptr inbounds %struct.workqueue_struct, ptr %68, i32 0, i32 18
  tail call void @lock_acquire(ptr noundef %lockdep_map75, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@process_one_work, %__here) to i32)) #21
  br label %__here77

__here77:                                         ; preds = %__here
  call void @lock_acquire(ptr noundef nonnull %lockdep_map, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@process_one_work, %__here77) to i32)) #21
  call fastcc void @trace_workqueue_execute_start(ptr noundef %work)
  %69 = ptrtoint ptr %current_func to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %current_func, align 4
  call void %70(ptr noundef %work) #21
  %71 = ptrtoint ptr %current_func to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %current_func, align 4
  call fastcc void @trace_workqueue_execute_end(ptr noundef %work, ptr noundef %72)
  br label %__here81

__here81:                                         ; preds = %__here77
  call void @lock_release(ptr noundef nonnull %lockdep_map, i32 noundef ptrtoint (ptr blockaddress(@process_one_work, %__here81) to i32)) #21
  br label %__here85

__here85:                                         ; preds = %__here81
  %73 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %wq, align 4
  %lockdep_map84 = getelementptr inbounds %struct.workqueue_struct, ptr %74, i32 0, i32 18
  call void @lock_release(ptr noundef %lockdep_map84, i32 noundef ptrtoint (ptr blockaddress(@process_one_work, %__here85) to i32)) #21
  %75 = call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i = and i32 %75, -16384
  %76 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %76, i32 0, i32 1
  %77 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile i32, ptr %preempt_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %78)
  %cmp88.not = icmp eq i32 %78, 0
  br i1 %cmp88.not, label %lor.rhs, label %__here85.do.end101_crit_edge, !prof !679

__here85.do.end101_crit_edge:                     ; preds = %__here85
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end101

lor.rhs:                                          ; preds = %__here85
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %79 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %79)
  %tobool89.not = icmp eq i32 %79, 0
  br i1 %tobool89.not, label %lor.rhs.if.end114_crit_edge, label %cond.true

lor.rhs.if.end114_crit_edge:                      ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end114

cond.true:                                        ; preds = %lor.rhs
  %80 = call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i197 = and i32 %80, -16384
  %81 = inttoptr i32 %and.i197 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %81, i32 0, i32 2
  %82 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %task, align 8
  %lockdep_depth = getelementptr inbounds %struct.task_struct, ptr %83, i32 0, i32 142
  %84 = ptrtoint ptr %lockdep_depth to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %lockdep_depth, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %85)
  %phi.cmp = icmp sgt i32 %85, 0
  br i1 %phi.cmp, label %cond.true.do.end101_crit_edge, label %cond.true.if.end114_crit_edge, !prof !680

cond.true.if.end114_crit_edge:                    ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end114

cond.true.do.end101_crit_edge:                    ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end101

do.end101:                                        ; preds = %cond.true.do.end101_crit_edge, %__here85.do.end101_crit_edge
  %86 = call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i198 = and i32 %86, -16384
  %87 = inttoptr i32 %and.i198 to ptr
  %task104 = getelementptr inbounds %struct.thread_info, ptr %87, i32 0, i32 2
  %88 = ptrtoint ptr %task104 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %task104, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %89, i32 0, i32 101
  %preempt_count.i189 = getelementptr inbounds %struct.thread_info, ptr %87, i32 0, i32 1
  %90 = ptrtoint ptr %preempt_count.i189 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load volatile i32, ptr %preempt_count.i189, align 4
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %89, i32 0, i32 68
  %92 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %pid.i, align 8
  %94 = ptrtoint ptr %current_func to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %current_func, align 4
  %call111 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.96, ptr noundef %comm, i32 noundef %91, i32 noundef %93, ptr noundef %95) #26
  %96 = ptrtoint ptr %task104 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %task104, align 8
  call void @debug_show_held_locks(ptr noundef %97) #21
  call void @dump_stack() #26
  br label %if.end114

if.end114:                                        ; preds = %do.end101, %cond.true.if.end114_crit_edge, %lor.rhs.if.end114_crit_edge
  call void @__might_resched(ptr noundef nonnull @.str, i32 noundef 2333, i32 noundef 0) #21
  %call.i = call i32 @__cond_resched() #21
  call void @_raw_spin_lock_irq(ptr noundef %4) #21
  br i1 %tobool.not, label %if.end114.if.end126_crit_edge, label %if.then125, !prof !679

if.end114.if.end126_crit_edge:                    ; preds = %if.end114
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end126

if.then125:                                       ; preds = %if.end114
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @worker_clr_flags(ptr noundef %worker, i32 noundef 64)
  br label %if.end126

if.end126:                                        ; preds = %if.then125, %if.end114.if.end126_crit_edge
  %98 = ptrtoint ptr %current_func to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %current_func, align 4
  %last_func = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 15
  %100 = ptrtoint ptr %last_func to i32
  call void @__asan_store4_noabort(i32 %100)
  store ptr %99, ptr %last_func, align 4
  %101 = ptrtoint ptr %pprev34.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %pprev34.i, align 4
  %tobool.not.i.not.i.i = icmp eq ptr %102, null
  br i1 %tobool.not.i.not.i.i, label %if.end126.hash_del.exit_crit_edge, label %if.then.i.i199

if.end126.hash_del.exit_crit_edge:                ; preds = %if.end126
  call void @__sanitizer_cov_trace_pc() #23
  br label %hash_del.exit

if.then.i.i199:                                   ; preds = %if.end126
  %103 = ptrtoint ptr %worker to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %worker, align 4
  %105 = ptrtoint ptr %102 to i32
  call void @__asan_store4_noabort(i32 %105)
  store volatile ptr %104, ptr %102, align 4
  %tobool.not.i3.i.i = icmp eq ptr %104, null
  br i1 %tobool.not.i3.i.i, label %if.then.i.i199.__hlist_del.exit.i.i_crit_edge, label %do.body13.i.i.i

if.then.i.i199.__hlist_del.exit.i.i_crit_edge:    ; preds = %if.then.i.i199
  call void @__sanitizer_cov_trace_pc() #23
  br label %__hlist_del.exit.i.i

do.body13.i.i.i:                                  ; preds = %if.then.i.i199
  call void @__sanitizer_cov_trace_pc() #23
  %pprev14.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %104, i32 0, i32 1
  %106 = ptrtoint ptr %pprev14.i.i.i to i32
  call void @__asan_store4_noabort(i32 %106)
  store volatile ptr %102, ptr %pprev14.i.i.i, align 4
  br label %__hlist_del.exit.i.i

__hlist_del.exit.i.i:                             ; preds = %do.body13.i.i.i, %if.then.i.i199.__hlist_del.exit.i.i_crit_edge
  %107 = ptrtoint ptr %worker to i32
  call void @__asan_store4_noabort(i32 %107)
  store ptr null, ptr %worker, align 4
  %108 = ptrtoint ptr %pprev34.i to i32
  call void @__asan_store4_noabort(i32 %108)
  store ptr null, ptr %pprev34.i, align 4
  br label %hash_del.exit

hash_del.exit:                                    ; preds = %__hlist_del.exit.i.i, %if.end126.hash_del.exit_crit_edge
  %109 = ptrtoint ptr %current_work to i32
  call void @__asan_store4_noabort(i32 %109)
  store ptr null, ptr %current_work, align 4
  %110 = ptrtoint ptr %current_func to i32
  call void @__asan_store4_noabort(i32 %110)
  store ptr null, ptr %current_func, align 4
  %111 = ptrtoint ptr %current_pwq to i32
  call void @__asan_store4_noabort(i32 %111)
  store ptr null, ptr %current_pwq, align 4
  %112 = ptrtoint ptr %current_color to i32
  call void @__asan_store4_noabort(i32 %112)
  store i32 2147483647, ptr %current_color, align 4
  call fastcc void @pwq_dec_nr_in_flight(ptr noundef %retval.0.i, i32 noundef %40)
  br label %cleanup

cleanup:                                          ; preds = %hash_del.exit, %if.then54
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %lockdep_map) #21
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @worker_set_flags(ptr nocapture noundef %worker, i32 noundef %flags) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %pool1 = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 7
  %0 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pool1, align 4
  %task = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 6
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 4
  %4 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i to ptr
  %task2 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %task2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task2, align 8
  %cmp.not = icmp eq ptr %3, %7
  br i1 %cmp.not, label %entry.if.end29_crit_edge, label %land.rhs

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b50 = load i1, ptr @worker_set_flags.__already_done, align 1
  br i1 %.b50, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !679

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @worker_set_flags.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 985, i32 noundef 9, ptr noundef null) #21
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  %and = and i32 %flags, 456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool37.not = icmp eq i32 %and, 0
  br i1 %tobool37.not, label %if.end29.if.end42_crit_edge, label %land.lhs.true

if.end29.if.end42_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end42

land.lhs.true:                                    ; preds = %if.end29
  %flags38 = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 10
  %8 = ptrtoint ptr %flags38 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags38, align 4
  %and39 = and i32 %9, 456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and39)
  %tobool40.not = icmp eq i32 %and39, 0
  br i1 %tobool40.not, label %if.then41, label %land.lhs.true.if.end42_crit_edge

land.lhs.true.if.end42_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end42

if.then41:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  %nr_running = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 6
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_running, i32 noundef 4) #21
  tail call void @llvm.prefetch.p0(ptr %nr_running, i32 1, i32 3, i32 1) #21
  %10 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_running, ptr %nr_running, i32 1, ptr elementtype(i32) %nr_running) #21, !srcloc !736
  br label %if.end42

if.end42:                                         ; preds = %if.then41, %land.lhs.true.if.end42_crit_edge, %if.end29.if.end42_crit_edge
  %flags43 = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 10
  %11 = ptrtoint ptr %flags43 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %flags43, align 4
  %or = or i32 %12, %flags
  store i32 %or, ptr %flags43, align 4
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_workqueue_execute_start(ptr noundef %work) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_workqueue_execute_start, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_workqueue_execute_start, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !724

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !679

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.66, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !737
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_workqueue_execute_start, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %work) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !738
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !738
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !679

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.66, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !727
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_workqueue_execute_start, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_workqueue_execute_start.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_workqueue_execute_start.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.67, i32 noundef 99, ptr noundef nonnull @.str.68) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !728
  %38 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_workqueue_execute_end(ptr noundef %work, ptr noundef %function) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_workqueue_execute_end, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_workqueue_execute_end, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !724

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !679

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.66, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !739
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_workqueue_execute_end, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %work, ptr noundef %function) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !740
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !740
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !679

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.66, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !727
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_workqueue_execute_end, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_workqueue_execute_end.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_workqueue_execute_end.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.67, i32 noundef 125, ptr noundef nonnull @.str.68) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !728
  %38 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_show_held_locks(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @dump_stack() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @worker_clr_flags(ptr nocapture noundef %worker, i32 noundef %flags) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %pool1 = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 7
  %0 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pool1, align 4
  %flags2 = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 10
  %2 = ptrtoint ptr %flags2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags2, align 4
  %task = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 6
  %4 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task, align 4
  %6 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i to ptr
  %task3 = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %task3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task3, align 8
  %cmp.not = icmp eq ptr %5, %9
  br i1 %cmp.not, label %entry.if.end30_crit_edge, label %land.rhs

entry.if.end30_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end30

land.rhs:                                         ; preds = %entry
  %.b57 = load i1, ptr @worker_clr_flags.__already_done, align 1
  br i1 %.b57, label %land.rhs.if.end30_crit_edge, label %if.then, !prof !679

land.rhs.if.end30_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end30

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @worker_clr_flags.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1011, i32 noundef 9, ptr noundef null) #21
  br label %if.end30

if.end30:                                         ; preds = %if.then, %land.rhs.if.end30_crit_edge, %entry.if.end30_crit_edge
  %neg = xor i32 %flags, -1
  %10 = ptrtoint ptr %flags2 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags2, align 4
  %and = and i32 %11, %neg
  store i32 %and, ptr %flags2, align 4
  %and39 = and i32 %flags, 456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and39)
  %tobool40.not = icmp ne i32 %and39, 0
  %and41 = and i32 %3, 456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and41)
  %tobool42.not = icmp ne i32 %and41, 0
  %or.cond = select i1 %tobool40.not, i1 %tobool42.not, i1 false
  %and45 = and i32 %and, 456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and45)
  %tobool46.not = icmp eq i32 %and45, 0
  %or.cond58 = select i1 %or.cond, i1 %tobool46.not, i1 false
  br i1 %or.cond58, label %if.then47, label %if.end30.if.end49_crit_edge

if.end30.if.end49_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end49

if.then47:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #23
  %nr_running = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 6
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_running, i32 noundef 4) #21
  tail call void @llvm.prefetch.p0(ptr %nr_running, i32 1, i32 3, i32 1) #21
  %12 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_running, ptr %nr_running, i32 1, ptr elementtype(i32) %nr_running) #21, !srcloc !683
  br label %if.end49

if.end49:                                         ; preds = %if.then47, %if.end30.if.end49_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_unregister_key(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @idr_find(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @touch_softlockup_watchdog() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jiffies_to_msecs(i32 noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #8

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @worker_thread(ptr noundef %__worker) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %pool1 = getelementptr inbounds %struct.worker, ptr %__worker, i32 0, i32 7
  %0 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pool1, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_attach_mutex, i32 noundef 0) #21
  %2 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task.i, align 8
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags.i, align 4
  %and.sink.i = or i32 %7, 32
  store i32 %and.sink.i, ptr %flags.i, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_attach_mutex) #21
  tail call void @_raw_spin_lock_irq(ptr noundef %1) #21
  %flags = getelementptr inbounds %struct.worker, ptr %__worker, i32 0, i32 10
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags, align 4
  %and317 = and i32 %9, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and317)
  %tobool.not318 = icmp eq i32 %and317, 0
  br i1 %tobool.not318, label %if.end51.lr.ph, label %entry.if.then_crit_edge, !prof !679

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

if.end51.lr.ph:                                   ; preds = %entry
  %task.i.i = getelementptr inbounds %struct.worker, ptr %__worker, i32 0, i32 6
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %__worker, i32 0, i32 1
  %worklist.i = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 7
  %nr_running.i.i = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 6
  %nr_idle.i268 = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 9
  %scheduled = getelementptr inbounds %struct.worker, ptr %__worker, i32 0, i32 5
  %watchdog_ts = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 5
  %prev.i2.i.i = getelementptr inbounds %struct.worker, ptr %__worker, i32 0, i32 5, i32 1
  br label %if.end51

if.then:                                          ; preds = %__here.if.then_crit_edge, %entry.if.then_crit_edge
  tail call void @_raw_spin_unlock_irq(ptr noundef %1) #21
  %10 = ptrtoint ptr %__worker to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %__worker, align 4
  %cmp.i.not = icmp eq ptr %11, %__worker
  br i1 %cmp.i.not, label %if.then.if.end43_crit_edge, label %land.rhs

if.then.if.end43_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end43

land.rhs:                                         ; preds = %if.then
  %.b259 = load i1, ptr @worker_thread.__already_done, align 1
  br i1 %.b259, label %land.rhs.if.end43_crit_edge, label %if.then22, !prof !679

land.rhs.if.end43_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end43

if.then22:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @worker_thread.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2409, i32 noundef 9, ptr noundef null) #21
  br label %if.end43

if.end43:                                         ; preds = %if.then22, %land.rhs.if.end43_crit_edge, %if.then.if.end43_crit_edge
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_attach_mutex, i32 noundef 0) #21
  %12 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i260 = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i260 to ptr
  %task.i261 = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task.i261 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i261, align 8
  %flags.i262 = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 3
  %16 = ptrtoint ptr %flags.i262 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %flags.i262, align 4
  %and.i263 = and i32 %17, -33
  store i32 %and.i263, ptr %flags.i262, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_attach_mutex) #21
  %task = getelementptr inbounds %struct.worker, ptr %__worker, i32 0, i32 6
  %18 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task, align 4
  tail call void @__set_task_comm(ptr noundef %19, ptr noundef nonnull @.str.164, i1 noundef zeroext false) #21
  %worker_ida = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 17
  %id = getelementptr inbounds %struct.worker, ptr %__worker, i32 0, i32 11
  %20 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %id, align 4
  tail call void @ida_free(ptr noundef %worker_ida, i32 noundef %21) #21
  tail call fastcc void @worker_detach_from_pool(ptr noundef %__worker)
  tail call void @kfree(ptr noundef %__worker) #21
  ret i32 0

if.end51:                                         ; preds = %__here.if.end51_crit_edge, %if.end51.lr.ph
  %22 = phi i32 [ %9, %if.end51.lr.ph ], [ %152, %__here.if.end51_crit_edge ]
  %23 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pool1, align 4
  %and.i265 = and i32 %22, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i265)
  %tobool.not.i = icmp eq i32 %and.i265, 0
  br i1 %tobool.not.i, label %land.rhs.i, label %if.end40.i

land.rhs.i:                                       ; preds = %if.end51
  %.b46.i = load i1, ptr @worker_leave_idle.__already_done, align 1
  br i1 %.b46.i, label %land.rhs.i.worker_leave_idle.exit_crit_edge, label %if.then.i, !prof !679

land.rhs.i.worker_leave_idle.exit_crit_edge:      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %worker_leave_idle.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @worker_leave_idle.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1847, i32 noundef 9, ptr noundef null) #21
  br label %worker_leave_idle.exit

if.end40.i:                                       ; preds = %if.end51
  %25 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %task.i.i, align 4
  %27 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i.i to ptr
  %task3.i.i = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 2
  %29 = ptrtoint ptr %task3.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %task3.i.i, align 8
  %cmp.not.i.i = icmp eq ptr %26, %30
  br i1 %cmp.not.i.i, label %if.end40.i.worker_clr_flags.exit.i_crit_edge, label %land.rhs.i.i

if.end40.i.worker_clr_flags.exit.i_crit_edge:     ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %worker_clr_flags.exit.i

land.rhs.i.i:                                     ; preds = %if.end40.i
  %.b57.i.i = load i1, ptr @worker_clr_flags.__already_done, align 1
  br i1 %.b57.i.i, label %land.rhs.i.i.worker_clr_flags.exit.i_crit_edge, label %if.then.i.i, !prof !679

land.rhs.i.i.worker_clr_flags.exit.i_crit_edge:   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %worker_clr_flags.exit.i

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @worker_clr_flags.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1011, i32 noundef 9, ptr noundef null) #21
  br label %worker_clr_flags.exit.i

worker_clr_flags.exit.i:                          ; preds = %if.then.i.i, %land.rhs.i.i.worker_clr_flags.exit.i_crit_edge, %if.end40.i.worker_clr_flags.exit.i_crit_edge
  %31 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %flags, align 4
  %and.i.i266 = and i32 %32, -5
  store i32 %and.i.i266, ptr %flags, align 4
  %nr_idle.i = getelementptr inbounds %struct.worker_pool, ptr %24, i32 0, i32 9
  %33 = ptrtoint ptr %nr_idle.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %nr_idle.i, align 4
  %dec.i = add i32 %34, -1
  store i32 %dec.i, ptr %nr_idle.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %__worker) #21
  br i1 %call.i.i.i, label %if.end.i.i.i, label %worker_clr_flags.exit.i.list_del_init.exit.i_crit_edge

worker_clr_flags.exit.i.list_del_init.exit.i_crit_edge: ; preds = %worker_clr_flags.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del_init.exit.i

if.end.i.i.i:                                     ; preds = %worker_clr_flags.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  %35 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %prev.i.i.i, align 4
  %37 = ptrtoint ptr %__worker to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %__worker, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %36, ptr %prev1.i.i.i.i, align 4
  %40 = ptrtoint ptr %36 to i32
  call void @__asan_store4_noabort(i32 %40)
  store volatile ptr %38, ptr %36, align 4
  br label %list_del_init.exit.i

list_del_init.exit.i:                             ; preds = %if.end.i.i.i, %worker_clr_flags.exit.i.list_del_init.exit.i_crit_edge
  %41 = ptrtoint ptr %__worker to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile ptr %__worker, ptr %__worker, align 4
  %42 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %__worker, ptr %prev.i.i.i, align 4
  br label %worker_leave_idle.exit

worker_leave_idle.exit:                           ; preds = %list_del_init.exit.i, %if.then.i, %land.rhs.i.worker_leave_idle.exit_crit_edge
  %43 = ptrtoint ptr %worklist.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile ptr, ptr %worklist.i, align 4
  %cmp.i.not.i322 = icmp eq ptr %44, %worklist.i
  br i1 %cmp.i.not.i322, label %worker_leave_idle.exit.sleep_crit_edge, label %worker_leave_idle.exit.need_more_worker.exit_crit_edge

worker_leave_idle.exit.need_more_worker.exit_crit_edge: ; preds = %worker_leave_idle.exit
  br label %need_more_worker.exit

worker_leave_idle.exit.sleep_crit_edge:           ; preds = %worker_leave_idle.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %sleep

need_more_worker.exit:                            ; preds = %manage_workers.exit.need_more_worker.exit_crit_edge, %worker_leave_idle.exit.need_more_worker.exit_crit_edge
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %nr_running.i.i, i32 noundef 4) #21
  %45 = ptrtoint ptr %nr_running.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %nr_running.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool.not.i.i = icmp eq i32 %46, 0
  br i1 %tobool.not.i.i, label %if.end54, label %need_more_worker.exit.sleep_crit_edge

need_more_worker.exit.sleep_crit_edge:            ; preds = %need_more_worker.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %sleep

if.end54:                                         ; preds = %need_more_worker.exit
  %47 = ptrtoint ptr %nr_idle.i268 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %nr_idle.i268, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool.i.not = icmp eq i32 %48, 0
  br i1 %tobool.i.not, label %land.lhs.true, label %if.end54.if.end66_crit_edge, !prof !680

if.end54.if.end66_crit_edge:                      ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end66

land.lhs.true:                                    ; preds = %if.end54
  %49 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %pool1, align 4
  %flags.i270 = getelementptr inbounds %struct.worker_pool, ptr %50, i32 0, i32 4
  %51 = ptrtoint ptr %flags.i270 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %flags.i270, align 4
  %and.i271 = and i32 %52, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i271)
  %tobool.not.i272 = icmp eq i32 %and.i271, 0
  br i1 %tobool.not.i272, label %if.end.i, label %land.lhs.true.if.end66_crit_edge

land.lhs.true.if.end66_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end66

if.end.i:                                         ; preds = %land.lhs.true
  %or.i = or i32 %52, 1
  %53 = ptrtoint ptr %flags.i270 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %or.i, ptr %flags.i270, align 4
  %manager.i = getelementptr inbounds %struct.worker_pool, ptr %50, i32 0, i32 14
  %54 = ptrtoint ptr %manager.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %__worker, ptr %manager.i, align 4
  %nr_running.i.i.i32.i.i = getelementptr inbounds %struct.worker_pool, ptr %50, i32 0, i32 6
  %nr_idle.i.i36.i.i = getelementptr inbounds %struct.worker_pool, ptr %50, i32 0, i32 9
  %mayday_timer.i.i = getelementptr inbounds %struct.worker_pool, ptr %50, i32 0, i32 12
  %worklist.i.i.i.i = getelementptr inbounds %struct.worker_pool, ptr %50, i32 0, i32 7
  br label %restart.i.i

restart.i.i:                                      ; preds = %need_to_create_worker.exit39.i.i.restart.i.i_crit_edge, %if.end.i
  tail call void @_raw_spin_unlock_irq(ptr noundef %50) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %55 = load volatile i32, ptr @jiffies, align 128
  %add.i.i = add i32 %55, 2
  %call.i.i = tail call i32 @mod_timer(ptr noundef %mayday_timer.i.i, i32 noundef %add.i.i) #21
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %need_to_create_worker.exit29.i.i.while.body.i.i_crit_edge, %restart.i.i
  %call1.i.i = tail call fastcc ptr @create_worker(ptr noundef %50) #21
  %tobool.not.i.i273 = icmp eq ptr %call1.i.i, null
  br i1 %tobool.not.i.i273, label %lor.lhs.false.i.i, label %while.body.i.i.while.end.i.i_crit_edge

while.body.i.i.while.end.i.i_crit_edge:           ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end.i.i

lor.lhs.false.i.i:                                ; preds = %while.body.i.i
  %56 = ptrtoint ptr %worklist.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile ptr, ptr %worklist.i.i.i.i, align 4
  %cmp.i.not.i.i.i.i = icmp eq ptr %57, %worklist.i.i.i.i
  br i1 %cmp.i.not.i.i.i.i, label %lor.lhs.false.i.i.while.end.i.i_crit_edge, label %need_more_worker.exit.i.i.i

lor.lhs.false.i.i.while.end.i.i_crit_edge:        ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end.i.i

need_more_worker.exit.i.i.i:                      ; preds = %lor.lhs.false.i.i
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %nr_running.i.i.i32.i.i, i32 noundef 4) #21
  %58 = ptrtoint ptr %nr_running.i.i.i32.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %nr_running.i.i.i32.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %59)
  %tobool.not.i.i.i.i.i = icmp eq i32 %59, 0
  br i1 %tobool.not.i.i.i.i.i, label %need_to_create_worker.exit.i.i, label %need_more_worker.exit.i.i.i.while.end.i.i_crit_edge

need_more_worker.exit.i.i.i.while.end.i.i_crit_edge: ; preds = %need_more_worker.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end.i.i

need_to_create_worker.exit.i.i:                   ; preds = %need_more_worker.exit.i.i.i
  %60 = ptrtoint ptr %nr_idle.i.i36.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %nr_idle.i.i36.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %61)
  %tobool.i.not.i.i.i = icmp eq i32 %61, 0
  br i1 %tobool.i.not.i.i.i, label %if.end.i.i, label %need_to_create_worker.exit.i.i.while.end.i.i_crit_edge

need_to_create_worker.exit.i.i.while.end.i.i_crit_edge: ; preds = %need_to_create_worker.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end.i.i

if.end.i.i:                                       ; preds = %need_to_create_worker.exit.i.i
  %call3.i.i = tail call i32 @schedule_timeout_interruptible(i32 noundef 100) #21
  %62 = ptrtoint ptr %worklist.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile ptr, ptr %worklist.i.i.i.i, align 4
  %cmp.i.not.i.i21.i.i = icmp eq ptr %63, %worklist.i.i.i.i
  br i1 %cmp.i.not.i.i21.i.i, label %if.end.i.i.while.end.i.i_crit_edge, label %need_more_worker.exit.i25.i.i

if.end.i.i.while.end.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end.i.i

need_more_worker.exit.i25.i.i:                    ; preds = %if.end.i.i
  %call.i.i.i.i.i23.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %nr_running.i.i.i32.i.i, i32 noundef 4) #21
  %64 = ptrtoint ptr %nr_running.i.i.i32.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %nr_running.i.i.i32.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool.not.i.i.i24.i.i = icmp eq i32 %65, 0
  br i1 %tobool.not.i.i.i24.i.i, label %need_to_create_worker.exit29.i.i, label %need_more_worker.exit.i25.i.i.while.end.i.i_crit_edge

need_more_worker.exit.i25.i.i.while.end.i.i_crit_edge: ; preds = %need_more_worker.exit.i25.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end.i.i

need_to_create_worker.exit29.i.i:                 ; preds = %need_more_worker.exit.i25.i.i
  %66 = ptrtoint ptr %nr_idle.i.i36.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %nr_idle.i.i36.i.i, align 4
  %tobool.i.not.i27.i.i = icmp eq i32 %67, 0
  br i1 %tobool.i.not.i27.i.i, label %need_to_create_worker.exit29.i.i.while.body.i.i_crit_edge, label %need_to_create_worker.exit29.i.i.while.end.i.i_crit_edge

need_to_create_worker.exit29.i.i.while.end.i.i_crit_edge: ; preds = %need_to_create_worker.exit29.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end.i.i

need_to_create_worker.exit29.i.i.while.body.i.i_crit_edge: ; preds = %need_to_create_worker.exit29.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i.i

while.end.i.i:                                    ; preds = %need_to_create_worker.exit29.i.i.while.end.i.i_crit_edge, %need_more_worker.exit.i25.i.i.while.end.i.i_crit_edge, %if.end.i.i.while.end.i.i_crit_edge, %need_to_create_worker.exit.i.i.while.end.i.i_crit_edge, %need_more_worker.exit.i.i.i.while.end.i.i_crit_edge, %lor.lhs.false.i.i.while.end.i.i_crit_edge, %while.body.i.i.while.end.i.i_crit_edge
  %call8.i.i = tail call i32 @del_timer_sync(ptr noundef %mayday_timer.i.i) #21
  tail call void @_raw_spin_lock_irq(ptr noundef %50) #21
  %68 = ptrtoint ptr %worklist.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile ptr, ptr %worklist.i.i.i.i, align 4
  %cmp.i.not.i.i31.i.i = icmp eq ptr %69, %worklist.i.i.i.i
  br i1 %cmp.i.not.i.i31.i.i, label %while.end.i.i.manage_workers.exit_crit_edge, label %need_more_worker.exit.i35.i.i

while.end.i.i.manage_workers.exit_crit_edge:      ; preds = %while.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %manage_workers.exit

need_more_worker.exit.i35.i.i:                    ; preds = %while.end.i.i
  %call.i.i.i.i.i33.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %nr_running.i.i.i32.i.i, i32 noundef 4) #21
  %70 = ptrtoint ptr %nr_running.i.i.i32.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load volatile i32, ptr %nr_running.i.i.i32.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %tobool.not.i.i.i34.i.i = icmp eq i32 %71, 0
  br i1 %tobool.not.i.i.i34.i.i, label %need_to_create_worker.exit39.i.i, label %need_more_worker.exit.i35.i.i.manage_workers.exit_crit_edge

need_more_worker.exit.i35.i.i.manage_workers.exit_crit_edge: ; preds = %need_more_worker.exit.i35.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %manage_workers.exit

need_to_create_worker.exit39.i.i:                 ; preds = %need_more_worker.exit.i35.i.i
  %72 = ptrtoint ptr %nr_idle.i.i36.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %nr_idle.i.i36.i.i, align 4
  %tobool.i.not.i37.i.i = icmp eq i32 %73, 0
  br i1 %tobool.i.not.i37.i.i, label %need_to_create_worker.exit39.i.i.restart.i.i_crit_edge, label %need_to_create_worker.exit39.i.i.manage_workers.exit_crit_edge

need_to_create_worker.exit39.i.i.manage_workers.exit_crit_edge: ; preds = %need_to_create_worker.exit39.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %manage_workers.exit

need_to_create_worker.exit39.i.i.restart.i.i_crit_edge: ; preds = %need_to_create_worker.exit39.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %restart.i.i

manage_workers.exit:                              ; preds = %need_to_create_worker.exit39.i.i.manage_workers.exit_crit_edge, %need_more_worker.exit.i35.i.i.manage_workers.exit_crit_edge, %while.end.i.i.manage_workers.exit_crit_edge
  %74 = ptrtoint ptr %manager.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr null, ptr %manager.i, align 4
  %75 = ptrtoint ptr %flags.i270 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %flags.i270, align 4
  %and5.i = and i32 %76, -2
  store i32 %and5.i, ptr %flags.i270, align 4
  %call.i = tail call i32 @rcuwait_wake_up(ptr noundef nonnull @manager_wait) #21
  %77 = ptrtoint ptr %worklist.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile ptr, ptr %worklist.i, align 4
  %cmp.i.not.i = icmp eq ptr %78, %worklist.i
  br i1 %cmp.i.not.i, label %manage_workers.exit.sleep_crit_edge, label %manage_workers.exit.need_more_worker.exit_crit_edge

manage_workers.exit.need_more_worker.exit_crit_edge: ; preds = %manage_workers.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %need_more_worker.exit

manage_workers.exit.sleep_crit_edge:              ; preds = %manage_workers.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %sleep

if.end66:                                         ; preds = %land.lhs.true.if.end66_crit_edge, %if.end54.if.end66_crit_edge
  %79 = ptrtoint ptr %scheduled to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load volatile ptr, ptr %scheduled, align 4
  %cmp.i274.not = icmp eq ptr %80, %scheduled
  br i1 %cmp.i274.not, label %if.end66.if.end116_crit_edge, label %land.rhs78

if.end66.if.end116_crit_edge:                     ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end116

land.rhs78:                                       ; preds = %if.end66
  %.b257258 = load i1, ptr @worker_thread.__already_done.165, align 1
  br i1 %.b257258, label %land.rhs78.if.end116_crit_edge, label %if.then89, !prof !679

land.rhs78.if.end116_crit_edge:                   ; preds = %land.rhs78
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end116

if.then89:                                        ; preds = %land.rhs78
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @worker_thread.__already_done.165, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2434, i32 noundef 9, ptr noundef null) #21
  br label %if.end116

if.end116:                                        ; preds = %if.then89, %land.rhs78.if.end116_crit_edge, %if.end66.if.end116_crit_edge
  %81 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %pool1, align 4
  %83 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %flags, align 4
  %85 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %task.i.i, align 4
  %87 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i278 = and i32 %87, -16384
  %88 = inttoptr i32 %and.i.i278 to ptr
  %task3.i = getelementptr inbounds %struct.thread_info, ptr %88, i32 0, i32 2
  %89 = ptrtoint ptr %task3.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %task3.i, align 8
  %cmp.not.i = icmp eq ptr %86, %90
  br i1 %cmp.not.i, label %if.end116.if.end30.i_crit_edge, label %land.rhs.i279

if.end116.if.end30.i_crit_edge:                   ; preds = %if.end116
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end30.i

land.rhs.i279:                                    ; preds = %if.end116
  %.b57.i = load i1, ptr @worker_clr_flags.__already_done, align 1
  br i1 %.b57.i, label %land.rhs.i279.if.end30.i_crit_edge, label %if.then.i280, !prof !679

land.rhs.i279.if.end30.i_crit_edge:               ; preds = %land.rhs.i279
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end30.i

if.then.i280:                                     ; preds = %land.rhs.i279
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @worker_clr_flags.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1011, i32 noundef 9, ptr noundef null) #21
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.then.i280, %land.rhs.i279.if.end30.i_crit_edge, %if.end116.if.end30.i_crit_edge
  %91 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %flags, align 4
  %and.i281 = and i32 %92, -265
  store i32 %and.i281, ptr %flags, align 4
  %and41.i = and i32 %84, 456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and41.i)
  %tobool42.not.i = icmp ne i32 %and41.i, 0
  %and45.i = and i32 %92, 192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and45.i)
  %tobool46.not.i = icmp eq i32 %and45.i, 0
  %or.cond58.i = select i1 %tobool42.not.i, i1 %tobool46.not.i, i1 false
  br i1 %or.cond58.i, label %if.then47.i, label %if.end30.i.do.body124.preheader_crit_edge

if.end30.i.do.body124.preheader_crit_edge:        ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body124.preheader

if.then47.i:                                      ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #23
  %nr_running.i = getelementptr inbounds %struct.worker_pool, ptr %82, i32 0, i32 6
  %call.i.i.i282 = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_running.i, i32 noundef 4) #21
  tail call void @llvm.prefetch.p0(ptr %nr_running.i, i32 1, i32 3, i32 1) #21
  %93 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_running.i, ptr %nr_running.i, i32 1, ptr elementtype(i32) %nr_running.i) #21, !srcloc !683
  br label %do.body124.preheader

do.body124.preheader:                             ; preds = %if.then47.i, %if.end30.i.do.body124.preheader_crit_edge
  br label %do.body124

do.body124:                                       ; preds = %keep_working.exit.do.body124_crit_edge, %do.body124.preheader
  %94 = ptrtoint ptr %worklist.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %worklist.i, align 4
  %add.ptr = getelementptr i8, ptr %95, i32 -4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %96 = load volatile i32, ptr @jiffies, align 128
  %97 = ptrtoint ptr %watchdog_ts to i32
  call void @__asan_store4_noabort(i32 %97)
  store i32 %96, ptr %watchdog_ts, align 4
  %98 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %add.ptr, align 4
  %and126 = and i32 %99, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and126)
  %tobool127.not = icmp eq i32 %and126, 0
  br i1 %tobool127.not, label %if.then136, label %do.body124.for.cond.i_crit_edge, !prof !679

do.body124.for.cond.i_crit_edge:                  ; preds = %do.body124
  br label %for.cond.i

if.then136:                                       ; preds = %do.body124
  tail call fastcc void @process_one_work(ptr noundef %__worker, ptr noundef %add.ptr)
  %100 = ptrtoint ptr %scheduled to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load volatile ptr, ptr %scheduled, align 4
  %cmp.i283.not = icmp eq ptr %101, %scheduled
  br i1 %cmp.i283.not, label %if.then136.if.end151_crit_edge, label %if.then148, !prof !679

if.then136.if.end151_crit_edge:                   ; preds = %if.then136
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end151

if.then148:                                       ; preds = %if.then136
  %102 = ptrtoint ptr %scheduled to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load volatile ptr, ptr %scheduled, align 4
  %cmp.i.not4.i = icmp eq ptr %103, %scheduled
  br i1 %cmp.i.not4.i, label %if.then148.if.end151_crit_edge, label %if.then148.while.body.i_crit_edge

if.then148.while.body.i_crit_edge:                ; preds = %if.then148
  br label %while.body.i

if.then148.if.end151_crit_edge:                   ; preds = %if.then148
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end151

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %if.then148.while.body.i_crit_edge
  %104 = phi ptr [ %106, %while.body.i.while.body.i_crit_edge ], [ %103, %if.then148.while.body.i_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %104, i32 -4
  tail call fastcc void @process_one_work(ptr noundef %__worker, ptr noundef %add.ptr.i) #21
  %105 = ptrtoint ptr %scheduled to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load volatile ptr, ptr %scheduled, align 4
  %cmp.i.not.i285 = icmp eq ptr %106, %scheduled
  br i1 %cmp.i.not.i285, label %while.body.i.if.end151_crit_edge, label %while.body.i.while.body.i_crit_edge

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i

while.body.i.if.end151_crit_edge:                 ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end151

for.cond.i:                                       ; preds = %list_move_tail.exit.i.for.cond.i_crit_edge, %do.body124.for.cond.i_crit_edge
  %work.addr.0.i = phi ptr [ %n.0.i, %list_move_tail.exit.i.for.cond.i_crit_edge ], [ %add.ptr, %do.body124.for.cond.i_crit_edge ]
  %.pn.in.i = getelementptr inbounds %struct.work_struct, ptr %work.addr.0.i, i32 0, i32 1
  %107 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %.pn.i = load ptr, ptr %.pn.in.i, align 4
  %n.0.i = getelementptr i8, ptr %.pn.i, i32 -4
  %call.i.i.i286 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %.pn.in.i) #21
  br i1 %call.i.i.i286, label %if.end.i.i.i289, label %for.cond.i.__list_del_entry.exit.i.i_crit_edge

for.cond.i.__list_del_entry.exit.i.i_crit_edge:   ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__list_del_entry.exit.i.i

if.end.i.i.i289:                                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i.i287 = getelementptr inbounds %struct.work_struct, ptr %work.addr.0.i, i32 0, i32 1, i32 1
  %108 = ptrtoint ptr %prev.i.i.i287 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %prev.i.i.i287, align 4
  %110 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %.pn.in.i, align 4
  %prev1.i.i.i.i288 = getelementptr inbounds %struct.list_head, ptr %111, i32 0, i32 1
  %112 = ptrtoint ptr %prev1.i.i.i.i288 to i32
  call void @__asan_store4_noabort(i32 %112)
  store ptr %109, ptr %prev1.i.i.i.i288, align 4
  %113 = ptrtoint ptr %109 to i32
  call void @__asan_store4_noabort(i32 %113)
  store volatile ptr %111, ptr %109, align 4
  br label %__list_del_entry.exit.i.i

__list_del_entry.exit.i.i:                        ; preds = %if.end.i.i.i289, %for.cond.i.__list_del_entry.exit.i.i_crit_edge
  %114 = ptrtoint ptr %prev.i2.i.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %prev.i2.i.i, align 4
  %call.i.i.i.i290 = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %.pn.in.i, ptr noundef %115, ptr noundef %scheduled) #21
  br i1 %call.i.i.i.i290, label %if.end.i.i.i.i, label %__list_del_entry.exit.i.i.list_move_tail.exit.i_crit_edge

__list_del_entry.exit.i.i.list_move_tail.exit.i_crit_edge: ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_move_tail.exit.i

if.end.i.i.i.i:                                   ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %116 = ptrtoint ptr %prev.i2.i.i to i32
  call void @__asan_store4_noabort(i32 %116)
  store ptr %.pn.in.i, ptr %prev.i2.i.i, align 4
  %117 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_store4_noabort(i32 %117)
  store ptr %scheduled, ptr %.pn.in.i, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.work_struct, ptr %work.addr.0.i, i32 0, i32 1, i32 1
  %118 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %118)
  store ptr %115, ptr %prev3.i.i.i.i, align 4
  %119 = ptrtoint ptr %115 to i32
  call void @__asan_store4_noabort(i32 %119)
  store volatile ptr %.pn.in.i, ptr %115, align 4
  br label %list_move_tail.exit.i

list_move_tail.exit.i:                            ; preds = %if.end.i.i.i.i, %__list_del_entry.exit.i.i.list_move_tail.exit.i_crit_edge
  %120 = ptrtoint ptr %work.addr.0.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %work.addr.0.i, align 4
  %and.i291 = and i32 %121, 8
  %tobool.not.i292 = icmp eq i32 %and.i291, 0
  br i1 %tobool.not.i292, label %move_linked_works.exit, label %list_move_tail.exit.i.for.cond.i_crit_edge

list_move_tail.exit.i.for.cond.i_crit_edge:       ; preds = %list_move_tail.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.i

move_linked_works.exit:                           ; preds = %list_move_tail.exit.i
  %122 = ptrtoint ptr %scheduled to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load volatile ptr, ptr %scheduled, align 4
  %cmp.i.not4.i294 = icmp eq ptr %123, %scheduled
  br i1 %cmp.i.not4.i294, label %move_linked_works.exit.if.end151_crit_edge, label %move_linked_works.exit.while.body.i297_crit_edge

move_linked_works.exit.while.body.i297_crit_edge: ; preds = %move_linked_works.exit
  br label %while.body.i297

move_linked_works.exit.if.end151_crit_edge:       ; preds = %move_linked_works.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end151

while.body.i297:                                  ; preds = %while.body.i297.while.body.i297_crit_edge, %move_linked_works.exit.while.body.i297_crit_edge
  %124 = phi ptr [ %126, %while.body.i297.while.body.i297_crit_edge ], [ %123, %move_linked_works.exit.while.body.i297_crit_edge ]
  %add.ptr.i295 = getelementptr i8, ptr %124, i32 -4
  tail call fastcc void @process_one_work(ptr noundef %__worker, ptr noundef %add.ptr.i295) #21
  %125 = ptrtoint ptr %scheduled to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load volatile ptr, ptr %scheduled, align 4
  %cmp.i.not.i296 = icmp eq ptr %126, %scheduled
  br i1 %cmp.i.not.i296, label %while.body.i297.if.end151_crit_edge, label %while.body.i297.while.body.i297_crit_edge

while.body.i297.while.body.i297_crit_edge:        ; preds = %while.body.i297
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i297

while.body.i297.if.end151_crit_edge:              ; preds = %while.body.i297
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end151

if.end151:                                        ; preds = %while.body.i297.if.end151_crit_edge, %move_linked_works.exit.if.end151_crit_edge, %while.body.i.if.end151_crit_edge, %if.then148.if.end151_crit_edge, %if.then136.if.end151_crit_edge
  %127 = ptrtoint ptr %worklist.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load volatile ptr, ptr %worklist.i, align 4
  %cmp.i.not.i300 = icmp eq ptr %128, %worklist.i
  br i1 %cmp.i.not.i300, label %if.end151.do.end154_crit_edge, label %keep_working.exit

if.end151.do.end154_crit_edge:                    ; preds = %if.end151
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end154

keep_working.exit:                                ; preds = %if.end151
  %call.i.i.i302 = tail call zeroext i1 @__kasan_check_read(ptr noundef %nr_running.i.i, i32 noundef 4) #21
  %129 = ptrtoint ptr %nr_running.i.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load volatile i32, ptr %nr_running.i.i, align 4
  %cmp.i303 = icmp slt i32 %130, 2
  br i1 %cmp.i303, label %keep_working.exit.do.body124_crit_edge, label %keep_working.exit.do.end154_crit_edge

keep_working.exit.do.end154_crit_edge:            ; preds = %keep_working.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end154

keep_working.exit.do.body124_crit_edge:           ; preds = %keep_working.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body124

do.end154:                                        ; preds = %keep_working.exit.do.end154_crit_edge, %if.end151.do.end154_crit_edge
  %131 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %pool1, align 4
  %133 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %task.i.i, align 4
  %135 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i307 = and i32 %135, -16384
  %136 = inttoptr i32 %and.i.i307 to ptr
  %task2.i = getelementptr inbounds %struct.thread_info, ptr %136, i32 0, i32 2
  %137 = ptrtoint ptr %task2.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %task2.i, align 8
  %cmp.not.i308 = icmp eq ptr %134, %138
  br i1 %cmp.not.i308, label %do.end154.if.end29.i_crit_edge, label %land.rhs.i309

do.end154.if.end29.i_crit_edge:                   ; preds = %do.end154
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29.i

land.rhs.i309:                                    ; preds = %do.end154
  %.b50.i = load i1, ptr @worker_set_flags.__already_done, align 1
  br i1 %.b50.i, label %land.rhs.i309.if.end29.i_crit_edge, label %if.then.i310, !prof !679

land.rhs.i309.if.end29.i_crit_edge:               ; preds = %land.rhs.i309
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29.i

if.then.i310:                                     ; preds = %land.rhs.i309
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @worker_set_flags.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 985, i32 noundef 9, ptr noundef null) #21
  br label %if.end29.i

if.end29.i:                                       ; preds = %if.then.i310, %land.rhs.i309.if.end29.i_crit_edge, %do.end154.if.end29.i_crit_edge
  %139 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %flags, align 4
  %and39.i = and i32 %140, 456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and39.i)
  %tobool40.not.i = icmp eq i32 %and39.i, 0
  br i1 %tobool40.not.i, label %if.then41.i, label %if.end29.i.worker_set_flags.exit_crit_edge

if.end29.i.worker_set_flags.exit_crit_edge:       ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %worker_set_flags.exit

if.then41.i:                                      ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #23
  %nr_running.i311 = getelementptr inbounds %struct.worker_pool, ptr %132, i32 0, i32 6
  %call.i.i.i312 = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_running.i311, i32 noundef 4) #21
  tail call void @llvm.prefetch.p0(ptr %nr_running.i311, i32 1, i32 3, i32 1) #21
  %141 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_running.i311, ptr %nr_running.i311, i32 1, ptr elementtype(i32) %nr_running.i311) #21, !srcloc !736
  br label %worker_set_flags.exit

worker_set_flags.exit:                            ; preds = %if.then41.i, %if.end29.i.worker_set_flags.exit_crit_edge
  %142 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %flags, align 4
  %or.i313 = or i32 %143, 8
  store i32 %or.i313, ptr %flags, align 4
  br label %sleep

sleep:                                            ; preds = %worker_set_flags.exit, %manage_workers.exit.sleep_crit_edge, %need_more_worker.exit.sleep_crit_edge, %worker_leave_idle.exit.sleep_crit_edge
  tail call fastcc void @worker_enter_idle(ptr noundef %__worker)
  br label %__here

__here:                                           ; preds = %sleep
  %144 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i314 = and i32 %144, -16384
  %145 = inttoptr i32 %and.i314 to ptr
  %task207 = getelementptr inbounds %struct.thread_info, ptr %145, i32 0, i32 2
  %146 = ptrtoint ptr %task207 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %task207, align 8
  %task_state_change = getelementptr inbounds %struct.task_struct, ptr %147, i32 0, i32 212
  %148 = ptrtoint ptr %task_state_change to i32
  call void @__asan_store4_noabort(i32 %148)
  store i32 ptrtoint (ptr blockaddress(@worker_thread, %__here) to i32), ptr %task_state_change, align 4
  %149 = load ptr, ptr %task207, align 8
  %150 = ptrtoint ptr %149 to i32
  call void @__asan_store4_noabort(i32 %150)
  store volatile i32 1026, ptr %149, align 128
  tail call void @_raw_spin_unlock_irq(ptr noundef %1) #21
  tail call void @schedule() #21
  tail call void @_raw_spin_lock_irq(ptr noundef %1) #21
  %151 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %flags, align 4
  %and = and i32 %152, 2
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %__here.if.end51_crit_edge, label %__here.if.then_crit_edge, !prof !679

__here.if.then_crit_edge:                         ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

__here.if.end51_crit_edge:                        ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end51
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @worker_enter_idle(ptr noundef %worker) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %pool1 = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 7
  %0 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pool1, align 4
  %flags = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 10
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 4
  %and = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %lor.lhs.false.critedge, label %land.rhs

land.rhs:                                         ; preds = %entry
  %.b189 = load i1, ptr @worker_enter_idle.__already_done, align 1
  br i1 %.b189, label %land.rhs.cleanup_crit_edge, label %land.rhs.cleanup.sink.split_crit_edge, !prof !679

land.rhs.cleanup.sink.split_crit_edge:            ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.sink.split

land.rhs.cleanup_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

lor.lhs.false.critedge:                           ; preds = %entry
  %4 = ptrtoint ptr %worker to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %worker, align 4
  %cmp.i.not = icmp eq ptr %5, %worker
  br i1 %cmp.i.not, label %lor.lhs.false.critedge.if.end98_crit_edge, label %land.rhs40

lor.lhs.false.critedge.if.end98_crit_edge:        ; preds = %lor.lhs.false.critedge
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end98

land.rhs40:                                       ; preds = %lor.lhs.false.critedge
  %tobool41.not = icmp eq ptr %5, null
  br i1 %tobool41.not, label %lor.rhs, label %land.rhs40.land.rhs50_crit_edge

land.rhs40.land.rhs50_crit_edge:                  ; preds = %land.rhs40
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.rhs50

lor.rhs:                                          ; preds = %land.rhs40
  %pprev = getelementptr inbounds %struct.hlist_node, ptr %worker, i32 0, i32 1
  %6 = ptrtoint ptr %pprev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pprev, align 4
  %tobool42.not = icmp eq ptr %7, null
  br i1 %tobool42.not, label %lor.rhs.if.end98_crit_edge, label %lor.rhs.land.rhs50_crit_edge

lor.rhs.land.rhs50_crit_edge:                     ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.rhs50

lor.rhs.if.end98_crit_edge:                       ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end98

land.rhs50:                                       ; preds = %lor.rhs.land.rhs50_crit_edge, %land.rhs40.land.rhs50_crit_edge
  %.b185188 = load i1, ptr @worker_enter_idle.__already_done.167, align 1
  br i1 %.b185188, label %land.rhs50.cleanup_crit_edge, label %land.rhs50.cleanup.sink.split_crit_edge, !prof !679

land.rhs50.cleanup.sink.split_crit_edge:          ; preds = %land.rhs50
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.sink.split

land.rhs50.cleanup_crit_edge:                     ; preds = %land.rhs50
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end98:                                         ; preds = %lor.rhs.if.end98_crit_edge, %lor.lhs.false.critedge.if.end98_crit_edge
  %or = or i32 %3, 4
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or, ptr %flags, align 4
  %nr_idle = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 9
  %9 = ptrtoint ptr %nr_idle to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %nr_idle, align 4
  %inc = add i32 %10, 1
  store i32 %inc, ptr %nr_idle, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %11 = load volatile i32, ptr @jiffies, align 128
  %last_active = getelementptr inbounds %struct.worker, ptr %worker, i32 0, i32 9
  %12 = ptrtoint ptr %last_active to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %last_active, align 4
  %idle_list = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 10
  %13 = ptrtoint ptr %idle_list to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %idle_list, align 4
  %call.i.i194 = tail call zeroext i1 @__list_add_valid(ptr noundef %worker, ptr noundef %idle_list, ptr noundef %14) #21
  br i1 %call.i.i194, label %if.end.i.i, label %if.end98.list_add.exit_crit_edge

if.end98.list_add.exit_crit_edge:                 ; preds = %if.end98
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.end98
  call void @__sanitizer_cov_trace_pc() #23
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %worker, ptr %prev1.i.i, align 4
  %16 = ptrtoint ptr %worker to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %14, ptr %worker, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %worker, i32 0, i32 1
  %17 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %idle_list, ptr %prev3.i.i, align 4
  %18 = ptrtoint ptr %idle_list to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %worker, ptr %idle_list, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.end98.list_add.exit_crit_edge
  %flags.i = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 4
  %19 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %20, 1
  %21 = ptrtoint ptr %nr_idle to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %nr_idle, align 4
  %add.i = add i32 %22, %and.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %add.i)
  %cmp.i195 = icmp sgt i32 %add.i, 2
  br i1 %cmp.i195, label %too_many_workers.exit, label %list_add.exit.if.end106_crit_edge

list_add.exit.if.end106_crit_edge:                ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end106

too_many_workers.exit:                            ; preds = %list_add.exit
  %nr_workers.i = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 8
  %23 = ptrtoint ptr %nr_workers.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %nr_workers.i, align 4
  %sub.i = sub i32 %24, %add.i
  %sub4.i = shl i32 %add.i, 2
  %mul.i = add i32 %sub4.i, -8
  call void @__sanitizer_cov_trace_cmp4(i32 %mul.i, i32 %sub.i)
  %cmp5.i.not = icmp slt i32 %mul.i, %sub.i
  br i1 %cmp5.i.not, label %too_many_workers.exit.if.end106_crit_edge, label %land.lhs.true

too_many_workers.exit.if.end106_crit_edge:        ; preds = %too_many_workers.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end106

land.lhs.true:                                    ; preds = %too_many_workers.exit
  %pprev.i.i = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 11, i32 0, i32 1
  %25 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile ptr, ptr %pprev.i.i, align 4
  %tobool.not.i.i.not = icmp eq ptr %26, null
  br i1 %tobool.not.i.i.not, label %if.then103, label %land.lhs.true.if.end106_crit_edge

land.lhs.true.if.end106_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end106

if.then103:                                       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  %idle_timer = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 11
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %27 = load volatile i32, ptr @jiffies, align 128
  %add = add i32 %27, 30000
  %call105 = tail call i32 @mod_timer(ptr noundef %idle_timer, i32 noundef %add) #21
  br label %if.end106

if.end106:                                        ; preds = %if.then103, %land.lhs.true.if.end106_crit_edge, %too_many_workers.exit.if.end106_crit_edge, %list_add.exit.if.end106_crit_edge
  %nr_workers = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 8
  %28 = ptrtoint ptr %nr_workers to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %nr_workers, align 4
  %30 = ptrtoint ptr %nr_idle to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %nr_idle, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %29, i32 %31)
  %cmp = icmp eq i32 %29, %31
  br i1 %cmp, label %land.rhs109, label %if.end106.cleanup_crit_edge

if.end106.cleanup_crit_edge:                      ; preds = %if.end106
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

land.rhs109:                                      ; preds = %if.end106
  %nr_running = getelementptr inbounds %struct.worker_pool, ptr %1, i32 0, i32 6
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %nr_running, i32 noundef 4) #21
  %32 = ptrtoint ptr %nr_running to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %nr_running, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool111.not = icmp eq i32 %33, 0
  br i1 %tobool111.not, label %land.rhs109.cleanup_crit_edge, label %land.rhs119

land.rhs109.cleanup_crit_edge:                    ; preds = %land.rhs109
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

land.rhs119:                                      ; preds = %land.rhs109
  %.b186187 = load i1, ptr @worker_enter_idle.__already_done.168, align 1
  br i1 %.b186187, label %land.rhs119.cleanup_crit_edge, label %land.rhs119.cleanup.sink.split_crit_edge, !prof !679

land.rhs119.cleanup.sink.split_crit_edge:         ; preds = %land.rhs119
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.sink.split

land.rhs119.cleanup_crit_edge:                    ; preds = %land.rhs119
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

cleanup.sink.split:                               ; preds = %land.rhs119.cleanup.sink.split_crit_edge, %land.rhs50.cleanup.sink.split_crit_edge, %land.rhs.cleanup.sink.split_crit_edge
  %worker_enter_idle.__already_done.168.sink = phi ptr [ @worker_enter_idle.__already_done, %land.rhs.cleanup.sink.split_crit_edge ], [ @worker_enter_idle.__already_done.167, %land.rhs50.cleanup.sink.split_crit_edge ], [ @worker_enter_idle.__already_done.168, %land.rhs119.cleanup.sink.split_crit_edge ]
  %.sink = phi i32 [ 1813, %land.rhs.cleanup.sink.split_crit_edge ], [ 1815, %land.rhs50.cleanup.sink.split_crit_edge ], [ 1831, %land.rhs119.cleanup.sink.split_crit_edge ]
  %34 = ptrtoint ptr %worker_enter_idle.__already_done.168.sink to i32
  call void @__asan_store1_noabort(i32 %34)
  store i1 true, ptr %worker_enter_idle.__already_done.168.sink, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef %.sink, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %land.rhs119.cleanup_crit_edge, %land.rhs109.cleanup_crit_edge, %if.end106.cleanup_crit_edge, %land.rhs50.cleanup_crit_edge, %land.rhs.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @ida_free(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ida_alloc_range(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__set_task_comm(ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcuwait_wake_up(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mod_timer(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @schedule_timeout_interruptible(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__bitmap_and(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_first_bit_be(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__bitmap_equal(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @subsys_virtual_register(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @wq_unbound_cpumask_show(ptr nocapture noundef readnone %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_mutex, i32 noundef 0) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %1 = load ptr, ptr @wq_unbound_cpumask, align 4
  %call = tail call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %buf, i32 noundef 4096, ptr noundef nonnull @.str.173, i32 noundef %0, ptr noundef %1) #21
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_mutex) #21
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @wq_unbound_cpumask_store(ptr nocapture noundef readnone %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf, i32 noundef %count) #0 align 64 {
entry:
  %cpumask = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cpumask) #21
  %0 = ptrtoint ptr %cpumask to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %cpumask, align 4, !annotation !681
  %call = call zeroext i1 @zalloc_cpumask_var(ptr noundef nonnull %cpumask, i32 noundef 3264) #21
  br i1 %call, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = ptrtoint ptr %cpumask to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %cpumask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %3 = load i32, ptr @nr_cpu_ids, align 4
  %call.i = call i32 @bitmap_parse(ptr noundef %buf, i32 noundef -1, ptr noundef %2, i32 noundef %3) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.then2, label %if.end.if.end4_crit_edge

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end4

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %4 = ptrtoint ptr %cpumask to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cpumask, align 4
  %call3 = call i32 @workqueue_set_unbound_cpumask(ptr noundef %5)
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %if.end.if.end4_crit_edge
  %ret.0 = phi i32 [ %call.i, %if.end.if.end4_crit_edge ], [ %call3, %if.then2 ]
  %6 = ptrtoint ptr %cpumask to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %cpumask, align 4
  call void @free_cpumask_var(ptr noundef %7) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool5.not = icmp eq i32 %ret.0, 0
  %count.ret.0 = select i1 %tobool5.not, i32 %count, i32 %ret.0
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %count.ret.0, %if.end4 ], [ -12, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cpumask) #21
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bitmap_parse(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @per_cpu_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -8
  %0 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr.i, align 8
  %flags = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 22
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 128
  %and = lshr i32 %3, 1
  %and.lobit = and i32 %and, 1
  %4 = xor i32 %and.lobit, 1
  %call1 = tail call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %buf, i32 noundef 4096, ptr noundef nonnull @.str.175, i32 noundef %4) #21
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @max_active_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -8
  %0 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr.i, align 8
  %saved_max_active = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 12
  %2 = ptrtoint ptr %saved_max_active to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %saved_max_active, align 4
  %call1 = tail call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %buf, i32 noundef 4096, ptr noundef nonnull @.str.175, i32 noundef %3) #21
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @max_active_store(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef readonly %buf, i32 noundef %count) #0 align 64 {
entry:
  %val = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -8
  %0 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val) #21
  %2 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %val, align 4, !annotation !681
  %call1 = call i32 (ptr, ptr, ...) @sscanf(ptr noundef %buf, ptr noundef nonnull @.str.177, ptr noundef nonnull %val)
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call1)
  %cmp.not = icmp eq i32 %call1, 1
  br i1 %cmp.not, label %lor.lhs.false, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %3 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %val, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp2 = icmp slt i32 %4, 1
  br i1 %cmp2, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  call void @workqueue_set_max_active(ptr noundef %1, i32 noundef %4)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %count, %if.end ], [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #21
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sscanf(ptr nocapture noundef readonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #8

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @wq_pool_ids_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -8
  %0 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr.i, align 8
  tail call void @cpus_read_lock() #21
  %2 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %5, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !695
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #21
  %call.i = tail call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 696, ptr noundef nonnull @.str.100) #21
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %numa_pwq_tbl.i = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 24
  %call.i16 = tail call i32 @rcu_read_lock_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i16)
  %tobool.not.i17 = icmp eq i32 %call.i16, 0
  br i1 %tobool.not.i17, label %land.lhs.true.i18, label %rcu_read_lock.exit.unbound_pwq_by_node.exit_crit_edge

rcu_read_lock.exit.unbound_pwq_by_node.exit_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %unbound_pwq_by_node.exit

land.lhs.true.i18:                                ; preds = %rcu_read_lock.exit
  %dep_map.i = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 2, i32 5
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool2.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool2.not.i, label %land.lhs.true3.i, label %land.lhs.true.i18.unbound_pwq_by_node.exit_crit_edge

land.lhs.true.i18.unbound_pwq_by_node.exit_crit_edge: ; preds = %land.lhs.true.i18
  call void @__sanitizer_cov_trace_pc() #23
  br label %unbound_pwq_by_node.exit

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i18
  %call.i2.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i2.i)
  %tobool5.not.i = icmp eq i32 %call.i2.i, 0
  br i1 %tobool5.not.i, label %land.lhs.true6.i, label %land.lhs.true3.i.unbound_pwq_by_node.exit_crit_edge

land.lhs.true3.i.unbound_pwq_by_node.exit_crit_edge: ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %unbound_pwq_by_node.exit

land.lhs.true6.i:                                 ; preds = %land.lhs.true3.i
  %call7.i = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %land.lhs.true6.i.unbound_pwq_by_node.exit_crit_edge, label %land.lhs.true9.i

land.lhs.true6.i.unbound_pwq_by_node.exit_crit_edge: ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %unbound_pwq_by_node.exit

land.lhs.true9.i:                                 ; preds = %land.lhs.true6.i
  %.b1.i = load i1, ptr @unbound_pwq_by_node.__warned, align 1
  br i1 %.b1.i, label %land.lhs.true9.i.unbound_pwq_by_node.exit_crit_edge, label %if.then.i19

land.lhs.true9.i.unbound_pwq_by_node.exit_crit_edge: ; preds = %land.lhs.true9.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %unbound_pwq_by_node.exit

if.then.i19:                                      ; preds = %land.lhs.true9.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @unbound_pwq_by_node.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 577, ptr noundef nonnull @.str.101) #21
  br label %unbound_pwq_by_node.exit

unbound_pwq_by_node.exit:                         ; preds = %if.then.i19, %land.lhs.true9.i.unbound_pwq_by_node.exit_crit_edge, %land.lhs.true6.i.unbound_pwq_by_node.exit_crit_edge, %land.lhs.true3.i.unbound_pwq_by_node.exit_crit_edge, %land.lhs.true.i18.unbound_pwq_by_node.exit_crit_edge, %rcu_read_lock.exit.unbound_pwq_by_node.exit_crit_edge
  %6 = ptrtoint ptr %numa_pwq_tbl.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %numa_pwq_tbl.i, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 512
  %id = getelementptr inbounds %struct.worker_pool, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %id, align 4
  %call2 = tail call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %buf, i32 noundef 4096, ptr noundef nonnull @.str.181, ptr noundef nonnull @.str.109, i32 noundef 0, i32 noundef %11) #21
  %add.ptr3 = getelementptr i8, ptr %buf, i32 %call2
  %sub4 = sub i32 4096, %call2
  %call5 = tail call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr3, i32 noundef %sub4, ptr noundef nonnull @.str.183) #21
  %call.i20 = tail call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i20, label %unbound_pwq_by_node.exit.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i23

unbound_pwq_by_node.exit.rcu_read_unlock.exit_crit_edge: ; preds = %unbound_pwq_by_node.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

land.lhs.true.i23:                                ; preds = %unbound_pwq_by_node.exit
  %call1.i21 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i21)
  %tobool.not.i22 = icmp eq i32 %call1.i21, 0
  br i1 %tobool.not.i22, label %land.lhs.true.i23.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i25

land.lhs.true.i23.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i23
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

land.lhs.true2.i25:                               ; preds = %land.lhs.true.i23
  %.b4.i24 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i24, label %land.lhs.true2.i25.rcu_read_unlock.exit_crit_edge, label %if.then.i26

land.lhs.true2.i25.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i25
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

if.then.i26:                                      ; preds = %land.lhs.true2.i25
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 724, ptr noundef nonnull @.str.102) #21
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i26, %land.lhs.true2.i25.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i23.rcu_read_unlock.exit_crit_edge, %unbound_pwq_by_node.exit.rcu_read_unlock.exit_crit_edge
  %add6 = add i32 %call5, %call2
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !699
  %12 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i.i27 = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i.i.i27 to ptr
  %preempt_count.i.i.i.i28 = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %preempt_count.i.i.i.i28 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %preempt_count.i.i.i.i28, align 4
  %sub.i.i.i = add i32 %15, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i28, align 4
  tail call void @rcu_read_unlock_strict() #21
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #21
  tail call void @cpus_read_unlock() #21
  ret i32 %add6
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @wq_nice_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -8
  %0 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr.i, align 8
  %mutex = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 2
  tail call void @mutex_lock_nested(ptr noundef %mutex, i32 noundef 0) #21
  %unbound_attrs = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 13
  %2 = ptrtoint ptr %unbound_attrs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %unbound_attrs, align 32
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 4
  %call1 = tail call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %buf, i32 noundef 4096, ptr noundef nonnull @.str.175, i32 noundef %5) #21
  tail call void @mutex_unlock(ptr noundef %mutex) #21
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @wq_nice_store(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef readonly %buf, i32 noundef %count) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -8
  %0 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr.i, align 8
  tail call void @cpus_read_lock() #21
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_mutex, i32 noundef 0) #21
  %call1 = tail call fastcc ptr @wq_sysfs_prep_attrs(ptr noundef %1)
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %entry.out_unlock_crit_edge, label %if.end

entry.out_unlock_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_unlock

if.end:                                           ; preds = %entry
  %call2 = tail call i32 (ptr, ptr, ...) @sscanf(ptr noundef %buf, ptr noundef nonnull @.str.177, ptr noundef nonnull %call1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call2)
  %cmp = icmp eq i32 %call2, 1
  br i1 %cmp, label %land.lhs.true, label %if.end.out_unlock_crit_edge

if.end.out_unlock_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_unlock

land.lhs.true:                                    ; preds = %if.end
  %2 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call1, align 4
  %4 = add i32 %3, 20
  call void @__sanitizer_cov_trace_const_cmp4(i32 40, i32 %4)
  %5 = icmp ult i32 %4, 40
  br i1 %5, label %if.then8, label %land.lhs.true.out_unlock_crit_edge

land.lhs.true.out_unlock_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_unlock

if.then8:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  %call9 = tail call fastcc i32 @apply_workqueue_attrs_locked(ptr noundef %1, ptr noundef nonnull %call1)
  br label %out_unlock

out_unlock:                                       ; preds = %if.then8, %land.lhs.true.out_unlock_crit_edge, %if.end.out_unlock_crit_edge, %entry.out_unlock_crit_edge
  %ret.0 = phi i32 [ %call9, %if.then8 ], [ -12, %entry.out_unlock_crit_edge ], [ -22, %land.lhs.true.out_unlock_crit_edge ], [ -22, %if.end.out_unlock_crit_edge ]
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_mutex) #21
  tail call void @cpus_read_unlock() #21
  br i1 %tobool.not, label %out_unlock.free_workqueue_attrs.exit_crit_edge, label %if.then.i

out_unlock.free_workqueue_attrs.exit_crit_edge:   ; preds = %out_unlock
  call void @__sanitizer_cov_trace_pc() #23
  br label %free_workqueue_attrs.exit

if.then.i:                                        ; preds = %out_unlock
  call void @__sanitizer_cov_trace_pc() #23
  %cpumask.i = getelementptr inbounds %struct.workqueue_attrs, ptr %call1, i32 0, i32 1
  %6 = ptrtoint ptr %cpumask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %cpumask.i, align 4
  tail call void @free_cpumask_var(ptr noundef %7) #21
  tail call void @kfree(ptr noundef nonnull %call1) #21
  br label %free_workqueue_attrs.exit

free_workqueue_attrs.exit:                        ; preds = %if.then.i, %out_unlock.free_workqueue_attrs.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool11.not = icmp eq i32 %ret.0, 0
  %spec.select = select i1 %tobool11.not, i32 %count, i32 %ret.0
  ret i32 %spec.select
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @wq_cpumask_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -8
  %0 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr.i, align 8
  %mutex = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 2
  tail call void @mutex_lock_nested(ptr noundef %mutex, i32 noundef 0) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  %unbound_attrs = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 13
  %3 = ptrtoint ptr %unbound_attrs to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %unbound_attrs, align 32
  %cpumask = getelementptr inbounds %struct.workqueue_attrs, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %cpumask to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cpumask, align 4
  %call1 = tail call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %buf, i32 noundef 4096, ptr noundef nonnull @.str.173, i32 noundef %2, ptr noundef %6) #21
  tail call void @mutex_unlock(ptr noundef %mutex) #21
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @wq_cpumask_store(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf, i32 noundef %count) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -8
  %0 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr.i, align 8
  tail call void @cpus_read_lock() #21
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_mutex, i32 noundef 0) #21
  %call1 = tail call fastcc ptr @wq_sysfs_prep_attrs(ptr noundef %1)
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %entry.out_unlock_crit_edge, label %if.end

entry.out_unlock_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_unlock

if.end:                                           ; preds = %entry
  %cpumask = getelementptr inbounds %struct.workqueue_attrs, ptr %call1, i32 0, i32 1
  %2 = ptrtoint ptr %cpumask to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %cpumask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %call.i = tail call i32 @bitmap_parse(ptr noundef %buf, i32 noundef -1, ptr noundef %3, i32 noundef %4) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool3.not = icmp eq i32 %call.i, 0
  br i1 %tobool3.not, label %if.then4, label %if.end.out_unlock_crit_edge

if.end.out_unlock_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_unlock

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %call5 = tail call fastcc i32 @apply_workqueue_attrs_locked(ptr noundef %1, ptr noundef nonnull %call1)
  br label %out_unlock

out_unlock:                                       ; preds = %if.then4, %if.end.out_unlock_crit_edge, %entry.out_unlock_crit_edge
  %ret.0 = phi i32 [ %call.i, %if.end.out_unlock_crit_edge ], [ %call5, %if.then4 ], [ -12, %entry.out_unlock_crit_edge ]
  tail call void @mutex_unlock(ptr noundef nonnull @wq_pool_mutex) #21
  tail call void @cpus_read_unlock() #21
  br i1 %tobool.not, label %out_unlock.free_workqueue_attrs.exit_crit_edge, label %if.then.i

out_unlock.free_workqueue_attrs.exit_crit_edge:   ; preds = %out_unlock
  call void @__sanitizer_cov_trace_pc() #23
  br label %free_workqueue_attrs.exit

if.then.i:                                        ; preds = %out_unlock
  call void @__sanitizer_cov_trace_pc() #23
  %cpumask.i = getelementptr inbounds %struct.workqueue_attrs, ptr %call1, i32 0, i32 1
  %5 = ptrtoint ptr %cpumask.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cpumask.i, align 4
  tail call void @free_cpumask_var(ptr noundef %6) #21
  tail call void @kfree(ptr noundef nonnull %call1) #21
  br label %free_workqueue_attrs.exit

free_workqueue_attrs.exit:                        ; preds = %if.then.i, %out_unlock.free_workqueue_attrs.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool7.not = icmp eq i32 %ret.0, 0
  %spec.select = select i1 %tobool7.not, i32 %count, i32 %ret.0
  ret i32 %spec.select
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @wq_numa_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -8
  %0 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr.i, align 8
  %mutex = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 2
  tail call void @mutex_lock_nested(ptr noundef %mutex, i32 noundef 0) #21
  %unbound_attrs = getelementptr inbounds %struct.workqueue_struct, ptr %1, i32 0, i32 13
  %2 = ptrtoint ptr %unbound_attrs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %unbound_attrs, align 32
  %no_numa = getelementptr inbounds %struct.workqueue_attrs, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %no_numa to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %no_numa, align 4, !range !696
  %6 = xor i8 %5, 1
  %7 = zext i8 %6 to i32
  %call1 = tail call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %buf, i32 noundef 4096, ptr noundef nonnull @.str.175, i32 noundef %7) #21
  tail call void @mutex_unlock(ptr noundef %mutex) #21
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @wq_numa_store(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef readonly %buf, i32 noundef %count) #0 align 64 {
entry:
  %v = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 -8
  %0 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %v) #21
  %2 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %v, align 4, !annotation !681
  tail call void @cpus_read_lock() #21
  tail call void @mutex_lock_nested(ptr noundef nonnull @wq_pool_mutex, i32 noundef 0) #21
  %call1 = tail call fastcc ptr @wq_sysfs_prep_attrs(ptr noundef %1)
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %entry.out_unlock_crit_edge, label %if.end

entry.out_unlock_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_unlock

if.end:                                           ; preds = %entry
  %call2 = call i32 (ptr, ptr, ...) @sscanf(ptr noundef %buf, ptr noundef nonnull @.str.177, ptr noundef nonnull %v)
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call2)
  %cmp = icmp eq i32 %call2, 1
  br i1 %cmp, label %if.then3, label %if.end.out_unlock_crit_edge

if.end.out_unlock_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_unlock

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %3 = ptrtoint ptr %v to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %v, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool4.not = icmp eq i32 %4, 0
  %no_numa = getelementptr inbounds %struct.workqueue_attrs, ptr %call1, i32 0, i32 2
  %frombool = zext i1 %tobool4.not to i8
  %5 = ptrtoint ptr %no_numa to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %frombool, ptr %no_numa, align 4
  %call5 = call fastcc i32 @apply_workqueue_attrs_locked(ptr noundef %1, ptr noundef nonnull %call1)
  br label %out_unlock

out_unlock:                                       ; preds = %if.then3, %if.end.out_unlock_crit_edge, %entry.out_unlock_crit_edge
  %ret.0 = phi i32 [ %call5, %if.then3 ], [ -22, %if.end.out_unlock_crit_edge ], [ -12, %entry.out_unlock_crit_edge ]
  call void @mutex_unlock(ptr noundef nonnull @wq_pool_mutex) #21
  call void @cpus_read_unlock() #21
  br i1 %tobool.not, label %out_unlock.free_workqueue_attrs.exit_crit_edge, label %if.then.i

out_unlock.free_workqueue_attrs.exit_crit_edge:   ; preds = %out_unlock
  call void @__sanitizer_cov_trace_pc() #23
  br label %free_workqueue_attrs.exit

if.then.i:                                        ; preds = %out_unlock
  call void @__sanitizer_cov_trace_pc() #23
  %cpumask.i = getelementptr inbounds %struct.workqueue_attrs, ptr %call1, i32 0, i32 1
  %6 = ptrtoint ptr %cpumask.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %cpumask.i, align 4
  call void @free_cpumask_var(ptr noundef %7) #21
  call void @kfree(ptr noundef nonnull %call1) #21
  br label %free_workqueue_attrs.exit

free_workqueue_attrs.exit:                        ; preds = %if.then.i, %out_unlock.free_workqueue_attrs.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool7.not = icmp eq i32 %ret.0, 0
  %spec.select = select i1 %tobool7.not, i32 %count, i32 %ret.0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %v) #21
  ret i32 %spec.select
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @wq_sysfs_prep_attrs(ptr nocapture noundef readonly %wq) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !680

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5539, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %1 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %1, i32 noundef 3520, i32 noundef 12) #29
  %tobool.not.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i, label %if.end.cleanup_crit_edge, label %if.end.i

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i:                                         ; preds = %if.end
  %cpumask.i = getelementptr inbounds %struct.workqueue_attrs, ptr %call7.i.i.i, i32 0, i32 1
  %call1.i = tail call zeroext i1 @alloc_cpumask_var(ptr noundef %cpumask.i, i32 noundef 3264) #21
  %2 = ptrtoint ptr %cpumask.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %cpumask.i, align 4
  br i1 %call1.i, label %if.end27, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @free_cpumask_var(ptr noundef %3) #21
  tail call void @kfree(ptr noundef nonnull %call7.i.i.i) #21
  br label %cleanup

if.end27:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i.i = add i32 %4, 31
  %5 = lshr i32 %sub.i.i.i, 3
  %mul.i.i.i = and i32 %5, 536870908
  %6 = call ptr @memcpy(ptr %3, ptr @__cpu_possible_mask, i32 %mul.i.i.i)
  %unbound_attrs = getelementptr inbounds %struct.workqueue_struct, ptr %wq, i32 0, i32 13
  %7 = ptrtoint ptr %unbound_attrs to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %unbound_attrs, align 32
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %8, align 4
  %11 = ptrtoint ptr %call7.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %call7.i.i.i, align 8
  %12 = ptrtoint ptr %cpumask.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %cpumask.i, align 4
  %cpumask2.i = getelementptr inbounds %struct.workqueue_attrs, ptr %8, i32 0, i32 1
  %14 = ptrtoint ptr %cpumask2.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %cpumask2.i, align 4
  %16 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i.i32 = add i32 %16, 31
  %17 = lshr i32 %sub.i.i.i32, 3
  %mul.i.i.i33 = and i32 %17, 536870908
  %18 = call ptr @memcpy(ptr %13, ptr %15, i32 %mul.i.i.i33)
  %no_numa.i = getelementptr inbounds %struct.workqueue_attrs, ptr %8, i32 0, i32 2
  %19 = ptrtoint ptr %no_numa.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %no_numa.i, align 4, !range !696
  %no_numa3.i = getelementptr inbounds %struct.workqueue_attrs, ptr %call7.i.i.i, i32 0, i32 2
  %21 = ptrtoint ptr %no_numa3.i to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %20, ptr %no_numa3.i, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end27, %if.then.i.i, %if.end.cleanup_crit_edge
  %retval.0 = phi ptr [ %call7.i.i.i, %if.end27 ], [ null, %if.then.i.i ], [ null, %if.end.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @wq_watchdog_param_set_thresh(ptr noundef %val, ptr nocapture noundef readnone %kp) #0 align 64 {
entry:
  %thresh = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %thresh) #21
  %0 = ptrtoint ptr %thresh to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %thresh, align 4, !annotation !681
  %call.i = call i32 @_kstrtoul(ptr noundef %val, i32 noundef 0, ptr noundef nonnull %thresh) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr @system_wq, align 4
  %tobool1.not = icmp eq ptr %1, null
  %2 = ptrtoint ptr %thresh to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %thresh, align 4
  br i1 %tobool1.not, label %if.else, label %if.then2

if.then2:                                         ; preds = %if.end
  store i32 0, ptr @wq_watchdog_thresh, align 4
  %call.i6 = call i32 @del_timer_sync(ptr noundef nonnull @wq_watchdog_timer) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i, label %if.then2.cleanup_crit_edge, label %if.then.i

if.then2.cleanup_crit_edge:                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then.i:                                        ; preds = %if.then2
  store i32 %3, ptr @wq_watchdog_thresh, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %4 = load volatile i32, ptr @jiffies, align 128
  store i32 %4, ptr @wq_watchdog_touched, align 4
  %call4.i.i = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %5 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call4.i.i, i32 %5)
  %cmp5.i.i = icmp ult i32 %call4.i.i, %5
  br i1 %cmp5.i.i, label %if.then.i.for.body.i.i_crit_edge, label %if.then.i.wq_watchdog_reset_touched.exit.i_crit_edge

if.then.i.wq_watchdog_reset_touched.exit.i_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %wq_watchdog_reset_touched.exit.i

if.then.i.for.body.i.i_crit_edge:                 ; preds = %if.then.i
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %if.then.i.for.body.i.i_crit_edge
  %call6.i.i = phi i32 [ %call.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %call4.i.i, %if.then.i.for.body.i.i_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %6 = load volatile i32, ptr @jiffies, align 128
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call6.i.i
  %7 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %8, ptrtoint (ptr @wq_watchdog_touched_cpu to i32)
  %9 = inttoptr i32 %add.i.i to ptr
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %6, ptr %9, align 4
  %call.i.i = call i32 @cpumask_next(i32 noundef %call6.i.i, ptr noundef nonnull @__cpu_possible_mask) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %11 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.i.i = icmp ult i32 %call.i.i, %11
  br i1 %cmp.i.i, label %for.body.i.i.for.body.i.i_crit_edge, label %for.body.i.i.wq_watchdog_reset_touched.exit.i_crit_edge

for.body.i.i.wq_watchdog_reset_touched.exit.i_crit_edge: ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %wq_watchdog_reset_touched.exit.i

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.i

wq_watchdog_reset_touched.exit.i:                 ; preds = %for.body.i.i.wq_watchdog_reset_touched.exit.i_crit_edge, %if.then.i.wq_watchdog_reset_touched.exit.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %12 = load volatile i32, ptr @jiffies, align 128
  %mul.i = mul i32 %3, 100
  %add.i = add i32 %12, %mul.i
  %call1.i = call i32 @mod_timer(ptr noundef nonnull @wq_watchdog_timer, i32 noundef %add.i) #21
  br label %cleanup

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  store i32 %3, ptr @wq_watchdog_thresh, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.else, %wq_watchdog_reset_touched.exit.i, %if.then2.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i, %entry.cleanup_crit_edge ], [ 0, %if.else ], [ 0, %if.then2.cleanup_crit_edge ], [ 0, %wq_watchdog_reset_touched.exit.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %thresh) #21
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @param_get_ulong(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_kstrtoul(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @idle_worker_timeout(ptr noundef %t) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %t, i32 -92
  tail call void @_raw_spin_lock_irq(ptr noundef %add.ptr) #21
  %flags.i = getelementptr i8, ptr %t, i32 -36
  %nr_idle1.i = getelementptr i8, ptr %t, i32 -12
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags.i, align 4
  %and.i15 = and i32 %1, 1
  %2 = ptrtoint ptr %nr_idle1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nr_idle1.i, align 4
  %add.i16 = add i32 %3, %and.i15
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %add.i16)
  %cmp.i17 = icmp sgt i32 %add.i16, 2
  br i1 %cmp.i17, label %too_many_workers.exit.lr.ph, label %entry.while.end_crit_edge

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

too_many_workers.exit.lr.ph:                      ; preds = %entry
  %nr_workers.i = getelementptr i8, ptr %t, i32 -16
  %prev = getelementptr i8, ptr %t, i32 -4
  br label %too_many_workers.exit

too_many_workers.exit:                            ; preds = %cleanup.too_many_workers.exit_crit_edge, %too_many_workers.exit.lr.ph
  %add.i18 = phi i32 [ %add.i16, %too_many_workers.exit.lr.ph ], [ %add.i, %cleanup.too_many_workers.exit_crit_edge ]
  %4 = ptrtoint ptr %nr_workers.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nr_workers.i, align 4
  %sub.i = sub i32 %5, %add.i18
  %sub4.i = shl i32 %add.i18, 2
  %mul.i = add i32 %sub4.i, -8
  call void @__sanitizer_cov_trace_cmp4(i32 %mul.i, i32 %sub.i)
  %cmp5.i.not = icmp slt i32 %mul.i, %sub.i
  br i1 %cmp5.i.not, label %too_many_workers.exit.while.end_crit_edge, label %while.body

too_many_workers.exit.while.end_crit_edge:        ; preds = %too_many_workers.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

while.body:                                       ; preds = %too_many_workers.exit
  %6 = ptrtoint ptr %prev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev, align 4
  %last_active = getelementptr inbounds %struct.worker, ptr %7, i32 0, i32 9
  %8 = ptrtoint ptr %last_active to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %last_active, align 4
  %add = add i32 %9, 30000
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %10 = load volatile i32, ptr @jiffies, align 128
  %sub = sub i32 %10, %add
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp = icmp slt i32 %sub, 0
  br i1 %cmp, label %cleanup.thread, label %cleanup

cleanup.thread:                                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  %call4 = tail call i32 @mod_timer(ptr noundef %t, i32 noundef %add) #21
  br label %while.end

cleanup:                                          ; preds = %while.body
  tail call fastcc void @destroy_worker(ptr noundef %7)
  %11 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %12, 1
  %13 = ptrtoint ptr %nr_idle1.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %nr_idle1.i, align 4
  %add.i = add i32 %14, %and.i
  %cmp.i = icmp sgt i32 %add.i, 2
  br i1 %cmp.i, label %cleanup.too_many_workers.exit_crit_edge, label %cleanup.while.end_crit_edge

cleanup.while.end_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

cleanup.too_many_workers.exit_crit_edge:          ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #23
  br label %too_many_workers.exit

while.end:                                        ; preds = %cleanup.while.end_crit_edge, %cleanup.thread, %too_many_workers.exit.while.end_crit_edge, %entry.while.end_crit_edge
  tail call void @_raw_spin_unlock_irq(ptr noundef %add.ptr) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @pool_mayday_timeout(ptr noundef %t) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %t, i32 -140
  tail call void @_raw_spin_lock_irq(ptr noundef %add.ptr) #21
  tail call void @_raw_spin_lock(ptr noundef nonnull @wq_mayday_lock) #21
  %worklist.i.i = getelementptr i8, ptr %t, i32 -72
  %0 = ptrtoint ptr %worklist.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %worklist.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %1, %worklist.i.i
  br i1 %cmp.i.not.i.i, label %entry.if.end_crit_edge, label %need_more_worker.exit.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

need_more_worker.exit.i:                          ; preds = %entry
  %nr_running.i.i.i = getelementptr i8, ptr %t, i32 -76
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %nr_running.i.i.i, i32 noundef 4) #21
  %2 = ptrtoint ptr %nr_running.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %nr_running.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i.i.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i.i.i, label %need_to_create_worker.exit, label %need_more_worker.exit.i.if.end_crit_edge

need_more_worker.exit.i.if.end_crit_edge:         ; preds = %need_more_worker.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

need_to_create_worker.exit:                       ; preds = %need_more_worker.exit.i
  %nr_idle.i.i = getelementptr i8, ptr %t, i32 -60
  %4 = ptrtoint ptr %nr_idle.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nr_idle.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.i.not.i = icmp eq i32 %5, 0
  br i1 %tobool.i.not.i, label %if.then, label %need_to_create_worker.exit.if.end_crit_edge

need_to_create_worker.exit.if.end_crit_edge:      ; preds = %need_to_create_worker.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %need_to_create_worker.exit
  %6 = ptrtoint ptr %worklist.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pn21 = load ptr, ptr %worklist.i.i, align 4
  %cmp.not22 = icmp eq ptr %.pn21, %worklist.i.i
  br i1 %cmp.not22, label %if.then.if.end_crit_edge, label %if.then.for.body_crit_edge

if.then.for.body_crit_edge:                       ; preds = %if.then
  br label %for.body

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

for.body:                                         ; preds = %send_mayday.exit.for.body_crit_edge, %if.then.for.body_crit_edge
  %.pn23 = phi ptr [ %.pn, %send_mayday.exit.for.body_crit_edge ], [ %.pn21, %if.then.for.body_crit_edge ]
  %work.0 = getelementptr i8, ptr %.pn23, i32 -4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %work.0, i32 noundef 4) #21
  %7 = ptrtoint ptr %work.0 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %work.0, align 4
  %and.i.i = and i32 %8, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  %and2.i.i = and i32 %8, -512
  %9 = inttoptr i32 %and2.i.i to ptr
  %retval.0.i.i = select i1 %tobool.not.i.i, ptr null, ptr %9
  %wq1.i = getelementptr inbounds %struct.pool_workqueue, ptr %retval.0.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %wq1.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %wq1.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %12 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not.i = icmp eq i32 %12, 0
  br i1 %tobool.not.i, label %for.body.if.end.i_crit_edge, label %land.rhs.i20

for.body.if.end.i_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i20:                                     ; preds = %for.body
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.raw_spinlock, ptr @wq_mayday_lock, i32 0, i32 4), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i20.if.end.i_crit_edge, !prof !680

land.rhs.i20.if.end.i_crit_edge:                  ; preds = %land.rhs.i20
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i20
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2053, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i20.if.end.i_crit_edge, %for.body.if.end.i_crit_edge
  %rescuer.i = getelementptr inbounds %struct.workqueue_struct, ptr %11, i32 0, i32 10
  %13 = ptrtoint ptr %rescuer.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %rescuer.i, align 4
  %tobool26.not.i = icmp eq ptr %14, null
  br i1 %tobool26.not.i, label %if.end.i.send_mayday.exit_crit_edge, label %if.end28.i

if.end.i.send_mayday.exit_crit_edge:              ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %send_mayday.exit

if.end28.i:                                       ; preds = %if.end.i
  %mayday_node.i = getelementptr inbounds %struct.pool_workqueue, ptr %retval.0.i.i, i32 0, i32 10
  %15 = ptrtoint ptr %mayday_node.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %mayday_node.i, align 4
  %cmp.i.not.i = icmp eq ptr %16, %mayday_node.i
  br i1 %cmp.i.not.i, label %if.then31.i, label %if.end28.i.send_mayday.exit_crit_edge

if.end28.i.send_mayday.exit_crit_edge:            ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %send_mayday.exit

if.then31.i:                                      ; preds = %if.end28.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %17 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.not.i43.i = icmp eq i32 %17, 0
  br i1 %tobool.not.i43.i, label %if.then31.i.if.end.i.i_crit_edge, label %land.rhs.i.i

if.then31.i.if.end.i.i_crit_edge:                 ; preds = %if.then31.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i

land.rhs.i.i:                                     ; preds = %if.then31.i
  %18 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %retval.0.i.i, align 512
  %dep_map.i.i = getelementptr inbounds %struct.raw_spinlock, ptr %19, i32 0, i32 4
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i.i, i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp.not.i.i, label %do.end.i.i, label %land.rhs.i.i.if.end.i.i_crit_edge, !prof !680

land.rhs.i.i.if.end.i.i_crit_edge:                ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1122, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %do.end.i.i, %land.rhs.i.i.if.end.i.i_crit_edge, %if.then31.i.if.end.i.i_crit_edge
  %refcnt.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %retval.0.i.i, i32 0, i32 4
  %20 = ptrtoint ptr %refcnt.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %refcnt.i.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %21)
  %cmp24.i.i = icmp slt i32 %21, 1
  br i1 %cmp24.i.i, label %land.rhs30.i.i, label %if.end.i.i.get_pwq.exit.i_crit_edge

if.end.i.i.get_pwq.exit.i_crit_edge:              ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %get_pwq.exit.i

land.rhs30.i.i:                                   ; preds = %if.end.i.i
  %.b82.i.i = load i1, ptr @get_pwq.__already_done, align 1
  br i1 %.b82.i.i, label %land.rhs30.i.i.get_pwq.exit.i_crit_edge, label %if.then41.i.i, !prof !679

land.rhs30.i.i.get_pwq.exit.i_crit_edge:          ; preds = %land.rhs30.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %get_pwq.exit.i

if.then41.i.i:                                    ; preds = %land.rhs30.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @get_pwq.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1123, i32 noundef 9, ptr noundef null) #21
  br label %get_pwq.exit.i

get_pwq.exit.i:                                   ; preds = %if.then41.i.i, %land.rhs30.i.i.get_pwq.exit.i_crit_edge, %if.end.i.i.get_pwq.exit.i_crit_edge
  %22 = ptrtoint ptr %refcnt.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %refcnt.i.i, align 16
  %inc.i.i = add i32 %23, 1
  store i32 %inc.i.i, ptr %refcnt.i.i, align 16
  %maydays.i = getelementptr inbounds %struct.workqueue_struct, ptr %11, i32 0, i32 9
  %prev.i.i = getelementptr inbounds %struct.workqueue_struct, ptr %11, i32 0, i32 9, i32 1
  %24 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %prev.i.i, align 4
  %call.i.i44.i = tail call zeroext i1 @__list_add_valid(ptr noundef %mayday_node.i, ptr noundef %25, ptr noundef %maydays.i) #21
  br i1 %call.i.i44.i, label %if.end.i.i.i, label %get_pwq.exit.i.list_add_tail.exit.i_crit_edge

get_pwq.exit.i.list_add_tail.exit.i_crit_edge:    ; preds = %get_pwq.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_add_tail.exit.i

if.end.i.i.i:                                     ; preds = %get_pwq.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  %26 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %mayday_node.i, ptr %prev.i.i, align 4
  %27 = ptrtoint ptr %mayday_node.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %maydays.i, ptr %mayday_node.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.pool_workqueue, ptr %retval.0.i.i, i32 0, i32 10, i32 1
  %28 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %25, ptr %prev3.i.i.i, align 16
  %29 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile ptr %mayday_node.i, ptr %25, align 4
  br label %list_add_tail.exit.i

list_add_tail.exit.i:                             ; preds = %if.end.i.i.i, %get_pwq.exit.i.list_add_tail.exit.i_crit_edge
  %30 = ptrtoint ptr %rescuer.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %rescuer.i, align 4
  %task.i = getelementptr inbounds %struct.worker, ptr %31, i32 0, i32 6
  %32 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %task.i, align 4
  %call34.i = tail call i32 @wake_up_process(ptr noundef %33) #21
  br label %send_mayday.exit

send_mayday.exit:                                 ; preds = %list_add_tail.exit.i, %if.end28.i.send_mayday.exit_crit_edge, %if.end.i.send_mayday.exit_crit_edge
  %34 = ptrtoint ptr %.pn23 to i32
  call void @__asan_load4_noabort(i32 %34)
  %.pn = load ptr, ptr %.pn23, align 4
  %cmp.not = icmp eq ptr %.pn, %worklist.i.i
  br i1 %cmp.not, label %send_mayday.exit.if.end_crit_edge, label %send_mayday.exit.for.body_crit_edge

send_mayday.exit.for.body_crit_edge:              ; preds = %send_mayday.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

send_mayday.exit.if.end_crit_edge:                ; preds = %send_mayday.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %send_mayday.exit.if.end_crit_edge, %if.then.if.end_crit_edge, %need_to_create_worker.exit.if.end_crit_edge, %need_more_worker.exit.i.if.end_crit_edge, %entry.if.end_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef nonnull @wq_mayday_lock) #21
  tail call void @_raw_spin_unlock_irq(ptr noundef %add.ptr) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %35 = load volatile i32, ptr @jiffies, align 128
  %add = add i32 %35, 10
  %call12 = tail call i32 @mod_timer(ptr noundef %t, i32 noundef %add) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @idr_alloc(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__bitmap_weight(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @wq_watchdog_timer_fn(ptr nocapture noundef readnone %unused) #0 align 64 {
entry:
  %pi = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile i32, ptr @wq_watchdog_thresh, align 4
  %mul = mul i32 %0, 100
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %1 = load volatile i32, ptr @jiffies, align 128
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pi) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mul)
  %tobool.not = icmp eq i32 %mul, 0
  br i1 %tobool.not, label %entry.cleanup75_crit_edge, label %if.end

entry.cleanup75_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup75

if.end:                                           ; preds = %entry
  %2 = tail call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %5, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !695
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #21
  %call.i = tail call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i, label %if.end.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end.rcu_read_lock.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 696, ptr noundef nonnull @.str.100) #21
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end.rcu_read_lock.exit_crit_edge
  %6 = ptrtoint ptr %pi to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %pi, align 4
  %call109 = call ptr @idr_get_next(ptr noundef nonnull @worker_pool_idr, ptr noundef nonnull %pi) #21
  %cmp.not110 = icmp eq ptr %call109, null
  br i1 %cmp.not110, label %rcu_read_lock.exit.for.end_crit_edge, label %do.body1.lr.ph

rcu_read_lock.exit.for.end_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

do.body1.lr.ph:                                   ; preds = %rcu_read_lock.exit
  %add49 = sub i32 %mul, %1
  br label %do.body1

do.body1:                                         ; preds = %for.inc.do.body1_crit_edge, %do.body1.lr.ph
  %call112 = phi ptr [ %call109, %do.body1.lr.ph ], [ %call, %for.inc.do.body1_crit_edge ]
  %lockup_detected.0.off0111 = phi i1 [ false, %do.body1.lr.ph ], [ %lockup_detected.2.off0, %for.inc.do.body1_crit_edge ]
  %call2 = call i32 @rcu_read_lock_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true, label %do.body1.if.else_crit_edge

do.body1.if.else_crit_edge:                       ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

land.lhs.true:                                    ; preds = %do.body1
  %call.i96 = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @wq_pool_mutex, i32 0, i32 5), i32 noundef -1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i96)
  %tobool5.not = icmp eq i32 %call.i96, 0
  br i1 %tobool5.not, label %land.lhs.true6, label %land.lhs.true.if.else_crit_edge

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

land.lhs.true6:                                   ; preds = %land.lhs.true
  %call7 = call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %land.lhs.true6.if.else_crit_edge, label %land.lhs.true9

land.lhs.true6.if.else_crit_edge:                 ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

land.lhs.true9:                                   ; preds = %land.lhs.true6
  %.b95 = load i1, ptr @wq_watchdog_timer_fn.__warned, align 1
  br i1 %.b95, label %land.lhs.true9.if.else_crit_edge, label %if.then11

land.lhs.true9.if.else_crit_edge:                 ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

if.then11:                                        ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @wq_watchdog_timer_fn.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 5851, ptr noundef nonnull @.str.31) #21
  br label %if.else

if.else:                                          ; preds = %if.then11, %land.lhs.true9.if.else_crit_edge, %land.lhs.true6.if.else_crit_edge, %land.lhs.true.if.else_crit_edge, %do.body1.if.else_crit_edge
  %worklist = getelementptr inbounds %struct.worker_pool, ptr %call112, i32 0, i32 7
  %7 = ptrtoint ptr %worklist to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile ptr, ptr %worklist, align 4
  %cmp.i.not = icmp eq ptr %8, %worklist
  br i1 %cmp.i.not, label %if.else.for.inc_crit_edge, label %if.end21

if.else.for.inc_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.end21:                                         ; preds = %if.else
  %cpu = getelementptr inbounds %struct.worker_pool, ptr %call112, i32 0, i32 1
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %10)
  %cmp23 = icmp sgt i32 %10, -1
  br i1 %cmp23, label %do.body29, label %if.end21.do.end43_crit_edge

if.end21.do.end43_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end43

do.body29:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #23
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, ptrtoint (ptr @wq_watchdog_touched_cpu to i32)
  %13 = inttoptr i32 %add to ptr
  br label %do.end43

do.end43:                                         ; preds = %do.body29, %if.end21.do.end43_crit_edge
  %touched.0.in = phi ptr [ %13, %do.body29 ], [ @wq_watchdog_touched, %if.end21.do.end43_crit_edge ]
  %14 = ptrtoint ptr %touched.0.in to i32
  call void @__asan_load4_noabort(i32 %14)
  %touched.0 = load volatile i32, ptr %touched.0.in, align 4
  %watchdog_ts = getelementptr inbounds %struct.worker_pool, ptr %call112, i32 0, i32 5
  %15 = ptrtoint ptr %watchdog_ts to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %watchdog_ts, align 4
  %sub = sub i32 %touched.0, %16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp45 = icmp slt i32 %sub, 0
  %.touched.0 = select i1 %cmp45, i32 %16, i32 %touched.0
  %sub50 = add i32 %add49, %.touched.0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub50)
  %cmp51 = icmp slt i32 %sub50, 0
  br i1 %cmp51, label %if.then52, label %do.end43.for.inc_crit_edge

do.end43.for.inc_crit_edge:                       ; preds = %do.end43
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.then52:                                        ; preds = %do.end43
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.195) #26
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %17 = load i32, ptr @nr_cpu_ids, align 4
  %attrs.i = getelementptr inbounds %struct.worker_pool, ptr %call112, i32 0, i32 18
  %18 = ptrtoint ptr %attrs.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %attrs.i, align 4
  %cpumask.i = getelementptr inbounds %struct.workqueue_attrs, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %cpumask.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %cpumask.i, align 4
  %call.i97 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.130, i32 noundef %17, ptr noundef %21) #26
  %node.i = getelementptr inbounds %struct.worker_pool, ptr %call112, i32 0, i32 2
  %22 = ptrtoint ptr %node.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %node.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %23)
  %cmp.not.i = icmp eq i32 %23, -1
  br i1 %cmp.not.i, label %if.then52.pr_cont_pool_info.exit_crit_edge, label %do.end2.i

if.then52.pr_cont_pool_info.exit_crit_edge:       ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %pr_cont_pool_info.exit

do.end2.i:                                        ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  %call5.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.133, i32 noundef %23) #26
  br label %pr_cont_pool_info.exit

pr_cont_pool_info.exit:                           ; preds = %do.end2.i, %if.then52.pr_cont_pool_info.exit_crit_edge
  %flags.i = getelementptr inbounds %struct.worker_pool, ptr %call112, i32 0, i32 4
  %24 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %flags.i, align 4
  %26 = ptrtoint ptr %attrs.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %attrs.i, align 4
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %27, align 4
  %call10.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.136, i32 noundef %25, i32 noundef %29) #26
  %sub62 = sub i32 %1, %16
  %call63 = call i32 @jiffies_to_msecs(i32 noundef %sub62) #21
  %div = udiv i32 %call63, 1000
  %call64 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.198, i32 noundef %div) #26
  br label %for.inc

for.inc:                                          ; preds = %pr_cont_pool_info.exit, %do.end43.for.inc_crit_edge, %if.else.for.inc_crit_edge
  %lockup_detected.2.off0 = phi i1 [ %lockup_detected.0.off0111, %if.else.for.inc_crit_edge ], [ true, %pr_cont_pool_info.exit ], [ %lockup_detected.0.off0111, %do.end43.for.inc_crit_edge ]
  %30 = ptrtoint ptr %pi to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %pi, align 4
  %add69 = add i32 %31, 1
  store i32 %add69, ptr %pi, align 4
  %call = call ptr @idr_get_next(ptr noundef nonnull @worker_pool_idr, ptr noundef nonnull %pi) #21
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.do.body1_crit_edge

for.inc.do.body1_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body1

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %rcu_read_lock.exit.for.end_crit_edge
  %lockup_detected.0.off0.lcssa = phi i1 [ false, %rcu_read_lock.exit.for.end_crit_edge ], [ %lockup_detected.2.off0, %for.inc.for.end_crit_edge ]
  %call.i98 = call zeroext i1 @rcu_is_watching() #21
  br i1 %call.i98, label %for.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i101

for.end.rcu_read_unlock.exit_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

land.lhs.true.i101:                               ; preds = %for.end
  %call1.i99 = call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i99)
  %tobool.not.i100 = icmp eq i32 %call1.i99, 0
  br i1 %tobool.not.i100, label %land.lhs.true.i101.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i103

land.lhs.true.i101.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i101
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

land.lhs.true2.i103:                              ; preds = %land.lhs.true.i101
  %.b4.i102 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i102, label %land.lhs.true2.i103.rcu_read_unlock.exit_crit_edge, label %if.then.i104

land.lhs.true2.i103.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i103
  call void @__sanitizer_cov_trace_pc() #23
  br label %rcu_read_unlock.exit

if.then.i104:                                     ; preds = %land.lhs.true2.i103
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.99, i32 noundef 724, ptr noundef nonnull @.str.102) #21
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i104, %land.lhs.true2.i103.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i101.rcu_read_unlock.exit_crit_edge, %for.end.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !699
  %32 = call i32 @llvm.read_register.i32(metadata !669) #21
  %and.i.i.i.i.i105 = and i32 %32, -16384
  %33 = inttoptr i32 %and.i.i.i.i.i105 to ptr
  %preempt_count.i.i.i.i106 = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %preempt_count.i.i.i.i106 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %preempt_count.i.i.i.i106, align 4
  %sub.i.i.i = add i32 %35, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i106, align 4
  call void @rcu_read_unlock_strict() #21
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #21
  br i1 %lockup_detected.0.off0.lcssa, label %if.then71, label %rcu_read_unlock.exit.if.end72_crit_edge

rcu_read_unlock.exit.if.end72_crit_edge:          ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end72

if.then71:                                        ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #23
  call void @show_all_workqueues()
  br label %if.end72

if.end72:                                         ; preds = %if.then71, %rcu_read_unlock.exit.if.end72_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %36 = load volatile i32, ptr @jiffies, align 128
  store i32 %36, ptr @wq_watchdog_touched, align 4
  %call4.i = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %37 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call4.i, i32 %37)
  %cmp5.i = icmp ult i32 %call4.i, %37
  br i1 %cmp5.i, label %if.end72.for.body.i_crit_edge, label %if.end72.wq_watchdog_reset_touched.exit_crit_edge

if.end72.wq_watchdog_reset_touched.exit_crit_edge: ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #23
  br label %wq_watchdog_reset_touched.exit

if.end72.for.body.i_crit_edge:                    ; preds = %if.end72
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end72.for.body.i_crit_edge
  %call6.i = phi i32 [ %call.i107, %for.body.i.for.body.i_crit_edge ], [ %call4.i, %if.end72.for.body.i_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %38 = load volatile i32, ptr @jiffies, align 128
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call6.i
  %39 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %40, ptrtoint (ptr @wq_watchdog_touched_cpu to i32)
  %41 = inttoptr i32 %add.i to ptr
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %38, ptr %41, align 4
  %call.i107 = call i32 @cpumask_next(i32 noundef %call6.i, ptr noundef nonnull @__cpu_possible_mask) #27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %43 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.i108 = icmp ult i32 %call.i107, %43
  br i1 %cmp.i108, label %for.body.i.for.body.i_crit_edge, label %for.body.i.wq_watchdog_reset_touched.exit_crit_edge

for.body.i.wq_watchdog_reset_touched.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %wq_watchdog_reset_touched.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

wq_watchdog_reset_touched.exit:                   ; preds = %for.body.i.wq_watchdog_reset_touched.exit_crit_edge, %if.end72.wq_watchdog_reset_touched.exit_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %44 = load volatile i32, ptr @jiffies, align 128
  %add73 = add i32 %44, %mul
  %call74 = call i32 @mod_timer(ptr noundef nonnull @wq_watchdog_timer, i32 noundef %add73) #21
  br label %cleanup75

cleanup75:                                        ; preds = %wq_watchdog_reset_touched.exit, %entry.cleanup75_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pi) #21
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #20

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #20

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #20

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #21

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #22 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 223)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #22 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 223)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { nocallback nofree nosync nounwind willreturn }
attributes #8 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #14 = { nounwind readonly }
attributes #15 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { argmemonly mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #17 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #18 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { inlinehint nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #20 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #21 = { nounwind }
attributes #22 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #23 = { nomerge }
attributes #24 = { nobuiltin nounwind }
attributes #25 = { nobuiltin }
attributes #26 = { cold nounwind }
attributes #27 = { nounwind readonly willreturn }
attributes #28 = { nounwind allocsize(0) }
attributes #29 = { nounwind allocsize(2) }

!llvm.asan.globals = !{!0, !2, !3, !5, !6, !8, !9, !11, !13, !15, !17, !19, !21, !23, !25, !26, !27, !29, !30, !31, !33, !34, !35, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !57, !59, !61, !63, !65, !66, !68, !70, !72, !74, !76, !78, !80, !82, !84, !86, !88, !90, !92, !94, !96, !98, !99, !101, !102, !103, !104, !106, !108, !110, !112, !114, !116, !118, !120, !121, !123, !124, !126, !128, !129, !131, !133, !135, !137, !138, !139, !140, !142, !144, !146, !148, !150, !152, !154, !156, !157, !158, !159, !161, !162, !163, !165, !166, !167, !169, !171, !172, !173, !174, !176, !178, !179, !180, !181, !183, !185, !186, !188, !190, !192, !194, !195, !197, !199, !201, !203, !205, !207, !209, !211, !213, !215, !217, !219, !221, !223, !225, !227, !229, !231, !233, !235, !237, !239, !241, !243, !245, !247, !249, !250, !252, !253, !255, !257, !259, !261, !263, !265, !267, !269, !271, !272, !273, !274, !276, !277, !279, !280, !281, !282, !283, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !311, !313, !315, !317, !319, !320, !322, !324, !325, !326, !327, !329, !331, !333, !334, !335, !336, !337, !338, !339, !340, !342, !344, !346, !348, !350, !352, !354, !356, !358, !359, !361, !363, !365, !367, !369, !370, !372, !373, !375, !376, !378, !379, !381, !382, !383, !385, !387, !389, !391, !393, !394, !396, !397, !399, !401, !402, !403, !404, !405, !407, !408, !409, !410, !412, !414, !416, !418, !420, !422, !424, !426, !428, !430, !431, !432, !433, !435, !436, !437, !438, !439, !441, !443, !445, !446, !448, !449, !450, !452, !453, !455, !456, !458, !460, !461, !462, !463, !465, !466, !467, !468, !469, !471, !472, !473, !475, !476, !477, !478, !479, !481, !482, !484, !485, !486, !488, !489, !491, !492, !493, !495, !496, !498, !499, !500, !501, !503, !504, !505, !507, !508, !509, !511, !512, !513, !514, !516, !517, !518, !520, !521, !523, !524, !525, !526, !528, !529, !530, !532, !533, !534, !536, !537, !538, !539, !541, !542, !544, !545, !546, !548, !550, !552, !554, !556, !558, !560, !562, !564, !566, !568, !570, !572, !574, !576, !578, !580, !581, !582, !583, !585, !587, !589, !591, !593, !595, !597, !598, !600, !602, !603, !605, !607, !608, !610, !612, !614, !616, !618, !620, !622, !624, !626, !627, !629, !631, !633, !635, !637, !638, !640, !641, !643, !644, !646, !647, !648, !649, !651, !652, !653, !655, !657, !658, !660, !662, !663, !664, !665, !667, !668}
!llvm.named.register.sp = !{!669}
!llvm.module.flags = !{!670, !671, !672, !673, !674, !675, !676, !677}
!llvm.ident = !{!678}

!0 = !{ptr @__param_disable_numa, !1, !"__param_disable_numa", i1 false, i1 false}
!1 = !{!"../kernel/workqueue.c", i32 302, i32 1}
!2 = !{ptr @__UNIQUE_ID_disable_numatype242, !1, !"__UNIQUE_ID_disable_numatype242", i1 false, i1 false}
!3 = !{ptr @__param_power_efficient, !4, !"__param_power_efficient", i1 false, i1 false}
!4 = !{!"../kernel/workqueue.c", i32 306, i32 1}
!5 = !{ptr @__UNIQUE_ID_power_efficienttype243, !4, !"__UNIQUE_ID_power_efficienttype243", i1 false, i1 false}
!6 = !{ptr @__param_debug_force_rr_cpu, !7, !"__param_debug_force_rr_cpu", i1 false, i1 false}
!7 = !{!"../kernel/workqueue.c", i32 340, i32 1}
!8 = !{ptr @__UNIQUE_ID_debug_force_rr_cputype244, !7, !"__UNIQUE_ID_debug_force_rr_cputype244", i1 false, i1 false}
!9 = !{ptr @__ksymtab_system_wq, !10, !"__ksymtab_system_wq", i1 false, i1 false}
!10 = !{!"../kernel/workqueue.c", i32 357, i32 1}
!11 = !{ptr @__ksymtab_system_highpri_wq, !12, !"__ksymtab_system_highpri_wq", i1 false, i1 false}
!12 = !{!"../kernel/workqueue.c", i32 359, i32 1}
!13 = !{ptr @__ksymtab_system_long_wq, !14, !"__ksymtab_system_long_wq", i1 false, i1 false}
!14 = !{!"../kernel/workqueue.c", i32 361, i32 1}
!15 = !{ptr @__ksymtab_system_unbound_wq, !16, !"__ksymtab_system_unbound_wq", i1 false, i1 false}
!16 = !{!"../kernel/workqueue.c", i32 363, i32 1}
!17 = !{ptr @__ksymtab_system_freezable_wq, !18, !"__ksymtab_system_freezable_wq", i1 false, i1 false}
!18 = !{!"../kernel/workqueue.c", i32 365, i32 1}
!19 = !{ptr @__ksymtab_system_power_efficient_wq, !20, !"__ksymtab_system_power_efficient_wq", i1 false, i1 false}
!20 = !{!"../kernel/workqueue.c", i32 367, i32 1}
!21 = !{ptr @__ksymtab_system_freezable_power_efficient_wq, !22, !"__ksymtab_system_freezable_power_efficient_wq", i1 false, i1 false}
!22 = !{!"../kernel/workqueue.c", i32 369, i32 1}
!23 = !{ptr @__tracepoint_workqueue_queue_work, !24, !"__tracepoint_workqueue_queue_work", i1 false, i1 false}
!24 = !{!"../include/trace/events/workqueue.h", i32 23, i32 1}
!25 = !{ptr @__tracepoint_ptr_workqueue_queue_work, !24, !"__tracepoint_ptr_workqueue_queue_work", i1 false, i1 false}
!26 = !{ptr @__SCK__tp_func_workqueue_queue_work, !24, !"__SCK__tp_func_workqueue_queue_work", i1 false, i1 false}
!27 = !{ptr @__tracepoint_workqueue_activate_work, !28, !"__tracepoint_workqueue_activate_work", i1 false, i1 false}
!28 = !{!"../include/trace/events/workqueue.h", i32 59, i32 1}
!29 = !{ptr @__tracepoint_ptr_workqueue_activate_work, !28, !"__tracepoint_ptr_workqueue_activate_work", i1 false, i1 false}
!30 = !{ptr @__SCK__tp_func_workqueue_activate_work, !28, !"__SCK__tp_func_workqueue_activate_work", i1 false, i1 false}
!31 = !{ptr @__tracepoint_workqueue_execute_start, !32, !"__tracepoint_workqueue_execute_start", i1 false, i1 false}
!32 = !{!"../include/trace/events/workqueue.h", i32 82, i32 1}
!33 = !{ptr @__tracepoint_ptr_workqueue_execute_start, !32, !"__tracepoint_ptr_workqueue_execute_start", i1 false, i1 false}
!34 = !{ptr @__SCK__tp_func_workqueue_execute_start, !32, !"__SCK__tp_func_workqueue_execute_start", i1 false, i1 false}
!35 = !{ptr @__tracepoint_workqueue_execute_end, !36, !"__tracepoint_workqueue_execute_end", i1 false, i1 false}
!36 = !{!"../include/trace/events/workqueue.h", i32 108, i32 1}
!37 = !{ptr @__tracepoint_ptr_workqueue_execute_end, !36, !"__tracepoint_ptr_workqueue_execute_end", i1 false, i1 false}
!38 = !{ptr @__SCK__tp_func_workqueue_execute_end, !36, !"__SCK__tp_func_workqueue_execute_end", i1 false, i1 false}
!39 = !{ptr @event_class_workqueue_queue_work, !24, !"event_class_workqueue_queue_work", i1 false, i1 false}
!40 = !{ptr @event_workqueue_queue_work, !24, !"event_workqueue_queue_work", i1 false, i1 false}
!41 = !{ptr @__event_workqueue_queue_work, !24, !"__event_workqueue_queue_work", i1 false, i1 false}
!42 = !{ptr @event_class_workqueue_activate_work, !28, !"event_class_workqueue_activate_work", i1 false, i1 false}
!43 = !{ptr @event_workqueue_activate_work, !28, !"event_workqueue_activate_work", i1 false, i1 false}
!44 = !{ptr @__event_workqueue_activate_work, !28, !"__event_workqueue_activate_work", i1 false, i1 false}
!45 = !{ptr @event_class_workqueue_execute_start, !32, !"event_class_workqueue_execute_start", i1 false, i1 false}
!46 = !{ptr @event_workqueue_execute_start, !32, !"event_workqueue_execute_start", i1 false, i1 false}
!47 = !{ptr @__event_workqueue_execute_start, !32, !"__event_workqueue_execute_start", i1 false, i1 false}
!48 = !{ptr @event_class_workqueue_execute_end, !36, !"event_class_workqueue_execute_end", i1 false, i1 false}
!49 = !{ptr @event_workqueue_execute_end, !36, !"event_workqueue_execute_end", i1 false, i1 false}
!50 = !{ptr @__event_workqueue_execute_end, !36, !"__event_workqueue_execute_end", i1 false, i1 false}
!51 = !{ptr @__bpf_trace_tp_map_workqueue_queue_work, !24, !"__bpf_trace_tp_map_workqueue_queue_work", i1 false, i1 false}
!52 = !{ptr @__bpf_trace_tp_map_workqueue_activate_work, !28, !"__bpf_trace_tp_map_workqueue_activate_work", i1 false, i1 false}
!53 = !{ptr @__bpf_trace_tp_map_workqueue_execute_start, !32, !"__bpf_trace_tp_map_workqueue_execute_start", i1 false, i1 false}
!54 = !{ptr @__bpf_trace_tp_map_workqueue_execute_end, !36, !"__bpf_trace_tp_map_workqueue_execute_end", i1 false, i1 false}
!55 = !{ptr @__ksymtab___init_work, !56, !"__ksymtab___init_work", i1 false, i1 false}
!56 = !{!"../kernel/workqueue.c", i32 520, i32 1}
!57 = !{ptr @__ksymtab_destroy_work_on_stack, !58, !"__ksymtab_destroy_work_on_stack", i1 false, i1 false}
!58 = !{!"../kernel/workqueue.c", i32 526, i32 1}
!59 = !{ptr @__ksymtab_destroy_delayed_work_on_stack, !60, !"__ksymtab_destroy_delayed_work_on_stack", i1 false, i1 false}
!60 = !{!"../kernel/workqueue.c", i32 533, i32 1}
!61 = !{ptr @__ksymtab_queue_work_on, !62, !"__ksymtab_queue_work_on", i1 false, i1 false}
!62 = !{!"../kernel/workqueue.c", i32 1569, i32 1}
!63 = distinct !{null, !64, !"__already_done", i1 false, i1 false}
!64 = !{!"../kernel/workqueue.c", i32 1639, i32 2}
!65 = !{ptr @.str, !64, !"<string literal>", i1 false, i1 false}
!66 = !{ptr @__ksymtab_queue_work_node, !67, !"__ksymtab_queue_work_node", i1 false, i1 false}
!67 = !{!"../kernel/workqueue.c", i32 1653, i32 1}
!68 = !{ptr @__ksymtab_delayed_work_timer_fn, !69, !"__ksymtab_delayed_work_timer_fn", i1 false, i1 false}
!69 = !{!"../kernel/workqueue.c", i32 1662, i32 1}
!70 = !{ptr @__ksymtab_queue_delayed_work_on, !71, !"__ksymtab_queue_delayed_work_on", i1 false, i1 false}
!71 = !{!"../kernel/workqueue.c", i32 1725, i32 1}
!72 = !{ptr @__ksymtab_mod_delayed_work_on, !73, !"__ksymtab_mod_delayed_work_on", i1 false, i1 false}
!73 = !{!"../kernel/workqueue.c", i32 1763, i32 1}
!74 = !{ptr @__ksymtab_queue_rcu_work, !75, !"__ksymtab_queue_rcu_work", i1 false, i1 false}
!75 = !{!"../kernel/workqueue.c", i32 1797, i32 1}
!76 = distinct !{null, !77, !"__already_done", i1 false, i1 false}
!77 = !{!"../kernel/workqueue.c", i32 2843, i32 3}
!78 = distinct !{null, !79, !"__already_done", i1 false, i1 false}
!79 = !{!"../kernel/workqueue.c", i32 2849, i32 4}
!80 = distinct !{null, !81, !"__already_done", i1 false, i1 false}
!81 = !{!"../kernel/workqueue.c", i32 2862, i32 4}
!82 = distinct !{null, !83, !"__already_done", i1 false, i1 false}
!83 = !{!"../kernel/workqueue.c", i32 2898, i32 2}
!84 = distinct !{null, !85, !"__already_done", i1 false, i1 false}
!85 = !{!"../kernel/workqueue.c", i32 2899, i32 2}
!86 = distinct !{null, !87, !"__already_done", i1 false, i1 false}
!87 = !{!"../kernel/workqueue.c", i32 2912, i32 3}
!88 = distinct !{null, !89, !"__already_done", i1 false, i1 false}
!89 = !{!"../kernel/workqueue.c", i32 2937, i32 4}
!90 = distinct !{null, !91, !"__already_done", i1 false, i1 false}
!91 = !{!"../kernel/workqueue.c", i32 2945, i32 3}
!92 = distinct !{null, !93, !"__already_done", i1 false, i1 false}
!93 = !{!"../kernel/workqueue.c", i32 2946, i32 3}
!94 = !{ptr @__ksymtab_flush_workqueue, !95, !"__ksymtab_flush_workqueue", i1 false, i1 false}
!95 = !{!"../kernel/workqueue.c", i32 2964, i32 1}
!96 = distinct !{null, !97, !"__warned", i1 false, i1 false}
!97 = !{!"../kernel/workqueue.c", i32 2996, i32 2}
!98 = !{ptr @.str.9, !97, !"<string literal>", i1 false, i1 false}
!99 = !{ptr @.str.10, !100, !"<string literal>", i1 false, i1 false}
!100 = !{!"../kernel/workqueue.c", i32 3008, i32 4}
!101 = !{ptr @.str.11, !100, !"<string literal>", i1 false, i1 false}
!102 = !{ptr @drain_workqueue._entry, !100, !"_entry", i1 false, i1 false}
!103 = !{ptr @drain_workqueue._entry_ptr, !100, !"_entry_ptr", i1 false, i1 false}
!104 = !{ptr @__ksymtab_drain_workqueue, !105, !"__ksymtab_drain_workqueue", i1 false, i1 false}
!105 = !{!"../kernel/workqueue.c", i32 3019, i32 1}
!106 = !{ptr @__ksymtab_flush_work, !107, !"__ksymtab_flush_work", i1 false, i1 false}
!107 = !{!"../kernel/workqueue.c", i32 3116, i32 1}
!108 = !{ptr @__ksymtab_cancel_work_sync, !109, !"__ksymtab_cancel_work_sync", i1 false, i1 false}
!109 = !{!"../kernel/workqueue.c", i32 3218, i32 1}
!110 = !{ptr @__ksymtab_flush_delayed_work, !111, !"__ksymtab_flush_delayed_work", i1 false, i1 false}
!111 = !{!"../kernel/workqueue.c", i32 3240, i32 1}
!112 = !{ptr @__ksymtab_flush_rcu_work, !113, !"__ksymtab_flush_rcu_work", i1 false, i1 false}
!113 = !{!"../kernel/workqueue.c", i32 3260, i32 1}
!114 = !{ptr @__ksymtab_cancel_delayed_work, !115, !"__ksymtab_cancel_delayed_work", i1 false, i1 false}
!115 = !{!"../kernel/workqueue.c", i32 3299, i32 1}
!116 = !{ptr @__ksymtab_cancel_delayed_work_sync, !117, !"__ksymtab_cancel_delayed_work_sync", i1 false, i1 false}
!117 = !{!"../kernel/workqueue.c", i32 3314, i32 1}
!118 = !{ptr @schedule_on_each_cpu.__key, !119, !"__key", i1 false, i1 false}
!119 = !{!"../kernel/workqueue.c", i32 3341, i32 3}
!120 = !{ptr @.str.12, !119, !"<string literal>", i1 false, i1 false}
!121 = !{ptr @execute_in_process_context.__key, !122, !"__key", i1 false, i1 false}
!122 = !{!"../kernel/workqueue.c", i32 3372, i32 2}
!123 = !{ptr @.str.13, !122, !"<string literal>", i1 false, i1 false}
!124 = !{ptr @__ksymtab_execute_in_process_context, !125, !"__ksymtab_execute_in_process_context", i1 false, i1 false}
!125 = !{!"../kernel/workqueue.c", i32 3377, i32 1}
!126 = !{ptr @alloc_workqueue.__key, !127, !"__key", i1 false, i1 false}
!127 = !{!"../kernel/workqueue.c", i32 4345, i32 2}
!128 = !{ptr @.str.14, !127, !"<string literal>", i1 false, i1 false}
!129 = distinct !{null, !130, !"__warned", i1 false, i1 false}
!130 = !{!"../kernel/workqueue.c", i32 4372, i32 2}
!131 = !{ptr @__ksymtab_alloc_workqueue, !132, !"__ksymtab_alloc_workqueue", i1 false, i1 false}
!132 = !{!"../kernel/workqueue.c", i32 4393, i32 1}
!133 = distinct !{null, !134, !"__warned", i1 false, i1 false}
!134 = !{!"../kernel/workqueue.c", i32 4451, i32 2}
!135 = !{ptr @.str.15, !136, !"<string literal>", i1 false, i1 false}
!136 = !{!"../kernel/workqueue.c", i32 4454, i32 4}
!137 = !{ptr @.str.16, !136, !"<string literal>", i1 false, i1 false}
!138 = !{ptr @destroy_workqueue._entry, !136, !"_entry", i1 false, i1 false}
!139 = !{ptr @destroy_workqueue._entry_ptr, !136, !"_entry_ptr", i1 false, i1 false}
!140 = !{ptr @__ksymtab_destroy_workqueue, !141, !"__ksymtab_destroy_workqueue", i1 false, i1 false}
!141 = !{!"../kernel/workqueue.c", i32 4502, i32 1}
!142 = distinct !{null, !143, !"__warned", i1 false, i1 false}
!143 = !{!"../kernel/workqueue.c", i32 4529, i32 2}
!144 = !{ptr @__ksymtab_workqueue_set_max_active, !145, !"__ksymtab_workqueue_set_max_active", i1 false, i1 false}
!145 = !{!"../kernel/workqueue.c", i32 4534, i32 1}
!146 = !{ptr @__ksymtab_current_work, !147, !"__ksymtab_current_work", i1 false, i1 false}
!147 = !{!"../kernel/workqueue.c", i32 4550, i32 1}
!148 = !{ptr @__ksymtab_workqueue_congested, !149, !"__ksymtab_workqueue_congested", i1 false, i1 false}
!149 = !{!"../kernel/workqueue.c", i32 4607, i32 1}
!150 = !{ptr @__ksymtab_work_busy, !151, !"__ksymtab_work_busy", i1 false, i1 false}
!151 = !{!"../kernel/workqueue.c", i32 4641, i32 1}
!152 = !{ptr @__ksymtab_set_worker_desc, !153, !"__ksymtab_set_worker_desc", i1 false, i1 false}
!153 = !{!"../kernel/workqueue.c", i32 4664, i32 1}
!154 = !{ptr @.str.17, !155, !"<string literal>", i1 false, i1 false}
!155 = !{!"../kernel/workqueue.c", i32 4708, i32 3}
!156 = !{ptr @.str.18, !155, !"<string literal>", i1 false, i1 false}
!157 = !{ptr @print_worker_info._entry, !155, !"_entry", i1 false, i1 false}
!158 = !{ptr @print_worker_info._entry_ptr, !155, !"_entry_ptr", i1 false, i1 false}
!159 = !{ptr @.str.20, !160, !"<string literal>", i1 false, i1 false}
!160 = !{!"../kernel/workqueue.c", i32 4710, i32 4}
!161 = !{ptr @print_worker_info._entry.19, !160, !"_entry", i1 false, i1 false}
!162 = !{ptr @print_worker_info._entry_ptr.21, !160, !"_entry_ptr", i1 false, i1 false}
!163 = !{ptr @.str.23, !164, !"<string literal>", i1 false, i1 false}
!164 = !{!"../kernel/workqueue.c", i32 4711, i32 3}
!165 = !{ptr @print_worker_info._entry.22, !164, !"_entry", i1 false, i1 false}
!166 = !{ptr @print_worker_info._entry_ptr.24, !164, !"_entry_ptr", i1 false, i1 false}
!167 = distinct !{null, !168, !"__warned", i1 false, i1 false}
!168 = !{!"../kernel/workqueue.c", i32 4819, i32 2}
!169 = !{ptr @.str.25, !170, !"<string literal>", i1 false, i1 false}
!170 = !{!"../kernel/workqueue.c", i32 4828, i32 2}
!171 = !{ptr @.str.26, !170, !"<string literal>", i1 false, i1 false}
!172 = !{ptr @show_one_workqueue._entry, !170, !"_entry", i1 false, i1 false}
!173 = !{ptr @show_one_workqueue._entry_ptr, !170, !"_entry_ptr", i1 false, i1 false}
!174 = distinct !{null, !175, !"__warned", i1 false, i1 false}
!175 = !{!"../kernel/workqueue.c", i32 4830, i32 2}
!176 = !{ptr @.str.28, !177, !"<string literal>", i1 false, i1 false}
!177 = !{!"../kernel/workqueue.c", i32 4912, i32 2}
!178 = !{ptr @.str.29, !177, !"<string literal>", i1 false, i1 false}
!179 = !{ptr @show_all_workqueues._entry, !177, !"_entry", i1 false, i1 false}
!180 = !{ptr @show_all_workqueues._entry_ptr, !177, !"_entry_ptr", i1 false, i1 false}
!181 = distinct !{null, !182, !"__warned", i1 false, i1 false}
!182 = !{!"../kernel/workqueue.c", i32 4914, i32 2}
!183 = distinct !{null, !184, !"__warned", i1 false, i1 false}
!184 = !{!"../kernel/workqueue.c", i32 4917, i32 2}
!185 = !{ptr @.str.31, !184, !"<string literal>", i1 false, i1 false}
!186 = !{ptr @.str.32, !187, !"<string literal>", i1 false, i1 false}
!187 = !{!"../kernel/workqueue.c", i32 4949, i32 39}
!188 = !{ptr @.str.33, !189, !"<string literal>", i1 false, i1 false}
!189 = !{!"../kernel/workqueue.c", i32 4952, i32 39}
!190 = distinct !{null, !191, !"__warned", i1 false, i1 false}
!191 = !{!"../kernel/workqueue.c", i32 5134, i32 2}
!192 = !{ptr @work_on_cpu.__key, !193, !"__key", i1 false, i1 false}
!193 = !{!"../kernel/workqueue.c", i32 5201, i32 2}
!194 = !{ptr @.str.34, !193, !"<string literal>", i1 false, i1 false}
!195 = !{ptr @__ksymtab_work_on_cpu, !196, !"__ksymtab_work_on_cpu", i1 false, i1 false}
!196 = !{!"../kernel/workqueue.c", i32 5207, i32 1}
!197 = !{ptr @__ksymtab_work_on_cpu_safe, !198, !"__ksymtab_work_on_cpu_safe", i1 false, i1 false}
!198 = !{!"../kernel/workqueue.c", i32 5230, i32 1}
!199 = distinct !{null, !200, !"__already_done", i1 false, i1 false}
!200 = !{!"../kernel/workqueue.c", i32 5252, i32 2}
!201 = distinct !{null, !202, !"__warned", i1 false, i1 false}
!202 = !{!"../kernel/workqueue.c", i32 5257, i32 3}
!203 = distinct !{null, !204, !"__already_done", i1 false, i1 false}
!204 = !{!"../kernel/workqueue.c", i32 5286, i32 2}
!205 = distinct !{null, !206, !"__warned", i1 false, i1 false}
!206 = !{!"../kernel/workqueue.c", i32 5296, i32 3}
!207 = distinct !{null, !208, !"__already_done", i1 false, i1 false}
!208 = !{!"../kernel/workqueue.c", i32 5297, i32 4}
!209 = distinct !{null, !210, !"__warned", i1 false, i1 false}
!210 = !{!"../kernel/workqueue.c", i32 5335, i32 3}
!211 = !{ptr @__initcall__kmod_workqueue__344_5707_wq_sysfs_init1, !212, !"__initcall__kmod_workqueue__344_5707_wq_sysfs_init1", i1 false, i1 false}
!212 = !{!"../kernel/workqueue.c", i32 5707, i32 1}
!213 = !{ptr @.str.36, !214, !"<string literal>", i1 false, i1 false}
!214 = !{!"../kernel/workqueue.c", i32 5751, i32 29}
!215 = !{ptr @wq_watchdog_touched_cpu, !216, !"wq_watchdog_touched_cpu", i1 false, i1 false}
!216 = !{!"../kernel/workqueue.c", i32 5827, i32 8}
!217 = !{ptr @__param_watchdog_thresh, !218, !"__param_watchdog_thresh", i1 false, i1 false}
!218 = !{!"../kernel/workqueue.c", i32 5937, i32 1}
!219 = !{ptr @.str.37, !220, !"<string literal>", i1 false, i1 false}
!220 = !{!"../kernel/workqueue.c", i32 6017, i32 14}
!221 = !{ptr @.str.38, !222, !"<string literal>", i1 false, i1 false}
!222 = !{!"../kernel/workqueue.c", i32 6057, i32 30}
!223 = !{ptr @.str.39, !224, !"<string literal>", i1 false, i1 false}
!224 = !{!"../kernel/workqueue.c", i32 6058, i32 38}
!225 = !{ptr @.str.40, !226, !"<string literal>", i1 false, i1 false}
!226 = !{!"../kernel/workqueue.c", i32 6059, i32 35}
!227 = !{ptr @.str.41, !228, !"<string literal>", i1 false, i1 false}
!228 = !{!"../kernel/workqueue.c", i32 6060, i32 38}
!229 = !{ptr @.str.42, !230, !"<string literal>", i1 false, i1 false}
!230 = !{!"../kernel/workqueue.c", i32 6062, i32 40}
!231 = !{ptr @.str.43, !232, !"<string literal>", i1 false, i1 false}
!232 = !{!"../kernel/workqueue.c", i32 6064, i32 46}
!233 = !{ptr @.str.44, !234, !"<string literal>", i1 false, i1 false}
!234 = !{!"../kernel/workqueue.c", i32 6066, i32 56}
!235 = !{ptr @.str.45, !236, !"<string literal>", i1 false, i1 false}
!236 = !{!"../kernel/workqueue.c", i32 6111, i32 3}
!237 = !{ptr @pwq_cache, !238, !"pwq_cache", i1 false, i1 false}
!238 = !{!"../kernel/workqueue.c", i32 296, i32 27}
!239 = !{ptr @wq_disable_numa, !240, !"wq_disable_numa", i1 false, i1 false}
!240 = !{!"../kernel/workqueue.c", i32 301, i32 13}
!241 = distinct !{null, !242, !"wq_online", i1 false, i1 false}
!242 = !{!"../kernel/workqueue.c", i32 308, i32 13}
!243 = distinct !{null, !244, !"workqueue_freezing", i1 false, i1 false}
!244 = !{!"../kernel/workqueue.c", i32 322, i32 13}
!245 = !{ptr @wq_unbound_cpumask, !246, !"wq_unbound_cpumask", i1 false, i1 false}
!246 = !{!"../kernel/workqueue.c", i32 325, i32 22}
!247 = !{ptr @__pcpu_unique_wq_rr_cpu_last, !248, !"__pcpu_unique_wq_rr_cpu_last", i1 false, i1 false}
!248 = !{!"../kernel/workqueue.c", i32 328, i32 8}
!249 = !{ptr @wq_rr_cpu_last, !248, !"wq_rr_cpu_last", i1 false, i1 false}
!250 = !{ptr @__pcpu_unique_cpu_worker_pools, !251, !"__pcpu_unique_cpu_worker_pools", i1 false, i1 false}
!251 = !{!"../kernel/workqueue.c", i32 343, i32 8}
!252 = !{ptr @cpu_worker_pools, !251, !"cpu_worker_pools", i1 false, i1 false}
!253 = !{ptr @unbound_std_wq_attrs, !254, !"unbound_std_wq_attrs", i1 false, i1 false}
!254 = !{!"../kernel/workqueue.c", i32 351, i32 32}
!255 = !{ptr @ordered_wq_attrs, !256, !"ordered_wq_attrs", i1 false, i1 false}
!256 = !{!"../kernel/workqueue.c", i32 354, i32 32}
!257 = !{ptr @system_wq, !258, !"system_wq", i1 false, i1 false}
!258 = !{!"../kernel/workqueue.c", i32 356, i32 26}
!259 = !{ptr @system_highpri_wq, !260, !"system_highpri_wq", i1 false, i1 false}
!260 = !{!"../kernel/workqueue.c", i32 358, i32 26}
!261 = !{ptr @system_long_wq, !262, !"system_long_wq", i1 false, i1 false}
!262 = !{!"../kernel/workqueue.c", i32 360, i32 26}
!263 = !{ptr @system_unbound_wq, !264, !"system_unbound_wq", i1 false, i1 false}
!264 = !{!"../kernel/workqueue.c", i32 362, i32 26}
!265 = !{ptr @system_freezable_wq, !266, !"system_freezable_wq", i1 false, i1 false}
!266 = !{!"../kernel/workqueue.c", i32 364, i32 26}
!267 = !{ptr @system_power_efficient_wq, !268, !"system_power_efficient_wq", i1 false, i1 false}
!268 = !{!"../kernel/workqueue.c", i32 366, i32 26}
!269 = !{ptr @system_freezable_power_efficient_wq, !270, !"system_freezable_power_efficient_wq", i1 false, i1 false}
!270 = !{!"../kernel/workqueue.c", i32 368, i32 26}
!271 = !{ptr @__pcpu_unique_wq_watchdog_touched_cpu, !216, !"__pcpu_unique_wq_watchdog_touched_cpu", i1 false, i1 false}
!272 = !{ptr @__param_str_disable_numa, !1, !"__param_str_disable_numa", i1 false, i1 false}
!273 = !{ptr @__param_str_power_efficient, !4, !"__param_str_power_efficient", i1 false, i1 false}
!274 = !{ptr @wq_power_efficient, !275, !"wq_power_efficient", i1 false, i1 false}
!275 = !{!"../kernel/workqueue.c", i32 305, i32 13}
!276 = !{ptr @__param_str_debug_force_rr_cpu, !7, !"__param_str_debug_force_rr_cpu", i1 false, i1 false}
!277 = !{ptr @wq_debug_force_rr_cpu, !278, !"wq_debug_force_rr_cpu", i1 false, i1 false}
!278 = !{!"../kernel/workqueue.c", i32 336, i32 13}
!279 = !{ptr @__tpstrtab_workqueue_queue_work, !24, !"__tpstrtab_workqueue_queue_work", i1 false, i1 false}
!280 = !{ptr @__tpstrtab_workqueue_activate_work, !28, !"__tpstrtab_workqueue_activate_work", i1 false, i1 false}
!281 = !{ptr @__tpstrtab_workqueue_execute_start, !32, !"__tpstrtab_workqueue_execute_start", i1 false, i1 false}
!282 = !{ptr @__tpstrtab_workqueue_execute_end, !36, !"__tpstrtab_workqueue_execute_end", i1 false, i1 false}
!283 = !{ptr @str__workqueue__trace_system_name, !284, !"str__workqueue__trace_system_name", i1 false, i1 false}
!284 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!285 = !{ptr @.str.46, !24, !"<string literal>", i1 false, i1 false}
!286 = !{ptr @.str.47, !24, !"<string literal>", i1 false, i1 false}
!287 = !{ptr @.str.48, !24, !"<string literal>", i1 false, i1 false}
!288 = !{ptr @.str.49, !24, !"<string literal>", i1 false, i1 false}
!289 = !{ptr @.str.50, !24, !"<string literal>", i1 false, i1 false}
!290 = !{ptr @.str.51, !24, !"<string literal>", i1 false, i1 false}
!291 = !{ptr @.str.52, !24, !"<string literal>", i1 false, i1 false}
!292 = !{ptr @.str.53, !24, !"<string literal>", i1 false, i1 false}
!293 = !{ptr @.str.54, !24, !"<string literal>", i1 false, i1 false}
!294 = !{ptr @trace_event_fields_workqueue_queue_work, !24, !"trace_event_fields_workqueue_queue_work", i1 false, i1 false}
!295 = !{ptr @trace_event_type_funcs_workqueue_queue_work, !24, !"trace_event_type_funcs_workqueue_queue_work", i1 false, i1 false}
!296 = !{ptr @.str.55, !24, !"<string literal>", i1 false, i1 false}
!297 = !{ptr @print_fmt_workqueue_queue_work, !24, !"print_fmt_workqueue_queue_work", i1 false, i1 false}
!298 = !{ptr @trace_event_fields_workqueue_activate_work, !28, !"trace_event_fields_workqueue_activate_work", i1 false, i1 false}
!299 = !{ptr @trace_event_type_funcs_workqueue_activate_work, !28, !"trace_event_type_funcs_workqueue_activate_work", i1 false, i1 false}
!300 = !{ptr @.str.56, !28, !"<string literal>", i1 false, i1 false}
!301 = !{ptr @print_fmt_workqueue_activate_work, !28, !"print_fmt_workqueue_activate_work", i1 false, i1 false}
!302 = !{ptr @trace_event_fields_workqueue_execute_start, !32, !"trace_event_fields_workqueue_execute_start", i1 false, i1 false}
!303 = !{ptr @trace_event_type_funcs_workqueue_execute_start, !32, !"trace_event_type_funcs_workqueue_execute_start", i1 false, i1 false}
!304 = !{ptr @.str.57, !32, !"<string literal>", i1 false, i1 false}
!305 = !{ptr @print_fmt_workqueue_execute_start, !32, !"print_fmt_workqueue_execute_start", i1 false, i1 false}
!306 = !{ptr @trace_event_fields_workqueue_execute_end, !36, !"trace_event_fields_workqueue_execute_end", i1 false, i1 false}
!307 = !{ptr @trace_event_type_funcs_workqueue_execute_end, !36, !"trace_event_type_funcs_workqueue_execute_end", i1 false, i1 false}
!308 = !{ptr @print_fmt_workqueue_execute_end, !36, !"print_fmt_workqueue_execute_end", i1 false, i1 false}
!309 = !{ptr @.str.58, !310, !"<string literal>", i1 false, i1 false}
!310 = !{!"../kernel/workqueue.c", i32 496, i32 11}
!311 = !{ptr @work_debug_descr, !312, !"work_debug_descr", i1 false, i1 false}
!312 = !{!"../kernel/workqueue.c", i32 495, i32 37}
!313 = distinct !{null, !314, !"__already_done", i1 false, i1 false}
!314 = !{!"../kernel/workqueue.c", i32 1450, i32 2}
!315 = distinct !{null, !316, !"__already_done", i1 false, i1 false}
!316 = !{!"../kernel/workqueue.c", i32 1455, i32 6}
!317 = distinct !{null, !318, !"__already_done", i1 false, i1 false}
!318 = !{!"../kernel/workqueue.c", i32 1509, i32 3}
!319 = !{ptr @.str.61, !318, !"<string literal>", i1 false, i1 false}
!320 = distinct !{null, !321, !"printed_dbg_warning", i1 false, i1 false}
!321 = !{!"../kernel/workqueue.c", i32 1409, i32 14}
!322 = !{ptr @.str.62, !323, !"<string literal>", i1 false, i1 false}
!323 = !{!"../kernel/workqueue.c", i32 1416, i32 3}
!324 = !{ptr @.str.63, !323, !"<string literal>", i1 false, i1 false}
!325 = !{ptr @wq_select_unbound_cpu._entry, !323, !"_entry", i1 false, i1 false}
!326 = !{ptr @wq_select_unbound_cpu._entry_ptr, !323, !"_entry_ptr", i1 false, i1 false}
!327 = distinct !{null, !328, !"<string literal>", i1 false, i1 false}
!328 = !{!"../kernel/workqueue.c", i32 1423, i32 12}
!329 = distinct !{null, !330, !"<string literal>", i1 false, i1 false}
!330 = !{!"../kernel/workqueue.c", i32 1430, i32 2}
!331 = distinct !{null, !332, !"__already_done", i1 false, i1 false}
!332 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!333 = !{ptr @.str.66, !332, !"<string literal>", i1 false, i1 false}
!334 = distinct !{null, !24, !"__already_done", i1 false, i1 false}
!335 = !{ptr @.str.67, !24, !"<string literal>", i1 false, i1 false}
!336 = distinct !{null, !24, !"__warned", i1 false, i1 false}
!337 = !{ptr @.str.68, !24, !"<string literal>", i1 false, i1 false}
!338 = distinct !{null, !28, !"__already_done", i1 false, i1 false}
!339 = distinct !{null, !28, !"__warned", i1 false, i1 false}
!340 = distinct !{null, !341, !"__already_done", i1 false, i1 false}
!341 = !{!"../kernel/workqueue.c", i32 630, i32 2}
!342 = distinct !{null, !343, !"__already_done", i1 false, i1 false}
!343 = !{!"../kernel/workqueue.c", i32 1123, i32 2}
!344 = distinct !{null, !345, !"wq_numa_enabled", i1 false, i1 false}
!345 = !{!"../kernel/workqueue.c", i32 310, i32 13}
!346 = distinct !{null, !347, !"__already_done", i1 false, i1 false}
!347 = !{!"../kernel/workqueue.c", i32 1670, i32 2}
!348 = distinct !{null, !349, !"__already_done", i1 false, i1 false}
!349 = !{!"../kernel/workqueue.c", i32 1671, i32 2}
!350 = distinct !{null, !351, !"__already_done", i1 false, i1 false}
!351 = !{!"../kernel/workqueue.c", i32 1672, i32 2}
!352 = distinct !{null, !353, !"__already_done", i1 false, i1 false}
!353 = !{!"../kernel/workqueue.c", i32 1673, i32 2}
!354 = distinct !{null, !355, !"__already_done", i1 false, i1 false}
!355 = !{!"../kernel/workqueue.c", i32 1139, i32 6}
!356 = !{ptr @init_completion.__key, !357, !"__key", i1 false, i1 false}
!357 = !{!"../include/linux/completion.h", i32 87, i32 2}
!358 = !{ptr @.str.72, !357, !"<string literal>", i1 false, i1 false}
!359 = distinct !{null, !360, !"__already_done", i1 false, i1 false}
!360 = !{!"../kernel/workqueue.c", i32 2775, i32 3}
!361 = distinct !{null, !362, !"__warned", i1 false, i1 false}
!362 = !{!"../kernel/workqueue.c", i32 2779, i32 2}
!363 = distinct !{null, !364, !"__already_done", i1 false, i1 false}
!364 = !{!"../kernel/workqueue.c", i32 2785, i32 4}
!365 = distinct !{null, !366, !"__already_done", i1 false, i1 false}
!366 = !{!"../kernel/workqueue.c", i32 2795, i32 4}
!367 = distinct !{null, !368, !"__already_done", i1 false, i1 false}
!368 = !{!"../kernel/workqueue.c", i32 2643, i32 2}
!369 = !{ptr @.str.75, !368, !"<string literal>", i1 false, i1 false}
!370 = distinct !{null, !371, !"__already_done", i1 false, i1 false}
!371 = !{!"../kernel/workqueue.c", i32 2646, i32 2}
!372 = !{ptr @.str.77, !371, !"<string literal>", i1 false, i1 false}
!373 = !{ptr @insert_wq_barrier.__key, !374, !"__key", i1 false, i1 false}
!374 = !{!"../kernel/workqueue.c", i32 2703, i32 2}
!375 = !{ptr @.str.78, !374, !"<string literal>", i1 false, i1 false}
!376 = !{ptr @.str.79, !377, !"<string literal>", i1 false, i1 false}
!377 = !{!"../kernel/workqueue.c", i32 3134, i32 9}
!378 = !{ptr @__cancel_work_timer.cancel_waitq, !377, !"cancel_waitq", i1 false, i1 false}
!379 = !{ptr @.str.80, !380, !"<string literal>", i1 false, i1 false}
!380 = !{!"../kernel/workqueue.c", i32 315, i32 8}
!381 = !{ptr @.str.81, !380, !"<string literal>", i1 false, i1 false}
!382 = !{ptr @wq_pool_mutex, !380, !"wq_pool_mutex", i1 false, i1 false}
!383 = !{ptr @.str.82, !384, !"<string literal>", i1 false, i1 false}
!384 = !{!"../kernel/workqueue.c", i32 3676, i32 2}
!385 = distinct !{null, !386, !"wq_numa_possible_cpumask", i1 false, i1 false}
!386 = !{!"../kernel/workqueue.c", i32 298, i32 23}
!387 = distinct !{null, !388, !"__already_done", i1 false, i1 false}
!388 = !{!"../kernel/workqueue.c", i32 3604, i32 2}
!389 = !{ptr @manager_wait, !390, !"manager_wait", i1 false, i1 false}
!390 = !{!"../kernel/workqueue.c", i32 319, i32 23}
!391 = distinct !{null, !392, !"__already_done", i1 false, i1 false}
!392 = !{!"../include/linux/rcuwait.h", i32 53, i32 2}
!393 = distinct !{null, !392, !"<string literal>", i1 false, i1 false}
!394 = !{ptr @init_pwq.__key, !395, !"__key", i1 false, i1 false}
!395 = !{!"../kernel/workqueue.c", i32 3821, i32 2}
!396 = !{ptr @.str.84, !395, !"<string literal>", i1 false, i1 false}
!397 = distinct !{null, !398, !"__already_done", i1 false, i1 false}
!398 = !{!"../kernel/workqueue.c", i32 3726, i32 7}
!399 = distinct !{null, !400, !"__already_done", i1 false, i1 false}
!400 = !{!"../kernel/workqueue.c", i32 3908, i32 3}
!401 = !{ptr @.str.85, !400, !"<string literal>", i1 false, i1 false}
!402 = !{ptr @.str.86, !400, !"<string literal>", i1 false, i1 false}
!403 = !{ptr @wq_calc_node_cpumask._entry, !400, !"_entry", i1 false, i1 false}
!404 = !{ptr @wq_calc_node_cpumask._entry_ptr, !400, !"_entry_ptr", i1 false, i1 false}
!405 = !{ptr @.str.87, !406, !"<string literal>", i1 false, i1 false}
!406 = !{!"../kernel/workqueue.c", i32 4260, i32 3}
!407 = !{ptr @.str.88, !406, !"<string literal>", i1 false, i1 false}
!408 = !{ptr @wq_clamp_max_active._entry, !406, !"_entry", i1 false, i1 false}
!409 = !{ptr @wq_clamp_max_active._entry_ptr, !406, !"_entry_ptr", i1 false, i1 false}
!410 = !{ptr @.str.89, !411, !"<string literal>", i1 false, i1 false}
!411 = !{!"../kernel/workqueue.c", i32 3498, i32 36}
!412 = !{ptr @.str.90, !413, !"<string literal>", i1 false, i1 false}
!413 = !{!"../kernel/workqueue.c", i32 3498, i32 44}
!414 = !{ptr @.str.91, !415, !"<string literal>", i1 false, i1 false}
!415 = !{!"../kernel/workqueue.c", i32 4243, i32 3}
!416 = distinct !{null, !417, !"__already_done", i1 false, i1 false}
!417 = !{!"../kernel/workqueue.c", i32 2515, i32 2}
!418 = distinct !{null, !419, !"__already_done", i1 false, i1 false}
!419 = !{!"../kernel/workqueue.c", i32 2537, i32 3}
!420 = distinct !{null, !421, !"__already_done", i1 false, i1 false}
!421 = !{!"../kernel/workqueue.c", i32 2550, i32 3}
!422 = distinct !{null, !423, !"__already_done", i1 false, i1 false}
!423 = !{!"../kernel/workqueue.c", i32 2610, i32 3}
!424 = distinct !{null, !425, !"__already_done", i1 false, i1 false}
!425 = !{!"../kernel/workqueue.c", i32 2616, i32 2}
!426 = distinct !{null, !427, !"__already_done", i1 false, i1 false}
!427 = !{!"../kernel/workqueue.c", i32 2221, i32 2}
!428 = !{ptr @.str.96, !429, !"<string literal>", i1 false, i1 false}
!429 = !{!"../kernel/workqueue.c", i32 2317, i32 3}
!430 = !{ptr @.str.97, !429, !"<string literal>", i1 false, i1 false}
!431 = !{ptr @process_one_work._entry, !429, !"_entry", i1 false, i1 false}
!432 = !{ptr @process_one_work._entry_ptr, !429, !"_entry_ptr", i1 false, i1 false}
!433 = distinct !{null, !434, !"__already_done", i1 false, i1 false}
!434 = !{!"../kernel/workqueue.c", i32 985, i32 2}
!435 = distinct !{null, !32, !"__already_done", i1 false, i1 false}
!436 = distinct !{null, !32, !"__warned", i1 false, i1 false}
!437 = distinct !{null, !36, !"__already_done", i1 false, i1 false}
!438 = distinct !{null, !36, !"__warned", i1 false, i1 false}
!439 = distinct !{null, !440, !"__already_done", i1 false, i1 false}
!440 = !{!"../kernel/workqueue.c", i32 1011, i32 2}
!441 = !{ptr @workqueues, !442, !"workqueues", i1 false, i1 false}
!442 = !{!"../kernel/workqueue.c", i32 321, i32 8}
!443 = !{ptr @.str.98, !444, !"<string literal>", i1 false, i1 false}
!444 = !{!"../kernel/workqueue.c", i32 317, i32 8}
!445 = !{ptr @wq_mayday_lock, !444, !"wq_mayday_lock", i1 false, i1 false}
!446 = distinct !{null, !447, !"__warned", i1 false, i1 false}
!447 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!448 = !{ptr @.str.99, !447, !"<string literal>", i1 false, i1 false}
!449 = !{ptr @.str.100, !447, !"<string literal>", i1 false, i1 false}
!450 = distinct !{null, !451, !"__warned", i1 false, i1 false}
!451 = !{!"../kernel/workqueue.c", i32 577, i32 2}
!452 = !{ptr @.str.101, !451, !"<string literal>", i1 false, i1 false}
!453 = distinct !{null, !454, !"__warned", i1 false, i1 false}
!454 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!455 = !{ptr @.str.102, !454, !"<string literal>", i1 false, i1 false}
!456 = distinct !{null, !457, !"__warned", i1 false, i1 false}
!457 = !{!"../kernel/workqueue.c", i32 726, i32 2}
!458 = !{ptr @.str.103, !459, !"<string literal>", i1 false, i1 false}
!459 = !{!"../kernel/workqueue.c", i32 4745, i32 2}
!460 = !{ptr @.str.104, !459, !"<string literal>", i1 false, i1 false}
!461 = !{ptr @show_pwq._entry, !459, !"_entry", i1 false, i1 false}
!462 = !{ptr @show_pwq._entry_ptr, !459, !"_entry_ptr", i1 false, i1 false}
!463 = !{ptr @.str.106, !464, !"<string literal>", i1 false, i1 false}
!464 = !{!"../kernel/workqueue.c", i32 4748, i32 2}
!465 = !{ptr @show_pwq._entry.105, !464, !"_entry", i1 false, i1 false}
!466 = !{ptr @show_pwq._entry_ptr.107, !464, !"_entry_ptr", i1 false, i1 false}
!467 = !{ptr @.str.108, !464, !"<string literal>", i1 false, i1 false}
!468 = !{ptr @.str.109, !464, !"<string literal>", i1 false, i1 false}
!469 = !{ptr @.str.111, !470, !"<string literal>", i1 false, i1 false}
!470 = !{!"../kernel/workqueue.c", i32 4761, i32 3}
!471 = !{ptr @show_pwq._entry.110, !470, !"_entry", i1 false, i1 false}
!472 = !{ptr @show_pwq._entry_ptr.112, !470, !"_entry_ptr", i1 false, i1 false}
!473 = !{ptr @.str.114, !474, !"<string literal>", i1 false, i1 false}
!474 = !{!"../kernel/workqueue.c", i32 4766, i32 4}
!475 = !{ptr @show_pwq._entry.113, !474, !"_entry", i1 false, i1 false}
!476 = !{ptr @show_pwq._entry_ptr.115, !474, !"_entry_ptr", i1 false, i1 false}
!477 = !{ptr @.str.116, !474, !"<string literal>", i1 false, i1 false}
!478 = !{ptr @.str.117, !474, !"<string literal>", i1 false, i1 false}
!479 = !{ptr @show_pwq._entry.118, !480, !"_entry", i1 false, i1 false}
!480 = !{!"../kernel/workqueue.c", i32 4774, i32 3}
!481 = !{ptr @show_pwq._entry_ptr.119, !480, !"_entry_ptr", i1 false, i1 false}
!482 = !{ptr @.str.121, !483, !"<string literal>", i1 false, i1 false}
!483 = !{!"../kernel/workqueue.c", i32 4786, i32 3}
!484 = !{ptr @show_pwq._entry.120, !483, !"_entry", i1 false, i1 false}
!485 = !{ptr @show_pwq._entry_ptr.122, !483, !"_entry_ptr", i1 false, i1 false}
!486 = !{ptr @show_pwq._entry.123, !487, !"_entry", i1 false, i1 false}
!487 = !{!"../kernel/workqueue.c", i32 4794, i32 3}
!488 = !{ptr @show_pwq._entry_ptr.124, !487, !"_entry_ptr", i1 false, i1 false}
!489 = !{ptr @.str.126, !490, !"<string literal>", i1 false, i1 false}
!490 = !{!"../kernel/workqueue.c", i32 4800, i32 3}
!491 = !{ptr @show_pwq._entry.125, !490, !"_entry", i1 false, i1 false}
!492 = !{ptr @show_pwq._entry_ptr.127, !490, !"_entry_ptr", i1 false, i1 false}
!493 = !{ptr @show_pwq._entry.128, !494, !"_entry", i1 false, i1 false}
!494 = !{!"../kernel/workqueue.c", i32 4805, i32 3}
!495 = !{ptr @show_pwq._entry_ptr.129, !494, !"_entry_ptr", i1 false, i1 false}
!496 = !{ptr @.str.130, !497, !"<string literal>", i1 false, i1 false}
!497 = !{!"../kernel/workqueue.c", i32 4717, i32 2}
!498 = !{ptr @.str.131, !497, !"<string literal>", i1 false, i1 false}
!499 = !{ptr @pr_cont_pool_info._entry, !497, !"_entry", i1 false, i1 false}
!500 = !{ptr @pr_cont_pool_info._entry_ptr, !497, !"_entry_ptr", i1 false, i1 false}
!501 = !{ptr @.str.133, !502, !"<string literal>", i1 false, i1 false}
!502 = !{!"../kernel/workqueue.c", i32 4719, i32 3}
!503 = !{ptr @pr_cont_pool_info._entry.132, !502, !"_entry", i1 false, i1 false}
!504 = !{ptr @pr_cont_pool_info._entry_ptr.134, !502, !"_entry_ptr", i1 false, i1 false}
!505 = !{ptr @.str.136, !506, !"<string literal>", i1 false, i1 false}
!506 = !{!"../kernel/workqueue.c", i32 4720, i32 2}
!507 = !{ptr @pr_cont_pool_info._entry.135, !506, !"_entry", i1 false, i1 false}
!508 = !{ptr @pr_cont_pool_info._entry_ptr.137, !506, !"_entry_ptr", i1 false, i1 false}
!509 = !{ptr @.str.138, !510, !"<string literal>", i1 false, i1 false}
!510 = !{!"../kernel/workqueue.c", i32 4730, i32 3}
!511 = !{ptr @.str.139, !510, !"<string literal>", i1 false, i1 false}
!512 = !{ptr @pr_cont_work._entry, !510, !"_entry", i1 false, i1 false}
!513 = !{ptr @pr_cont_work._entry_ptr, !510, !"_entry_ptr", i1 false, i1 false}
!514 = !{ptr @.str.141, !515, !"<string literal>", i1 false, i1 false}
!515 = !{!"../kernel/workqueue.c", i32 4733, i32 3}
!516 = !{ptr @pr_cont_work._entry.140, !515, !"_entry", i1 false, i1 false}
!517 = !{ptr @pr_cont_work._entry_ptr.142, !515, !"_entry_ptr", i1 false, i1 false}
!518 = !{ptr @.str.143, !519, !"<string literal>", i1 false, i1 false}
!519 = !{!"../kernel/workqueue.c", i32 345, i32 8}
!520 = !{ptr @worker_pool_idr, !519, !"worker_pool_idr", i1 false, i1 false}
!521 = !{ptr @.str.144, !522, !"<string literal>", i1 false, i1 false}
!522 = !{!"../kernel/workqueue.c", i32 4872, i32 2}
!523 = !{ptr @.str.145, !522, !"<string literal>", i1 false, i1 false}
!524 = !{ptr @show_one_worker_pool._entry, !522, !"_entry", i1 false, i1 false}
!525 = !{ptr @show_one_worker_pool._entry_ptr, !522, !"_entry_ptr", i1 false, i1 false}
!526 = !{ptr @.str.147, !527, !"<string literal>", i1 false, i1 false}
!527 = !{!"../kernel/workqueue.c", i32 4874, i32 2}
!528 = !{ptr @show_one_worker_pool._entry.146, !527, !"_entry", i1 false, i1 false}
!529 = !{ptr @show_one_worker_pool._entry_ptr.148, !527, !"_entry_ptr", i1 false, i1 false}
!530 = !{ptr @.str.150, !531, !"<string literal>", i1 false, i1 false}
!531 = !{!"../kernel/workqueue.c", i32 4878, i32 3}
!532 = !{ptr @show_one_worker_pool._entry.149, !531, !"_entry", i1 false, i1 false}
!533 = !{ptr @show_one_worker_pool._entry_ptr.151, !531, !"_entry_ptr", i1 false, i1 false}
!534 = !{ptr @.str.153, !535, !"<string literal>", i1 false, i1 false}
!535 = !{!"../kernel/workqueue.c", i32 4881, i32 3}
!536 = !{ptr @show_one_worker_pool._entry.152, !535, !"_entry", i1 false, i1 false}
!537 = !{ptr @show_one_worker_pool._entry_ptr.154, !535, !"_entry_ptr", i1 false, i1 false}
!538 = !{ptr @.str.155, !535, !"<string literal>", i1 false, i1 false}
!539 = !{ptr @show_one_worker_pool._entry.156, !540, !"_entry", i1 false, i1 false}
!540 = !{!"../kernel/workqueue.c", i32 4885, i32 2}
!541 = !{ptr @show_one_worker_pool._entry_ptr.157, !540, !"_entry_ptr", i1 false, i1 false}
!542 = !{ptr @.str.158, !543, !"<string literal>", i1 false, i1 false}
!543 = !{!"../kernel/workqueue.c", i32 316, i32 8}
!544 = !{ptr @.str.159, !543, !"<string literal>", i1 false, i1 false}
!545 = !{ptr @wq_pool_attach_mutex, !543, !"wq_pool_attach_mutex", i1 false, i1 false}
!546 = !{ptr @.str.160, !547, !"<string literal>", i1 false, i1 false}
!547 = !{!"../kernel/workqueue.c", i32 1962, i32 36}
!548 = !{ptr @.str.161, !549, !"<string literal>", i1 false, i1 false}
!549 = !{!"../kernel/workqueue.c", i32 1963, i32 30}
!550 = !{ptr @.str.162, !551, !"<string literal>", i1 false, i1 false}
!551 = !{!"../kernel/workqueue.c", i32 1965, i32 36}
!552 = !{ptr @.str.163, !553, !"<string literal>", i1 false, i1 false}
!553 = !{!"../kernel/workqueue.c", i32 1968, i32 12}
!554 = distinct !{null, !555, !"__already_done", i1 false, i1 false}
!555 = !{!"../kernel/workqueue.c", i32 2409, i32 3}
!556 = !{ptr @.str.164, !557, !"<string literal>", i1 false, i1 false}
!557 = !{!"../kernel/workqueue.c", i32 2412, i32 31}
!558 = distinct !{null, !559, !"__already_done", i1 false, i1 false}
!559 = !{!"../kernel/workqueue.c", i32 2434, i32 2}
!560 = distinct !{null, !561, !"__already_done", i1 false, i1 false}
!561 = !{!"../kernel/workqueue.c", i32 2473, i32 2}
!562 = distinct !{null, !563, !"__already_done", i1 false, i1 false}
!563 = !{!"../kernel/workqueue.c", i32 1847, i32 6}
!564 = distinct !{null, !565, !"__already_done", i1 false, i1 false}
!565 = !{!"../kernel/workqueue.c", i32 1813, i32 6}
!566 = distinct !{null, !567, !"__already_done", i1 false, i1 false}
!567 = !{!"../kernel/workqueue.c", i32 1814, i32 6}
!568 = distinct !{null, !569, !"__already_done", i1 false, i1 false}
!569 = !{!"../kernel/workqueue.c", i32 1830, i32 2}
!570 = distinct !{null, !571, !"__already_done", i1 false, i1 false}
!571 = !{!"../kernel/workqueue.c", i32 5050, i32 3}
!572 = distinct !{null, !573, !"__already_done", i1 false, i1 false}
!573 = !{!"../kernel/workqueue.c", i32 5076, i32 3}
!574 = !{ptr @restore_unbound_workers_cpumask.cpumask, !575, !"cpumask", i1 false, i1 false}
!575 = !{!"../kernel/workqueue.c", i32 5097, i32 19}
!576 = distinct !{null, !577, !"__already_done", i1 false, i1 false}
!577 = !{!"../kernel/workqueue.c", i32 5110, i32 3}
!578 = !{ptr @.str.170, !579, !"<string literal>", i1 false, i1 false}
!579 = !{!"../kernel/workqueue.c", i32 4193, i32 3}
!580 = !{ptr @.str.171, !579, !"<string literal>", i1 false, i1 false}
!581 = !{ptr @wq_update_unbound_numa._entry, !579, !"_entry", i1 false, i1 false}
!582 = !{ptr @wq_update_unbound_numa._entry_ptr, !579, !"_entry_ptr", i1 false, i1 false}
!583 = distinct !{null, !584, !"wq_update_unbound_numa_attrs_buf", i1 false, i1 false}
!584 = !{!"../kernel/workqueue.c", i32 313, i32 32}
!585 = distinct !{null, !586, !"__already_done", i1 false, i1 false}
!586 = !{!"../kernel/workqueue.c", i32 5022, i32 4}
!587 = !{ptr @.str.172, !588, !"<string literal>", i1 false, i1 false}
!588 = !{!"../kernel/workqueue.c", i32 5694, i32 2}
!589 = !{ptr @wq_sysfs_cpumask_attr, !590, !"wq_sysfs_cpumask_attr", i1 false, i1 false}
!590 = !{!"../kernel/workqueue.c", i32 5693, i32 32}
!591 = !{ptr @.str.173, !592, !"<string literal>", i1 false, i1 false}
!592 = !{!"../kernel/workqueue.c", i32 5669, i32 38}
!593 = !{ptr @wq_subsys, !594, !"wq_subsys", i1 false, i1 false}
!594 = !{!"../kernel/workqueue.c", i32 5658, i32 24}
!595 = !{ptr @wq_sysfs_groups, !596, !"wq_sysfs_groups", i1 false, i1 false}
!596 = !{!"../kernel/workqueue.c", i32 5497, i32 1}
!597 = !{ptr @wq_sysfs_group, !596, !"wq_sysfs_group", i1 false, i1 false}
!598 = !{ptr @wq_sysfs_attrs, !599, !"wq_sysfs_attrs", i1 false, i1 false}
!599 = !{!"../kernel/workqueue.c", i32 5492, i32 26}
!600 = !{ptr @.str.174, !601, !"<string literal>", i1 false, i1 false}
!601 = !{!"../kernel/workqueue.c", i32 5467, i32 8}
!602 = !{ptr @dev_attr_per_cpu, !601, !"dev_attr_per_cpu", i1 false, i1 false}
!603 = !{ptr @.str.175, !604, !"<string literal>", i1 false, i1 false}
!604 = !{!"../kernel/workqueue.c", i32 5465, i32 35}
!605 = !{ptr @.str.176, !606, !"<string literal>", i1 false, i1 false}
!606 = !{!"../kernel/workqueue.c", i32 5490, i32 8}
!607 = !{ptr @dev_attr_max_active, !606, !"dev_attr_max_active", i1 false, i1 false}
!608 = !{ptr @.str.177, !609, !"<string literal>", i1 false, i1 false}
!609 = !{!"../kernel/workqueue.c", i32 5484, i32 18}
!610 = !{ptr @.str.178, !611, !"<string literal>", i1 false, i1 false}
!611 = !{!"../kernel/workqueue.c", i32 5651, i32 2}
!612 = !{ptr @.str.179, !613, !"<string literal>", i1 false, i1 false}
!613 = !{!"../kernel/workqueue.c", i32 5652, i32 2}
!614 = !{ptr @.str.180, !615, !"<string literal>", i1 false, i1 false}
!615 = !{!"../kernel/workqueue.c", i32 5654, i32 2}
!616 = !{ptr @wq_sysfs_unbound_attrs, !617, !"wq_sysfs_unbound_attrs", i1 false, i1 false}
!617 = !{!"../kernel/workqueue.c", i32 5650, i32 32}
!618 = !{ptr @.str.181, !619, !"<string literal>", i1 false, i1 false}
!619 = !{!"../kernel/workqueue.c", i32 5510, i32 10}
!620 = distinct !{null, !621, !"<string literal>", i1 false, i1 false}
!621 = !{!"../kernel/workqueue.c", i32 5512, i32 11}
!622 = !{ptr @.str.183, !623, !"<string literal>", i1 false, i1 false}
!623 = !{!"../kernel/workqueue.c", i32 5514, i32 59}
!624 = !{ptr @wq_watchdog_touched, !625, !"wq_watchdog_touched", i1 false, i1 false}
!625 = !{!"../kernel/workqueue.c", i32 5826, i32 22}
!626 = !{ptr @__param_str_watchdog_thresh, !218, !"__param_str_watchdog_thresh", i1 false, i1 false}
!627 = !{ptr @wq_watchdog_thresh_ops, !628, !"wq_watchdog_thresh_ops", i1 false, i1 false}
!628 = !{!"../kernel/workqueue.c", i32 5932, i32 38}
!629 = !{ptr @wq_watchdog_timer, !630, !"wq_watchdog_timer", i1 false, i1 false}
!630 = !{!"../kernel/workqueue.c", i32 5824, i32 26}
!631 = !{ptr @wq_watchdog_thresh, !632, !"wq_watchdog_thresh", i1 false, i1 false}
!632 = !{!"../kernel/workqueue.c", i32 5823, i32 22}
!633 = !{ptr @init_worker_pool.__key, !634, !"__key", i1 false, i1 false}
!634 = !{!"../kernel/workqueue.c", i32 3465, i32 2}
!635 = !{ptr @init_worker_pool.__key.184, !636, !"__key", i1 false, i1 false}
!636 = !{!"../kernel/workqueue.c", i32 3475, i32 2}
!637 = !{ptr @.str.185, !636, !"<string literal>", i1 false, i1 false}
!638 = !{ptr @init_worker_pool.__key.186, !639, !"__key", i1 false, i1 false}
!639 = !{!"../kernel/workqueue.c", i32 3477, i32 2}
!640 = !{ptr @.str.187, !639, !"<string literal>", i1 false, i1 false}
!641 = !{ptr @xa_init_flags.__key, !642, !"__key", i1 false, i1 false}
!642 = !{!"../include/linux/xarray.h", i32 378, i32 2}
!643 = !{ptr @.str.188, !642, !"<string literal>", i1 false, i1 false}
!644 = !{ptr @.str.189, !645, !"<string literal>", i1 false, i1 false}
!645 = !{!"../kernel/workqueue.c", i32 5961, i32 3}
!646 = !{ptr @.str.190, !645, !"<string literal>", i1 false, i1 false}
!647 = !{ptr @wq_numa_init._entry, !645, !"_entry", i1 false, i1 false}
!648 = !{ptr @wq_numa_init._entry_ptr, !645, !"_entry_ptr", i1 false, i1 false}
!649 = !{ptr @.str.192, !650, !"<string literal>", i1 false, i1 false}
!650 = !{!"../kernel/workqueue.c", i32 5967, i32 4}
!651 = !{ptr @wq_numa_init._entry.191, !650, !"_entry", i1 false, i1 false}
!652 = !{ptr @wq_numa_init._entry_ptr.193, !650, !"_entry_ptr", i1 false, i1 false}
!653 = !{ptr @unbound_pool_hash, !654, !"unbound_pool_hash", i1 false, i1 false}
!654 = !{!"../kernel/workqueue.c", i32 348, i32 8}
!655 = !{ptr @wq_watchdog_init.__key, !656, !"__key", i1 false, i1 false}
!656 = !{!"../kernel/workqueue.c", i32 5942, i32 2}
!657 = !{ptr @.str.194, !656, !"<string literal>", i1 false, i1 false}
!658 = distinct !{null, !659, !"__warned", i1 false, i1 false}
!659 = !{!"../kernel/workqueue.c", i32 5851, i32 2}
!660 = !{ptr @.str.195, !661, !"<string literal>", i1 false, i1 false}
!661 = !{!"../kernel/workqueue.c", i32 5878, i32 4}
!662 = !{ptr @.str.196, !661, !"<string literal>", i1 false, i1 false}
!663 = !{ptr @wq_watchdog_timer_fn._entry, !661, !"_entry", i1 false, i1 false}
!664 = !{ptr @wq_watchdog_timer_fn._entry_ptr, !661, !"_entry_ptr", i1 false, i1 false}
!665 = !{ptr @.str.198, !666, !"<string literal>", i1 false, i1 false}
!666 = !{!"../kernel/workqueue.c", i32 5880, i32 4}
!667 = !{ptr @wq_watchdog_timer_fn._entry.197, !666, !"_entry", i1 false, i1 false}
!668 = !{ptr @wq_watchdog_timer_fn._entry_ptr.199, !666, !"_entry_ptr", i1 false, i1 false}
!669 = !{!"sp"}
!670 = !{i32 1, !"wchar_size", i32 2}
!671 = !{i32 1, !"min_enum_size", i32 4}
!672 = !{i32 8, !"branch-target-enforcement", i32 0}
!673 = !{i32 8, !"sign-return-address", i32 0}
!674 = !{i32 8, !"sign-return-address-all", i32 0}
!675 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!676 = !{i32 7, !"uwtable", i32 1}
!677 = !{i32 7, !"frame-pointer", i32 2}
!678 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!679 = !{!"branch_weights", i32 2000, i32 1}
!680 = !{!"branch_weights", i32 1, i32 2000}
!681 = !{!"auto-init"}
!682 = !{i64 2155950640}
!683 = !{i64 2148380193, i64 2148380219, i64 2148380248, i64 2148380282, i64 2148380313, i64 2148380336}
!684 = !{i64 2155950737}
!685 = !{i64 2148468645}
!686 = !{i64 2148383378, i64 2148383410, i64 2148383439, i64 2148383473, i64 2148383504, i64 2148383527}
!687 = !{i64 2148468874}
!688 = !{i64 772674, i64 772735}
!689 = !{i64 775406}
!690 = !{i64 775691}
!691 = !{i64 2156225845}
!692 = !{i64 2156230779}
!693 = !{i64 2156252461}
!694 = !{i64 2156257355}
!695 = !{i64 2149417249}
!696 = !{i8 0, i8 2}
!697 = !{i64 2156268196}
!698 = !{i64 2156268038}
!699 = !{i64 2149417515}
!700 = !{i64 2155982437}
!701 = !{i64 2155982279}
!702 = !{i64 773109}
!703 = !{i64 772919}
!704 = !{i64 2155948201}
!705 = !{i64 2156480214}
!706 = !{i64 2155947893}
!707 = !{i64 2155948045}
!708 = !{i64 2156538414, i64 2156538898, i64 2156538451, i64 2156538507, i64 2156538541, i64 2156538565, i64 2156538606, i64 2156538627, i64 2156538655, i64 2156538689}
!709 = !{i64 2149442641}
!710 = !{!"branch_weights", i32 2146410443, i32 1073205}
!711 = !{!"branch_weights", i32 1073205, i32 2146410443}
!712 = !{i64 2156724136}
!713 = !{i64 2156725050}
!714 = distinct !{!714, !715}
!715 = !{!"llvm.loop.peeled.count", i32 1}
!716 = !{i64 2157165026, i64 2157165510, i64 2157165063, i64 2157165119, i64 2157165153, i64 2157165177, i64 2157165218, i64 2157165239, i64 2157165267, i64 2157165301}
!717 = !{i64 2157168987, i64 2157169471, i64 2157169024, i64 2157169080, i64 2157169114, i64 2157169138, i64 2157169179, i64 2157169200, i64 2157169228, i64 2157169262}
!718 = !{i64 2157170683, i64 2157171167, i64 2157170720, i64 2157170776, i64 2157170810, i64 2157170834, i64 2157170875, i64 2157170896, i64 2157170924, i64 2157170958}
!719 = !{i64 2157172307, i64 2157172791, i64 2157172344, i64 2157172400, i64 2157172434, i64 2157172458, i64 2157172499, i64 2157172520, i64 2157172548, i64 2157172582}
!720 = !{i64 2157173931, i64 2157174415, i64 2157173968, i64 2157174024, i64 2157174058, i64 2157174082, i64 2157174123, i64 2157174144, i64 2157174172, i64 2157174206}
!721 = !{i64 2157178812, i64 2157179296, i64 2157178849, i64 2157178905, i64 2157178939, i64 2157178963, i64 2157179004, i64 2157179025, i64 2157179053, i64 2157179087}
!722 = !{i64 2157192771, i64 2157193255, i64 2157192808, i64 2157192864, i64 2157192898, i64 2157192922, i64 2157192963, i64 2157192984, i64 2157193012, i64 2157193046}
!723 = !{i64 2157198310, i64 2157198794, i64 2157198347, i64 2157198403, i64 2157198437, i64 2157198461, i64 2157198502, i64 2157198523, i64 2157198551, i64 2157198585}
!724 = !{i64 2148862008, i64 2148862013, i64 2148862026, i64 2148862070, i64 2148862104, i64 2148862125}
!725 = !{i64 2154578119}
!726 = !{i64 2154578358}
!727 = !{i64 2149425808}
!728 = !{i64 2149426844}
!729 = !{i64 2154599065}
!730 = !{i64 2154599282}
!731 = !{i64 2155982592}
!732 = !{i64 2156555907}
!733 = !{i64 2153782795}
!734 = !{i64 2156506292}
!735 = !{i64 2156335540}
!736 = !{i64 2148382658, i64 2148382684, i64 2148382713, i64 2148382747, i64 2148382778, i64 2148382801}
!737 = !{i64 2154615894}
!738 = !{i64 2154616111}
!739 = !{i64 2154633046}
!740 = !{i64 2154633279}
