; ModuleID = '/llk/IR_all_yes/lib/crypto/blake2s-generic.c_pt.bc'
source_filename = "../lib/crypto/blake2s-generic.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+blake2s_compress_generic\22, \22a\22\09"
module asm "\09.weak\09__crc_blake2s_compress_generic\09\09\09\09"
module asm "\09.long\09__crc_blake2s_compress_generic\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_blake2s_compress_generic:\09\09\09\09\09"
module asm "\09.asciz \09\22blake2s_compress_generic\22\09\09\09\09\09"
module asm "__kstrtabns_blake2s_compress_generic:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.blake2s_state = type { [8 x i32], [2 x i32], [2 x i32], [64 x i8], i32, i32 }

@__kstrtab_blake2s_compress_generic = external dso_local constant [0 x i8], align 1
@__kstrtabns_blake2s_compress_generic = external dso_local constant [0 x i8], align 1
@__ksymtab_blake2s_compress_generic = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @blake2s_compress_generic to i32), ptr @__kstrtab_blake2s_compress_generic, ptr @__kstrtabns_blake2s_compress_generic }, section "___ksymtab+blake2s_compress_generic", align 4
@__UNIQUE_ID_file173 = internal constant [38 x i8] c"libblake2s.file=lib/crypto/libblake2s\00", section ".modinfo", align 1
@__UNIQUE_ID_license174 = internal constant [26 x i8] c"libblake2s.license=GPL v2\00", section ".modinfo", align 1
@__UNIQUE_ID_description175 = internal constant [45 x i8] c"libblake2s.description=BLAKE2s hash function\00", section ".modinfo", align 1
@__UNIQUE_ID_author176 = internal constant [55 x i8] c"libblake2s.author=Jason A. Donenfeld <Jason@zx2c4.com>\00", section ".modinfo", align 1
@llvm.compiler.used = appending global [5 x ptr] [ptr @__UNIQUE_ID_author176, ptr @__UNIQUE_ID_description175, ptr @__UNIQUE_ID_file173, ptr @__UNIQUE_ID_license174, ptr @__ksymtab_blake2s_compress_generic], section "llvm.metadata"
@llvm.used = appending global [1 x ptr] [ptr @asan.module_ctor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]

@blake2s_compress = weak dso_local alias void (ptr, ptr, i32, i32), ptr @blake2s_compress_generic

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @blake2s_compress_generic(ptr nocapture noundef %state, ptr nocapture noundef readonly %block, i32 noundef %nblocks, i32 noundef %inc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #4
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nblocks)
  %cmp.not3993 = icmp eq i32 %nblocks, 0
  br i1 %cmp.not3993, label %entry.while.end_crit_edge, label %while.body.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #4
  br label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %t.i = getelementptr inbounds %struct.blake2s_state, ptr %state, i32 0, i32 1
  %arrayidx4.i = getelementptr %struct.blake2s_state, ptr %state, i32 0, i32 1, i32 1
  %f = getelementptr inbounds %struct.blake2s_state, ptr %state, i32 0, i32 2
  %arrayidx31 = getelementptr %struct.blake2s_state, ptr %state, i32 0, i32 2, i32 1
  %v.sroa.56.0.state.sroa_idx = getelementptr i8, ptr %state, i32 4
  %v.sroa.110.0.state.sroa_idx = getelementptr i8, ptr %state, i32 8
  %v.sroa.164.0.state.sroa_idx = getelementptr i8, ptr %state, i32 12
  %v.sroa.218.0.state.sroa_idx = getelementptr i8, ptr %state, i32 16
  %v.sroa.273.0.state.sroa_idx = getelementptr i8, ptr %state, i32 20
  %v.sroa.333.0.state.sroa_idx = getelementptr i8, ptr %state, i32 24
  %v.sroa.393.0.state.sroa_idx = getelementptr i8, ptr %state, i32 28
  %0 = ptrtoint ptr %f to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %f, align 4
  %2 = ptrtoint ptr %arrayidx31 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx31, align 4
  br label %while.body

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.body.lr.ph
  %block.addr.03995 = phi ptr [ %block, %while.body.lr.ph ], [ %add.ptr, %while.body.while.body_crit_edge ]
  %nblocks.addr.03994 = phi i32 [ %nblocks, %while.body.lr.ph ], [ %dec, %while.body.while.body_crit_edge ]
  %4 = ptrtoint ptr %t.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %t.i, align 4
  %add.i = add i32 %5, %inc
  store i32 %add.i, ptr %t.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %inc)
  %cmp.i = icmp ult i32 %add.i, %inc
  %conv.i = zext i1 %cmp.i to i32
  %6 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx4.i, align 4
  %add5.i = add i32 %7, %conv.i
  store i32 %add5.i, ptr %arrayidx4.i, align 4
  %8 = ptrtoint ptr %block.addr.03995 to i32
  call void @__asan_loadN_noabort(i32 %8, i32 4)
  %m.sroa.0.0.copyload = load i32, ptr %block.addr.03995, align 1
  %m.sroa.16.0.block.addr.0.sroa_idx = getelementptr inbounds i8, ptr %block.addr.03995, i32 4
  %9 = ptrtoint ptr %m.sroa.16.0.block.addr.0.sroa_idx to i32
  call void @__asan_loadN_noabort(i32 %9, i32 4)
  %m.sroa.16.0.copyload = load i32, ptr %m.sroa.16.0.block.addr.0.sroa_idx, align 1
  %m.sroa.28.0.block.addr.0.sroa_idx = getelementptr inbounds i8, ptr %block.addr.03995, i32 8
  %10 = ptrtoint ptr %m.sroa.28.0.block.addr.0.sroa_idx to i32
  call void @__asan_loadN_noabort(i32 %10, i32 4)
  %m.sroa.28.0.copyload = load i32, ptr %m.sroa.28.0.block.addr.0.sroa_idx, align 1
  %m.sroa.40.0.block.addr.0.sroa_idx = getelementptr inbounds i8, ptr %block.addr.03995, i32 12
  %11 = ptrtoint ptr %m.sroa.40.0.block.addr.0.sroa_idx to i32
  call void @__asan_loadN_noabort(i32 %11, i32 4)
  %m.sroa.40.0.copyload = load i32, ptr %m.sroa.40.0.block.addr.0.sroa_idx, align 1
  %m.sroa.52.0.block.addr.0.sroa_idx = getelementptr inbounds i8, ptr %block.addr.03995, i32 16
  %12 = ptrtoint ptr %m.sroa.52.0.block.addr.0.sroa_idx to i32
  call void @__asan_loadN_noabort(i32 %12, i32 4)
  %m.sroa.52.0.copyload = load i32, ptr %m.sroa.52.0.block.addr.0.sroa_idx, align 1
  %m.sroa.64.0.block.addr.0.sroa_idx = getelementptr inbounds i8, ptr %block.addr.03995, i32 20
  %13 = ptrtoint ptr %m.sroa.64.0.block.addr.0.sroa_idx to i32
  call void @__asan_loadN_noabort(i32 %13, i32 4)
  %m.sroa.64.0.copyload = load i32, ptr %m.sroa.64.0.block.addr.0.sroa_idx, align 1
  %m.sroa.76.0.block.addr.0.sroa_idx = getelementptr inbounds i8, ptr %block.addr.03995, i32 24
  %14 = ptrtoint ptr %m.sroa.76.0.block.addr.0.sroa_idx to i32
  call void @__asan_loadN_noabort(i32 %14, i32 4)
  %m.sroa.76.0.copyload = load i32, ptr %m.sroa.76.0.block.addr.0.sroa_idx, align 1
  %m.sroa.88.0.block.addr.0.sroa_idx = getelementptr inbounds i8, ptr %block.addr.03995, i32 28
  %15 = ptrtoint ptr %m.sroa.88.0.block.addr.0.sroa_idx to i32
  call void @__asan_loadN_noabort(i32 %15, i32 4)
  %m.sroa.88.0.copyload = load i32, ptr %m.sroa.88.0.block.addr.0.sroa_idx, align 1
  %m.sroa.100.0.block.addr.0.sroa_idx = getelementptr inbounds i8, ptr %block.addr.03995, i32 32
  %16 = ptrtoint ptr %m.sroa.100.0.block.addr.0.sroa_idx to i32
  call void @__asan_loadN_noabort(i32 %16, i32 4)
  %m.sroa.100.0.copyload = load i32, ptr %m.sroa.100.0.block.addr.0.sroa_idx, align 1
  %m.sroa.112.0.block.addr.0.sroa_idx = getelementptr inbounds i8, ptr %block.addr.03995, i32 36
  %17 = ptrtoint ptr %m.sroa.112.0.block.addr.0.sroa_idx to i32
  call void @__asan_loadN_noabort(i32 %17, i32 4)
  %m.sroa.112.0.copyload = load i32, ptr %m.sroa.112.0.block.addr.0.sroa_idx, align 1
  %m.sroa.124.0.block.addr.0.sroa_idx = getelementptr inbounds i8, ptr %block.addr.03995, i32 40
  %18 = ptrtoint ptr %m.sroa.124.0.block.addr.0.sroa_idx to i32
  call void @__asan_loadN_noabort(i32 %18, i32 4)
  %m.sroa.124.0.copyload = load i32, ptr %m.sroa.124.0.block.addr.0.sroa_idx, align 1
  %m.sroa.136.0.block.addr.0.sroa_idx = getelementptr inbounds i8, ptr %block.addr.03995, i32 44
  %19 = ptrtoint ptr %m.sroa.136.0.block.addr.0.sroa_idx to i32
  call void @__asan_loadN_noabort(i32 %19, i32 4)
  %m.sroa.136.0.copyload = load i32, ptr %m.sroa.136.0.block.addr.0.sroa_idx, align 1
  %m.sroa.148.0.block.addr.0.sroa_idx = getelementptr inbounds i8, ptr %block.addr.03995, i32 48
  %20 = ptrtoint ptr %m.sroa.148.0.block.addr.0.sroa_idx to i32
  call void @__asan_loadN_noabort(i32 %20, i32 4)
  %m.sroa.148.0.copyload = load i32, ptr %m.sroa.148.0.block.addr.0.sroa_idx, align 1
  %m.sroa.160.0.block.addr.0.sroa_idx = getelementptr inbounds i8, ptr %block.addr.03995, i32 52
  %21 = ptrtoint ptr %m.sroa.160.0.block.addr.0.sroa_idx to i32
  call void @__asan_loadN_noabort(i32 %21, i32 4)
  %m.sroa.160.0.copyload = load i32, ptr %m.sroa.160.0.block.addr.0.sroa_idx, align 1
  %m.sroa.172.0.block.addr.0.sroa_idx = getelementptr inbounds i8, ptr %block.addr.03995, i32 56
  %22 = ptrtoint ptr %m.sroa.172.0.block.addr.0.sroa_idx to i32
  call void @__asan_loadN_noabort(i32 %22, i32 4)
  %m.sroa.172.0.copyload = load i32, ptr %m.sroa.172.0.block.addr.0.sroa_idx, align 1
  %m.sroa.184.0.block.addr.0.sroa_idx = getelementptr inbounds i8, ptr %block.addr.03995, i32 60
  %23 = ptrtoint ptr %m.sroa.184.0.block.addr.0.sroa_idx to i32
  call void @__asan_loadN_noabort(i32 %23, i32 4)
  %m.sroa.184.0.copyload = load i32, ptr %m.sroa.184.0.block.addr.0.sroa_idx, align 1
  %24 = tail call i32 @llvm.bswap.i32(i32 %m.sroa.0.0.copyload) #2
  %25 = tail call i32 @llvm.bswap.i32(i32 %m.sroa.16.0.copyload) #2
  %26 = tail call i32 @llvm.bswap.i32(i32 %m.sroa.28.0.copyload) #2
  %27 = tail call i32 @llvm.bswap.i32(i32 %m.sroa.40.0.copyload) #2
  %28 = tail call i32 @llvm.bswap.i32(i32 %m.sroa.52.0.copyload) #2
  %29 = tail call i32 @llvm.bswap.i32(i32 %m.sroa.64.0.copyload) #2
  %30 = tail call i32 @llvm.bswap.i32(i32 %m.sroa.76.0.copyload) #2
  %31 = tail call i32 @llvm.bswap.i32(i32 %m.sroa.88.0.copyload) #2
  %32 = tail call i32 @llvm.bswap.i32(i32 %m.sroa.100.0.copyload) #2
  %33 = tail call i32 @llvm.bswap.i32(i32 %m.sroa.112.0.copyload) #2
  %34 = tail call i32 @llvm.bswap.i32(i32 %m.sroa.124.0.copyload) #2
  %35 = tail call i32 @llvm.bswap.i32(i32 %m.sroa.136.0.copyload) #2
  %36 = tail call i32 @llvm.bswap.i32(i32 %m.sroa.148.0.copyload) #2
  %37 = tail call i32 @llvm.bswap.i32(i32 %m.sroa.160.0.copyload) #2
  %38 = tail call i32 @llvm.bswap.i32(i32 %m.sroa.172.0.copyload) #2
  %39 = tail call i32 @llvm.bswap.i32(i32 %m.sroa.184.0.copyload) #2
  %40 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %40)
  %v.sroa.0.0.copyload = load i32, ptr %state, align 4
  %41 = ptrtoint ptr %v.sroa.56.0.state.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %41)
  %v.sroa.56.0.copyload = load i32, ptr %v.sroa.56.0.state.sroa_idx, align 4
  %42 = ptrtoint ptr %v.sroa.110.0.state.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %42)
  %v.sroa.110.0.copyload = load i32, ptr %v.sroa.110.0.state.sroa_idx, align 4
  %43 = ptrtoint ptr %v.sroa.164.0.state.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %43)
  %v.sroa.164.0.copyload = load i32, ptr %v.sroa.164.0.state.sroa_idx, align 4
  %44 = ptrtoint ptr %v.sroa.218.0.state.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %44)
  %v.sroa.218.0.copyload = load i32, ptr %v.sroa.218.0.state.sroa_idx, align 4
  %45 = ptrtoint ptr %v.sroa.273.0.state.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %45)
  %v.sroa.273.0.copyload = load i32, ptr %v.sroa.273.0.state.sroa_idx, align 4
  %46 = ptrtoint ptr %v.sroa.333.0.state.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %46)
  %v.sroa.333.0.copyload = load i32, ptr %v.sroa.333.0.state.sroa_idx, align 4
  %47 = ptrtoint ptr %v.sroa.393.0.state.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %47)
  %v.sroa.393.0.copyload = load i32, ptr %v.sroa.393.0.state.sroa_idx, align 4
  %add = add i32 %v.sroa.218.0.copyload, %24
  %add39 = add i32 %add, %v.sroa.0.0.copyload
  %48 = xor i32 %add.i, %add39
  %xor42 = xor i32 %48, 1359893119
  %or.i = tail call i32 @llvm.fshl.i32(i32 %xor42, i32 %xor42, i32 16)
  %add46 = add i32 %or.i, 1779033703
  %xor49 = xor i32 %add46, %v.sroa.218.0.copyload
  %or.i3363 = tail call i32 @llvm.fshl.i32(i32 %xor49, i32 %xor49, i32 20)
  %add55 = add i32 %add39, %25
  %add57 = add i32 %add55, %or.i3363
  %xor60 = xor i32 %add57, %or.i
  %or.i3364 = tail call i32 @llvm.fshl.i32(i32 %xor60, i32 %xor60, i32 24)
  %add65 = add i32 %or.i3364, %add46
  %xor68 = xor i32 %add65, %or.i3363
  %or.i3365 = tail call i32 @llvm.fshl.i32(i32 %xor68, i32 %xor68, i32 25)
  %add77 = add i32 %v.sroa.273.0.copyload, %26
  %add79 = add i32 %add77, %v.sroa.56.0.copyload
  %49 = xor i32 %add5.i, %add79
  %xor82 = xor i32 %49, -1694144372
  %or.i3366 = tail call i32 @llvm.fshl.i32(i32 %xor82, i32 %xor82, i32 16)
  %add87 = add i32 %or.i3366, -1150833019
  %xor90 = xor i32 %add87, %v.sroa.273.0.copyload
  %or.i3367 = tail call i32 @llvm.fshl.i32(i32 %xor90, i32 %xor90, i32 20)
  %add96 = add i32 %add79, %27
  %add98 = add i32 %add96, %or.i3367
  %xor101 = xor i32 %add98, %or.i3366
  %or.i3368 = tail call i32 @llvm.fshl.i32(i32 %xor101, i32 %xor101, i32 24)
  %add106 = add i32 %or.i3368, %add87
  %xor109 = xor i32 %add106, %or.i3367
  %or.i3369 = tail call i32 @llvm.fshl.i32(i32 %xor109, i32 %xor109, i32 25)
  %add118 = add i32 %v.sroa.333.0.copyload, %28
  %add120 = add i32 %add118, %v.sroa.110.0.copyload
  %50 = xor i32 %1, %add120
  %xor123 = xor i32 %50, 528734635
  %or.i3370 = tail call i32 @llvm.fshl.i32(i32 %xor123, i32 %xor123, i32 16)
  %add128 = add i32 %or.i3370, 1013904242
  %xor131 = xor i32 %add128, %v.sroa.333.0.copyload
  %or.i3371 = tail call i32 @llvm.fshl.i32(i32 %xor131, i32 %xor131, i32 20)
  %add137 = add i32 %add120, %29
  %add139 = add i32 %add137, %or.i3371
  %xor142 = xor i32 %add139, %or.i3370
  %or.i3372 = tail call i32 @llvm.fshl.i32(i32 %xor142, i32 %xor142, i32 24)
  %add147 = add i32 %or.i3372, %add128
  %xor150 = xor i32 %add147, %or.i3371
  %or.i3373 = tail call i32 @llvm.fshl.i32(i32 %xor150, i32 %xor150, i32 25)
  %add159 = add i32 %v.sroa.393.0.copyload, %30
  %add161 = add i32 %add159, %v.sroa.164.0.copyload
  %51 = xor i32 %3, %add161
  %xor164 = xor i32 %51, 1541459225
  %or.i3374 = tail call i32 @llvm.fshl.i32(i32 %xor164, i32 %xor164, i32 16)
  %add169 = add i32 %or.i3374, -1521486534
  %xor172 = xor i32 %add169, %v.sroa.393.0.copyload
  %or.i3375 = tail call i32 @llvm.fshl.i32(i32 %xor172, i32 %xor172, i32 20)
  %add178 = add i32 %add161, %31
  %add180 = add i32 %add178, %or.i3375
  %xor183 = xor i32 %add180, %or.i3374
  %or.i3376 = tail call i32 @llvm.fshl.i32(i32 %xor183, i32 %xor183, i32 24)
  %add188 = add i32 %or.i3376, %add169
  %xor191 = xor i32 %add188, %or.i3375
  %or.i3377 = tail call i32 @llvm.fshl.i32(i32 %xor191, i32 %xor191, i32 25)
  %add200 = add i32 %add57, %32
  %add202 = add i32 %add200, %or.i3369
  %xor205 = xor i32 %or.i3376, %add202
  %or.i3378 = tail call i32 @llvm.fshl.i32(i32 %xor205, i32 %xor205, i32 16)
  %add210 = add i32 %or.i3378, %add147
  %xor213 = xor i32 %add210, %or.i3369
  %or.i3379 = tail call i32 @llvm.fshl.i32(i32 %xor213, i32 %xor213, i32 20)
  %add219 = add i32 %add202, %33
  %add221 = add i32 %add219, %or.i3379
  %xor224 = xor i32 %add221, %or.i3378
  %or.i3380 = tail call i32 @llvm.fshl.i32(i32 %xor224, i32 %xor224, i32 24)
  %add229 = add i32 %or.i3380, %add210
  %xor232 = xor i32 %add229, %or.i3379
  %or.i3381 = tail call i32 @llvm.fshl.i32(i32 %xor232, i32 %xor232, i32 25)
  %add241 = add i32 %add98, %34
  %add243 = add i32 %add241, %or.i3373
  %xor246 = xor i32 %add243, %or.i3364
  %or.i3382 = tail call i32 @llvm.fshl.i32(i32 %xor246, i32 %xor246, i32 16)
  %add251 = add i32 %add188, %or.i3382
  %xor254 = xor i32 %add251, %or.i3373
  %or.i3383 = tail call i32 @llvm.fshl.i32(i32 %xor254, i32 %xor254, i32 20)
  %add260 = add i32 %add243, %35
  %add262 = add i32 %add260, %or.i3383
  %xor265 = xor i32 %add262, %or.i3382
  %or.i3384 = tail call i32 @llvm.fshl.i32(i32 %xor265, i32 %xor265, i32 24)
  %add270 = add i32 %or.i3384, %add251
  %xor273 = xor i32 %add270, %or.i3383
  %or.i3385 = tail call i32 @llvm.fshl.i32(i32 %xor273, i32 %xor273, i32 25)
  %add282 = add i32 %add139, %36
  %add284 = add i32 %add282, %or.i3377
  %xor287 = xor i32 %add284, %or.i3368
  %or.i3386 = tail call i32 @llvm.fshl.i32(i32 %xor287, i32 %xor287, i32 16)
  %add292 = add i32 %or.i3386, %add65
  %xor295 = xor i32 %add292, %or.i3377
  %or.i3387 = tail call i32 @llvm.fshl.i32(i32 %xor295, i32 %xor295, i32 20)
  %add301 = add i32 %add284, %37
  %add303 = add i32 %add301, %or.i3387
  %xor306 = xor i32 %add303, %or.i3386
  %or.i3388 = tail call i32 @llvm.fshl.i32(i32 %xor306, i32 %xor306, i32 24)
  %add311 = add i32 %or.i3388, %add292
  %xor314 = xor i32 %add311, %or.i3387
  %or.i3389 = tail call i32 @llvm.fshl.i32(i32 %xor314, i32 %xor314, i32 25)
  %add323 = add i32 %or.i3365, %38
  %add325 = add i32 %add323, %add180
  %xor328 = xor i32 %add325, %or.i3372
  %or.i3390 = tail call i32 @llvm.fshl.i32(i32 %xor328, i32 %xor328, i32 16)
  %add333 = add i32 %or.i3390, %add106
  %xor336 = xor i32 %add333, %or.i3365
  %or.i3391 = tail call i32 @llvm.fshl.i32(i32 %xor336, i32 %xor336, i32 20)
  %add342 = add i32 %add325, %39
  %add344 = add i32 %add342, %or.i3391
  %xor347 = xor i32 %add344, %or.i3390
  %or.i3392 = tail call i32 @llvm.fshl.i32(i32 %xor347, i32 %xor347, i32 24)
  %add352 = add i32 %or.i3392, %add333
  %xor355 = xor i32 %add352, %or.i3391
  %or.i3393 = tail call i32 @llvm.fshl.i32(i32 %xor355, i32 %xor355, i32 25)
  %add367 = add i32 %add221, %38
  %add369 = add i32 %add367, %or.i3393
  %xor372 = xor i32 %add369, %or.i3384
  %or.i3394 = tail call i32 @llvm.fshl.i32(i32 %xor372, i32 %xor372, i32 16)
  %add377 = add i32 %add311, %or.i3394
  %xor380 = xor i32 %add377, %or.i3393
  %or.i3395 = tail call i32 @llvm.fshl.i32(i32 %xor380, i32 %xor380, i32 20)
  %add386 = add i32 %add369, %34
  %add388 = add i32 %add386, %or.i3395
  %xor391 = xor i32 %add388, %or.i3394
  %or.i3396 = tail call i32 @llvm.fshl.i32(i32 %xor391, i32 %xor391, i32 24)
  %add396 = add i32 %or.i3396, %add377
  %xor399 = xor i32 %add396, %or.i3395
  %or.i3397 = tail call i32 @llvm.fshl.i32(i32 %xor399, i32 %xor399, i32 25)
  %add408 = add i32 %add262, %28
  %add410 = add i32 %add408, %or.i3381
  %xor413 = xor i32 %or.i3388, %add410
  %or.i3398 = tail call i32 @llvm.fshl.i32(i32 %xor413, i32 %xor413, i32 16)
  %add418 = add i32 %or.i3398, %add352
  %xor421 = xor i32 %add418, %or.i3381
  %or.i3399 = tail call i32 @llvm.fshl.i32(i32 %xor421, i32 %xor421, i32 20)
  %add427 = add i32 %add410, %32
  %add429 = add i32 %add427, %or.i3399
  %xor432 = xor i32 %add429, %or.i3398
  %or.i3400 = tail call i32 @llvm.fshl.i32(i32 %xor432, i32 %xor432, i32 24)
  %add437 = add i32 %or.i3400, %add418
  %xor440 = xor i32 %add437, %or.i3399
  %or.i3401 = tail call i32 @llvm.fshl.i32(i32 %xor440, i32 %xor440, i32 25)
  %add449 = add i32 %or.i3385, %33
  %add451 = add i32 %add449, %add303
  %xor454 = xor i32 %add451, %or.i3392
  %or.i3402 = tail call i32 @llvm.fshl.i32(i32 %xor454, i32 %xor454, i32 16)
  %add459 = add i32 %or.i3402, %add229
  %xor462 = xor i32 %add459, %or.i3385
  %or.i3403 = tail call i32 @llvm.fshl.i32(i32 %xor462, i32 %xor462, i32 20)
  %add468 = add i32 %add451, %39
  %add470 = add i32 %add468, %or.i3403
  %xor473 = xor i32 %add470, %or.i3402
  %or.i3404 = tail call i32 @llvm.fshl.i32(i32 %xor473, i32 %xor473, i32 24)
  %add478 = add i32 %or.i3404, %add459
  %xor481 = xor i32 %add478, %or.i3403
  %or.i3405 = tail call i32 @llvm.fshl.i32(i32 %xor481, i32 %xor481, i32 25)
  %add490 = add i32 %add344, %37
  %add492 = add i32 %add490, %or.i3389
  %xor495 = xor i32 %add492, %or.i3380
  %or.i3406 = tail call i32 @llvm.fshl.i32(i32 %xor495, i32 %xor495, i32 16)
  %add500 = add i32 %or.i3406, %add270
  %xor503 = xor i32 %add500, %or.i3389
  %or.i3407 = tail call i32 @llvm.fshl.i32(i32 %xor503, i32 %xor503, i32 20)
  %add509 = add i32 %add492, %30
  %add511 = add i32 %add509, %or.i3407
  %xor514 = xor i32 %add511, %or.i3406
  %or.i3408 = tail call i32 @llvm.fshl.i32(i32 %xor514, i32 %xor514, i32 24)
  %add519 = add i32 %or.i3408, %add500
  %xor522 = xor i32 %add519, %or.i3407
  %or.i3409 = tail call i32 @llvm.fshl.i32(i32 %xor522, i32 %xor522, i32 25)
  %add531 = add i32 %add388, %25
  %add533 = add i32 %add531, %or.i3401
  %xor536 = xor i32 %or.i3408, %add533
  %or.i3410 = tail call i32 @llvm.fshl.i32(i32 %xor536, i32 %xor536, i32 16)
  %add541 = add i32 %or.i3410, %add478
  %xor544 = xor i32 %add541, %or.i3401
  %or.i3411 = tail call i32 @llvm.fshl.i32(i32 %xor544, i32 %xor544, i32 20)
  %add550 = add i32 %add533, %36
  %add552 = add i32 %add550, %or.i3411
  %xor555 = xor i32 %add552, %or.i3410
  %or.i3412 = tail call i32 @llvm.fshl.i32(i32 %xor555, i32 %xor555, i32 24)
  %add560 = add i32 %or.i3412, %add541
  %xor563 = xor i32 %add560, %or.i3411
  %or.i3413 = tail call i32 @llvm.fshl.i32(i32 %xor563, i32 %xor563, i32 25)
  %add572 = add i32 %add429, %24
  %add574 = add i32 %add572, %or.i3405
  %xor577 = xor i32 %add574, %or.i3396
  %or.i3414 = tail call i32 @llvm.fshl.i32(i32 %xor577, i32 %xor577, i32 16)
  %add582 = add i32 %add519, %or.i3414
  %xor585 = xor i32 %add582, %or.i3405
  %or.i3415 = tail call i32 @llvm.fshl.i32(i32 %xor585, i32 %xor585, i32 20)
  %add591 = add i32 %add574, %26
  %add593 = add i32 %add591, %or.i3415
  %xor596 = xor i32 %add593, %or.i3414
  %or.i3416 = tail call i32 @llvm.fshl.i32(i32 %xor596, i32 %xor596, i32 24)
  %add601 = add i32 %or.i3416, %add582
  %xor604 = xor i32 %add601, %or.i3415
  %or.i3417 = tail call i32 @llvm.fshl.i32(i32 %xor604, i32 %xor604, i32 25)
  %add613 = add i32 %add470, %35
  %add615 = add i32 %add613, %or.i3409
  %xor618 = xor i32 %add615, %or.i3400
  %or.i3418 = tail call i32 @llvm.fshl.i32(i32 %xor618, i32 %xor618, i32 16)
  %add623 = add i32 %or.i3418, %add396
  %xor626 = xor i32 %add623, %or.i3409
  %or.i3419 = tail call i32 @llvm.fshl.i32(i32 %xor626, i32 %xor626, i32 20)
  %add632 = add i32 %add615, %31
  %add634 = add i32 %add632, %or.i3419
  %xor637 = xor i32 %add634, %or.i3418
  %or.i3420 = tail call i32 @llvm.fshl.i32(i32 %xor637, i32 %xor637, i32 24)
  %add642 = add i32 %or.i3420, %add623
  %xor645 = xor i32 %add642, %or.i3419
  %or.i3421 = tail call i32 @llvm.fshl.i32(i32 %xor645, i32 %xor645, i32 25)
  %add654 = add i32 %or.i3397, %29
  %add656 = add i32 %add654, %add511
  %xor659 = xor i32 %add656, %or.i3404
  %or.i3422 = tail call i32 @llvm.fshl.i32(i32 %xor659, i32 %xor659, i32 16)
  %add664 = add i32 %or.i3422, %add437
  %xor667 = xor i32 %add664, %or.i3397
  %or.i3423 = tail call i32 @llvm.fshl.i32(i32 %xor667, i32 %xor667, i32 20)
  %add673 = add i32 %add656, %27
  %add675 = add i32 %add673, %or.i3423
  %xor678 = xor i32 %add675, %or.i3422
  %or.i3424 = tail call i32 @llvm.fshl.i32(i32 %xor678, i32 %xor678, i32 24)
  %add683 = add i32 %or.i3424, %add664
  %xor686 = xor i32 %add683, %or.i3423
  %or.i3425 = tail call i32 @llvm.fshl.i32(i32 %xor686, i32 %xor686, i32 25)
  %add698 = add i32 %add552, %35
  %add700 = add i32 %add698, %or.i3425
  %xor703 = xor i32 %add700, %or.i3416
  %or.i3426 = tail call i32 @llvm.fshl.i32(i32 %xor703, i32 %xor703, i32 16)
  %add708 = add i32 %add642, %or.i3426
  %xor711 = xor i32 %add708, %or.i3425
  %or.i3427 = tail call i32 @llvm.fshl.i32(i32 %xor711, i32 %xor711, i32 20)
  %add717 = add i32 %add700, %32
  %add719 = add i32 %add717, %or.i3427
  %xor722 = xor i32 %add719, %or.i3426
  %or.i3428 = tail call i32 @llvm.fshl.i32(i32 %xor722, i32 %xor722, i32 24)
  %add727 = add i32 %or.i3428, %add708
  %xor730 = xor i32 %add727, %or.i3427
  %or.i3429 = tail call i32 @llvm.fshl.i32(i32 %xor730, i32 %xor730, i32 25)
  %add739 = add i32 %add593, %36
  %add741 = add i32 %add739, %or.i3413
  %xor744 = xor i32 %or.i3420, %add741
  %or.i3430 = tail call i32 @llvm.fshl.i32(i32 %xor744, i32 %xor744, i32 16)
  %add749 = add i32 %or.i3430, %add683
  %xor752 = xor i32 %add749, %or.i3413
  %or.i3431 = tail call i32 @llvm.fshl.i32(i32 %xor752, i32 %xor752, i32 20)
  %add758 = add i32 %add741, %24
  %add760 = add i32 %add758, %or.i3431
  %xor763 = xor i32 %add760, %or.i3430
  %or.i3432 = tail call i32 @llvm.fshl.i32(i32 %xor763, i32 %xor763, i32 24)
  %add768 = add i32 %or.i3432, %add749
  %xor771 = xor i32 %add768, %or.i3431
  %or.i3433 = tail call i32 @llvm.fshl.i32(i32 %xor771, i32 %xor771, i32 25)
  %add780 = add i32 %or.i3417, %29
  %add782 = add i32 %add780, %add634
  %xor785 = xor i32 %add782, %or.i3424
  %or.i3434 = tail call i32 @llvm.fshl.i32(i32 %xor785, i32 %xor785, i32 16)
  %add790 = add i32 %or.i3434, %add560
  %xor793 = xor i32 %add790, %or.i3417
  %or.i3435 = tail call i32 @llvm.fshl.i32(i32 %xor793, i32 %xor793, i32 20)
  %add799 = add i32 %add782, %26
  %add801 = add i32 %add799, %or.i3435
  %xor804 = xor i32 %add801, %or.i3434
  %or.i3436 = tail call i32 @llvm.fshl.i32(i32 %xor804, i32 %xor804, i32 24)
  %add809 = add i32 %or.i3436, %add790
  %xor812 = xor i32 %add809, %or.i3435
  %or.i3437 = tail call i32 @llvm.fshl.i32(i32 %xor812, i32 %xor812, i32 25)
  %add821 = add i32 %add675, %39
  %add823 = add i32 %add821, %or.i3421
  %xor826 = xor i32 %add823, %or.i3412
  %or.i3438 = tail call i32 @llvm.fshl.i32(i32 %xor826, i32 %xor826, i32 16)
  %add831 = add i32 %or.i3438, %add601
  %xor834 = xor i32 %add831, %or.i3421
  %or.i3439 = tail call i32 @llvm.fshl.i32(i32 %xor834, i32 %xor834, i32 20)
  %add840 = add i32 %add823, %37
  %add842 = add i32 %add840, %or.i3439
  %xor845 = xor i32 %add842, %or.i3438
  %or.i3440 = tail call i32 @llvm.fshl.i32(i32 %xor845, i32 %xor845, i32 24)
  %add850 = add i32 %or.i3440, %add831
  %xor853 = xor i32 %add850, %or.i3439
  %or.i3441 = tail call i32 @llvm.fshl.i32(i32 %xor853, i32 %xor853, i32 25)
  %add862 = add i32 %add719, %34
  %add864 = add i32 %add862, %or.i3433
  %xor867 = xor i32 %or.i3440, %add864
  %or.i3442 = tail call i32 @llvm.fshl.i32(i32 %xor867, i32 %xor867, i32 16)
  %add872 = add i32 %or.i3442, %add809
  %xor875 = xor i32 %add872, %or.i3433
  %or.i3443 = tail call i32 @llvm.fshl.i32(i32 %xor875, i32 %xor875, i32 20)
  %add881 = add i32 %add864, %38
  %add883 = add i32 %add881, %or.i3443
  %xor886 = xor i32 %add883, %or.i3442
  %or.i3444 = tail call i32 @llvm.fshl.i32(i32 %xor886, i32 %xor886, i32 24)
  %add891 = add i32 %or.i3444, %add872
  %xor894 = xor i32 %add891, %or.i3443
  %or.i3445 = tail call i32 @llvm.fshl.i32(i32 %xor894, i32 %xor894, i32 25)
  %add903 = add i32 %add760, %27
  %add905 = add i32 %add903, %or.i3437
  %xor908 = xor i32 %add905, %or.i3428
  %or.i3446 = tail call i32 @llvm.fshl.i32(i32 %xor908, i32 %xor908, i32 16)
  %add913 = add i32 %add850, %or.i3446
  %xor916 = xor i32 %add913, %or.i3437
  %or.i3447 = tail call i32 @llvm.fshl.i32(i32 %xor916, i32 %xor916, i32 20)
  %add922 = add i32 %add905, %30
  %add924 = add i32 %add922, %or.i3447
  %xor927 = xor i32 %add924, %or.i3446
  %or.i3448 = tail call i32 @llvm.fshl.i32(i32 %xor927, i32 %xor927, i32 24)
  %add932 = add i32 %or.i3448, %add913
  %xor935 = xor i32 %add932, %or.i3447
  %or.i3449 = tail call i32 @llvm.fshl.i32(i32 %xor935, i32 %xor935, i32 25)
  %add944 = add i32 %add801, %31
  %add946 = add i32 %add944, %or.i3441
  %xor949 = xor i32 %add946, %or.i3432
  %or.i3450 = tail call i32 @llvm.fshl.i32(i32 %xor949, i32 %xor949, i32 16)
  %add954 = add i32 %or.i3450, %add727
  %xor957 = xor i32 %add954, %or.i3441
  %or.i3451 = tail call i32 @llvm.fshl.i32(i32 %xor957, i32 %xor957, i32 20)
  %add963 = add i32 %add946, %25
  %add965 = add i32 %add963, %or.i3451
  %xor968 = xor i32 %add965, %or.i3450
  %or.i3452 = tail call i32 @llvm.fshl.i32(i32 %xor968, i32 %xor968, i32 24)
  %add973 = add i32 %or.i3452, %add954
  %xor976 = xor i32 %add973, %or.i3451
  %or.i3453 = tail call i32 @llvm.fshl.i32(i32 %xor976, i32 %xor976, i32 25)
  %add985 = add i32 %or.i3429, %33
  %add987 = add i32 %add985, %add842
  %xor990 = xor i32 %add987, %or.i3436
  %or.i3454 = tail call i32 @llvm.fshl.i32(i32 %xor990, i32 %xor990, i32 16)
  %add995 = add i32 %or.i3454, %add768
  %xor998 = xor i32 %add995, %or.i3429
  %or.i3455 = tail call i32 @llvm.fshl.i32(i32 %xor998, i32 %xor998, i32 20)
  %add1004 = add i32 %add987, %28
  %add1006 = add i32 %add1004, %or.i3455
  %xor1009 = xor i32 %add1006, %or.i3454
  %or.i3456 = tail call i32 @llvm.fshl.i32(i32 %xor1009, i32 %xor1009, i32 24)
  %add1014 = add i32 %or.i3456, %add995
  %xor1017 = xor i32 %add1014, %or.i3455
  %or.i3457 = tail call i32 @llvm.fshl.i32(i32 %xor1017, i32 %xor1017, i32 25)
  %add1029 = add i32 %add883, %31
  %add1031 = add i32 %add1029, %or.i3457
  %xor1034 = xor i32 %add1031, %or.i3448
  %or.i3458 = tail call i32 @llvm.fshl.i32(i32 %xor1034, i32 %xor1034, i32 16)
  %add1039 = add i32 %add973, %or.i3458
  %xor1042 = xor i32 %add1039, %or.i3457
  %or.i3459 = tail call i32 @llvm.fshl.i32(i32 %xor1042, i32 %xor1042, i32 20)
  %add1048 = add i32 %add1031, %33
  %add1050 = add i32 %add1048, %or.i3459
  %xor1053 = xor i32 %add1050, %or.i3458
  %or.i3460 = tail call i32 @llvm.fshl.i32(i32 %xor1053, i32 %xor1053, i32 24)
  %add1058 = add i32 %or.i3460, %add1039
  %xor1061 = xor i32 %add1058, %or.i3459
  %or.i3461 = tail call i32 @llvm.fshl.i32(i32 %xor1061, i32 %xor1061, i32 25)
  %add1070 = add i32 %add924, %27
  %add1072 = add i32 %add1070, %or.i3445
  %xor1075 = xor i32 %or.i3452, %add1072
  %or.i3462 = tail call i32 @llvm.fshl.i32(i32 %xor1075, i32 %xor1075, i32 16)
  %add1080 = add i32 %or.i3462, %add1014
  %xor1083 = xor i32 %add1080, %or.i3445
  %or.i3463 = tail call i32 @llvm.fshl.i32(i32 %xor1083, i32 %xor1083, i32 20)
  %add1089 = add i32 %add1072, %25
  %add1091 = add i32 %add1089, %or.i3463
  %xor1094 = xor i32 %add1091, %or.i3462
  %or.i3464 = tail call i32 @llvm.fshl.i32(i32 %xor1094, i32 %xor1094, i32 24)
  %add1099 = add i32 %or.i3464, %add1080
  %xor1102 = xor i32 %add1099, %or.i3463
  %or.i3465 = tail call i32 @llvm.fshl.i32(i32 %xor1102, i32 %xor1102, i32 25)
  %add1111 = add i32 %or.i3449, %37
  %add1113 = add i32 %add1111, %add965
  %xor1116 = xor i32 %add1113, %or.i3456
  %or.i3466 = tail call i32 @llvm.fshl.i32(i32 %xor1116, i32 %xor1116, i32 16)
  %add1121 = add i32 %or.i3466, %add891
  %xor1124 = xor i32 %add1121, %or.i3449
  %or.i3467 = tail call i32 @llvm.fshl.i32(i32 %xor1124, i32 %xor1124, i32 20)
  %add1130 = add i32 %add1113, %36
  %add1132 = add i32 %add1130, %or.i3467
  %xor1135 = xor i32 %add1132, %or.i3466
  %or.i3468 = tail call i32 @llvm.fshl.i32(i32 %xor1135, i32 %xor1135, i32 24)
  %add1140 = add i32 %or.i3468, %add1121
  %xor1143 = xor i32 %add1140, %or.i3467
  %or.i3469 = tail call i32 @llvm.fshl.i32(i32 %xor1143, i32 %xor1143, i32 25)
  %add1152 = add i32 %add1006, %35
  %add1154 = add i32 %add1152, %or.i3453
  %xor1157 = xor i32 %add1154, %or.i3444
  %or.i3470 = tail call i32 @llvm.fshl.i32(i32 %xor1157, i32 %xor1157, i32 16)
  %add1162 = add i32 %or.i3470, %add932
  %xor1165 = xor i32 %add1162, %or.i3453
  %or.i3471 = tail call i32 @llvm.fshl.i32(i32 %xor1165, i32 %xor1165, i32 20)
  %add1171 = add i32 %add1154, %38
  %add1173 = add i32 %add1171, %or.i3471
  %xor1176 = xor i32 %add1173, %or.i3470
  %or.i3472 = tail call i32 @llvm.fshl.i32(i32 %xor1176, i32 %xor1176, i32 24)
  %add1181 = add i32 %or.i3472, %add1162
  %xor1184 = xor i32 %add1181, %or.i3471
  %or.i3473 = tail call i32 @llvm.fshl.i32(i32 %xor1184, i32 %xor1184, i32 25)
  %add1193 = add i32 %add1050, %26
  %add1195 = add i32 %add1193, %or.i3465
  %xor1198 = xor i32 %or.i3472, %add1195
  %or.i3474 = tail call i32 @llvm.fshl.i32(i32 %xor1198, i32 %xor1198, i32 16)
  %add1203 = add i32 %or.i3474, %add1140
  %xor1206 = xor i32 %add1203, %or.i3465
  %or.i3475 = tail call i32 @llvm.fshl.i32(i32 %xor1206, i32 %xor1206, i32 20)
  %add1212 = add i32 %add1195, %30
  %add1214 = add i32 %add1212, %or.i3475
  %xor1217 = xor i32 %add1214, %or.i3474
  %or.i3476 = tail call i32 @llvm.fshl.i32(i32 %xor1217, i32 %xor1217, i32 24)
  %add1222 = add i32 %or.i3476, %add1203
  %xor1225 = xor i32 %add1222, %or.i3475
  %or.i3477 = tail call i32 @llvm.fshl.i32(i32 %xor1225, i32 %xor1225, i32 25)
  %add1234 = add i32 %add1091, %29
  %add1236 = add i32 %add1234, %or.i3469
  %xor1239 = xor i32 %add1236, %or.i3460
  %or.i3478 = tail call i32 @llvm.fshl.i32(i32 %xor1239, i32 %xor1239, i32 16)
  %add1244 = add i32 %add1181, %or.i3478
  %xor1247 = xor i32 %add1244, %or.i3469
  %or.i3479 = tail call i32 @llvm.fshl.i32(i32 %xor1247, i32 %xor1247, i32 20)
  %add1253 = add i32 %add1236, %34
  %add1255 = add i32 %add1253, %or.i3479
  %xor1258 = xor i32 %add1255, %or.i3478
  %or.i3480 = tail call i32 @llvm.fshl.i32(i32 %xor1258, i32 %xor1258, i32 24)
  %add1263 = add i32 %or.i3480, %add1244
  %xor1266 = xor i32 %add1263, %or.i3479
  %or.i3481 = tail call i32 @llvm.fshl.i32(i32 %xor1266, i32 %xor1266, i32 25)
  %add1275 = add i32 %add1132, %28
  %add1277 = add i32 %add1275, %or.i3473
  %xor1280 = xor i32 %add1277, %or.i3464
  %or.i3482 = tail call i32 @llvm.fshl.i32(i32 %xor1280, i32 %xor1280, i32 16)
  %add1285 = add i32 %or.i3482, %add1058
  %xor1288 = xor i32 %add1285, %or.i3473
  %or.i3483 = tail call i32 @llvm.fshl.i32(i32 %xor1288, i32 %xor1288, i32 20)
  %add1294 = add i32 %add1277, %24
  %add1296 = add i32 %add1294, %or.i3483
  %xor1299 = xor i32 %add1296, %or.i3482
  %or.i3484 = tail call i32 @llvm.fshl.i32(i32 %xor1299, i32 %xor1299, i32 24)
  %add1304 = add i32 %or.i3484, %add1285
  %xor1307 = xor i32 %add1304, %or.i3483
  %or.i3485 = tail call i32 @llvm.fshl.i32(i32 %xor1307, i32 %xor1307, i32 25)
  %add1316 = add i32 %or.i3461, %39
  %add1318 = add i32 %add1316, %add1173
  %xor1321 = xor i32 %add1318, %or.i3468
  %or.i3486 = tail call i32 @llvm.fshl.i32(i32 %xor1321, i32 %xor1321, i32 16)
  %add1326 = add i32 %or.i3486, %add1099
  %xor1329 = xor i32 %add1326, %or.i3461
  %or.i3487 = tail call i32 @llvm.fshl.i32(i32 %xor1329, i32 %xor1329, i32 20)
  %add1335 = add i32 %add1318, %32
  %add1337 = add i32 %add1335, %or.i3487
  %xor1340 = xor i32 %add1337, %or.i3486
  %or.i3488 = tail call i32 @llvm.fshl.i32(i32 %xor1340, i32 %xor1340, i32 24)
  %add1345 = add i32 %or.i3488, %add1326
  %xor1348 = xor i32 %add1345, %or.i3487
  %or.i3489 = tail call i32 @llvm.fshl.i32(i32 %xor1348, i32 %xor1348, i32 25)
  %add1360 = add i32 %add1214, %33
  %add1362 = add i32 %add1360, %or.i3489
  %xor1365 = xor i32 %add1362, %or.i3480
  %or.i3490 = tail call i32 @llvm.fshl.i32(i32 %xor1365, i32 %xor1365, i32 16)
  %add1370 = add i32 %add1304, %or.i3490
  %xor1373 = xor i32 %add1370, %or.i3489
  %or.i3491 = tail call i32 @llvm.fshl.i32(i32 %xor1373, i32 %xor1373, i32 20)
  %add1379 = add i32 %add1362, %24
  %add1381 = add i32 %add1379, %or.i3491
  %xor1384 = xor i32 %add1381, %or.i3490
  %or.i3492 = tail call i32 @llvm.fshl.i32(i32 %xor1384, i32 %xor1384, i32 24)
  %add1389 = add i32 %or.i3492, %add1370
  %xor1392 = xor i32 %add1389, %or.i3491
  %or.i3493 = tail call i32 @llvm.fshl.i32(i32 %xor1392, i32 %xor1392, i32 25)
  %add1401 = add i32 %add1255, %29
  %add1403 = add i32 %add1401, %or.i3477
  %xor1406 = xor i32 %or.i3484, %add1403
  %or.i3494 = tail call i32 @llvm.fshl.i32(i32 %xor1406, i32 %xor1406, i32 16)
  %add1411 = add i32 %or.i3494, %add1345
  %xor1414 = xor i32 %add1411, %or.i3477
  %or.i3495 = tail call i32 @llvm.fshl.i32(i32 %xor1414, i32 %xor1414, i32 20)
  %add1420 = add i32 %add1403, %31
  %add1422 = add i32 %add1420, %or.i3495
  %xor1425 = xor i32 %add1422, %or.i3494
  %or.i3496 = tail call i32 @llvm.fshl.i32(i32 %xor1425, i32 %xor1425, i32 24)
  %add1430 = add i32 %or.i3496, %add1411
  %xor1433 = xor i32 %add1430, %or.i3495
  %or.i3497 = tail call i32 @llvm.fshl.i32(i32 %xor1433, i32 %xor1433, i32 25)
  %add1442 = add i32 %or.i3481, %26
  %add1444 = add i32 %add1442, %add1296
  %xor1447 = xor i32 %add1444, %or.i3488
  %or.i3498 = tail call i32 @llvm.fshl.i32(i32 %xor1447, i32 %xor1447, i32 16)
  %add1452 = add i32 %or.i3498, %add1222
  %xor1455 = xor i32 %add1452, %or.i3481
  %or.i3499 = tail call i32 @llvm.fshl.i32(i32 %xor1455, i32 %xor1455, i32 20)
  %add1461 = add i32 %add1444, %28
  %add1463 = add i32 %add1461, %or.i3499
  %xor1466 = xor i32 %add1463, %or.i3498
  %or.i3500 = tail call i32 @llvm.fshl.i32(i32 %xor1466, i32 %xor1466, i32 24)
  %add1471 = add i32 %or.i3500, %add1452
  %xor1474 = xor i32 %add1471, %or.i3499
  %or.i3501 = tail call i32 @llvm.fshl.i32(i32 %xor1474, i32 %xor1474, i32 25)
  %add1483 = add i32 %add1337, %34
  %add1485 = add i32 %add1483, %or.i3485
  %xor1488 = xor i32 %add1485, %or.i3476
  %or.i3502 = tail call i32 @llvm.fshl.i32(i32 %xor1488, i32 %xor1488, i32 16)
  %add1493 = add i32 %or.i3502, %add1263
  %xor1496 = xor i32 %add1493, %or.i3485
  %or.i3503 = tail call i32 @llvm.fshl.i32(i32 %xor1496, i32 %xor1496, i32 20)
  %add1502 = add i32 %add1485, %39
  %add1504 = add i32 %add1502, %or.i3503
  %xor1507 = xor i32 %add1504, %or.i3502
  %or.i3504 = tail call i32 @llvm.fshl.i32(i32 %xor1507, i32 %xor1507, i32 24)
  %add1512 = add i32 %or.i3504, %add1493
  %xor1515 = xor i32 %add1512, %or.i3503
  %or.i3505 = tail call i32 @llvm.fshl.i32(i32 %xor1515, i32 %xor1515, i32 25)
  %add1524 = add i32 %add1381, %38
  %add1526 = add i32 %add1524, %or.i3497
  %xor1529 = xor i32 %or.i3504, %add1526
  %or.i3506 = tail call i32 @llvm.fshl.i32(i32 %xor1529, i32 %xor1529, i32 16)
  %add1534 = add i32 %or.i3506, %add1471
  %xor1537 = xor i32 %add1534, %or.i3497
  %or.i3507 = tail call i32 @llvm.fshl.i32(i32 %xor1537, i32 %xor1537, i32 20)
  %add1543 = add i32 %add1526, %25
  %add1545 = add i32 %add1543, %or.i3507
  %xor1548 = xor i32 %add1545, %or.i3506
  %or.i3508 = tail call i32 @llvm.fshl.i32(i32 %xor1548, i32 %xor1548, i32 24)
  %add1553 = add i32 %or.i3508, %add1534
  %xor1556 = xor i32 %add1553, %or.i3507
  %or.i3509 = tail call i32 @llvm.fshl.i32(i32 %xor1556, i32 %xor1556, i32 25)
  %add1565 = add i32 %add1422, %35
  %add1567 = add i32 %add1565, %or.i3501
  %xor1570 = xor i32 %add1567, %or.i3492
  %or.i3510 = tail call i32 @llvm.fshl.i32(i32 %xor1570, i32 %xor1570, i32 16)
  %add1575 = add i32 %add1512, %or.i3510
  %xor1578 = xor i32 %add1575, %or.i3501
  %or.i3511 = tail call i32 @llvm.fshl.i32(i32 %xor1578, i32 %xor1578, i32 20)
  %add1584 = add i32 %add1567, %36
  %add1586 = add i32 %add1584, %or.i3511
  %xor1589 = xor i32 %add1586, %or.i3510
  %or.i3512 = tail call i32 @llvm.fshl.i32(i32 %xor1589, i32 %xor1589, i32 24)
  %add1594 = add i32 %or.i3512, %add1575
  %xor1597 = xor i32 %add1594, %or.i3511
  %or.i3513 = tail call i32 @llvm.fshl.i32(i32 %xor1597, i32 %xor1597, i32 25)
  %add1606 = add i32 %add1463, %30
  %add1608 = add i32 %add1606, %or.i3505
  %xor1611 = xor i32 %add1608, %or.i3496
  %or.i3514 = tail call i32 @llvm.fshl.i32(i32 %xor1611, i32 %xor1611, i32 16)
  %add1616 = add i32 %or.i3514, %add1389
  %xor1619 = xor i32 %add1616, %or.i3505
  %or.i3515 = tail call i32 @llvm.fshl.i32(i32 %xor1619, i32 %xor1619, i32 20)
  %add1625 = add i32 %add1608, %32
  %add1627 = add i32 %add1625, %or.i3515
  %xor1630 = xor i32 %add1627, %or.i3514
  %or.i3516 = tail call i32 @llvm.fshl.i32(i32 %xor1630, i32 %xor1630, i32 24)
  %add1635 = add i32 %or.i3516, %add1616
  %xor1638 = xor i32 %add1635, %or.i3515
  %or.i3517 = tail call i32 @llvm.fshl.i32(i32 %xor1638, i32 %xor1638, i32 25)
  %add1647 = add i32 %or.i3493, %27
  %add1649 = add i32 %add1647, %add1504
  %xor1652 = xor i32 %add1649, %or.i3500
  %or.i3518 = tail call i32 @llvm.fshl.i32(i32 %xor1652, i32 %xor1652, i32 16)
  %add1657 = add i32 %or.i3518, %add1430
  %xor1660 = xor i32 %add1657, %or.i3493
  %or.i3519 = tail call i32 @llvm.fshl.i32(i32 %xor1660, i32 %xor1660, i32 20)
  %add1666 = add i32 %add1649, %37
  %add1668 = add i32 %add1666, %or.i3519
  %xor1671 = xor i32 %add1668, %or.i3518
  %or.i3520 = tail call i32 @llvm.fshl.i32(i32 %xor1671, i32 %xor1671, i32 24)
  %add1676 = add i32 %or.i3520, %add1657
  %xor1679 = xor i32 %add1676, %or.i3519
  %or.i3521 = tail call i32 @llvm.fshl.i32(i32 %xor1679, i32 %xor1679, i32 25)
  %add1691 = add i32 %add1545, %26
  %add1693 = add i32 %add1691, %or.i3521
  %xor1696 = xor i32 %add1693, %or.i3512
  %or.i3522 = tail call i32 @llvm.fshl.i32(i32 %xor1696, i32 %xor1696, i32 16)
  %add1701 = add i32 %add1635, %or.i3522
  %xor1704 = xor i32 %add1701, %or.i3521
  %or.i3523 = tail call i32 @llvm.fshl.i32(i32 %xor1704, i32 %xor1704, i32 20)
  %add1710 = add i32 %add1693, %36
  %add1712 = add i32 %add1710, %or.i3523
  %xor1715 = xor i32 %add1712, %or.i3522
  %or.i3524 = tail call i32 @llvm.fshl.i32(i32 %xor1715, i32 %xor1715, i32 24)
  %add1720 = add i32 %or.i3524, %add1701
  %xor1723 = xor i32 %add1720, %or.i3523
  %or.i3525 = tail call i32 @llvm.fshl.i32(i32 %xor1723, i32 %xor1723, i32 25)
  %add1732 = add i32 %add1586, %30
  %add1734 = add i32 %add1732, %or.i3509
  %xor1737 = xor i32 %or.i3516, %add1734
  %or.i3526 = tail call i32 @llvm.fshl.i32(i32 %xor1737, i32 %xor1737, i32 16)
  %add1742 = add i32 %or.i3526, %add1676
  %xor1745 = xor i32 %add1742, %or.i3509
  %or.i3527 = tail call i32 @llvm.fshl.i32(i32 %xor1745, i32 %xor1745, i32 20)
  %add1751 = add i32 %add1734, %34
  %add1753 = add i32 %add1751, %or.i3527
  %xor1756 = xor i32 %add1753, %or.i3526
  %or.i3528 = tail call i32 @llvm.fshl.i32(i32 %xor1756, i32 %xor1756, i32 24)
  %add1761 = add i32 %or.i3528, %add1742
  %xor1764 = xor i32 %add1761, %or.i3527
  %or.i3529 = tail call i32 @llvm.fshl.i32(i32 %xor1764, i32 %xor1764, i32 25)
  %add1773 = add i32 %or.i3513, %24
  %add1775 = add i32 %add1773, %add1627
  %xor1778 = xor i32 %add1775, %or.i3520
  %or.i3530 = tail call i32 @llvm.fshl.i32(i32 %xor1778, i32 %xor1778, i32 16)
  %add1783 = add i32 %or.i3530, %add1553
  %xor1786 = xor i32 %add1783, %or.i3513
  %or.i3531 = tail call i32 @llvm.fshl.i32(i32 %xor1786, i32 %xor1786, i32 20)
  %add1792 = add i32 %add1775, %35
  %add1794 = add i32 %add1792, %or.i3531
  %xor1797 = xor i32 %add1794, %or.i3530
  %or.i3532 = tail call i32 @llvm.fshl.i32(i32 %xor1797, i32 %xor1797, i32 24)
  %add1802 = add i32 %or.i3532, %add1783
  %xor1805 = xor i32 %add1802, %or.i3531
  %or.i3533 = tail call i32 @llvm.fshl.i32(i32 %xor1805, i32 %xor1805, i32 25)
  %add1814 = add i32 %add1668, %32
  %add1816 = add i32 %add1814, %or.i3517
  %xor1819 = xor i32 %add1816, %or.i3508
  %or.i3534 = tail call i32 @llvm.fshl.i32(i32 %xor1819, i32 %xor1819, i32 16)
  %add1824 = add i32 %or.i3534, %add1594
  %xor1827 = xor i32 %add1824, %or.i3517
  %or.i3535 = tail call i32 @llvm.fshl.i32(i32 %xor1827, i32 %xor1827, i32 20)
  %add1833 = add i32 %add1816, %27
  %add1835 = add i32 %add1833, %or.i3535
  %xor1838 = xor i32 %add1835, %or.i3534
  %or.i3536 = tail call i32 @llvm.fshl.i32(i32 %xor1838, i32 %xor1838, i32 24)
  %add1843 = add i32 %or.i3536, %add1824
  %xor1846 = xor i32 %add1843, %or.i3535
  %or.i3537 = tail call i32 @llvm.fshl.i32(i32 %xor1846, i32 %xor1846, i32 25)
  %add1855 = add i32 %add1712, %28
  %add1857 = add i32 %add1855, %or.i3529
  %xor1860 = xor i32 %or.i3536, %add1857
  %or.i3538 = tail call i32 @llvm.fshl.i32(i32 %xor1860, i32 %xor1860, i32 16)
  %add1865 = add i32 %or.i3538, %add1802
  %xor1868 = xor i32 %add1865, %or.i3529
  %or.i3539 = tail call i32 @llvm.fshl.i32(i32 %xor1868, i32 %xor1868, i32 20)
  %add1874 = add i32 %add1857, %37
  %add1876 = add i32 %add1874, %or.i3539
  %xor1879 = xor i32 %add1876, %or.i3538
  %or.i3540 = tail call i32 @llvm.fshl.i32(i32 %xor1879, i32 %xor1879, i32 24)
  %add1884 = add i32 %or.i3540, %add1865
  %xor1887 = xor i32 %add1884, %or.i3539
  %or.i3541 = tail call i32 @llvm.fshl.i32(i32 %xor1887, i32 %xor1887, i32 25)
  %add1896 = add i32 %add1753, %31
  %add1898 = add i32 %add1896, %or.i3533
  %xor1901 = xor i32 %add1898, %or.i3524
  %or.i3542 = tail call i32 @llvm.fshl.i32(i32 %xor1901, i32 %xor1901, i32 16)
  %add1906 = add i32 %add1843, %or.i3542
  %xor1909 = xor i32 %add1906, %or.i3533
  %or.i3543 = tail call i32 @llvm.fshl.i32(i32 %xor1909, i32 %xor1909, i32 20)
  %add1915 = add i32 %add1898, %29
  %add1917 = add i32 %add1915, %or.i3543
  %xor1920 = xor i32 %add1917, %or.i3542
  %or.i3544 = tail call i32 @llvm.fshl.i32(i32 %xor1920, i32 %xor1920, i32 24)
  %add1925 = add i32 %or.i3544, %add1906
  %xor1928 = xor i32 %add1925, %or.i3543
  %or.i3545 = tail call i32 @llvm.fshl.i32(i32 %xor1928, i32 %xor1928, i32 25)
  %add1937 = add i32 %add1794, %39
  %add1939 = add i32 %add1937, %or.i3537
  %xor1942 = xor i32 %add1939, %or.i3528
  %or.i3546 = tail call i32 @llvm.fshl.i32(i32 %xor1942, i32 %xor1942, i32 16)
  %add1947 = add i32 %or.i3546, %add1720
  %xor1950 = xor i32 %add1947, %or.i3537
  %or.i3547 = tail call i32 @llvm.fshl.i32(i32 %xor1950, i32 %xor1950, i32 20)
  %add1956 = add i32 %add1939, %38
  %add1958 = add i32 %add1956, %or.i3547
  %xor1961 = xor i32 %add1958, %or.i3546
  %or.i3548 = tail call i32 @llvm.fshl.i32(i32 %xor1961, i32 %xor1961, i32 24)
  %add1966 = add i32 %or.i3548, %add1947
  %xor1969 = xor i32 %add1966, %or.i3547
  %or.i3549 = tail call i32 @llvm.fshl.i32(i32 %xor1969, i32 %xor1969, i32 25)
  %add1978 = add i32 %or.i3525, %25
  %add1980 = add i32 %add1978, %add1835
  %xor1983 = xor i32 %add1980, %or.i3532
  %or.i3550 = tail call i32 @llvm.fshl.i32(i32 %xor1983, i32 %xor1983, i32 16)
  %add1988 = add i32 %or.i3550, %add1761
  %xor1991 = xor i32 %add1988, %or.i3525
  %or.i3551 = tail call i32 @llvm.fshl.i32(i32 %xor1991, i32 %xor1991, i32 20)
  %add1997 = add i32 %add1980, %33
  %add1999 = add i32 %add1997, %or.i3551
  %xor2002 = xor i32 %add1999, %or.i3550
  %or.i3552 = tail call i32 @llvm.fshl.i32(i32 %xor2002, i32 %xor2002, i32 24)
  %add2007 = add i32 %or.i3552, %add1988
  %xor2010 = xor i32 %add2007, %or.i3551
  %or.i3553 = tail call i32 @llvm.fshl.i32(i32 %xor2010, i32 %xor2010, i32 25)
  %add2022 = add i32 %add1876, %36
  %add2024 = add i32 %add2022, %or.i3553
  %xor2027 = xor i32 %add2024, %or.i3544
  %or.i3554 = tail call i32 @llvm.fshl.i32(i32 %xor2027, i32 %xor2027, i32 16)
  %add2032 = add i32 %add1966, %or.i3554
  %xor2035 = xor i32 %add2032, %or.i3553
  %or.i3555 = tail call i32 @llvm.fshl.i32(i32 %xor2035, i32 %xor2035, i32 20)
  %add2041 = add i32 %add2024, %29
  %add2043 = add i32 %add2041, %or.i3555
  %xor2046 = xor i32 %add2043, %or.i3554
  %or.i3556 = tail call i32 @llvm.fshl.i32(i32 %xor2046, i32 %xor2046, i32 24)
  %add2051 = add i32 %or.i3556, %add2032
  %xor2054 = xor i32 %add2051, %or.i3555
  %or.i3557 = tail call i32 @llvm.fshl.i32(i32 %xor2054, i32 %xor2054, i32 25)
  %add2063 = add i32 %add1917, %25
  %add2065 = add i32 %add2063, %or.i3541
  %xor2068 = xor i32 %or.i3548, %add2065
  %or.i3558 = tail call i32 @llvm.fshl.i32(i32 %xor2068, i32 %xor2068, i32 16)
  %add2073 = add i32 %or.i3558, %add2007
  %xor2076 = xor i32 %add2073, %or.i3541
  %or.i3559 = tail call i32 @llvm.fshl.i32(i32 %xor2076, i32 %xor2076, i32 20)
  %add2082 = add i32 %add2065, %39
  %add2084 = add i32 %add2082, %or.i3559
  %xor2087 = xor i32 %add2084, %or.i3558
  %or.i3560 = tail call i32 @llvm.fshl.i32(i32 %xor2087, i32 %xor2087, i32 24)
  %add2092 = add i32 %or.i3560, %add2073
  %xor2095 = xor i32 %add2092, %or.i3559
  %or.i3561 = tail call i32 @llvm.fshl.i32(i32 %xor2095, i32 %xor2095, i32 25)
  %add2104 = add i32 %or.i3545, %38
  %add2106 = add i32 %add2104, %add1958
  %xor2109 = xor i32 %add2106, %or.i3552
  %or.i3562 = tail call i32 @llvm.fshl.i32(i32 %xor2109, i32 %xor2109, i32 16)
  %add2114 = add i32 %or.i3562, %add1884
  %xor2117 = xor i32 %add2114, %or.i3545
  %or.i3563 = tail call i32 @llvm.fshl.i32(i32 %xor2117, i32 %xor2117, i32 20)
  %add2123 = add i32 %add2106, %37
  %add2125 = add i32 %add2123, %or.i3563
  %xor2128 = xor i32 %add2125, %or.i3562
  %or.i3564 = tail call i32 @llvm.fshl.i32(i32 %xor2128, i32 %xor2128, i32 24)
  %add2133 = add i32 %or.i3564, %add2114
  %xor2136 = xor i32 %add2133, %or.i3563
  %or.i3565 = tail call i32 @llvm.fshl.i32(i32 %xor2136, i32 %xor2136, i32 25)
  %add2145 = add i32 %add1999, %28
  %add2147 = add i32 %add2145, %or.i3549
  %xor2150 = xor i32 %add2147, %or.i3540
  %or.i3566 = tail call i32 @llvm.fshl.i32(i32 %xor2150, i32 %xor2150, i32 16)
  %add2155 = add i32 %or.i3566, %add1925
  %xor2158 = xor i32 %add2155, %or.i3549
  %or.i3567 = tail call i32 @llvm.fshl.i32(i32 %xor2158, i32 %xor2158, i32 20)
  %add2164 = add i32 %add2147, %34
  %add2166 = add i32 %add2164, %or.i3567
  %xor2169 = xor i32 %add2166, %or.i3566
  %or.i3568 = tail call i32 @llvm.fshl.i32(i32 %xor2169, i32 %xor2169, i32 24)
  %add2174 = add i32 %or.i3568, %add2155
  %xor2177 = xor i32 %add2174, %or.i3567
  %or.i3569 = tail call i32 @llvm.fshl.i32(i32 %xor2177, i32 %xor2177, i32 25)
  %add2186 = add i32 %add2043, %24
  %add2188 = add i32 %add2186, %or.i3561
  %xor2191 = xor i32 %or.i3568, %add2188
  %or.i3570 = tail call i32 @llvm.fshl.i32(i32 %xor2191, i32 %xor2191, i32 16)
  %add2196 = add i32 %or.i3570, %add2133
  %xor2199 = xor i32 %add2196, %or.i3561
  %or.i3571 = tail call i32 @llvm.fshl.i32(i32 %xor2199, i32 %xor2199, i32 20)
  %add2205 = add i32 %add2188, %31
  %add2207 = add i32 %add2205, %or.i3571
  %xor2210 = xor i32 %add2207, %or.i3570
  %or.i3572 = tail call i32 @llvm.fshl.i32(i32 %xor2210, i32 %xor2210, i32 24)
  %add2215 = add i32 %or.i3572, %add2196
  %xor2218 = xor i32 %add2215, %or.i3571
  %or.i3573 = tail call i32 @llvm.fshl.i32(i32 %xor2218, i32 %xor2218, i32 25)
  %add2227 = add i32 %add2084, %30
  %add2229 = add i32 %add2227, %or.i3565
  %xor2232 = xor i32 %add2229, %or.i3556
  %or.i3574 = tail call i32 @llvm.fshl.i32(i32 %xor2232, i32 %xor2232, i32 16)
  %add2237 = add i32 %add2174, %or.i3574
  %xor2240 = xor i32 %add2237, %or.i3565
  %or.i3575 = tail call i32 @llvm.fshl.i32(i32 %xor2240, i32 %xor2240, i32 20)
  %add2246 = add i32 %add2229, %27
  %add2248 = add i32 %add2246, %or.i3575
  %xor2251 = xor i32 %add2248, %or.i3574
  %or.i3576 = tail call i32 @llvm.fshl.i32(i32 %xor2251, i32 %xor2251, i32 24)
  %add2256 = add i32 %or.i3576, %add2237
  %xor2259 = xor i32 %add2256, %or.i3575
  %or.i3577 = tail call i32 @llvm.fshl.i32(i32 %xor2259, i32 %xor2259, i32 25)
  %add2268 = add i32 %add2125, %33
  %add2270 = add i32 %add2268, %or.i3569
  %xor2273 = xor i32 %add2270, %or.i3560
  %or.i3578 = tail call i32 @llvm.fshl.i32(i32 %xor2273, i32 %xor2273, i32 16)
  %add2278 = add i32 %or.i3578, %add2051
  %xor2281 = xor i32 %add2278, %or.i3569
  %or.i3579 = tail call i32 @llvm.fshl.i32(i32 %xor2281, i32 %xor2281, i32 20)
  %add2287 = add i32 %add2270, %26
  %add2289 = add i32 %add2287, %or.i3579
  %xor2292 = xor i32 %add2289, %or.i3578
  %or.i3580 = tail call i32 @llvm.fshl.i32(i32 %xor2292, i32 %xor2292, i32 24)
  %add2297 = add i32 %or.i3580, %add2278
  %xor2300 = xor i32 %add2297, %or.i3579
  %or.i3581 = tail call i32 @llvm.fshl.i32(i32 %xor2300, i32 %xor2300, i32 25)
  %add2309 = add i32 %or.i3557, %32
  %add2311 = add i32 %add2309, %add2166
  %xor2314 = xor i32 %add2311, %or.i3564
  %or.i3582 = tail call i32 @llvm.fshl.i32(i32 %xor2314, i32 %xor2314, i32 16)
  %add2319 = add i32 %or.i3582, %add2092
  %xor2322 = xor i32 %add2319, %or.i3557
  %or.i3583 = tail call i32 @llvm.fshl.i32(i32 %xor2322, i32 %xor2322, i32 20)
  %add2328 = add i32 %add2311, %35
  %add2330 = add i32 %add2328, %or.i3583
  %xor2333 = xor i32 %add2330, %or.i3582
  %or.i3584 = tail call i32 @llvm.fshl.i32(i32 %xor2333, i32 %xor2333, i32 24)
  %add2338 = add i32 %or.i3584, %add2319
  %xor2341 = xor i32 %add2338, %or.i3583
  %or.i3585 = tail call i32 @llvm.fshl.i32(i32 %xor2341, i32 %xor2341, i32 25)
  %add2353 = add i32 %add2207, %37
  %add2355 = add i32 %add2353, %or.i3585
  %xor2358 = xor i32 %add2355, %or.i3576
  %or.i3586 = tail call i32 @llvm.fshl.i32(i32 %xor2358, i32 %xor2358, i32 16)
  %add2363 = add i32 %add2297, %or.i3586
  %xor2366 = xor i32 %add2363, %or.i3585
  %or.i3587 = tail call i32 @llvm.fshl.i32(i32 %xor2366, i32 %xor2366, i32 20)
  %add2372 = add i32 %add2355, %35
  %add2374 = add i32 %add2372, %or.i3587
  %xor2377 = xor i32 %add2374, %or.i3586
  %or.i3588 = tail call i32 @llvm.fshl.i32(i32 %xor2377, i32 %xor2377, i32 24)
  %add2382 = add i32 %or.i3588, %add2363
  %xor2385 = xor i32 %add2382, %or.i3587
  %or.i3589 = tail call i32 @llvm.fshl.i32(i32 %xor2385, i32 %xor2385, i32 25)
  %add2394 = add i32 %or.i3573, %31
  %add2396 = add i32 %add2394, %add2248
  %xor2399 = xor i32 %or.i3580, %add2396
  %or.i3590 = tail call i32 @llvm.fshl.i32(i32 %xor2399, i32 %xor2399, i32 16)
  %add2404 = add i32 %add2338, %or.i3590
  %xor2407 = xor i32 %or.i3573, %add2404
  %or.i3591 = tail call i32 @llvm.fshl.i32(i32 %xor2407, i32 %xor2407, i32 20)
  %add2413 = add i32 %or.i3591, %38
  %add2415 = add i32 %add2413, %add2396
  %xor2418 = xor i32 %or.i3590, %add2415
  %or.i3592 = tail call i32 @llvm.fshl.i32(i32 %xor2418, i32 %xor2418, i32 24)
  %add2423 = add i32 %add2404, %or.i3592
  %xor2426 = xor i32 %or.i3591, %add2423
  %or.i3593 = tail call i32 @llvm.fshl.i32(i32 %xor2426, i32 %xor2426, i32 25)
  %add2435 = add i32 %or.i3577, %36
  %add2437 = add i32 %add2435, %add2289
  %xor2440 = xor i32 %or.i3584, %add2437
  %or.i3594 = tail call i32 @llvm.fshl.i32(i32 %xor2440, i32 %xor2440, i32 16)
  %add2445 = add i32 %add2215, %or.i3594
  %xor2448 = xor i32 %or.i3577, %add2445
  %or.i3595 = tail call i32 @llvm.fshl.i32(i32 %xor2448, i32 %xor2448, i32 20)
  %add2454 = add i32 %or.i3595, %25
  %add2456 = add i32 %add2454, %add2437
  %xor2459 = xor i32 %or.i3594, %add2456
  %or.i3596 = tail call i32 @llvm.fshl.i32(i32 %xor2459, i32 %xor2459, i32 24)
  %add2464 = add i32 %add2445, %or.i3596
  %xor2467 = xor i32 %or.i3595, %add2464
  %or.i3597 = tail call i32 @llvm.fshl.i32(i32 %xor2467, i32 %xor2467, i32 25)
  %add2476 = add i32 %or.i3581, %27
  %add2478 = add i32 %add2476, %add2330
  %xor2481 = xor i32 %or.i3572, %add2478
  %or.i3598 = tail call i32 @llvm.fshl.i32(i32 %xor2481, i32 %xor2481, i32 16)
  %add2486 = add i32 %add2256, %or.i3598
  %xor2489 = xor i32 %or.i3581, %add2486
  %or.i3599 = tail call i32 @llvm.fshl.i32(i32 %xor2489, i32 %xor2489, i32 20)
  %add2495 = add i32 %or.i3599, %33
  %add2497 = add i32 %add2495, %add2478
  %xor2500 = xor i32 %or.i3598, %add2497
  %or.i3600 = tail call i32 @llvm.fshl.i32(i32 %xor2500, i32 %xor2500, i32 24)
  %add2505 = add i32 %add2486, %or.i3600
  %xor2508 = xor i32 %or.i3599, %add2505
  %or.i3601 = tail call i32 @llvm.fshl.i32(i32 %xor2508, i32 %xor2508, i32 25)
  %add2517 = add i32 %or.i3593, %29
  %add2519 = add i32 %add2517, %add2374
  %xor2522 = xor i32 %or.i3600, %add2519
  %or.i3602 = tail call i32 @llvm.fshl.i32(i32 %xor2522, i32 %xor2522, i32 16)
  %add2527 = add i32 %add2464, %or.i3602
  %xor2530 = xor i32 %or.i3593, %add2527
  %or.i3603 = tail call i32 @llvm.fshl.i32(i32 %xor2530, i32 %xor2530, i32 20)
  %add2536 = add i32 %or.i3603, %24
  %add2538 = add i32 %add2536, %add2519
  %xor2541 = xor i32 %or.i3602, %add2538
  %or.i3604 = tail call i32 @llvm.fshl.i32(i32 %xor2541, i32 %xor2541, i32 24)
  %add2546 = add i32 %add2527, %or.i3604
  %xor2549 = xor i32 %or.i3603, %add2546
  %or.i3605 = tail call i32 @llvm.fshl.i32(i32 %xor2549, i32 %xor2549, i32 25)
  %add2558 = add i32 %or.i3597, %39
  %add2560 = add i32 %add2558, %add2415
  %xor2563 = xor i32 %or.i3588, %add2560
  %or.i3606 = tail call i32 @llvm.fshl.i32(i32 %xor2563, i32 %xor2563, i32 16)
  %add2568 = add i32 %add2505, %or.i3606
  %xor2571 = xor i32 %or.i3597, %add2568
  %or.i3607 = tail call i32 @llvm.fshl.i32(i32 %xor2571, i32 %xor2571, i32 20)
  %add2577 = add i32 %or.i3607, %28
  %add2579 = add i32 %add2577, %add2560
  %xor2582 = xor i32 %or.i3606, %add2579
  %or.i3608 = tail call i32 @llvm.fshl.i32(i32 %xor2582, i32 %xor2582, i32 24)
  %add2587 = add i32 %add2568, %or.i3608
  %xor2590 = xor i32 %or.i3607, %add2587
  %or.i3609 = tail call i32 @llvm.fshl.i32(i32 %xor2590, i32 %xor2590, i32 25)
  %add2599 = add i32 %or.i3601, %32
  %add2601 = add i32 %add2599, %add2456
  %xor2604 = xor i32 %or.i3592, %add2601
  %or.i3610 = tail call i32 @llvm.fshl.i32(i32 %xor2604, i32 %xor2604, i32 16)
  %add2609 = add i32 %add2382, %or.i3610
  %xor2612 = xor i32 %or.i3601, %add2609
  %or.i3611 = tail call i32 @llvm.fshl.i32(i32 %xor2612, i32 %xor2612, i32 20)
  %add2618 = add i32 %or.i3611, %30
  %add2620 = add i32 %add2618, %add2601
  %xor2623 = xor i32 %or.i3610, %add2620
  %or.i3612 = tail call i32 @llvm.fshl.i32(i32 %xor2623, i32 %xor2623, i32 24)
  %add2628 = add i32 %add2609, %or.i3612
  %xor2631 = xor i32 %or.i3611, %add2628
  %or.i3613 = tail call i32 @llvm.fshl.i32(i32 %xor2631, i32 %xor2631, i32 25)
  %add2640 = add i32 %or.i3589, %26
  %add2642 = add i32 %add2640, %add2497
  %xor2645 = xor i32 %or.i3596, %add2642
  %or.i3614 = tail call i32 @llvm.fshl.i32(i32 %xor2645, i32 %xor2645, i32 16)
  %add2650 = add i32 %add2423, %or.i3614
  %xor2653 = xor i32 %or.i3589, %add2650
  %or.i3615 = tail call i32 @llvm.fshl.i32(i32 %xor2653, i32 %xor2653, i32 20)
  %add2659 = add i32 %or.i3615, %34
  %add2661 = add i32 %add2659, %add2642
  %xor2664 = xor i32 %or.i3614, %add2661
  %or.i3616 = tail call i32 @llvm.fshl.i32(i32 %xor2664, i32 %xor2664, i32 24)
  %add2669 = add i32 %add2650, %or.i3616
  %xor2672 = xor i32 %or.i3615, %add2669
  %or.i3617 = tail call i32 @llvm.fshl.i32(i32 %xor2672, i32 %xor2672, i32 25)
  %add2684 = add i32 %or.i3617, %30
  %add2686 = add i32 %add2684, %add2538
  %xor2689 = xor i32 %or.i3608, %add2686
  %or.i3618 = tail call i32 @llvm.fshl.i32(i32 %xor2689, i32 %xor2689, i32 16)
  %add2694 = add i32 %add2628, %or.i3618
  %xor2697 = xor i32 %or.i3617, %add2694
  %or.i3619 = tail call i32 @llvm.fshl.i32(i32 %xor2697, i32 %xor2697, i32 20)
  %add2703 = add i32 %or.i3619, %39
  %add2705 = add i32 %add2703, %add2686
  %xor2708 = xor i32 %or.i3618, %add2705
  %or.i3620 = tail call i32 @llvm.fshl.i32(i32 %xor2708, i32 %xor2708, i32 24)
  %add2713 = add i32 %add2694, %or.i3620
  %xor2716 = xor i32 %or.i3619, %add2713
  %or.i3621 = tail call i32 @llvm.fshl.i32(i32 %xor2716, i32 %xor2716, i32 25)
  %add2725 = add i32 %or.i3605, %38
  %add2727 = add i32 %add2725, %add2579
  %xor2730 = xor i32 %or.i3612, %add2727
  %or.i3622 = tail call i32 @llvm.fshl.i32(i32 %xor2730, i32 %xor2730, i32 16)
  %add2735 = add i32 %add2669, %or.i3622
  %xor2738 = xor i32 %or.i3605, %add2735
  %or.i3623 = tail call i32 @llvm.fshl.i32(i32 %xor2738, i32 %xor2738, i32 20)
  %add2744 = add i32 %or.i3623, %33
  %add2746 = add i32 %add2744, %add2727
  %xor2749 = xor i32 %or.i3622, %add2746
  %or.i3624 = tail call i32 @llvm.fshl.i32(i32 %xor2749, i32 %xor2749, i32 24)
  %add2754 = add i32 %add2735, %or.i3624
  %xor2757 = xor i32 %or.i3623, %add2754
  %or.i3625 = tail call i32 @llvm.fshl.i32(i32 %xor2757, i32 %xor2757, i32 25)
  %add2766 = add i32 %or.i3609, %35
  %add2768 = add i32 %add2766, %add2620
  %xor2771 = xor i32 %or.i3616, %add2768
  %or.i3626 = tail call i32 @llvm.fshl.i32(i32 %xor2771, i32 %xor2771, i32 16)
  %add2776 = add i32 %add2546, %or.i3626
  %xor2779 = xor i32 %or.i3609, %add2776
  %or.i3627 = tail call i32 @llvm.fshl.i32(i32 %xor2779, i32 %xor2779, i32 20)
  %add2785 = add i32 %or.i3627, %27
  %add2787 = add i32 %add2785, %add2768
  %xor2790 = xor i32 %or.i3626, %add2787
  %or.i3628 = tail call i32 @llvm.fshl.i32(i32 %xor2790, i32 %xor2790, i32 24)
  %add2795 = add i32 %add2776, %or.i3628
  %xor2798 = xor i32 %or.i3627, %add2795
  %or.i3629 = tail call i32 @llvm.fshl.i32(i32 %xor2798, i32 %xor2798, i32 25)
  %add2807 = add i32 %or.i3613, %24
  %add2809 = add i32 %add2807, %add2661
  %xor2812 = xor i32 %or.i3604, %add2809
  %or.i3630 = tail call i32 @llvm.fshl.i32(i32 %xor2812, i32 %xor2812, i32 16)
  %add2817 = add i32 %add2587, %or.i3630
  %xor2820 = xor i32 %or.i3613, %add2817
  %or.i3631 = tail call i32 @llvm.fshl.i32(i32 %xor2820, i32 %xor2820, i32 20)
  %add2826 = add i32 %or.i3631, %32
  %add2828 = add i32 %add2826, %add2809
  %xor2831 = xor i32 %or.i3630, %add2828
  %or.i3632 = tail call i32 @llvm.fshl.i32(i32 %xor2831, i32 %xor2831, i32 24)
  %add2836 = add i32 %add2817, %or.i3632
  %xor2839 = xor i32 %or.i3631, %add2836
  %or.i3633 = tail call i32 @llvm.fshl.i32(i32 %xor2839, i32 %xor2839, i32 25)
  %add2848 = add i32 %or.i3625, %36
  %add2850 = add i32 %add2848, %add2705
  %xor2853 = xor i32 %or.i3632, %add2850
  %or.i3634 = tail call i32 @llvm.fshl.i32(i32 %xor2853, i32 %xor2853, i32 16)
  %add2858 = add i32 %add2795, %or.i3634
  %xor2861 = xor i32 %or.i3625, %add2858
  %or.i3635 = tail call i32 @llvm.fshl.i32(i32 %xor2861, i32 %xor2861, i32 20)
  %add2867 = add i32 %or.i3635, %26
  %add2869 = add i32 %add2867, %add2850
  %xor2872 = xor i32 %or.i3634, %add2869
  %or.i3636 = tail call i32 @llvm.fshl.i32(i32 %xor2872, i32 %xor2872, i32 24)
  %add2877 = add i32 %add2858, %or.i3636
  %xor2880 = xor i32 %or.i3635, %add2877
  %or.i3637 = tail call i32 @llvm.fshl.i32(i32 %xor2880, i32 %xor2880, i32 25)
  %add2889 = add i32 %or.i3629, %37
  %add2891 = add i32 %add2889, %add2746
  %xor2894 = xor i32 %or.i3620, %add2891
  %or.i3638 = tail call i32 @llvm.fshl.i32(i32 %xor2894, i32 %xor2894, i32 16)
  %add2899 = add i32 %add2836, %or.i3638
  %xor2902 = xor i32 %or.i3629, %add2899
  %or.i3639 = tail call i32 @llvm.fshl.i32(i32 %xor2902, i32 %xor2902, i32 20)
  %add2908 = add i32 %or.i3639, %31
  %add2910 = add i32 %add2908, %add2891
  %xor2913 = xor i32 %or.i3638, %add2910
  %or.i3640 = tail call i32 @llvm.fshl.i32(i32 %xor2913, i32 %xor2913, i32 24)
  %add2918 = add i32 %add2899, %or.i3640
  %xor2921 = xor i32 %or.i3639, %add2918
  %or.i3641 = tail call i32 @llvm.fshl.i32(i32 %xor2921, i32 %xor2921, i32 25)
  %add2930 = add i32 %or.i3633, %25
  %add2932 = add i32 %add2930, %add2787
  %xor2935 = xor i32 %or.i3624, %add2932
  %or.i3642 = tail call i32 @llvm.fshl.i32(i32 %xor2935, i32 %xor2935, i32 16)
  %add2940 = add i32 %add2713, %or.i3642
  %xor2943 = xor i32 %or.i3633, %add2940
  %or.i3643 = tail call i32 @llvm.fshl.i32(i32 %xor2943, i32 %xor2943, i32 20)
  %add2949 = add i32 %or.i3643, %28
  %add2951 = add i32 %add2949, %add2932
  %xor2954 = xor i32 %or.i3642, %add2951
  %or.i3644 = tail call i32 @llvm.fshl.i32(i32 %xor2954, i32 %xor2954, i32 24)
  %add2959 = add i32 %add2940, %or.i3644
  %xor2962 = xor i32 %or.i3643, %add2959
  %or.i3645 = tail call i32 @llvm.fshl.i32(i32 %xor2962, i32 %xor2962, i32 25)
  %add2971 = add i32 %or.i3621, %34
  %add2973 = add i32 %add2971, %add2828
  %xor2976 = xor i32 %or.i3628, %add2973
  %or.i3646 = tail call i32 @llvm.fshl.i32(i32 %xor2976, i32 %xor2976, i32 16)
  %add2981 = add i32 %add2754, %or.i3646
  %xor2984 = xor i32 %or.i3621, %add2981
  %or.i3647 = tail call i32 @llvm.fshl.i32(i32 %xor2984, i32 %xor2984, i32 20)
  %add2990 = add i32 %or.i3647, %29
  %add2992 = add i32 %add2990, %add2973
  %xor2995 = xor i32 %or.i3646, %add2992
  %or.i3648 = tail call i32 @llvm.fshl.i32(i32 %xor2995, i32 %xor2995, i32 24)
  %add3000 = add i32 %add2981, %or.i3648
  %xor3003 = xor i32 %or.i3647, %add3000
  %or.i3649 = tail call i32 @llvm.fshl.i32(i32 %xor3003, i32 %xor3003, i32 25)
  %add3015 = add i32 %or.i3649, %34
  %add3017 = add i32 %add3015, %add2869
  %xor3020 = xor i32 %or.i3640, %add3017
  %or.i3650 = tail call i32 @llvm.fshl.i32(i32 %xor3020, i32 %xor3020, i32 16)
  %add3025 = add i32 %add2959, %or.i3650
  %xor3028 = xor i32 %or.i3649, %add3025
  %or.i3651 = tail call i32 @llvm.fshl.i32(i32 %xor3028, i32 %xor3028, i32 20)
  %add3034 = add i32 %or.i3651, %26
  %add3036 = add i32 %add3034, %add3017
  %xor3039 = xor i32 %or.i3650, %add3036
  %or.i3652 = tail call i32 @llvm.fshl.i32(i32 %xor3039, i32 %xor3039, i32 24)
  %add3044 = add i32 %add3025, %or.i3652
  %xor3047 = xor i32 %or.i3651, %add3044
  %or.i3653 = tail call i32 @llvm.fshl.i32(i32 %xor3047, i32 %xor3047, i32 25)
  %add3056 = add i32 %or.i3637, %32
  %add3058 = add i32 %add3056, %add2910
  %xor3061 = xor i32 %or.i3644, %add3058
  %or.i3654 = tail call i32 @llvm.fshl.i32(i32 %xor3061, i32 %xor3061, i32 16)
  %add3066 = add i32 %add3000, %or.i3654
  %xor3069 = xor i32 %or.i3637, %add3066
  %or.i3655 = tail call i32 @llvm.fshl.i32(i32 %xor3069, i32 %xor3069, i32 20)
  %add3075 = add i32 %or.i3655, %28
  %add3077 = add i32 %add3075, %add3058
  %xor3080 = xor i32 %or.i3654, %add3077
  %or.i3656 = tail call i32 @llvm.fshl.i32(i32 %xor3080, i32 %xor3080, i32 24)
  %add3085 = add i32 %add3066, %or.i3656
  %xor3088 = xor i32 %or.i3655, %add3085
  %or.i3657 = tail call i32 @llvm.fshl.i32(i32 %xor3088, i32 %xor3088, i32 25)
  %add3097 = add i32 %or.i3641, %31
  %add3099 = add i32 %add3097, %add2951
  %xor3102 = xor i32 %or.i3648, %add3099
  %or.i3658 = tail call i32 @llvm.fshl.i32(i32 %xor3102, i32 %xor3102, i32 16)
  %add3107 = add i32 %add2877, %or.i3658
  %xor3110 = xor i32 %or.i3641, %add3107
  %or.i3659 = tail call i32 @llvm.fshl.i32(i32 %xor3110, i32 %xor3110, i32 20)
  %add3116 = add i32 %or.i3659, %30
  %add3118 = add i32 %add3116, %add3099
  %xor3121 = xor i32 %or.i3658, %add3118
  %or.i3660 = tail call i32 @llvm.fshl.i32(i32 %xor3121, i32 %xor3121, i32 24)
  %add3126 = add i32 %add3107, %or.i3660
  %xor3129 = xor i32 %or.i3659, %add3126
  %or.i3661 = tail call i32 @llvm.fshl.i32(i32 %xor3129, i32 %xor3129, i32 25)
  %add3138 = add i32 %or.i3645, %25
  %add3140 = add i32 %add3138, %add2992
  %xor3143 = xor i32 %or.i3636, %add3140
  %or.i3662 = tail call i32 @llvm.fshl.i32(i32 %xor3143, i32 %xor3143, i32 16)
  %add3148 = add i32 %add2918, %or.i3662
  %xor3151 = xor i32 %or.i3645, %add3148
  %or.i3663 = tail call i32 @llvm.fshl.i32(i32 %xor3151, i32 %xor3151, i32 20)
  %add3157 = add i32 %or.i3663, %29
  %add3159 = add i32 %add3157, %add3140
  %xor3162 = xor i32 %or.i3662, %add3159
  %or.i3664 = tail call i32 @llvm.fshl.i32(i32 %xor3162, i32 %xor3162, i32 24)
  %add3167 = add i32 %add3148, %or.i3664
  %xor3170 = xor i32 %or.i3663, %add3167
  %or.i3665 = tail call i32 @llvm.fshl.i32(i32 %xor3170, i32 %xor3170, i32 25)
  %add3179 = add i32 %or.i3657, %39
  %add3181 = add i32 %add3179, %add3036
  %xor3184 = xor i32 %or.i3664, %add3181
  %or.i3666 = tail call i32 @llvm.fshl.i32(i32 %xor3184, i32 %xor3184, i32 16)
  %add3189 = add i32 %add3126, %or.i3666
  %xor3192 = xor i32 %or.i3657, %add3189
  %or.i3667 = tail call i32 @llvm.fshl.i32(i32 %xor3192, i32 %xor3192, i32 20)
  %add3198 = add i32 %or.i3667, %35
  %add3200 = add i32 %add3198, %add3181
  %xor3203 = xor i32 %or.i3666, %add3200
  %or.i3668 = tail call i32 @llvm.fshl.i32(i32 %xor3203, i32 %xor3203, i32 24)
  %add3208 = add i32 %add3189, %or.i3668
  %xor3211 = xor i32 %or.i3667, %add3208
  %or.i3669 = tail call i32 @llvm.fshl.i32(i32 %xor3211, i32 %xor3211, i32 25)
  %add3220 = add i32 %or.i3661, %33
  %add3222 = add i32 %add3220, %add3077
  %xor3225 = xor i32 %or.i3652, %add3222
  %or.i3670 = tail call i32 @llvm.fshl.i32(i32 %xor3225, i32 %xor3225, i32 16)
  %add3230 = add i32 %add3167, %or.i3670
  %xor3233 = xor i32 %or.i3661, %add3230
  %or.i3671 = tail call i32 @llvm.fshl.i32(i32 %xor3233, i32 %xor3233, i32 20)
  %add3239 = add i32 %or.i3671, %38
  %add3241 = add i32 %add3239, %add3222
  %xor3244 = xor i32 %or.i3670, %add3241
  %or.i3672 = tail call i32 @llvm.fshl.i32(i32 %xor3244, i32 %xor3244, i32 24)
  %add3249 = add i32 %add3230, %or.i3672
  %xor3252 = xor i32 %or.i3671, %add3249
  %or.i3673 = tail call i32 @llvm.fshl.i32(i32 %xor3252, i32 %xor3252, i32 25)
  %add3261 = add i32 %or.i3665, %27
  %add3263 = add i32 %add3261, %add3118
  %xor3266 = xor i32 %or.i3656, %add3263
  %or.i3674 = tail call i32 @llvm.fshl.i32(i32 %xor3266, i32 %xor3266, i32 16)
  %add3271 = add i32 %add3044, %or.i3674
  %xor3274 = xor i32 %or.i3665, %add3271
  %or.i3675 = tail call i32 @llvm.fshl.i32(i32 %xor3274, i32 %xor3274, i32 20)
  %add3280 = add i32 %or.i3675, %36
  %add3282 = add i32 %add3280, %add3263
  %xor3285 = xor i32 %or.i3674, %add3282
  %or.i3676 = tail call i32 @llvm.fshl.i32(i32 %xor3285, i32 %xor3285, i32 24)
  %add3290 = add i32 %add3271, %or.i3676
  %xor3293 = xor i32 %or.i3675, %add3290
  %or.i3677 = tail call i32 @llvm.fshl.i32(i32 %xor3293, i32 %xor3293, i32 25)
  %add3302 = add i32 %or.i3653, %37
  %add3304 = add i32 %add3302, %add3159
  %xor3307 = xor i32 %or.i3660, %add3304
  %or.i3678 = tail call i32 @llvm.fshl.i32(i32 %xor3307, i32 %xor3307, i32 16)
  %add3312 = add i32 %add3085, %or.i3678
  %xor3315 = xor i32 %or.i3653, %add3312
  %or.i3679 = tail call i32 @llvm.fshl.i32(i32 %xor3315, i32 %xor3315, i32 20)
  %add3321 = add i32 %or.i3679, %24
  %add3323 = add i32 %add3321, %add3304
  %xor3326 = xor i32 %or.i3678, %add3323
  %or.i3680 = tail call i32 @llvm.fshl.i32(i32 %xor3326, i32 %xor3326, i32 24)
  %add3331 = add i32 %add3312, %or.i3680
  %xor3334 = xor i32 %or.i3679, %add3331
  %or.i3681 = tail call i32 @llvm.fshl.i32(i32 %xor3334, i32 %xor3334, i32 25)
  %xor3345 = xor i32 %add3290, %add3200
  %52 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %state, align 4
  %xor3348 = xor i32 %xor3345, %53
  store i32 %xor3348, ptr %state, align 4
  %xor3345.1 = xor i32 %add3331, %add3241
  %54 = ptrtoint ptr %v.sroa.56.0.state.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %v.sroa.56.0.state.sroa_idx, align 4
  %xor3348.1 = xor i32 %xor3345.1, %55
  store i32 %xor3348.1, ptr %v.sroa.56.0.state.sroa_idx, align 4
  %xor3345.2 = xor i32 %add3208, %add3282
  %56 = ptrtoint ptr %v.sroa.110.0.state.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %v.sroa.110.0.state.sroa_idx, align 4
  %xor3348.2 = xor i32 %xor3345.2, %57
  store i32 %xor3348.2, ptr %v.sroa.110.0.state.sroa_idx, align 4
  %xor3345.3 = xor i32 %add3249, %add3323
  %58 = ptrtoint ptr %v.sroa.164.0.state.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %v.sroa.164.0.state.sroa_idx, align 4
  %xor3348.3 = xor i32 %xor3345.3, %59
  store i32 %xor3348.3, ptr %v.sroa.164.0.state.sroa_idx, align 4
  %xor3345.4 = xor i32 %or.i3672, %or.i3681
  %60 = ptrtoint ptr %v.sroa.218.0.state.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %v.sroa.218.0.state.sroa_idx, align 4
  %xor3348.4 = xor i32 %xor3345.4, %61
  store i32 %xor3348.4, ptr %v.sroa.218.0.state.sroa_idx, align 4
  %xor3345.5 = xor i32 %or.i3676, %or.i3669
  %62 = ptrtoint ptr %v.sroa.273.0.state.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %v.sroa.273.0.state.sroa_idx, align 4
  %xor3348.5 = xor i32 %xor3345.5, %63
  store i32 %xor3348.5, ptr %v.sroa.273.0.state.sroa_idx, align 4
  %xor3345.6 = xor i32 %or.i3680, %or.i3673
  %64 = ptrtoint ptr %v.sroa.333.0.state.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %v.sroa.333.0.state.sroa_idx, align 4
  %xor3348.6 = xor i32 %xor3345.6, %65
  store i32 %xor3348.6, ptr %v.sroa.333.0.state.sroa_idx, align 4
  %xor3345.7 = xor i32 %or.i3668, %or.i3677
  %66 = ptrtoint ptr %v.sroa.393.0.state.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %v.sroa.393.0.state.sroa_idx, align 4
  %xor3348.7 = xor i32 %xor3345.7, %67
  store i32 %xor3348.7, ptr %v.sroa.393.0.state.sroa_idx, align 4
  %add.ptr = getelementptr i8, ptr %block.addr.03995, i32 64
  %dec = add i32 %nblocks.addr.03994, -1
  %cmp.not = icmp eq i32 %dec, 0
  br i1 %cmp.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #4
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #4
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %entry.while.end_crit_edge
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #1

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #2

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load4_noabort(i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #3 {
  ret void
}

attributes #0 = { nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nounwind }
attributes #3 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #4 = { nomerge }

!llvm.asan.globals = !{!0, !2, !4, !6, !7, !9, !11}
!llvm.module.flags = !{!13, !14, !15, !16, !17, !18, !19, !20}
!llvm.ident = !{!21}

!0 = distinct !{null, !1, !"<string literal>", i1 false, i1 false}
!1 = !{!"../lib/crypto/blake2s-generic.c", i32 51, i32 2}
!2 = !{ptr @__ksymtab_blake2s_compress_generic, !3, !"__ksymtab_blake2s_compress_generic", i1 false, i1 false}
!3 = !{!"../lib/crypto/blake2s-generic.c", i32 111, i32 1}
!4 = !{ptr @__UNIQUE_ID_file173, !5, !"__UNIQUE_ID_file173", i1 false, i1 false}
!5 = !{!"../lib/crypto/blake2s-generic.c", i32 113, i32 1}
!6 = !{ptr @__UNIQUE_ID_license174, !5, !"__UNIQUE_ID_license174", i1 false, i1 false}
!7 = !{ptr @__UNIQUE_ID_description175, !8, !"__UNIQUE_ID_description175", i1 false, i1 false}
!8 = !{!"../lib/crypto/blake2s-generic.c", i32 114, i32 1}
!9 = !{ptr @__UNIQUE_ID_author176, !10, !"__UNIQUE_ID_author176", i1 false, i1 false}
!10 = !{!"../lib/crypto/blake2s-generic.c", i32 115, i32 1}
!11 = distinct !{null, !12, !"blake2s_sigma", i1 false, i1 false}
!12 = !{!"../lib/crypto/blake2s-generic.c", i32 20, i32 17}
!13 = !{i32 1, !"wchar_size", i32 2}
!14 = !{i32 1, !"min_enum_size", i32 4}
!15 = !{i32 8, !"branch-target-enforcement", i32 0}
!16 = !{i32 8, !"sign-return-address", i32 0}
!17 = !{i32 8, !"sign-return-address-all", i32 0}
!18 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!19 = !{i32 7, !"uwtable", i32 1}
!20 = !{i32 7, !"frame-pointer", i32 2}
!21 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
