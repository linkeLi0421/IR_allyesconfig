; ModuleID = '/llk/IR_all_yes/lib/test_stackinit.c_pt.bc'
source_filename = "../lib/test_stackinit.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.test_big_hole = type { i8, i8, i8, [61 x i8], i8, [63 x i8] }
%struct.test_small_hole = type { i32, i8, i32, i32 }
%struct.test_trailing_hole = type { ptr, ptr, ptr, i8 }
%struct.test_packed = type { i32, i32, i32, i32 }
%struct.test_user = type { i8, i32, ptr, i32 }

@__initcall__kmod_test_stackinit__171_508_test_stackinit_init6 = internal global ptr @test_stackinit_init, section ".initcall6.init", align 4
@__exitcall_test_stackinit_exit = internal global ptr @test_stackinit_exit, section ".exitcall.exit", align 4
@__UNIQUE_ID_file172 = internal constant [39 x i8] c"test_stackinit.file=lib/test_stackinit\00", section ".modinfo", align 1
@__UNIQUE_ID_license173 = internal constant [27 x i8] c"test_stackinit.license=GPL\00", section ".modinfo", align 1
@test_stackinit_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str, ptr @.str.1, ptr @.str.2, i32 502, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\016test_stackinit: all tests passed!\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"test_stackinit_init\00", [44 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"lib/test_stackinit.c\00", [43 x i8] zeroinitializer }, align 32
@test_stackinit_init._entry_ptr = internal global ptr @test_stackinit_init._entry, section ".printk_index", align 4
@test_stackinit_init._entry.3 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.4, ptr @.str.1, ptr @.str.2, i32 504, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\013test_stackinit: failures: %u\0A\00", [32 x i8] zeroinitializer }, align 32
@test_stackinit_init._entry_ptr.5 = internal global ptr @test_stackinit_init._entry.3, section ".printk_index", align 4
@check_buf = internal global { [128 x i8], [32 x i8] } zeroinitializer, align 32
@target_size = internal global { i32, [28 x i8] } zeroinitializer, align 32
@test_u8_zero._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.6, ptr @.str.7, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\013test_stackinit: u8_zero: leaf fill was not 0xFF!?\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"test_u8_zero\00", [19 x i8] zeroinitializer }, align 32
@test_u8_zero._entry_ptr = internal global ptr @test_u8_zero._entry, section ".printk_index", align 4
@fill_start = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@fill_size = internal global { i32, [28 x i8] } zeroinitializer, align 32
@target_start = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@test_u8_zero._entry.8 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.9, ptr @.str.7, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"\013test_stackinit: u8_zero: stack fill missed target!?\0A\00", [41 x i8] zeroinitializer }, align 32
@test_u8_zero._entry_ptr.10 = internal global ptr @test_u8_zero._entry.8, section ".printk_index", align 4
@test_u8_zero._entry.11 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.12, ptr @.str.7, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\013test_stackinit: u8_zero: fill %zu wide\0A\00", [54 x i8] zeroinitializer }, align 32
@test_u8_zero._entry_ptr.13 = internal global ptr @test_u8_zero._entry.11, section ".printk_index", align 4
@test_u8_zero._entry.14 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.15, ptr @.str.7, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\013test_stackinit: u8_zero: target offset by %d\0A\00", [48 x i8] zeroinitializer }, align 32
@test_u8_zero._entry_ptr.16 = internal global ptr @test_u8_zero._entry.14, section ".printk_index", align 4
@test_u8_zero._entry.17 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.18, ptr @.str.7, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"\016test_stackinit: u8_zero ok\0A\00", [34 x i8] zeroinitializer }, align 32
@test_u8_zero._entry_ptr.19 = internal global ptr @test_u8_zero._entry.17, section ".printk_index", align 4
@test_u8_zero._entry.20 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.21, ptr @.str.7, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\014test_stackinit: u8_zero %sFAIL (uninit bytes: %d)\0A\00", [43 x i8] zeroinitializer }, align 32
@test_u8_zero._entry_ptr.22 = internal global ptr @test_u8_zero._entry.20, section ".printk_index", align 4
@.str.23 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@forced_mask = internal global { i8, [31 x i8] } { i8 -1, [31 x i8] zeroinitializer }, align 32
@test_u16_zero._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.24, ptr @.str.25, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\013test_stackinit: u16_zero: leaf fill was not 0xFF!?\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"test_u16_zero\00", [18 x i8] zeroinitializer }, align 32
@test_u16_zero._entry_ptr = internal global ptr @test_u16_zero._entry, section ".printk_index", align 4
@test_u16_zero._entry.26 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.27, ptr @.str.25, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\013test_stackinit: u16_zero: stack fill missed target!?\0A\00", [40 x i8] zeroinitializer }, align 32
@test_u16_zero._entry_ptr.28 = internal global ptr @test_u16_zero._entry.26, section ".printk_index", align 4
@test_u16_zero._entry.29 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.30, ptr @.str.25, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\013test_stackinit: u16_zero: fill %zu wide\0A\00", [53 x i8] zeroinitializer }, align 32
@test_u16_zero._entry_ptr.31 = internal global ptr @test_u16_zero._entry.29, section ".printk_index", align 4
@test_u16_zero._entry.32 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.33, ptr @.str.25, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\013test_stackinit: u16_zero: target offset by %d\0A\00", [47 x i8] zeroinitializer }, align 32
@test_u16_zero._entry_ptr.34 = internal global ptr @test_u16_zero._entry.32, section ".printk_index", align 4
@test_u16_zero._entry.35 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.36, ptr @.str.25, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"\016test_stackinit: u16_zero ok\0A\00", [33 x i8] zeroinitializer }, align 32
@test_u16_zero._entry_ptr.37 = internal global ptr @test_u16_zero._entry.35, section ".printk_index", align 4
@test_u16_zero._entry.38 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.39, ptr @.str.25, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\014test_stackinit: u16_zero %sFAIL (uninit bytes: %d)\0A\00", [42 x i8] zeroinitializer }, align 32
@test_u16_zero._entry_ptr.40 = internal global ptr @test_u16_zero._entry.38, section ".printk_index", align 4
@test_u32_zero._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.41, ptr @.str.42, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\013test_stackinit: u32_zero: leaf fill was not 0xFF!?\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"test_u32_zero\00", [18 x i8] zeroinitializer }, align 32
@test_u32_zero._entry_ptr = internal global ptr @test_u32_zero._entry, section ".printk_index", align 4
@test_u32_zero._entry.43 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.44, ptr @.str.42, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\013test_stackinit: u32_zero: stack fill missed target!?\0A\00", [40 x i8] zeroinitializer }, align 32
@test_u32_zero._entry_ptr.45 = internal global ptr @test_u32_zero._entry.43, section ".printk_index", align 4
@test_u32_zero._entry.46 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.47, ptr @.str.42, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\013test_stackinit: u32_zero: fill %zu wide\0A\00", [53 x i8] zeroinitializer }, align 32
@test_u32_zero._entry_ptr.48 = internal global ptr @test_u32_zero._entry.46, section ".printk_index", align 4
@test_u32_zero._entry.49 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.50, ptr @.str.42, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\013test_stackinit: u32_zero: target offset by %d\0A\00", [47 x i8] zeroinitializer }, align 32
@test_u32_zero._entry_ptr.51 = internal global ptr @test_u32_zero._entry.49, section ".printk_index", align 4
@test_u32_zero._entry.52 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.53, ptr @.str.42, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"\016test_stackinit: u32_zero ok\0A\00", [33 x i8] zeroinitializer }, align 32
@test_u32_zero._entry_ptr.54 = internal global ptr @test_u32_zero._entry.52, section ".printk_index", align 4
@test_u32_zero._entry.55 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.56, ptr @.str.42, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\014test_stackinit: u32_zero %sFAIL (uninit bytes: %d)\0A\00", [42 x i8] zeroinitializer }, align 32
@test_u32_zero._entry_ptr.57 = internal global ptr @test_u32_zero._entry.55, section ".printk_index", align 4
@test_u64_zero._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.58, ptr @.str.59, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\013test_stackinit: u64_zero: leaf fill was not 0xFF!?\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"test_u64_zero\00", [18 x i8] zeroinitializer }, align 32
@test_u64_zero._entry_ptr = internal global ptr @test_u64_zero._entry, section ".printk_index", align 4
@test_u64_zero._entry.60 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.61, ptr @.str.59, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\013test_stackinit: u64_zero: stack fill missed target!?\0A\00", [40 x i8] zeroinitializer }, align 32
@test_u64_zero._entry_ptr.62 = internal global ptr @test_u64_zero._entry.60, section ".printk_index", align 4
@test_u64_zero._entry.63 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.64, ptr @.str.59, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\013test_stackinit: u64_zero: fill %zu wide\0A\00", [53 x i8] zeroinitializer }, align 32
@test_u64_zero._entry_ptr.65 = internal global ptr @test_u64_zero._entry.63, section ".printk_index", align 4
@test_u64_zero._entry.66 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.67, ptr @.str.59, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\013test_stackinit: u64_zero: target offset by %d\0A\00", [47 x i8] zeroinitializer }, align 32
@test_u64_zero._entry_ptr.68 = internal global ptr @test_u64_zero._entry.66, section ".printk_index", align 4
@test_u64_zero._entry.69 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.70, ptr @.str.59, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"\016test_stackinit: u64_zero ok\0A\00", [33 x i8] zeroinitializer }, align 32
@test_u64_zero._entry_ptr.71 = internal global ptr @test_u64_zero._entry.69, section ".printk_index", align 4
@test_u64_zero._entry.72 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.73, ptr @.str.59, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\014test_stackinit: u64_zero %sFAIL (uninit bytes: %d)\0A\00", [42 x i8] zeroinitializer }, align 32
@test_u64_zero._entry_ptr.74 = internal global ptr @test_u64_zero._entry.72, section ".printk_index", align 4
@test_char_array_zero._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.75, ptr @.str.76, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\013test_stackinit: char_array_zero: leaf fill was not 0xFF!?\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"test_char_array_zero\00", [43 x i8] zeroinitializer }, align 32
@test_char_array_zero._entry_ptr = internal global ptr @test_char_array_zero._entry, section ".printk_index", align 4
@test_char_array_zero._entry.77 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.78, ptr @.str.76, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\013test_stackinit: char_array_zero: stack fill missed target!?\0A\00", [33 x i8] zeroinitializer }, align 32
@test_char_array_zero._entry_ptr.79 = internal global ptr @test_char_array_zero._entry.77, section ".printk_index", align 4
@test_char_array_zero._entry.80 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.81, ptr @.str.76, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\013test_stackinit: char_array_zero: fill %zu wide\0A\00", [46 x i8] zeroinitializer }, align 32
@test_char_array_zero._entry_ptr.82 = internal global ptr @test_char_array_zero._entry.80, section ".printk_index", align 4
@test_char_array_zero._entry.83 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.84, ptr @.str.76, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\013test_stackinit: char_array_zero: target offset by %d\0A\00", [40 x i8] zeroinitializer }, align 32
@test_char_array_zero._entry_ptr.85 = internal global ptr @test_char_array_zero._entry.83, section ".printk_index", align 4
@test_char_array_zero._entry.86 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.87, ptr @.str.76, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\016test_stackinit: char_array_zero ok\0A\00", [58 x i8] zeroinitializer }, align 32
@test_char_array_zero._entry_ptr.88 = internal global ptr @test_char_array_zero._entry.86, section ".printk_index", align 4
@test_char_array_zero._entry.89 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.90, ptr @.str.76, ptr @.str.2, i32 374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\014test_stackinit: char_array_zero %sFAIL (uninit bytes: %d)\0A\00", [35 x i8] zeroinitializer }, align 32
@test_char_array_zero._entry_ptr.91 = internal global ptr @test_char_array_zero._entry.89, section ".printk_index", align 4
@test_small_hole_zero._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.92, ptr @.str.93, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\013test_stackinit: small_hole_zero: leaf fill was not 0xFF!?\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"test_small_hole_zero\00", [43 x i8] zeroinitializer }, align 32
@test_small_hole_zero._entry_ptr = internal global ptr @test_small_hole_zero._entry, section ".printk_index", align 4
@test_small_hole_zero._entry.94 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.95, ptr @.str.93, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\013test_stackinit: small_hole_zero: stack fill missed target!?\0A\00", [33 x i8] zeroinitializer }, align 32
@test_small_hole_zero._entry_ptr.96 = internal global ptr @test_small_hole_zero._entry.94, section ".printk_index", align 4
@test_small_hole_zero._entry.97 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.98, ptr @.str.93, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\013test_stackinit: small_hole_zero: fill %zu wide\0A\00", [46 x i8] zeroinitializer }, align 32
@test_small_hole_zero._entry_ptr.99 = internal global ptr @test_small_hole_zero._entry.97, section ".printk_index", align 4
@test_small_hole_zero._entry.100 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.101, ptr @.str.93, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\013test_stackinit: small_hole_zero: target offset by %d\0A\00", [40 x i8] zeroinitializer }, align 32
@test_small_hole_zero._entry_ptr.102 = internal global ptr @test_small_hole_zero._entry.100, section ".printk_index", align 4
@test_small_hole_zero._entry.103 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.104, ptr @.str.93, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\016test_stackinit: small_hole_zero ok\0A\00", [58 x i8] zeroinitializer }, align 32
@test_small_hole_zero._entry_ptr.105 = internal global ptr @test_small_hole_zero._entry.103, section ".printk_index", align 4
@test_small_hole_zero._entry.106 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.107, ptr @.str.93, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\014test_stackinit: small_hole_zero %sFAIL (uninit bytes: %d)\0A\00", [35 x i8] zeroinitializer }, align 32
@test_small_hole_zero._entry_ptr.108 = internal global ptr @test_small_hole_zero._entry.106, section ".printk_index", align 4
@test_big_hole_zero._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.109, ptr @.str.110, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013test_stackinit: big_hole_zero: leaf fill was not 0xFF!?\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"test_big_hole_zero\00", [45 x i8] zeroinitializer }, align 32
@test_big_hole_zero._entry_ptr = internal global ptr @test_big_hole_zero._entry, section ".printk_index", align 4
@test_big_hole_zero._entry.111 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.112, ptr @.str.110, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\013test_stackinit: big_hole_zero: stack fill missed target!?\0A\00", [35 x i8] zeroinitializer }, align 32
@test_big_hole_zero._entry_ptr.113 = internal global ptr @test_big_hole_zero._entry.111, section ".printk_index", align 4
@test_big_hole_zero._entry.114 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.115, ptr @.str.110, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\013test_stackinit: big_hole_zero: fill %zu wide\0A\00", [48 x i8] zeroinitializer }, align 32
@test_big_hole_zero._entry_ptr.116 = internal global ptr @test_big_hole_zero._entry.114, section ".printk_index", align 4
@test_big_hole_zero._entry.117 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.118, ptr @.str.110, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\013test_stackinit: big_hole_zero: target offset by %d\0A\00", [42 x i8] zeroinitializer }, align 32
@test_big_hole_zero._entry_ptr.119 = internal global ptr @test_big_hole_zero._entry.117, section ".printk_index", align 4
@test_big_hole_zero._entry.120 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.121, ptr @.str.110, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\016test_stackinit: big_hole_zero ok\0A\00", [60 x i8] zeroinitializer }, align 32
@test_big_hole_zero._entry_ptr.122 = internal global ptr @test_big_hole_zero._entry.120, section ".printk_index", align 4
@test_big_hole_zero._entry.123 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.124, ptr @.str.110, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\014test_stackinit: big_hole_zero %sFAIL (uninit bytes: %d)\0A\00", [37 x i8] zeroinitializer }, align 32
@test_big_hole_zero._entry_ptr.125 = internal global ptr @test_big_hole_zero._entry.123, section ".printk_index", align 4
@test_trailing_hole_zero._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.126, ptr @.str.127, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\013test_stackinit: trailing_hole_zero: leaf fill was not 0xFF!?\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"test_trailing_hole_zero\00", [40 x i8] zeroinitializer }, align 32
@test_trailing_hole_zero._entry_ptr = internal global ptr @test_trailing_hole_zero._entry, section ".printk_index", align 4
@test_trailing_hole_zero._entry.128 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.129, ptr @.str.127, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\013test_stackinit: trailing_hole_zero: stack fill missed target!?\0A\00", [62 x i8] zeroinitializer }, align 32
@test_trailing_hole_zero._entry_ptr.130 = internal global ptr @test_trailing_hole_zero._entry.128, section ".printk_index", align 4
@test_trailing_hole_zero._entry.131 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.132, ptr @.str.127, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\013test_stackinit: trailing_hole_zero: fill %zu wide\0A\00", [43 x i8] zeroinitializer }, align 32
@test_trailing_hole_zero._entry_ptr.133 = internal global ptr @test_trailing_hole_zero._entry.131, section ".printk_index", align 4
@test_trailing_hole_zero._entry.134 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.127, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013test_stackinit: trailing_hole_zero: target offset by %d\0A\00", [37 x i8] zeroinitializer }, align 32
@test_trailing_hole_zero._entry_ptr.136 = internal global ptr @test_trailing_hole_zero._entry.134, section ".printk_index", align 4
@test_trailing_hole_zero._entry.137 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.138, ptr @.str.127, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\016test_stackinit: trailing_hole_zero ok\0A\00", [55 x i8] zeroinitializer }, align 32
@test_trailing_hole_zero._entry_ptr.139 = internal global ptr @test_trailing_hole_zero._entry.137, section ".printk_index", align 4
@test_trailing_hole_zero._entry.140 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.141, ptr @.str.127, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\014test_stackinit: trailing_hole_zero %sFAIL (uninit bytes: %d)\0A\00", [32 x i8] zeroinitializer }, align 32
@test_trailing_hole_zero._entry_ptr.142 = internal global ptr @test_trailing_hole_zero._entry.140, section ".printk_index", align 4
@test_packed_zero._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.143, ptr @.str.144, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\013test_stackinit: packed_zero: leaf fill was not 0xFF!?\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"test_packed_zero\00", [47 x i8] zeroinitializer }, align 32
@test_packed_zero._entry_ptr = internal global ptr @test_packed_zero._entry, section ".printk_index", align 4
@test_packed_zero._entry.145 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.146, ptr @.str.144, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013test_stackinit: packed_zero: stack fill missed target!?\0A\00", [37 x i8] zeroinitializer }, align 32
@test_packed_zero._entry_ptr.147 = internal global ptr @test_packed_zero._entry.145, section ".printk_index", align 4
@test_packed_zero._entry.148 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.149, ptr @.str.144, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\013test_stackinit: packed_zero: fill %zu wide\0A\00", [50 x i8] zeroinitializer }, align 32
@test_packed_zero._entry_ptr.150 = internal global ptr @test_packed_zero._entry.148, section ".printk_index", align 4
@test_packed_zero._entry.151 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.152, ptr @.str.144, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\013test_stackinit: packed_zero: target offset by %d\0A\00", [44 x i8] zeroinitializer }, align 32
@test_packed_zero._entry_ptr.153 = internal global ptr @test_packed_zero._entry.151, section ".printk_index", align 4
@test_packed_zero._entry.154 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.155, ptr @.str.144, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\016test_stackinit: packed_zero ok\0A\00", [62 x i8] zeroinitializer }, align 32
@test_packed_zero._entry_ptr.156 = internal global ptr @test_packed_zero._entry.154, section ".printk_index", align 4
@test_packed_zero._entry.157 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.158, ptr @.str.144, ptr @.str.2, i32 375, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\014test_stackinit: packed_zero %sFAIL (uninit bytes: %d)\0A\00", [39 x i8] zeroinitializer }, align 32
@test_packed_zero._entry_ptr.159 = internal global ptr @test_packed_zero._entry.157, section ".printk_index", align 4
@test_small_hole_dynamic_partial._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.160, ptr @.str.161, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\013test_stackinit: small_hole_dynamic_partial: leaf fill was not 0xFF!?\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"test_small_hole_dynamic_partial\00", [32 x i8] zeroinitializer }, align 32
@test_small_hole_dynamic_partial._entry_ptr = internal global ptr @test_small_hole_dynamic_partial._entry, section ".printk_index", align 4
@test_small_hole_dynamic_partial._entry.162 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.163, ptr @.str.161, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [74 x i8], [54 x i8] } { [74 x i8] c"\013test_stackinit: small_hole_dynamic_partial: stack fill missed target!?\0A\00", [54 x i8] zeroinitializer }, align 32
@test_small_hole_dynamic_partial._entry_ptr.164 = internal global ptr @test_small_hole_dynamic_partial._entry.162, section ".printk_index", align 4
@test_small_hole_dynamic_partial._entry.165 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.166, ptr @.str.161, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\013test_stackinit: small_hole_dynamic_partial: fill %zu wide\0A\00", [35 x i8] zeroinitializer }, align 32
@test_small_hole_dynamic_partial._entry_ptr.167 = internal global ptr @test_small_hole_dynamic_partial._entry.165, section ".printk_index", align 4
@test_small_hole_dynamic_partial._entry.168 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.169, ptr @.str.161, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"\013test_stackinit: small_hole_dynamic_partial: target offset by %d\0A\00", [61 x i8] zeroinitializer }, align 32
@test_small_hole_dynamic_partial._entry_ptr.170 = internal global ptr @test_small_hole_dynamic_partial._entry.168, section ".printk_index", align 4
@test_small_hole_dynamic_partial._entry.171 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.172, ptr @.str.161, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\016test_stackinit: small_hole_dynamic_partial ok\0A\00", [47 x i8] zeroinitializer }, align 32
@test_small_hole_dynamic_partial._entry_ptr.173 = internal global ptr @test_small_hole_dynamic_partial._entry.171, section ".printk_index", align 4
@test_small_hole_dynamic_partial._entry.174 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.175, ptr @.str.161, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\014test_stackinit: small_hole_dynamic_partial %sFAIL (uninit bytes: %d)\0A\00", [56 x i8] zeroinitializer }, align 32
@test_small_hole_dynamic_partial._entry_ptr.176 = internal global ptr @test_small_hole_dynamic_partial._entry.174, section ".printk_index", align 4
@test_big_hole_dynamic_partial._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.177, ptr @.str.178, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\013test_stackinit: big_hole_dynamic_partial: leaf fill was not 0xFF!?\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"test_big_hole_dynamic_partial\00", [34 x i8] zeroinitializer }, align 32
@test_big_hole_dynamic_partial._entry_ptr = internal global ptr @test_big_hole_dynamic_partial._entry, section ".printk_index", align 4
@test_big_hole_dynamic_partial._entry.179 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.180, ptr @.str.178, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\013test_stackinit: big_hole_dynamic_partial: stack fill missed target!?\0A\00", [56 x i8] zeroinitializer }, align 32
@test_big_hole_dynamic_partial._entry_ptr.181 = internal global ptr @test_big_hole_dynamic_partial._entry.179, section ".printk_index", align 4
@test_big_hole_dynamic_partial._entry.182 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.183, ptr @.str.178, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013test_stackinit: big_hole_dynamic_partial: fill %zu wide\0A\00", [37 x i8] zeroinitializer }, align 32
@test_big_hole_dynamic_partial._entry_ptr.184 = internal global ptr @test_big_hole_dynamic_partial._entry.182, section ".printk_index", align 4
@test_big_hole_dynamic_partial._entry.185 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.186, ptr @.str.178, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\013test_stackinit: big_hole_dynamic_partial: target offset by %d\0A\00", [63 x i8] zeroinitializer }, align 32
@test_big_hole_dynamic_partial._entry_ptr.187 = internal global ptr @test_big_hole_dynamic_partial._entry.185, section ".printk_index", align 4
@test_big_hole_dynamic_partial._entry.188 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.189, ptr @.str.178, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"\016test_stackinit: big_hole_dynamic_partial ok\0A\00", [49 x i8] zeroinitializer }, align 32
@test_big_hole_dynamic_partial._entry_ptr.190 = internal global ptr @test_big_hole_dynamic_partial._entry.188, section ".printk_index", align 4
@test_big_hole_dynamic_partial._entry.191 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.192, ptr @.str.178, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.192 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\014test_stackinit: big_hole_dynamic_partial %sFAIL (uninit bytes: %d)\0A\00", [58 x i8] zeroinitializer }, align 32
@test_big_hole_dynamic_partial._entry_ptr.193 = internal global ptr @test_big_hole_dynamic_partial._entry.191, section ".printk_index", align 4
@test_trailing_hole_dynamic_partial._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.194, ptr @.str.195, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.194 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"\013test_stackinit: trailing_hole_dynamic_partial: leaf fill was not 0xFF!?\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"test_trailing_hole_dynamic_partial\00", [61 x i8] zeroinitializer }, align 32
@test_trailing_hole_dynamic_partial._entry_ptr = internal global ptr @test_trailing_hole_dynamic_partial._entry, section ".printk_index", align 4
@test_trailing_hole_dynamic_partial._entry.196 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.197, ptr @.str.195, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.197 = internal constant { [77 x i8], [51 x i8] } { [77 x i8] c"\013test_stackinit: trailing_hole_dynamic_partial: stack fill missed target!?\0A\00", [51 x i8] zeroinitializer }, align 32
@test_trailing_hole_dynamic_partial._entry_ptr.198 = internal global ptr @test_trailing_hole_dynamic_partial._entry.196, section ".printk_index", align 4
@test_trailing_hole_dynamic_partial._entry.199 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.200, ptr @.str.195, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.200 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\013test_stackinit: trailing_hole_dynamic_partial: fill %zu wide\0A\00", [32 x i8] zeroinitializer }, align 32
@test_trailing_hole_dynamic_partial._entry_ptr.201 = internal global ptr @test_trailing_hole_dynamic_partial._entry.199, section ".printk_index", align 4
@test_trailing_hole_dynamic_partial._entry.202 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.203, ptr @.str.195, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\013test_stackinit: trailing_hole_dynamic_partial: target offset by %d\0A\00", [58 x i8] zeroinitializer }, align 32
@test_trailing_hole_dynamic_partial._entry_ptr.204 = internal global ptr @test_trailing_hole_dynamic_partial._entry.202, section ".printk_index", align 4
@test_trailing_hole_dynamic_partial._entry.205 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.206, ptr @.str.195, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\016test_stackinit: trailing_hole_dynamic_partial ok\0A\00", [44 x i8] zeroinitializer }, align 32
@test_trailing_hole_dynamic_partial._entry_ptr.207 = internal global ptr @test_trailing_hole_dynamic_partial._entry.205, section ".printk_index", align 4
@test_trailing_hole_dynamic_partial._entry.208 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.209, ptr @.str.195, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.209 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"\014test_stackinit: trailing_hole_dynamic_partial %sFAIL (uninit bytes: %d)\0A\00", [53 x i8] zeroinitializer }, align 32
@test_trailing_hole_dynamic_partial._entry_ptr.210 = internal global ptr @test_trailing_hole_dynamic_partial._entry.208, section ".printk_index", align 4
@test_packed_dynamic_partial._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.211, ptr @.str.212, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\013test_stackinit: packed_dynamic_partial: leaf fill was not 0xFF!?\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"test_packed_dynamic_partial\00", [36 x i8] zeroinitializer }, align 32
@test_packed_dynamic_partial._entry_ptr = internal global ptr @test_packed_dynamic_partial._entry, section ".printk_index", align 4
@test_packed_dynamic_partial._entry.213 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.214, ptr @.str.212, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\013test_stackinit: packed_dynamic_partial: stack fill missed target!?\0A\00", [58 x i8] zeroinitializer }, align 32
@test_packed_dynamic_partial._entry_ptr.215 = internal global ptr @test_packed_dynamic_partial._entry.213, section ".printk_index", align 4
@test_packed_dynamic_partial._entry.216 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.217, ptr @.str.212, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.217 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\013test_stackinit: packed_dynamic_partial: fill %zu wide\0A\00", [39 x i8] zeroinitializer }, align 32
@test_packed_dynamic_partial._entry_ptr.218 = internal global ptr @test_packed_dynamic_partial._entry.216, section ".printk_index", align 4
@test_packed_dynamic_partial._entry.219 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.220, ptr @.str.212, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\013test_stackinit: packed_dynamic_partial: target offset by %d\0A\00", [33 x i8] zeroinitializer }, align 32
@test_packed_dynamic_partial._entry_ptr.221 = internal global ptr @test_packed_dynamic_partial._entry.219, section ".printk_index", align 4
@test_packed_dynamic_partial._entry.222 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.223, ptr @.str.212, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.223 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\016test_stackinit: packed_dynamic_partial ok\0A\00", [51 x i8] zeroinitializer }, align 32
@test_packed_dynamic_partial._entry_ptr.224 = internal global ptr @test_packed_dynamic_partial._entry.222, section ".printk_index", align 4
@test_packed_dynamic_partial._entry.225 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.226, ptr @.str.212, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\014test_stackinit: packed_dynamic_partial %sFAIL (uninit bytes: %d)\0A\00", [60 x i8] zeroinitializer }, align 32
@test_packed_dynamic_partial._entry_ptr.227 = internal global ptr @test_packed_dynamic_partial._entry.225, section ".printk_index", align 4
@test_small_hole_assigned_dynamic_partial._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.228, ptr @.str.229, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.228 = internal constant { [81 x i8], [47 x i8] } { [81 x i8] c"\013test_stackinit: small_hole_assigned_dynamic_partial: leaf fill was not 0xFF!?\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"test_small_hole_assigned_dynamic_partial\00", [55 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_dynamic_partial._entry_ptr = internal global ptr @test_small_hole_assigned_dynamic_partial._entry, section ".printk_index", align 4
@test_small_hole_assigned_dynamic_partial._entry.230 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.231, ptr @.str.229, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [83 x i8], [45 x i8] } { [83 x i8] c"\013test_stackinit: small_hole_assigned_dynamic_partial: stack fill missed target!?\0A\00", [45 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_dynamic_partial._entry_ptr.232 = internal global ptr @test_small_hole_assigned_dynamic_partial._entry.230, section ".printk_index", align 4
@test_small_hole_assigned_dynamic_partial._entry.233 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.234, ptr @.str.229, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.234 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\013test_stackinit: small_hole_assigned_dynamic_partial: fill %zu wide\0A\00", [58 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_dynamic_partial._entry_ptr.235 = internal global ptr @test_small_hole_assigned_dynamic_partial._entry.233, section ".printk_index", align 4
@test_small_hole_assigned_dynamic_partial._entry.236 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.237, ptr @.str.229, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [76 x i8], [52 x i8] } { [76 x i8] c"\013test_stackinit: small_hole_assigned_dynamic_partial: target offset by %d\0A\00", [52 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_dynamic_partial._entry_ptr.238 = internal global ptr @test_small_hole_assigned_dynamic_partial._entry.236, section ".printk_index", align 4
@test_small_hole_assigned_dynamic_partial._entry.239 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.240, ptr @.str.229, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\016test_stackinit: small_hole_assigned_dynamic_partial ok\0A\00", [38 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_dynamic_partial._entry_ptr.241 = internal global ptr @test_small_hole_assigned_dynamic_partial._entry.239, section ".printk_index", align 4
@test_small_hole_assigned_dynamic_partial._entry.242 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.243, ptr @.str.229, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.243 = internal constant { [81 x i8], [47 x i8] } { [81 x i8] c"\014test_stackinit: small_hole_assigned_dynamic_partial %sFAIL (uninit bytes: %d)\0A\00", [47 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_dynamic_partial._entry_ptr.244 = internal global ptr @test_small_hole_assigned_dynamic_partial._entry.242, section ".printk_index", align 4
@test_big_hole_assigned_dynamic_partial._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.245, ptr @.str.246, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.245 = internal constant { [79 x i8], [49 x i8] } { [79 x i8] c"\013test_stackinit: big_hole_assigned_dynamic_partial: leaf fill was not 0xFF!?\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.246 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"test_big_hole_assigned_dynamic_partial\00", [57 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_dynamic_partial._entry_ptr = internal global ptr @test_big_hole_assigned_dynamic_partial._entry, section ".printk_index", align 4
@test_big_hole_assigned_dynamic_partial._entry.247 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.248, ptr @.str.246, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.248 = internal constant { [81 x i8], [47 x i8] } { [81 x i8] c"\013test_stackinit: big_hole_assigned_dynamic_partial: stack fill missed target!?\0A\00", [47 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_dynamic_partial._entry_ptr.249 = internal global ptr @test_big_hole_assigned_dynamic_partial._entry.247, section ".printk_index", align 4
@test_big_hole_assigned_dynamic_partial._entry.250 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.251, ptr @.str.246, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.251 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\013test_stackinit: big_hole_assigned_dynamic_partial: fill %zu wide\0A\00", [60 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_dynamic_partial._entry_ptr.252 = internal global ptr @test_big_hole_assigned_dynamic_partial._entry.250, section ".printk_index", align 4
@test_big_hole_assigned_dynamic_partial._entry.253 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.254, ptr @.str.246, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.254 = internal constant { [74 x i8], [54 x i8] } { [74 x i8] c"\013test_stackinit: big_hole_assigned_dynamic_partial: target offset by %d\0A\00", [54 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_dynamic_partial._entry_ptr.255 = internal global ptr @test_big_hole_assigned_dynamic_partial._entry.253, section ".printk_index", align 4
@test_big_hole_assigned_dynamic_partial._entry.256 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.257, ptr @.str.246, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.257 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\016test_stackinit: big_hole_assigned_dynamic_partial ok\0A\00", [40 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_dynamic_partial._entry_ptr.258 = internal global ptr @test_big_hole_assigned_dynamic_partial._entry.256, section ".printk_index", align 4
@test_big_hole_assigned_dynamic_partial._entry.259 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.260, ptr @.str.246, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.260 = internal constant { [79 x i8], [49 x i8] } { [79 x i8] c"\014test_stackinit: big_hole_assigned_dynamic_partial %sFAIL (uninit bytes: %d)\0A\00", [49 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_dynamic_partial._entry_ptr.261 = internal global ptr @test_big_hole_assigned_dynamic_partial._entry.259, section ".printk_index", align 4
@test_trailing_hole_assigned_dynamic_partial._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.262, ptr @.str.263, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.262 = internal constant { [84 x i8], [44 x i8] } { [84 x i8] c"\013test_stackinit: trailing_hole_assigned_dynamic_partial: leaf fill was not 0xFF!?\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.263 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"test_trailing_hole_assigned_dynamic_partial\00", [52 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_dynamic_partial._entry_ptr = internal global ptr @test_trailing_hole_assigned_dynamic_partial._entry, section ".printk_index", align 4
@test_trailing_hole_assigned_dynamic_partial._entry.264 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.265, ptr @.str.263, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.265 = internal constant { [86 x i8], [42 x i8] } { [86 x i8] c"\013test_stackinit: trailing_hole_assigned_dynamic_partial: stack fill missed target!?\0A\00", [42 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_dynamic_partial._entry_ptr.266 = internal global ptr @test_trailing_hole_assigned_dynamic_partial._entry.264, section ".printk_index", align 4
@test_trailing_hole_assigned_dynamic_partial._entry.267 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.268, ptr @.str.263, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.268 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\013test_stackinit: trailing_hole_assigned_dynamic_partial: fill %zu wide\0A\00", [55 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_dynamic_partial._entry_ptr.269 = internal global ptr @test_trailing_hole_assigned_dynamic_partial._entry.267, section ".printk_index", align 4
@test_trailing_hole_assigned_dynamic_partial._entry.270 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.271, ptr @.str.263, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.271 = internal constant { [79 x i8], [49 x i8] } { [79 x i8] c"\013test_stackinit: trailing_hole_assigned_dynamic_partial: target offset by %d\0A\00", [49 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_dynamic_partial._entry_ptr.272 = internal global ptr @test_trailing_hole_assigned_dynamic_partial._entry.270, section ".printk_index", align 4
@test_trailing_hole_assigned_dynamic_partial._entry.273 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.274, ptr @.str.263, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.274 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\016test_stackinit: trailing_hole_assigned_dynamic_partial ok\0A\00", [35 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_dynamic_partial._entry_ptr.275 = internal global ptr @test_trailing_hole_assigned_dynamic_partial._entry.273, section ".printk_index", align 4
@test_trailing_hole_assigned_dynamic_partial._entry.276 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.277, ptr @.str.263, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.277 = internal constant { [84 x i8], [44 x i8] } { [84 x i8] c"\014test_stackinit: trailing_hole_assigned_dynamic_partial %sFAIL (uninit bytes: %d)\0A\00", [44 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_dynamic_partial._entry_ptr.278 = internal global ptr @test_trailing_hole_assigned_dynamic_partial._entry.276, section ".printk_index", align 4
@test_packed_assigned_dynamic_partial._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.279, ptr @.str.280, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.279 = internal constant { [77 x i8], [51 x i8] } { [77 x i8] c"\013test_stackinit: packed_assigned_dynamic_partial: leaf fill was not 0xFF!?\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.280 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"test_packed_assigned_dynamic_partial\00", [59 x i8] zeroinitializer }, align 32
@test_packed_assigned_dynamic_partial._entry_ptr = internal global ptr @test_packed_assigned_dynamic_partial._entry, section ".printk_index", align 4
@test_packed_assigned_dynamic_partial._entry.281 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.282, ptr @.str.280, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.282 = internal constant { [79 x i8], [49 x i8] } { [79 x i8] c"\013test_stackinit: packed_assigned_dynamic_partial: stack fill missed target!?\0A\00", [49 x i8] zeroinitializer }, align 32
@test_packed_assigned_dynamic_partial._entry_ptr.283 = internal global ptr @test_packed_assigned_dynamic_partial._entry.281, section ".printk_index", align 4
@test_packed_assigned_dynamic_partial._entry.284 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.285, ptr @.str.280, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.285 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\013test_stackinit: packed_assigned_dynamic_partial: fill %zu wide\0A\00", [62 x i8] zeroinitializer }, align 32
@test_packed_assigned_dynamic_partial._entry_ptr.286 = internal global ptr @test_packed_assigned_dynamic_partial._entry.284, section ".printk_index", align 4
@test_packed_assigned_dynamic_partial._entry.287 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.288, ptr @.str.280, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.288 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\013test_stackinit: packed_assigned_dynamic_partial: target offset by %d\0A\00", [56 x i8] zeroinitializer }, align 32
@test_packed_assigned_dynamic_partial._entry_ptr.289 = internal global ptr @test_packed_assigned_dynamic_partial._entry.287, section ".printk_index", align 4
@test_packed_assigned_dynamic_partial._entry.290 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.291, ptr @.str.280, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.291 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\016test_stackinit: packed_assigned_dynamic_partial ok\0A\00", [42 x i8] zeroinitializer }, align 32
@test_packed_assigned_dynamic_partial._entry_ptr.292 = internal global ptr @test_packed_assigned_dynamic_partial._entry.290, section ".printk_index", align 4
@test_packed_assigned_dynamic_partial._entry.293 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.294, ptr @.str.280, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.294 = internal constant { [77 x i8], [51 x i8] } { [77 x i8] c"\014test_stackinit: packed_assigned_dynamic_partial %sFAIL (uninit bytes: %d)\0A\00", [51 x i8] zeroinitializer }, align 32
@test_packed_assigned_dynamic_partial._entry_ptr.295 = internal global ptr @test_packed_assigned_dynamic_partial._entry.293, section ".printk_index", align 4
@test_small_hole_static_partial._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.296, ptr @.str.297, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.296 = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"\013test_stackinit: small_hole_static_partial: leaf fill was not 0xFF!?\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.297 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"test_small_hole_static_partial\00", [33 x i8] zeroinitializer }, align 32
@test_small_hole_static_partial._entry_ptr = internal global ptr @test_small_hole_static_partial._entry, section ".printk_index", align 4
@test_small_hole_static_partial._entry.298 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.299, ptr @.str.297, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.299 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\013test_stackinit: small_hole_static_partial: stack fill missed target!?\0A\00", [55 x i8] zeroinitializer }, align 32
@test_small_hole_static_partial._entry_ptr.300 = internal global ptr @test_small_hole_static_partial._entry.298, section ".printk_index", align 4
@test_small_hole_static_partial._entry.301 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.302, ptr @.str.297, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.302 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\013test_stackinit: small_hole_static_partial: fill %zu wide\0A\00", [36 x i8] zeroinitializer }, align 32
@test_small_hole_static_partial._entry_ptr.303 = internal global ptr @test_small_hole_static_partial._entry.301, section ".printk_index", align 4
@test_small_hole_static_partial._entry.304 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.305, ptr @.str.297, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.305 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\013test_stackinit: small_hole_static_partial: target offset by %d\0A\00", [62 x i8] zeroinitializer }, align 32
@test_small_hole_static_partial._entry_ptr.306 = internal global ptr @test_small_hole_static_partial._entry.304, section ".printk_index", align 4
@test_small_hole_static_partial._entry.307 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.308, ptr @.str.297, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.308 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\016test_stackinit: small_hole_static_partial ok\0A\00", [48 x i8] zeroinitializer }, align 32
@test_small_hole_static_partial._entry_ptr.309 = internal global ptr @test_small_hole_static_partial._entry.307, section ".printk_index", align 4
@test_small_hole_static_partial._entry.310 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.311, ptr @.str.297, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.311 = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"\014test_stackinit: small_hole_static_partial %sFAIL (uninit bytes: %d)\0A\00", [57 x i8] zeroinitializer }, align 32
@test_small_hole_static_partial._entry_ptr.312 = internal global ptr @test_small_hole_static_partial._entry.310, section ".printk_index", align 4
@test_big_hole_static_partial._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.313, ptr @.str.314, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.313 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"\013test_stackinit: big_hole_static_partial: leaf fill was not 0xFF!?\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.314 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"test_big_hole_static_partial\00", [35 x i8] zeroinitializer }, align 32
@test_big_hole_static_partial._entry_ptr = internal global ptr @test_big_hole_static_partial._entry, section ".printk_index", align 4
@test_big_hole_static_partial._entry.315 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.316, ptr @.str.314, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.316 = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"\013test_stackinit: big_hole_static_partial: stack fill missed target!?\0A\00", [57 x i8] zeroinitializer }, align 32
@test_big_hole_static_partial._entry_ptr.317 = internal global ptr @test_big_hole_static_partial._entry.315, section ".printk_index", align 4
@test_big_hole_static_partial._entry.318 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.319, ptr @.str.314, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.319 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\013test_stackinit: big_hole_static_partial: fill %zu wide\0A\00", [38 x i8] zeroinitializer }, align 32
@test_big_hole_static_partial._entry_ptr.320 = internal global ptr @test_big_hole_static_partial._entry.318, section ".printk_index", align 4
@test_big_hole_static_partial._entry.321 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.322, ptr @.str.314, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.322 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\013test_stackinit: big_hole_static_partial: target offset by %d\0A\00", [32 x i8] zeroinitializer }, align 32
@test_big_hole_static_partial._entry_ptr.323 = internal global ptr @test_big_hole_static_partial._entry.321, section ".printk_index", align 4
@test_big_hole_static_partial._entry.324 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.325, ptr @.str.314, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.325 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\016test_stackinit: big_hole_static_partial ok\0A\00", [50 x i8] zeroinitializer }, align 32
@test_big_hole_static_partial._entry_ptr.326 = internal global ptr @test_big_hole_static_partial._entry.324, section ".printk_index", align 4
@test_big_hole_static_partial._entry.327 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.328, ptr @.str.314, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.328 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"\014test_stackinit: big_hole_static_partial %sFAIL (uninit bytes: %d)\0A\00", [59 x i8] zeroinitializer }, align 32
@test_big_hole_static_partial._entry_ptr.329 = internal global ptr @test_big_hole_static_partial._entry.327, section ".printk_index", align 4
@test_trailing_hole_static_partial._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.330, ptr @.str.331, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.330 = internal constant { [74 x i8], [54 x i8] } { [74 x i8] c"\013test_stackinit: trailing_hole_static_partial: leaf fill was not 0xFF!?\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.331 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"test_trailing_hole_static_partial\00", [62 x i8] zeroinitializer }, align 32
@test_trailing_hole_static_partial._entry_ptr = internal global ptr @test_trailing_hole_static_partial._entry, section ".printk_index", align 4
@test_trailing_hole_static_partial._entry.332 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.333, ptr @.str.331, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.333 = internal constant { [76 x i8], [52 x i8] } { [76 x i8] c"\013test_stackinit: trailing_hole_static_partial: stack fill missed target!?\0A\00", [52 x i8] zeroinitializer }, align 32
@test_trailing_hole_static_partial._entry_ptr.334 = internal global ptr @test_trailing_hole_static_partial._entry.332, section ".printk_index", align 4
@test_trailing_hole_static_partial._entry.335 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.336, ptr @.str.331, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.336 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\013test_stackinit: trailing_hole_static_partial: fill %zu wide\0A\00", [33 x i8] zeroinitializer }, align 32
@test_trailing_hole_static_partial._entry_ptr.337 = internal global ptr @test_trailing_hole_static_partial._entry.335, section ".printk_index", align 4
@test_trailing_hole_static_partial._entry.338 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.339, ptr @.str.331, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.339 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"\013test_stackinit: trailing_hole_static_partial: target offset by %d\0A\00", [59 x i8] zeroinitializer }, align 32
@test_trailing_hole_static_partial._entry_ptr.340 = internal global ptr @test_trailing_hole_static_partial._entry.338, section ".printk_index", align 4
@test_trailing_hole_static_partial._entry.341 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.342, ptr @.str.331, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.342 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\016test_stackinit: trailing_hole_static_partial ok\0A\00", [45 x i8] zeroinitializer }, align 32
@test_trailing_hole_static_partial._entry_ptr.343 = internal global ptr @test_trailing_hole_static_partial._entry.341, section ".printk_index", align 4
@test_trailing_hole_static_partial._entry.344 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.345, ptr @.str.331, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.345 = internal constant { [74 x i8], [54 x i8] } { [74 x i8] c"\014test_stackinit: trailing_hole_static_partial %sFAIL (uninit bytes: %d)\0A\00", [54 x i8] zeroinitializer }, align 32
@test_trailing_hole_static_partial._entry_ptr.346 = internal global ptr @test_trailing_hole_static_partial._entry.344, section ".printk_index", align 4
@test_packed_static_partial._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.347, ptr @.str.348, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.347 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"\013test_stackinit: packed_static_partial: leaf fill was not 0xFF!?\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.348 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"test_packed_static_partial\00", [37 x i8] zeroinitializer }, align 32
@test_packed_static_partial._entry_ptr = internal global ptr @test_packed_static_partial._entry, section ".printk_index", align 4
@test_packed_static_partial._entry.349 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.350, ptr @.str.348, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.350 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"\013test_stackinit: packed_static_partial: stack fill missed target!?\0A\00", [59 x i8] zeroinitializer }, align 32
@test_packed_static_partial._entry_ptr.351 = internal global ptr @test_packed_static_partial._entry.349, section ".printk_index", align 4
@test_packed_static_partial._entry.352 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.353, ptr @.str.348, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.353 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\013test_stackinit: packed_static_partial: fill %zu wide\0A\00", [40 x i8] zeroinitializer }, align 32
@test_packed_static_partial._entry_ptr.354 = internal global ptr @test_packed_static_partial._entry.352, section ".printk_index", align 4
@test_packed_static_partial._entry.355 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.356, ptr @.str.348, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.356 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"\013test_stackinit: packed_static_partial: target offset by %d\0A\00", [34 x i8] zeroinitializer }, align 32
@test_packed_static_partial._entry_ptr.357 = internal global ptr @test_packed_static_partial._entry.355, section ".printk_index", align 4
@test_packed_static_partial._entry.358 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.359, ptr @.str.348, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.359 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\016test_stackinit: packed_static_partial ok\0A\00", [52 x i8] zeroinitializer }, align 32
@test_packed_static_partial._entry_ptr.360 = internal global ptr @test_packed_static_partial._entry.358, section ".printk_index", align 4
@test_packed_static_partial._entry.361 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.362, ptr @.str.348, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.362 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"\014test_stackinit: packed_static_partial %sFAIL (uninit bytes: %d)\0A\00", [61 x i8] zeroinitializer }, align 32
@test_packed_static_partial._entry_ptr.363 = internal global ptr @test_packed_static_partial._entry.361, section ".printk_index", align 4
@test_small_hole_static_all._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.364, ptr @.str.365, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.364 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"\013test_stackinit: small_hole_static_all: leaf fill was not 0xFF!?\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.365 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"test_small_hole_static_all\00", [37 x i8] zeroinitializer }, align 32
@test_small_hole_static_all._entry_ptr = internal global ptr @test_small_hole_static_all._entry, section ".printk_index", align 4
@test_small_hole_static_all._entry.366 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.367, ptr @.str.365, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.367 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"\013test_stackinit: small_hole_static_all: stack fill missed target!?\0A\00", [59 x i8] zeroinitializer }, align 32
@test_small_hole_static_all._entry_ptr.368 = internal global ptr @test_small_hole_static_all._entry.366, section ".printk_index", align 4
@test_small_hole_static_all._entry.369 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.370, ptr @.str.365, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.370 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\013test_stackinit: small_hole_static_all: fill %zu wide\0A\00", [40 x i8] zeroinitializer }, align 32
@test_small_hole_static_all._entry_ptr.371 = internal global ptr @test_small_hole_static_all._entry.369, section ".printk_index", align 4
@test_small_hole_static_all._entry.372 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.373, ptr @.str.365, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.373 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"\013test_stackinit: small_hole_static_all: target offset by %d\0A\00", [34 x i8] zeroinitializer }, align 32
@test_small_hole_static_all._entry_ptr.374 = internal global ptr @test_small_hole_static_all._entry.372, section ".printk_index", align 4
@test_small_hole_static_all._entry.375 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.376, ptr @.str.365, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.376 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\016test_stackinit: small_hole_static_all ok\0A\00", [52 x i8] zeroinitializer }, align 32
@test_small_hole_static_all._entry_ptr.377 = internal global ptr @test_small_hole_static_all._entry.375, section ".printk_index", align 4
@test_small_hole_static_all._entry.378 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.379, ptr @.str.365, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.379 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"\014test_stackinit: small_hole_static_all %sFAIL (uninit bytes: %d)\0A\00", [61 x i8] zeroinitializer }, align 32
@test_small_hole_static_all._entry_ptr.380 = internal global ptr @test_small_hole_static_all._entry.378, section ".printk_index", align 4
@test_big_hole_static_all._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.381, ptr @.str.382, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.381 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\013test_stackinit: big_hole_static_all: leaf fill was not 0xFF!?\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.382 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"test_big_hole_static_all\00", [39 x i8] zeroinitializer }, align 32
@test_big_hole_static_all._entry_ptr = internal global ptr @test_big_hole_static_all._entry, section ".printk_index", align 4
@test_big_hole_static_all._entry.383 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.384, ptr @.str.382, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.384 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"\013test_stackinit: big_hole_static_all: stack fill missed target!?\0A\00", [61 x i8] zeroinitializer }, align 32
@test_big_hole_static_all._entry_ptr.385 = internal global ptr @test_big_hole_static_all._entry.383, section ".printk_index", align 4
@test_big_hole_static_all._entry.386 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.387, ptr @.str.382, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.387 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\013test_stackinit: big_hole_static_all: fill %zu wide\0A\00", [42 x i8] zeroinitializer }, align 32
@test_big_hole_static_all._entry_ptr.388 = internal global ptr @test_big_hole_static_all._entry.386, section ".printk_index", align 4
@test_big_hole_static_all._entry.389 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.390, ptr @.str.382, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.390 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\013test_stackinit: big_hole_static_all: target offset by %d\0A\00", [36 x i8] zeroinitializer }, align 32
@test_big_hole_static_all._entry_ptr.391 = internal global ptr @test_big_hole_static_all._entry.389, section ".printk_index", align 4
@test_big_hole_static_all._entry.392 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.393, ptr @.str.382, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.393 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\016test_stackinit: big_hole_static_all ok\0A\00", [54 x i8] zeroinitializer }, align 32
@test_big_hole_static_all._entry_ptr.394 = internal global ptr @test_big_hole_static_all._entry.392, section ".printk_index", align 4
@test_big_hole_static_all._entry.395 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.396, ptr @.str.382, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.396 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\014test_stackinit: big_hole_static_all %sFAIL (uninit bytes: %d)\0A\00", [63 x i8] zeroinitializer }, align 32
@test_big_hole_static_all._entry_ptr.397 = internal global ptr @test_big_hole_static_all._entry.395, section ".printk_index", align 4
@__const.leaf_big_hole_static_all.var = private unnamed_addr constant %struct.test_big_hole { i8 0, i8 0, i8 0, [61 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF", i8 0, [63 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF" }, align 64
@test_trailing_hole_static_all._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.398, ptr @.str.399, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.398 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\013test_stackinit: trailing_hole_static_all: leaf fill was not 0xFF!?\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.399 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"test_trailing_hole_static_all\00", [34 x i8] zeroinitializer }, align 32
@test_trailing_hole_static_all._entry_ptr = internal global ptr @test_trailing_hole_static_all._entry, section ".printk_index", align 4
@test_trailing_hole_static_all._entry.400 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.401, ptr @.str.399, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.401 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\013test_stackinit: trailing_hole_static_all: stack fill missed target!?\0A\00", [56 x i8] zeroinitializer }, align 32
@test_trailing_hole_static_all._entry_ptr.402 = internal global ptr @test_trailing_hole_static_all._entry.400, section ".printk_index", align 4
@test_trailing_hole_static_all._entry.403 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.404, ptr @.str.399, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.404 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013test_stackinit: trailing_hole_static_all: fill %zu wide\0A\00", [37 x i8] zeroinitializer }, align 32
@test_trailing_hole_static_all._entry_ptr.405 = internal global ptr @test_trailing_hole_static_all._entry.403, section ".printk_index", align 4
@test_trailing_hole_static_all._entry.406 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.407, ptr @.str.399, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.407 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\013test_stackinit: trailing_hole_static_all: target offset by %d\0A\00", [63 x i8] zeroinitializer }, align 32
@test_trailing_hole_static_all._entry_ptr.408 = internal global ptr @test_trailing_hole_static_all._entry.406, section ".printk_index", align 4
@test_trailing_hole_static_all._entry.409 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.410, ptr @.str.399, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.410 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"\016test_stackinit: trailing_hole_static_all ok\0A\00", [49 x i8] zeroinitializer }, align 32
@test_trailing_hole_static_all._entry_ptr.411 = internal global ptr @test_trailing_hole_static_all._entry.409, section ".printk_index", align 4
@test_trailing_hole_static_all._entry.412 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.413, ptr @.str.399, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.413 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\014test_stackinit: trailing_hole_static_all %sFAIL (uninit bytes: %d)\0A\00", [58 x i8] zeroinitializer }, align 32
@test_trailing_hole_static_all._entry_ptr.414 = internal global ptr @test_trailing_hole_static_all._entry.412, section ".printk_index", align 4
@test_packed_static_all._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.415, ptr @.str.416, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.415 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\013test_stackinit: packed_static_all: leaf fill was not 0xFF!?\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.416 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"test_packed_static_all\00", [41 x i8] zeroinitializer }, align 32
@test_packed_static_all._entry_ptr = internal global ptr @test_packed_static_all._entry, section ".printk_index", align 4
@test_packed_static_all._entry.417 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.418, ptr @.str.416, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.418 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\013test_stackinit: packed_static_all: stack fill missed target!?\0A\00", [63 x i8] zeroinitializer }, align 32
@test_packed_static_all._entry_ptr.419 = internal global ptr @test_packed_static_all._entry.417, section ".printk_index", align 4
@test_packed_static_all._entry.420 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.421, ptr @.str.416, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.421 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\013test_stackinit: packed_static_all: fill %zu wide\0A\00", [44 x i8] zeroinitializer }, align 32
@test_packed_static_all._entry_ptr.422 = internal global ptr @test_packed_static_all._entry.420, section ".printk_index", align 4
@test_packed_static_all._entry.423 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.424, ptr @.str.416, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.424 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\013test_stackinit: packed_static_all: target offset by %d\0A\00", [38 x i8] zeroinitializer }, align 32
@test_packed_static_all._entry_ptr.425 = internal global ptr @test_packed_static_all._entry.423, section ".printk_index", align 4
@test_packed_static_all._entry.426 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.427, ptr @.str.416, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.427 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\016test_stackinit: packed_static_all ok\0A\00", [56 x i8] zeroinitializer }, align 32
@test_packed_static_all._entry_ptr.428 = internal global ptr @test_packed_static_all._entry.426, section ".printk_index", align 4
@test_packed_static_all._entry.429 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.430, ptr @.str.416, ptr @.str.2, i32 377, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.430 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\014test_stackinit: packed_static_all %sFAIL (uninit bytes: %d)\0A\00", [33 x i8] zeroinitializer }, align 32
@test_packed_static_all._entry_ptr.431 = internal global ptr @test_packed_static_all._entry.429, section ".printk_index", align 4
@test_small_hole_dynamic_all._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.432, ptr @.str.433, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.432 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\013test_stackinit: small_hole_dynamic_all: leaf fill was not 0xFF!?\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.433 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"test_small_hole_dynamic_all\00", [36 x i8] zeroinitializer }, align 32
@test_small_hole_dynamic_all._entry_ptr = internal global ptr @test_small_hole_dynamic_all._entry, section ".printk_index", align 4
@test_small_hole_dynamic_all._entry.434 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.435, ptr @.str.433, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.435 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\013test_stackinit: small_hole_dynamic_all: stack fill missed target!?\0A\00", [58 x i8] zeroinitializer }, align 32
@test_small_hole_dynamic_all._entry_ptr.436 = internal global ptr @test_small_hole_dynamic_all._entry.434, section ".printk_index", align 4
@test_small_hole_dynamic_all._entry.437 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.438, ptr @.str.433, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.438 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\013test_stackinit: small_hole_dynamic_all: fill %zu wide\0A\00", [39 x i8] zeroinitializer }, align 32
@test_small_hole_dynamic_all._entry_ptr.439 = internal global ptr @test_small_hole_dynamic_all._entry.437, section ".printk_index", align 4
@test_small_hole_dynamic_all._entry.440 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.441, ptr @.str.433, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.441 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\013test_stackinit: small_hole_dynamic_all: target offset by %d\0A\00", [33 x i8] zeroinitializer }, align 32
@test_small_hole_dynamic_all._entry_ptr.442 = internal global ptr @test_small_hole_dynamic_all._entry.440, section ".printk_index", align 4
@test_small_hole_dynamic_all._entry.443 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.444, ptr @.str.433, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.444 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\016test_stackinit: small_hole_dynamic_all ok\0A\00", [51 x i8] zeroinitializer }, align 32
@test_small_hole_dynamic_all._entry_ptr.445 = internal global ptr @test_small_hole_dynamic_all._entry.443, section ".printk_index", align 4
@test_small_hole_dynamic_all._entry.446 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.447, ptr @.str.433, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.447 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\014test_stackinit: small_hole_dynamic_all %sFAIL (uninit bytes: %d)\0A\00", [60 x i8] zeroinitializer }, align 32
@test_small_hole_dynamic_all._entry_ptr.448 = internal global ptr @test_small_hole_dynamic_all._entry.446, section ".printk_index", align 4
@test_big_hole_dynamic_all._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.449, ptr @.str.450, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.449 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\013test_stackinit: big_hole_dynamic_all: leaf fill was not 0xFF!?\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.450 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"test_big_hole_dynamic_all\00", [38 x i8] zeroinitializer }, align 32
@test_big_hole_dynamic_all._entry_ptr = internal global ptr @test_big_hole_dynamic_all._entry, section ".printk_index", align 4
@test_big_hole_dynamic_all._entry.451 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.452, ptr @.str.450, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.452 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\013test_stackinit: big_hole_dynamic_all: stack fill missed target!?\0A\00", [60 x i8] zeroinitializer }, align 32
@test_big_hole_dynamic_all._entry_ptr.453 = internal global ptr @test_big_hole_dynamic_all._entry.451, section ".printk_index", align 4
@test_big_hole_dynamic_all._entry.454 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.455, ptr @.str.450, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.455 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"\013test_stackinit: big_hole_dynamic_all: fill %zu wide\0A\00", [41 x i8] zeroinitializer }, align 32
@test_big_hole_dynamic_all._entry_ptr.456 = internal global ptr @test_big_hole_dynamic_all._entry.454, section ".printk_index", align 4
@test_big_hole_dynamic_all._entry.457 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.458, ptr @.str.450, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.458 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\013test_stackinit: big_hole_dynamic_all: target offset by %d\0A\00", [35 x i8] zeroinitializer }, align 32
@test_big_hole_dynamic_all._entry_ptr.459 = internal global ptr @test_big_hole_dynamic_all._entry.457, section ".printk_index", align 4
@test_big_hole_dynamic_all._entry.460 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.461, ptr @.str.450, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.461 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\016test_stackinit: big_hole_dynamic_all ok\0A\00", [53 x i8] zeroinitializer }, align 32
@test_big_hole_dynamic_all._entry_ptr.462 = internal global ptr @test_big_hole_dynamic_all._entry.460, section ".printk_index", align 4
@test_big_hole_dynamic_all._entry.463 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.464, ptr @.str.450, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.464 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\014test_stackinit: big_hole_dynamic_all %sFAIL (uninit bytes: %d)\0A\00", [62 x i8] zeroinitializer }, align 32
@test_big_hole_dynamic_all._entry_ptr.465 = internal global ptr @test_big_hole_dynamic_all._entry.463, section ".printk_index", align 4
@test_trailing_hole_dynamic_all._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.466, ptr @.str.467, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.466 = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"\013test_stackinit: trailing_hole_dynamic_all: leaf fill was not 0xFF!?\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.467 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"test_trailing_hole_dynamic_all\00", [33 x i8] zeroinitializer }, align 32
@test_trailing_hole_dynamic_all._entry_ptr = internal global ptr @test_trailing_hole_dynamic_all._entry, section ".printk_index", align 4
@test_trailing_hole_dynamic_all._entry.468 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.469, ptr @.str.467, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.469 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\013test_stackinit: trailing_hole_dynamic_all: stack fill missed target!?\0A\00", [55 x i8] zeroinitializer }, align 32
@test_trailing_hole_dynamic_all._entry_ptr.470 = internal global ptr @test_trailing_hole_dynamic_all._entry.468, section ".printk_index", align 4
@test_trailing_hole_dynamic_all._entry.471 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.472, ptr @.str.467, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.472 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\013test_stackinit: trailing_hole_dynamic_all: fill %zu wide\0A\00", [36 x i8] zeroinitializer }, align 32
@test_trailing_hole_dynamic_all._entry_ptr.473 = internal global ptr @test_trailing_hole_dynamic_all._entry.471, section ".printk_index", align 4
@test_trailing_hole_dynamic_all._entry.474 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.475, ptr @.str.467, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.475 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\013test_stackinit: trailing_hole_dynamic_all: target offset by %d\0A\00", [62 x i8] zeroinitializer }, align 32
@test_trailing_hole_dynamic_all._entry_ptr.476 = internal global ptr @test_trailing_hole_dynamic_all._entry.474, section ".printk_index", align 4
@test_trailing_hole_dynamic_all._entry.477 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.478, ptr @.str.467, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.478 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\016test_stackinit: trailing_hole_dynamic_all ok\0A\00", [48 x i8] zeroinitializer }, align 32
@test_trailing_hole_dynamic_all._entry_ptr.479 = internal global ptr @test_trailing_hole_dynamic_all._entry.477, section ".printk_index", align 4
@test_trailing_hole_dynamic_all._entry.480 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.481, ptr @.str.467, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.481 = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"\014test_stackinit: trailing_hole_dynamic_all %sFAIL (uninit bytes: %d)\0A\00", [57 x i8] zeroinitializer }, align 32
@test_trailing_hole_dynamic_all._entry_ptr.482 = internal global ptr @test_trailing_hole_dynamic_all._entry.480, section ".printk_index", align 4
@test_packed_dynamic_all._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.483, ptr @.str.484, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.483 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\013test_stackinit: packed_dynamic_all: leaf fill was not 0xFF!?\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.484 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"test_packed_dynamic_all\00", [40 x i8] zeroinitializer }, align 32
@test_packed_dynamic_all._entry_ptr = internal global ptr @test_packed_dynamic_all._entry, section ".printk_index", align 4
@test_packed_dynamic_all._entry.485 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.486, ptr @.str.484, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.486 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\013test_stackinit: packed_dynamic_all: stack fill missed target!?\0A\00", [62 x i8] zeroinitializer }, align 32
@test_packed_dynamic_all._entry_ptr.487 = internal global ptr @test_packed_dynamic_all._entry.485, section ".printk_index", align 4
@test_packed_dynamic_all._entry.488 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.489, ptr @.str.484, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.489 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\013test_stackinit: packed_dynamic_all: fill %zu wide\0A\00", [43 x i8] zeroinitializer }, align 32
@test_packed_dynamic_all._entry_ptr.490 = internal global ptr @test_packed_dynamic_all._entry.488, section ".printk_index", align 4
@test_packed_dynamic_all._entry.491 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.492, ptr @.str.484, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.492 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013test_stackinit: packed_dynamic_all: target offset by %d\0A\00", [37 x i8] zeroinitializer }, align 32
@test_packed_dynamic_all._entry_ptr.493 = internal global ptr @test_packed_dynamic_all._entry.491, section ".printk_index", align 4
@test_packed_dynamic_all._entry.494 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.495, ptr @.str.484, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.495 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\016test_stackinit: packed_dynamic_all ok\0A\00", [55 x i8] zeroinitializer }, align 32
@test_packed_dynamic_all._entry_ptr.496 = internal global ptr @test_packed_dynamic_all._entry.494, section ".printk_index", align 4
@test_packed_dynamic_all._entry.497 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.498, ptr @.str.484, ptr @.str.2, i32 378, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.498 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\014test_stackinit: packed_dynamic_all %sFAIL (uninit bytes: %d)\0A\00", [32 x i8] zeroinitializer }, align 32
@test_packed_dynamic_all._entry_ptr.499 = internal global ptr @test_packed_dynamic_all._entry.497, section ".printk_index", align 4
@test_small_hole_runtime_partial._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.500, ptr @.str.501, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.500 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\013test_stackinit: small_hole_runtime_partial: leaf fill was not 0xFF!?\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.501 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"test_small_hole_runtime_partial\00", [32 x i8] zeroinitializer }, align 32
@test_small_hole_runtime_partial._entry_ptr = internal global ptr @test_small_hole_runtime_partial._entry, section ".printk_index", align 4
@test_small_hole_runtime_partial._entry.502 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.503, ptr @.str.501, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.503 = internal constant { [74 x i8], [54 x i8] } { [74 x i8] c"\013test_stackinit: small_hole_runtime_partial: stack fill missed target!?\0A\00", [54 x i8] zeroinitializer }, align 32
@test_small_hole_runtime_partial._entry_ptr.504 = internal global ptr @test_small_hole_runtime_partial._entry.502, section ".printk_index", align 4
@test_small_hole_runtime_partial._entry.505 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.506, ptr @.str.501, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.506 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\013test_stackinit: small_hole_runtime_partial: fill %zu wide\0A\00", [35 x i8] zeroinitializer }, align 32
@test_small_hole_runtime_partial._entry_ptr.507 = internal global ptr @test_small_hole_runtime_partial._entry.505, section ".printk_index", align 4
@test_small_hole_runtime_partial._entry.508 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.509, ptr @.str.501, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.509 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"\013test_stackinit: small_hole_runtime_partial: target offset by %d\0A\00", [61 x i8] zeroinitializer }, align 32
@test_small_hole_runtime_partial._entry_ptr.510 = internal global ptr @test_small_hole_runtime_partial._entry.508, section ".printk_index", align 4
@test_small_hole_runtime_partial._entry.511 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.512, ptr @.str.501, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.512 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\016test_stackinit: small_hole_runtime_partial ok\0A\00", [47 x i8] zeroinitializer }, align 32
@test_small_hole_runtime_partial._entry_ptr.513 = internal global ptr @test_small_hole_runtime_partial._entry.511, section ".printk_index", align 4
@test_small_hole_runtime_partial._entry.514 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.515, ptr @.str.501, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.515 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\014test_stackinit: small_hole_runtime_partial %sFAIL (uninit bytes: %d)\0A\00", [56 x i8] zeroinitializer }, align 32
@test_small_hole_runtime_partial._entry_ptr.516 = internal global ptr @test_small_hole_runtime_partial._entry.514, section ".printk_index", align 4
@test_big_hole_runtime_partial._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.517, ptr @.str.518, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.517 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\013test_stackinit: big_hole_runtime_partial: leaf fill was not 0xFF!?\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.518 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"test_big_hole_runtime_partial\00", [34 x i8] zeroinitializer }, align 32
@test_big_hole_runtime_partial._entry_ptr = internal global ptr @test_big_hole_runtime_partial._entry, section ".printk_index", align 4
@test_big_hole_runtime_partial._entry.519 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.520, ptr @.str.518, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.520 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\013test_stackinit: big_hole_runtime_partial: stack fill missed target!?\0A\00", [56 x i8] zeroinitializer }, align 32
@test_big_hole_runtime_partial._entry_ptr.521 = internal global ptr @test_big_hole_runtime_partial._entry.519, section ".printk_index", align 4
@test_big_hole_runtime_partial._entry.522 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.523, ptr @.str.518, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.523 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013test_stackinit: big_hole_runtime_partial: fill %zu wide\0A\00", [37 x i8] zeroinitializer }, align 32
@test_big_hole_runtime_partial._entry_ptr.524 = internal global ptr @test_big_hole_runtime_partial._entry.522, section ".printk_index", align 4
@test_big_hole_runtime_partial._entry.525 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.526, ptr @.str.518, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.526 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\013test_stackinit: big_hole_runtime_partial: target offset by %d\0A\00", [63 x i8] zeroinitializer }, align 32
@test_big_hole_runtime_partial._entry_ptr.527 = internal global ptr @test_big_hole_runtime_partial._entry.525, section ".printk_index", align 4
@test_big_hole_runtime_partial._entry.528 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.529, ptr @.str.518, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.529 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"\016test_stackinit: big_hole_runtime_partial ok\0A\00", [49 x i8] zeroinitializer }, align 32
@test_big_hole_runtime_partial._entry_ptr.530 = internal global ptr @test_big_hole_runtime_partial._entry.528, section ".printk_index", align 4
@test_big_hole_runtime_partial._entry.531 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.532, ptr @.str.518, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.532 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\014test_stackinit: big_hole_runtime_partial %sFAIL (uninit bytes: %d)\0A\00", [58 x i8] zeroinitializer }, align 32
@test_big_hole_runtime_partial._entry_ptr.533 = internal global ptr @test_big_hole_runtime_partial._entry.531, section ".printk_index", align 4
@test_trailing_hole_runtime_partial._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.534, ptr @.str.535, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.534 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"\013test_stackinit: trailing_hole_runtime_partial: leaf fill was not 0xFF!?\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.535 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"test_trailing_hole_runtime_partial\00", [61 x i8] zeroinitializer }, align 32
@test_trailing_hole_runtime_partial._entry_ptr = internal global ptr @test_trailing_hole_runtime_partial._entry, section ".printk_index", align 4
@test_trailing_hole_runtime_partial._entry.536 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.537, ptr @.str.535, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.537 = internal constant { [77 x i8], [51 x i8] } { [77 x i8] c"\013test_stackinit: trailing_hole_runtime_partial: stack fill missed target!?\0A\00", [51 x i8] zeroinitializer }, align 32
@test_trailing_hole_runtime_partial._entry_ptr.538 = internal global ptr @test_trailing_hole_runtime_partial._entry.536, section ".printk_index", align 4
@test_trailing_hole_runtime_partial._entry.539 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.540, ptr @.str.535, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.540 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\013test_stackinit: trailing_hole_runtime_partial: fill %zu wide\0A\00", [32 x i8] zeroinitializer }, align 32
@test_trailing_hole_runtime_partial._entry_ptr.541 = internal global ptr @test_trailing_hole_runtime_partial._entry.539, section ".printk_index", align 4
@test_trailing_hole_runtime_partial._entry.542 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.543, ptr @.str.535, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.543 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\013test_stackinit: trailing_hole_runtime_partial: target offset by %d\0A\00", [58 x i8] zeroinitializer }, align 32
@test_trailing_hole_runtime_partial._entry_ptr.544 = internal global ptr @test_trailing_hole_runtime_partial._entry.542, section ".printk_index", align 4
@test_trailing_hole_runtime_partial._entry.545 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.546, ptr @.str.535, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.546 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\016test_stackinit: trailing_hole_runtime_partial ok\0A\00", [44 x i8] zeroinitializer }, align 32
@test_trailing_hole_runtime_partial._entry_ptr.547 = internal global ptr @test_trailing_hole_runtime_partial._entry.545, section ".printk_index", align 4
@test_trailing_hole_runtime_partial._entry.548 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.549, ptr @.str.535, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.549 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"\014test_stackinit: trailing_hole_runtime_partial %sFAIL (uninit bytes: %d)\0A\00", [53 x i8] zeroinitializer }, align 32
@test_trailing_hole_runtime_partial._entry_ptr.550 = internal global ptr @test_trailing_hole_runtime_partial._entry.548, section ".printk_index", align 4
@test_packed_runtime_partial._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.551, ptr @.str.552, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.551 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\013test_stackinit: packed_runtime_partial: leaf fill was not 0xFF!?\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.552 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"test_packed_runtime_partial\00", [36 x i8] zeroinitializer }, align 32
@test_packed_runtime_partial._entry_ptr = internal global ptr @test_packed_runtime_partial._entry, section ".printk_index", align 4
@test_packed_runtime_partial._entry.553 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.554, ptr @.str.552, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.554 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\013test_stackinit: packed_runtime_partial: stack fill missed target!?\0A\00", [58 x i8] zeroinitializer }, align 32
@test_packed_runtime_partial._entry_ptr.555 = internal global ptr @test_packed_runtime_partial._entry.553, section ".printk_index", align 4
@test_packed_runtime_partial._entry.556 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.557, ptr @.str.552, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.557 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\013test_stackinit: packed_runtime_partial: fill %zu wide\0A\00", [39 x i8] zeroinitializer }, align 32
@test_packed_runtime_partial._entry_ptr.558 = internal global ptr @test_packed_runtime_partial._entry.556, section ".printk_index", align 4
@test_packed_runtime_partial._entry.559 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.560, ptr @.str.552, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.560 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\013test_stackinit: packed_runtime_partial: target offset by %d\0A\00", [33 x i8] zeroinitializer }, align 32
@test_packed_runtime_partial._entry_ptr.561 = internal global ptr @test_packed_runtime_partial._entry.559, section ".printk_index", align 4
@test_packed_runtime_partial._entry.562 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.563, ptr @.str.552, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.563 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\016test_stackinit: packed_runtime_partial ok\0A\00", [51 x i8] zeroinitializer }, align 32
@test_packed_runtime_partial._entry_ptr.564 = internal global ptr @test_packed_runtime_partial._entry.562, section ".printk_index", align 4
@test_packed_runtime_partial._entry.565 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.566, ptr @.str.552, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.566 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\014test_stackinit: packed_runtime_partial %sFAIL (uninit bytes: %d)\0A\00", [60 x i8] zeroinitializer }, align 32
@test_packed_runtime_partial._entry_ptr.567 = internal global ptr @test_packed_runtime_partial._entry.565, section ".printk_index", align 4
@test_small_hole_runtime_all._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.568, ptr @.str.569, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.568 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\013test_stackinit: small_hole_runtime_all: leaf fill was not 0xFF!?\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.569 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"test_small_hole_runtime_all\00", [36 x i8] zeroinitializer }, align 32
@test_small_hole_runtime_all._entry_ptr = internal global ptr @test_small_hole_runtime_all._entry, section ".printk_index", align 4
@test_small_hole_runtime_all._entry.570 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.571, ptr @.str.569, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.571 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\013test_stackinit: small_hole_runtime_all: stack fill missed target!?\0A\00", [58 x i8] zeroinitializer }, align 32
@test_small_hole_runtime_all._entry_ptr.572 = internal global ptr @test_small_hole_runtime_all._entry.570, section ".printk_index", align 4
@test_small_hole_runtime_all._entry.573 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.574, ptr @.str.569, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.574 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\013test_stackinit: small_hole_runtime_all: fill %zu wide\0A\00", [39 x i8] zeroinitializer }, align 32
@test_small_hole_runtime_all._entry_ptr.575 = internal global ptr @test_small_hole_runtime_all._entry.573, section ".printk_index", align 4
@test_small_hole_runtime_all._entry.576 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.577, ptr @.str.569, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.577 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\013test_stackinit: small_hole_runtime_all: target offset by %d\0A\00", [33 x i8] zeroinitializer }, align 32
@test_small_hole_runtime_all._entry_ptr.578 = internal global ptr @test_small_hole_runtime_all._entry.576, section ".printk_index", align 4
@test_small_hole_runtime_all._entry.579 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.580, ptr @.str.569, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.580 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\016test_stackinit: small_hole_runtime_all ok\0A\00", [51 x i8] zeroinitializer }, align 32
@test_small_hole_runtime_all._entry_ptr.581 = internal global ptr @test_small_hole_runtime_all._entry.579, section ".printk_index", align 4
@test_small_hole_runtime_all._entry.582 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.583, ptr @.str.569, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.583 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\014test_stackinit: small_hole_runtime_all %sFAIL (uninit bytes: %d)\0A\00", [60 x i8] zeroinitializer }, align 32
@test_small_hole_runtime_all._entry_ptr.584 = internal global ptr @test_small_hole_runtime_all._entry.582, section ".printk_index", align 4
@test_big_hole_runtime_all._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.585, ptr @.str.586, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.585 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\013test_stackinit: big_hole_runtime_all: leaf fill was not 0xFF!?\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.586 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"test_big_hole_runtime_all\00", [38 x i8] zeroinitializer }, align 32
@test_big_hole_runtime_all._entry_ptr = internal global ptr @test_big_hole_runtime_all._entry, section ".printk_index", align 4
@test_big_hole_runtime_all._entry.587 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.588, ptr @.str.586, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.588 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\013test_stackinit: big_hole_runtime_all: stack fill missed target!?\0A\00", [60 x i8] zeroinitializer }, align 32
@test_big_hole_runtime_all._entry_ptr.589 = internal global ptr @test_big_hole_runtime_all._entry.587, section ".printk_index", align 4
@test_big_hole_runtime_all._entry.590 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.591, ptr @.str.586, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.591 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"\013test_stackinit: big_hole_runtime_all: fill %zu wide\0A\00", [41 x i8] zeroinitializer }, align 32
@test_big_hole_runtime_all._entry_ptr.592 = internal global ptr @test_big_hole_runtime_all._entry.590, section ".printk_index", align 4
@test_big_hole_runtime_all._entry.593 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.594, ptr @.str.586, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.594 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\013test_stackinit: big_hole_runtime_all: target offset by %d\0A\00", [35 x i8] zeroinitializer }, align 32
@test_big_hole_runtime_all._entry_ptr.595 = internal global ptr @test_big_hole_runtime_all._entry.593, section ".printk_index", align 4
@test_big_hole_runtime_all._entry.596 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.597, ptr @.str.586, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.597 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\016test_stackinit: big_hole_runtime_all ok\0A\00", [53 x i8] zeroinitializer }, align 32
@test_big_hole_runtime_all._entry_ptr.598 = internal global ptr @test_big_hole_runtime_all._entry.596, section ".printk_index", align 4
@test_big_hole_runtime_all._entry.599 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.600, ptr @.str.586, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.600 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\014test_stackinit: big_hole_runtime_all %sFAIL (uninit bytes: %d)\0A\00", [62 x i8] zeroinitializer }, align 32
@test_big_hole_runtime_all._entry_ptr.601 = internal global ptr @test_big_hole_runtime_all._entry.599, section ".printk_index", align 4
@test_trailing_hole_runtime_all._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.602, ptr @.str.603, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.602 = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"\013test_stackinit: trailing_hole_runtime_all: leaf fill was not 0xFF!?\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.603 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"test_trailing_hole_runtime_all\00", [33 x i8] zeroinitializer }, align 32
@test_trailing_hole_runtime_all._entry_ptr = internal global ptr @test_trailing_hole_runtime_all._entry, section ".printk_index", align 4
@test_trailing_hole_runtime_all._entry.604 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.605, ptr @.str.603, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.605 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\013test_stackinit: trailing_hole_runtime_all: stack fill missed target!?\0A\00", [55 x i8] zeroinitializer }, align 32
@test_trailing_hole_runtime_all._entry_ptr.606 = internal global ptr @test_trailing_hole_runtime_all._entry.604, section ".printk_index", align 4
@test_trailing_hole_runtime_all._entry.607 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.608, ptr @.str.603, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.608 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\013test_stackinit: trailing_hole_runtime_all: fill %zu wide\0A\00", [36 x i8] zeroinitializer }, align 32
@test_trailing_hole_runtime_all._entry_ptr.609 = internal global ptr @test_trailing_hole_runtime_all._entry.607, section ".printk_index", align 4
@test_trailing_hole_runtime_all._entry.610 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.611, ptr @.str.603, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.611 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\013test_stackinit: trailing_hole_runtime_all: target offset by %d\0A\00", [62 x i8] zeroinitializer }, align 32
@test_trailing_hole_runtime_all._entry_ptr.612 = internal global ptr @test_trailing_hole_runtime_all._entry.610, section ".printk_index", align 4
@test_trailing_hole_runtime_all._entry.613 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.614, ptr @.str.603, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.614 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\016test_stackinit: trailing_hole_runtime_all ok\0A\00", [48 x i8] zeroinitializer }, align 32
@test_trailing_hole_runtime_all._entry_ptr.615 = internal global ptr @test_trailing_hole_runtime_all._entry.613, section ".printk_index", align 4
@test_trailing_hole_runtime_all._entry.616 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.617, ptr @.str.603, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.617 = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"\014test_stackinit: trailing_hole_runtime_all %sFAIL (uninit bytes: %d)\0A\00", [57 x i8] zeroinitializer }, align 32
@test_trailing_hole_runtime_all._entry_ptr.618 = internal global ptr @test_trailing_hole_runtime_all._entry.616, section ".printk_index", align 4
@test_packed_runtime_all._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.619, ptr @.str.620, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.619 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\013test_stackinit: packed_runtime_all: leaf fill was not 0xFF!?\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.620 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"test_packed_runtime_all\00", [40 x i8] zeroinitializer }, align 32
@test_packed_runtime_all._entry_ptr = internal global ptr @test_packed_runtime_all._entry, section ".printk_index", align 4
@test_packed_runtime_all._entry.621 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.622, ptr @.str.620, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.622 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\013test_stackinit: packed_runtime_all: stack fill missed target!?\0A\00", [62 x i8] zeroinitializer }, align 32
@test_packed_runtime_all._entry_ptr.623 = internal global ptr @test_packed_runtime_all._entry.621, section ".printk_index", align 4
@test_packed_runtime_all._entry.624 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.625, ptr @.str.620, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.625 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\013test_stackinit: packed_runtime_all: fill %zu wide\0A\00", [43 x i8] zeroinitializer }, align 32
@test_packed_runtime_all._entry_ptr.626 = internal global ptr @test_packed_runtime_all._entry.624, section ".printk_index", align 4
@test_packed_runtime_all._entry.627 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.628, ptr @.str.620, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.628 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013test_stackinit: packed_runtime_all: target offset by %d\0A\00", [37 x i8] zeroinitializer }, align 32
@test_packed_runtime_all._entry_ptr.629 = internal global ptr @test_packed_runtime_all._entry.627, section ".printk_index", align 4
@test_packed_runtime_all._entry.630 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.631, ptr @.str.620, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.631 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\016test_stackinit: packed_runtime_all ok\0A\00", [55 x i8] zeroinitializer }, align 32
@test_packed_runtime_all._entry_ptr.632 = internal global ptr @test_packed_runtime_all._entry.630, section ".printk_index", align 4
@test_packed_runtime_all._entry.633 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.634, ptr @.str.620, ptr @.str.2, i32 379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.634 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\014test_stackinit: packed_runtime_all %sFAIL (uninit bytes: %d)\0A\00", [32 x i8] zeroinitializer }, align 32
@test_packed_runtime_all._entry_ptr.635 = internal global ptr @test_packed_runtime_all._entry.633, section ".printk_index", align 4
@test_small_hole_assigned_static_partial._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.636, ptr @.str.637, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.636 = internal constant { [80 x i8], [48 x i8] } { [80 x i8] c"\013test_stackinit: small_hole_assigned_static_partial: leaf fill was not 0xFF!?\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.637 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"test_small_hole_assigned_static_partial\00", [56 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_static_partial._entry_ptr = internal global ptr @test_small_hole_assigned_static_partial._entry, section ".printk_index", align 4
@test_small_hole_assigned_static_partial._entry.638 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.639, ptr @.str.637, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.639 = internal constant { [82 x i8], [46 x i8] } { [82 x i8] c"\013test_stackinit: small_hole_assigned_static_partial: stack fill missed target!?\0A\00", [46 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_static_partial._entry_ptr.640 = internal global ptr @test_small_hole_assigned_static_partial._entry.638, section ".printk_index", align 4
@test_small_hole_assigned_static_partial._entry.641 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.642, ptr @.str.637, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.642 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"\013test_stackinit: small_hole_assigned_static_partial: fill %zu wide\0A\00", [59 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_static_partial._entry_ptr.643 = internal global ptr @test_small_hole_assigned_static_partial._entry.641, section ".printk_index", align 4
@test_small_hole_assigned_static_partial._entry.644 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.645, ptr @.str.637, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.645 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"\013test_stackinit: small_hole_assigned_static_partial: target offset by %d\0A\00", [53 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_static_partial._entry_ptr.646 = internal global ptr @test_small_hole_assigned_static_partial._entry.644, section ".printk_index", align 4
@test_small_hole_assigned_static_partial._entry.647 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.648, ptr @.str.637, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.648 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\016test_stackinit: small_hole_assigned_static_partial ok\0A\00", [39 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_static_partial._entry_ptr.649 = internal global ptr @test_small_hole_assigned_static_partial._entry.647, section ".printk_index", align 4
@test_small_hole_assigned_static_partial._entry.650 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.651, ptr @.str.637, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.651 = internal constant { [80 x i8], [48 x i8] } { [80 x i8] c"\014test_stackinit: small_hole_assigned_static_partial %sFAIL (uninit bytes: %d)\0A\00", [48 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_static_partial._entry_ptr.652 = internal global ptr @test_small_hole_assigned_static_partial._entry.650, section ".printk_index", align 4
@test_big_hole_assigned_static_partial._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.653, ptr @.str.654, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.653 = internal constant { [78 x i8], [50 x i8] } { [78 x i8] c"\013test_stackinit: big_hole_assigned_static_partial: leaf fill was not 0xFF!?\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.654 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"test_big_hole_assigned_static_partial\00", [58 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_static_partial._entry_ptr = internal global ptr @test_big_hole_assigned_static_partial._entry, section ".printk_index", align 4
@test_big_hole_assigned_static_partial._entry.655 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.656, ptr @.str.654, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.656 = internal constant { [80 x i8], [48 x i8] } { [80 x i8] c"\013test_stackinit: big_hole_assigned_static_partial: stack fill missed target!?\0A\00", [48 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_static_partial._entry_ptr.657 = internal global ptr @test_big_hole_assigned_static_partial._entry.655, section ".printk_index", align 4
@test_big_hole_assigned_static_partial._entry.658 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.659, ptr @.str.654, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.659 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"\013test_stackinit: big_hole_assigned_static_partial: fill %zu wide\0A\00", [61 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_static_partial._entry_ptr.660 = internal global ptr @test_big_hole_assigned_static_partial._entry.658, section ".printk_index", align 4
@test_big_hole_assigned_static_partial._entry.661 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.662, ptr @.str.654, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.662 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\013test_stackinit: big_hole_assigned_static_partial: target offset by %d\0A\00", [55 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_static_partial._entry_ptr.663 = internal global ptr @test_big_hole_assigned_static_partial._entry.661, section ".printk_index", align 4
@test_big_hole_assigned_static_partial._entry.664 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.665, ptr @.str.654, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.665 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"\016test_stackinit: big_hole_assigned_static_partial ok\0A\00", [41 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_static_partial._entry_ptr.666 = internal global ptr @test_big_hole_assigned_static_partial._entry.664, section ".printk_index", align 4
@test_big_hole_assigned_static_partial._entry.667 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.668, ptr @.str.654, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.668 = internal constant { [78 x i8], [50 x i8] } { [78 x i8] c"\014test_stackinit: big_hole_assigned_static_partial %sFAIL (uninit bytes: %d)\0A\00", [50 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_static_partial._entry_ptr.669 = internal global ptr @test_big_hole_assigned_static_partial._entry.667, section ".printk_index", align 4
@test_trailing_hole_assigned_static_partial._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.670, ptr @.str.671, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.670 = internal constant { [83 x i8], [45 x i8] } { [83 x i8] c"\013test_stackinit: trailing_hole_assigned_static_partial: leaf fill was not 0xFF!?\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.671 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"test_trailing_hole_assigned_static_partial\00", [53 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_static_partial._entry_ptr = internal global ptr @test_trailing_hole_assigned_static_partial._entry, section ".printk_index", align 4
@test_trailing_hole_assigned_static_partial._entry.672 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.673, ptr @.str.671, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.673 = internal constant { [85 x i8], [43 x i8] } { [85 x i8] c"\013test_stackinit: trailing_hole_assigned_static_partial: stack fill missed target!?\0A\00", [43 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_static_partial._entry_ptr.674 = internal global ptr @test_trailing_hole_assigned_static_partial._entry.672, section ".printk_index", align 4
@test_trailing_hole_assigned_static_partial._entry.675 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.676, ptr @.str.671, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.676 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\013test_stackinit: trailing_hole_assigned_static_partial: fill %zu wide\0A\00", [56 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_static_partial._entry_ptr.677 = internal global ptr @test_trailing_hole_assigned_static_partial._entry.675, section ".printk_index", align 4
@test_trailing_hole_assigned_static_partial._entry.678 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.679, ptr @.str.671, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.679 = internal constant { [78 x i8], [50 x i8] } { [78 x i8] c"\013test_stackinit: trailing_hole_assigned_static_partial: target offset by %d\0A\00", [50 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_static_partial._entry_ptr.680 = internal global ptr @test_trailing_hole_assigned_static_partial._entry.678, section ".printk_index", align 4
@test_trailing_hole_assigned_static_partial._entry.681 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.682, ptr @.str.671, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.682 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\016test_stackinit: trailing_hole_assigned_static_partial ok\0A\00", [36 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_static_partial._entry_ptr.683 = internal global ptr @test_trailing_hole_assigned_static_partial._entry.681, section ".printk_index", align 4
@test_trailing_hole_assigned_static_partial._entry.684 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.685, ptr @.str.671, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.685 = internal constant { [83 x i8], [45 x i8] } { [83 x i8] c"\014test_stackinit: trailing_hole_assigned_static_partial %sFAIL (uninit bytes: %d)\0A\00", [45 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_static_partial._entry_ptr.686 = internal global ptr @test_trailing_hole_assigned_static_partial._entry.684, section ".printk_index", align 4
@test_packed_assigned_static_partial._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.687, ptr @.str.688, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.687 = internal constant { [76 x i8], [52 x i8] } { [76 x i8] c"\013test_stackinit: packed_assigned_static_partial: leaf fill was not 0xFF!?\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.688 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"test_packed_assigned_static_partial\00", [60 x i8] zeroinitializer }, align 32
@test_packed_assigned_static_partial._entry_ptr = internal global ptr @test_packed_assigned_static_partial._entry, section ".printk_index", align 4
@test_packed_assigned_static_partial._entry.689 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.690, ptr @.str.688, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.690 = internal constant { [78 x i8], [50 x i8] } { [78 x i8] c"\013test_stackinit: packed_assigned_static_partial: stack fill missed target!?\0A\00", [50 x i8] zeroinitializer }, align 32
@test_packed_assigned_static_partial._entry_ptr.691 = internal global ptr @test_packed_assigned_static_partial._entry.689, section ".printk_index", align 4
@test_packed_assigned_static_partial._entry.692 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.693, ptr @.str.688, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.693 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\013test_stackinit: packed_assigned_static_partial: fill %zu wide\0A\00", [63 x i8] zeroinitializer }, align 32
@test_packed_assigned_static_partial._entry_ptr.694 = internal global ptr @test_packed_assigned_static_partial._entry.692, section ".printk_index", align 4
@test_packed_assigned_static_partial._entry.695 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.696, ptr @.str.688, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.696 = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"\013test_stackinit: packed_assigned_static_partial: target offset by %d\0A\00", [57 x i8] zeroinitializer }, align 32
@test_packed_assigned_static_partial._entry_ptr.697 = internal global ptr @test_packed_assigned_static_partial._entry.695, section ".printk_index", align 4
@test_packed_assigned_static_partial._entry.698 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.699, ptr @.str.688, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.699 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\016test_stackinit: packed_assigned_static_partial ok\0A\00", [43 x i8] zeroinitializer }, align 32
@test_packed_assigned_static_partial._entry_ptr.700 = internal global ptr @test_packed_assigned_static_partial._entry.698, section ".printk_index", align 4
@test_packed_assigned_static_partial._entry.701 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.702, ptr @.str.688, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.702 = internal constant { [76 x i8], [52 x i8] } { [76 x i8] c"\014test_stackinit: packed_assigned_static_partial %sFAIL (uninit bytes: %d)\0A\00", [52 x i8] zeroinitializer }, align 32
@test_packed_assigned_static_partial._entry_ptr.703 = internal global ptr @test_packed_assigned_static_partial._entry.701, section ".printk_index", align 4
@test_small_hole_assigned_static_all._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.704, ptr @.str.705, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.704 = internal constant { [76 x i8], [52 x i8] } { [76 x i8] c"\013test_stackinit: small_hole_assigned_static_all: leaf fill was not 0xFF!?\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.705 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"test_small_hole_assigned_static_all\00", [60 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_static_all._entry_ptr = internal global ptr @test_small_hole_assigned_static_all._entry, section ".printk_index", align 4
@test_small_hole_assigned_static_all._entry.706 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.707, ptr @.str.705, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.707 = internal constant { [78 x i8], [50 x i8] } { [78 x i8] c"\013test_stackinit: small_hole_assigned_static_all: stack fill missed target!?\0A\00", [50 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_static_all._entry_ptr.708 = internal global ptr @test_small_hole_assigned_static_all._entry.706, section ".printk_index", align 4
@test_small_hole_assigned_static_all._entry.709 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.710, ptr @.str.705, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.710 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\013test_stackinit: small_hole_assigned_static_all: fill %zu wide\0A\00", [63 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_static_all._entry_ptr.711 = internal global ptr @test_small_hole_assigned_static_all._entry.709, section ".printk_index", align 4
@test_small_hole_assigned_static_all._entry.712 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.713, ptr @.str.705, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.713 = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"\013test_stackinit: small_hole_assigned_static_all: target offset by %d\0A\00", [57 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_static_all._entry_ptr.714 = internal global ptr @test_small_hole_assigned_static_all._entry.712, section ".printk_index", align 4
@test_small_hole_assigned_static_all._entry.715 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.716, ptr @.str.705, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.716 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\016test_stackinit: small_hole_assigned_static_all ok\0A\00", [43 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_static_all._entry_ptr.717 = internal global ptr @test_small_hole_assigned_static_all._entry.715, section ".printk_index", align 4
@test_small_hole_assigned_static_all._entry.718 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.719, ptr @.str.705, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.719 = internal constant { [76 x i8], [52 x i8] } { [76 x i8] c"\014test_stackinit: small_hole_assigned_static_all %sFAIL (uninit bytes: %d)\0A\00", [52 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_static_all._entry_ptr.720 = internal global ptr @test_small_hole_assigned_static_all._entry.718, section ".printk_index", align 4
@test_big_hole_assigned_static_all._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.721, ptr @.str.722, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.721 = internal constant { [74 x i8], [54 x i8] } { [74 x i8] c"\013test_stackinit: big_hole_assigned_static_all: leaf fill was not 0xFF!?\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.722 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"test_big_hole_assigned_static_all\00", [62 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_static_all._entry_ptr = internal global ptr @test_big_hole_assigned_static_all._entry, section ".printk_index", align 4
@test_big_hole_assigned_static_all._entry.723 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.724, ptr @.str.722, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.724 = internal constant { [76 x i8], [52 x i8] } { [76 x i8] c"\013test_stackinit: big_hole_assigned_static_all: stack fill missed target!?\0A\00", [52 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_static_all._entry_ptr.725 = internal global ptr @test_big_hole_assigned_static_all._entry.723, section ".printk_index", align 4
@test_big_hole_assigned_static_all._entry.726 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.727, ptr @.str.722, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.727 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\013test_stackinit: big_hole_assigned_static_all: fill %zu wide\0A\00", [33 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_static_all._entry_ptr.728 = internal global ptr @test_big_hole_assigned_static_all._entry.726, section ".printk_index", align 4
@test_big_hole_assigned_static_all._entry.729 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.730, ptr @.str.722, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.730 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"\013test_stackinit: big_hole_assigned_static_all: target offset by %d\0A\00", [59 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_static_all._entry_ptr.731 = internal global ptr @test_big_hole_assigned_static_all._entry.729, section ".printk_index", align 4
@test_big_hole_assigned_static_all._entry.732 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.733, ptr @.str.722, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.733 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\016test_stackinit: big_hole_assigned_static_all ok\0A\00", [45 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_static_all._entry_ptr.734 = internal global ptr @test_big_hole_assigned_static_all._entry.732, section ".printk_index", align 4
@test_big_hole_assigned_static_all._entry.735 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.736, ptr @.str.722, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.736 = internal constant { [74 x i8], [54 x i8] } { [74 x i8] c"\014test_stackinit: big_hole_assigned_static_all %sFAIL (uninit bytes: %d)\0A\00", [54 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_static_all._entry_ptr.737 = internal global ptr @test_big_hole_assigned_static_all._entry.735, section ".printk_index", align 4
@test_trailing_hole_assigned_static_all._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.738, ptr @.str.739, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.738 = internal constant { [79 x i8], [49 x i8] } { [79 x i8] c"\013test_stackinit: trailing_hole_assigned_static_all: leaf fill was not 0xFF!?\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.739 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"test_trailing_hole_assigned_static_all\00", [57 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_static_all._entry_ptr = internal global ptr @test_trailing_hole_assigned_static_all._entry, section ".printk_index", align 4
@test_trailing_hole_assigned_static_all._entry.740 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.741, ptr @.str.739, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.741 = internal constant { [81 x i8], [47 x i8] } { [81 x i8] c"\013test_stackinit: trailing_hole_assigned_static_all: stack fill missed target!?\0A\00", [47 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_static_all._entry_ptr.742 = internal global ptr @test_trailing_hole_assigned_static_all._entry.740, section ".printk_index", align 4
@test_trailing_hole_assigned_static_all._entry.743 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.744, ptr @.str.739, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.744 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\013test_stackinit: trailing_hole_assigned_static_all: fill %zu wide\0A\00", [60 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_static_all._entry_ptr.745 = internal global ptr @test_trailing_hole_assigned_static_all._entry.743, section ".printk_index", align 4
@test_trailing_hole_assigned_static_all._entry.746 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.747, ptr @.str.739, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.747 = internal constant { [74 x i8], [54 x i8] } { [74 x i8] c"\013test_stackinit: trailing_hole_assigned_static_all: target offset by %d\0A\00", [54 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_static_all._entry_ptr.748 = internal global ptr @test_trailing_hole_assigned_static_all._entry.746, section ".printk_index", align 4
@test_trailing_hole_assigned_static_all._entry.749 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.750, ptr @.str.739, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.750 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\016test_stackinit: trailing_hole_assigned_static_all ok\0A\00", [40 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_static_all._entry_ptr.751 = internal global ptr @test_trailing_hole_assigned_static_all._entry.749, section ".printk_index", align 4
@test_trailing_hole_assigned_static_all._entry.752 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.753, ptr @.str.739, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.753 = internal constant { [79 x i8], [49 x i8] } { [79 x i8] c"\014test_stackinit: trailing_hole_assigned_static_all %sFAIL (uninit bytes: %d)\0A\00", [49 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_static_all._entry_ptr.754 = internal global ptr @test_trailing_hole_assigned_static_all._entry.752, section ".printk_index", align 4
@test_packed_assigned_static_all._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.755, ptr @.str.756, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.755 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\013test_stackinit: packed_assigned_static_all: leaf fill was not 0xFF!?\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.756 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"test_packed_assigned_static_all\00", [32 x i8] zeroinitializer }, align 32
@test_packed_assigned_static_all._entry_ptr = internal global ptr @test_packed_assigned_static_all._entry, section ".printk_index", align 4
@test_packed_assigned_static_all._entry.757 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.758, ptr @.str.756, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.758 = internal constant { [74 x i8], [54 x i8] } { [74 x i8] c"\013test_stackinit: packed_assigned_static_all: stack fill missed target!?\0A\00", [54 x i8] zeroinitializer }, align 32
@test_packed_assigned_static_all._entry_ptr.759 = internal global ptr @test_packed_assigned_static_all._entry.757, section ".printk_index", align 4
@test_packed_assigned_static_all._entry.760 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.761, ptr @.str.756, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.761 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\013test_stackinit: packed_assigned_static_all: fill %zu wide\0A\00", [35 x i8] zeroinitializer }, align 32
@test_packed_assigned_static_all._entry_ptr.762 = internal global ptr @test_packed_assigned_static_all._entry.760, section ".printk_index", align 4
@test_packed_assigned_static_all._entry.763 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.764, ptr @.str.756, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.764 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"\013test_stackinit: packed_assigned_static_all: target offset by %d\0A\00", [61 x i8] zeroinitializer }, align 32
@test_packed_assigned_static_all._entry_ptr.765 = internal global ptr @test_packed_assigned_static_all._entry.763, section ".printk_index", align 4
@test_packed_assigned_static_all._entry.766 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.767, ptr @.str.756, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.767 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\016test_stackinit: packed_assigned_static_all ok\0A\00", [47 x i8] zeroinitializer }, align 32
@test_packed_assigned_static_all._entry_ptr.768 = internal global ptr @test_packed_assigned_static_all._entry.766, section ".printk_index", align 4
@test_packed_assigned_static_all._entry.769 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.770, ptr @.str.756, ptr @.str.2, i32 380, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.770 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\014test_stackinit: packed_assigned_static_all %sFAIL (uninit bytes: %d)\0A\00", [56 x i8] zeroinitializer }, align 32
@test_packed_assigned_static_all._entry_ptr.771 = internal global ptr @test_packed_assigned_static_all._entry.769, section ".printk_index", align 4
@test_small_hole_assigned_dynamic_all._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.772, ptr @.str.773, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.772 = internal constant { [77 x i8], [51 x i8] } { [77 x i8] c"\013test_stackinit: small_hole_assigned_dynamic_all: leaf fill was not 0xFF!?\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.773 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"test_small_hole_assigned_dynamic_all\00", [59 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_dynamic_all._entry_ptr = internal global ptr @test_small_hole_assigned_dynamic_all._entry, section ".printk_index", align 4
@test_small_hole_assigned_dynamic_all._entry.774 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.775, ptr @.str.773, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.775 = internal constant { [79 x i8], [49 x i8] } { [79 x i8] c"\013test_stackinit: small_hole_assigned_dynamic_all: stack fill missed target!?\0A\00", [49 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_dynamic_all._entry_ptr.776 = internal global ptr @test_small_hole_assigned_dynamic_all._entry.774, section ".printk_index", align 4
@test_small_hole_assigned_dynamic_all._entry.777 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.778, ptr @.str.773, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.778 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\013test_stackinit: small_hole_assigned_dynamic_all: fill %zu wide\0A\00", [62 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_dynamic_all._entry_ptr.779 = internal global ptr @test_small_hole_assigned_dynamic_all._entry.777, section ".printk_index", align 4
@test_small_hole_assigned_dynamic_all._entry.780 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.781, ptr @.str.773, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.781 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\013test_stackinit: small_hole_assigned_dynamic_all: target offset by %d\0A\00", [56 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_dynamic_all._entry_ptr.782 = internal global ptr @test_small_hole_assigned_dynamic_all._entry.780, section ".printk_index", align 4
@test_small_hole_assigned_dynamic_all._entry.783 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.784, ptr @.str.773, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.784 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\016test_stackinit: small_hole_assigned_dynamic_all ok\0A\00", [42 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_dynamic_all._entry_ptr.785 = internal global ptr @test_small_hole_assigned_dynamic_all._entry.783, section ".printk_index", align 4
@test_small_hole_assigned_dynamic_all._entry.786 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.787, ptr @.str.773, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.787 = internal constant { [77 x i8], [51 x i8] } { [77 x i8] c"\014test_stackinit: small_hole_assigned_dynamic_all %sFAIL (uninit bytes: %d)\0A\00", [51 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_dynamic_all._entry_ptr.788 = internal global ptr @test_small_hole_assigned_dynamic_all._entry.786, section ".printk_index", align 4
@test_big_hole_assigned_dynamic_all._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.789, ptr @.str.790, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.789 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"\013test_stackinit: big_hole_assigned_dynamic_all: leaf fill was not 0xFF!?\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.790 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"test_big_hole_assigned_dynamic_all\00", [61 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_dynamic_all._entry_ptr = internal global ptr @test_big_hole_assigned_dynamic_all._entry, section ".printk_index", align 4
@test_big_hole_assigned_dynamic_all._entry.791 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.792, ptr @.str.790, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.792 = internal constant { [77 x i8], [51 x i8] } { [77 x i8] c"\013test_stackinit: big_hole_assigned_dynamic_all: stack fill missed target!?\0A\00", [51 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_dynamic_all._entry_ptr.793 = internal global ptr @test_big_hole_assigned_dynamic_all._entry.791, section ".printk_index", align 4
@test_big_hole_assigned_dynamic_all._entry.794 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.795, ptr @.str.790, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.795 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\013test_stackinit: big_hole_assigned_dynamic_all: fill %zu wide\0A\00", [32 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_dynamic_all._entry_ptr.796 = internal global ptr @test_big_hole_assigned_dynamic_all._entry.794, section ".printk_index", align 4
@test_big_hole_assigned_dynamic_all._entry.797 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.798, ptr @.str.790, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.798 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\013test_stackinit: big_hole_assigned_dynamic_all: target offset by %d\0A\00", [58 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_dynamic_all._entry_ptr.799 = internal global ptr @test_big_hole_assigned_dynamic_all._entry.797, section ".printk_index", align 4
@test_big_hole_assigned_dynamic_all._entry.800 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.801, ptr @.str.790, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.801 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\016test_stackinit: big_hole_assigned_dynamic_all ok\0A\00", [44 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_dynamic_all._entry_ptr.802 = internal global ptr @test_big_hole_assigned_dynamic_all._entry.800, section ".printk_index", align 4
@test_big_hole_assigned_dynamic_all._entry.803 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.804, ptr @.str.790, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.804 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"\014test_stackinit: big_hole_assigned_dynamic_all %sFAIL (uninit bytes: %d)\0A\00", [53 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_dynamic_all._entry_ptr.805 = internal global ptr @test_big_hole_assigned_dynamic_all._entry.803, section ".printk_index", align 4
@test_trailing_hole_assigned_dynamic_all._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.806, ptr @.str.807, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.806 = internal constant { [80 x i8], [48 x i8] } { [80 x i8] c"\013test_stackinit: trailing_hole_assigned_dynamic_all: leaf fill was not 0xFF!?\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.807 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"test_trailing_hole_assigned_dynamic_all\00", [56 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_dynamic_all._entry_ptr = internal global ptr @test_trailing_hole_assigned_dynamic_all._entry, section ".printk_index", align 4
@test_trailing_hole_assigned_dynamic_all._entry.808 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.809, ptr @.str.807, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.809 = internal constant { [82 x i8], [46 x i8] } { [82 x i8] c"\013test_stackinit: trailing_hole_assigned_dynamic_all: stack fill missed target!?\0A\00", [46 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_dynamic_all._entry_ptr.810 = internal global ptr @test_trailing_hole_assigned_dynamic_all._entry.808, section ".printk_index", align 4
@test_trailing_hole_assigned_dynamic_all._entry.811 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.812, ptr @.str.807, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.812 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"\013test_stackinit: trailing_hole_assigned_dynamic_all: fill %zu wide\0A\00", [59 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_dynamic_all._entry_ptr.813 = internal global ptr @test_trailing_hole_assigned_dynamic_all._entry.811, section ".printk_index", align 4
@test_trailing_hole_assigned_dynamic_all._entry.814 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.815, ptr @.str.807, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.815 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"\013test_stackinit: trailing_hole_assigned_dynamic_all: target offset by %d\0A\00", [53 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_dynamic_all._entry_ptr.816 = internal global ptr @test_trailing_hole_assigned_dynamic_all._entry.814, section ".printk_index", align 4
@test_trailing_hole_assigned_dynamic_all._entry.817 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.818, ptr @.str.807, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.818 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\016test_stackinit: trailing_hole_assigned_dynamic_all ok\0A\00", [39 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_dynamic_all._entry_ptr.819 = internal global ptr @test_trailing_hole_assigned_dynamic_all._entry.817, section ".printk_index", align 4
@test_trailing_hole_assigned_dynamic_all._entry.820 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.821, ptr @.str.807, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.821 = internal constant { [80 x i8], [48 x i8] } { [80 x i8] c"\014test_stackinit: trailing_hole_assigned_dynamic_all %sFAIL (uninit bytes: %d)\0A\00", [48 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_dynamic_all._entry_ptr.822 = internal global ptr @test_trailing_hole_assigned_dynamic_all._entry.820, section ".printk_index", align 4
@test_packed_assigned_dynamic_all._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.823, ptr @.str.824, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.823 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\013test_stackinit: packed_assigned_dynamic_all: leaf fill was not 0xFF!?\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.824 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"test_packed_assigned_dynamic_all\00", [63 x i8] zeroinitializer }, align 32
@test_packed_assigned_dynamic_all._entry_ptr = internal global ptr @test_packed_assigned_dynamic_all._entry, section ".printk_index", align 4
@test_packed_assigned_dynamic_all._entry.825 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.826, ptr @.str.824, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.826 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"\013test_stackinit: packed_assigned_dynamic_all: stack fill missed target!?\0A\00", [53 x i8] zeroinitializer }, align 32
@test_packed_assigned_dynamic_all._entry_ptr.827 = internal global ptr @test_packed_assigned_dynamic_all._entry.825, section ".printk_index", align 4
@test_packed_assigned_dynamic_all._entry.828 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.829, ptr @.str.824, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.829 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"\013test_stackinit: packed_assigned_dynamic_all: fill %zu wide\0A\00", [34 x i8] zeroinitializer }, align 32
@test_packed_assigned_dynamic_all._entry_ptr.830 = internal global ptr @test_packed_assigned_dynamic_all._entry.828, section ".printk_index", align 4
@test_packed_assigned_dynamic_all._entry.831 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.832, ptr @.str.824, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.832 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\013test_stackinit: packed_assigned_dynamic_all: target offset by %d\0A\00", [60 x i8] zeroinitializer }, align 32
@test_packed_assigned_dynamic_all._entry_ptr.833 = internal global ptr @test_packed_assigned_dynamic_all._entry.831, section ".printk_index", align 4
@test_packed_assigned_dynamic_all._entry.834 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.835, ptr @.str.824, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.835 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\016test_stackinit: packed_assigned_dynamic_all ok\0A\00", [46 x i8] zeroinitializer }, align 32
@test_packed_assigned_dynamic_all._entry_ptr.836 = internal global ptr @test_packed_assigned_dynamic_all._entry.834, section ".printk_index", align 4
@test_packed_assigned_dynamic_all._entry.837 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.838, ptr @.str.824, ptr @.str.2, i32 381, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.838 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\014test_stackinit: packed_assigned_dynamic_all %sFAIL (uninit bytes: %d)\0A\00", [55 x i8] zeroinitializer }, align 32
@test_packed_assigned_dynamic_all._entry_ptr.839 = internal global ptr @test_packed_assigned_dynamic_all._entry.837, section ".printk_index", align 4
@test_small_hole_assigned_copy._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.840, ptr @.str.841, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.840 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\013test_stackinit: small_hole_assigned_copy: leaf fill was not 0xFF!?\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.841 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"test_small_hole_assigned_copy\00", [34 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_copy._entry_ptr = internal global ptr @test_small_hole_assigned_copy._entry, section ".printk_index", align 4
@test_small_hole_assigned_copy._entry.842 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.843, ptr @.str.841, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.843 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\013test_stackinit: small_hole_assigned_copy: stack fill missed target!?\0A\00", [56 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_copy._entry_ptr.844 = internal global ptr @test_small_hole_assigned_copy._entry.842, section ".printk_index", align 4
@test_small_hole_assigned_copy._entry.845 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.846, ptr @.str.841, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.846 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013test_stackinit: small_hole_assigned_copy: fill %zu wide\0A\00", [37 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_copy._entry_ptr.847 = internal global ptr @test_small_hole_assigned_copy._entry.845, section ".printk_index", align 4
@test_small_hole_assigned_copy._entry.848 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.849, ptr @.str.841, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.849 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\013test_stackinit: small_hole_assigned_copy: target offset by %d\0A\00", [63 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_copy._entry_ptr.850 = internal global ptr @test_small_hole_assigned_copy._entry.848, section ".printk_index", align 4
@test_small_hole_assigned_copy._entry.851 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.852, ptr @.str.841, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.852 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"\016test_stackinit: small_hole_assigned_copy ok\0A\00", [49 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_copy._entry_ptr.853 = internal global ptr @test_small_hole_assigned_copy._entry.851, section ".printk_index", align 4
@test_small_hole_assigned_copy._entry.854 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.855, ptr @.str.841, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.855 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\014test_stackinit: small_hole_assigned_copy %sFAIL (uninit bytes: %d)\0A\00", [58 x i8] zeroinitializer }, align 32
@test_small_hole_assigned_copy._entry_ptr.856 = internal global ptr @test_small_hole_assigned_copy._entry.854, section ".printk_index", align 4
@.str.857 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"X\00", [30 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_copy._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.858, ptr @.str.859, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.858 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\013test_stackinit: big_hole_assigned_copy: leaf fill was not 0xFF!?\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.859 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"test_big_hole_assigned_copy\00", [36 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_copy._entry_ptr = internal global ptr @test_big_hole_assigned_copy._entry, section ".printk_index", align 4
@test_big_hole_assigned_copy._entry.860 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.861, ptr @.str.859, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.861 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\013test_stackinit: big_hole_assigned_copy: stack fill missed target!?\0A\00", [58 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_copy._entry_ptr.862 = internal global ptr @test_big_hole_assigned_copy._entry.860, section ".printk_index", align 4
@test_big_hole_assigned_copy._entry.863 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.864, ptr @.str.859, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.864 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\013test_stackinit: big_hole_assigned_copy: fill %zu wide\0A\00", [39 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_copy._entry_ptr.865 = internal global ptr @test_big_hole_assigned_copy._entry.863, section ".printk_index", align 4
@test_big_hole_assigned_copy._entry.866 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.867, ptr @.str.859, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.867 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\013test_stackinit: big_hole_assigned_copy: target offset by %d\0A\00", [33 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_copy._entry_ptr.868 = internal global ptr @test_big_hole_assigned_copy._entry.866, section ".printk_index", align 4
@test_big_hole_assigned_copy._entry.869 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.870, ptr @.str.859, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.870 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\016test_stackinit: big_hole_assigned_copy ok\0A\00", [51 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_copy._entry_ptr.871 = internal global ptr @test_big_hole_assigned_copy._entry.869, section ".printk_index", align 4
@test_big_hole_assigned_copy._entry.872 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.873, ptr @.str.859, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.873 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\014test_stackinit: big_hole_assigned_copy %sFAIL (uninit bytes: %d)\0A\00", [60 x i8] zeroinitializer }, align 32
@test_big_hole_assigned_copy._entry_ptr.874 = internal global ptr @test_big_hole_assigned_copy._entry.872, section ".printk_index", align 4
@test_trailing_hole_assigned_copy._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.875, ptr @.str.876, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.875 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\013test_stackinit: trailing_hole_assigned_copy: leaf fill was not 0xFF!?\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.876 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"test_trailing_hole_assigned_copy\00", [63 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_copy._entry_ptr = internal global ptr @test_trailing_hole_assigned_copy._entry, section ".printk_index", align 4
@test_trailing_hole_assigned_copy._entry.877 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.878, ptr @.str.876, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.878 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"\013test_stackinit: trailing_hole_assigned_copy: stack fill missed target!?\0A\00", [53 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_copy._entry_ptr.879 = internal global ptr @test_trailing_hole_assigned_copy._entry.877, section ".printk_index", align 4
@test_trailing_hole_assigned_copy._entry.880 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.881, ptr @.str.876, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.881 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"\013test_stackinit: trailing_hole_assigned_copy: fill %zu wide\0A\00", [34 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_copy._entry_ptr.882 = internal global ptr @test_trailing_hole_assigned_copy._entry.880, section ".printk_index", align 4
@test_trailing_hole_assigned_copy._entry.883 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.884, ptr @.str.876, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.884 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\013test_stackinit: trailing_hole_assigned_copy: target offset by %d\0A\00", [60 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_copy._entry_ptr.885 = internal global ptr @test_trailing_hole_assigned_copy._entry.883, section ".printk_index", align 4
@test_trailing_hole_assigned_copy._entry.886 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.887, ptr @.str.876, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.887 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\016test_stackinit: trailing_hole_assigned_copy ok\0A\00", [46 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_copy._entry_ptr.888 = internal global ptr @test_trailing_hole_assigned_copy._entry.886, section ".printk_index", align 4
@test_trailing_hole_assigned_copy._entry.889 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.890, ptr @.str.876, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.890 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\014test_stackinit: trailing_hole_assigned_copy %sFAIL (uninit bytes: %d)\0A\00", [55 x i8] zeroinitializer }, align 32
@test_trailing_hole_assigned_copy._entry_ptr.891 = internal global ptr @test_trailing_hole_assigned_copy._entry.889, section ".printk_index", align 4
@test_packed_assigned_copy._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.892, ptr @.str.893, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.892 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\013test_stackinit: packed_assigned_copy: leaf fill was not 0xFF!?\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.893 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"test_packed_assigned_copy\00", [38 x i8] zeroinitializer }, align 32
@test_packed_assigned_copy._entry_ptr = internal global ptr @test_packed_assigned_copy._entry, section ".printk_index", align 4
@test_packed_assigned_copy._entry.894 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.895, ptr @.str.893, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.895 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\013test_stackinit: packed_assigned_copy: stack fill missed target!?\0A\00", [60 x i8] zeroinitializer }, align 32
@test_packed_assigned_copy._entry_ptr.896 = internal global ptr @test_packed_assigned_copy._entry.894, section ".printk_index", align 4
@test_packed_assigned_copy._entry.897 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.898, ptr @.str.893, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.898 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"\013test_stackinit: packed_assigned_copy: fill %zu wide\0A\00", [41 x i8] zeroinitializer }, align 32
@test_packed_assigned_copy._entry_ptr.899 = internal global ptr @test_packed_assigned_copy._entry.897, section ".printk_index", align 4
@test_packed_assigned_copy._entry.900 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.901, ptr @.str.893, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.901 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\013test_stackinit: packed_assigned_copy: target offset by %d\0A\00", [35 x i8] zeroinitializer }, align 32
@test_packed_assigned_copy._entry_ptr.902 = internal global ptr @test_packed_assigned_copy._entry.900, section ".printk_index", align 4
@test_packed_assigned_copy._entry.903 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.904, ptr @.str.893, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.904 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\016test_stackinit: packed_assigned_copy ok\0A\00", [53 x i8] zeroinitializer }, align 32
@test_packed_assigned_copy._entry_ptr.905 = internal global ptr @test_packed_assigned_copy._entry.903, section ".printk_index", align 4
@test_packed_assigned_copy._entry.906 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.907, ptr @.str.893, ptr @.str.2, i32 382, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.907 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\014test_stackinit: packed_assigned_copy %sFAIL (uninit bytes: %d)\0A\00", [62 x i8] zeroinitializer }, align 32
@test_packed_assigned_copy._entry_ptr.908 = internal global ptr @test_packed_assigned_copy._entry.906, section ".printk_index", align 4
@test_u8_none._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.909, ptr @.str.910, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.909 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\013test_stackinit: u8_none: leaf fill was not 0xFF!?\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.910 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"test_u8_none\00", [19 x i8] zeroinitializer }, align 32
@test_u8_none._entry_ptr = internal global ptr @test_u8_none._entry, section ".printk_index", align 4
@test_u8_none._entry.911 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.912, ptr @.str.910, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.912 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"\013test_stackinit: u8_none: stack fill missed target!?\0A\00", [41 x i8] zeroinitializer }, align 32
@test_u8_none._entry_ptr.913 = internal global ptr @test_u8_none._entry.911, section ".printk_index", align 4
@test_u8_none._entry.914 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.915, ptr @.str.910, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.915 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\013test_stackinit: u8_none: fill %zu wide\0A\00", [54 x i8] zeroinitializer }, align 32
@test_u8_none._entry_ptr.916 = internal global ptr @test_u8_none._entry.914, section ".printk_index", align 4
@test_u8_none._entry.917 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.918, ptr @.str.910, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.918 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\013test_stackinit: u8_none: target offset by %d\0A\00", [48 x i8] zeroinitializer }, align 32
@test_u8_none._entry_ptr.919 = internal global ptr @test_u8_none._entry.917, section ".printk_index", align 4
@test_u8_none._entry.920 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.921, ptr @.str.910, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.921 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"\016test_stackinit: u8_none ok\0A\00", [34 x i8] zeroinitializer }, align 32
@test_u8_none._entry_ptr.922 = internal global ptr @test_u8_none._entry.920, section ".printk_index", align 4
@test_u8_none._entry.923 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.924, ptr @.str.910, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.924 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\014test_stackinit: u8_none %sFAIL (uninit bytes: %d)\0A\00", [43 x i8] zeroinitializer }, align 32
@test_u8_none._entry_ptr.925 = internal global ptr @test_u8_none._entry.923, section ".printk_index", align 4
@test_u16_none._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.926, ptr @.str.927, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.926 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\013test_stackinit: u16_none: leaf fill was not 0xFF!?\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.927 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"test_u16_none\00", [18 x i8] zeroinitializer }, align 32
@test_u16_none._entry_ptr = internal global ptr @test_u16_none._entry, section ".printk_index", align 4
@test_u16_none._entry.928 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.929, ptr @.str.927, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.929 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\013test_stackinit: u16_none: stack fill missed target!?\0A\00", [40 x i8] zeroinitializer }, align 32
@test_u16_none._entry_ptr.930 = internal global ptr @test_u16_none._entry.928, section ".printk_index", align 4
@test_u16_none._entry.931 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.932, ptr @.str.927, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.932 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\013test_stackinit: u16_none: fill %zu wide\0A\00", [53 x i8] zeroinitializer }, align 32
@test_u16_none._entry_ptr.933 = internal global ptr @test_u16_none._entry.931, section ".printk_index", align 4
@test_u16_none._entry.934 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.935, ptr @.str.927, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.935 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\013test_stackinit: u16_none: target offset by %d\0A\00", [47 x i8] zeroinitializer }, align 32
@test_u16_none._entry_ptr.936 = internal global ptr @test_u16_none._entry.934, section ".printk_index", align 4
@test_u16_none._entry.937 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.938, ptr @.str.927, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.938 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"\016test_stackinit: u16_none ok\0A\00", [33 x i8] zeroinitializer }, align 32
@test_u16_none._entry_ptr.939 = internal global ptr @test_u16_none._entry.937, section ".printk_index", align 4
@test_u16_none._entry.940 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.941, ptr @.str.927, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.941 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\014test_stackinit: u16_none %sFAIL (uninit bytes: %d)\0A\00", [42 x i8] zeroinitializer }, align 32
@test_u16_none._entry_ptr.942 = internal global ptr @test_u16_none._entry.940, section ".printk_index", align 4
@test_u32_none._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.943, ptr @.str.944, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.943 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\013test_stackinit: u32_none: leaf fill was not 0xFF!?\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.944 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"test_u32_none\00", [18 x i8] zeroinitializer }, align 32
@test_u32_none._entry_ptr = internal global ptr @test_u32_none._entry, section ".printk_index", align 4
@test_u32_none._entry.945 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.946, ptr @.str.944, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.946 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\013test_stackinit: u32_none: stack fill missed target!?\0A\00", [40 x i8] zeroinitializer }, align 32
@test_u32_none._entry_ptr.947 = internal global ptr @test_u32_none._entry.945, section ".printk_index", align 4
@test_u32_none._entry.948 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.949, ptr @.str.944, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.949 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\013test_stackinit: u32_none: fill %zu wide\0A\00", [53 x i8] zeroinitializer }, align 32
@test_u32_none._entry_ptr.950 = internal global ptr @test_u32_none._entry.948, section ".printk_index", align 4
@test_u32_none._entry.951 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.952, ptr @.str.944, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.952 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\013test_stackinit: u32_none: target offset by %d\0A\00", [47 x i8] zeroinitializer }, align 32
@test_u32_none._entry_ptr.953 = internal global ptr @test_u32_none._entry.951, section ".printk_index", align 4
@test_u32_none._entry.954 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.955, ptr @.str.944, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.955 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"\016test_stackinit: u32_none ok\0A\00", [33 x i8] zeroinitializer }, align 32
@test_u32_none._entry_ptr.956 = internal global ptr @test_u32_none._entry.954, section ".printk_index", align 4
@test_u32_none._entry.957 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.958, ptr @.str.944, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.958 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\014test_stackinit: u32_none %sFAIL (uninit bytes: %d)\0A\00", [42 x i8] zeroinitializer }, align 32
@test_u32_none._entry_ptr.959 = internal global ptr @test_u32_none._entry.957, section ".printk_index", align 4
@test_u64_none._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.960, ptr @.str.961, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.960 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\013test_stackinit: u64_none: leaf fill was not 0xFF!?\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.961 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"test_u64_none\00", [18 x i8] zeroinitializer }, align 32
@test_u64_none._entry_ptr = internal global ptr @test_u64_none._entry, section ".printk_index", align 4
@test_u64_none._entry.962 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.963, ptr @.str.961, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.963 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\013test_stackinit: u64_none: stack fill missed target!?\0A\00", [40 x i8] zeroinitializer }, align 32
@test_u64_none._entry_ptr.964 = internal global ptr @test_u64_none._entry.962, section ".printk_index", align 4
@test_u64_none._entry.965 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.966, ptr @.str.961, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.966 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\013test_stackinit: u64_none: fill %zu wide\0A\00", [53 x i8] zeroinitializer }, align 32
@test_u64_none._entry_ptr.967 = internal global ptr @test_u64_none._entry.965, section ".printk_index", align 4
@test_u64_none._entry.968 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.969, ptr @.str.961, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.969 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\013test_stackinit: u64_none: target offset by %d\0A\00", [47 x i8] zeroinitializer }, align 32
@test_u64_none._entry_ptr.970 = internal global ptr @test_u64_none._entry.968, section ".printk_index", align 4
@test_u64_none._entry.971 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.972, ptr @.str.961, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.972 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"\016test_stackinit: u64_none ok\0A\00", [33 x i8] zeroinitializer }, align 32
@test_u64_none._entry_ptr.973 = internal global ptr @test_u64_none._entry.971, section ".printk_index", align 4
@test_u64_none._entry.974 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.975, ptr @.str.961, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.975 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\014test_stackinit: u64_none %sFAIL (uninit bytes: %d)\0A\00", [42 x i8] zeroinitializer }, align 32
@test_u64_none._entry_ptr.976 = internal global ptr @test_u64_none._entry.974, section ".printk_index", align 4
@test_char_array_none._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.977, ptr @.str.978, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.977 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\013test_stackinit: char_array_none: leaf fill was not 0xFF!?\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.978 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"test_char_array_none\00", [43 x i8] zeroinitializer }, align 32
@test_char_array_none._entry_ptr = internal global ptr @test_char_array_none._entry, section ".printk_index", align 4
@test_char_array_none._entry.979 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.980, ptr @.str.978, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.980 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\013test_stackinit: char_array_none: stack fill missed target!?\0A\00", [33 x i8] zeroinitializer }, align 32
@test_char_array_none._entry_ptr.981 = internal global ptr @test_char_array_none._entry.979, section ".printk_index", align 4
@test_char_array_none._entry.982 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.983, ptr @.str.978, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.983 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\013test_stackinit: char_array_none: fill %zu wide\0A\00", [46 x i8] zeroinitializer }, align 32
@test_char_array_none._entry_ptr.984 = internal global ptr @test_char_array_none._entry.982, section ".printk_index", align 4
@test_char_array_none._entry.985 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.986, ptr @.str.978, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.986 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\013test_stackinit: char_array_none: target offset by %d\0A\00", [40 x i8] zeroinitializer }, align 32
@test_char_array_none._entry_ptr.987 = internal global ptr @test_char_array_none._entry.985, section ".printk_index", align 4
@test_char_array_none._entry.988 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.989, ptr @.str.978, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.989 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\016test_stackinit: char_array_none ok\0A\00", [58 x i8] zeroinitializer }, align 32
@test_char_array_none._entry_ptr.990 = internal global ptr @test_char_array_none._entry.988, section ".printk_index", align 4
@test_char_array_none._entry.991 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.992, ptr @.str.978, ptr @.str.2, i32 384, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.992 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\014test_stackinit: char_array_none %sFAIL (uninit bytes: %d)\0A\00", [35 x i8] zeroinitializer }, align 32
@test_char_array_none._entry_ptr.993 = internal global ptr @test_char_array_none._entry.991, section ".printk_index", align 4
@test_switch_1_none._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.994, ptr @.str.995, ptr @.str.2, i32 450, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.994 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013test_stackinit: switch_1_none: leaf fill was not 0xFF!?\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.995 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"test_switch_1_none\00", [45 x i8] zeroinitializer }, align 32
@test_switch_1_none._entry_ptr = internal global ptr @test_switch_1_none._entry, section ".printk_index", align 4
@test_switch_1_none._entry.996 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.997, ptr @.str.995, ptr @.str.2, i32 450, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.997 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\013test_stackinit: switch_1_none: stack fill missed target!?\0A\00", [35 x i8] zeroinitializer }, align 32
@test_switch_1_none._entry_ptr.998 = internal global ptr @test_switch_1_none._entry.996, section ".printk_index", align 4
@test_switch_1_none._entry.999 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1000, ptr @.str.995, ptr @.str.2, i32 450, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1000 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\013test_stackinit: switch_1_none: fill %zu wide\0A\00", [48 x i8] zeroinitializer }, align 32
@test_switch_1_none._entry_ptr.1001 = internal global ptr @test_switch_1_none._entry.999, section ".printk_index", align 4
@test_switch_1_none._entry.1002 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1003, ptr @.str.995, ptr @.str.2, i32 450, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1003 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\013test_stackinit: switch_1_none: target offset by %d\0A\00", [42 x i8] zeroinitializer }, align 32
@test_switch_1_none._entry_ptr.1004 = internal global ptr @test_switch_1_none._entry.1002, section ".printk_index", align 4
@test_switch_1_none._entry.1005 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1006, ptr @.str.995, ptr @.str.2, i32 450, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1006 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\016test_stackinit: switch_1_none ok\0A\00", [60 x i8] zeroinitializer }, align 32
@test_switch_1_none._entry_ptr.1007 = internal global ptr @test_switch_1_none._entry.1005, section ".printk_index", align 4
@test_switch_1_none._entry.1008 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1009, ptr @.str.995, ptr @.str.2, i32 450, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1009 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\014test_stackinit: switch_1_none %sFAIL (uninit bytes: %d)\0A\00", [37 x i8] zeroinitializer }, align 32
@test_switch_1_none._entry_ptr.1010 = internal global ptr @test_switch_1_none._entry.1008, section ".printk_index", align 4
@test_switch_2_none._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1011, ptr @.str.1012, ptr @.str.2, i32 451, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1011 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013test_stackinit: switch_2_none: leaf fill was not 0xFF!?\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.1012 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"test_switch_2_none\00", [45 x i8] zeroinitializer }, align 32
@test_switch_2_none._entry_ptr = internal global ptr @test_switch_2_none._entry, section ".printk_index", align 4
@test_switch_2_none._entry.1013 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1014, ptr @.str.1012, ptr @.str.2, i32 451, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1014 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\013test_stackinit: switch_2_none: stack fill missed target!?\0A\00", [35 x i8] zeroinitializer }, align 32
@test_switch_2_none._entry_ptr.1015 = internal global ptr @test_switch_2_none._entry.1013, section ".printk_index", align 4
@test_switch_2_none._entry.1016 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1017, ptr @.str.1012, ptr @.str.2, i32 451, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1017 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\013test_stackinit: switch_2_none: fill %zu wide\0A\00", [48 x i8] zeroinitializer }, align 32
@test_switch_2_none._entry_ptr.1018 = internal global ptr @test_switch_2_none._entry.1016, section ".printk_index", align 4
@test_switch_2_none._entry.1019 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1020, ptr @.str.1012, ptr @.str.2, i32 451, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1020 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\013test_stackinit: switch_2_none: target offset by %d\0A\00", [42 x i8] zeroinitializer }, align 32
@test_switch_2_none._entry_ptr.1021 = internal global ptr @test_switch_2_none._entry.1019, section ".printk_index", align 4
@test_switch_2_none._entry.1022 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1023, ptr @.str.1012, ptr @.str.2, i32 451, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1023 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\016test_stackinit: switch_2_none ok\0A\00", [60 x i8] zeroinitializer }, align 32
@test_switch_2_none._entry_ptr.1024 = internal global ptr @test_switch_2_none._entry.1022, section ".printk_index", align 4
@test_switch_2_none._entry.1025 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1026, ptr @.str.1012, ptr @.str.2, i32 451, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1026 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\014test_stackinit: switch_2_none %sFAIL (uninit bytes: %d)\0A\00", [37 x i8] zeroinitializer }, align 32
@test_switch_2_none._entry_ptr.1027 = internal global ptr @test_switch_2_none._entry.1025, section ".printk_index", align 4
@test_small_hole_none._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1028, ptr @.str.1029, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1028 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\013test_stackinit: small_hole_none: leaf fill was not 0xFF!?\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.1029 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"test_small_hole_none\00", [43 x i8] zeroinitializer }, align 32
@test_small_hole_none._entry_ptr = internal global ptr @test_small_hole_none._entry, section ".printk_index", align 4
@test_small_hole_none._entry.1030 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1031, ptr @.str.1029, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1031 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\013test_stackinit: small_hole_none: stack fill missed target!?\0A\00", [33 x i8] zeroinitializer }, align 32
@test_small_hole_none._entry_ptr.1032 = internal global ptr @test_small_hole_none._entry.1030, section ".printk_index", align 4
@test_small_hole_none._entry.1033 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1034, ptr @.str.1029, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1034 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\013test_stackinit: small_hole_none: fill %zu wide\0A\00", [46 x i8] zeroinitializer }, align 32
@test_small_hole_none._entry_ptr.1035 = internal global ptr @test_small_hole_none._entry.1033, section ".printk_index", align 4
@test_small_hole_none._entry.1036 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1037, ptr @.str.1029, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1037 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\013test_stackinit: small_hole_none: target offset by %d\0A\00", [40 x i8] zeroinitializer }, align 32
@test_small_hole_none._entry_ptr.1038 = internal global ptr @test_small_hole_none._entry.1036, section ".printk_index", align 4
@test_small_hole_none._entry.1039 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1040, ptr @.str.1029, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1040 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\016test_stackinit: small_hole_none ok\0A\00", [58 x i8] zeroinitializer }, align 32
@test_small_hole_none._entry_ptr.1041 = internal global ptr @test_small_hole_none._entry.1039, section ".printk_index", align 4
@test_small_hole_none._entry.1042 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1043, ptr @.str.1029, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1043 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\014test_stackinit: small_hole_none %sFAIL (uninit bytes: %d)\0A\00", [35 x i8] zeroinitializer }, align 32
@test_small_hole_none._entry_ptr.1044 = internal global ptr @test_small_hole_none._entry.1042, section ".printk_index", align 4
@test_big_hole_none._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1045, ptr @.str.1046, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1045 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013test_stackinit: big_hole_none: leaf fill was not 0xFF!?\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.1046 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"test_big_hole_none\00", [45 x i8] zeroinitializer }, align 32
@test_big_hole_none._entry_ptr = internal global ptr @test_big_hole_none._entry, section ".printk_index", align 4
@test_big_hole_none._entry.1047 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1048, ptr @.str.1046, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1048 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\013test_stackinit: big_hole_none: stack fill missed target!?\0A\00", [35 x i8] zeroinitializer }, align 32
@test_big_hole_none._entry_ptr.1049 = internal global ptr @test_big_hole_none._entry.1047, section ".printk_index", align 4
@test_big_hole_none._entry.1050 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1051, ptr @.str.1046, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1051 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\013test_stackinit: big_hole_none: fill %zu wide\0A\00", [48 x i8] zeroinitializer }, align 32
@test_big_hole_none._entry_ptr.1052 = internal global ptr @test_big_hole_none._entry.1050, section ".printk_index", align 4
@test_big_hole_none._entry.1053 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1054, ptr @.str.1046, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1054 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\013test_stackinit: big_hole_none: target offset by %d\0A\00", [42 x i8] zeroinitializer }, align 32
@test_big_hole_none._entry_ptr.1055 = internal global ptr @test_big_hole_none._entry.1053, section ".printk_index", align 4
@test_big_hole_none._entry.1056 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1057, ptr @.str.1046, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1057 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\016test_stackinit: big_hole_none ok\0A\00", [60 x i8] zeroinitializer }, align 32
@test_big_hole_none._entry_ptr.1058 = internal global ptr @test_big_hole_none._entry.1056, section ".printk_index", align 4
@test_big_hole_none._entry.1059 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1060, ptr @.str.1046, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1060 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\014test_stackinit: big_hole_none %sFAIL (uninit bytes: %d)\0A\00", [37 x i8] zeroinitializer }, align 32
@test_big_hole_none._entry_ptr.1061 = internal global ptr @test_big_hole_none._entry.1059, section ".printk_index", align 4
@test_trailing_hole_none._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1062, ptr @.str.1063, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1062 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\013test_stackinit: trailing_hole_none: leaf fill was not 0xFF!?\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.1063 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"test_trailing_hole_none\00", [40 x i8] zeroinitializer }, align 32
@test_trailing_hole_none._entry_ptr = internal global ptr @test_trailing_hole_none._entry, section ".printk_index", align 4
@test_trailing_hole_none._entry.1064 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1065, ptr @.str.1063, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1065 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\013test_stackinit: trailing_hole_none: stack fill missed target!?\0A\00", [62 x i8] zeroinitializer }, align 32
@test_trailing_hole_none._entry_ptr.1066 = internal global ptr @test_trailing_hole_none._entry.1064, section ".printk_index", align 4
@test_trailing_hole_none._entry.1067 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1068, ptr @.str.1063, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1068 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\013test_stackinit: trailing_hole_none: fill %zu wide\0A\00", [43 x i8] zeroinitializer }, align 32
@test_trailing_hole_none._entry_ptr.1069 = internal global ptr @test_trailing_hole_none._entry.1067, section ".printk_index", align 4
@test_trailing_hole_none._entry.1070 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1071, ptr @.str.1063, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1071 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013test_stackinit: trailing_hole_none: target offset by %d\0A\00", [37 x i8] zeroinitializer }, align 32
@test_trailing_hole_none._entry_ptr.1072 = internal global ptr @test_trailing_hole_none._entry.1070, section ".printk_index", align 4
@test_trailing_hole_none._entry.1073 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1074, ptr @.str.1063, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1074 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\016test_stackinit: trailing_hole_none ok\0A\00", [55 x i8] zeroinitializer }, align 32
@test_trailing_hole_none._entry_ptr.1075 = internal global ptr @test_trailing_hole_none._entry.1073, section ".printk_index", align 4
@test_trailing_hole_none._entry.1076 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1077, ptr @.str.1063, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1077 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\014test_stackinit: trailing_hole_none %sFAIL (uninit bytes: %d)\0A\00", [32 x i8] zeroinitializer }, align 32
@test_trailing_hole_none._entry_ptr.1078 = internal global ptr @test_trailing_hole_none._entry.1076, section ".printk_index", align 4
@test_packed_none._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1079, ptr @.str.1080, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1079 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\013test_stackinit: packed_none: leaf fill was not 0xFF!?\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.1080 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"test_packed_none\00", [47 x i8] zeroinitializer }, align 32
@test_packed_none._entry_ptr = internal global ptr @test_packed_none._entry, section ".printk_index", align 4
@test_packed_none._entry.1081 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1082, ptr @.str.1080, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1082 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013test_stackinit: packed_none: stack fill missed target!?\0A\00", [37 x i8] zeroinitializer }, align 32
@test_packed_none._entry_ptr.1083 = internal global ptr @test_packed_none._entry.1081, section ".printk_index", align 4
@test_packed_none._entry.1084 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1085, ptr @.str.1080, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1085 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\013test_stackinit: packed_none: fill %zu wide\0A\00", [50 x i8] zeroinitializer }, align 32
@test_packed_none._entry_ptr.1086 = internal global ptr @test_packed_none._entry.1084, section ".printk_index", align 4
@test_packed_none._entry.1087 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1088, ptr @.str.1080, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1088 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\013test_stackinit: packed_none: target offset by %d\0A\00", [44 x i8] zeroinitializer }, align 32
@test_packed_none._entry_ptr.1089 = internal global ptr @test_packed_none._entry.1087, section ".printk_index", align 4
@test_packed_none._entry.1090 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1091, ptr @.str.1080, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1091 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\016test_stackinit: packed_none ok\0A\00", [62 x i8] zeroinitializer }, align 32
@test_packed_none._entry_ptr.1092 = internal global ptr @test_packed_none._entry.1090, section ".printk_index", align 4
@test_packed_none._entry.1093 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1094, ptr @.str.1080, ptr @.str.2, i32 385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1094 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\014test_stackinit: packed_none %sFAIL (uninit bytes: %d)\0A\00", [39 x i8] zeroinitializer }, align 32
@test_packed_none._entry_ptr.1095 = internal global ptr @test_packed_none._entry.1093, section ".printk_index", align 4
@test_user._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1096, ptr @.str.1097, ptr @.str.2, i32 387, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1096 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\013test_stackinit: user: leaf fill was not 0xFF!?\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.1097 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"test_user\00", [22 x i8] zeroinitializer }, align 32
@test_user._entry_ptr = internal global ptr @test_user._entry, section ".printk_index", align 4
@test_user._entry.1098 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1099, ptr @.str.1097, ptr @.str.2, i32 387, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1099 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\013test_stackinit: user: stack fill missed target!?\0A\00", [44 x i8] zeroinitializer }, align 32
@test_user._entry_ptr.1100 = internal global ptr @test_user._entry.1098, section ".printk_index", align 4
@test_user._entry.1101 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1102, ptr @.str.1097, ptr @.str.2, i32 387, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1102 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\013test_stackinit: user: fill %zu wide\0A\00", [57 x i8] zeroinitializer }, align 32
@test_user._entry_ptr.1103 = internal global ptr @test_user._entry.1101, section ".printk_index", align 4
@test_user._entry.1104 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1105, ptr @.str.1097, ptr @.str.2, i32 387, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1105 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\013test_stackinit: user: target offset by %d\0A\00", [51 x i8] zeroinitializer }, align 32
@test_user._entry_ptr.1106 = internal global ptr @test_user._entry.1104, section ".printk_index", align 4
@test_user._entry.1107 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1108, ptr @.str.1097, ptr @.str.2, i32 387, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1108 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"\016test_stackinit: user ok\0A\00", [37 x i8] zeroinitializer }, align 32
@test_user._entry_ptr.1109 = internal global ptr @test_user._entry.1107, section ".printk_index", align 4
@test_user._entry.1110 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1111, ptr @.str.1097, ptr @.str.2, i32 387, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1111 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\014test_stackinit: user %sFAIL (uninit bytes: %d)\0A\00", [46 x i8] zeroinitializer }, align 32
@test_user._entry_ptr.1112 = internal global ptr @test_user._entry.1110, section ".printk_index", align 4
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@___asan_gen_.1124 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3688, i32 502, i32 3 }
@___asan_gen_.1130 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3688, i32 504, i32 3 }
@___asan_gen_.1131 = private unnamed_addr constant [10 x i8] c"check_buf\00", align 1
@___asan_gen_.1133 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3688, i32 77, i32 11 }
@___asan_gen_.1134 = private unnamed_addr constant [12 x i8] c"target_size\00", align 1
@___asan_gen_.1136 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3688, i32 87, i32 26 }
@___asan_gen_.1146 = private unnamed_addr constant [11 x i8] c"fill_start\00", align 1
@___asan_gen_.1148 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3688, i32 86, i32 14 }
@___asan_gen_.1149 = private unnamed_addr constant [10 x i8] c"fill_size\00", align 1
@___asan_gen_.1151 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3688, i32 87, i32 15 }
@___asan_gen_.1152 = private unnamed_addr constant [13 x i8] c"target_start\00", align 1
@___asan_gen_.1154 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3688, i32 86, i32 27 }
@___asan_gen_.1188 = private unnamed_addr constant [12 x i8] c"forced_mask\00", align 1
@___asan_gen_.1190 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3688, i32 83, i32 20 }
@___asan_gen_.1346 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3688, i32 374, i32 1 }
@___asan_gen_.1502 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3688, i32 375, i32 1 }
@___asan_gen_.2126 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3688, i32 377, i32 1 }
@___asan_gen_.2282 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3688, i32 378, i32 1 }
@___asan_gen_.2594 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3688, i32 379, i32 1 }
@___asan_gen_.2906 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3688, i32 380, i32 1 }
@___asan_gen_.3062 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3688, i32 381, i32 1 }
@___asan_gen_.3221 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3688, i32 382, i32 1 }
@___asan_gen_.3416 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3688, i32 384, i32 1 }
@___asan_gen_.3455 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3688, i32 450, i32 1 }
@___asan_gen_.3494 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3688, i32 451, i32 1 }
@___asan_gen_.3650 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3688, i32 385, i32 1 }
@___asan_gen_.3684 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.3687 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.3688 = private constant [24 x i8] c"../lib/test_stackinit.c\00", align 1
@___asan_gen_.3689 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.3688, i32 387, i32 1 }
@llvm.compiler.used = appending global [1256 x ptr] [ptr @__UNIQUE_ID_file172, ptr @__UNIQUE_ID_license173, ptr @__exitcall_test_stackinit_exit, ptr @__initcall__kmod_test_stackinit__171_508_test_stackinit_init6, ptr @test_big_hole_assigned_copy._entry, ptr @test_big_hole_assigned_copy._entry.860, ptr @test_big_hole_assigned_copy._entry.863, ptr @test_big_hole_assigned_copy._entry.866, ptr @test_big_hole_assigned_copy._entry.869, ptr @test_big_hole_assigned_copy._entry.872, ptr @test_big_hole_assigned_copy._entry_ptr, ptr @test_big_hole_assigned_copy._entry_ptr.862, ptr @test_big_hole_assigned_copy._entry_ptr.865, ptr @test_big_hole_assigned_copy._entry_ptr.868, ptr @test_big_hole_assigned_copy._entry_ptr.871, ptr @test_big_hole_assigned_copy._entry_ptr.874, ptr @test_big_hole_assigned_dynamic_all._entry, ptr @test_big_hole_assigned_dynamic_all._entry.791, ptr @test_big_hole_assigned_dynamic_all._entry.794, ptr @test_big_hole_assigned_dynamic_all._entry.797, ptr @test_big_hole_assigned_dynamic_all._entry.800, ptr @test_big_hole_assigned_dynamic_all._entry.803, ptr @test_big_hole_assigned_dynamic_all._entry_ptr, ptr @test_big_hole_assigned_dynamic_all._entry_ptr.793, ptr @test_big_hole_assigned_dynamic_all._entry_ptr.796, ptr @test_big_hole_assigned_dynamic_all._entry_ptr.799, ptr @test_big_hole_assigned_dynamic_all._entry_ptr.802, ptr @test_big_hole_assigned_dynamic_all._entry_ptr.805, ptr @test_big_hole_assigned_dynamic_partial._entry, ptr @test_big_hole_assigned_dynamic_partial._entry.247, ptr @test_big_hole_assigned_dynamic_partial._entry.250, ptr @test_big_hole_assigned_dynamic_partial._entry.253, ptr @test_big_hole_assigned_dynamic_partial._entry.256, ptr @test_big_hole_assigned_dynamic_partial._entry.259, ptr @test_big_hole_assigned_dynamic_partial._entry_ptr, ptr @test_big_hole_assigned_dynamic_partial._entry_ptr.249, ptr @test_big_hole_assigned_dynamic_partial._entry_ptr.252, ptr @test_big_hole_assigned_dynamic_partial._entry_ptr.255, ptr @test_big_hole_assigned_dynamic_partial._entry_ptr.258, ptr @test_big_hole_assigned_dynamic_partial._entry_ptr.261, ptr @test_big_hole_assigned_static_all._entry, ptr @test_big_hole_assigned_static_all._entry.723, ptr @test_big_hole_assigned_static_all._entry.726, ptr @test_big_hole_assigned_static_all._entry.729, ptr @test_big_hole_assigned_static_all._entry.732, ptr @test_big_hole_assigned_static_all._entry.735, ptr @test_big_hole_assigned_static_all._entry_ptr, ptr @test_big_hole_assigned_static_all._entry_ptr.725, ptr @test_big_hole_assigned_static_all._entry_ptr.728, ptr @test_big_hole_assigned_static_all._entry_ptr.731, ptr @test_big_hole_assigned_static_all._entry_ptr.734, ptr @test_big_hole_assigned_static_all._entry_ptr.737, ptr @test_big_hole_assigned_static_partial._entry, ptr @test_big_hole_assigned_static_partial._entry.655, ptr @test_big_hole_assigned_static_partial._entry.658, ptr @test_big_hole_assigned_static_partial._entry.661, ptr @test_big_hole_assigned_static_partial._entry.664, ptr @test_big_hole_assigned_static_partial._entry.667, ptr @test_big_hole_assigned_static_partial._entry_ptr, ptr @test_big_hole_assigned_static_partial._entry_ptr.657, ptr @test_big_hole_assigned_static_partial._entry_ptr.660, ptr @test_big_hole_assigned_static_partial._entry_ptr.663, ptr @test_big_hole_assigned_static_partial._entry_ptr.666, ptr @test_big_hole_assigned_static_partial._entry_ptr.669, ptr @test_big_hole_dynamic_all._entry, ptr @test_big_hole_dynamic_all._entry.451, ptr @test_big_hole_dynamic_all._entry.454, ptr @test_big_hole_dynamic_all._entry.457, ptr @test_big_hole_dynamic_all._entry.460, ptr @test_big_hole_dynamic_all._entry.463, ptr @test_big_hole_dynamic_all._entry_ptr, ptr @test_big_hole_dynamic_all._entry_ptr.453, ptr @test_big_hole_dynamic_all._entry_ptr.456, ptr @test_big_hole_dynamic_all._entry_ptr.459, ptr @test_big_hole_dynamic_all._entry_ptr.462, ptr @test_big_hole_dynamic_all._entry_ptr.465, ptr @test_big_hole_dynamic_partial._entry, ptr @test_big_hole_dynamic_partial._entry.179, ptr @test_big_hole_dynamic_partial._entry.182, ptr @test_big_hole_dynamic_partial._entry.185, ptr @test_big_hole_dynamic_partial._entry.188, ptr @test_big_hole_dynamic_partial._entry.191, ptr @test_big_hole_dynamic_partial._entry_ptr, ptr @test_big_hole_dynamic_partial._entry_ptr.181, ptr @test_big_hole_dynamic_partial._entry_ptr.184, ptr @test_big_hole_dynamic_partial._entry_ptr.187, ptr @test_big_hole_dynamic_partial._entry_ptr.190, ptr @test_big_hole_dynamic_partial._entry_ptr.193, ptr @test_big_hole_none._entry, ptr @test_big_hole_none._entry.1047, ptr @test_big_hole_none._entry.1050, ptr @test_big_hole_none._entry.1053, ptr @test_big_hole_none._entry.1056, ptr @test_big_hole_none._entry.1059, ptr @test_big_hole_none._entry_ptr, ptr @test_big_hole_none._entry_ptr.1049, ptr @test_big_hole_none._entry_ptr.1052, ptr @test_big_hole_none._entry_ptr.1055, ptr @test_big_hole_none._entry_ptr.1058, ptr @test_big_hole_none._entry_ptr.1061, ptr @test_big_hole_runtime_all._entry, ptr @test_big_hole_runtime_all._entry.587, ptr @test_big_hole_runtime_all._entry.590, ptr @test_big_hole_runtime_all._entry.593, ptr @test_big_hole_runtime_all._entry.596, ptr @test_big_hole_runtime_all._entry.599, ptr @test_big_hole_runtime_all._entry_ptr, ptr @test_big_hole_runtime_all._entry_ptr.589, ptr @test_big_hole_runtime_all._entry_ptr.592, ptr @test_big_hole_runtime_all._entry_ptr.595, ptr @test_big_hole_runtime_all._entry_ptr.598, ptr @test_big_hole_runtime_all._entry_ptr.601, ptr @test_big_hole_runtime_partial._entry, ptr @test_big_hole_runtime_partial._entry.519, ptr @test_big_hole_runtime_partial._entry.522, ptr @test_big_hole_runtime_partial._entry.525, ptr @test_big_hole_runtime_partial._entry.528, ptr @test_big_hole_runtime_partial._entry.531, ptr @test_big_hole_runtime_partial._entry_ptr, ptr @test_big_hole_runtime_partial._entry_ptr.521, ptr @test_big_hole_runtime_partial._entry_ptr.524, ptr @test_big_hole_runtime_partial._entry_ptr.527, ptr @test_big_hole_runtime_partial._entry_ptr.530, ptr @test_big_hole_runtime_partial._entry_ptr.533, ptr @test_big_hole_static_all._entry, ptr @test_big_hole_static_all._entry.383, ptr @test_big_hole_static_all._entry.386, ptr @test_big_hole_static_all._entry.389, ptr @test_big_hole_static_all._entry.392, ptr @test_big_hole_static_all._entry.395, ptr @test_big_hole_static_all._entry_ptr, ptr @test_big_hole_static_all._entry_ptr.385, ptr @test_big_hole_static_all._entry_ptr.388, ptr @test_big_hole_static_all._entry_ptr.391, ptr @test_big_hole_static_all._entry_ptr.394, ptr @test_big_hole_static_all._entry_ptr.397, ptr @test_big_hole_static_partial._entry, ptr @test_big_hole_static_partial._entry.315, ptr @test_big_hole_static_partial._entry.318, ptr @test_big_hole_static_partial._entry.321, ptr @test_big_hole_static_partial._entry.324, ptr @test_big_hole_static_partial._entry.327, ptr @test_big_hole_static_partial._entry_ptr, ptr @test_big_hole_static_partial._entry_ptr.317, ptr @test_big_hole_static_partial._entry_ptr.320, ptr @test_big_hole_static_partial._entry_ptr.323, ptr @test_big_hole_static_partial._entry_ptr.326, ptr @test_big_hole_static_partial._entry_ptr.329, ptr @test_big_hole_zero._entry, ptr @test_big_hole_zero._entry.111, ptr @test_big_hole_zero._entry.114, ptr @test_big_hole_zero._entry.117, ptr @test_big_hole_zero._entry.120, ptr @test_big_hole_zero._entry.123, ptr @test_big_hole_zero._entry_ptr, ptr @test_big_hole_zero._entry_ptr.113, ptr @test_big_hole_zero._entry_ptr.116, ptr @test_big_hole_zero._entry_ptr.119, ptr @test_big_hole_zero._entry_ptr.122, ptr @test_big_hole_zero._entry_ptr.125, ptr @test_char_array_none._entry, ptr @test_char_array_none._entry.979, ptr @test_char_array_none._entry.982, ptr @test_char_array_none._entry.985, ptr @test_char_array_none._entry.988, ptr @test_char_array_none._entry.991, ptr @test_char_array_none._entry_ptr, ptr @test_char_array_none._entry_ptr.981, ptr @test_char_array_none._entry_ptr.984, ptr @test_char_array_none._entry_ptr.987, ptr @test_char_array_none._entry_ptr.990, ptr @test_char_array_none._entry_ptr.993, ptr @test_char_array_zero._entry, ptr @test_char_array_zero._entry.77, ptr @test_char_array_zero._entry.80, ptr @test_char_array_zero._entry.83, ptr @test_char_array_zero._entry.86, ptr @test_char_array_zero._entry.89, ptr @test_char_array_zero._entry_ptr, ptr @test_char_array_zero._entry_ptr.79, ptr @test_char_array_zero._entry_ptr.82, ptr @test_char_array_zero._entry_ptr.85, ptr @test_char_array_zero._entry_ptr.88, ptr @test_char_array_zero._entry_ptr.91, ptr @test_packed_assigned_copy._entry, ptr @test_packed_assigned_copy._entry.894, ptr @test_packed_assigned_copy._entry.897, ptr @test_packed_assigned_copy._entry.900, ptr @test_packed_assigned_copy._entry.903, ptr @test_packed_assigned_copy._entry.906, ptr @test_packed_assigned_copy._entry_ptr, ptr @test_packed_assigned_copy._entry_ptr.896, ptr @test_packed_assigned_copy._entry_ptr.899, ptr @test_packed_assigned_copy._entry_ptr.902, ptr @test_packed_assigned_copy._entry_ptr.905, ptr @test_packed_assigned_copy._entry_ptr.908, ptr @test_packed_assigned_dynamic_all._entry, ptr @test_packed_assigned_dynamic_all._entry.825, ptr @test_packed_assigned_dynamic_all._entry.828, ptr @test_packed_assigned_dynamic_all._entry.831, ptr @test_packed_assigned_dynamic_all._entry.834, ptr @test_packed_assigned_dynamic_all._entry.837, ptr @test_packed_assigned_dynamic_all._entry_ptr, ptr @test_packed_assigned_dynamic_all._entry_ptr.827, ptr @test_packed_assigned_dynamic_all._entry_ptr.830, ptr @test_packed_assigned_dynamic_all._entry_ptr.833, ptr @test_packed_assigned_dynamic_all._entry_ptr.836, ptr @test_packed_assigned_dynamic_all._entry_ptr.839, ptr @test_packed_assigned_dynamic_partial._entry, ptr @test_packed_assigned_dynamic_partial._entry.281, ptr @test_packed_assigned_dynamic_partial._entry.284, ptr @test_packed_assigned_dynamic_partial._entry.287, ptr @test_packed_assigned_dynamic_partial._entry.290, ptr @test_packed_assigned_dynamic_partial._entry.293, ptr @test_packed_assigned_dynamic_partial._entry_ptr, ptr @test_packed_assigned_dynamic_partial._entry_ptr.283, ptr @test_packed_assigned_dynamic_partial._entry_ptr.286, ptr @test_packed_assigned_dynamic_partial._entry_ptr.289, ptr @test_packed_assigned_dynamic_partial._entry_ptr.292, ptr @test_packed_assigned_dynamic_partial._entry_ptr.295, ptr @test_packed_assigned_static_all._entry, ptr @test_packed_assigned_static_all._entry.757, ptr @test_packed_assigned_static_all._entry.760, ptr @test_packed_assigned_static_all._entry.763, ptr @test_packed_assigned_static_all._entry.766, ptr @test_packed_assigned_static_all._entry.769, ptr @test_packed_assigned_static_all._entry_ptr, ptr @test_packed_assigned_static_all._entry_ptr.759, ptr @test_packed_assigned_static_all._entry_ptr.762, ptr @test_packed_assigned_static_all._entry_ptr.765, ptr @test_packed_assigned_static_all._entry_ptr.768, ptr @test_packed_assigned_static_all._entry_ptr.771, ptr @test_packed_assigned_static_partial._entry, ptr @test_packed_assigned_static_partial._entry.689, ptr @test_packed_assigned_static_partial._entry.692, ptr @test_packed_assigned_static_partial._entry.695, ptr @test_packed_assigned_static_partial._entry.698, ptr @test_packed_assigned_static_partial._entry.701, ptr @test_packed_assigned_static_partial._entry_ptr, ptr @test_packed_assigned_static_partial._entry_ptr.691, ptr @test_packed_assigned_static_partial._entry_ptr.694, ptr @test_packed_assigned_static_partial._entry_ptr.697, ptr @test_packed_assigned_static_partial._entry_ptr.700, ptr @test_packed_assigned_static_partial._entry_ptr.703, ptr @test_packed_dynamic_all._entry, ptr @test_packed_dynamic_all._entry.485, ptr @test_packed_dynamic_all._entry.488, ptr @test_packed_dynamic_all._entry.491, ptr @test_packed_dynamic_all._entry.494, ptr @test_packed_dynamic_all._entry.497, ptr @test_packed_dynamic_all._entry_ptr, ptr @test_packed_dynamic_all._entry_ptr.487, ptr @test_packed_dynamic_all._entry_ptr.490, ptr @test_packed_dynamic_all._entry_ptr.493, ptr @test_packed_dynamic_all._entry_ptr.496, ptr @test_packed_dynamic_all._entry_ptr.499, ptr @test_packed_dynamic_partial._entry, ptr @test_packed_dynamic_partial._entry.213, ptr @test_packed_dynamic_partial._entry.216, ptr @test_packed_dynamic_partial._entry.219, ptr @test_packed_dynamic_partial._entry.222, ptr @test_packed_dynamic_partial._entry.225, ptr @test_packed_dynamic_partial._entry_ptr, ptr @test_packed_dynamic_partial._entry_ptr.215, ptr @test_packed_dynamic_partial._entry_ptr.218, ptr @test_packed_dynamic_partial._entry_ptr.221, ptr @test_packed_dynamic_partial._entry_ptr.224, ptr @test_packed_dynamic_partial._entry_ptr.227, ptr @test_packed_none._entry, ptr @test_packed_none._entry.1081, ptr @test_packed_none._entry.1084, ptr @test_packed_none._entry.1087, ptr @test_packed_none._entry.1090, ptr @test_packed_none._entry.1093, ptr @test_packed_none._entry_ptr, ptr @test_packed_none._entry_ptr.1083, ptr @test_packed_none._entry_ptr.1086, ptr @test_packed_none._entry_ptr.1089, ptr @test_packed_none._entry_ptr.1092, ptr @test_packed_none._entry_ptr.1095, ptr @test_packed_runtime_all._entry, ptr @test_packed_runtime_all._entry.621, ptr @test_packed_runtime_all._entry.624, ptr @test_packed_runtime_all._entry.627, ptr @test_packed_runtime_all._entry.630, ptr @test_packed_runtime_all._entry.633, ptr @test_packed_runtime_all._entry_ptr, ptr @test_packed_runtime_all._entry_ptr.623, ptr @test_packed_runtime_all._entry_ptr.626, ptr @test_packed_runtime_all._entry_ptr.629, ptr @test_packed_runtime_all._entry_ptr.632, ptr @test_packed_runtime_all._entry_ptr.635, ptr @test_packed_runtime_partial._entry, ptr @test_packed_runtime_partial._entry.553, ptr @test_packed_runtime_partial._entry.556, ptr @test_packed_runtime_partial._entry.559, ptr @test_packed_runtime_partial._entry.562, ptr @test_packed_runtime_partial._entry.565, ptr @test_packed_runtime_partial._entry_ptr, ptr @test_packed_runtime_partial._entry_ptr.555, ptr @test_packed_runtime_partial._entry_ptr.558, ptr @test_packed_runtime_partial._entry_ptr.561, ptr @test_packed_runtime_partial._entry_ptr.564, ptr @test_packed_runtime_partial._entry_ptr.567, ptr @test_packed_static_all._entry, ptr @test_packed_static_all._entry.417, ptr @test_packed_static_all._entry.420, ptr @test_packed_static_all._entry.423, ptr @test_packed_static_all._entry.426, ptr @test_packed_static_all._entry.429, ptr @test_packed_static_all._entry_ptr, ptr @test_packed_static_all._entry_ptr.419, ptr @test_packed_static_all._entry_ptr.422, ptr @test_packed_static_all._entry_ptr.425, ptr @test_packed_static_all._entry_ptr.428, ptr @test_packed_static_all._entry_ptr.431, ptr @test_packed_static_partial._entry, ptr @test_packed_static_partial._entry.349, ptr @test_packed_static_partial._entry.352, ptr @test_packed_static_partial._entry.355, ptr @test_packed_static_partial._entry.358, ptr @test_packed_static_partial._entry.361, ptr @test_packed_static_partial._entry_ptr, ptr @test_packed_static_partial._entry_ptr.351, ptr @test_packed_static_partial._entry_ptr.354, ptr @test_packed_static_partial._entry_ptr.357, ptr @test_packed_static_partial._entry_ptr.360, ptr @test_packed_static_partial._entry_ptr.363, ptr @test_packed_zero._entry, ptr @test_packed_zero._entry.145, ptr @test_packed_zero._entry.148, ptr @test_packed_zero._entry.151, ptr @test_packed_zero._entry.154, ptr @test_packed_zero._entry.157, ptr @test_packed_zero._entry_ptr, ptr @test_packed_zero._entry_ptr.147, ptr @test_packed_zero._entry_ptr.150, ptr @test_packed_zero._entry_ptr.153, ptr @test_packed_zero._entry_ptr.156, ptr @test_packed_zero._entry_ptr.159, ptr @test_small_hole_assigned_copy._entry, ptr @test_small_hole_assigned_copy._entry.842, ptr @test_small_hole_assigned_copy._entry.845, ptr @test_small_hole_assigned_copy._entry.848, ptr @test_small_hole_assigned_copy._entry.851, ptr @test_small_hole_assigned_copy._entry.854, ptr @test_small_hole_assigned_copy._entry_ptr, ptr @test_small_hole_assigned_copy._entry_ptr.844, ptr @test_small_hole_assigned_copy._entry_ptr.847, ptr @test_small_hole_assigned_copy._entry_ptr.850, ptr @test_small_hole_assigned_copy._entry_ptr.853, ptr @test_small_hole_assigned_copy._entry_ptr.856, ptr @test_small_hole_assigned_dynamic_all._entry, ptr @test_small_hole_assigned_dynamic_all._entry.774, ptr @test_small_hole_assigned_dynamic_all._entry.777, ptr @test_small_hole_assigned_dynamic_all._entry.780, ptr @test_small_hole_assigned_dynamic_all._entry.783, ptr @test_small_hole_assigned_dynamic_all._entry.786, ptr @test_small_hole_assigned_dynamic_all._entry_ptr, ptr @test_small_hole_assigned_dynamic_all._entry_ptr.776, ptr @test_small_hole_assigned_dynamic_all._entry_ptr.779, ptr @test_small_hole_assigned_dynamic_all._entry_ptr.782, ptr @test_small_hole_assigned_dynamic_all._entry_ptr.785, ptr @test_small_hole_assigned_dynamic_all._entry_ptr.788, ptr @test_small_hole_assigned_dynamic_partial._entry, ptr @test_small_hole_assigned_dynamic_partial._entry.230, ptr @test_small_hole_assigned_dynamic_partial._entry.233, ptr @test_small_hole_assigned_dynamic_partial._entry.236, ptr @test_small_hole_assigned_dynamic_partial._entry.239, ptr @test_small_hole_assigned_dynamic_partial._entry.242, ptr @test_small_hole_assigned_dynamic_partial._entry_ptr, ptr @test_small_hole_assigned_dynamic_partial._entry_ptr.232, ptr @test_small_hole_assigned_dynamic_partial._entry_ptr.235, ptr @test_small_hole_assigned_dynamic_partial._entry_ptr.238, ptr @test_small_hole_assigned_dynamic_partial._entry_ptr.241, ptr @test_small_hole_assigned_dynamic_partial._entry_ptr.244, ptr @test_small_hole_assigned_static_all._entry, ptr @test_small_hole_assigned_static_all._entry.706, ptr @test_small_hole_assigned_static_all._entry.709, ptr @test_small_hole_assigned_static_all._entry.712, ptr @test_small_hole_assigned_static_all._entry.715, ptr @test_small_hole_assigned_static_all._entry.718, ptr @test_small_hole_assigned_static_all._entry_ptr, ptr @test_small_hole_assigned_static_all._entry_ptr.708, ptr @test_small_hole_assigned_static_all._entry_ptr.711, ptr @test_small_hole_assigned_static_all._entry_ptr.714, ptr @test_small_hole_assigned_static_all._entry_ptr.717, ptr @test_small_hole_assigned_static_all._entry_ptr.720, ptr @test_small_hole_assigned_static_partial._entry, ptr @test_small_hole_assigned_static_partial._entry.638, ptr @test_small_hole_assigned_static_partial._entry.641, ptr @test_small_hole_assigned_static_partial._entry.644, ptr @test_small_hole_assigned_static_partial._entry.647, ptr @test_small_hole_assigned_static_partial._entry.650, ptr @test_small_hole_assigned_static_partial._entry_ptr, ptr @test_small_hole_assigned_static_partial._entry_ptr.640, ptr @test_small_hole_assigned_static_partial._entry_ptr.643, ptr @test_small_hole_assigned_static_partial._entry_ptr.646, ptr @test_small_hole_assigned_static_partial._entry_ptr.649, ptr @test_small_hole_assigned_static_partial._entry_ptr.652, ptr @test_small_hole_dynamic_all._entry, ptr @test_small_hole_dynamic_all._entry.434, ptr @test_small_hole_dynamic_all._entry.437, ptr @test_small_hole_dynamic_all._entry.440, ptr @test_small_hole_dynamic_all._entry.443, ptr @test_small_hole_dynamic_all._entry.446, ptr @test_small_hole_dynamic_all._entry_ptr, ptr @test_small_hole_dynamic_all._entry_ptr.436, ptr @test_small_hole_dynamic_all._entry_ptr.439, ptr @test_small_hole_dynamic_all._entry_ptr.442, ptr @test_small_hole_dynamic_all._entry_ptr.445, ptr @test_small_hole_dynamic_all._entry_ptr.448, ptr @test_small_hole_dynamic_partial._entry, ptr @test_small_hole_dynamic_partial._entry.162, ptr @test_small_hole_dynamic_partial._entry.165, ptr @test_small_hole_dynamic_partial._entry.168, ptr @test_small_hole_dynamic_partial._entry.171, ptr @test_small_hole_dynamic_partial._entry.174, ptr @test_small_hole_dynamic_partial._entry_ptr, ptr @test_small_hole_dynamic_partial._entry_ptr.164, ptr @test_small_hole_dynamic_partial._entry_ptr.167, ptr @test_small_hole_dynamic_partial._entry_ptr.170, ptr @test_small_hole_dynamic_partial._entry_ptr.173, ptr @test_small_hole_dynamic_partial._entry_ptr.176, ptr @test_small_hole_none._entry, ptr @test_small_hole_none._entry.1030, ptr @test_small_hole_none._entry.1033, ptr @test_small_hole_none._entry.1036, ptr @test_small_hole_none._entry.1039, ptr @test_small_hole_none._entry.1042, ptr @test_small_hole_none._entry_ptr, ptr @test_small_hole_none._entry_ptr.1032, ptr @test_small_hole_none._entry_ptr.1035, ptr @test_small_hole_none._entry_ptr.1038, ptr @test_small_hole_none._entry_ptr.1041, ptr @test_small_hole_none._entry_ptr.1044, ptr @test_small_hole_runtime_all._entry, ptr @test_small_hole_runtime_all._entry.570, ptr @test_small_hole_runtime_all._entry.573, ptr @test_small_hole_runtime_all._entry.576, ptr @test_small_hole_runtime_all._entry.579, ptr @test_small_hole_runtime_all._entry.582, ptr @test_small_hole_runtime_all._entry_ptr, ptr @test_small_hole_runtime_all._entry_ptr.572, ptr @test_small_hole_runtime_all._entry_ptr.575, ptr @test_small_hole_runtime_all._entry_ptr.578, ptr @test_small_hole_runtime_all._entry_ptr.581, ptr @test_small_hole_runtime_all._entry_ptr.584, ptr @test_small_hole_runtime_partial._entry, ptr @test_small_hole_runtime_partial._entry.502, ptr @test_small_hole_runtime_partial._entry.505, ptr @test_small_hole_runtime_partial._entry.508, ptr @test_small_hole_runtime_partial._entry.511, ptr @test_small_hole_runtime_partial._entry.514, ptr @test_small_hole_runtime_partial._entry_ptr, ptr @test_small_hole_runtime_partial._entry_ptr.504, ptr @test_small_hole_runtime_partial._entry_ptr.507, ptr @test_small_hole_runtime_partial._entry_ptr.510, ptr @test_small_hole_runtime_partial._entry_ptr.513, ptr @test_small_hole_runtime_partial._entry_ptr.516, ptr @test_small_hole_static_all._entry, ptr @test_small_hole_static_all._entry.366, ptr @test_small_hole_static_all._entry.369, ptr @test_small_hole_static_all._entry.372, ptr @test_small_hole_static_all._entry.375, ptr @test_small_hole_static_all._entry.378, ptr @test_small_hole_static_all._entry_ptr, ptr @test_small_hole_static_all._entry_ptr.368, ptr @test_small_hole_static_all._entry_ptr.371, ptr @test_small_hole_static_all._entry_ptr.374, ptr @test_small_hole_static_all._entry_ptr.377, ptr @test_small_hole_static_all._entry_ptr.380, ptr @test_small_hole_static_partial._entry, ptr @test_small_hole_static_partial._entry.298, ptr @test_small_hole_static_partial._entry.301, ptr @test_small_hole_static_partial._entry.304, ptr @test_small_hole_static_partial._entry.307, ptr @test_small_hole_static_partial._entry.310, ptr @test_small_hole_static_partial._entry_ptr, ptr @test_small_hole_static_partial._entry_ptr.300, ptr @test_small_hole_static_partial._entry_ptr.303, ptr @test_small_hole_static_partial._entry_ptr.306, ptr @test_small_hole_static_partial._entry_ptr.309, ptr @test_small_hole_static_partial._entry_ptr.312, ptr @test_small_hole_zero._entry, ptr @test_small_hole_zero._entry.100, ptr @test_small_hole_zero._entry.103, ptr @test_small_hole_zero._entry.106, ptr @test_small_hole_zero._entry.94, ptr @test_small_hole_zero._entry.97, ptr @test_small_hole_zero._entry_ptr, ptr @test_small_hole_zero._entry_ptr.102, ptr @test_small_hole_zero._entry_ptr.105, ptr @test_small_hole_zero._entry_ptr.108, ptr @test_small_hole_zero._entry_ptr.96, ptr @test_small_hole_zero._entry_ptr.99, ptr @test_stackinit_exit, ptr @test_stackinit_init._entry, ptr @test_stackinit_init._entry.3, ptr @test_stackinit_init._entry_ptr, ptr @test_stackinit_init._entry_ptr.5, ptr @test_switch_1_none._entry, ptr @test_switch_1_none._entry.1002, ptr @test_switch_1_none._entry.1005, ptr @test_switch_1_none._entry.1008, ptr @test_switch_1_none._entry.996, ptr @test_switch_1_none._entry.999, ptr @test_switch_1_none._entry_ptr, ptr @test_switch_1_none._entry_ptr.1001, ptr @test_switch_1_none._entry_ptr.1004, ptr @test_switch_1_none._entry_ptr.1007, ptr @test_switch_1_none._entry_ptr.1010, ptr @test_switch_1_none._entry_ptr.998, ptr @test_switch_2_none._entry, ptr @test_switch_2_none._entry.1013, ptr @test_switch_2_none._entry.1016, ptr @test_switch_2_none._entry.1019, ptr @test_switch_2_none._entry.1022, ptr @test_switch_2_none._entry.1025, ptr @test_switch_2_none._entry_ptr, ptr @test_switch_2_none._entry_ptr.1015, ptr @test_switch_2_none._entry_ptr.1018, ptr @test_switch_2_none._entry_ptr.1021, ptr @test_switch_2_none._entry_ptr.1024, ptr @test_switch_2_none._entry_ptr.1027, ptr @test_trailing_hole_assigned_copy._entry, ptr @test_trailing_hole_assigned_copy._entry.877, ptr @test_trailing_hole_assigned_copy._entry.880, ptr @test_trailing_hole_assigned_copy._entry.883, ptr @test_trailing_hole_assigned_copy._entry.886, ptr @test_trailing_hole_assigned_copy._entry.889, ptr @test_trailing_hole_assigned_copy._entry_ptr, ptr @test_trailing_hole_assigned_copy._entry_ptr.879, ptr @test_trailing_hole_assigned_copy._entry_ptr.882, ptr @test_trailing_hole_assigned_copy._entry_ptr.885, ptr @test_trailing_hole_assigned_copy._entry_ptr.888, ptr @test_trailing_hole_assigned_copy._entry_ptr.891, ptr @test_trailing_hole_assigned_dynamic_all._entry, ptr @test_trailing_hole_assigned_dynamic_all._entry.808, ptr @test_trailing_hole_assigned_dynamic_all._entry.811, ptr @test_trailing_hole_assigned_dynamic_all._entry.814, ptr @test_trailing_hole_assigned_dynamic_all._entry.817, ptr @test_trailing_hole_assigned_dynamic_all._entry.820, ptr @test_trailing_hole_assigned_dynamic_all._entry_ptr, ptr @test_trailing_hole_assigned_dynamic_all._entry_ptr.810, ptr @test_trailing_hole_assigned_dynamic_all._entry_ptr.813, ptr @test_trailing_hole_assigned_dynamic_all._entry_ptr.816, ptr @test_trailing_hole_assigned_dynamic_all._entry_ptr.819, ptr @test_trailing_hole_assigned_dynamic_all._entry_ptr.822, ptr @test_trailing_hole_assigned_dynamic_partial._entry, ptr @test_trailing_hole_assigned_dynamic_partial._entry.264, ptr @test_trailing_hole_assigned_dynamic_partial._entry.267, ptr @test_trailing_hole_assigned_dynamic_partial._entry.270, ptr @test_trailing_hole_assigned_dynamic_partial._entry.273, ptr @test_trailing_hole_assigned_dynamic_partial._entry.276, ptr @test_trailing_hole_assigned_dynamic_partial._entry_ptr, ptr @test_trailing_hole_assigned_dynamic_partial._entry_ptr.266, ptr @test_trailing_hole_assigned_dynamic_partial._entry_ptr.269, ptr @test_trailing_hole_assigned_dynamic_partial._entry_ptr.272, ptr @test_trailing_hole_assigned_dynamic_partial._entry_ptr.275, ptr @test_trailing_hole_assigned_dynamic_partial._entry_ptr.278, ptr @test_trailing_hole_assigned_static_all._entry, ptr @test_trailing_hole_assigned_static_all._entry.740, ptr @test_trailing_hole_assigned_static_all._entry.743, ptr @test_trailing_hole_assigned_static_all._entry.746, ptr @test_trailing_hole_assigned_static_all._entry.749, ptr @test_trailing_hole_assigned_static_all._entry.752, ptr @test_trailing_hole_assigned_static_all._entry_ptr, ptr @test_trailing_hole_assigned_static_all._entry_ptr.742, ptr @test_trailing_hole_assigned_static_all._entry_ptr.745, ptr @test_trailing_hole_assigned_static_all._entry_ptr.748, ptr @test_trailing_hole_assigned_static_all._entry_ptr.751, ptr @test_trailing_hole_assigned_static_all._entry_ptr.754, ptr @test_trailing_hole_assigned_static_partial._entry, ptr @test_trailing_hole_assigned_static_partial._entry.672, ptr @test_trailing_hole_assigned_static_partial._entry.675, ptr @test_trailing_hole_assigned_static_partial._entry.678, ptr @test_trailing_hole_assigned_static_partial._entry.681, ptr @test_trailing_hole_assigned_static_partial._entry.684, ptr @test_trailing_hole_assigned_static_partial._entry_ptr, ptr @test_trailing_hole_assigned_static_partial._entry_ptr.674, ptr @test_trailing_hole_assigned_static_partial._entry_ptr.677, ptr @test_trailing_hole_assigned_static_partial._entry_ptr.680, ptr @test_trailing_hole_assigned_static_partial._entry_ptr.683, ptr @test_trailing_hole_assigned_static_partial._entry_ptr.686, ptr @test_trailing_hole_dynamic_all._entry, ptr @test_trailing_hole_dynamic_all._entry.468, ptr @test_trailing_hole_dynamic_all._entry.471, ptr @test_trailing_hole_dynamic_all._entry.474, ptr @test_trailing_hole_dynamic_all._entry.477, ptr @test_trailing_hole_dynamic_all._entry.480, ptr @test_trailing_hole_dynamic_all._entry_ptr, ptr @test_trailing_hole_dynamic_all._entry_ptr.470, ptr @test_trailing_hole_dynamic_all._entry_ptr.473, ptr @test_trailing_hole_dynamic_all._entry_ptr.476, ptr @test_trailing_hole_dynamic_all._entry_ptr.479, ptr @test_trailing_hole_dynamic_all._entry_ptr.482, ptr @test_trailing_hole_dynamic_partial._entry, ptr @test_trailing_hole_dynamic_partial._entry.196, ptr @test_trailing_hole_dynamic_partial._entry.199, ptr @test_trailing_hole_dynamic_partial._entry.202, ptr @test_trailing_hole_dynamic_partial._entry.205, ptr @test_trailing_hole_dynamic_partial._entry.208, ptr @test_trailing_hole_dynamic_partial._entry_ptr, ptr @test_trailing_hole_dynamic_partial._entry_ptr.198, ptr @test_trailing_hole_dynamic_partial._entry_ptr.201, ptr @test_trailing_hole_dynamic_partial._entry_ptr.204, ptr @test_trailing_hole_dynamic_partial._entry_ptr.207, ptr @test_trailing_hole_dynamic_partial._entry_ptr.210, ptr @test_trailing_hole_none._entry, ptr @test_trailing_hole_none._entry.1064, ptr @test_trailing_hole_none._entry.1067, ptr @test_trailing_hole_none._entry.1070, ptr @test_trailing_hole_none._entry.1073, ptr @test_trailing_hole_none._entry.1076, ptr @test_trailing_hole_none._entry_ptr, ptr @test_trailing_hole_none._entry_ptr.1066, ptr @test_trailing_hole_none._entry_ptr.1069, ptr @test_trailing_hole_none._entry_ptr.1072, ptr @test_trailing_hole_none._entry_ptr.1075, ptr @test_trailing_hole_none._entry_ptr.1078, ptr @test_trailing_hole_runtime_all._entry, ptr @test_trailing_hole_runtime_all._entry.604, ptr @test_trailing_hole_runtime_all._entry.607, ptr @test_trailing_hole_runtime_all._entry.610, ptr @test_trailing_hole_runtime_all._entry.613, ptr @test_trailing_hole_runtime_all._entry.616, ptr @test_trailing_hole_runtime_all._entry_ptr, ptr @test_trailing_hole_runtime_all._entry_ptr.606, ptr @test_trailing_hole_runtime_all._entry_ptr.609, ptr @test_trailing_hole_runtime_all._entry_ptr.612, ptr @test_trailing_hole_runtime_all._entry_ptr.615, ptr @test_trailing_hole_runtime_all._entry_ptr.618, ptr @test_trailing_hole_runtime_partial._entry, ptr @test_trailing_hole_runtime_partial._entry.536, ptr @test_trailing_hole_runtime_partial._entry.539, ptr @test_trailing_hole_runtime_partial._entry.542, ptr @test_trailing_hole_runtime_partial._entry.545, ptr @test_trailing_hole_runtime_partial._entry.548, ptr @test_trailing_hole_runtime_partial._entry_ptr, ptr @test_trailing_hole_runtime_partial._entry_ptr.538, ptr @test_trailing_hole_runtime_partial._entry_ptr.541, ptr @test_trailing_hole_runtime_partial._entry_ptr.544, ptr @test_trailing_hole_runtime_partial._entry_ptr.547, ptr @test_trailing_hole_runtime_partial._entry_ptr.550, ptr @test_trailing_hole_static_all._entry, ptr @test_trailing_hole_static_all._entry.400, ptr @test_trailing_hole_static_all._entry.403, ptr @test_trailing_hole_static_all._entry.406, ptr @test_trailing_hole_static_all._entry.409, ptr @test_trailing_hole_static_all._entry.412, ptr @test_trailing_hole_static_all._entry_ptr, ptr @test_trailing_hole_static_all._entry_ptr.402, ptr @test_trailing_hole_static_all._entry_ptr.405, ptr @test_trailing_hole_static_all._entry_ptr.408, ptr @test_trailing_hole_static_all._entry_ptr.411, ptr @test_trailing_hole_static_all._entry_ptr.414, ptr @test_trailing_hole_static_partial._entry, ptr @test_trailing_hole_static_partial._entry.332, ptr @test_trailing_hole_static_partial._entry.335, ptr @test_trailing_hole_static_partial._entry.338, ptr @test_trailing_hole_static_partial._entry.341, ptr @test_trailing_hole_static_partial._entry.344, ptr @test_trailing_hole_static_partial._entry_ptr, ptr @test_trailing_hole_static_partial._entry_ptr.334, ptr @test_trailing_hole_static_partial._entry_ptr.337, ptr @test_trailing_hole_static_partial._entry_ptr.340, ptr @test_trailing_hole_static_partial._entry_ptr.343, ptr @test_trailing_hole_static_partial._entry_ptr.346, ptr @test_trailing_hole_zero._entry, ptr @test_trailing_hole_zero._entry.128, ptr @test_trailing_hole_zero._entry.131, ptr @test_trailing_hole_zero._entry.134, ptr @test_trailing_hole_zero._entry.137, ptr @test_trailing_hole_zero._entry.140, ptr @test_trailing_hole_zero._entry_ptr, ptr @test_trailing_hole_zero._entry_ptr.130, ptr @test_trailing_hole_zero._entry_ptr.133, ptr @test_trailing_hole_zero._entry_ptr.136, ptr @test_trailing_hole_zero._entry_ptr.139, ptr @test_trailing_hole_zero._entry_ptr.142, ptr @test_u16_none._entry, ptr @test_u16_none._entry.928, ptr @test_u16_none._entry.931, ptr @test_u16_none._entry.934, ptr @test_u16_none._entry.937, ptr @test_u16_none._entry.940, ptr @test_u16_none._entry_ptr, ptr @test_u16_none._entry_ptr.930, ptr @test_u16_none._entry_ptr.933, ptr @test_u16_none._entry_ptr.936, ptr @test_u16_none._entry_ptr.939, ptr @test_u16_none._entry_ptr.942, ptr @test_u16_zero._entry, ptr @test_u16_zero._entry.26, ptr @test_u16_zero._entry.29, ptr @test_u16_zero._entry.32, ptr @test_u16_zero._entry.35, ptr @test_u16_zero._entry.38, ptr @test_u16_zero._entry_ptr, ptr @test_u16_zero._entry_ptr.28, ptr @test_u16_zero._entry_ptr.31, ptr @test_u16_zero._entry_ptr.34, ptr @test_u16_zero._entry_ptr.37, ptr @test_u16_zero._entry_ptr.40, ptr @test_u32_none._entry, ptr @test_u32_none._entry.945, ptr @test_u32_none._entry.948, ptr @test_u32_none._entry.951, ptr @test_u32_none._entry.954, ptr @test_u32_none._entry.957, ptr @test_u32_none._entry_ptr, ptr @test_u32_none._entry_ptr.947, ptr @test_u32_none._entry_ptr.950, ptr @test_u32_none._entry_ptr.953, ptr @test_u32_none._entry_ptr.956, ptr @test_u32_none._entry_ptr.959, ptr @test_u32_zero._entry, ptr @test_u32_zero._entry.43, ptr @test_u32_zero._entry.46, ptr @test_u32_zero._entry.49, ptr @test_u32_zero._entry.52, ptr @test_u32_zero._entry.55, ptr @test_u32_zero._entry_ptr, ptr @test_u32_zero._entry_ptr.45, ptr @test_u32_zero._entry_ptr.48, ptr @test_u32_zero._entry_ptr.51, ptr @test_u32_zero._entry_ptr.54, ptr @test_u32_zero._entry_ptr.57, ptr @test_u64_none._entry, ptr @test_u64_none._entry.962, ptr @test_u64_none._entry.965, ptr @test_u64_none._entry.968, ptr @test_u64_none._entry.971, ptr @test_u64_none._entry.974, ptr @test_u64_none._entry_ptr, ptr @test_u64_none._entry_ptr.964, ptr @test_u64_none._entry_ptr.967, ptr @test_u64_none._entry_ptr.970, ptr @test_u64_none._entry_ptr.973, ptr @test_u64_none._entry_ptr.976, ptr @test_u64_zero._entry, ptr @test_u64_zero._entry.60, ptr @test_u64_zero._entry.63, ptr @test_u64_zero._entry.66, ptr @test_u64_zero._entry.69, ptr @test_u64_zero._entry.72, ptr @test_u64_zero._entry_ptr, ptr @test_u64_zero._entry_ptr.62, ptr @test_u64_zero._entry_ptr.65, ptr @test_u64_zero._entry_ptr.68, ptr @test_u64_zero._entry_ptr.71, ptr @test_u64_zero._entry_ptr.74, ptr @test_u8_none._entry, ptr @test_u8_none._entry.911, ptr @test_u8_none._entry.914, ptr @test_u8_none._entry.917, ptr @test_u8_none._entry.920, ptr @test_u8_none._entry.923, ptr @test_u8_none._entry_ptr, ptr @test_u8_none._entry_ptr.913, ptr @test_u8_none._entry_ptr.916, ptr @test_u8_none._entry_ptr.919, ptr @test_u8_none._entry_ptr.922, ptr @test_u8_none._entry_ptr.925, ptr @test_u8_zero._entry, ptr @test_u8_zero._entry.11, ptr @test_u8_zero._entry.14, ptr @test_u8_zero._entry.17, ptr @test_u8_zero._entry.20, ptr @test_u8_zero._entry.8, ptr @test_u8_zero._entry_ptr, ptr @test_u8_zero._entry_ptr.10, ptr @test_u8_zero._entry_ptr.13, ptr @test_u8_zero._entry_ptr.16, ptr @test_u8_zero._entry_ptr.19, ptr @test_u8_zero._entry_ptr.22, ptr @test_user._entry, ptr @test_user._entry.1098, ptr @test_user._entry.1101, ptr @test_user._entry.1104, ptr @test_user._entry.1107, ptr @test_user._entry.1110, ptr @test_user._entry_ptr, ptr @test_user._entry_ptr.1100, ptr @test_user._entry_ptr.1103, ptr @test_user._entry_ptr.1106, ptr @test_user._entry_ptr.1109, ptr @test_user._entry_ptr.1112, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.4, ptr @check_buf, ptr @target_size, ptr @.str.6, ptr @.str.7, ptr @fill_start, ptr @fill_size, ptr @target_start, ptr @.str.9, ptr @.str.12, ptr @.str.15, ptr @.str.18, ptr @.str.21, ptr @.str.23, ptr @forced_mask, ptr @.str.24, ptr @.str.25, ptr @.str.27, ptr @.str.30, ptr @.str.33, ptr @.str.36, ptr @.str.39, ptr @.str.41, ptr @.str.42, ptr @.str.44, ptr @.str.47, ptr @.str.50, ptr @.str.53, ptr @.str.56, ptr @.str.58, ptr @.str.59, ptr @.str.61, ptr @.str.64, ptr @.str.67, ptr @.str.70, ptr @.str.73, ptr @.str.75, ptr @.str.76, ptr @.str.78, ptr @.str.81, ptr @.str.84, ptr @.str.87, ptr @.str.90, ptr @.str.92, ptr @.str.93, ptr @.str.95, ptr @.str.98, ptr @.str.101, ptr @.str.104, ptr @.str.107, ptr @.str.109, ptr @.str.110, ptr @.str.112, ptr @.str.115, ptr @.str.118, ptr @.str.121, ptr @.str.124, ptr @.str.126, ptr @.str.127, ptr @.str.129, ptr @.str.132, ptr @.str.135, ptr @.str.138, ptr @.str.141, ptr @.str.143, ptr @.str.144, ptr @.str.146, ptr @.str.149, ptr @.str.152, ptr @.str.155, ptr @.str.158, ptr @.str.160, ptr @.str.161, ptr @.str.163, ptr @.str.166, ptr @.str.169, ptr @.str.172, ptr @.str.175, ptr @.str.177, ptr @.str.178, ptr @.str.180, ptr @.str.183, ptr @.str.186, ptr @.str.189, ptr @.str.192, ptr @.str.194, ptr @.str.195, ptr @.str.197, ptr @.str.200, ptr @.str.203, ptr @.str.206, ptr @.str.209, ptr @.str.211, ptr @.str.212, ptr @.str.214, ptr @.str.217, ptr @.str.220, ptr @.str.223, ptr @.str.226, ptr @.str.228, ptr @.str.229, ptr @.str.231, ptr @.str.234, ptr @.str.237, ptr @.str.240, ptr @.str.243, ptr @.str.245, ptr @.str.246, ptr @.str.248, ptr @.str.251, ptr @.str.254, ptr @.str.257, ptr @.str.260, ptr @.str.262, ptr @.str.263, ptr @.str.265, ptr @.str.268, ptr @.str.271, ptr @.str.274, ptr @.str.277, ptr @.str.279, ptr @.str.280, ptr @.str.282, ptr @.str.285, ptr @.str.288, ptr @.str.291, ptr @.str.294, ptr @.str.296, ptr @.str.297, ptr @.str.299, ptr @.str.302, ptr @.str.305, ptr @.str.308, ptr @.str.311, ptr @.str.313, ptr @.str.314, ptr @.str.316, ptr @.str.319, ptr @.str.322, ptr @.str.325, ptr @.str.328, ptr @.str.330, ptr @.str.331, ptr @.str.333, ptr @.str.336, ptr @.str.339, ptr @.str.342, ptr @.str.345, ptr @.str.347, ptr @.str.348, ptr @.str.350, ptr @.str.353, ptr @.str.356, ptr @.str.359, ptr @.str.362, ptr @.str.364, ptr @.str.365, ptr @.str.367, ptr @.str.370, ptr @.str.373, ptr @.str.376, ptr @.str.379, ptr @.str.381, ptr @.str.382, ptr @.str.384, ptr @.str.387, ptr @.str.390, ptr @.str.393, ptr @.str.396, ptr @.str.398, ptr @.str.399, ptr @.str.401, ptr @.str.404, ptr @.str.407, ptr @.str.410, ptr @.str.413, ptr @.str.415, ptr @.str.416, ptr @.str.418, ptr @.str.421, ptr @.str.424, ptr @.str.427, ptr @.str.430, ptr @.str.432, ptr @.str.433, ptr @.str.435, ptr @.str.438, ptr @.str.441, ptr @.str.444, ptr @.str.447, ptr @.str.449, ptr @.str.450, ptr @.str.452, ptr @.str.455, ptr @.str.458, ptr @.str.461, ptr @.str.464, ptr @.str.466, ptr @.str.467, ptr @.str.469, ptr @.str.472, ptr @.str.475, ptr @.str.478, ptr @.str.481, ptr @.str.483, ptr @.str.484, ptr @.str.486, ptr @.str.489, ptr @.str.492, ptr @.str.495, ptr @.str.498, ptr @.str.500, ptr @.str.501, ptr @.str.503, ptr @.str.506, ptr @.str.509, ptr @.str.512, ptr @.str.515, ptr @.str.517, ptr @.str.518, ptr @.str.520, ptr @.str.523, ptr @.str.526, ptr @.str.529, ptr @.str.532, ptr @.str.534, ptr @.str.535, ptr @.str.537, ptr @.str.540, ptr @.str.543, ptr @.str.546, ptr @.str.549, ptr @.str.551, ptr @.str.552, ptr @.str.554, ptr @.str.557, ptr @.str.560, ptr @.str.563, ptr @.str.566, ptr @.str.568, ptr @.str.569, ptr @.str.571, ptr @.str.574, ptr @.str.577, ptr @.str.580, ptr @.str.583, ptr @.str.585, ptr @.str.586, ptr @.str.588, ptr @.str.591, ptr @.str.594, ptr @.str.597, ptr @.str.600, ptr @.str.602, ptr @.str.603, ptr @.str.605, ptr @.str.608, ptr @.str.611, ptr @.str.614, ptr @.str.617, ptr @.str.619, ptr @.str.620, ptr @.str.622, ptr @.str.625, ptr @.str.628, ptr @.str.631, ptr @.str.634, ptr @.str.636, ptr @.str.637, ptr @.str.639, ptr @.str.642, ptr @.str.645, ptr @.str.648, ptr @.str.651, ptr @.str.653, ptr @.str.654, ptr @.str.656, ptr @.str.659, ptr @.str.662, ptr @.str.665, ptr @.str.668, ptr @.str.670, ptr @.str.671, ptr @.str.673, ptr @.str.676, ptr @.str.679, ptr @.str.682, ptr @.str.685, ptr @.str.687, ptr @.str.688, ptr @.str.690, ptr @.str.693, ptr @.str.696, ptr @.str.699, ptr @.str.702, ptr @.str.704, ptr @.str.705, ptr @.str.707, ptr @.str.710, ptr @.str.713, ptr @.str.716, ptr @.str.719, ptr @.str.721, ptr @.str.722, ptr @.str.724, ptr @.str.727, ptr @.str.730, ptr @.str.733, ptr @.str.736, ptr @.str.738, ptr @.str.739, ptr @.str.741, ptr @.str.744, ptr @.str.747, ptr @.str.750, ptr @.str.753, ptr @.str.755, ptr @.str.756, ptr @.str.758, ptr @.str.761, ptr @.str.764, ptr @.str.767, ptr @.str.770, ptr @.str.772, ptr @.str.773, ptr @.str.775, ptr @.str.778, ptr @.str.781, ptr @.str.784, ptr @.str.787, ptr @.str.789, ptr @.str.790, ptr @.str.792, ptr @.str.795, ptr @.str.798, ptr @.str.801, ptr @.str.804, ptr @.str.806, ptr @.str.807, ptr @.str.809, ptr @.str.812, ptr @.str.815, ptr @.str.818, ptr @.str.821, ptr @.str.823, ptr @.str.824, ptr @.str.826, ptr @.str.829, ptr @.str.832, ptr @.str.835, ptr @.str.838, ptr @.str.840, ptr @.str.841, ptr @.str.843, ptr @.str.846, ptr @.str.849, ptr @.str.852, ptr @.str.855, ptr @.str.857, ptr @.str.858, ptr @.str.859, ptr @.str.861, ptr @.str.864, ptr @.str.867, ptr @.str.870, ptr @.str.873, ptr @.str.875, ptr @.str.876, ptr @.str.878, ptr @.str.881, ptr @.str.884, ptr @.str.887, ptr @.str.890, ptr @.str.892, ptr @.str.893, ptr @.str.895, ptr @.str.898, ptr @.str.901, ptr @.str.904, ptr @.str.907, ptr @.str.909, ptr @.str.910, ptr @.str.912, ptr @.str.915, ptr @.str.918, ptr @.str.921, ptr @.str.924, ptr @.str.926, ptr @.str.927, ptr @.str.929, ptr @.str.932, ptr @.str.935, ptr @.str.938, ptr @.str.941, ptr @.str.943, ptr @.str.944, ptr @.str.946, ptr @.str.949, ptr @.str.952, ptr @.str.955, ptr @.str.958, ptr @.str.960, ptr @.str.961, ptr @.str.963, ptr @.str.966, ptr @.str.969, ptr @.str.972, ptr @.str.975, ptr @.str.977, ptr @.str.978, ptr @.str.980, ptr @.str.983, ptr @.str.986, ptr @.str.989, ptr @.str.992, ptr @.str.994, ptr @.str.995, ptr @.str.997, ptr @.str.1000, ptr @.str.1003, ptr @.str.1006, ptr @.str.1009, ptr @.str.1011, ptr @.str.1012, ptr @.str.1014, ptr @.str.1017, ptr @.str.1020, ptr @.str.1023, ptr @.str.1026, ptr @.str.1028, ptr @.str.1029, ptr @.str.1031, ptr @.str.1034, ptr @.str.1037, ptr @.str.1040, ptr @.str.1043, ptr @.str.1045, ptr @.str.1046, ptr @.str.1048, ptr @.str.1051, ptr @.str.1054, ptr @.str.1057, ptr @.str.1060, ptr @.str.1062, ptr @.str.1063, ptr @.str.1065, ptr @.str.1068, ptr @.str.1071, ptr @.str.1074, ptr @.str.1077, ptr @.str.1079, ptr @.str.1080, ptr @.str.1082, ptr @.str.1085, ptr @.str.1088, ptr @.str.1091, ptr @.str.1094, ptr @.str.1096, ptr @.str.1097, ptr @.str.1099, ptr @.str.1102, ptr @.str.1105, ptr @.str.1108, ptr @.str.1111], section "llvm.metadata"
@0 = internal global [859 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_stackinit_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1124 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1124 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1124 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1124 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_stackinit_init._entry.3 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1130 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1130 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_buf to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.1131 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1133 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @target_size to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1134 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1136 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u8_zero._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fill_start to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1146 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1148 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fill_size to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1149 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @target_start to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1152 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1154 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u8_zero._entry.8 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u8_zero._entry.11 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u8_zero._entry.14 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u8_zero._entry.17 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u8_zero._entry.20 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @forced_mask to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.1188 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u16_zero._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u16_zero._entry.26 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u16_zero._entry.29 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u16_zero._entry.32 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u16_zero._entry.35 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u16_zero._entry.38 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u32_zero._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u32_zero._entry.43 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u32_zero._entry.46 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u32_zero._entry.49 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u32_zero._entry.52 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u32_zero._entry.55 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u64_zero._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u64_zero._entry.60 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u64_zero._entry.63 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u64_zero._entry.66 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u64_zero._entry.69 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u64_zero._entry.72 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_char_array_zero._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_char_array_zero._entry.77 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_char_array_zero._entry.80 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_char_array_zero._entry.83 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_char_array_zero._entry.86 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_char_array_zero._entry.89 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_zero._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_zero._entry.94 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_zero._entry.97 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_zero._entry.100 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_zero._entry.103 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_zero._entry.106 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_zero._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_zero._entry.111 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_zero._entry.114 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_zero._entry.117 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_zero._entry.120 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_zero._entry.123 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_zero._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_zero._entry.128 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_zero._entry.131 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_zero._entry.134 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_zero._entry.137 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_zero._entry.140 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_zero._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_zero._entry.145 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_zero._entry.148 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_zero._entry.151 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_zero._entry.154 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_zero._entry.157 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_dynamic_partial._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_dynamic_partial._entry.162 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 74, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_dynamic_partial._entry.165 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_dynamic_partial._entry.168 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_dynamic_partial._entry.171 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_dynamic_partial._entry.174 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_dynamic_partial._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_dynamic_partial._entry.179 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_dynamic_partial._entry.182 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_dynamic_partial._entry.185 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_dynamic_partial._entry.188 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_dynamic_partial._entry.191 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_dynamic_partial._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_dynamic_partial._entry.196 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 77, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_dynamic_partial._entry.199 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_dynamic_partial._entry.202 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_dynamic_partial._entry.205 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_dynamic_partial._entry.208 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_dynamic_partial._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_dynamic_partial._entry.213 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_dynamic_partial._entry.216 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_dynamic_partial._entry.219 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_dynamic_partial._entry.222 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_dynamic_partial._entry.225 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_dynamic_partial._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.228 to i32), i32 81, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_dynamic_partial._entry.230 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 83, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_dynamic_partial._entry.233 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.234 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_dynamic_partial._entry.236 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_dynamic_partial._entry.239 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_dynamic_partial._entry.242 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.243 to i32), i32 81, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_dynamic_partial._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.245 to i32), i32 79, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.246 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_dynamic_partial._entry.247 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.248 to i32), i32 81, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_dynamic_partial._entry.250 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.251 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_dynamic_partial._entry.253 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.254 to i32), i32 74, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_dynamic_partial._entry.256 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.257 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_dynamic_partial._entry.259 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.260 to i32), i32 79, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_dynamic_partial._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.262 to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.263 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_dynamic_partial._entry.264 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.265 to i32), i32 86, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_dynamic_partial._entry.267 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_dynamic_partial._entry.270 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.271 to i32), i32 79, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_dynamic_partial._entry.273 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.274 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_dynamic_partial._entry.276 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.277 to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_dynamic_partial._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.279 to i32), i32 77, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.280 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_dynamic_partial._entry.281 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.282 to i32), i32 79, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_dynamic_partial._entry.284 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.285 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_dynamic_partial._entry.287 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.288 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_dynamic_partial._entry.290 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.291 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_dynamic_partial._entry.293 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.294 to i32), i32 77, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_static_partial._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.296 to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.297 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_static_partial._entry.298 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.299 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_static_partial._entry.301 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.302 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_static_partial._entry.304 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.305 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_static_partial._entry.307 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.308 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_static_partial._entry.310 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.311 to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_static_partial._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.313 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.314 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_static_partial._entry.315 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.316 to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_static_partial._entry.318 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.319 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_static_partial._entry.321 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.322 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_static_partial._entry.324 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.325 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_static_partial._entry.327 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.328 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_static_partial._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.330 to i32), i32 74, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.331 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_static_partial._entry.332 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.333 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_static_partial._entry.335 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.336 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_static_partial._entry.338 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.339 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_static_partial._entry.341 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.342 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_static_partial._entry.344 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.345 to i32), i32 74, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_static_partial._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.347 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.348 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_static_partial._entry.349 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.350 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_static_partial._entry.352 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.353 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_static_partial._entry.355 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.356 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_static_partial._entry.358 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.359 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_static_partial._entry.361 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.362 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_static_all._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.364 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.365 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_static_all._entry.366 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.367 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_static_all._entry.369 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.370 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_static_all._entry.372 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.373 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_static_all._entry.375 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.376 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_static_all._entry.378 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.379 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_static_all._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.381 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.382 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_static_all._entry.383 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.384 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_static_all._entry.386 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.387 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_static_all._entry.389 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.390 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_static_all._entry.392 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.393 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_static_all._entry.395 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.396 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_static_all._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.398 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.399 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_static_all._entry.400 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.401 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_static_all._entry.403 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.404 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_static_all._entry.406 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.407 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_static_all._entry.409 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.410 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_static_all._entry.412 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.413 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_static_all._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.415 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.416 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_static_all._entry.417 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.418 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_static_all._entry.420 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.421 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_static_all._entry.423 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.424 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_static_all._entry.426 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.427 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_static_all._entry.429 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.430 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_dynamic_all._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.432 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.433 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_dynamic_all._entry.434 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.435 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_dynamic_all._entry.437 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.438 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_dynamic_all._entry.440 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.441 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_dynamic_all._entry.443 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.444 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_dynamic_all._entry.446 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.447 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_dynamic_all._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.449 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.450 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_dynamic_all._entry.451 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.452 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_dynamic_all._entry.454 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.455 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_dynamic_all._entry.457 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.458 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_dynamic_all._entry.460 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.461 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_dynamic_all._entry.463 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.464 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_dynamic_all._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.466 to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.467 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_dynamic_all._entry.468 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.469 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_dynamic_all._entry.471 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.472 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_dynamic_all._entry.474 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.475 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_dynamic_all._entry.477 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.478 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_dynamic_all._entry.480 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.481 to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_dynamic_all._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.483 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.484 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_dynamic_all._entry.485 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.486 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_dynamic_all._entry.488 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.489 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_dynamic_all._entry.491 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.492 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_dynamic_all._entry.494 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.495 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_dynamic_all._entry.497 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.498 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_runtime_partial._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.500 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.501 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_runtime_partial._entry.502 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.503 to i32), i32 74, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_runtime_partial._entry.505 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.506 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_runtime_partial._entry.508 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.509 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_runtime_partial._entry.511 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.512 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_runtime_partial._entry.514 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.515 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_runtime_partial._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.517 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.518 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_runtime_partial._entry.519 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.520 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_runtime_partial._entry.522 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.523 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_runtime_partial._entry.525 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.526 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_runtime_partial._entry.528 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.529 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_runtime_partial._entry.531 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.532 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_runtime_partial._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.534 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.535 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_runtime_partial._entry.536 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.537 to i32), i32 77, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_runtime_partial._entry.539 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.540 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_runtime_partial._entry.542 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.543 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_runtime_partial._entry.545 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.546 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_runtime_partial._entry.548 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.549 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_runtime_partial._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.551 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.552 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_runtime_partial._entry.553 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.554 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_runtime_partial._entry.556 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.557 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_runtime_partial._entry.559 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.560 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_runtime_partial._entry.562 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.563 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_runtime_partial._entry.565 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.566 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_runtime_all._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.568 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.569 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_runtime_all._entry.570 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.571 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_runtime_all._entry.573 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.574 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_runtime_all._entry.576 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.577 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_runtime_all._entry.579 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.580 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_runtime_all._entry.582 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.583 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_runtime_all._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.585 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.586 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_runtime_all._entry.587 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.588 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_runtime_all._entry.590 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.591 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_runtime_all._entry.593 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.594 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_runtime_all._entry.596 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.597 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_runtime_all._entry.599 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.600 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_runtime_all._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.602 to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.603 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_runtime_all._entry.604 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.605 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_runtime_all._entry.607 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.608 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_runtime_all._entry.610 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.611 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_runtime_all._entry.613 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.614 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_runtime_all._entry.616 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.617 to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_runtime_all._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.619 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.620 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_runtime_all._entry.621 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.622 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_runtime_all._entry.624 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.625 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_runtime_all._entry.627 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.628 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_runtime_all._entry.630 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.631 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_runtime_all._entry.633 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.634 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_static_partial._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.636 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.637 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_static_partial._entry.638 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.639 to i32), i32 82, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_static_partial._entry.641 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.642 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_static_partial._entry.644 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.645 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_static_partial._entry.647 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.648 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_static_partial._entry.650 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.651 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_static_partial._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.653 to i32), i32 78, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.654 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_static_partial._entry.655 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.656 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_static_partial._entry.658 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.659 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_static_partial._entry.661 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.662 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_static_partial._entry.664 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.665 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_static_partial._entry.667 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.668 to i32), i32 78, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_static_partial._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.670 to i32), i32 83, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.671 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_static_partial._entry.672 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.673 to i32), i32 85, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_static_partial._entry.675 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.676 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_static_partial._entry.678 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.679 to i32), i32 78, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_static_partial._entry.681 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.682 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_static_partial._entry.684 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.685 to i32), i32 83, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_static_partial._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.687 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.688 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_static_partial._entry.689 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.690 to i32), i32 78, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_static_partial._entry.692 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.693 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_static_partial._entry.695 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.696 to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_static_partial._entry.698 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.699 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_static_partial._entry.701 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.702 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_static_all._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.704 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.705 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_static_all._entry.706 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.707 to i32), i32 78, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_static_all._entry.709 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.710 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_static_all._entry.712 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.713 to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_static_all._entry.715 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.716 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_static_all._entry.718 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.719 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_static_all._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.721 to i32), i32 74, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.722 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_static_all._entry.723 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.724 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_static_all._entry.726 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.727 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_static_all._entry.729 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.730 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_static_all._entry.732 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.733 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_static_all._entry.735 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.736 to i32), i32 74, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_static_all._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.738 to i32), i32 79, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.739 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_static_all._entry.740 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.741 to i32), i32 81, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_static_all._entry.743 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.744 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_static_all._entry.746 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.747 to i32), i32 74, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_static_all._entry.749 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.750 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_static_all._entry.752 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.753 to i32), i32 79, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_static_all._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.755 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.756 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_static_all._entry.757 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.758 to i32), i32 74, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_static_all._entry.760 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.761 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_static_all._entry.763 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.764 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_static_all._entry.766 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.767 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_static_all._entry.769 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.770 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_dynamic_all._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.772 to i32), i32 77, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.773 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_dynamic_all._entry.774 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.775 to i32), i32 79, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_dynamic_all._entry.777 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.778 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_dynamic_all._entry.780 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.781 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_dynamic_all._entry.783 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.784 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_dynamic_all._entry.786 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.787 to i32), i32 77, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_dynamic_all._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.789 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.790 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_dynamic_all._entry.791 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.792 to i32), i32 77, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_dynamic_all._entry.794 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.795 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_dynamic_all._entry.797 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.798 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_dynamic_all._entry.800 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.801 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_dynamic_all._entry.803 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.804 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_dynamic_all._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.806 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.807 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_dynamic_all._entry.808 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.809 to i32), i32 82, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_dynamic_all._entry.811 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.812 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_dynamic_all._entry.814 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.815 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_dynamic_all._entry.817 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.818 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_dynamic_all._entry.820 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.821 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_dynamic_all._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.823 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.824 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_dynamic_all._entry.825 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.826 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_dynamic_all._entry.828 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.829 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_dynamic_all._entry.831 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.832 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_dynamic_all._entry.834 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.835 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_dynamic_all._entry.837 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.838 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3062 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_copy._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.840 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.841 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_copy._entry.842 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.843 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_copy._entry.845 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.846 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_copy._entry.848 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.849 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_copy._entry.851 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.852 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_assigned_copy._entry.854 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.855 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.857 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_copy._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.858 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.859 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_copy._entry.860 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.861 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_copy._entry.863 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.864 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_copy._entry.866 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.867 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_copy._entry.869 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.870 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_assigned_copy._entry.872 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.873 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_copy._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.875 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.876 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_copy._entry.877 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.878 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_copy._entry.880 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.881 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_copy._entry.883 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.884 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_copy._entry.886 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.887 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_assigned_copy._entry.889 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.890 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_copy._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.892 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.893 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_copy._entry.894 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.895 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_copy._entry.897 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.898 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_copy._entry.900 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.901 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_copy._entry.903 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.904 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_assigned_copy._entry.906 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.907 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u8_none._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.909 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.910 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u8_none._entry.911 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.912 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u8_none._entry.914 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.915 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u8_none._entry.917 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.918 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u8_none._entry.920 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.921 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u8_none._entry.923 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.924 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u16_none._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.926 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.927 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u16_none._entry.928 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.929 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u16_none._entry.931 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.932 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u16_none._entry.934 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.935 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u16_none._entry.937 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.938 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u16_none._entry.940 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.941 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u32_none._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.943 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.944 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u32_none._entry.945 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.946 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u32_none._entry.948 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.949 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u32_none._entry.951 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.952 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u32_none._entry.954 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.955 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u32_none._entry.957 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.958 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u64_none._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.960 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.961 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u64_none._entry.962 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.963 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u64_none._entry.965 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.966 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u64_none._entry.968 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.969 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u64_none._entry.971 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.972 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_u64_none._entry.974 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.975 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_char_array_none._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.977 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.978 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_char_array_none._entry.979 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.980 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_char_array_none._entry.982 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.983 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_char_array_none._entry.985 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.986 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_char_array_none._entry.988 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.989 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_char_array_none._entry.991 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.992 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_switch_1_none._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.994 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.995 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_switch_1_none._entry.996 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.997 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_switch_1_none._entry.999 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1000 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_switch_1_none._entry.1002 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1003 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_switch_1_none._entry.1005 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1006 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_switch_1_none._entry.1008 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1009 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_switch_2_none._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1011 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1012 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_switch_2_none._entry.1013 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1014 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_switch_2_none._entry.1016 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1017 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_switch_2_none._entry.1019 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1020 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_switch_2_none._entry.1022 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1023 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_switch_2_none._entry.1025 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1026 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_none._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1028 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1029 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_none._entry.1030 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1031 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_none._entry.1033 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1034 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_none._entry.1036 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1037 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_none._entry.1039 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1040 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_small_hole_none._entry.1042 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1043 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_none._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1045 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1046 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_none._entry.1047 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1048 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_none._entry.1050 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1051 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_none._entry.1053 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1054 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_none._entry.1056 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1057 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_big_hole_none._entry.1059 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1060 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_none._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1062 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1063 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_none._entry.1064 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1065 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_none._entry.1067 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1068 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_none._entry.1070 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1071 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_none._entry.1073 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1074 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_trailing_hole_none._entry.1076 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1077 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_none._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1079 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1080 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_none._entry.1081 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1082 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_none._entry.1084 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1085 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_none._entry.1087 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1088 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_none._entry.1090 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1091 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_packed_none._entry.1093 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1094 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_user._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1096 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1097 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_user._entry.1098 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1099 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_user._entry.1101 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1102 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_user._entry.1104 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1105 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_user._entry.1107 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1108 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @test_user._entry.1110 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.3684 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1111 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.3687 to i32), i32 ptrtoint (ptr @___asan_gen_.3688 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.3689 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @test_stackinit_init() #0 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #9
  %call = tail call fastcc i32 @test_u8_zero() #10
  %call1 = tail call fastcc i32 @test_u16_zero() #10
  %add2 = add i32 %call1, %call
  %call3 = tail call fastcc i32 @test_u32_zero() #10
  %add4 = add i32 %add2, %call3
  %call5 = tail call fastcc i32 @test_u64_zero() #10
  %add6 = add i32 %add4, %call5
  %call7 = tail call fastcc i32 @test_char_array_zero() #10
  %add8 = add i32 %add6, %call7
  %call10 = tail call fastcc i32 @test_small_hole_zero() #10
  %add11 = add i32 %add8, %call10
  %call12 = tail call fastcc i32 @test_big_hole_zero() #10
  %add13 = add i32 %add11, %call12
  %call14 = tail call fastcc i32 @test_trailing_hole_zero() #10
  %add15 = add i32 %add13, %call14
  %call16 = tail call fastcc i32 @test_packed_zero() #10
  %add17 = add i32 %add15, %call16
  %call21 = tail call fastcc i32 @test_small_hole_dynamic_partial() #10
  %add22 = add i32 %add17, %call21
  %call23 = tail call fastcc i32 @test_big_hole_dynamic_partial() #10
  %add24 = add i32 %add22, %call23
  %call25 = tail call fastcc i32 @test_trailing_hole_dynamic_partial() #10
  %add26 = add i32 %add24, %call25
  %call27 = tail call fastcc i32 @test_packed_dynamic_partial() #10
  %add28 = add i32 %add26, %call27
  %call32 = tail call fastcc i32 @test_small_hole_assigned_dynamic_partial() #10
  %add33 = add i32 %add28, %call32
  %call34 = tail call fastcc i32 @test_big_hole_assigned_dynamic_partial() #10
  %add35 = add i32 %add33, %call34
  %call36 = tail call fastcc i32 @test_trailing_hole_assigned_dynamic_partial() #10
  %add37 = add i32 %add35, %call36
  %call38 = tail call fastcc i32 @test_packed_assigned_dynamic_partial() #10
  %add39 = add i32 %add37, %call38
  %call43 = tail call fastcc i32 @test_small_hole_static_partial() #10
  %add44 = add i32 %add39, %call43
  %call45 = tail call fastcc i32 @test_big_hole_static_partial() #10
  %add46 = add i32 %add44, %call45
  %call47 = tail call fastcc i32 @test_trailing_hole_static_partial() #10
  %add48 = add i32 %add46, %call47
  %call49 = tail call fastcc i32 @test_packed_static_partial() #10
  %add50 = add i32 %add48, %call49
  %call54 = tail call fastcc i32 @test_small_hole_static_all() #10
  %add55 = add i32 %add50, %call54
  %call56 = tail call fastcc i32 @test_big_hole_static_all() #10
  %add57 = add i32 %add55, %call56
  %call58 = tail call fastcc i32 @test_trailing_hole_static_all() #10
  %add59 = add i32 %add57, %call58
  %call60 = tail call fastcc i32 @test_packed_static_all() #10
  %add61 = add i32 %add59, %call60
  %call65 = tail call fastcc i32 @test_small_hole_dynamic_all() #10
  %add66 = add i32 %add61, %call65
  %call67 = tail call fastcc i32 @test_big_hole_dynamic_all() #10
  %add68 = add i32 %add66, %call67
  %call69 = tail call fastcc i32 @test_trailing_hole_dynamic_all() #10
  %add70 = add i32 %add68, %call69
  %call71 = tail call fastcc i32 @test_packed_dynamic_all() #10
  %add72 = add i32 %add70, %call71
  %call76 = tail call fastcc i32 @test_small_hole_runtime_partial() #10
  %add77 = add i32 %add72, %call76
  %call78 = tail call fastcc i32 @test_big_hole_runtime_partial() #10
  %add79 = add i32 %add77, %call78
  %call80 = tail call fastcc i32 @test_trailing_hole_runtime_partial() #10
  %add81 = add i32 %add79, %call80
  %call82 = tail call fastcc i32 @test_packed_runtime_partial() #10
  %add83 = add i32 %add81, %call82
  %call87 = tail call fastcc i32 @test_small_hole_runtime_all() #10
  %add88 = add i32 %add83, %call87
  %call89 = tail call fastcc i32 @test_big_hole_runtime_all() #10
  %add90 = add i32 %add88, %call89
  %call91 = tail call fastcc i32 @test_trailing_hole_runtime_all() #10
  %add92 = add i32 %add90, %call91
  %call93 = tail call fastcc i32 @test_packed_runtime_all() #10
  %add94 = add i32 %add92, %call93
  %call98 = tail call fastcc i32 @test_small_hole_assigned_static_partial() #10
  %add99 = add i32 %add94, %call98
  %call100 = tail call fastcc i32 @test_big_hole_assigned_static_partial() #10
  %add101 = add i32 %add99, %call100
  %call102 = tail call fastcc i32 @test_trailing_hole_assigned_static_partial() #10
  %add103 = add i32 %add101, %call102
  %call104 = tail call fastcc i32 @test_packed_assigned_static_partial() #10
  %add105 = add i32 %add103, %call104
  %call109 = tail call fastcc i32 @test_small_hole_assigned_static_all() #10
  %add110 = add i32 %add105, %call109
  %call111 = tail call fastcc i32 @test_big_hole_assigned_static_all() #10
  %add112 = add i32 %add110, %call111
  %call113 = tail call fastcc i32 @test_trailing_hole_assigned_static_all() #10
  %add114 = add i32 %add112, %call113
  %call115 = tail call fastcc i32 @test_packed_assigned_static_all() #10
  %add116 = add i32 %add114, %call115
  %call120 = tail call fastcc i32 @test_small_hole_assigned_dynamic_all() #10
  %add121 = add i32 %add116, %call120
  %call122 = tail call fastcc i32 @test_big_hole_assigned_dynamic_all() #10
  %add123 = add i32 %add121, %call122
  %call124 = tail call fastcc i32 @test_trailing_hole_assigned_dynamic_all() #10
  %add125 = add i32 %add123, %call124
  %call126 = tail call fastcc i32 @test_packed_assigned_dynamic_all() #10
  %add127 = add i32 %add125, %call126
  %call131 = tail call fastcc i32 @test_small_hole_assigned_copy() #10
  %add132 = add i32 %add127, %call131
  %call133 = tail call fastcc i32 @test_big_hole_assigned_copy() #10
  %add134 = add i32 %add132, %call133
  %call135 = tail call fastcc i32 @test_trailing_hole_assigned_copy() #10
  %add136 = add i32 %add134, %call135
  %call137 = tail call fastcc i32 @test_packed_assigned_copy() #10
  %add138 = add i32 %add136, %call137
  %call142 = tail call fastcc i32 @test_u8_none() #10
  %add143 = add i32 %add138, %call142
  %call144 = tail call fastcc i32 @test_u16_none() #10
  %add145 = add i32 %add143, %call144
  %call146 = tail call fastcc i32 @test_u32_none() #10
  %add147 = add i32 %add145, %call146
  %call148 = tail call fastcc i32 @test_u64_none() #10
  %add149 = add i32 %add147, %call148
  %call150 = tail call fastcc i32 @test_char_array_none() #10
  %add151 = add i32 %add149, %call150
  %call154 = tail call fastcc i32 @test_switch_1_none() #10
  %add155 = add i32 %add151, %call154
  %call156 = tail call fastcc i32 @test_switch_2_none() #10
  %add157 = add i32 %add155, %call156
  %call159 = tail call fastcc i32 @test_small_hole_none() #10
  %add160 = add i32 %add157, %call159
  %call161 = tail call fastcc i32 @test_big_hole_none() #10
  %add162 = add i32 %add160, %call161
  %call163 = tail call fastcc i32 @test_trailing_hole_none() #10
  %add164 = add i32 %add162, %call163
  %call165 = tail call fastcc i32 @test_packed_none() #10
  %add166 = add i32 %add164, %call165
  %call169 = tail call fastcc i32 @test_user() #10
  %add170 = add i32 %add166, %call169
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add170)
  %cmp = icmp eq i32 %add170, 0
  br i1 %cmp, label %do.end173, label %do.end177

do.end173:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  %call174 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str) #11
  br label %if.end

do.end177:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  %call179 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.4, i32 noundef %add170) #11
  br label %if.end

if.end:                                           ; preds = %do.end177, %do.end173
  %cond = phi i32 [ -22, %do.end177 ], [ 0, %do.end173 ]
  ret i32 %cond
}

; Function Attrs: cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal void @test_stackinit_exit() #1 section ".exit.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #9
  ret void
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_u8_zero() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_u8_zero(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp73.not = icmp eq i32 %4, 0
  br i1 %cmp73.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv76 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.075 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.074 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv76
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp3 = icmp ne i8 %6, -1
  %conv4 = zext i1 %cmp3 to i8
  %add = add i8 %sum.075, %conv4
  %inc = add i8 %i.074, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end9

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end9:                                          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call10 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.6) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call11 = call fastcc i32 @leaf_u8_zero(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call11, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond30.preheader, label %do.end16

for.cond30.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3277.not = icmp eq i32 %12, 0
  br i1 %cmp3277.not, label %for.cond30.preheader.do.end52_crit_edge, label %for.cond30.preheader.for.body34_crit_edge

for.cond30.preheader.for.body34_crit_edge:        ; preds = %for.cond30.preheader
  br label %for.body34

for.cond30.preheader.do.end52_crit_edge:          ; preds = %for.cond30.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end52

do.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call18 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.9) #11
  %13 = load i32, ptr @fill_size, align 4
  %call23 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.12, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call28 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.15, i32 noundef %sub) #11
  br label %cleanup

for.body34:                                       ; preds = %for.body34.for.body34_crit_edge, %for.cond30.preheader.for.body34_crit_edge
  %conv3180 = phi i32 [ %conv31, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %sum.179 = phi i32 [ %phi.cast, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %i.178 = phi i8 [ %inc44, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %arrayidx36 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3180
  %18 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx36, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp38 = icmp eq i8 %19, -1
  %conv39 = zext i1 %cmp38 to i32
  %add41 = add nuw nsw i32 %sum.179, %conv39
  %inc44 = add i8 %i.178, 1
  %phi.cast = and i32 %add41, 255
  %conv31 = zext i8 %inc44 to i32
  %cmp32 = icmp ugt i32 %12, %conv31
  br i1 %cmp32, label %for.body34.for.body34_crit_edge, label %for.end45

for.body34.for.body34_crit_edge:                  ; preds = %for.body34
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body34

for.end45:                                        ; preds = %for.body34
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp47 = icmp eq i32 %phi.cast, 0
  br i1 %cmp47, label %for.end45.do.end52_crit_edge, label %do.end57

for.end45.do.end52_crit_edge:                     ; preds = %for.end45
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end52

do.end52:                                         ; preds = %for.end45.do.end52_crit_edge, %for.cond30.preheader.do.end52_crit_edge
  %call54 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.18) #11
  br label %cleanup

do.end57:                                         ; preds = %for.end45
  call void @__sanitizer_cov_trace_pc() #9
  %call60 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end57, %do.end52, %do.end16, %do.end9
  %retval.0 = phi i32 [ 1, %do.end9 ], [ 0, %do.end52 ], [ 1, %do.end57 ], [ 1, %do.end16 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_u16_zero() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_u16_zero(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp73.not = icmp eq i32 %4, 0
  br i1 %cmp73.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv76 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.075 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.074 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv76
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp3 = icmp ne i8 %6, -1
  %conv4 = zext i1 %cmp3 to i8
  %add = add i8 %sum.075, %conv4
  %inc = add i8 %i.074, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end9

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end9:                                          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call10 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.24) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call11 = call fastcc i32 @leaf_u16_zero(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call11, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond30.preheader, label %do.end16

for.cond30.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3277.not = icmp eq i32 %12, 0
  br i1 %cmp3277.not, label %for.cond30.preheader.do.end52_crit_edge, label %for.cond30.preheader.for.body34_crit_edge

for.cond30.preheader.for.body34_crit_edge:        ; preds = %for.cond30.preheader
  br label %for.body34

for.cond30.preheader.do.end52_crit_edge:          ; preds = %for.cond30.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end52

do.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call18 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.27) #11
  %13 = load i32, ptr @fill_size, align 4
  %call23 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.30, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call28 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.33, i32 noundef %sub) #11
  br label %cleanup

for.body34:                                       ; preds = %for.body34.for.body34_crit_edge, %for.cond30.preheader.for.body34_crit_edge
  %conv3180 = phi i32 [ %conv31, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %sum.179 = phi i32 [ %phi.cast, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %i.178 = phi i8 [ %inc44, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %arrayidx36 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3180
  %18 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx36, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp38 = icmp eq i8 %19, -1
  %conv39 = zext i1 %cmp38 to i32
  %add41 = add nuw nsw i32 %sum.179, %conv39
  %inc44 = add i8 %i.178, 1
  %phi.cast = and i32 %add41, 255
  %conv31 = zext i8 %inc44 to i32
  %cmp32 = icmp ugt i32 %12, %conv31
  br i1 %cmp32, label %for.body34.for.body34_crit_edge, label %for.end45

for.body34.for.body34_crit_edge:                  ; preds = %for.body34
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body34

for.end45:                                        ; preds = %for.body34
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp47 = icmp eq i32 %phi.cast, 0
  br i1 %cmp47, label %for.end45.do.end52_crit_edge, label %do.end57

for.end45.do.end52_crit_edge:                     ; preds = %for.end45
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end52

do.end52:                                         ; preds = %for.end45.do.end52_crit_edge, %for.cond30.preheader.do.end52_crit_edge
  %call54 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.36) #11
  br label %cleanup

do.end57:                                         ; preds = %for.end45
  call void @__sanitizer_cov_trace_pc() #9
  %call60 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.39, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end57, %do.end52, %do.end16, %do.end9
  %retval.0 = phi i32 [ 1, %do.end9 ], [ 0, %do.end52 ], [ 1, %do.end57 ], [ 1, %do.end16 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_u32_zero() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_u32_zero(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp73.not = icmp eq i32 %4, 0
  br i1 %cmp73.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv76 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.075 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.074 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv76
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp3 = icmp ne i8 %6, -1
  %conv4 = zext i1 %cmp3 to i8
  %add = add i8 %sum.075, %conv4
  %inc = add i8 %i.074, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end9

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end9:                                          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call10 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.41) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call11 = call fastcc i32 @leaf_u32_zero(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call11, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond30.preheader, label %do.end16

for.cond30.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3277.not = icmp eq i32 %12, 0
  br i1 %cmp3277.not, label %for.cond30.preheader.do.end52_crit_edge, label %for.cond30.preheader.for.body34_crit_edge

for.cond30.preheader.for.body34_crit_edge:        ; preds = %for.cond30.preheader
  br label %for.body34

for.cond30.preheader.do.end52_crit_edge:          ; preds = %for.cond30.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end52

do.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call18 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.44) #11
  %13 = load i32, ptr @fill_size, align 4
  %call23 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.47, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call28 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.50, i32 noundef %sub) #11
  br label %cleanup

for.body34:                                       ; preds = %for.body34.for.body34_crit_edge, %for.cond30.preheader.for.body34_crit_edge
  %conv3180 = phi i32 [ %conv31, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %sum.179 = phi i32 [ %phi.cast, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %i.178 = phi i8 [ %inc44, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %arrayidx36 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3180
  %18 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx36, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp38 = icmp eq i8 %19, -1
  %conv39 = zext i1 %cmp38 to i32
  %add41 = add nuw nsw i32 %sum.179, %conv39
  %inc44 = add i8 %i.178, 1
  %phi.cast = and i32 %add41, 255
  %conv31 = zext i8 %inc44 to i32
  %cmp32 = icmp ugt i32 %12, %conv31
  br i1 %cmp32, label %for.body34.for.body34_crit_edge, label %for.end45

for.body34.for.body34_crit_edge:                  ; preds = %for.body34
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body34

for.end45:                                        ; preds = %for.body34
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp47 = icmp eq i32 %phi.cast, 0
  br i1 %cmp47, label %for.end45.do.end52_crit_edge, label %do.end57

for.end45.do.end52_crit_edge:                     ; preds = %for.end45
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end52

do.end52:                                         ; preds = %for.end45.do.end52_crit_edge, %for.cond30.preheader.do.end52_crit_edge
  %call54 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.53) #11
  br label %cleanup

do.end57:                                         ; preds = %for.end45
  call void @__sanitizer_cov_trace_pc() #9
  %call60 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.56, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end57, %do.end52, %do.end16, %do.end9
  %retval.0 = phi i32 [ 1, %do.end9 ], [ 0, %do.end52 ], [ 1, %do.end57 ], [ 1, %do.end16 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_u64_zero() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_u64_zero(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp73.not = icmp eq i32 %4, 0
  br i1 %cmp73.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv76 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.075 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.074 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv76
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp3 = icmp ne i8 %6, -1
  %conv4 = zext i1 %cmp3 to i8
  %add = add i8 %sum.075, %conv4
  %inc = add i8 %i.074, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end9

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end9:                                          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call10 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.58) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call11 = call fastcc i32 @leaf_u64_zero(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call11, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond30.preheader, label %do.end16

for.cond30.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3277.not = icmp eq i32 %12, 0
  br i1 %cmp3277.not, label %for.cond30.preheader.do.end52_crit_edge, label %for.cond30.preheader.for.body34_crit_edge

for.cond30.preheader.for.body34_crit_edge:        ; preds = %for.cond30.preheader
  br label %for.body34

for.cond30.preheader.do.end52_crit_edge:          ; preds = %for.cond30.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end52

do.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call18 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.61) #11
  %13 = load i32, ptr @fill_size, align 4
  %call23 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.64, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call28 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.67, i32 noundef %sub) #11
  br label %cleanup

for.body34:                                       ; preds = %for.body34.for.body34_crit_edge, %for.cond30.preheader.for.body34_crit_edge
  %conv3180 = phi i32 [ %conv31, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %sum.179 = phi i32 [ %phi.cast, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %i.178 = phi i8 [ %inc44, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %arrayidx36 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3180
  %18 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx36, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp38 = icmp eq i8 %19, -1
  %conv39 = zext i1 %cmp38 to i32
  %add41 = add nuw nsw i32 %sum.179, %conv39
  %inc44 = add i8 %i.178, 1
  %phi.cast = and i32 %add41, 255
  %conv31 = zext i8 %inc44 to i32
  %cmp32 = icmp ugt i32 %12, %conv31
  br i1 %cmp32, label %for.body34.for.body34_crit_edge, label %for.end45

for.body34.for.body34_crit_edge:                  ; preds = %for.body34
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body34

for.end45:                                        ; preds = %for.body34
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp47 = icmp eq i32 %phi.cast, 0
  br i1 %cmp47, label %for.end45.do.end52_crit_edge, label %do.end57

for.end45.do.end52_crit_edge:                     ; preds = %for.end45
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end52

do.end52:                                         ; preds = %for.end45.do.end52_crit_edge, %for.cond30.preheader.do.end52_crit_edge
  %call54 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.70) #11
  br label %cleanup

do.end57:                                         ; preds = %for.end45
  call void @__sanitizer_cov_trace_pc() #9
  %call60 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.73, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end57, %do.end52, %do.end16, %do.end9
  %retval.0 = phi i32 [ 1, %do.end9 ], [ 0, %do.end52 ], [ 1, %do.end57 ], [ 1, %do.end16 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_char_array_zero() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_char_array_zero(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp74.not = icmp eq i32 %4, 0
  br i1 %cmp74.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv77 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.076 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.075 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv77
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp3 = icmp ne i8 %6, -1
  %conv4 = zext i1 %cmp3 to i8
  %add = add i8 %sum.076, %conv4
  %inc = add i8 %i.075, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end9

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end9:                                          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call10 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call12 = call fastcc i32 @leaf_char_array_zero(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call12, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond31.preheader, label %do.end17

for.cond31.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3378.not = icmp eq i32 %12, 0
  br i1 %cmp3378.not, label %for.cond31.preheader.do.end53_crit_edge, label %for.cond31.preheader.for.body35_crit_edge

for.cond31.preheader.for.body35_crit_edge:        ; preds = %for.cond31.preheader
  br label %for.body35

for.cond31.preheader.do.end53_crit_edge:          ; preds = %for.cond31.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end53

do.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call19 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.78) #11
  %13 = load i32, ptr @fill_size, align 4
  %call24 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.81, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call29 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.84, i32 noundef %sub) #11
  br label %cleanup

for.body35:                                       ; preds = %for.body35.for.body35_crit_edge, %for.cond31.preheader.for.body35_crit_edge
  %conv3281 = phi i32 [ %conv32, %for.body35.for.body35_crit_edge ], [ 0, %for.cond31.preheader.for.body35_crit_edge ]
  %sum.180 = phi i32 [ %phi.cast, %for.body35.for.body35_crit_edge ], [ 0, %for.cond31.preheader.for.body35_crit_edge ]
  %i.179 = phi i8 [ %inc45, %for.body35.for.body35_crit_edge ], [ 0, %for.cond31.preheader.for.body35_crit_edge ]
  %arrayidx37 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3281
  %18 = ptrtoint ptr %arrayidx37 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx37, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp39 = icmp eq i8 %19, -1
  %conv40 = zext i1 %cmp39 to i32
  %add42 = add nuw nsw i32 %sum.180, %conv40
  %inc45 = add i8 %i.179, 1
  %phi.cast = and i32 %add42, 255
  %conv32 = zext i8 %inc45 to i32
  %cmp33 = icmp ugt i32 %12, %conv32
  br i1 %cmp33, label %for.body35.for.body35_crit_edge, label %for.end46

for.body35.for.body35_crit_edge:                  ; preds = %for.body35
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body35

for.end46:                                        ; preds = %for.body35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp48 = icmp eq i32 %phi.cast, 0
  br i1 %cmp48, label %for.end46.do.end53_crit_edge, label %do.end58

for.end46.do.end53_crit_edge:                     ; preds = %for.end46
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end53

do.end53:                                         ; preds = %for.end46.do.end53_crit_edge, %for.cond31.preheader.do.end53_crit_edge
  %call55 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.87) #11
  br label %cleanup

do.end58:                                         ; preds = %for.end46
  call void @__sanitizer_cov_trace_pc() #9
  %call61 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.90, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end58, %do.end53, %do.end17, %do.end9
  %retval.0 = phi i32 [ 1, %do.end9 ], [ 0, %do.end53 ], [ 1, %do.end58 ], [ 1, %do.end17 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_small_hole_zero() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_small_hole_zero(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.92) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_small_hole_zero(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.95) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.98, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.101, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.104) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.107, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_big_hole_zero() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_big_hole_zero(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.109) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_big_hole_zero(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.112) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.115, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.118, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.121) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.124, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_trailing_hole_zero() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_trailing_hole_zero(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.126) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_trailing_hole_zero(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.129) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.132, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.135, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.138) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.141, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_packed_zero() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_packed_zero(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.143) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_packed_zero(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.146) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.149, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.152, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.155) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.158, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_small_hole_dynamic_partial() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %zero = alloca %struct.test_small_hole, align 4
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %zero) #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = getelementptr inbounds i8, ptr %zero, i32 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %1, align 4
  %3 = ptrtoint ptr %zero to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %zero, align 4
  %two = getelementptr inbounds %struct.test_small_hole, ptr %zero, i32 0, i32 1
  %4 = ptrtoint ptr %two to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %two, align 4
  %three = getelementptr inbounds %struct.test_small_hole, ptr %zero, i32 0, i32 2
  %5 = ptrtoint ptr %three to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %three, align 4
  %four = getelementptr inbounds %struct.test_small_hole, ptr %zero, i32 0, i32 3
  %6 = ptrtoint ptr %four to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %four, align 4
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %8 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_small_hole_dynamic_partial(i32 noundef %8, i1 noundef zeroext true, ptr noundef nonnull %zero) #10
  %9 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %call, ptr %ignored, align 4
  %10 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp76.not = icmp eq i32 %10, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %12)
  %cmp6 = icmp ne i8 %12, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %10, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.160) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %13 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_small_hole_dynamic_partial(i32 noundef %8, i1 noundef zeroext false, ptr noundef nonnull %zero) #10
  %14 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %call14, ptr %ignored, align 4
  %15 = load ptr, ptr @fill_start, align 4
  %16 = load i32, ptr @fill_size, align 4
  %17 = load ptr, ptr @target_start, align 4
  %18 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %17, %15
  %add.ptr.i = getelementptr i8, ptr %17, i32 %18
  %add.ptr1.i = getelementptr i8, ptr %15, i32 %16
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp3580.not = icmp eq i32 %18, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.163) #11
  %19 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.166, i32 noundef %19) #11
  %20 = load ptr, ptr @fill_start, align 4
  %21 = ptrtoint ptr %20 to i32
  %22 = load ptr, ptr @target_start, align 4
  %23 = ptrtoint ptr %22 to i32
  %sub = sub i32 %21, %23
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.169, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %24 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %25)
  %cmp41 = icmp eq i8 %25, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %18, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.172) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.175, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %zero) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_big_hole_dynamic_partial() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %zero = alloca %struct.test_big_hole, align 64
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %zero) #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr %zero, i32 255, i32 128)
  %2 = ptrtoint ptr %zero to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 0, ptr %zero, align 64
  %two = getelementptr inbounds %struct.test_big_hole, ptr %zero, i32 0, i32 1
  %3 = ptrtoint ptr %two to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %two, align 1
  %three = getelementptr inbounds %struct.test_big_hole, ptr %zero, i32 0, i32 2
  %4 = ptrtoint ptr %three to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %three, align 2
  %four = getelementptr inbounds %struct.test_big_hole, ptr %zero, i32 0, i32 4
  %5 = ptrtoint ptr %four to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 0, ptr %four, align 64
  %6 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %7 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_big_hole_dynamic_partial(i32 noundef %7, i1 noundef zeroext true, ptr noundef nonnull %zero) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call, ptr %ignored, align 4
  %9 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp76.not = icmp eq i32 %9, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %11)
  %cmp6 = icmp ne i8 %11, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %9, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.177) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %12 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_big_hole_dynamic_partial(i32 noundef %7, i1 noundef zeroext false, ptr noundef nonnull %zero) #10
  %13 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %call14, ptr %ignored, align 4
  %14 = load ptr, ptr @fill_start, align 4
  %15 = load i32, ptr @fill_size, align 4
  %16 = load ptr, ptr @target_start, align 4
  %17 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %16, %14
  %add.ptr.i = getelementptr i8, ptr %16, i32 %17
  %add.ptr1.i = getelementptr i8, ptr %14, i32 %15
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp3580.not = icmp eq i32 %17, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.180) #11
  %18 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.183, i32 noundef %18) #11
  %19 = load ptr, ptr @fill_start, align 4
  %20 = ptrtoint ptr %19 to i32
  %21 = load ptr, ptr @target_start, align 4
  %22 = ptrtoint ptr %21 to i32
  %sub = sub i32 %20, %22
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.186, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %23 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %24)
  %cmp41 = icmp eq i8 %24, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %17, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.189) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.192, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %zero) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_trailing_hole_dynamic_partial() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %zero = alloca %struct.test_trailing_hole, align 4
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %zero) #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = getelementptr inbounds i8, ptr %zero, i32 12
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %1, align 4
  %3 = call ptr @memset(ptr %zero, i32 0, i32 13)
  %4 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %5 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_trailing_hole_dynamic_partial(i32 noundef %5, i1 noundef zeroext true, ptr noundef nonnull %zero) #10
  %6 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %call, ptr %ignored, align 4
  %7 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp76.not = icmp eq i32 %7, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %9)
  %cmp6 = icmp ne i8 %9, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %7, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.194) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %10 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_trailing_hole_dynamic_partial(i32 noundef %5, i1 noundef zeroext false, ptr noundef nonnull %zero) #10
  %11 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %call14, ptr %ignored, align 4
  %12 = load ptr, ptr @fill_start, align 4
  %13 = load i32, ptr @fill_size, align 4
  %14 = load ptr, ptr @target_start, align 4
  %15 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %14, %12
  %add.ptr.i = getelementptr i8, ptr %14, i32 %15
  %add.ptr1.i = getelementptr i8, ptr %12, i32 %13
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp3580.not = icmp eq i32 %15, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.197) #11
  %16 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.200, i32 noundef %16) #11
  %17 = load ptr, ptr @fill_start, align 4
  %18 = ptrtoint ptr %17 to i32
  %19 = load ptr, ptr @target_start, align 4
  %20 = ptrtoint ptr %19 to i32
  %sub = sub i32 %18, %20
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.203, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %21 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %22)
  %cmp41 = icmp eq i8 %22, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %15, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.206) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.209, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %zero) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_packed_dynamic_partial() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %zero = alloca %struct.test_packed, align 4
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %zero) #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr %zero, i32 0, i32 16)
  %2 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %3 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_packed_dynamic_partial(i32 noundef %3, i1 noundef zeroext true, ptr noundef nonnull %zero) #10
  %4 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %call, ptr %ignored, align 4
  %5 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp76.not = icmp eq i32 %5, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %7)
  %cmp6 = icmp ne i8 %7, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %5, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.211) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %8 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_packed_dynamic_partial(i32 noundef %3, i1 noundef zeroext false, ptr noundef nonnull %zero) #10
  %9 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %call14, ptr %ignored, align 4
  %10 = load ptr, ptr @fill_start, align 4
  %11 = load i32, ptr @fill_size, align 4
  %12 = load ptr, ptr @target_start, align 4
  %13 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %12, %10
  %add.ptr.i = getelementptr i8, ptr %12, i32 %13
  %add.ptr1.i = getelementptr i8, ptr %10, i32 %11
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp3580.not = icmp eq i32 %13, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.214) #11
  %14 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.217, i32 noundef %14) #11
  %15 = load ptr, ptr @fill_start, align 4
  %16 = ptrtoint ptr %15 to i32
  %17 = load ptr, ptr @target_start, align 4
  %18 = ptrtoint ptr %17 to i32
  %sub = sub i32 %16, %18
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.220, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %19 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %20)
  %cmp41 = icmp eq i8 %20, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %13, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.223) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.226, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %zero) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_small_hole_assigned_dynamic_partial() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %zero = alloca %struct.test_small_hole, align 4
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %zero) #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = getelementptr inbounds i8, ptr %zero, i32 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %1, align 4
  %3 = ptrtoint ptr %zero to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %zero, align 4
  %two = getelementptr inbounds %struct.test_small_hole, ptr %zero, i32 0, i32 1
  %4 = ptrtoint ptr %two to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %two, align 4
  %three = getelementptr inbounds %struct.test_small_hole, ptr %zero, i32 0, i32 2
  %5 = ptrtoint ptr %three to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %three, align 4
  %four = getelementptr inbounds %struct.test_small_hole, ptr %zero, i32 0, i32 3
  %6 = ptrtoint ptr %four to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %four, align 4
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %8 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_small_hole_assigned_dynamic_partial(i32 noundef %8, i1 noundef zeroext true, ptr noundef nonnull %zero) #10
  %9 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %call, ptr %ignored, align 4
  %10 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp76.not = icmp eq i32 %10, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %12)
  %cmp6 = icmp ne i8 %12, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %10, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.228) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %13 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_small_hole_assigned_dynamic_partial(i32 noundef %8, i1 noundef zeroext false, ptr noundef nonnull %zero) #10
  %14 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %call14, ptr %ignored, align 4
  %15 = load ptr, ptr @fill_start, align 4
  %16 = load i32, ptr @fill_size, align 4
  %17 = load ptr, ptr @target_start, align 4
  %18 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %17, %15
  %add.ptr.i = getelementptr i8, ptr %17, i32 %18
  %add.ptr1.i = getelementptr i8, ptr %15, i32 %16
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp3580.not = icmp eq i32 %18, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.231) #11
  %19 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.234, i32 noundef %19) #11
  %20 = load ptr, ptr @fill_start, align 4
  %21 = ptrtoint ptr %20 to i32
  %22 = load ptr, ptr @target_start, align 4
  %23 = ptrtoint ptr %22 to i32
  %sub = sub i32 %21, %23
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.237, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %24 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %25)
  %cmp41 = icmp eq i8 %25, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %18, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.240) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.243, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %zero) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_big_hole_assigned_dynamic_partial() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %zero = alloca %struct.test_big_hole, align 64
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %zero) #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr %zero, i32 255, i32 128)
  %2 = ptrtoint ptr %zero to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 0, ptr %zero, align 64
  %two = getelementptr inbounds %struct.test_big_hole, ptr %zero, i32 0, i32 1
  %3 = ptrtoint ptr %two to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %two, align 1
  %three = getelementptr inbounds %struct.test_big_hole, ptr %zero, i32 0, i32 2
  %4 = ptrtoint ptr %three to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %three, align 2
  %four = getelementptr inbounds %struct.test_big_hole, ptr %zero, i32 0, i32 4
  %5 = ptrtoint ptr %four to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 0, ptr %four, align 64
  %6 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %7 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_big_hole_assigned_dynamic_partial(i32 noundef %7, i1 noundef zeroext true, ptr noundef nonnull %zero) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call, ptr %ignored, align 4
  %9 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp76.not = icmp eq i32 %9, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %11)
  %cmp6 = icmp ne i8 %11, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %9, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.245) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %12 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_big_hole_assigned_dynamic_partial(i32 noundef %7, i1 noundef zeroext false, ptr noundef nonnull %zero) #10
  %13 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %call14, ptr %ignored, align 4
  %14 = load ptr, ptr @fill_start, align 4
  %15 = load i32, ptr @fill_size, align 4
  %16 = load ptr, ptr @target_start, align 4
  %17 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %16, %14
  %add.ptr.i = getelementptr i8, ptr %16, i32 %17
  %add.ptr1.i = getelementptr i8, ptr %14, i32 %15
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp3580.not = icmp eq i32 %17, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.248) #11
  %18 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.251, i32 noundef %18) #11
  %19 = load ptr, ptr @fill_start, align 4
  %20 = ptrtoint ptr %19 to i32
  %21 = load ptr, ptr @target_start, align 4
  %22 = ptrtoint ptr %21 to i32
  %sub = sub i32 %20, %22
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.254, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %23 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %24)
  %cmp41 = icmp eq i8 %24, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %17, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.257) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.260, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %zero) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_trailing_hole_assigned_dynamic_partial() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %zero = alloca %struct.test_trailing_hole, align 4
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %zero) #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = getelementptr inbounds i8, ptr %zero, i32 12
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %1, align 4
  %3 = call ptr @memset(ptr %zero, i32 0, i32 13)
  %4 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %5 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_trailing_hole_assigned_dynamic_partial(i32 noundef %5, i1 noundef zeroext true, ptr noundef nonnull %zero) #10
  %6 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %call, ptr %ignored, align 4
  %7 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp76.not = icmp eq i32 %7, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %9)
  %cmp6 = icmp ne i8 %9, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %7, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.262) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %10 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_trailing_hole_assigned_dynamic_partial(i32 noundef %5, i1 noundef zeroext false, ptr noundef nonnull %zero) #10
  %11 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %call14, ptr %ignored, align 4
  %12 = load ptr, ptr @fill_start, align 4
  %13 = load i32, ptr @fill_size, align 4
  %14 = load ptr, ptr @target_start, align 4
  %15 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %14, %12
  %add.ptr.i = getelementptr i8, ptr %14, i32 %15
  %add.ptr1.i = getelementptr i8, ptr %12, i32 %13
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp3580.not = icmp eq i32 %15, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.265) #11
  %16 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.268, i32 noundef %16) #11
  %17 = load ptr, ptr @fill_start, align 4
  %18 = ptrtoint ptr %17 to i32
  %19 = load ptr, ptr @target_start, align 4
  %20 = ptrtoint ptr %19 to i32
  %sub = sub i32 %18, %20
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.271, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %21 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %22)
  %cmp41 = icmp eq i8 %22, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %15, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.274) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.277, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %zero) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_packed_assigned_dynamic_partial() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %zero = alloca %struct.test_packed, align 4
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %zero) #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr %zero, i32 0, i32 16)
  %2 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %3 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_packed_assigned_dynamic_partial(i32 noundef %3, i1 noundef zeroext true, ptr noundef nonnull %zero) #10
  %4 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %call, ptr %ignored, align 4
  %5 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp76.not = icmp eq i32 %5, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %7)
  %cmp6 = icmp ne i8 %7, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %5, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.279) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %8 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_packed_assigned_dynamic_partial(i32 noundef %3, i1 noundef zeroext false, ptr noundef nonnull %zero) #10
  %9 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %call14, ptr %ignored, align 4
  %10 = load ptr, ptr @fill_start, align 4
  %11 = load i32, ptr @fill_size, align 4
  %12 = load ptr, ptr @target_start, align 4
  %13 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %12, %10
  %add.ptr.i = getelementptr i8, ptr %12, i32 %13
  %add.ptr1.i = getelementptr i8, ptr %10, i32 %11
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp3580.not = icmp eq i32 %13, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.282) #11
  %14 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.285, i32 noundef %14) #11
  %15 = load ptr, ptr @fill_start, align 4
  %16 = ptrtoint ptr %15 to i32
  %17 = load ptr, ptr @target_start, align 4
  %18 = ptrtoint ptr %17 to i32
  %sub = sub i32 %16, %18
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.288, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %19 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %20)
  %cmp41 = icmp eq i8 %20, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %13, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.291) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.294, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %zero) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_small_hole_static_partial() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_small_hole_static_partial(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.296) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_small_hole_static_partial(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.299) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.302, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.305, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.308) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.311, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_big_hole_static_partial() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_big_hole_static_partial(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.313) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_big_hole_static_partial(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.316) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.319, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.322, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.325) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.328, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_trailing_hole_static_partial() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_trailing_hole_static_partial(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.330) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_trailing_hole_static_partial(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.333) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.336, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.339, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.342) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.345, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_packed_static_partial() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_packed_static_partial(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.347) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_packed_static_partial(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.350) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.353, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.356, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.359) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.362, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_small_hole_static_all() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_small_hole_static_all(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.364) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_small_hole_static_all(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.367) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.370, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.373, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.376) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.379, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_big_hole_static_all() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_big_hole_static_all(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.381) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_big_hole_static_all(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.384) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.387, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.390, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.393) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.396, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_trailing_hole_static_all() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_trailing_hole_static_all(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.398) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_trailing_hole_static_all(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.401) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.404, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.407, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.410) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.413, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_packed_static_all() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_packed_static_all(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.415) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_packed_static_all(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.418) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.421, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.424, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.427) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.430, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_small_hole_dynamic_all() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %zero = alloca %struct.test_small_hole, align 4
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %zero) #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = getelementptr inbounds i8, ptr %zero, i32 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %1, align 4
  %3 = ptrtoint ptr %zero to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %zero, align 4
  %two = getelementptr inbounds %struct.test_small_hole, ptr %zero, i32 0, i32 1
  %4 = ptrtoint ptr %two to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %two, align 4
  %three = getelementptr inbounds %struct.test_small_hole, ptr %zero, i32 0, i32 2
  %5 = ptrtoint ptr %three to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %three, align 4
  %four = getelementptr inbounds %struct.test_small_hole, ptr %zero, i32 0, i32 3
  %6 = ptrtoint ptr %four to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %four, align 4
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %8 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_small_hole_dynamic_all(i32 noundef %8, i1 noundef zeroext true, ptr noundef nonnull %zero) #10
  %9 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %call, ptr %ignored, align 4
  %10 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp76.not = icmp eq i32 %10, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %12)
  %cmp6 = icmp ne i8 %12, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %10, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.432) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %13 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_small_hole_dynamic_all(i32 noundef %8, i1 noundef zeroext false, ptr noundef nonnull %zero) #10
  %14 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %call14, ptr %ignored, align 4
  %15 = load ptr, ptr @fill_start, align 4
  %16 = load i32, ptr @fill_size, align 4
  %17 = load ptr, ptr @target_start, align 4
  %18 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %17, %15
  %add.ptr.i = getelementptr i8, ptr %17, i32 %18
  %add.ptr1.i = getelementptr i8, ptr %15, i32 %16
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp3580.not = icmp eq i32 %18, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.435) #11
  %19 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.438, i32 noundef %19) #11
  %20 = load ptr, ptr @fill_start, align 4
  %21 = ptrtoint ptr %20 to i32
  %22 = load ptr, ptr @target_start, align 4
  %23 = ptrtoint ptr %22 to i32
  %sub = sub i32 %21, %23
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.441, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %24 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %25)
  %cmp41 = icmp eq i8 %25, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %18, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.444) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.447, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %zero) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_big_hole_dynamic_all() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %zero = alloca %struct.test_big_hole, align 64
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %zero) #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr %zero, i32 255, i32 128)
  %2 = ptrtoint ptr %zero to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 0, ptr %zero, align 64
  %two = getelementptr inbounds %struct.test_big_hole, ptr %zero, i32 0, i32 1
  %3 = ptrtoint ptr %two to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %two, align 1
  %three = getelementptr inbounds %struct.test_big_hole, ptr %zero, i32 0, i32 2
  %4 = ptrtoint ptr %three to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %three, align 2
  %four = getelementptr inbounds %struct.test_big_hole, ptr %zero, i32 0, i32 4
  %5 = ptrtoint ptr %four to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 0, ptr %four, align 64
  %6 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %7 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_big_hole_dynamic_all(i32 noundef %7, i1 noundef zeroext true, ptr noundef nonnull %zero) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call, ptr %ignored, align 4
  %9 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp76.not = icmp eq i32 %9, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %11)
  %cmp6 = icmp ne i8 %11, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %9, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.449) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %12 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_big_hole_dynamic_all(i32 noundef %7, i1 noundef zeroext false, ptr noundef nonnull %zero) #10
  %13 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %call14, ptr %ignored, align 4
  %14 = load ptr, ptr @fill_start, align 4
  %15 = load i32, ptr @fill_size, align 4
  %16 = load ptr, ptr @target_start, align 4
  %17 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %16, %14
  %add.ptr.i = getelementptr i8, ptr %16, i32 %17
  %add.ptr1.i = getelementptr i8, ptr %14, i32 %15
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp3580.not = icmp eq i32 %17, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.452) #11
  %18 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.455, i32 noundef %18) #11
  %19 = load ptr, ptr @fill_start, align 4
  %20 = ptrtoint ptr %19 to i32
  %21 = load ptr, ptr @target_start, align 4
  %22 = ptrtoint ptr %21 to i32
  %sub = sub i32 %20, %22
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.458, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %23 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %24)
  %cmp41 = icmp eq i8 %24, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %17, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.461) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.464, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %zero) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_trailing_hole_dynamic_all() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %zero = alloca %struct.test_trailing_hole, align 4
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %zero) #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = getelementptr inbounds i8, ptr %zero, i32 12
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %1, align 4
  %3 = call ptr @memset(ptr %zero, i32 0, i32 13)
  %4 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %5 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_trailing_hole_dynamic_all(i32 noundef %5, i1 noundef zeroext true, ptr noundef nonnull %zero) #10
  %6 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %call, ptr %ignored, align 4
  %7 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp76.not = icmp eq i32 %7, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %9)
  %cmp6 = icmp ne i8 %9, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %7, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.466) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %10 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_trailing_hole_dynamic_all(i32 noundef %5, i1 noundef zeroext false, ptr noundef nonnull %zero) #10
  %11 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %call14, ptr %ignored, align 4
  %12 = load ptr, ptr @fill_start, align 4
  %13 = load i32, ptr @fill_size, align 4
  %14 = load ptr, ptr @target_start, align 4
  %15 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %14, %12
  %add.ptr.i = getelementptr i8, ptr %14, i32 %15
  %add.ptr1.i = getelementptr i8, ptr %12, i32 %13
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp3580.not = icmp eq i32 %15, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.469) #11
  %16 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.472, i32 noundef %16) #11
  %17 = load ptr, ptr @fill_start, align 4
  %18 = ptrtoint ptr %17 to i32
  %19 = load ptr, ptr @target_start, align 4
  %20 = ptrtoint ptr %19 to i32
  %sub = sub i32 %18, %20
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.475, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %21 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %22)
  %cmp41 = icmp eq i8 %22, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %15, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.478) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.481, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %zero) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_packed_dynamic_all() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %zero = alloca %struct.test_packed, align 4
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %zero) #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr %zero, i32 0, i32 16)
  %2 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %3 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_packed_dynamic_all(i32 noundef %3, i1 noundef zeroext true, ptr noundef nonnull %zero) #10
  %4 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %call, ptr %ignored, align 4
  %5 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp76.not = icmp eq i32 %5, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %7)
  %cmp6 = icmp ne i8 %7, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %5, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.483) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %8 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_packed_dynamic_all(i32 noundef %3, i1 noundef zeroext false, ptr noundef nonnull %zero) #10
  %9 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %call14, ptr %ignored, align 4
  %10 = load ptr, ptr @fill_start, align 4
  %11 = load i32, ptr @fill_size, align 4
  %12 = load ptr, ptr @target_start, align 4
  %13 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %12, %10
  %add.ptr.i = getelementptr i8, ptr %12, i32 %13
  %add.ptr1.i = getelementptr i8, ptr %10, i32 %11
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp3580.not = icmp eq i32 %13, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.486) #11
  %14 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.489, i32 noundef %14) #11
  %15 = load ptr, ptr @fill_start, align 4
  %16 = ptrtoint ptr %15 to i32
  %17 = load ptr, ptr @target_start, align 4
  %18 = ptrtoint ptr %17 to i32
  %sub = sub i32 %16, %18
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.492, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %19 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %20)
  %cmp41 = icmp eq i8 %20, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %13, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.495) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.498, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %zero) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_small_hole_runtime_partial() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_small_hole_runtime_partial(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.500) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_small_hole_runtime_partial(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.503) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.506, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.509, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.512) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.515, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_big_hole_runtime_partial() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_big_hole_runtime_partial(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.517) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_big_hole_runtime_partial(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.520) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.523, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.526, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.529) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.532, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_trailing_hole_runtime_partial() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_trailing_hole_runtime_partial(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.534) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_trailing_hole_runtime_partial(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.537) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.540, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.543, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.546) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.549, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_packed_runtime_partial() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_packed_runtime_partial(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.551) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_packed_runtime_partial(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.554) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.557, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.560, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.563) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.566, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_small_hole_runtime_all() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_small_hole_runtime_all(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.568) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_small_hole_runtime_all(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.571) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.574, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.577, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.580) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.583, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_big_hole_runtime_all() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_big_hole_runtime_all(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.585) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_big_hole_runtime_all(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.588) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.591, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.594, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.597) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.600, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_trailing_hole_runtime_all() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_trailing_hole_runtime_all(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.602) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_trailing_hole_runtime_all(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.605) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.608, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.611, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.614) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.617, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_packed_runtime_all() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_packed_runtime_all(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.619) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_packed_runtime_all(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.622) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.625, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.628, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.631) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.634, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_small_hole_assigned_static_partial() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_small_hole_assigned_static_partial(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.636) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_small_hole_assigned_static_partial(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.639) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.642, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.645, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.648) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.651, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_big_hole_assigned_static_partial() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_big_hole_assigned_static_partial(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.653) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_big_hole_assigned_static_partial(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.656) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.659, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.662, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.665) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.668, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_trailing_hole_assigned_static_partial() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_trailing_hole_assigned_static_partial(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.670) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_trailing_hole_assigned_static_partial(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.673) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.676, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.679, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.682) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.685, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_packed_assigned_static_partial() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_packed_assigned_static_partial(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.687) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_packed_assigned_static_partial(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.690) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.693, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.696, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.699) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.702, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_small_hole_assigned_static_all() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_small_hole_assigned_static_all(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.704) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_small_hole_assigned_static_all(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.707) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.710, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.713, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.716) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.719, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_big_hole_assigned_static_all() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_big_hole_assigned_static_all(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.721) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_big_hole_assigned_static_all(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.724) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.727, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.730, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.733) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.736, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_trailing_hole_assigned_static_all() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_trailing_hole_assigned_static_all(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.738) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_trailing_hole_assigned_static_all(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.741) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.744, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.747, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.750) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.753, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_packed_assigned_static_all() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_packed_assigned_static_all(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.755) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_packed_assigned_static_all(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.758) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.761, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.764, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.767) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.770, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_small_hole_assigned_dynamic_all() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %zero = alloca %struct.test_small_hole, align 4
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %zero) #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = getelementptr inbounds i8, ptr %zero, i32 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %1, align 4
  %3 = ptrtoint ptr %zero to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %zero, align 4
  %two = getelementptr inbounds %struct.test_small_hole, ptr %zero, i32 0, i32 1
  %4 = ptrtoint ptr %two to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %two, align 4
  %three = getelementptr inbounds %struct.test_small_hole, ptr %zero, i32 0, i32 2
  %5 = ptrtoint ptr %three to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %three, align 4
  %four = getelementptr inbounds %struct.test_small_hole, ptr %zero, i32 0, i32 3
  %6 = ptrtoint ptr %four to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %four, align 4
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %8 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_small_hole_assigned_dynamic_all(i32 noundef %8, i1 noundef zeroext true, ptr noundef nonnull %zero) #10
  %9 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %call, ptr %ignored, align 4
  %10 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp76.not = icmp eq i32 %10, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %12)
  %cmp6 = icmp ne i8 %12, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %10, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.772) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %13 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_small_hole_assigned_dynamic_all(i32 noundef %8, i1 noundef zeroext false, ptr noundef nonnull %zero) #10
  %14 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %call14, ptr %ignored, align 4
  %15 = load ptr, ptr @fill_start, align 4
  %16 = load i32, ptr @fill_size, align 4
  %17 = load ptr, ptr @target_start, align 4
  %18 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %17, %15
  %add.ptr.i = getelementptr i8, ptr %17, i32 %18
  %add.ptr1.i = getelementptr i8, ptr %15, i32 %16
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp3580.not = icmp eq i32 %18, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.775) #11
  %19 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.778, i32 noundef %19) #11
  %20 = load ptr, ptr @fill_start, align 4
  %21 = ptrtoint ptr %20 to i32
  %22 = load ptr, ptr @target_start, align 4
  %23 = ptrtoint ptr %22 to i32
  %sub = sub i32 %21, %23
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.781, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %24 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %25)
  %cmp41 = icmp eq i8 %25, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %18, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.784) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.787, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %zero) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_big_hole_assigned_dynamic_all() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %zero = alloca %struct.test_big_hole, align 64
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %zero) #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr %zero, i32 255, i32 128)
  %2 = ptrtoint ptr %zero to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 0, ptr %zero, align 64
  %two = getelementptr inbounds %struct.test_big_hole, ptr %zero, i32 0, i32 1
  %3 = ptrtoint ptr %two to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %two, align 1
  %three = getelementptr inbounds %struct.test_big_hole, ptr %zero, i32 0, i32 2
  %4 = ptrtoint ptr %three to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %three, align 2
  %four = getelementptr inbounds %struct.test_big_hole, ptr %zero, i32 0, i32 4
  %5 = ptrtoint ptr %four to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 0, ptr %four, align 64
  %6 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %7 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_big_hole_assigned_dynamic_all(i32 noundef %7, i1 noundef zeroext true, ptr noundef nonnull %zero) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call, ptr %ignored, align 4
  %9 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp76.not = icmp eq i32 %9, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %11)
  %cmp6 = icmp ne i8 %11, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %9, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.789) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %12 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_big_hole_assigned_dynamic_all(i32 noundef %7, i1 noundef zeroext false, ptr noundef nonnull %zero) #10
  %13 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %call14, ptr %ignored, align 4
  %14 = load ptr, ptr @fill_start, align 4
  %15 = load i32, ptr @fill_size, align 4
  %16 = load ptr, ptr @target_start, align 4
  %17 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %16, %14
  %add.ptr.i = getelementptr i8, ptr %16, i32 %17
  %add.ptr1.i = getelementptr i8, ptr %14, i32 %15
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp3580.not = icmp eq i32 %17, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.792) #11
  %18 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.795, i32 noundef %18) #11
  %19 = load ptr, ptr @fill_start, align 4
  %20 = ptrtoint ptr %19 to i32
  %21 = load ptr, ptr @target_start, align 4
  %22 = ptrtoint ptr %21 to i32
  %sub = sub i32 %20, %22
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.798, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %23 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %24)
  %cmp41 = icmp eq i8 %24, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %17, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.801) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.804, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %zero) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_trailing_hole_assigned_dynamic_all() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %zero = alloca %struct.test_trailing_hole, align 4
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %zero) #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = getelementptr inbounds i8, ptr %zero, i32 12
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %1, align 4
  %3 = call ptr @memset(ptr %zero, i32 0, i32 13)
  %4 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %5 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_trailing_hole_assigned_dynamic_all(i32 noundef %5, i1 noundef zeroext true, ptr noundef nonnull %zero) #10
  %6 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %call, ptr %ignored, align 4
  %7 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp76.not = icmp eq i32 %7, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %9)
  %cmp6 = icmp ne i8 %9, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %7, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.806) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %10 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_trailing_hole_assigned_dynamic_all(i32 noundef %5, i1 noundef zeroext false, ptr noundef nonnull %zero) #10
  %11 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %call14, ptr %ignored, align 4
  %12 = load ptr, ptr @fill_start, align 4
  %13 = load i32, ptr @fill_size, align 4
  %14 = load ptr, ptr @target_start, align 4
  %15 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %14, %12
  %add.ptr.i = getelementptr i8, ptr %14, i32 %15
  %add.ptr1.i = getelementptr i8, ptr %12, i32 %13
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp3580.not = icmp eq i32 %15, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.809) #11
  %16 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.812, i32 noundef %16) #11
  %17 = load ptr, ptr @fill_start, align 4
  %18 = ptrtoint ptr %17 to i32
  %19 = load ptr, ptr @target_start, align 4
  %20 = ptrtoint ptr %19 to i32
  %sub = sub i32 %18, %20
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.815, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %21 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %22)
  %cmp41 = icmp eq i8 %22, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %15, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.818) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.821, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %zero) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_packed_assigned_dynamic_all() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %zero = alloca %struct.test_packed, align 4
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %zero) #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr %zero, i32 0, i32 16)
  %2 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %3 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_packed_assigned_dynamic_all(i32 noundef %3, i1 noundef zeroext true, ptr noundef nonnull %zero) #10
  %4 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %call, ptr %ignored, align 4
  %5 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp76.not = icmp eq i32 %5, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %7)
  %cmp6 = icmp ne i8 %7, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %5, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.823) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %8 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_packed_assigned_dynamic_all(i32 noundef %3, i1 noundef zeroext false, ptr noundef nonnull %zero) #10
  %9 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %call14, ptr %ignored, align 4
  %10 = load ptr, ptr @fill_start, align 4
  %11 = load i32, ptr @fill_size, align 4
  %12 = load ptr, ptr @target_start, align 4
  %13 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %12, %10
  %add.ptr.i = getelementptr i8, ptr %12, i32 %13
  %add.ptr1.i = getelementptr i8, ptr %10, i32 %11
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp3580.not = icmp eq i32 %13, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.826) #11
  %14 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.829, i32 noundef %14) #11
  %15 = load ptr, ptr @fill_start, align 4
  %16 = ptrtoint ptr %15 to i32
  %17 = load ptr, ptr @target_start, align 4
  %18 = ptrtoint ptr %17 to i32
  %sub = sub i32 %16, %18
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.832, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %19 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %20)
  %cmp41 = icmp eq i8 %20, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %13, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.835) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.838, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %zero) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_small_hole_assigned_copy() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %zero = alloca %struct.test_small_hole, align 4
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %zero) #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = getelementptr inbounds i8, ptr %zero, i32 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %1, align 4
  %3 = ptrtoint ptr %zero to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %zero, align 4
  %two = getelementptr inbounds %struct.test_small_hole, ptr %zero, i32 0, i32 1
  %4 = ptrtoint ptr %two to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %two, align 4
  %three = getelementptr inbounds %struct.test_small_hole, ptr %zero, i32 0, i32 2
  %5 = ptrtoint ptr %three to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %three, align 4
  %four = getelementptr inbounds %struct.test_small_hole, ptr %zero, i32 0, i32 3
  %6 = ptrtoint ptr %four to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %four, align 4
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %8 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_small_hole_assigned_copy(i32 noundef %8, i1 noundef zeroext true, ptr noundef nonnull %zero) #10
  %9 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %call, ptr %ignored, align 4
  %10 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp76.not = icmp eq i32 %10, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %12)
  %cmp6 = icmp ne i8 %12, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %10, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.840) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %13 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_small_hole_assigned_copy(i32 noundef %8, i1 noundef zeroext false, ptr noundef nonnull %zero) #10
  %14 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %call14, ptr %ignored, align 4
  %15 = load ptr, ptr @fill_start, align 4
  %16 = load i32, ptr @fill_size, align 4
  %17 = load ptr, ptr @target_start, align 4
  %18 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %17, %15
  %add.ptr.i = getelementptr i8, ptr %17, i32 %18
  %add.ptr1.i = getelementptr i8, ptr %15, i32 %16
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp3580.not = icmp eq i32 %18, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.843) #11
  %19 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.846, i32 noundef %19) #11
  %20 = load ptr, ptr @fill_start, align 4
  %21 = ptrtoint ptr %20 to i32
  %22 = load ptr, ptr @target_start, align 4
  %23 = ptrtoint ptr %22 to i32
  %sub = sub i32 %21, %23
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.849, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %24 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %25)
  %cmp41 = icmp eq i8 %25, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %18, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.852) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.855, ptr noundef nonnull @.str.857, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 0, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %zero) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_big_hole_assigned_copy() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %zero = alloca %struct.test_big_hole, align 64
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %zero) #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr %zero, i32 255, i32 128)
  %2 = ptrtoint ptr %zero to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 0, ptr %zero, align 64
  %two = getelementptr inbounds %struct.test_big_hole, ptr %zero, i32 0, i32 1
  %3 = ptrtoint ptr %two to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %two, align 1
  %three = getelementptr inbounds %struct.test_big_hole, ptr %zero, i32 0, i32 2
  %4 = ptrtoint ptr %three to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %three, align 2
  %four = getelementptr inbounds %struct.test_big_hole, ptr %zero, i32 0, i32 4
  %5 = ptrtoint ptr %four to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 0, ptr %four, align 64
  %6 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %7 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_big_hole_assigned_copy(i32 noundef %7, i1 noundef zeroext true, ptr noundef nonnull %zero) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call, ptr %ignored, align 4
  %9 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp76.not = icmp eq i32 %9, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %11)
  %cmp6 = icmp ne i8 %11, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %9, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.858) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %12 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_big_hole_assigned_copy(i32 noundef %7, i1 noundef zeroext false, ptr noundef nonnull %zero) #10
  %13 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %call14, ptr %ignored, align 4
  %14 = load ptr, ptr @fill_start, align 4
  %15 = load i32, ptr @fill_size, align 4
  %16 = load ptr, ptr @target_start, align 4
  %17 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %16, %14
  %add.ptr.i = getelementptr i8, ptr %16, i32 %17
  %add.ptr1.i = getelementptr i8, ptr %14, i32 %15
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp3580.not = icmp eq i32 %17, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.861) #11
  %18 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.864, i32 noundef %18) #11
  %19 = load ptr, ptr @fill_start, align 4
  %20 = ptrtoint ptr %19 to i32
  %21 = load ptr, ptr @target_start, align 4
  %22 = ptrtoint ptr %21 to i32
  %sub = sub i32 %20, %22
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.867, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %23 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %24)
  %cmp41 = icmp eq i8 %24, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %17, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.870) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.873, ptr noundef nonnull @.str.857, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 0, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %zero) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_trailing_hole_assigned_copy() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %zero = alloca %struct.test_trailing_hole, align 4
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %zero) #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = getelementptr inbounds i8, ptr %zero, i32 12
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %1, align 4
  %3 = call ptr @memset(ptr %zero, i32 0, i32 13)
  %4 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %5 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_trailing_hole_assigned_copy(i32 noundef %5, i1 noundef zeroext true, ptr noundef nonnull %zero) #10
  %6 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %call, ptr %ignored, align 4
  %7 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp76.not = icmp eq i32 %7, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %9)
  %cmp6 = icmp ne i8 %9, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %7, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.875) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %10 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_trailing_hole_assigned_copy(i32 noundef %5, i1 noundef zeroext false, ptr noundef nonnull %zero) #10
  %11 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %call14, ptr %ignored, align 4
  %12 = load ptr, ptr @fill_start, align 4
  %13 = load i32, ptr @fill_size, align 4
  %14 = load ptr, ptr @target_start, align 4
  %15 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %14, %12
  %add.ptr.i = getelementptr i8, ptr %14, i32 %15
  %add.ptr1.i = getelementptr i8, ptr %12, i32 %13
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp3580.not = icmp eq i32 %15, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.878) #11
  %16 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.881, i32 noundef %16) #11
  %17 = load ptr, ptr @fill_start, align 4
  %18 = ptrtoint ptr %17 to i32
  %19 = load ptr, ptr @target_start, align 4
  %20 = ptrtoint ptr %19 to i32
  %sub = sub i32 %18, %20
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.884, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %21 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %22)
  %cmp41 = icmp eq i8 %22, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %15, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.887) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.890, ptr noundef nonnull @.str.857, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 0, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %zero) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_packed_assigned_copy() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %zero = alloca %struct.test_packed, align 4
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %zero) #12
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr %zero, i32 0, i32 16)
  %2 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %3 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_packed_assigned_copy(i32 noundef %3, i1 noundef zeroext true, ptr noundef nonnull %zero) #10
  %4 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %call, ptr %ignored, align 4
  %5 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp76.not = icmp eq i32 %5, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %7)
  %cmp6 = icmp ne i8 %7, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %5, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.892) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %8 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_packed_assigned_copy(i32 noundef %3, i1 noundef zeroext false, ptr noundef nonnull %zero) #10
  %9 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %call14, ptr %ignored, align 4
  %10 = load ptr, ptr @fill_start, align 4
  %11 = load i32, ptr @fill_size, align 4
  %12 = load ptr, ptr @target_start, align 4
  %13 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %12, %10
  %add.ptr.i = getelementptr i8, ptr %12, i32 %13
  %add.ptr1.i = getelementptr i8, ptr %10, i32 %11
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp3580.not = icmp eq i32 %13, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.895) #11
  %14 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.898, i32 noundef %14) #11
  %15 = load ptr, ptr @fill_start, align 4
  %16 = ptrtoint ptr %15 to i32
  %17 = load ptr, ptr @target_start, align 4
  %18 = ptrtoint ptr %17 to i32
  %sub = sub i32 %16, %18
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.901, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %19 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %20)
  %cmp41 = icmp eq i8 %20, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %13, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.904) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.907, ptr noundef nonnull @.str.857, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 0, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %zero) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_u8_none() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_u8_none(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp73.not = icmp eq i32 %4, 0
  br i1 %cmp73.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv76 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.075 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.074 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv76
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp3 = icmp ne i8 %6, -1
  %conv4 = zext i1 %cmp3 to i8
  %add = add i8 %sum.075, %conv4
  %inc = add i8 %i.074, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end9

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end9:                                          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call10 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.909) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call11 = call fastcc i32 @leaf_u8_none(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call11, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond30.preheader, label %do.end16

for.cond30.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3277.not = icmp eq i32 %12, 0
  br i1 %cmp3277.not, label %for.cond30.preheader.do.end52_crit_edge, label %for.cond30.preheader.for.body34_crit_edge

for.cond30.preheader.for.body34_crit_edge:        ; preds = %for.cond30.preheader
  br label %for.body34

for.cond30.preheader.do.end52_crit_edge:          ; preds = %for.cond30.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end52

do.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call18 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.912) #11
  %13 = load i32, ptr @fill_size, align 4
  %call23 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.915, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call28 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.918, i32 noundef %sub) #11
  br label %cleanup

for.body34:                                       ; preds = %for.body34.for.body34_crit_edge, %for.cond30.preheader.for.body34_crit_edge
  %conv3180 = phi i32 [ %conv31, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %sum.179 = phi i32 [ %phi.cast, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %i.178 = phi i8 [ %inc44, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %arrayidx36 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3180
  %18 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx36, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp38 = icmp eq i8 %19, -1
  %conv39 = zext i1 %cmp38 to i32
  %add41 = add nuw nsw i32 %sum.179, %conv39
  %inc44 = add i8 %i.178, 1
  %phi.cast = and i32 %add41, 255
  %conv31 = zext i8 %inc44 to i32
  %cmp32 = icmp ugt i32 %12, %conv31
  br i1 %cmp32, label %for.body34.for.body34_crit_edge, label %for.end45

for.body34.for.body34_crit_edge:                  ; preds = %for.body34
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body34

for.end45:                                        ; preds = %for.body34
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp47 = icmp eq i32 %phi.cast, 0
  br i1 %cmp47, label %for.end45.do.end52_crit_edge, label %do.end57

for.end45.do.end52_crit_edge:                     ; preds = %for.end45
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end52

do.end52:                                         ; preds = %for.end45.do.end52_crit_edge, %for.cond30.preheader.do.end52_crit_edge
  %call54 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.921) #11
  br label %cleanup

do.end57:                                         ; preds = %for.end45
  call void @__sanitizer_cov_trace_pc() #9
  %call60 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.924, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end57, %do.end52, %do.end16, %do.end9
  %retval.0 = phi i32 [ 1, %do.end9 ], [ 0, %do.end52 ], [ 1, %do.end57 ], [ 1, %do.end16 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_u16_none() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_u16_none(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp73.not = icmp eq i32 %4, 0
  br i1 %cmp73.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv76 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.075 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.074 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv76
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp3 = icmp ne i8 %6, -1
  %conv4 = zext i1 %cmp3 to i8
  %add = add i8 %sum.075, %conv4
  %inc = add i8 %i.074, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end9

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end9:                                          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call10 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.926) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call11 = call fastcc i32 @leaf_u16_none(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call11, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond30.preheader, label %do.end16

for.cond30.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3277.not = icmp eq i32 %12, 0
  br i1 %cmp3277.not, label %for.cond30.preheader.do.end52_crit_edge, label %for.cond30.preheader.for.body34_crit_edge

for.cond30.preheader.for.body34_crit_edge:        ; preds = %for.cond30.preheader
  br label %for.body34

for.cond30.preheader.do.end52_crit_edge:          ; preds = %for.cond30.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end52

do.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call18 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.929) #11
  %13 = load i32, ptr @fill_size, align 4
  %call23 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.932, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call28 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.935, i32 noundef %sub) #11
  br label %cleanup

for.body34:                                       ; preds = %for.body34.for.body34_crit_edge, %for.cond30.preheader.for.body34_crit_edge
  %conv3180 = phi i32 [ %conv31, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %sum.179 = phi i32 [ %phi.cast, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %i.178 = phi i8 [ %inc44, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %arrayidx36 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3180
  %18 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx36, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp38 = icmp eq i8 %19, -1
  %conv39 = zext i1 %cmp38 to i32
  %add41 = add nuw nsw i32 %sum.179, %conv39
  %inc44 = add i8 %i.178, 1
  %phi.cast = and i32 %add41, 255
  %conv31 = zext i8 %inc44 to i32
  %cmp32 = icmp ugt i32 %12, %conv31
  br i1 %cmp32, label %for.body34.for.body34_crit_edge, label %for.end45

for.body34.for.body34_crit_edge:                  ; preds = %for.body34
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body34

for.end45:                                        ; preds = %for.body34
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp47 = icmp eq i32 %phi.cast, 0
  br i1 %cmp47, label %for.end45.do.end52_crit_edge, label %do.end57

for.end45.do.end52_crit_edge:                     ; preds = %for.end45
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end52

do.end52:                                         ; preds = %for.end45.do.end52_crit_edge, %for.cond30.preheader.do.end52_crit_edge
  %call54 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.938) #11
  br label %cleanup

do.end57:                                         ; preds = %for.end45
  call void @__sanitizer_cov_trace_pc() #9
  %call60 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.941, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end57, %do.end52, %do.end16, %do.end9
  %retval.0 = phi i32 [ 1, %do.end9 ], [ 0, %do.end52 ], [ 1, %do.end57 ], [ 1, %do.end16 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_u32_none() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_u32_none(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp73.not = icmp eq i32 %4, 0
  br i1 %cmp73.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv76 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.075 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.074 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv76
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp3 = icmp ne i8 %6, -1
  %conv4 = zext i1 %cmp3 to i8
  %add = add i8 %sum.075, %conv4
  %inc = add i8 %i.074, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end9

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end9:                                          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call10 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.943) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call11 = call fastcc i32 @leaf_u32_none(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call11, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond30.preheader, label %do.end16

for.cond30.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3277.not = icmp eq i32 %12, 0
  br i1 %cmp3277.not, label %for.cond30.preheader.do.end52_crit_edge, label %for.cond30.preheader.for.body34_crit_edge

for.cond30.preheader.for.body34_crit_edge:        ; preds = %for.cond30.preheader
  br label %for.body34

for.cond30.preheader.do.end52_crit_edge:          ; preds = %for.cond30.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end52

do.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call18 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.946) #11
  %13 = load i32, ptr @fill_size, align 4
  %call23 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.949, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call28 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.952, i32 noundef %sub) #11
  br label %cleanup

for.body34:                                       ; preds = %for.body34.for.body34_crit_edge, %for.cond30.preheader.for.body34_crit_edge
  %conv3180 = phi i32 [ %conv31, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %sum.179 = phi i32 [ %phi.cast, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %i.178 = phi i8 [ %inc44, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %arrayidx36 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3180
  %18 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx36, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp38 = icmp eq i8 %19, -1
  %conv39 = zext i1 %cmp38 to i32
  %add41 = add nuw nsw i32 %sum.179, %conv39
  %inc44 = add i8 %i.178, 1
  %phi.cast = and i32 %add41, 255
  %conv31 = zext i8 %inc44 to i32
  %cmp32 = icmp ugt i32 %12, %conv31
  br i1 %cmp32, label %for.body34.for.body34_crit_edge, label %for.end45

for.body34.for.body34_crit_edge:                  ; preds = %for.body34
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body34

for.end45:                                        ; preds = %for.body34
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp47 = icmp eq i32 %phi.cast, 0
  br i1 %cmp47, label %for.end45.do.end52_crit_edge, label %do.end57

for.end45.do.end52_crit_edge:                     ; preds = %for.end45
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end52

do.end52:                                         ; preds = %for.end45.do.end52_crit_edge, %for.cond30.preheader.do.end52_crit_edge
  %call54 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.955) #11
  br label %cleanup

do.end57:                                         ; preds = %for.end45
  call void @__sanitizer_cov_trace_pc() #9
  %call60 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.958, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end57, %do.end52, %do.end16, %do.end9
  %retval.0 = phi i32 [ 1, %do.end9 ], [ 0, %do.end52 ], [ 1, %do.end57 ], [ 1, %do.end16 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_u64_none() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_u64_none(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp73.not = icmp eq i32 %4, 0
  br i1 %cmp73.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv76 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.075 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.074 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv76
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp3 = icmp ne i8 %6, -1
  %conv4 = zext i1 %cmp3 to i8
  %add = add i8 %sum.075, %conv4
  %inc = add i8 %i.074, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end9

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end9:                                          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call10 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.960) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call11 = call fastcc i32 @leaf_u64_none(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call11, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond30.preheader, label %do.end16

for.cond30.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3277.not = icmp eq i32 %12, 0
  br i1 %cmp3277.not, label %for.cond30.preheader.do.end52_crit_edge, label %for.cond30.preheader.for.body34_crit_edge

for.cond30.preheader.for.body34_crit_edge:        ; preds = %for.cond30.preheader
  br label %for.body34

for.cond30.preheader.do.end52_crit_edge:          ; preds = %for.cond30.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end52

do.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call18 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.963) #11
  %13 = load i32, ptr @fill_size, align 4
  %call23 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.966, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call28 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.969, i32 noundef %sub) #11
  br label %cleanup

for.body34:                                       ; preds = %for.body34.for.body34_crit_edge, %for.cond30.preheader.for.body34_crit_edge
  %conv3180 = phi i32 [ %conv31, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %sum.179 = phi i32 [ %phi.cast, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %i.178 = phi i8 [ %inc44, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %arrayidx36 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3180
  %18 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx36, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp38 = icmp eq i8 %19, -1
  %conv39 = zext i1 %cmp38 to i32
  %add41 = add nuw nsw i32 %sum.179, %conv39
  %inc44 = add i8 %i.178, 1
  %phi.cast = and i32 %add41, 255
  %conv31 = zext i8 %inc44 to i32
  %cmp32 = icmp ugt i32 %12, %conv31
  br i1 %cmp32, label %for.body34.for.body34_crit_edge, label %for.end45

for.body34.for.body34_crit_edge:                  ; preds = %for.body34
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body34

for.end45:                                        ; preds = %for.body34
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp47 = icmp eq i32 %phi.cast, 0
  br i1 %cmp47, label %for.end45.do.end52_crit_edge, label %do.end57

for.end45.do.end52_crit_edge:                     ; preds = %for.end45
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end52

do.end52:                                         ; preds = %for.end45.do.end52_crit_edge, %for.cond30.preheader.do.end52_crit_edge
  %call54 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.972) #11
  br label %cleanup

do.end57:                                         ; preds = %for.end45
  call void @__sanitizer_cov_trace_pc() #9
  %call60 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.975, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end57, %do.end52, %do.end16, %do.end9
  %retval.0 = phi i32 [ 1, %do.end9 ], [ 0, %do.end52 ], [ 1, %do.end57 ], [ 1, %do.end16 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_char_array_none() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_char_array_none(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp74.not = icmp eq i32 %4, 0
  br i1 %cmp74.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv77 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.076 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.075 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv77
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp3 = icmp ne i8 %6, -1
  %conv4 = zext i1 %cmp3 to i8
  %add = add i8 %sum.076, %conv4
  %inc = add i8 %i.075, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end9

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end9:                                          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call10 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.977) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call12 = call fastcc i32 @leaf_char_array_none(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call12, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond31.preheader, label %do.end17

for.cond31.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3378.not = icmp eq i32 %12, 0
  br i1 %cmp3378.not, label %for.cond31.preheader.do.end53_crit_edge, label %for.cond31.preheader.for.body35_crit_edge

for.cond31.preheader.for.body35_crit_edge:        ; preds = %for.cond31.preheader
  br label %for.body35

for.cond31.preheader.do.end53_crit_edge:          ; preds = %for.cond31.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end53

do.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call19 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.980) #11
  %13 = load i32, ptr @fill_size, align 4
  %call24 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.983, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call29 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.986, i32 noundef %sub) #11
  br label %cleanup

for.body35:                                       ; preds = %for.body35.for.body35_crit_edge, %for.cond31.preheader.for.body35_crit_edge
  %conv3281 = phi i32 [ %conv32, %for.body35.for.body35_crit_edge ], [ 0, %for.cond31.preheader.for.body35_crit_edge ]
  %sum.180 = phi i32 [ %phi.cast, %for.body35.for.body35_crit_edge ], [ 0, %for.cond31.preheader.for.body35_crit_edge ]
  %i.179 = phi i8 [ %inc45, %for.body35.for.body35_crit_edge ], [ 0, %for.cond31.preheader.for.body35_crit_edge ]
  %arrayidx37 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3281
  %18 = ptrtoint ptr %arrayidx37 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx37, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp39 = icmp eq i8 %19, -1
  %conv40 = zext i1 %cmp39 to i32
  %add42 = add nuw nsw i32 %sum.180, %conv40
  %inc45 = add i8 %i.179, 1
  %phi.cast = and i32 %add42, 255
  %conv32 = zext i8 %inc45 to i32
  %cmp33 = icmp ugt i32 %12, %conv32
  br i1 %cmp33, label %for.body35.for.body35_crit_edge, label %for.end46

for.body35.for.body35_crit_edge:                  ; preds = %for.body35
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body35

for.end46:                                        ; preds = %for.body35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp48 = icmp eq i32 %phi.cast, 0
  br i1 %cmp48, label %for.end46.do.end53_crit_edge, label %do.end58

for.end46.do.end53_crit_edge:                     ; preds = %for.end46
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end53

do.end53:                                         ; preds = %for.end46.do.end53_crit_edge, %for.cond31.preheader.do.end53_crit_edge
  %call55 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.989) #11
  br label %cleanup

do.end58:                                         ; preds = %for.end46
  call void @__sanitizer_cov_trace_pc() #9
  %call61 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.992, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end58, %do.end53, %do.end17, %do.end9
  %retval.0 = phi i32 [ 1, %do.end9 ], [ 0, %do.end53 ], [ 1, %do.end58 ], [ 1, %do.end17 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_switch_1_none() unnamed_addr #3 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #9
  %0 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call = tail call fastcc i32 @leaf_switch_1_none(i1 noundef zeroext true) #10
  %1 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp73.not = icmp eq i32 %1, 0
  br i1 %cmp73.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv76 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.075 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.074 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv76
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %3)
  %cmp3 = icmp ne i8 %3, -1
  %conv4 = zext i1 %cmp3 to i8
  %add = add i8 %sum.075, %conv4
  %inc = add i8 %i.074, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %1, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end9

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end9:                                          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call10 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.994) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %4 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call11 = tail call fastcc i32 @leaf_switch_1_none(i1 noundef zeroext false) #10
  %5 = load ptr, ptr @fill_start, align 4
  %6 = load i32, ptr @fill_size, align 4
  %7 = load ptr, ptr @target_start, align 4
  %8 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %7, %5
  %add.ptr.i = getelementptr i8, ptr %7, i32 %8
  %add.ptr1.i = getelementptr i8, ptr %5, i32 %6
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond30.preheader, label %do.end16

for.cond30.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp3277.not = icmp eq i32 %8, 0
  br i1 %cmp3277.not, label %for.cond30.preheader.do.end52_crit_edge, label %for.cond30.preheader.for.body34_crit_edge

for.cond30.preheader.for.body34_crit_edge:        ; preds = %for.cond30.preheader
  br label %for.body34

for.cond30.preheader.do.end52_crit_edge:          ; preds = %for.cond30.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end52

do.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call18 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.997) #11
  %9 = load i32, ptr @fill_size, align 4
  %call23 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1000, i32 noundef %9) #11
  %10 = load ptr, ptr @fill_start, align 4
  %11 = ptrtoint ptr %10 to i32
  %12 = load ptr, ptr @target_start, align 4
  %13 = ptrtoint ptr %12 to i32
  %sub = sub i32 %11, %13
  %call28 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1003, i32 noundef %sub) #11
  br label %cleanup

for.body34:                                       ; preds = %for.body34.for.body34_crit_edge, %for.cond30.preheader.for.body34_crit_edge
  %conv3180 = phi i32 [ %conv31, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %sum.179 = phi i32 [ %phi.cast, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %i.178 = phi i8 [ %inc44, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %arrayidx36 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3180
  %14 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %arrayidx36, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %15)
  %cmp38 = icmp eq i8 %15, -1
  %conv39 = zext i1 %cmp38 to i32
  %add41 = add nuw nsw i32 %sum.179, %conv39
  %inc44 = add i8 %i.178, 1
  %phi.cast = and i32 %add41, 255
  %conv31 = zext i8 %inc44 to i32
  %cmp32 = icmp ugt i32 %8, %conv31
  br i1 %cmp32, label %for.body34.for.body34_crit_edge, label %for.end45

for.body34.for.body34_crit_edge:                  ; preds = %for.body34
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body34

for.end45:                                        ; preds = %for.body34
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp47 = icmp eq i32 %phi.cast, 0
  br i1 %cmp47, label %for.end45.do.end52_crit_edge, label %do.end57

for.end45.do.end52_crit_edge:                     ; preds = %for.end45
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end52

do.end52:                                         ; preds = %for.end45.do.end52_crit_edge, %for.cond30.preheader.do.end52_crit_edge
  %call54 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1006) #11
  br label %cleanup

do.end57:                                         ; preds = %for.end45
  call void @__sanitizer_cov_trace_pc() #9
  %call60 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1009, ptr noundef nonnull @.str.857, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end57, %do.end52, %do.end16, %do.end9
  %retval.0 = phi i32 [ 1, %do.end9 ], [ 0, %do.end52 ], [ 0, %do.end57 ], [ 1, %do.end16 ]
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_switch_2_none() unnamed_addr #3 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #9
  %0 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call = tail call fastcc i32 @leaf_switch_2_none(i1 noundef zeroext true) #10
  %1 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp73.not = icmp eq i32 %1, 0
  br i1 %cmp73.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv76 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.075 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.074 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv76
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %3)
  %cmp3 = icmp ne i8 %3, -1
  %conv4 = zext i1 %cmp3 to i8
  %add = add i8 %sum.075, %conv4
  %inc = add i8 %i.074, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %1, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end9

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end9:                                          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call10 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1011) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %4 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call11 = tail call fastcc i32 @leaf_switch_2_none(i1 noundef zeroext false) #10
  %5 = load ptr, ptr @fill_start, align 4
  %6 = load i32, ptr @fill_size, align 4
  %7 = load ptr, ptr @target_start, align 4
  %8 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %7, %5
  %add.ptr.i = getelementptr i8, ptr %7, i32 %8
  %add.ptr1.i = getelementptr i8, ptr %5, i32 %6
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond30.preheader, label %do.end16

for.cond30.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp3277.not = icmp eq i32 %8, 0
  br i1 %cmp3277.not, label %for.cond30.preheader.do.end52_crit_edge, label %for.cond30.preheader.for.body34_crit_edge

for.cond30.preheader.for.body34_crit_edge:        ; preds = %for.cond30.preheader
  br label %for.body34

for.cond30.preheader.do.end52_crit_edge:          ; preds = %for.cond30.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end52

do.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call18 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1014) #11
  %9 = load i32, ptr @fill_size, align 4
  %call23 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1017, i32 noundef %9) #11
  %10 = load ptr, ptr @fill_start, align 4
  %11 = ptrtoint ptr %10 to i32
  %12 = load ptr, ptr @target_start, align 4
  %13 = ptrtoint ptr %12 to i32
  %sub = sub i32 %11, %13
  %call28 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1020, i32 noundef %sub) #11
  br label %cleanup

for.body34:                                       ; preds = %for.body34.for.body34_crit_edge, %for.cond30.preheader.for.body34_crit_edge
  %conv3180 = phi i32 [ %conv31, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %sum.179 = phi i32 [ %phi.cast, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %i.178 = phi i8 [ %inc44, %for.body34.for.body34_crit_edge ], [ 0, %for.cond30.preheader.for.body34_crit_edge ]
  %arrayidx36 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3180
  %14 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %arrayidx36, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %15)
  %cmp38 = icmp eq i8 %15, -1
  %conv39 = zext i1 %cmp38 to i32
  %add41 = add nuw nsw i32 %sum.179, %conv39
  %inc44 = add i8 %i.178, 1
  %phi.cast = and i32 %add41, 255
  %conv31 = zext i8 %inc44 to i32
  %cmp32 = icmp ugt i32 %8, %conv31
  br i1 %cmp32, label %for.body34.for.body34_crit_edge, label %for.end45

for.body34.for.body34_crit_edge:                  ; preds = %for.body34
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body34

for.end45:                                        ; preds = %for.body34
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp47 = icmp eq i32 %phi.cast, 0
  br i1 %cmp47, label %for.end45.do.end52_crit_edge, label %do.end57

for.end45.do.end52_crit_edge:                     ; preds = %for.end45
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end52

do.end52:                                         ; preds = %for.end45.do.end52_crit_edge, %for.cond30.preheader.do.end52_crit_edge
  %call54 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1023) #11
  br label %cleanup

do.end57:                                         ; preds = %for.end45
  call void @__sanitizer_cov_trace_pc() #9
  %call60 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1026, ptr noundef nonnull @.str.857, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end57, %do.end52, %do.end16, %do.end9
  %retval.0 = phi i32 [ 1, %do.end9 ], [ 0, %do.end52 ], [ 0, %do.end57 ], [ 1, %do.end16 ]
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_small_hole_none() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_small_hole_none(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1028) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_small_hole_none(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1031) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1034, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1037, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1040) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1043, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_big_hole_none() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_big_hole_none(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1045) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_big_hole_none(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1048) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1051, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1054, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1057) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1060, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_trailing_hole_none() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_trailing_hole_none(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1062) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_trailing_hole_none(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1065) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1068, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1071, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1074) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1077, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_packed_none() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_packed_none(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1079) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_packed_none(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1082) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1085, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1088, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1091) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1094, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @test_user() unnamed_addr #3 section ".init.text" align 64 {
entry:
  %ignored = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ignored) #12
  %0 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %ignored, align 4, !annotation !1287
  %1 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %2 = ptrtoint ptr %ignored to i32
  %call = call fastcc i32 @leaf_user(i32 noundef %2, i1 noundef zeroext true) #10
  %3 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %call, ptr %ignored, align 4
  %4 = load i32, ptr @target_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp76.not = icmp eq i32 %4, 0
  br i1 %cmp76.not, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %conv79 = phi i32 [ %conv, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %sum.078 = phi i8 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %i.077 = phi i8 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv79
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %6)
  %cmp6 = icmp ne i8 %6, -1
  %conv7 = zext i1 %cmp6 to i8
  %add = add i8 %sum.078, %conv7
  %inc = add i8 %i.077, 1
  %conv = zext i8 %inc to i32
  %cmp = icmp ugt i32 %4, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %add)
  %phi.cmp = icmp eq i8 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %do.end12

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

do.end12:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #9
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1096) #11
  br label %cleanup

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %7 = call ptr @memset(ptr @check_buf, i32 0, i32 128)
  %call14 = call fastcc i32 @leaf_user(i32 noundef %2, i1 noundef zeroext false) #10
  %8 = ptrtoint ptr %ignored to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %ignored, align 4
  %9 = load ptr, ptr @fill_start, align 4
  %10 = load i32, ptr @fill_size, align 4
  %11 = load ptr, ptr @target_start, align 4
  %12 = load i32, ptr @target_size, align 4
  %cmp.not.i = icmp uge ptr %11, %9
  %add.ptr.i = getelementptr i8, ptr %11, i32 %12
  %add.ptr1.i = getelementptr i8, ptr %9, i32 %10
  %cmp2.not.i = icmp ule ptr %add.ptr.i, %add.ptr1.i
  %not.or.cond.i = and i1 %cmp.not.i, %cmp2.not.i
  br i1 %not.or.cond.i, label %for.cond33.preheader, label %do.end19

for.cond33.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp3580.not = icmp eq i32 %12, 0
  br i1 %cmp3580.not, label %for.cond33.preheader.do.end55_crit_edge, label %for.cond33.preheader.for.body37_crit_edge

for.cond33.preheader.for.body37_crit_edge:        ; preds = %for.cond33.preheader
  br label %for.body37

for.cond33.preheader.do.end55_crit_edge:          ; preds = %for.cond33.preheader
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #9
  %call21 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1099) #11
  %13 = load i32, ptr @fill_size, align 4
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1102, i32 noundef %13) #11
  %14 = load ptr, ptr @fill_start, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load ptr, ptr @target_start, align 4
  %17 = ptrtoint ptr %16 to i32
  %sub = sub i32 %15, %17
  %call31 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1105, i32 noundef %sub) #11
  br label %cleanup

for.body37:                                       ; preds = %for.body37.for.body37_crit_edge, %for.cond33.preheader.for.body37_crit_edge
  %conv3483 = phi i32 [ %conv34, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %sum.182 = phi i32 [ %phi.cast, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %i.181 = phi i8 [ %inc47, %for.body37.for.body37_crit_edge ], [ 0, %for.cond33.preheader.for.body37_crit_edge ]
  %arrayidx39 = getelementptr [128 x i8], ptr @check_buf, i32 0, i32 %conv3483
  %18 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx39, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %19)
  %cmp41 = icmp eq i8 %19, -1
  %conv42 = zext i1 %cmp41 to i32
  %add44 = add nuw nsw i32 %sum.182, %conv42
  %inc47 = add i8 %i.181, 1
  %phi.cast = and i32 %add44, 255
  %conv34 = zext i8 %inc47 to i32
  %cmp35 = icmp ugt i32 %12, %conv34
  br i1 %cmp35, label %for.body37.for.body37_crit_edge, label %for.end48

for.body37.for.body37_crit_edge:                  ; preds = %for.body37
  call void @__sanitizer_cov_trace_pc() #9
  br label %for.body37

for.end48:                                        ; preds = %for.body37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.cast)
  %cmp50 = icmp eq i32 %phi.cast, 0
  br i1 %cmp50, label %for.end48.do.end55_crit_edge, label %do.end60

for.end48.do.end55_crit_edge:                     ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  br label %do.end55

do.end55:                                         ; preds = %for.end48.do.end55_crit_edge, %for.cond33.preheader.do.end55_crit_edge
  %call57 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1108) #11
  br label %cleanup

do.end60:                                         ; preds = %for.end48
  call void @__sanitizer_cov_trace_pc() #9
  %call63 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1111, ptr noundef nonnull @.str.23, i32 noundef %phi.cast) #11
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %do.end55, %do.end19, %do.end12
  %retval.0 = phi i32 [ 1, %do.end12 ], [ 0, %do.end55 ], [ 1, %do.end60 ], [ 1, %do.end19 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ignored) #12
  ret i32 %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_u8_zero(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %var) #12
  %0 = ptrtoint ptr %var to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 0, ptr %var, align 1
  store ptr %var, ptr @target_start, align 4
  store i32 1, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 1, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %call = call fastcc zeroext i8 @do_nothing_u8_zero(ptr noundef nonnull %var) #10
  store i8 %call, ptr @check_buf, align 8
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline norecurse nosync nounwind null_pointer_is_valid optsize readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc zeroext i8 @do_nothing_u8_zero(ptr noundef readonly %ptr) unnamed_addr #6 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #9
  %cmp = icmp ule ptr %ptr, inttoptr (i32 2 to ptr)
  %retval.0.in.idx = zext i1 %cmp to i32
  %retval.0.in = getelementptr i8, ptr %ptr, i32 %retval.0.in.idx
  %0 = ptrtoint ptr %retval.0.in to i32
  call void @__asan_load1_noabort(i32 %0)
  %retval.0 = load i8, ptr %retval.0.in, align 1
  ret i8 %retval.0
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_u16_zero(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %var) #12
  %0 = ptrtoint ptr %var to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 0, ptr %var, align 2
  store ptr %var, ptr @target_start, align 4
  store i32 2, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 2, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %call = call fastcc zeroext i16 @do_nothing_u16_zero(ptr noundef nonnull %var) #10
  store i16 %call, ptr @check_buf, align 8
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline norecurse nosync nounwind null_pointer_is_valid optsize readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc zeroext i16 @do_nothing_u16_zero(ptr noundef readonly %ptr) unnamed_addr #6 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #9
  %cmp = icmp ule ptr %ptr, inttoptr (i32 2 to ptr)
  %retval.0.in.idx = zext i1 %cmp to i32
  %retval.0.in = getelementptr i16, ptr %ptr, i32 %retval.0.in.idx
  %0 = ptrtoint ptr %retval.0.in to i32
  call void @__asan_load2_noabort(i32 %0)
  %retval.0 = load i16, ptr %retval.0.in, align 2
  ret i16 %retval.0
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_u32_zero(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %var) #12
  %0 = ptrtoint ptr %var to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %var, align 4
  store ptr %var, ptr @target_start, align 4
  store i32 4, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 4, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 4)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %call = call fastcc i32 @do_nothing_u32_zero(ptr noundef nonnull %var) #10
  store i32 %call, ptr @check_buf, align 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline norecurse nosync nounwind null_pointer_is_valid optsize readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @do_nothing_u32_zero(ptr noundef readonly %ptr) unnamed_addr #6 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #9
  %cmp = icmp ule ptr %ptr, inttoptr (i32 2 to ptr)
  %retval.0.in.idx = zext i1 %cmp to i32
  %retval.0.in = getelementptr i32, ptr %ptr, i32 %retval.0.in.idx
  %0 = ptrtoint ptr %retval.0.in to i32
  call void @__asan_load4_noabort(i32 %0)
  %retval.0 = load i32, ptr %retval.0.in, align 4
  ret i32 %retval.0
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_u64_zero(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %var) #12
  %0 = ptrtoint ptr %var to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 0, ptr %var, align 8
  store ptr %var, ptr @target_start, align 4
  store i32 8, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 8, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 8)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %call = call fastcc i64 @do_nothing_u64_zero(ptr noundef nonnull %var) #10
  store i64 %call, ptr @check_buf, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline norecurse nosync nounwind null_pointer_is_valid optsize readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i64 @do_nothing_u64_zero(ptr noundef readonly %ptr) unnamed_addr #6 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #9
  %cmp = icmp ule ptr %ptr, inttoptr (i32 2 to ptr)
  %retval.0.in.idx = zext i1 %cmp to i32
  %retval.0.in = getelementptr i64, ptr %ptr, i32 %retval.0.in.idx
  %0 = ptrtoint ptr %retval.0.in to i32
  call void @__asan_load8_noabort(i32 %0)
  %retval.0 = load i64, ptr %retval.0.in, align 8
  ret i64 %retval.0
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_char_array_zero(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca [16 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 0, i32 16)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_small_hole_zero(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_small_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 0, i32 16)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_big_hole_zero(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_big_hole, align 64
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %var) #12
  %0 = call ptr @memcpy(ptr %var, ptr @__const.leaf_big_hole_static_all.var, i32 128)
  store ptr %var, ptr @target_start, align 4
  store i32 128, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 128, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 128)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 128)
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_trailing_hole_zero(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_trailing_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 0, i32 16)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_packed_zero(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_packed, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 0, i32 16)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_small_hole_dynamic_partial(i32 noundef %sp, i1 noundef zeroext %fill, ptr nocapture noundef readonly %arg) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_small_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = getelementptr inbounds i8, ptr %var, i32 4
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4
  %2 = ptrtoint ptr %var to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %var, align 4
  %two = getelementptr inbounds %struct.test_small_hole, ptr %var, i32 0, i32 1
  %two1 = getelementptr inbounds %struct.test_small_hole, ptr %arg, i32 0, i32 1
  %3 = ptrtoint ptr %two1 to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %two1, align 4
  %5 = ptrtoint ptr %two to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %4, ptr %two, align 4
  %three = getelementptr inbounds %struct.test_small_hole, ptr %var, i32 0, i32 2
  %6 = ptrtoint ptr %three to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %three, align 4
  %four = getelementptr inbounds %struct.test_small_hole, ptr %var, i32 0, i32 3
  %7 = ptrtoint ptr %four to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %four, align 4
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %8 = load volatile i8, ptr @forced_mask, align 1
  %9 = trunc i32 %sp to i8
  %conv5 = or i8 %8, %9
  %10 = zext i8 %conv5 to i32
  %11 = call ptr @memset(ptr %var, i32 %10, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv2 = and i32 %sp, 255
  %12 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv2
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_big_hole_dynamic_partial(i32 noundef %sp, i1 noundef zeroext %fill, ptr nocapture noundef readonly %arg) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_big_hole, align 64
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 0, i32 128)
  %two = getelementptr inbounds %struct.test_big_hole, ptr %var, i32 0, i32 1
  %two1 = getelementptr inbounds %struct.test_big_hole, ptr %arg, i32 0, i32 1
  %1 = ptrtoint ptr %two1 to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %two1, align 1
  %3 = ptrtoint ptr %two to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 %2, ptr %two, align 1
  store ptr %var, ptr @target_start, align 4
  store i32 128, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 128, ptr @fill_size, align 4
  %4 = load volatile i8, ptr @forced_mask, align 1
  %5 = trunc i32 %sp to i8
  %conv5 = or i8 %4, %5
  %6 = zext i8 %conv5 to i32
  %7 = call ptr @memset(ptr %var, i32 %6, i32 128)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv2 = and i32 %sp, 255
  %8 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 128)
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %var) #12
  ret i32 %conv2
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_trailing_hole_dynamic_partial(i32 noundef %sp, i1 noundef zeroext %fill, ptr nocapture noundef readonly %arg) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_trailing_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = getelementptr inbounds i8, ptr %var, i32 12
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4
  %2 = ptrtoint ptr %var to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %var, align 4
  %two = getelementptr inbounds %struct.test_trailing_hole, ptr %var, i32 0, i32 1
  %two1 = getelementptr inbounds %struct.test_trailing_hole, ptr %arg, i32 0, i32 1
  %3 = ptrtoint ptr %two1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %two1, align 4
  %5 = ptrtoint ptr %two to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %4, ptr %two, align 4
  %three = getelementptr inbounds %struct.test_trailing_hole, ptr %var, i32 0, i32 2
  %6 = ptrtoint ptr %three to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %three, align 4
  %four = getelementptr inbounds %struct.test_trailing_hole, ptr %var, i32 0, i32 3
  %7 = ptrtoint ptr %four to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 0, ptr %four, align 4
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %8 = load volatile i8, ptr @forced_mask, align 1
  %9 = trunc i32 %sp to i8
  %conv5 = or i8 %8, %9
  %10 = zext i8 %conv5 to i32
  %11 = call ptr @memset(ptr %var, i32 %10, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv2 = and i32 %sp, 255
  %12 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv2
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_packed_dynamic_partial(i32 noundef %sp, i1 noundef zeroext %fill, ptr nocapture noundef readonly %arg) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_packed, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = getelementptr inbounds %struct.test_packed, ptr %var, i32 0, i32 1
  %1 = getelementptr inbounds %struct.test_packed, ptr %var, i32 0, i32 2
  %2 = getelementptr inbounds %struct.test_packed, ptr %var, i32 0, i32 3
  %3 = ptrtoint ptr %var to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %var, align 4
  %two1 = getelementptr inbounds %struct.test_packed, ptr %arg, i32 0, i32 1
  %4 = ptrtoint ptr %two1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %two1, align 4
  %6 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %0, align 4
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %1, align 4
  %8 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %2, align 4
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %9 = load volatile i8, ptr @forced_mask, align 1
  %10 = trunc i32 %sp to i8
  %conv5 = or i8 %9, %10
  %11 = zext i8 %conv5 to i32
  %12 = call ptr @memset(ptr %var, i32 %11, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv2 = and i32 %sp, 255
  %13 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv2
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_small_hole_assigned_dynamic_partial(i32 noundef %sp, i1 noundef zeroext %fill, ptr nocapture noundef readonly %arg) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_small_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = getelementptr inbounds i8, ptr %var, i32 4
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4
  %two1 = getelementptr inbounds %struct.test_small_hole, ptr %arg, i32 0, i32 1
  %2 = ptrtoint ptr %two1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %two1, align 4
  %4 = ptrtoint ptr %var to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %var, align 4
  %.compoundliteral.sroa.2.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 4
  %5 = ptrtoint ptr %.compoundliteral.sroa.2.0.var.sroa_idx to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %3, ptr %.compoundliteral.sroa.2.0.var.sroa_idx, align 4
  %.compoundliteral.sroa.311.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 8
  %6 = ptrtoint ptr %.compoundliteral.sroa.311.0.var.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %.compoundliteral.sroa.311.0.var.sroa_idx, align 4
  %.compoundliteral.sroa.4.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 12
  %7 = ptrtoint ptr %.compoundliteral.sroa.4.0.var.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %.compoundliteral.sroa.4.0.var.sroa_idx, align 4
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %8 = load volatile i8, ptr @forced_mask, align 1
  %9 = trunc i32 %sp to i8
  %conv5 = or i8 %8, %9
  %10 = zext i8 %conv5 to i32
  %11 = call ptr @memset(ptr %var, i32 %10, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv2 = and i32 %sp, 255
  %12 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv2
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_big_hole_assigned_dynamic_partial(i32 noundef %sp, i1 noundef zeroext %fill, ptr nocapture noundef readonly %arg) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_big_hole, align 64
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %var) #12
  %.compoundliteral.sroa.3.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 2
  %0 = call ptr @memset(ptr %.compoundliteral.sroa.3.0.var.sroa_idx, i32 0, i32 126)
  %two1 = getelementptr inbounds %struct.test_big_hole, ptr %arg, i32 0, i32 1
  %1 = ptrtoint ptr %two1 to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %two1, align 1
  %3 = ptrtoint ptr %var to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %var, align 64
  %.compoundliteral.sroa.2.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 1
  %4 = ptrtoint ptr %.compoundliteral.sroa.2.0.var.sroa_idx to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %2, ptr %.compoundliteral.sroa.2.0.var.sroa_idx, align 1
  store ptr %var, ptr @target_start, align 4
  store i32 128, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 128, ptr @fill_size, align 4
  %5 = load volatile i8, ptr @forced_mask, align 1
  %6 = trunc i32 %sp to i8
  %conv5 = or i8 %5, %6
  %7 = zext i8 %conv5 to i32
  %8 = call ptr @memset(ptr %var, i32 %7, i32 128)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv2 = and i32 %sp, 255
  %9 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 128)
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %var) #12
  ret i32 %conv2
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_trailing_hole_assigned_dynamic_partial(i32 noundef %sp, i1 noundef zeroext %fill, ptr nocapture noundef readonly %arg) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_trailing_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = getelementptr inbounds i8, ptr %var, i32 12
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4
  %two1 = getelementptr inbounds %struct.test_trailing_hole, ptr %arg, i32 0, i32 1
  %2 = ptrtoint ptr %two1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %two1, align 4
  %4 = ptrtoint ptr %var to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %var, align 4
  %.compoundliteral.sroa.2.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 4
  %5 = ptrtoint ptr %.compoundliteral.sroa.2.0.var.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %3, ptr %.compoundliteral.sroa.2.0.var.sroa_idx, align 4
  %.compoundliteral.sroa.3.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 8
  %6 = ptrtoint ptr %.compoundliteral.sroa.3.0.var.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %.compoundliteral.sroa.3.0.var.sroa_idx, align 4
  %.compoundliteral.sroa.4.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 12
  %7 = ptrtoint ptr %.compoundliteral.sroa.4.0.var.sroa_idx to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 0, ptr %.compoundliteral.sroa.4.0.var.sroa_idx, align 4
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %8 = load volatile i8, ptr @forced_mask, align 1
  %9 = trunc i32 %sp to i8
  %conv5 = or i8 %8, %9
  %10 = zext i8 %conv5 to i32
  %11 = call ptr @memset(ptr %var, i32 %10, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv2 = and i32 %sp, 255
  %12 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv2
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_packed_assigned_dynamic_partial(i32 noundef %sp, i1 noundef zeroext %fill, ptr nocapture noundef readonly %arg) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_packed, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = getelementptr inbounds %struct.test_packed, ptr %var, i32 0, i32 1
  %1 = getelementptr inbounds %struct.test_packed, ptr %var, i32 0, i32 2
  %2 = getelementptr inbounds %struct.test_packed, ptr %var, i32 0, i32 3
  %two1 = getelementptr inbounds %struct.test_packed, ptr %arg, i32 0, i32 1
  %3 = ptrtoint ptr %two1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %two1, align 4
  %5 = ptrtoint ptr %var to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %var, align 4
  %6 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %4, ptr %0, align 4
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %1, align 4
  %8 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %2, align 4
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %9 = load volatile i8, ptr @forced_mask, align 1
  %10 = trunc i32 %sp to i8
  %conv5 = or i8 %9, %10
  %11 = zext i8 %conv5 to i32
  %12 = call ptr @memset(ptr %var, i32 %11, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv2 = and i32 %sp, 255
  %13 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv2
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_small_hole_static_partial(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_small_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 0, i32 16)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_big_hole_static_partial(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_big_hole, align 64
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %var) #12
  %0 = call ptr @memcpy(ptr %var, ptr @__const.leaf_big_hole_static_all.var, i32 128)
  store ptr %var, ptr @target_start, align 4
  store i32 128, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 128, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 128)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 128)
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_trailing_hole_static_partial(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_trailing_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 0, i32 16)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_packed_static_partial(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_packed, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 0, i32 16)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_small_hole_static_all(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_small_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 0, i32 16)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_big_hole_static_all(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_big_hole, align 64
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %var) #12
  %0 = call ptr @memcpy(ptr %var, ptr @__const.leaf_big_hole_static_all.var, i32 128)
  store ptr %var, ptr @target_start, align 4
  store i32 128, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 128, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 128)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 128)
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_trailing_hole_static_all(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_trailing_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 0, i32 16)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_packed_static_all(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_packed, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 0, i32 16)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_small_hole_dynamic_all(i32 noundef %sp, i1 noundef zeroext %fill, ptr nocapture noundef readonly %arg) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_small_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = getelementptr inbounds i8, ptr %var, i32 4
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4
  %2 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arg, align 4
  %4 = ptrtoint ptr %var to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %var, align 4
  %two = getelementptr inbounds %struct.test_small_hole, ptr %var, i32 0, i32 1
  %two2 = getelementptr inbounds %struct.test_small_hole, ptr %arg, i32 0, i32 1
  %5 = ptrtoint ptr %two2 to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %two2, align 4
  %7 = ptrtoint ptr %two to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %6, ptr %two, align 4
  %three = getelementptr inbounds %struct.test_small_hole, ptr %var, i32 0, i32 2
  %three3 = getelementptr inbounds %struct.test_small_hole, ptr %arg, i32 0, i32 2
  %8 = ptrtoint ptr %three3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %three3, align 4
  %10 = ptrtoint ptr %three to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %three, align 4
  %four = getelementptr inbounds %struct.test_small_hole, ptr %var, i32 0, i32 3
  %four4 = getelementptr inbounds %struct.test_small_hole, ptr %arg, i32 0, i32 3
  %11 = ptrtoint ptr %four4 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %four4, align 4
  %13 = ptrtoint ptr %four to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %four, align 4
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %14 = load volatile i8, ptr @forced_mask, align 1
  %15 = trunc i32 %sp to i8
  %conv8 = or i8 %14, %15
  %16 = zext i8 %conv8 to i32
  %17 = call ptr @memset(ptr %var, i32 %16, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv5 = and i32 %sp, 255
  %18 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv5
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_big_hole_dynamic_all(i32 noundef %sp, i1 noundef zeroext %fill, ptr nocapture noundef readonly %arg) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_big_hole, align 64
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 0, i32 128)
  %1 = ptrtoint ptr %arg to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %arg, align 64
  %3 = ptrtoint ptr %var to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 %2, ptr %var, align 64
  %two = getelementptr inbounds %struct.test_big_hole, ptr %var, i32 0, i32 1
  %two2 = getelementptr inbounds %struct.test_big_hole, ptr %arg, i32 0, i32 1
  %4 = ptrtoint ptr %two2 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %two2, align 1
  %6 = ptrtoint ptr %two to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %two, align 1
  %three = getelementptr inbounds %struct.test_big_hole, ptr %var, i32 0, i32 2
  %three3 = getelementptr inbounds %struct.test_big_hole, ptr %arg, i32 0, i32 2
  %7 = ptrtoint ptr %three3 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %three3, align 2
  %9 = ptrtoint ptr %three to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %8, ptr %three, align 2
  %four = getelementptr inbounds %struct.test_big_hole, ptr %var, i32 0, i32 4
  %four4 = getelementptr inbounds %struct.test_big_hole, ptr %arg, i32 0, i32 4
  %10 = ptrtoint ptr %four4 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %four4, align 64
  %12 = ptrtoint ptr %four to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %11, ptr %four, align 64
  store ptr %var, ptr @target_start, align 4
  store i32 128, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 128, ptr @fill_size, align 4
  %13 = load volatile i8, ptr @forced_mask, align 1
  %14 = trunc i32 %sp to i8
  %conv8 = or i8 %13, %14
  %15 = zext i8 %conv8 to i32
  %16 = call ptr @memset(ptr %var, i32 %15, i32 128)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv5 = and i32 %sp, 255
  %17 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 128)
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %var) #12
  ret i32 %conv5
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_trailing_hole_dynamic_all(i32 noundef %sp, i1 noundef zeroext %fill, ptr nocapture noundef readonly %arg) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_trailing_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = getelementptr inbounds i8, ptr %var, i32 12
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4
  %2 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arg, align 4
  %4 = ptrtoint ptr %var to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %3, ptr %var, align 4
  %two = getelementptr inbounds %struct.test_trailing_hole, ptr %var, i32 0, i32 1
  %two2 = getelementptr inbounds %struct.test_trailing_hole, ptr %arg, i32 0, i32 1
  %5 = ptrtoint ptr %two2 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %two2, align 4
  %7 = ptrtoint ptr %two to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %6, ptr %two, align 4
  %three = getelementptr inbounds %struct.test_trailing_hole, ptr %var, i32 0, i32 2
  %three3 = getelementptr inbounds %struct.test_trailing_hole, ptr %arg, i32 0, i32 2
  %8 = ptrtoint ptr %three3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %three3, align 4
  %10 = ptrtoint ptr %three to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %9, ptr %three, align 4
  %four = getelementptr inbounds %struct.test_trailing_hole, ptr %var, i32 0, i32 3
  %four4 = getelementptr inbounds %struct.test_trailing_hole, ptr %arg, i32 0, i32 3
  %11 = ptrtoint ptr %four4 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %four4, align 4
  %13 = ptrtoint ptr %four to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 %12, ptr %four, align 4
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %14 = load volatile i8, ptr @forced_mask, align 1
  %15 = trunc i32 %sp to i8
  %conv8 = or i8 %14, %15
  %16 = zext i8 %conv8 to i32
  %17 = call ptr @memset(ptr %var, i32 %16, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv5 = and i32 %sp, 255
  %18 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv5
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_packed_dynamic_all(i32 noundef %sp, i1 noundef zeroext %fill, ptr nocapture noundef readonly %arg) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_packed, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = getelementptr inbounds %struct.test_packed, ptr %var, i32 0, i32 1
  %1 = getelementptr inbounds %struct.test_packed, ptr %var, i32 0, i32 2
  %2 = getelementptr inbounds %struct.test_packed, ptr %var, i32 0, i32 3
  %3 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %arg, align 4
  %5 = ptrtoint ptr %var to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %var, align 4
  %two2 = getelementptr inbounds %struct.test_packed, ptr %arg, i32 0, i32 1
  %6 = ptrtoint ptr %two2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %two2, align 4
  %8 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %0, align 4
  %three3 = getelementptr inbounds %struct.test_packed, ptr %arg, i32 0, i32 2
  %9 = ptrtoint ptr %three3 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %three3, align 4
  %11 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %1, align 4
  %four4 = getelementptr inbounds %struct.test_packed, ptr %arg, i32 0, i32 3
  %12 = ptrtoint ptr %four4 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %four4, align 4
  %14 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %2, align 4
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %15 = load volatile i8, ptr @forced_mask, align 1
  %16 = trunc i32 %sp to i8
  %conv8 = or i8 %15, %16
  %17 = zext i8 %conv8 to i32
  %18 = call ptr @memset(ptr %var, i32 %17, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv5 = and i32 %sp, 255
  %19 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv5
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_small_hole_runtime_partial(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_small_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 255, i32 16)
  %two = getelementptr inbounds %struct.test_small_hole, ptr %var, i32 0, i32 1
  %1 = ptrtoint ptr %two to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 0, ptr %two, align 4
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %2 = load volatile i8, ptr @forced_mask, align 1
  %3 = trunc i32 %sp to i8
  %conv4 = or i8 %2, %3
  %4 = zext i8 %conv4 to i32
  %5 = call ptr @memset(ptr %var, i32 %4, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %6 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_big_hole_runtime_partial(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_big_hole, align 64
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 255, i32 128)
  %two = getelementptr inbounds %struct.test_big_hole, ptr %var, i32 0, i32 1
  %1 = ptrtoint ptr %two to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 0, ptr %two, align 1
  store ptr %var, ptr @target_start, align 4
  store i32 128, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 128, ptr @fill_size, align 4
  %2 = load volatile i8, ptr @forced_mask, align 1
  %3 = trunc i32 %sp to i8
  %conv4 = or i8 %2, %3
  %4 = zext i8 %conv4 to i32
  %5 = call ptr @memset(ptr %var, i32 %4, i32 128)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %6 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 128)
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_trailing_hole_runtime_partial(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_trailing_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 255, i32 16)
  %two = getelementptr inbounds %struct.test_trailing_hole, ptr %var, i32 0, i32 1
  %1 = ptrtoint ptr %two to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr null, ptr %two, align 4
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %2 = load volatile i8, ptr @forced_mask, align 1
  %3 = trunc i32 %sp to i8
  %conv4 = or i8 %2, %3
  %4 = zext i8 %conv4 to i32
  %5 = call ptr @memset(ptr %var, i32 %4, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %6 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_packed_runtime_partial(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_packed, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = getelementptr inbounds %struct.test_packed, ptr %var, i32 0, i32 1
  %1 = call ptr @memset(ptr %var, i32 255, i32 16)
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %0, align 4
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %3 = load volatile i8, ptr @forced_mask, align 1
  %4 = trunc i32 %sp to i8
  %conv4 = or i8 %3, %4
  %5 = zext i8 %conv4 to i32
  %6 = call ptr @memset(ptr %var, i32 %5, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %7 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_small_hole_runtime_all(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_small_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = getelementptr inbounds i8, ptr %var, i32 4
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4
  %2 = ptrtoint ptr %var to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %var, align 4
  %two = getelementptr inbounds %struct.test_small_hole, ptr %var, i32 0, i32 1
  %3 = ptrtoint ptr %two to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %two, align 4
  %three = getelementptr inbounds %struct.test_small_hole, ptr %var, i32 0, i32 2
  %4 = ptrtoint ptr %three to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %three, align 4
  %four = getelementptr inbounds %struct.test_small_hole, ptr %var, i32 0, i32 3
  %5 = ptrtoint ptr %four to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %four, align 4
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %6 = load volatile i8, ptr @forced_mask, align 1
  %7 = trunc i32 %sp to i8
  %conv4 = or i8 %6, %7
  %8 = zext i8 %conv4 to i32
  %9 = call ptr @memset(ptr %var, i32 %8, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %10 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_big_hole_runtime_all(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_big_hole, align 64
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 255, i32 128)
  %1 = ptrtoint ptr %var to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 0, ptr %var, align 64
  %two = getelementptr inbounds %struct.test_big_hole, ptr %var, i32 0, i32 1
  %2 = ptrtoint ptr %two to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 0, ptr %two, align 1
  %three = getelementptr inbounds %struct.test_big_hole, ptr %var, i32 0, i32 2
  %3 = ptrtoint ptr %three to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %three, align 2
  %four = getelementptr inbounds %struct.test_big_hole, ptr %var, i32 0, i32 4
  %4 = ptrtoint ptr %four to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %four, align 64
  store ptr %var, ptr @target_start, align 4
  store i32 128, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 128, ptr @fill_size, align 4
  %5 = load volatile i8, ptr @forced_mask, align 1
  %6 = trunc i32 %sp to i8
  %conv4 = or i8 %5, %6
  %7 = zext i8 %conv4 to i32
  %8 = call ptr @memset(ptr %var, i32 %7, i32 128)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %9 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 128)
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_trailing_hole_runtime_all(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_trailing_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = getelementptr inbounds i8, ptr %var, i32 12
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4
  %2 = call ptr @memset(ptr %var, i32 0, i32 13)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %3 = load volatile i8, ptr @forced_mask, align 1
  %4 = trunc i32 %sp to i8
  %conv4 = or i8 %3, %4
  %5 = zext i8 %conv4 to i32
  %6 = call ptr @memset(ptr %var, i32 %5, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %7 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_packed_runtime_all(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_packed, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 0, i32 16)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_small_hole_assigned_static_partial(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_small_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = getelementptr inbounds i8, ptr %var, i32 4
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4
  %2 = ptrtoint ptr %var to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %var, align 4
  %.compoundliteral.sroa.2.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 4
  %3 = ptrtoint ptr %.compoundliteral.sroa.2.0.var.sroa_idx to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %.compoundliteral.sroa.2.0.var.sroa_idx, align 4
  %.compoundliteral.sroa.310.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 8
  %4 = ptrtoint ptr %.compoundliteral.sroa.310.0.var.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %.compoundliteral.sroa.310.0.var.sroa_idx, align 4
  %.compoundliteral.sroa.4.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 12
  %5 = ptrtoint ptr %.compoundliteral.sroa.4.0.var.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %.compoundliteral.sroa.4.0.var.sroa_idx, align 4
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %6 = load volatile i8, ptr @forced_mask, align 1
  %7 = trunc i32 %sp to i8
  %conv4 = or i8 %6, %7
  %8 = zext i8 %conv4 to i32
  %9 = call ptr @memset(ptr %var, i32 %8, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %10 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_big_hole_assigned_static_partial(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_big_hole, align 64
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 0, i32 128)
  store ptr %var, ptr @target_start, align 4
  store i32 128, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 128, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 128)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 128)
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_trailing_hole_assigned_static_partial(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_trailing_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = getelementptr inbounds i8, ptr %var, i32 12
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4
  %2 = call ptr @memset(ptr %var, i32 0, i32 13)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %3 = load volatile i8, ptr @forced_mask, align 1
  %4 = trunc i32 %sp to i8
  %conv4 = or i8 %3, %4
  %5 = zext i8 %conv4 to i32
  %6 = call ptr @memset(ptr %var, i32 %5, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %7 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_packed_assigned_static_partial(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_packed, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 0, i32 16)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_small_hole_assigned_static_all(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_small_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = getelementptr inbounds i8, ptr %var, i32 4
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4
  %2 = ptrtoint ptr %var to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %var, align 4
  %.compoundliteral.sroa.2.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 4
  %3 = ptrtoint ptr %.compoundliteral.sroa.2.0.var.sroa_idx to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %.compoundliteral.sroa.2.0.var.sroa_idx, align 4
  %.compoundliteral.sroa.310.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 8
  %4 = ptrtoint ptr %.compoundliteral.sroa.310.0.var.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %.compoundliteral.sroa.310.0.var.sroa_idx, align 4
  %.compoundliteral.sroa.4.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 12
  %5 = ptrtoint ptr %.compoundliteral.sroa.4.0.var.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %.compoundliteral.sroa.4.0.var.sroa_idx, align 4
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %6 = load volatile i8, ptr @forced_mask, align 1
  %7 = trunc i32 %sp to i8
  %conv4 = or i8 %6, %7
  %8 = zext i8 %conv4 to i32
  %9 = call ptr @memset(ptr %var, i32 %8, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %10 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_big_hole_assigned_static_all(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_big_hole, align 64
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 0, i32 128)
  store ptr %var, ptr @target_start, align 4
  store i32 128, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 128, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 128)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 128)
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_trailing_hole_assigned_static_all(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_trailing_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = getelementptr inbounds i8, ptr %var, i32 12
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4
  %2 = call ptr @memset(ptr %var, i32 0, i32 13)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %3 = load volatile i8, ptr @forced_mask, align 1
  %4 = trunc i32 %sp to i8
  %conv4 = or i8 %3, %4
  %5 = zext i8 %conv4 to i32
  %6 = call ptr @memset(ptr %var, i32 %5, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %7 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_packed_assigned_static_all(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_packed, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 0, i32 16)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_small_hole_assigned_dynamic_all(i32 noundef %sp, i1 noundef zeroext %fill, ptr nocapture noundef readonly %arg) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_small_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = getelementptr inbounds i8, ptr %var, i32 4
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4
  %2 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arg, align 4
  %two2 = getelementptr inbounds %struct.test_small_hole, ptr %arg, i32 0, i32 1
  %4 = ptrtoint ptr %two2 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %two2, align 4
  %three3 = getelementptr inbounds %struct.test_small_hole, ptr %arg, i32 0, i32 2
  %6 = ptrtoint ptr %three3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %three3, align 4
  %four4 = getelementptr inbounds %struct.test_small_hole, ptr %arg, i32 0, i32 3
  %8 = ptrtoint ptr %four4 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %four4, align 4
  %10 = ptrtoint ptr %var to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %3, ptr %var, align 4
  %.compoundliteral.sroa.2.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 4
  %11 = ptrtoint ptr %.compoundliteral.sroa.2.0.var.sroa_idx to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %5, ptr %.compoundliteral.sroa.2.0.var.sroa_idx, align 4
  %.compoundliteral.sroa.314.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 8
  %12 = ptrtoint ptr %.compoundliteral.sroa.314.0.var.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %7, ptr %.compoundliteral.sroa.314.0.var.sroa_idx, align 4
  %.compoundliteral.sroa.4.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 12
  %13 = ptrtoint ptr %.compoundliteral.sroa.4.0.var.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %9, ptr %.compoundliteral.sroa.4.0.var.sroa_idx, align 4
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %14 = load volatile i8, ptr @forced_mask, align 1
  %15 = trunc i32 %sp to i8
  %conv8 = or i8 %14, %15
  %16 = zext i8 %conv8 to i32
  %17 = call ptr @memset(ptr %var, i32 %16, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv5 = and i32 %sp, 255
  %18 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv5
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_big_hole_assigned_dynamic_all(i32 noundef %sp, i1 noundef zeroext %fill, ptr nocapture noundef readonly %arg) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_big_hole, align 64
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %var) #12
  %.compoundliteral.sroa.5.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 3
  %0 = call ptr @memset(ptr %.compoundliteral.sroa.5.0.var.sroa_idx, i32 0, i32 61)
  %.compoundliteral.sroa.6.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 65
  %1 = call ptr @memset(ptr %.compoundliteral.sroa.6.0.var.sroa_idx, i32 0, i32 63)
  %2 = ptrtoint ptr %arg to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arg, align 64
  %two2 = getelementptr inbounds %struct.test_big_hole, ptr %arg, i32 0, i32 1
  %4 = ptrtoint ptr %two2 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %two2, align 1
  %three3 = getelementptr inbounds %struct.test_big_hole, ptr %arg, i32 0, i32 2
  %6 = ptrtoint ptr %three3 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %three3, align 2
  %four4 = getelementptr inbounds %struct.test_big_hole, ptr %arg, i32 0, i32 4
  %8 = ptrtoint ptr %four4 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %four4, align 64
  %10 = ptrtoint ptr %var to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 %3, ptr %var, align 64
  %.compoundliteral.sroa.3.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 1
  %11 = ptrtoint ptr %.compoundliteral.sroa.3.0.var.sroa_idx to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %5, ptr %.compoundliteral.sroa.3.0.var.sroa_idx, align 1
  %.compoundliteral.sroa.4.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 2
  %12 = ptrtoint ptr %.compoundliteral.sroa.4.0.var.sroa_idx to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %7, ptr %.compoundliteral.sroa.4.0.var.sroa_idx, align 2
  %.compoundliteral.sroa.514.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 64
  %13 = ptrtoint ptr %.compoundliteral.sroa.514.0.var.sroa_idx to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 %9, ptr %.compoundliteral.sroa.514.0.var.sroa_idx, align 64
  store ptr %var, ptr @target_start, align 4
  store i32 128, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 128, ptr @fill_size, align 4
  %14 = load volatile i8, ptr @forced_mask, align 1
  %15 = trunc i32 %sp to i8
  %conv8 = or i8 %14, %15
  %16 = zext i8 %conv8 to i32
  %17 = call ptr @memset(ptr %var, i32 %16, i32 128)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv5 = and i32 %sp, 255
  %18 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 128)
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %var) #12
  ret i32 %conv5
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_trailing_hole_assigned_dynamic_all(i32 noundef %sp, i1 noundef zeroext %fill, ptr nocapture noundef readonly %arg) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_trailing_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = getelementptr inbounds i8, ptr %var, i32 12
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4
  %2 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arg, align 4
  %two2 = getelementptr inbounds %struct.test_trailing_hole, ptr %arg, i32 0, i32 1
  %4 = ptrtoint ptr %two2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %two2, align 4
  %three3 = getelementptr inbounds %struct.test_trailing_hole, ptr %arg, i32 0, i32 2
  %6 = ptrtoint ptr %three3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %three3, align 4
  %four4 = getelementptr inbounds %struct.test_trailing_hole, ptr %arg, i32 0, i32 3
  %8 = ptrtoint ptr %four4 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %four4, align 4
  %10 = ptrtoint ptr %var to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %3, ptr %var, align 4
  %.compoundliteral.sroa.2.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 4
  %11 = ptrtoint ptr %.compoundliteral.sroa.2.0.var.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %5, ptr %.compoundliteral.sroa.2.0.var.sroa_idx, align 4
  %.compoundliteral.sroa.3.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 8
  %12 = ptrtoint ptr %.compoundliteral.sroa.3.0.var.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %7, ptr %.compoundliteral.sroa.3.0.var.sroa_idx, align 4
  %.compoundliteral.sroa.4.0.var.sroa_idx = getelementptr inbounds i8, ptr %var, i32 12
  %13 = ptrtoint ptr %.compoundliteral.sroa.4.0.var.sroa_idx to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 %9, ptr %.compoundliteral.sroa.4.0.var.sroa_idx, align 4
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %14 = load volatile i8, ptr @forced_mask, align 1
  %15 = trunc i32 %sp to i8
  %conv8 = or i8 %14, %15
  %16 = zext i8 %conv8 to i32
  %17 = call ptr @memset(ptr %var, i32 %16, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv5 = and i32 %sp, 255
  %18 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv5
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_packed_assigned_dynamic_all(i32 noundef %sp, i1 noundef zeroext %fill, ptr nocapture noundef readonly %arg) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_packed, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = getelementptr inbounds %struct.test_packed, ptr %var, i32 0, i32 1
  %1 = getelementptr inbounds %struct.test_packed, ptr %var, i32 0, i32 2
  %2 = getelementptr inbounds %struct.test_packed, ptr %var, i32 0, i32 3
  %3 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %arg, align 4
  %two2 = getelementptr inbounds %struct.test_packed, ptr %arg, i32 0, i32 1
  %5 = ptrtoint ptr %two2 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %two2, align 4
  %three3 = getelementptr inbounds %struct.test_packed, ptr %arg, i32 0, i32 2
  %7 = ptrtoint ptr %three3 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %three3, align 4
  %four4 = getelementptr inbounds %struct.test_packed, ptr %arg, i32 0, i32 3
  %9 = ptrtoint ptr %four4 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %four4, align 4
  %11 = ptrtoint ptr %var to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %4, ptr %var, align 4
  %12 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %6, ptr %0, align 4
  %13 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %8, ptr %1, align 4
  %14 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %10, ptr %2, align 4
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %15 = load volatile i8, ptr @forced_mask, align 1
  %16 = trunc i32 %sp to i8
  %conv8 = or i8 %15, %16
  %17 = zext i8 %conv8 to i32
  %18 = call ptr @memset(ptr %var, i32 %17, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv5 = and i32 %sp, 255
  %19 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv5
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_small_hole_assigned_copy(i32 noundef %sp, i1 noundef zeroext %fill, ptr nocapture noundef readonly %arg) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_small_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memcpy(ptr %var, ptr %arg, i32 16)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_big_hole_assigned_copy(i32 noundef %sp, i1 noundef zeroext %fill, ptr nocapture noundef readonly %arg) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_big_hole, align 64
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %var) #12
  %0 = call ptr @memcpy(ptr %var, ptr %arg, i32 128)
  store ptr %var, ptr @target_start, align 4
  store i32 128, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 128, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 128)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 128)
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_trailing_hole_assigned_copy(i32 noundef %sp, i1 noundef zeroext %fill, ptr nocapture noundef readonly %arg) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_trailing_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memcpy(ptr %var, ptr %arg, i32 16)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_packed_assigned_copy(i32 noundef %sp, i1 noundef zeroext %fill, ptr nocapture noundef readonly %arg) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_packed, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memcpy(ptr %var, ptr %arg, i32 16)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_u8_none(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %var) #12
  %0 = ptrtoint ptr %var to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %var, align 1, !annotation !1287
  store ptr %var, ptr @target_start, align 4
  store i32 1, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 1, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %call = call fastcc zeroext i8 @do_nothing_u8_none(ptr noundef nonnull %var) #10
  store i8 %call, ptr @check_buf, align 8
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline norecurse nosync nounwind null_pointer_is_valid optsize readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc zeroext i8 @do_nothing_u8_none(ptr noundef readonly %ptr) unnamed_addr #6 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #9
  %cmp = icmp ule ptr %ptr, inttoptr (i32 2 to ptr)
  %retval.0.in.idx = zext i1 %cmp to i32
  %retval.0.in = getelementptr i8, ptr %ptr, i32 %retval.0.in.idx
  %0 = ptrtoint ptr %retval.0.in to i32
  call void @__asan_load1_noabort(i32 %0)
  %retval.0 = load i8, ptr %retval.0.in, align 1
  ret i8 %retval.0
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_u16_none(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %var) #12
  %0 = ptrtoint ptr %var to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %var, align 2, !annotation !1287
  store ptr %var, ptr @target_start, align 4
  store i32 2, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 2, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %call = call fastcc zeroext i16 @do_nothing_u16_none(ptr noundef nonnull %var) #10
  store i16 %call, ptr @check_buf, align 8
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline norecurse nosync nounwind null_pointer_is_valid optsize readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc zeroext i16 @do_nothing_u16_none(ptr noundef readonly %ptr) unnamed_addr #6 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #9
  %cmp = icmp ule ptr %ptr, inttoptr (i32 2 to ptr)
  %retval.0.in.idx = zext i1 %cmp to i32
  %retval.0.in = getelementptr i16, ptr %ptr, i32 %retval.0.in.idx
  %0 = ptrtoint ptr %retval.0.in to i32
  call void @__asan_load2_noabort(i32 %0)
  %retval.0 = load i16, ptr %retval.0.in, align 2
  ret i16 %retval.0
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_u32_none(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %var) #12
  %0 = ptrtoint ptr %var to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %var, align 4, !annotation !1287
  store ptr %var, ptr @target_start, align 4
  store i32 4, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 4, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 4)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %call = call fastcc i32 @do_nothing_u32_none(ptr noundef nonnull %var) #10
  store i32 %call, ptr @check_buf, align 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline norecurse nosync nounwind null_pointer_is_valid optsize readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @do_nothing_u32_none(ptr noundef readonly %ptr) unnamed_addr #6 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #9
  %cmp = icmp ule ptr %ptr, inttoptr (i32 2 to ptr)
  %retval.0.in.idx = zext i1 %cmp to i32
  %retval.0.in = getelementptr i32, ptr %ptr, i32 %retval.0.in.idx
  %0 = ptrtoint ptr %retval.0.in to i32
  call void @__asan_load4_noabort(i32 %0)
  %retval.0 = load i32, ptr %retval.0.in, align 4
  ret i32 %retval.0
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_u64_none(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %var) #12
  %0 = ptrtoint ptr %var to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %var, align 8, !annotation !1287
  store ptr %var, ptr @target_start, align 4
  store i32 8, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 8, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 8)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %call = call fastcc i64 @do_nothing_u64_none(ptr noundef nonnull %var) #10
  store i64 %call, ptr @check_buf, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline norecurse nosync nounwind null_pointer_is_valid optsize readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i64 @do_nothing_u64_none(ptr noundef readonly %ptr) unnamed_addr #6 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #9
  %cmp = icmp ule ptr %ptr, inttoptr (i32 2 to ptr)
  %retval.0.in.idx = zext i1 %cmp to i32
  %retval.0.in = getelementptr i64, ptr %ptr, i32 %retval.0.in.idx
  %0 = ptrtoint ptr %retval.0.in to i32
  call void @__asan_load8_noabort(i32 %0)
  %retval.0 = load i64, ptr %retval.0.in, align 8
  ret i64 %retval.0
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_char_array_none(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca [16 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 255, i32 16)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_switch_1_none(i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #9
  %call = tail call fastcc i32 @__leaf_switch_none(i32 noundef 1, i1 noundef zeroext %fill)
  ret i32 %call
}

; Function Attrs: mustprogress nofree noinline nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @__leaf_switch_none(i32 noundef %path, i1 noundef zeroext %fill) unnamed_addr #7 align 64 {
entry:
  %var = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #9
  %0 = zext i32 %path to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values)
  switch i32 %path, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
  ]

sw.bb:                                            ; preds = %entry
  store ptr %var, ptr @target_start, align 4
  store i32 8, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %sw.bb.if.end_crit_edge

sw.bb.if.end_crit_edge:                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 8, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = or i8 %1, 85
  %3 = zext i8 %2 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 8)
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.bb.if.end_crit_edge
  %5 = ptrtoint ptr %var to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %var, align 8
  store i64 %6, ptr @check_buf, align 8
  br label %return

sw.bb1:                                           ; preds = %entry
  store ptr %var, ptr @target_start, align 4
  store i32 8, ptr @target_size, align 4
  br i1 %fill, label %if.then3, label %sw.bb1.if.end6_crit_edge

sw.bb1.if.end6_crit_edge:                         ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end6

if.then3:                                         ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 8, ptr @fill_size, align 4
  %7 = load volatile i8, ptr @forced_mask, align 1
  %8 = or i8 %7, -86
  %9 = zext i8 %8 to i32
  %10 = call ptr @memset(ptr %var, i32 %9, i32 8)
  br label %if.end6

if.end6:                                          ; preds = %if.then3, %sw.bb1.if.end6_crit_edge
  %11 = ptrtoint ptr %var to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %var, align 8
  store i64 %12, ptr @check_buf, align 8
  br label %return

sw.default:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  %13 = ptrtoint ptr %var to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 5, ptr %var, align 8
  %14 = load volatile i8, ptr @forced_mask, align 1
  %15 = and i8 %14, 5
  %conv8 = zext i8 %15 to i32
  br label %return

return:                                           ; preds = %sw.default, %if.end6, %if.end
  %retval.0 = phi i32 [ %conv8, %sw.default ], [ 0, %if.end6 ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_switch_2_none(i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #9
  %call = tail call fastcc i32 @__leaf_switch_none(i32 noundef 2, i1 noundef zeroext %fill)
  ret i32 %call
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_small_hole_none(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_small_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 255, i32 16)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_big_hole_none(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_big_hole, align 64
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 255, i32 128)
  store ptr %var, ptr @target_start, align 4
  store i32 128, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 128, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 128)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 128)
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_trailing_hole_none(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_trailing_hole, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 255, i32 16)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_packed_none(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_packed, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 255, i32 16)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

; Function Attrs: cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @leaf_user(i32 noundef %sp, i1 noundef zeroext %fill) unnamed_addr #5 section ".init.text" align 64 {
entry:
  %var = alloca %struct.test_user, align 4
  call void @__sanitizer_cov_trace_pc() #9
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %var) #12
  %0 = call ptr @memset(ptr %var, i32 255, i32 16)
  store ptr %var, ptr @target_start, align 4
  store i32 16, ptr @target_size, align 4
  br i1 %fill, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #9
  store ptr %var, ptr @fill_start, align 4
  store i32 16, ptr @fill_size, align 4
  %1 = load volatile i8, ptr @forced_mask, align 1
  %2 = trunc i32 %sp to i8
  %conv4 = or i8 %1, %2
  %3 = zext i8 %conv4 to i32
  %4 = call ptr @memset(ptr %var, i32 %3, i32 16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %conv1 = and i32 %sp, 255
  %5 = call ptr @memcpy(ptr @check_buf, ptr %var, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %var) #12
  ret i32 %conv1
}

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #8 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 859)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #8 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 859)
  ret void
}

attributes #0 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #2 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #3 = { cold noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { cold null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { cold mustprogress nofree noinline nounwind null_pointer_is_valid optsize sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { cold mustprogress nofree noinline norecurse nosync nounwind null_pointer_is_valid optsize readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { mustprogress nofree noinline nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { nounwind uwtable(sync) }
attributes #9 = { nomerge }
attributes #10 = { cold }
attributes #11 = { cold nounwind }
attributes #12 = { nounwind }

!llvm.asan.globals = !{!0, !2, !4, !6, !7, !9, !10, !11, !12, !13, !15, !16, !17, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !40, !42, !44, !46, !48, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278}
!llvm.module.flags = !{!1279, !1280, !1281, !1282, !1283, !1284, !1285}
!llvm.ident = !{!1286}

!0 = !{ptr @__initcall__kmod_test_stackinit__171_508_test_stackinit_init6, !1, !"__initcall__kmod_test_stackinit__171_508_test_stackinit_init6", i1 false, i1 false}
!1 = !{!"../lib/test_stackinit.c", i32 508, i32 1}
!2 = !{ptr @__exitcall_test_stackinit_exit, !3, !"__exitcall_test_stackinit_exit", i1 false, i1 false}
!3 = !{!"../lib/test_stackinit.c", i32 512, i32 1}
!4 = !{ptr @__UNIQUE_ID_file172, !5, !"__UNIQUE_ID_file172", i1 false, i1 false}
!5 = !{!"../lib/test_stackinit.c", i32 514, i32 1}
!6 = !{ptr @__UNIQUE_ID_license173, !5, !"__UNIQUE_ID_license173", i1 false, i1 false}
!7 = !{ptr @.str, !8, !"<string literal>", i1 false, i1 false}
!8 = !{!"../lib/test_stackinit.c", i32 502, i32 3}
!9 = !{ptr @.str.1, !8, !"<string literal>", i1 false, i1 false}
!10 = !{ptr @.str.2, !8, !"<string literal>", i1 false, i1 false}
!11 = !{ptr @test_stackinit_init._entry, !8, !"_entry", i1 false, i1 false}
!12 = !{ptr @test_stackinit_init._entry_ptr, !8, !"_entry_ptr", i1 false, i1 false}
!13 = !{ptr @.str.4, !14, !"<string literal>", i1 false, i1 false}
!14 = !{!"../lib/test_stackinit.c", i32 504, i32 3}
!15 = !{ptr @test_stackinit_init._entry.3, !14, !"_entry", i1 false, i1 false}
!16 = !{ptr @test_stackinit_init._entry_ptr.5, !14, !"_entry_ptr", i1 false, i1 false}
!17 = !{ptr @.str.6, !18, !"<string literal>", i1 false, i1 false}
!18 = !{!"../lib/test_stackinit.c", i32 374, i32 1}
!19 = !{ptr @.str.7, !18, !"<string literal>", i1 false, i1 false}
!20 = !{ptr @test_u8_zero._entry, !18, !"_entry", i1 false, i1 false}
!21 = !{ptr @test_u8_zero._entry_ptr, !18, !"_entry_ptr", i1 false, i1 false}
!22 = !{ptr @.str.9, !18, !"<string literal>", i1 false, i1 false}
!23 = !{ptr @test_u8_zero._entry.8, !18, !"_entry", i1 false, i1 false}
!24 = !{ptr @test_u8_zero._entry_ptr.10, !18, !"_entry_ptr", i1 false, i1 false}
!25 = !{ptr @.str.12, !18, !"<string literal>", i1 false, i1 false}
!26 = !{ptr @test_u8_zero._entry.11, !18, !"_entry", i1 false, i1 false}
!27 = !{ptr @test_u8_zero._entry_ptr.13, !18, !"_entry_ptr", i1 false, i1 false}
!28 = !{ptr @.str.15, !18, !"<string literal>", i1 false, i1 false}
!29 = !{ptr @test_u8_zero._entry.14, !18, !"_entry", i1 false, i1 false}
!30 = !{ptr @test_u8_zero._entry_ptr.16, !18, !"_entry_ptr", i1 false, i1 false}
!31 = !{ptr @.str.18, !18, !"<string literal>", i1 false, i1 false}
!32 = !{ptr @test_u8_zero._entry.17, !18, !"_entry", i1 false, i1 false}
!33 = !{ptr @test_u8_zero._entry_ptr.19, !18, !"_entry_ptr", i1 false, i1 false}
!34 = !{ptr @.str.21, !18, !"<string literal>", i1 false, i1 false}
!35 = !{ptr @test_u8_zero._entry.20, !18, !"_entry", i1 false, i1 false}
!36 = !{ptr @test_u8_zero._entry_ptr.22, !18, !"_entry_ptr", i1 false, i1 false}
!37 = !{ptr @.str.23, !18, !"<string literal>", i1 false, i1 false}
!38 = !{ptr @check_buf, !39, !"check_buf", i1 false, i1 false}
!39 = !{!"../lib/test_stackinit.c", i32 77, i32 11}
!40 = !{ptr @forced_mask, !41, !"forced_mask", i1 false, i1 false}
!41 = !{!"../lib/test_stackinit.c", i32 83, i32 20}
!42 = !{ptr @target_size, !43, !"target_size", i1 false, i1 false}
!43 = !{!"../lib/test_stackinit.c", i32 87, i32 26}
!44 = !{ptr @fill_start, !45, !"fill_start", i1 false, i1 false}
!45 = !{!"../lib/test_stackinit.c", i32 86, i32 14}
!46 = !{ptr @fill_size, !47, !"fill_size", i1 false, i1 false}
!47 = !{!"../lib/test_stackinit.c", i32 87, i32 15}
!48 = !{ptr @target_start, !49, !"target_start", i1 false, i1 false}
!49 = !{!"../lib/test_stackinit.c", i32 86, i32 27}
!50 = !{ptr @.str.24, !18, !"<string literal>", i1 false, i1 false}
!51 = !{ptr @.str.25, !18, !"<string literal>", i1 false, i1 false}
!52 = !{ptr @test_u16_zero._entry, !18, !"_entry", i1 false, i1 false}
!53 = !{ptr @test_u16_zero._entry_ptr, !18, !"_entry_ptr", i1 false, i1 false}
!54 = !{ptr @.str.27, !18, !"<string literal>", i1 false, i1 false}
!55 = !{ptr @test_u16_zero._entry.26, !18, !"_entry", i1 false, i1 false}
!56 = !{ptr @test_u16_zero._entry_ptr.28, !18, !"_entry_ptr", i1 false, i1 false}
!57 = !{ptr @.str.30, !18, !"<string literal>", i1 false, i1 false}
!58 = !{ptr @test_u16_zero._entry.29, !18, !"_entry", i1 false, i1 false}
!59 = !{ptr @test_u16_zero._entry_ptr.31, !18, !"_entry_ptr", i1 false, i1 false}
!60 = !{ptr @.str.33, !18, !"<string literal>", i1 false, i1 false}
!61 = !{ptr @test_u16_zero._entry.32, !18, !"_entry", i1 false, i1 false}
!62 = !{ptr @test_u16_zero._entry_ptr.34, !18, !"_entry_ptr", i1 false, i1 false}
!63 = !{ptr @.str.36, !18, !"<string literal>", i1 false, i1 false}
!64 = !{ptr @test_u16_zero._entry.35, !18, !"_entry", i1 false, i1 false}
!65 = !{ptr @test_u16_zero._entry_ptr.37, !18, !"_entry_ptr", i1 false, i1 false}
!66 = !{ptr @.str.39, !18, !"<string literal>", i1 false, i1 false}
!67 = !{ptr @test_u16_zero._entry.38, !18, !"_entry", i1 false, i1 false}
!68 = !{ptr @test_u16_zero._entry_ptr.40, !18, !"_entry_ptr", i1 false, i1 false}
!69 = !{ptr @.str.41, !18, !"<string literal>", i1 false, i1 false}
!70 = !{ptr @.str.42, !18, !"<string literal>", i1 false, i1 false}
!71 = !{ptr @test_u32_zero._entry, !18, !"_entry", i1 false, i1 false}
!72 = !{ptr @test_u32_zero._entry_ptr, !18, !"_entry_ptr", i1 false, i1 false}
!73 = !{ptr @.str.44, !18, !"<string literal>", i1 false, i1 false}
!74 = !{ptr @test_u32_zero._entry.43, !18, !"_entry", i1 false, i1 false}
!75 = !{ptr @test_u32_zero._entry_ptr.45, !18, !"_entry_ptr", i1 false, i1 false}
!76 = !{ptr @.str.47, !18, !"<string literal>", i1 false, i1 false}
!77 = !{ptr @test_u32_zero._entry.46, !18, !"_entry", i1 false, i1 false}
!78 = !{ptr @test_u32_zero._entry_ptr.48, !18, !"_entry_ptr", i1 false, i1 false}
!79 = !{ptr @.str.50, !18, !"<string literal>", i1 false, i1 false}
!80 = !{ptr @test_u32_zero._entry.49, !18, !"_entry", i1 false, i1 false}
!81 = !{ptr @test_u32_zero._entry_ptr.51, !18, !"_entry_ptr", i1 false, i1 false}
!82 = !{ptr @.str.53, !18, !"<string literal>", i1 false, i1 false}
!83 = !{ptr @test_u32_zero._entry.52, !18, !"_entry", i1 false, i1 false}
!84 = !{ptr @test_u32_zero._entry_ptr.54, !18, !"_entry_ptr", i1 false, i1 false}
!85 = !{ptr @.str.56, !18, !"<string literal>", i1 false, i1 false}
!86 = !{ptr @test_u32_zero._entry.55, !18, !"_entry", i1 false, i1 false}
!87 = !{ptr @test_u32_zero._entry_ptr.57, !18, !"_entry_ptr", i1 false, i1 false}
!88 = !{ptr @.str.58, !18, !"<string literal>", i1 false, i1 false}
!89 = !{ptr @.str.59, !18, !"<string literal>", i1 false, i1 false}
!90 = !{ptr @test_u64_zero._entry, !18, !"_entry", i1 false, i1 false}
!91 = !{ptr @test_u64_zero._entry_ptr, !18, !"_entry_ptr", i1 false, i1 false}
!92 = !{ptr @.str.61, !18, !"<string literal>", i1 false, i1 false}
!93 = !{ptr @test_u64_zero._entry.60, !18, !"_entry", i1 false, i1 false}
!94 = !{ptr @test_u64_zero._entry_ptr.62, !18, !"_entry_ptr", i1 false, i1 false}
!95 = !{ptr @.str.64, !18, !"<string literal>", i1 false, i1 false}
!96 = !{ptr @test_u64_zero._entry.63, !18, !"_entry", i1 false, i1 false}
!97 = !{ptr @test_u64_zero._entry_ptr.65, !18, !"_entry_ptr", i1 false, i1 false}
!98 = !{ptr @.str.67, !18, !"<string literal>", i1 false, i1 false}
!99 = !{ptr @test_u64_zero._entry.66, !18, !"_entry", i1 false, i1 false}
!100 = !{ptr @test_u64_zero._entry_ptr.68, !18, !"_entry_ptr", i1 false, i1 false}
!101 = !{ptr @.str.70, !18, !"<string literal>", i1 false, i1 false}
!102 = !{ptr @test_u64_zero._entry.69, !18, !"_entry", i1 false, i1 false}
!103 = !{ptr @test_u64_zero._entry_ptr.71, !18, !"_entry_ptr", i1 false, i1 false}
!104 = !{ptr @.str.73, !18, !"<string literal>", i1 false, i1 false}
!105 = !{ptr @test_u64_zero._entry.72, !18, !"_entry", i1 false, i1 false}
!106 = !{ptr @test_u64_zero._entry_ptr.74, !18, !"_entry_ptr", i1 false, i1 false}
!107 = !{ptr @.str.75, !18, !"<string literal>", i1 false, i1 false}
!108 = !{ptr @.str.76, !18, !"<string literal>", i1 false, i1 false}
!109 = !{ptr @test_char_array_zero._entry, !18, !"_entry", i1 false, i1 false}
!110 = !{ptr @test_char_array_zero._entry_ptr, !18, !"_entry_ptr", i1 false, i1 false}
!111 = !{ptr @.str.78, !18, !"<string literal>", i1 false, i1 false}
!112 = !{ptr @test_char_array_zero._entry.77, !18, !"_entry", i1 false, i1 false}
!113 = !{ptr @test_char_array_zero._entry_ptr.79, !18, !"_entry_ptr", i1 false, i1 false}
!114 = !{ptr @.str.81, !18, !"<string literal>", i1 false, i1 false}
!115 = !{ptr @test_char_array_zero._entry.80, !18, !"_entry", i1 false, i1 false}
!116 = !{ptr @test_char_array_zero._entry_ptr.82, !18, !"_entry_ptr", i1 false, i1 false}
!117 = !{ptr @.str.84, !18, !"<string literal>", i1 false, i1 false}
!118 = !{ptr @test_char_array_zero._entry.83, !18, !"_entry", i1 false, i1 false}
!119 = !{ptr @test_char_array_zero._entry_ptr.85, !18, !"_entry_ptr", i1 false, i1 false}
!120 = !{ptr @.str.87, !18, !"<string literal>", i1 false, i1 false}
!121 = !{ptr @test_char_array_zero._entry.86, !18, !"_entry", i1 false, i1 false}
!122 = !{ptr @test_char_array_zero._entry_ptr.88, !18, !"_entry_ptr", i1 false, i1 false}
!123 = !{ptr @.str.90, !18, !"<string literal>", i1 false, i1 false}
!124 = !{ptr @test_char_array_zero._entry.89, !18, !"_entry", i1 false, i1 false}
!125 = !{ptr @test_char_array_zero._entry_ptr.91, !18, !"_entry_ptr", i1 false, i1 false}
!126 = !{ptr @.str.92, !127, !"<string literal>", i1 false, i1 false}
!127 = !{!"../lib/test_stackinit.c", i32 375, i32 1}
!128 = !{ptr @.str.93, !127, !"<string literal>", i1 false, i1 false}
!129 = !{ptr @test_small_hole_zero._entry, !127, !"_entry", i1 false, i1 false}
!130 = !{ptr @test_small_hole_zero._entry_ptr, !127, !"_entry_ptr", i1 false, i1 false}
!131 = !{ptr @.str.95, !127, !"<string literal>", i1 false, i1 false}
!132 = !{ptr @test_small_hole_zero._entry.94, !127, !"_entry", i1 false, i1 false}
!133 = !{ptr @test_small_hole_zero._entry_ptr.96, !127, !"_entry_ptr", i1 false, i1 false}
!134 = !{ptr @.str.98, !127, !"<string literal>", i1 false, i1 false}
!135 = !{ptr @test_small_hole_zero._entry.97, !127, !"_entry", i1 false, i1 false}
!136 = !{ptr @test_small_hole_zero._entry_ptr.99, !127, !"_entry_ptr", i1 false, i1 false}
!137 = !{ptr @.str.101, !127, !"<string literal>", i1 false, i1 false}
!138 = !{ptr @test_small_hole_zero._entry.100, !127, !"_entry", i1 false, i1 false}
!139 = !{ptr @test_small_hole_zero._entry_ptr.102, !127, !"_entry_ptr", i1 false, i1 false}
!140 = !{ptr @.str.104, !127, !"<string literal>", i1 false, i1 false}
!141 = !{ptr @test_small_hole_zero._entry.103, !127, !"_entry", i1 false, i1 false}
!142 = !{ptr @test_small_hole_zero._entry_ptr.105, !127, !"_entry_ptr", i1 false, i1 false}
!143 = !{ptr @.str.107, !127, !"<string literal>", i1 false, i1 false}
!144 = !{ptr @test_small_hole_zero._entry.106, !127, !"_entry", i1 false, i1 false}
!145 = !{ptr @test_small_hole_zero._entry_ptr.108, !127, !"_entry_ptr", i1 false, i1 false}
!146 = !{ptr @.str.109, !127, !"<string literal>", i1 false, i1 false}
!147 = !{ptr @.str.110, !127, !"<string literal>", i1 false, i1 false}
!148 = !{ptr @test_big_hole_zero._entry, !127, !"_entry", i1 false, i1 false}
!149 = !{ptr @test_big_hole_zero._entry_ptr, !127, !"_entry_ptr", i1 false, i1 false}
!150 = !{ptr @.str.112, !127, !"<string literal>", i1 false, i1 false}
!151 = !{ptr @test_big_hole_zero._entry.111, !127, !"_entry", i1 false, i1 false}
!152 = !{ptr @test_big_hole_zero._entry_ptr.113, !127, !"_entry_ptr", i1 false, i1 false}
!153 = !{ptr @.str.115, !127, !"<string literal>", i1 false, i1 false}
!154 = !{ptr @test_big_hole_zero._entry.114, !127, !"_entry", i1 false, i1 false}
!155 = !{ptr @test_big_hole_zero._entry_ptr.116, !127, !"_entry_ptr", i1 false, i1 false}
!156 = !{ptr @.str.118, !127, !"<string literal>", i1 false, i1 false}
!157 = !{ptr @test_big_hole_zero._entry.117, !127, !"_entry", i1 false, i1 false}
!158 = !{ptr @test_big_hole_zero._entry_ptr.119, !127, !"_entry_ptr", i1 false, i1 false}
!159 = !{ptr @.str.121, !127, !"<string literal>", i1 false, i1 false}
!160 = !{ptr @test_big_hole_zero._entry.120, !127, !"_entry", i1 false, i1 false}
!161 = !{ptr @test_big_hole_zero._entry_ptr.122, !127, !"_entry_ptr", i1 false, i1 false}
!162 = !{ptr @.str.124, !127, !"<string literal>", i1 false, i1 false}
!163 = !{ptr @test_big_hole_zero._entry.123, !127, !"_entry", i1 false, i1 false}
!164 = !{ptr @test_big_hole_zero._entry_ptr.125, !127, !"_entry_ptr", i1 false, i1 false}
!165 = !{ptr @.str.126, !127, !"<string literal>", i1 false, i1 false}
!166 = !{ptr @.str.127, !127, !"<string literal>", i1 false, i1 false}
!167 = !{ptr @test_trailing_hole_zero._entry, !127, !"_entry", i1 false, i1 false}
!168 = !{ptr @test_trailing_hole_zero._entry_ptr, !127, !"_entry_ptr", i1 false, i1 false}
!169 = !{ptr @.str.129, !127, !"<string literal>", i1 false, i1 false}
!170 = !{ptr @test_trailing_hole_zero._entry.128, !127, !"_entry", i1 false, i1 false}
!171 = !{ptr @test_trailing_hole_zero._entry_ptr.130, !127, !"_entry_ptr", i1 false, i1 false}
!172 = !{ptr @.str.132, !127, !"<string literal>", i1 false, i1 false}
!173 = !{ptr @test_trailing_hole_zero._entry.131, !127, !"_entry", i1 false, i1 false}
!174 = !{ptr @test_trailing_hole_zero._entry_ptr.133, !127, !"_entry_ptr", i1 false, i1 false}
!175 = !{ptr @.str.135, !127, !"<string literal>", i1 false, i1 false}
!176 = !{ptr @test_trailing_hole_zero._entry.134, !127, !"_entry", i1 false, i1 false}
!177 = !{ptr @test_trailing_hole_zero._entry_ptr.136, !127, !"_entry_ptr", i1 false, i1 false}
!178 = !{ptr @.str.138, !127, !"<string literal>", i1 false, i1 false}
!179 = !{ptr @test_trailing_hole_zero._entry.137, !127, !"_entry", i1 false, i1 false}
!180 = !{ptr @test_trailing_hole_zero._entry_ptr.139, !127, !"_entry_ptr", i1 false, i1 false}
!181 = !{ptr @.str.141, !127, !"<string literal>", i1 false, i1 false}
!182 = !{ptr @test_trailing_hole_zero._entry.140, !127, !"_entry", i1 false, i1 false}
!183 = !{ptr @test_trailing_hole_zero._entry_ptr.142, !127, !"_entry_ptr", i1 false, i1 false}
!184 = !{ptr @.str.143, !127, !"<string literal>", i1 false, i1 false}
!185 = !{ptr @.str.144, !127, !"<string literal>", i1 false, i1 false}
!186 = !{ptr @test_packed_zero._entry, !127, !"_entry", i1 false, i1 false}
!187 = !{ptr @test_packed_zero._entry_ptr, !127, !"_entry_ptr", i1 false, i1 false}
!188 = !{ptr @.str.146, !127, !"<string literal>", i1 false, i1 false}
!189 = !{ptr @test_packed_zero._entry.145, !127, !"_entry", i1 false, i1 false}
!190 = !{ptr @test_packed_zero._entry_ptr.147, !127, !"_entry_ptr", i1 false, i1 false}
!191 = !{ptr @.str.149, !127, !"<string literal>", i1 false, i1 false}
!192 = !{ptr @test_packed_zero._entry.148, !127, !"_entry", i1 false, i1 false}
!193 = !{ptr @test_packed_zero._entry_ptr.150, !127, !"_entry_ptr", i1 false, i1 false}
!194 = !{ptr @.str.152, !127, !"<string literal>", i1 false, i1 false}
!195 = !{ptr @test_packed_zero._entry.151, !127, !"_entry", i1 false, i1 false}
!196 = !{ptr @test_packed_zero._entry_ptr.153, !127, !"_entry_ptr", i1 false, i1 false}
!197 = !{ptr @.str.155, !127, !"<string literal>", i1 false, i1 false}
!198 = !{ptr @test_packed_zero._entry.154, !127, !"_entry", i1 false, i1 false}
!199 = !{ptr @test_packed_zero._entry_ptr.156, !127, !"_entry_ptr", i1 false, i1 false}
!200 = !{ptr @.str.158, !127, !"<string literal>", i1 false, i1 false}
!201 = !{ptr @test_packed_zero._entry.157, !127, !"_entry", i1 false, i1 false}
!202 = !{ptr @test_packed_zero._entry_ptr.159, !127, !"_entry_ptr", i1 false, i1 false}
!203 = !{ptr @.str.160, !204, !"<string literal>", i1 false, i1 false}
!204 = !{!"../lib/test_stackinit.c", i32 378, i32 1}
!205 = !{ptr @.str.161, !204, !"<string literal>", i1 false, i1 false}
!206 = !{ptr @test_small_hole_dynamic_partial._entry, !204, !"_entry", i1 false, i1 false}
!207 = !{ptr @test_small_hole_dynamic_partial._entry_ptr, !204, !"_entry_ptr", i1 false, i1 false}
!208 = !{ptr @.str.163, !204, !"<string literal>", i1 false, i1 false}
!209 = !{ptr @test_small_hole_dynamic_partial._entry.162, !204, !"_entry", i1 false, i1 false}
!210 = !{ptr @test_small_hole_dynamic_partial._entry_ptr.164, !204, !"_entry_ptr", i1 false, i1 false}
!211 = !{ptr @.str.166, !204, !"<string literal>", i1 false, i1 false}
!212 = !{ptr @test_small_hole_dynamic_partial._entry.165, !204, !"_entry", i1 false, i1 false}
!213 = !{ptr @test_small_hole_dynamic_partial._entry_ptr.167, !204, !"_entry_ptr", i1 false, i1 false}
!214 = !{ptr @.str.169, !204, !"<string literal>", i1 false, i1 false}
!215 = !{ptr @test_small_hole_dynamic_partial._entry.168, !204, !"_entry", i1 false, i1 false}
!216 = !{ptr @test_small_hole_dynamic_partial._entry_ptr.170, !204, !"_entry_ptr", i1 false, i1 false}
!217 = !{ptr @.str.172, !204, !"<string literal>", i1 false, i1 false}
!218 = !{ptr @test_small_hole_dynamic_partial._entry.171, !204, !"_entry", i1 false, i1 false}
!219 = !{ptr @test_small_hole_dynamic_partial._entry_ptr.173, !204, !"_entry_ptr", i1 false, i1 false}
!220 = !{ptr @.str.175, !204, !"<string literal>", i1 false, i1 false}
!221 = !{ptr @test_small_hole_dynamic_partial._entry.174, !204, !"_entry", i1 false, i1 false}
!222 = !{ptr @test_small_hole_dynamic_partial._entry_ptr.176, !204, !"_entry_ptr", i1 false, i1 false}
!223 = !{ptr @.str.177, !204, !"<string literal>", i1 false, i1 false}
!224 = !{ptr @.str.178, !204, !"<string literal>", i1 false, i1 false}
!225 = !{ptr @test_big_hole_dynamic_partial._entry, !204, !"_entry", i1 false, i1 false}
!226 = !{ptr @test_big_hole_dynamic_partial._entry_ptr, !204, !"_entry_ptr", i1 false, i1 false}
!227 = !{ptr @.str.180, !204, !"<string literal>", i1 false, i1 false}
!228 = !{ptr @test_big_hole_dynamic_partial._entry.179, !204, !"_entry", i1 false, i1 false}
!229 = !{ptr @test_big_hole_dynamic_partial._entry_ptr.181, !204, !"_entry_ptr", i1 false, i1 false}
!230 = !{ptr @.str.183, !204, !"<string literal>", i1 false, i1 false}
!231 = !{ptr @test_big_hole_dynamic_partial._entry.182, !204, !"_entry", i1 false, i1 false}
!232 = !{ptr @test_big_hole_dynamic_partial._entry_ptr.184, !204, !"_entry_ptr", i1 false, i1 false}
!233 = !{ptr @.str.186, !204, !"<string literal>", i1 false, i1 false}
!234 = !{ptr @test_big_hole_dynamic_partial._entry.185, !204, !"_entry", i1 false, i1 false}
!235 = !{ptr @test_big_hole_dynamic_partial._entry_ptr.187, !204, !"_entry_ptr", i1 false, i1 false}
!236 = !{ptr @.str.189, !204, !"<string literal>", i1 false, i1 false}
!237 = !{ptr @test_big_hole_dynamic_partial._entry.188, !204, !"_entry", i1 false, i1 false}
!238 = !{ptr @test_big_hole_dynamic_partial._entry_ptr.190, !204, !"_entry_ptr", i1 false, i1 false}
!239 = !{ptr @.str.192, !204, !"<string literal>", i1 false, i1 false}
!240 = !{ptr @test_big_hole_dynamic_partial._entry.191, !204, !"_entry", i1 false, i1 false}
!241 = !{ptr @test_big_hole_dynamic_partial._entry_ptr.193, !204, !"_entry_ptr", i1 false, i1 false}
!242 = !{ptr @.str.194, !204, !"<string literal>", i1 false, i1 false}
!243 = !{ptr @.str.195, !204, !"<string literal>", i1 false, i1 false}
!244 = !{ptr @test_trailing_hole_dynamic_partial._entry, !204, !"_entry", i1 false, i1 false}
!245 = !{ptr @test_trailing_hole_dynamic_partial._entry_ptr, !204, !"_entry_ptr", i1 false, i1 false}
!246 = !{ptr @.str.197, !204, !"<string literal>", i1 false, i1 false}
!247 = !{ptr @test_trailing_hole_dynamic_partial._entry.196, !204, !"_entry", i1 false, i1 false}
!248 = !{ptr @test_trailing_hole_dynamic_partial._entry_ptr.198, !204, !"_entry_ptr", i1 false, i1 false}
!249 = !{ptr @.str.200, !204, !"<string literal>", i1 false, i1 false}
!250 = !{ptr @test_trailing_hole_dynamic_partial._entry.199, !204, !"_entry", i1 false, i1 false}
!251 = !{ptr @test_trailing_hole_dynamic_partial._entry_ptr.201, !204, !"_entry_ptr", i1 false, i1 false}
!252 = !{ptr @.str.203, !204, !"<string literal>", i1 false, i1 false}
!253 = !{ptr @test_trailing_hole_dynamic_partial._entry.202, !204, !"_entry", i1 false, i1 false}
!254 = !{ptr @test_trailing_hole_dynamic_partial._entry_ptr.204, !204, !"_entry_ptr", i1 false, i1 false}
!255 = !{ptr @.str.206, !204, !"<string literal>", i1 false, i1 false}
!256 = !{ptr @test_trailing_hole_dynamic_partial._entry.205, !204, !"_entry", i1 false, i1 false}
!257 = !{ptr @test_trailing_hole_dynamic_partial._entry_ptr.207, !204, !"_entry_ptr", i1 false, i1 false}
!258 = !{ptr @.str.209, !204, !"<string literal>", i1 false, i1 false}
!259 = !{ptr @test_trailing_hole_dynamic_partial._entry.208, !204, !"_entry", i1 false, i1 false}
!260 = !{ptr @test_trailing_hole_dynamic_partial._entry_ptr.210, !204, !"_entry_ptr", i1 false, i1 false}
!261 = !{ptr @.str.211, !204, !"<string literal>", i1 false, i1 false}
!262 = !{ptr @.str.212, !204, !"<string literal>", i1 false, i1 false}
!263 = !{ptr @test_packed_dynamic_partial._entry, !204, !"_entry", i1 false, i1 false}
!264 = !{ptr @test_packed_dynamic_partial._entry_ptr, !204, !"_entry_ptr", i1 false, i1 false}
!265 = !{ptr @.str.214, !204, !"<string literal>", i1 false, i1 false}
!266 = !{ptr @test_packed_dynamic_partial._entry.213, !204, !"_entry", i1 false, i1 false}
!267 = !{ptr @test_packed_dynamic_partial._entry_ptr.215, !204, !"_entry_ptr", i1 false, i1 false}
!268 = !{ptr @.str.217, !204, !"<string literal>", i1 false, i1 false}
!269 = !{ptr @test_packed_dynamic_partial._entry.216, !204, !"_entry", i1 false, i1 false}
!270 = !{ptr @test_packed_dynamic_partial._entry_ptr.218, !204, !"_entry_ptr", i1 false, i1 false}
!271 = !{ptr @.str.220, !204, !"<string literal>", i1 false, i1 false}
!272 = !{ptr @test_packed_dynamic_partial._entry.219, !204, !"_entry", i1 false, i1 false}
!273 = !{ptr @test_packed_dynamic_partial._entry_ptr.221, !204, !"_entry_ptr", i1 false, i1 false}
!274 = !{ptr @.str.223, !204, !"<string literal>", i1 false, i1 false}
!275 = !{ptr @test_packed_dynamic_partial._entry.222, !204, !"_entry", i1 false, i1 false}
!276 = !{ptr @test_packed_dynamic_partial._entry_ptr.224, !204, !"_entry_ptr", i1 false, i1 false}
!277 = !{ptr @.str.226, !204, !"<string literal>", i1 false, i1 false}
!278 = !{ptr @test_packed_dynamic_partial._entry.225, !204, !"_entry", i1 false, i1 false}
!279 = !{ptr @test_packed_dynamic_partial._entry_ptr.227, !204, !"_entry_ptr", i1 false, i1 false}
!280 = !{ptr @.str.228, !281, !"<string literal>", i1 false, i1 false}
!281 = !{!"../lib/test_stackinit.c", i32 381, i32 1}
!282 = !{ptr @.str.229, !281, !"<string literal>", i1 false, i1 false}
!283 = !{ptr @test_small_hole_assigned_dynamic_partial._entry, !281, !"_entry", i1 false, i1 false}
!284 = !{ptr @test_small_hole_assigned_dynamic_partial._entry_ptr, !281, !"_entry_ptr", i1 false, i1 false}
!285 = !{ptr @.str.231, !281, !"<string literal>", i1 false, i1 false}
!286 = !{ptr @test_small_hole_assigned_dynamic_partial._entry.230, !281, !"_entry", i1 false, i1 false}
!287 = !{ptr @test_small_hole_assigned_dynamic_partial._entry_ptr.232, !281, !"_entry_ptr", i1 false, i1 false}
!288 = !{ptr @.str.234, !281, !"<string literal>", i1 false, i1 false}
!289 = !{ptr @test_small_hole_assigned_dynamic_partial._entry.233, !281, !"_entry", i1 false, i1 false}
!290 = !{ptr @test_small_hole_assigned_dynamic_partial._entry_ptr.235, !281, !"_entry_ptr", i1 false, i1 false}
!291 = !{ptr @.str.237, !281, !"<string literal>", i1 false, i1 false}
!292 = !{ptr @test_small_hole_assigned_dynamic_partial._entry.236, !281, !"_entry", i1 false, i1 false}
!293 = !{ptr @test_small_hole_assigned_dynamic_partial._entry_ptr.238, !281, !"_entry_ptr", i1 false, i1 false}
!294 = !{ptr @.str.240, !281, !"<string literal>", i1 false, i1 false}
!295 = !{ptr @test_small_hole_assigned_dynamic_partial._entry.239, !281, !"_entry", i1 false, i1 false}
!296 = !{ptr @test_small_hole_assigned_dynamic_partial._entry_ptr.241, !281, !"_entry_ptr", i1 false, i1 false}
!297 = !{ptr @.str.243, !281, !"<string literal>", i1 false, i1 false}
!298 = !{ptr @test_small_hole_assigned_dynamic_partial._entry.242, !281, !"_entry", i1 false, i1 false}
!299 = !{ptr @test_small_hole_assigned_dynamic_partial._entry_ptr.244, !281, !"_entry_ptr", i1 false, i1 false}
!300 = !{ptr @.str.245, !281, !"<string literal>", i1 false, i1 false}
!301 = !{ptr @.str.246, !281, !"<string literal>", i1 false, i1 false}
!302 = !{ptr @test_big_hole_assigned_dynamic_partial._entry, !281, !"_entry", i1 false, i1 false}
!303 = !{ptr @test_big_hole_assigned_dynamic_partial._entry_ptr, !281, !"_entry_ptr", i1 false, i1 false}
!304 = !{ptr @.str.248, !281, !"<string literal>", i1 false, i1 false}
!305 = !{ptr @test_big_hole_assigned_dynamic_partial._entry.247, !281, !"_entry", i1 false, i1 false}
!306 = !{ptr @test_big_hole_assigned_dynamic_partial._entry_ptr.249, !281, !"_entry_ptr", i1 false, i1 false}
!307 = !{ptr @.str.251, !281, !"<string literal>", i1 false, i1 false}
!308 = !{ptr @test_big_hole_assigned_dynamic_partial._entry.250, !281, !"_entry", i1 false, i1 false}
!309 = !{ptr @test_big_hole_assigned_dynamic_partial._entry_ptr.252, !281, !"_entry_ptr", i1 false, i1 false}
!310 = !{ptr @.str.254, !281, !"<string literal>", i1 false, i1 false}
!311 = !{ptr @test_big_hole_assigned_dynamic_partial._entry.253, !281, !"_entry", i1 false, i1 false}
!312 = !{ptr @test_big_hole_assigned_dynamic_partial._entry_ptr.255, !281, !"_entry_ptr", i1 false, i1 false}
!313 = !{ptr @.str.257, !281, !"<string literal>", i1 false, i1 false}
!314 = !{ptr @test_big_hole_assigned_dynamic_partial._entry.256, !281, !"_entry", i1 false, i1 false}
!315 = !{ptr @test_big_hole_assigned_dynamic_partial._entry_ptr.258, !281, !"_entry_ptr", i1 false, i1 false}
!316 = !{ptr @.str.260, !281, !"<string literal>", i1 false, i1 false}
!317 = !{ptr @test_big_hole_assigned_dynamic_partial._entry.259, !281, !"_entry", i1 false, i1 false}
!318 = !{ptr @test_big_hole_assigned_dynamic_partial._entry_ptr.261, !281, !"_entry_ptr", i1 false, i1 false}
!319 = !{ptr @.str.262, !281, !"<string literal>", i1 false, i1 false}
!320 = !{ptr @.str.263, !281, !"<string literal>", i1 false, i1 false}
!321 = !{ptr @test_trailing_hole_assigned_dynamic_partial._entry, !281, !"_entry", i1 false, i1 false}
!322 = !{ptr @test_trailing_hole_assigned_dynamic_partial._entry_ptr, !281, !"_entry_ptr", i1 false, i1 false}
!323 = !{ptr @.str.265, !281, !"<string literal>", i1 false, i1 false}
!324 = !{ptr @test_trailing_hole_assigned_dynamic_partial._entry.264, !281, !"_entry", i1 false, i1 false}
!325 = !{ptr @test_trailing_hole_assigned_dynamic_partial._entry_ptr.266, !281, !"_entry_ptr", i1 false, i1 false}
!326 = !{ptr @.str.268, !281, !"<string literal>", i1 false, i1 false}
!327 = !{ptr @test_trailing_hole_assigned_dynamic_partial._entry.267, !281, !"_entry", i1 false, i1 false}
!328 = !{ptr @test_trailing_hole_assigned_dynamic_partial._entry_ptr.269, !281, !"_entry_ptr", i1 false, i1 false}
!329 = !{ptr @.str.271, !281, !"<string literal>", i1 false, i1 false}
!330 = !{ptr @test_trailing_hole_assigned_dynamic_partial._entry.270, !281, !"_entry", i1 false, i1 false}
!331 = !{ptr @test_trailing_hole_assigned_dynamic_partial._entry_ptr.272, !281, !"_entry_ptr", i1 false, i1 false}
!332 = !{ptr @.str.274, !281, !"<string literal>", i1 false, i1 false}
!333 = !{ptr @test_trailing_hole_assigned_dynamic_partial._entry.273, !281, !"_entry", i1 false, i1 false}
!334 = !{ptr @test_trailing_hole_assigned_dynamic_partial._entry_ptr.275, !281, !"_entry_ptr", i1 false, i1 false}
!335 = !{ptr @.str.277, !281, !"<string literal>", i1 false, i1 false}
!336 = !{ptr @test_trailing_hole_assigned_dynamic_partial._entry.276, !281, !"_entry", i1 false, i1 false}
!337 = !{ptr @test_trailing_hole_assigned_dynamic_partial._entry_ptr.278, !281, !"_entry_ptr", i1 false, i1 false}
!338 = !{ptr @.str.279, !281, !"<string literal>", i1 false, i1 false}
!339 = !{ptr @.str.280, !281, !"<string literal>", i1 false, i1 false}
!340 = !{ptr @test_packed_assigned_dynamic_partial._entry, !281, !"_entry", i1 false, i1 false}
!341 = !{ptr @test_packed_assigned_dynamic_partial._entry_ptr, !281, !"_entry_ptr", i1 false, i1 false}
!342 = !{ptr @.str.282, !281, !"<string literal>", i1 false, i1 false}
!343 = !{ptr @test_packed_assigned_dynamic_partial._entry.281, !281, !"_entry", i1 false, i1 false}
!344 = !{ptr @test_packed_assigned_dynamic_partial._entry_ptr.283, !281, !"_entry_ptr", i1 false, i1 false}
!345 = !{ptr @.str.285, !281, !"<string literal>", i1 false, i1 false}
!346 = !{ptr @test_packed_assigned_dynamic_partial._entry.284, !281, !"_entry", i1 false, i1 false}
!347 = !{ptr @test_packed_assigned_dynamic_partial._entry_ptr.286, !281, !"_entry_ptr", i1 false, i1 false}
!348 = !{ptr @.str.288, !281, !"<string literal>", i1 false, i1 false}
!349 = !{ptr @test_packed_assigned_dynamic_partial._entry.287, !281, !"_entry", i1 false, i1 false}
!350 = !{ptr @test_packed_assigned_dynamic_partial._entry_ptr.289, !281, !"_entry_ptr", i1 false, i1 false}
!351 = !{ptr @.str.291, !281, !"<string literal>", i1 false, i1 false}
!352 = !{ptr @test_packed_assigned_dynamic_partial._entry.290, !281, !"_entry", i1 false, i1 false}
!353 = !{ptr @test_packed_assigned_dynamic_partial._entry_ptr.292, !281, !"_entry_ptr", i1 false, i1 false}
!354 = !{ptr @.str.294, !281, !"<string literal>", i1 false, i1 false}
!355 = !{ptr @test_packed_assigned_dynamic_partial._entry.293, !281, !"_entry", i1 false, i1 false}
!356 = !{ptr @test_packed_assigned_dynamic_partial._entry_ptr.295, !281, !"_entry_ptr", i1 false, i1 false}
!357 = !{ptr @.str.296, !358, !"<string literal>", i1 false, i1 false}
!358 = !{!"../lib/test_stackinit.c", i32 377, i32 1}
!359 = !{ptr @.str.297, !358, !"<string literal>", i1 false, i1 false}
!360 = !{ptr @test_small_hole_static_partial._entry, !358, !"_entry", i1 false, i1 false}
!361 = !{ptr @test_small_hole_static_partial._entry_ptr, !358, !"_entry_ptr", i1 false, i1 false}
!362 = !{ptr @.str.299, !358, !"<string literal>", i1 false, i1 false}
!363 = !{ptr @test_small_hole_static_partial._entry.298, !358, !"_entry", i1 false, i1 false}
!364 = !{ptr @test_small_hole_static_partial._entry_ptr.300, !358, !"_entry_ptr", i1 false, i1 false}
!365 = !{ptr @.str.302, !358, !"<string literal>", i1 false, i1 false}
!366 = !{ptr @test_small_hole_static_partial._entry.301, !358, !"_entry", i1 false, i1 false}
!367 = !{ptr @test_small_hole_static_partial._entry_ptr.303, !358, !"_entry_ptr", i1 false, i1 false}
!368 = !{ptr @.str.305, !358, !"<string literal>", i1 false, i1 false}
!369 = !{ptr @test_small_hole_static_partial._entry.304, !358, !"_entry", i1 false, i1 false}
!370 = !{ptr @test_small_hole_static_partial._entry_ptr.306, !358, !"_entry_ptr", i1 false, i1 false}
!371 = !{ptr @.str.308, !358, !"<string literal>", i1 false, i1 false}
!372 = !{ptr @test_small_hole_static_partial._entry.307, !358, !"_entry", i1 false, i1 false}
!373 = !{ptr @test_small_hole_static_partial._entry_ptr.309, !358, !"_entry_ptr", i1 false, i1 false}
!374 = !{ptr @.str.311, !358, !"<string literal>", i1 false, i1 false}
!375 = !{ptr @test_small_hole_static_partial._entry.310, !358, !"_entry", i1 false, i1 false}
!376 = !{ptr @test_small_hole_static_partial._entry_ptr.312, !358, !"_entry_ptr", i1 false, i1 false}
!377 = !{ptr @.str.313, !358, !"<string literal>", i1 false, i1 false}
!378 = !{ptr @.str.314, !358, !"<string literal>", i1 false, i1 false}
!379 = !{ptr @test_big_hole_static_partial._entry, !358, !"_entry", i1 false, i1 false}
!380 = !{ptr @test_big_hole_static_partial._entry_ptr, !358, !"_entry_ptr", i1 false, i1 false}
!381 = !{ptr @.str.316, !358, !"<string literal>", i1 false, i1 false}
!382 = !{ptr @test_big_hole_static_partial._entry.315, !358, !"_entry", i1 false, i1 false}
!383 = !{ptr @test_big_hole_static_partial._entry_ptr.317, !358, !"_entry_ptr", i1 false, i1 false}
!384 = !{ptr @.str.319, !358, !"<string literal>", i1 false, i1 false}
!385 = !{ptr @test_big_hole_static_partial._entry.318, !358, !"_entry", i1 false, i1 false}
!386 = !{ptr @test_big_hole_static_partial._entry_ptr.320, !358, !"_entry_ptr", i1 false, i1 false}
!387 = !{ptr @.str.322, !358, !"<string literal>", i1 false, i1 false}
!388 = !{ptr @test_big_hole_static_partial._entry.321, !358, !"_entry", i1 false, i1 false}
!389 = !{ptr @test_big_hole_static_partial._entry_ptr.323, !358, !"_entry_ptr", i1 false, i1 false}
!390 = !{ptr @.str.325, !358, !"<string literal>", i1 false, i1 false}
!391 = !{ptr @test_big_hole_static_partial._entry.324, !358, !"_entry", i1 false, i1 false}
!392 = !{ptr @test_big_hole_static_partial._entry_ptr.326, !358, !"_entry_ptr", i1 false, i1 false}
!393 = !{ptr @.str.328, !358, !"<string literal>", i1 false, i1 false}
!394 = !{ptr @test_big_hole_static_partial._entry.327, !358, !"_entry", i1 false, i1 false}
!395 = !{ptr @test_big_hole_static_partial._entry_ptr.329, !358, !"_entry_ptr", i1 false, i1 false}
!396 = !{ptr @.str.330, !358, !"<string literal>", i1 false, i1 false}
!397 = !{ptr @.str.331, !358, !"<string literal>", i1 false, i1 false}
!398 = !{ptr @test_trailing_hole_static_partial._entry, !358, !"_entry", i1 false, i1 false}
!399 = !{ptr @test_trailing_hole_static_partial._entry_ptr, !358, !"_entry_ptr", i1 false, i1 false}
!400 = !{ptr @.str.333, !358, !"<string literal>", i1 false, i1 false}
!401 = !{ptr @test_trailing_hole_static_partial._entry.332, !358, !"_entry", i1 false, i1 false}
!402 = !{ptr @test_trailing_hole_static_partial._entry_ptr.334, !358, !"_entry_ptr", i1 false, i1 false}
!403 = !{ptr @.str.336, !358, !"<string literal>", i1 false, i1 false}
!404 = !{ptr @test_trailing_hole_static_partial._entry.335, !358, !"_entry", i1 false, i1 false}
!405 = !{ptr @test_trailing_hole_static_partial._entry_ptr.337, !358, !"_entry_ptr", i1 false, i1 false}
!406 = !{ptr @.str.339, !358, !"<string literal>", i1 false, i1 false}
!407 = !{ptr @test_trailing_hole_static_partial._entry.338, !358, !"_entry", i1 false, i1 false}
!408 = !{ptr @test_trailing_hole_static_partial._entry_ptr.340, !358, !"_entry_ptr", i1 false, i1 false}
!409 = !{ptr @.str.342, !358, !"<string literal>", i1 false, i1 false}
!410 = !{ptr @test_trailing_hole_static_partial._entry.341, !358, !"_entry", i1 false, i1 false}
!411 = !{ptr @test_trailing_hole_static_partial._entry_ptr.343, !358, !"_entry_ptr", i1 false, i1 false}
!412 = !{ptr @.str.345, !358, !"<string literal>", i1 false, i1 false}
!413 = !{ptr @test_trailing_hole_static_partial._entry.344, !358, !"_entry", i1 false, i1 false}
!414 = !{ptr @test_trailing_hole_static_partial._entry_ptr.346, !358, !"_entry_ptr", i1 false, i1 false}
!415 = !{ptr @.str.347, !358, !"<string literal>", i1 false, i1 false}
!416 = !{ptr @.str.348, !358, !"<string literal>", i1 false, i1 false}
!417 = !{ptr @test_packed_static_partial._entry, !358, !"_entry", i1 false, i1 false}
!418 = !{ptr @test_packed_static_partial._entry_ptr, !358, !"_entry_ptr", i1 false, i1 false}
!419 = !{ptr @.str.350, !358, !"<string literal>", i1 false, i1 false}
!420 = !{ptr @test_packed_static_partial._entry.349, !358, !"_entry", i1 false, i1 false}
!421 = !{ptr @test_packed_static_partial._entry_ptr.351, !358, !"_entry_ptr", i1 false, i1 false}
!422 = !{ptr @.str.353, !358, !"<string literal>", i1 false, i1 false}
!423 = !{ptr @test_packed_static_partial._entry.352, !358, !"_entry", i1 false, i1 false}
!424 = !{ptr @test_packed_static_partial._entry_ptr.354, !358, !"_entry_ptr", i1 false, i1 false}
!425 = !{ptr @.str.356, !358, !"<string literal>", i1 false, i1 false}
!426 = !{ptr @test_packed_static_partial._entry.355, !358, !"_entry", i1 false, i1 false}
!427 = !{ptr @test_packed_static_partial._entry_ptr.357, !358, !"_entry_ptr", i1 false, i1 false}
!428 = !{ptr @.str.359, !358, !"<string literal>", i1 false, i1 false}
!429 = !{ptr @test_packed_static_partial._entry.358, !358, !"_entry", i1 false, i1 false}
!430 = !{ptr @test_packed_static_partial._entry_ptr.360, !358, !"_entry_ptr", i1 false, i1 false}
!431 = !{ptr @.str.362, !358, !"<string literal>", i1 false, i1 false}
!432 = !{ptr @test_packed_static_partial._entry.361, !358, !"_entry", i1 false, i1 false}
!433 = !{ptr @test_packed_static_partial._entry_ptr.363, !358, !"_entry_ptr", i1 false, i1 false}
!434 = !{ptr @.str.364, !358, !"<string literal>", i1 false, i1 false}
!435 = !{ptr @.str.365, !358, !"<string literal>", i1 false, i1 false}
!436 = !{ptr @test_small_hole_static_all._entry, !358, !"_entry", i1 false, i1 false}
!437 = !{ptr @test_small_hole_static_all._entry_ptr, !358, !"_entry_ptr", i1 false, i1 false}
!438 = !{ptr @.str.367, !358, !"<string literal>", i1 false, i1 false}
!439 = !{ptr @test_small_hole_static_all._entry.366, !358, !"_entry", i1 false, i1 false}
!440 = !{ptr @test_small_hole_static_all._entry_ptr.368, !358, !"_entry_ptr", i1 false, i1 false}
!441 = !{ptr @.str.370, !358, !"<string literal>", i1 false, i1 false}
!442 = !{ptr @test_small_hole_static_all._entry.369, !358, !"_entry", i1 false, i1 false}
!443 = !{ptr @test_small_hole_static_all._entry_ptr.371, !358, !"_entry_ptr", i1 false, i1 false}
!444 = !{ptr @.str.373, !358, !"<string literal>", i1 false, i1 false}
!445 = !{ptr @test_small_hole_static_all._entry.372, !358, !"_entry", i1 false, i1 false}
!446 = !{ptr @test_small_hole_static_all._entry_ptr.374, !358, !"_entry_ptr", i1 false, i1 false}
!447 = !{ptr @.str.376, !358, !"<string literal>", i1 false, i1 false}
!448 = !{ptr @test_small_hole_static_all._entry.375, !358, !"_entry", i1 false, i1 false}
!449 = !{ptr @test_small_hole_static_all._entry_ptr.377, !358, !"_entry_ptr", i1 false, i1 false}
!450 = !{ptr @.str.379, !358, !"<string literal>", i1 false, i1 false}
!451 = !{ptr @test_small_hole_static_all._entry.378, !358, !"_entry", i1 false, i1 false}
!452 = !{ptr @test_small_hole_static_all._entry_ptr.380, !358, !"_entry_ptr", i1 false, i1 false}
!453 = !{ptr @.str.381, !358, !"<string literal>", i1 false, i1 false}
!454 = !{ptr @.str.382, !358, !"<string literal>", i1 false, i1 false}
!455 = !{ptr @test_big_hole_static_all._entry, !358, !"_entry", i1 false, i1 false}
!456 = !{ptr @test_big_hole_static_all._entry_ptr, !358, !"_entry_ptr", i1 false, i1 false}
!457 = !{ptr @.str.384, !358, !"<string literal>", i1 false, i1 false}
!458 = !{ptr @test_big_hole_static_all._entry.383, !358, !"_entry", i1 false, i1 false}
!459 = !{ptr @test_big_hole_static_all._entry_ptr.385, !358, !"_entry_ptr", i1 false, i1 false}
!460 = !{ptr @.str.387, !358, !"<string literal>", i1 false, i1 false}
!461 = !{ptr @test_big_hole_static_all._entry.386, !358, !"_entry", i1 false, i1 false}
!462 = !{ptr @test_big_hole_static_all._entry_ptr.388, !358, !"_entry_ptr", i1 false, i1 false}
!463 = !{ptr @.str.390, !358, !"<string literal>", i1 false, i1 false}
!464 = !{ptr @test_big_hole_static_all._entry.389, !358, !"_entry", i1 false, i1 false}
!465 = !{ptr @test_big_hole_static_all._entry_ptr.391, !358, !"_entry_ptr", i1 false, i1 false}
!466 = !{ptr @.str.393, !358, !"<string literal>", i1 false, i1 false}
!467 = !{ptr @test_big_hole_static_all._entry.392, !358, !"_entry", i1 false, i1 false}
!468 = !{ptr @test_big_hole_static_all._entry_ptr.394, !358, !"_entry_ptr", i1 false, i1 false}
!469 = !{ptr @.str.396, !358, !"<string literal>", i1 false, i1 false}
!470 = !{ptr @test_big_hole_static_all._entry.395, !358, !"_entry", i1 false, i1 false}
!471 = !{ptr @test_big_hole_static_all._entry_ptr.397, !358, !"_entry_ptr", i1 false, i1 false}
!472 = !{ptr @.str.398, !358, !"<string literal>", i1 false, i1 false}
!473 = !{ptr @.str.399, !358, !"<string literal>", i1 false, i1 false}
!474 = !{ptr @test_trailing_hole_static_all._entry, !358, !"_entry", i1 false, i1 false}
!475 = !{ptr @test_trailing_hole_static_all._entry_ptr, !358, !"_entry_ptr", i1 false, i1 false}
!476 = !{ptr @.str.401, !358, !"<string literal>", i1 false, i1 false}
!477 = !{ptr @test_trailing_hole_static_all._entry.400, !358, !"_entry", i1 false, i1 false}
!478 = !{ptr @test_trailing_hole_static_all._entry_ptr.402, !358, !"_entry_ptr", i1 false, i1 false}
!479 = !{ptr @.str.404, !358, !"<string literal>", i1 false, i1 false}
!480 = !{ptr @test_trailing_hole_static_all._entry.403, !358, !"_entry", i1 false, i1 false}
!481 = !{ptr @test_trailing_hole_static_all._entry_ptr.405, !358, !"_entry_ptr", i1 false, i1 false}
!482 = !{ptr @.str.407, !358, !"<string literal>", i1 false, i1 false}
!483 = !{ptr @test_trailing_hole_static_all._entry.406, !358, !"_entry", i1 false, i1 false}
!484 = !{ptr @test_trailing_hole_static_all._entry_ptr.408, !358, !"_entry_ptr", i1 false, i1 false}
!485 = !{ptr @.str.410, !358, !"<string literal>", i1 false, i1 false}
!486 = !{ptr @test_trailing_hole_static_all._entry.409, !358, !"_entry", i1 false, i1 false}
!487 = !{ptr @test_trailing_hole_static_all._entry_ptr.411, !358, !"_entry_ptr", i1 false, i1 false}
!488 = !{ptr @.str.413, !358, !"<string literal>", i1 false, i1 false}
!489 = !{ptr @test_trailing_hole_static_all._entry.412, !358, !"_entry", i1 false, i1 false}
!490 = !{ptr @test_trailing_hole_static_all._entry_ptr.414, !358, !"_entry_ptr", i1 false, i1 false}
!491 = !{ptr @.str.415, !358, !"<string literal>", i1 false, i1 false}
!492 = !{ptr @.str.416, !358, !"<string literal>", i1 false, i1 false}
!493 = !{ptr @test_packed_static_all._entry, !358, !"_entry", i1 false, i1 false}
!494 = !{ptr @test_packed_static_all._entry_ptr, !358, !"_entry_ptr", i1 false, i1 false}
!495 = !{ptr @.str.418, !358, !"<string literal>", i1 false, i1 false}
!496 = !{ptr @test_packed_static_all._entry.417, !358, !"_entry", i1 false, i1 false}
!497 = !{ptr @test_packed_static_all._entry_ptr.419, !358, !"_entry_ptr", i1 false, i1 false}
!498 = !{ptr @.str.421, !358, !"<string literal>", i1 false, i1 false}
!499 = !{ptr @test_packed_static_all._entry.420, !358, !"_entry", i1 false, i1 false}
!500 = !{ptr @test_packed_static_all._entry_ptr.422, !358, !"_entry_ptr", i1 false, i1 false}
!501 = !{ptr @.str.424, !358, !"<string literal>", i1 false, i1 false}
!502 = !{ptr @test_packed_static_all._entry.423, !358, !"_entry", i1 false, i1 false}
!503 = !{ptr @test_packed_static_all._entry_ptr.425, !358, !"_entry_ptr", i1 false, i1 false}
!504 = !{ptr @.str.427, !358, !"<string literal>", i1 false, i1 false}
!505 = !{ptr @test_packed_static_all._entry.426, !358, !"_entry", i1 false, i1 false}
!506 = !{ptr @test_packed_static_all._entry_ptr.428, !358, !"_entry_ptr", i1 false, i1 false}
!507 = !{ptr @.str.430, !358, !"<string literal>", i1 false, i1 false}
!508 = !{ptr @test_packed_static_all._entry.429, !358, !"_entry", i1 false, i1 false}
!509 = !{ptr @test_packed_static_all._entry_ptr.431, !358, !"_entry_ptr", i1 false, i1 false}
!510 = !{ptr @.str.432, !204, !"<string literal>", i1 false, i1 false}
!511 = !{ptr @.str.433, !204, !"<string literal>", i1 false, i1 false}
!512 = !{ptr @test_small_hole_dynamic_all._entry, !204, !"_entry", i1 false, i1 false}
!513 = !{ptr @test_small_hole_dynamic_all._entry_ptr, !204, !"_entry_ptr", i1 false, i1 false}
!514 = !{ptr @.str.435, !204, !"<string literal>", i1 false, i1 false}
!515 = !{ptr @test_small_hole_dynamic_all._entry.434, !204, !"_entry", i1 false, i1 false}
!516 = !{ptr @test_small_hole_dynamic_all._entry_ptr.436, !204, !"_entry_ptr", i1 false, i1 false}
!517 = !{ptr @.str.438, !204, !"<string literal>", i1 false, i1 false}
!518 = !{ptr @test_small_hole_dynamic_all._entry.437, !204, !"_entry", i1 false, i1 false}
!519 = !{ptr @test_small_hole_dynamic_all._entry_ptr.439, !204, !"_entry_ptr", i1 false, i1 false}
!520 = !{ptr @.str.441, !204, !"<string literal>", i1 false, i1 false}
!521 = !{ptr @test_small_hole_dynamic_all._entry.440, !204, !"_entry", i1 false, i1 false}
!522 = !{ptr @test_small_hole_dynamic_all._entry_ptr.442, !204, !"_entry_ptr", i1 false, i1 false}
!523 = !{ptr @.str.444, !204, !"<string literal>", i1 false, i1 false}
!524 = !{ptr @test_small_hole_dynamic_all._entry.443, !204, !"_entry", i1 false, i1 false}
!525 = !{ptr @test_small_hole_dynamic_all._entry_ptr.445, !204, !"_entry_ptr", i1 false, i1 false}
!526 = !{ptr @.str.447, !204, !"<string literal>", i1 false, i1 false}
!527 = !{ptr @test_small_hole_dynamic_all._entry.446, !204, !"_entry", i1 false, i1 false}
!528 = !{ptr @test_small_hole_dynamic_all._entry_ptr.448, !204, !"_entry_ptr", i1 false, i1 false}
!529 = !{ptr @.str.449, !204, !"<string literal>", i1 false, i1 false}
!530 = !{ptr @.str.450, !204, !"<string literal>", i1 false, i1 false}
!531 = !{ptr @test_big_hole_dynamic_all._entry, !204, !"_entry", i1 false, i1 false}
!532 = !{ptr @test_big_hole_dynamic_all._entry_ptr, !204, !"_entry_ptr", i1 false, i1 false}
!533 = !{ptr @.str.452, !204, !"<string literal>", i1 false, i1 false}
!534 = !{ptr @test_big_hole_dynamic_all._entry.451, !204, !"_entry", i1 false, i1 false}
!535 = !{ptr @test_big_hole_dynamic_all._entry_ptr.453, !204, !"_entry_ptr", i1 false, i1 false}
!536 = !{ptr @.str.455, !204, !"<string literal>", i1 false, i1 false}
!537 = !{ptr @test_big_hole_dynamic_all._entry.454, !204, !"_entry", i1 false, i1 false}
!538 = !{ptr @test_big_hole_dynamic_all._entry_ptr.456, !204, !"_entry_ptr", i1 false, i1 false}
!539 = !{ptr @.str.458, !204, !"<string literal>", i1 false, i1 false}
!540 = !{ptr @test_big_hole_dynamic_all._entry.457, !204, !"_entry", i1 false, i1 false}
!541 = !{ptr @test_big_hole_dynamic_all._entry_ptr.459, !204, !"_entry_ptr", i1 false, i1 false}
!542 = !{ptr @.str.461, !204, !"<string literal>", i1 false, i1 false}
!543 = !{ptr @test_big_hole_dynamic_all._entry.460, !204, !"_entry", i1 false, i1 false}
!544 = !{ptr @test_big_hole_dynamic_all._entry_ptr.462, !204, !"_entry_ptr", i1 false, i1 false}
!545 = !{ptr @.str.464, !204, !"<string literal>", i1 false, i1 false}
!546 = !{ptr @test_big_hole_dynamic_all._entry.463, !204, !"_entry", i1 false, i1 false}
!547 = !{ptr @test_big_hole_dynamic_all._entry_ptr.465, !204, !"_entry_ptr", i1 false, i1 false}
!548 = !{ptr @.str.466, !204, !"<string literal>", i1 false, i1 false}
!549 = !{ptr @.str.467, !204, !"<string literal>", i1 false, i1 false}
!550 = !{ptr @test_trailing_hole_dynamic_all._entry, !204, !"_entry", i1 false, i1 false}
!551 = !{ptr @test_trailing_hole_dynamic_all._entry_ptr, !204, !"_entry_ptr", i1 false, i1 false}
!552 = !{ptr @.str.469, !204, !"<string literal>", i1 false, i1 false}
!553 = !{ptr @test_trailing_hole_dynamic_all._entry.468, !204, !"_entry", i1 false, i1 false}
!554 = !{ptr @test_trailing_hole_dynamic_all._entry_ptr.470, !204, !"_entry_ptr", i1 false, i1 false}
!555 = !{ptr @.str.472, !204, !"<string literal>", i1 false, i1 false}
!556 = !{ptr @test_trailing_hole_dynamic_all._entry.471, !204, !"_entry", i1 false, i1 false}
!557 = !{ptr @test_trailing_hole_dynamic_all._entry_ptr.473, !204, !"_entry_ptr", i1 false, i1 false}
!558 = !{ptr @.str.475, !204, !"<string literal>", i1 false, i1 false}
!559 = !{ptr @test_trailing_hole_dynamic_all._entry.474, !204, !"_entry", i1 false, i1 false}
!560 = !{ptr @test_trailing_hole_dynamic_all._entry_ptr.476, !204, !"_entry_ptr", i1 false, i1 false}
!561 = !{ptr @.str.478, !204, !"<string literal>", i1 false, i1 false}
!562 = !{ptr @test_trailing_hole_dynamic_all._entry.477, !204, !"_entry", i1 false, i1 false}
!563 = !{ptr @test_trailing_hole_dynamic_all._entry_ptr.479, !204, !"_entry_ptr", i1 false, i1 false}
!564 = !{ptr @.str.481, !204, !"<string literal>", i1 false, i1 false}
!565 = !{ptr @test_trailing_hole_dynamic_all._entry.480, !204, !"_entry", i1 false, i1 false}
!566 = !{ptr @test_trailing_hole_dynamic_all._entry_ptr.482, !204, !"_entry_ptr", i1 false, i1 false}
!567 = !{ptr @.str.483, !204, !"<string literal>", i1 false, i1 false}
!568 = !{ptr @.str.484, !204, !"<string literal>", i1 false, i1 false}
!569 = !{ptr @test_packed_dynamic_all._entry, !204, !"_entry", i1 false, i1 false}
!570 = !{ptr @test_packed_dynamic_all._entry_ptr, !204, !"_entry_ptr", i1 false, i1 false}
!571 = !{ptr @.str.486, !204, !"<string literal>", i1 false, i1 false}
!572 = !{ptr @test_packed_dynamic_all._entry.485, !204, !"_entry", i1 false, i1 false}
!573 = !{ptr @test_packed_dynamic_all._entry_ptr.487, !204, !"_entry_ptr", i1 false, i1 false}
!574 = !{ptr @.str.489, !204, !"<string literal>", i1 false, i1 false}
!575 = !{ptr @test_packed_dynamic_all._entry.488, !204, !"_entry", i1 false, i1 false}
!576 = !{ptr @test_packed_dynamic_all._entry_ptr.490, !204, !"_entry_ptr", i1 false, i1 false}
!577 = !{ptr @.str.492, !204, !"<string literal>", i1 false, i1 false}
!578 = !{ptr @test_packed_dynamic_all._entry.491, !204, !"_entry", i1 false, i1 false}
!579 = !{ptr @test_packed_dynamic_all._entry_ptr.493, !204, !"_entry_ptr", i1 false, i1 false}
!580 = !{ptr @.str.495, !204, !"<string literal>", i1 false, i1 false}
!581 = !{ptr @test_packed_dynamic_all._entry.494, !204, !"_entry", i1 false, i1 false}
!582 = !{ptr @test_packed_dynamic_all._entry_ptr.496, !204, !"_entry_ptr", i1 false, i1 false}
!583 = !{ptr @.str.498, !204, !"<string literal>", i1 false, i1 false}
!584 = !{ptr @test_packed_dynamic_all._entry.497, !204, !"_entry", i1 false, i1 false}
!585 = !{ptr @test_packed_dynamic_all._entry_ptr.499, !204, !"_entry_ptr", i1 false, i1 false}
!586 = !{ptr @.str.500, !587, !"<string literal>", i1 false, i1 false}
!587 = !{!"../lib/test_stackinit.c", i32 379, i32 1}
!588 = !{ptr @.str.501, !587, !"<string literal>", i1 false, i1 false}
!589 = !{ptr @test_small_hole_runtime_partial._entry, !587, !"_entry", i1 false, i1 false}
!590 = !{ptr @test_small_hole_runtime_partial._entry_ptr, !587, !"_entry_ptr", i1 false, i1 false}
!591 = !{ptr @.str.503, !587, !"<string literal>", i1 false, i1 false}
!592 = !{ptr @test_small_hole_runtime_partial._entry.502, !587, !"_entry", i1 false, i1 false}
!593 = !{ptr @test_small_hole_runtime_partial._entry_ptr.504, !587, !"_entry_ptr", i1 false, i1 false}
!594 = !{ptr @.str.506, !587, !"<string literal>", i1 false, i1 false}
!595 = !{ptr @test_small_hole_runtime_partial._entry.505, !587, !"_entry", i1 false, i1 false}
!596 = !{ptr @test_small_hole_runtime_partial._entry_ptr.507, !587, !"_entry_ptr", i1 false, i1 false}
!597 = !{ptr @.str.509, !587, !"<string literal>", i1 false, i1 false}
!598 = !{ptr @test_small_hole_runtime_partial._entry.508, !587, !"_entry", i1 false, i1 false}
!599 = !{ptr @test_small_hole_runtime_partial._entry_ptr.510, !587, !"_entry_ptr", i1 false, i1 false}
!600 = !{ptr @.str.512, !587, !"<string literal>", i1 false, i1 false}
!601 = !{ptr @test_small_hole_runtime_partial._entry.511, !587, !"_entry", i1 false, i1 false}
!602 = !{ptr @test_small_hole_runtime_partial._entry_ptr.513, !587, !"_entry_ptr", i1 false, i1 false}
!603 = !{ptr @.str.515, !587, !"<string literal>", i1 false, i1 false}
!604 = !{ptr @test_small_hole_runtime_partial._entry.514, !587, !"_entry", i1 false, i1 false}
!605 = !{ptr @test_small_hole_runtime_partial._entry_ptr.516, !587, !"_entry_ptr", i1 false, i1 false}
!606 = !{ptr @.str.517, !587, !"<string literal>", i1 false, i1 false}
!607 = !{ptr @.str.518, !587, !"<string literal>", i1 false, i1 false}
!608 = !{ptr @test_big_hole_runtime_partial._entry, !587, !"_entry", i1 false, i1 false}
!609 = !{ptr @test_big_hole_runtime_partial._entry_ptr, !587, !"_entry_ptr", i1 false, i1 false}
!610 = !{ptr @.str.520, !587, !"<string literal>", i1 false, i1 false}
!611 = !{ptr @test_big_hole_runtime_partial._entry.519, !587, !"_entry", i1 false, i1 false}
!612 = !{ptr @test_big_hole_runtime_partial._entry_ptr.521, !587, !"_entry_ptr", i1 false, i1 false}
!613 = !{ptr @.str.523, !587, !"<string literal>", i1 false, i1 false}
!614 = !{ptr @test_big_hole_runtime_partial._entry.522, !587, !"_entry", i1 false, i1 false}
!615 = !{ptr @test_big_hole_runtime_partial._entry_ptr.524, !587, !"_entry_ptr", i1 false, i1 false}
!616 = !{ptr @.str.526, !587, !"<string literal>", i1 false, i1 false}
!617 = !{ptr @test_big_hole_runtime_partial._entry.525, !587, !"_entry", i1 false, i1 false}
!618 = !{ptr @test_big_hole_runtime_partial._entry_ptr.527, !587, !"_entry_ptr", i1 false, i1 false}
!619 = !{ptr @.str.529, !587, !"<string literal>", i1 false, i1 false}
!620 = !{ptr @test_big_hole_runtime_partial._entry.528, !587, !"_entry", i1 false, i1 false}
!621 = !{ptr @test_big_hole_runtime_partial._entry_ptr.530, !587, !"_entry_ptr", i1 false, i1 false}
!622 = !{ptr @.str.532, !587, !"<string literal>", i1 false, i1 false}
!623 = !{ptr @test_big_hole_runtime_partial._entry.531, !587, !"_entry", i1 false, i1 false}
!624 = !{ptr @test_big_hole_runtime_partial._entry_ptr.533, !587, !"_entry_ptr", i1 false, i1 false}
!625 = !{ptr @.str.534, !587, !"<string literal>", i1 false, i1 false}
!626 = !{ptr @.str.535, !587, !"<string literal>", i1 false, i1 false}
!627 = !{ptr @test_trailing_hole_runtime_partial._entry, !587, !"_entry", i1 false, i1 false}
!628 = !{ptr @test_trailing_hole_runtime_partial._entry_ptr, !587, !"_entry_ptr", i1 false, i1 false}
!629 = !{ptr @.str.537, !587, !"<string literal>", i1 false, i1 false}
!630 = !{ptr @test_trailing_hole_runtime_partial._entry.536, !587, !"_entry", i1 false, i1 false}
!631 = !{ptr @test_trailing_hole_runtime_partial._entry_ptr.538, !587, !"_entry_ptr", i1 false, i1 false}
!632 = !{ptr @.str.540, !587, !"<string literal>", i1 false, i1 false}
!633 = !{ptr @test_trailing_hole_runtime_partial._entry.539, !587, !"_entry", i1 false, i1 false}
!634 = !{ptr @test_trailing_hole_runtime_partial._entry_ptr.541, !587, !"_entry_ptr", i1 false, i1 false}
!635 = !{ptr @.str.543, !587, !"<string literal>", i1 false, i1 false}
!636 = !{ptr @test_trailing_hole_runtime_partial._entry.542, !587, !"_entry", i1 false, i1 false}
!637 = !{ptr @test_trailing_hole_runtime_partial._entry_ptr.544, !587, !"_entry_ptr", i1 false, i1 false}
!638 = !{ptr @.str.546, !587, !"<string literal>", i1 false, i1 false}
!639 = !{ptr @test_trailing_hole_runtime_partial._entry.545, !587, !"_entry", i1 false, i1 false}
!640 = !{ptr @test_trailing_hole_runtime_partial._entry_ptr.547, !587, !"_entry_ptr", i1 false, i1 false}
!641 = !{ptr @.str.549, !587, !"<string literal>", i1 false, i1 false}
!642 = !{ptr @test_trailing_hole_runtime_partial._entry.548, !587, !"_entry", i1 false, i1 false}
!643 = !{ptr @test_trailing_hole_runtime_partial._entry_ptr.550, !587, !"_entry_ptr", i1 false, i1 false}
!644 = !{ptr @.str.551, !587, !"<string literal>", i1 false, i1 false}
!645 = !{ptr @.str.552, !587, !"<string literal>", i1 false, i1 false}
!646 = !{ptr @test_packed_runtime_partial._entry, !587, !"_entry", i1 false, i1 false}
!647 = !{ptr @test_packed_runtime_partial._entry_ptr, !587, !"_entry_ptr", i1 false, i1 false}
!648 = !{ptr @.str.554, !587, !"<string literal>", i1 false, i1 false}
!649 = !{ptr @test_packed_runtime_partial._entry.553, !587, !"_entry", i1 false, i1 false}
!650 = !{ptr @test_packed_runtime_partial._entry_ptr.555, !587, !"_entry_ptr", i1 false, i1 false}
!651 = !{ptr @.str.557, !587, !"<string literal>", i1 false, i1 false}
!652 = !{ptr @test_packed_runtime_partial._entry.556, !587, !"_entry", i1 false, i1 false}
!653 = !{ptr @test_packed_runtime_partial._entry_ptr.558, !587, !"_entry_ptr", i1 false, i1 false}
!654 = !{ptr @.str.560, !587, !"<string literal>", i1 false, i1 false}
!655 = !{ptr @test_packed_runtime_partial._entry.559, !587, !"_entry", i1 false, i1 false}
!656 = !{ptr @test_packed_runtime_partial._entry_ptr.561, !587, !"_entry_ptr", i1 false, i1 false}
!657 = !{ptr @.str.563, !587, !"<string literal>", i1 false, i1 false}
!658 = !{ptr @test_packed_runtime_partial._entry.562, !587, !"_entry", i1 false, i1 false}
!659 = !{ptr @test_packed_runtime_partial._entry_ptr.564, !587, !"_entry_ptr", i1 false, i1 false}
!660 = !{ptr @.str.566, !587, !"<string literal>", i1 false, i1 false}
!661 = !{ptr @test_packed_runtime_partial._entry.565, !587, !"_entry", i1 false, i1 false}
!662 = !{ptr @test_packed_runtime_partial._entry_ptr.567, !587, !"_entry_ptr", i1 false, i1 false}
!663 = !{ptr @.str.568, !587, !"<string literal>", i1 false, i1 false}
!664 = !{ptr @.str.569, !587, !"<string literal>", i1 false, i1 false}
!665 = !{ptr @test_small_hole_runtime_all._entry, !587, !"_entry", i1 false, i1 false}
!666 = !{ptr @test_small_hole_runtime_all._entry_ptr, !587, !"_entry_ptr", i1 false, i1 false}
!667 = !{ptr @.str.571, !587, !"<string literal>", i1 false, i1 false}
!668 = !{ptr @test_small_hole_runtime_all._entry.570, !587, !"_entry", i1 false, i1 false}
!669 = !{ptr @test_small_hole_runtime_all._entry_ptr.572, !587, !"_entry_ptr", i1 false, i1 false}
!670 = !{ptr @.str.574, !587, !"<string literal>", i1 false, i1 false}
!671 = !{ptr @test_small_hole_runtime_all._entry.573, !587, !"_entry", i1 false, i1 false}
!672 = !{ptr @test_small_hole_runtime_all._entry_ptr.575, !587, !"_entry_ptr", i1 false, i1 false}
!673 = !{ptr @.str.577, !587, !"<string literal>", i1 false, i1 false}
!674 = !{ptr @test_small_hole_runtime_all._entry.576, !587, !"_entry", i1 false, i1 false}
!675 = !{ptr @test_small_hole_runtime_all._entry_ptr.578, !587, !"_entry_ptr", i1 false, i1 false}
!676 = !{ptr @.str.580, !587, !"<string literal>", i1 false, i1 false}
!677 = !{ptr @test_small_hole_runtime_all._entry.579, !587, !"_entry", i1 false, i1 false}
!678 = !{ptr @test_small_hole_runtime_all._entry_ptr.581, !587, !"_entry_ptr", i1 false, i1 false}
!679 = !{ptr @.str.583, !587, !"<string literal>", i1 false, i1 false}
!680 = !{ptr @test_small_hole_runtime_all._entry.582, !587, !"_entry", i1 false, i1 false}
!681 = !{ptr @test_small_hole_runtime_all._entry_ptr.584, !587, !"_entry_ptr", i1 false, i1 false}
!682 = !{ptr @.str.585, !587, !"<string literal>", i1 false, i1 false}
!683 = !{ptr @.str.586, !587, !"<string literal>", i1 false, i1 false}
!684 = !{ptr @test_big_hole_runtime_all._entry, !587, !"_entry", i1 false, i1 false}
!685 = !{ptr @test_big_hole_runtime_all._entry_ptr, !587, !"_entry_ptr", i1 false, i1 false}
!686 = !{ptr @.str.588, !587, !"<string literal>", i1 false, i1 false}
!687 = !{ptr @test_big_hole_runtime_all._entry.587, !587, !"_entry", i1 false, i1 false}
!688 = !{ptr @test_big_hole_runtime_all._entry_ptr.589, !587, !"_entry_ptr", i1 false, i1 false}
!689 = !{ptr @.str.591, !587, !"<string literal>", i1 false, i1 false}
!690 = !{ptr @test_big_hole_runtime_all._entry.590, !587, !"_entry", i1 false, i1 false}
!691 = !{ptr @test_big_hole_runtime_all._entry_ptr.592, !587, !"_entry_ptr", i1 false, i1 false}
!692 = !{ptr @.str.594, !587, !"<string literal>", i1 false, i1 false}
!693 = !{ptr @test_big_hole_runtime_all._entry.593, !587, !"_entry", i1 false, i1 false}
!694 = !{ptr @test_big_hole_runtime_all._entry_ptr.595, !587, !"_entry_ptr", i1 false, i1 false}
!695 = !{ptr @.str.597, !587, !"<string literal>", i1 false, i1 false}
!696 = !{ptr @test_big_hole_runtime_all._entry.596, !587, !"_entry", i1 false, i1 false}
!697 = !{ptr @test_big_hole_runtime_all._entry_ptr.598, !587, !"_entry_ptr", i1 false, i1 false}
!698 = !{ptr @.str.600, !587, !"<string literal>", i1 false, i1 false}
!699 = !{ptr @test_big_hole_runtime_all._entry.599, !587, !"_entry", i1 false, i1 false}
!700 = !{ptr @test_big_hole_runtime_all._entry_ptr.601, !587, !"_entry_ptr", i1 false, i1 false}
!701 = !{ptr @.str.602, !587, !"<string literal>", i1 false, i1 false}
!702 = !{ptr @.str.603, !587, !"<string literal>", i1 false, i1 false}
!703 = !{ptr @test_trailing_hole_runtime_all._entry, !587, !"_entry", i1 false, i1 false}
!704 = !{ptr @test_trailing_hole_runtime_all._entry_ptr, !587, !"_entry_ptr", i1 false, i1 false}
!705 = !{ptr @.str.605, !587, !"<string literal>", i1 false, i1 false}
!706 = !{ptr @test_trailing_hole_runtime_all._entry.604, !587, !"_entry", i1 false, i1 false}
!707 = !{ptr @test_trailing_hole_runtime_all._entry_ptr.606, !587, !"_entry_ptr", i1 false, i1 false}
!708 = !{ptr @.str.608, !587, !"<string literal>", i1 false, i1 false}
!709 = !{ptr @test_trailing_hole_runtime_all._entry.607, !587, !"_entry", i1 false, i1 false}
!710 = !{ptr @test_trailing_hole_runtime_all._entry_ptr.609, !587, !"_entry_ptr", i1 false, i1 false}
!711 = !{ptr @.str.611, !587, !"<string literal>", i1 false, i1 false}
!712 = !{ptr @test_trailing_hole_runtime_all._entry.610, !587, !"_entry", i1 false, i1 false}
!713 = !{ptr @test_trailing_hole_runtime_all._entry_ptr.612, !587, !"_entry_ptr", i1 false, i1 false}
!714 = !{ptr @.str.614, !587, !"<string literal>", i1 false, i1 false}
!715 = !{ptr @test_trailing_hole_runtime_all._entry.613, !587, !"_entry", i1 false, i1 false}
!716 = !{ptr @test_trailing_hole_runtime_all._entry_ptr.615, !587, !"_entry_ptr", i1 false, i1 false}
!717 = !{ptr @.str.617, !587, !"<string literal>", i1 false, i1 false}
!718 = !{ptr @test_trailing_hole_runtime_all._entry.616, !587, !"_entry", i1 false, i1 false}
!719 = !{ptr @test_trailing_hole_runtime_all._entry_ptr.618, !587, !"_entry_ptr", i1 false, i1 false}
!720 = !{ptr @.str.619, !587, !"<string literal>", i1 false, i1 false}
!721 = !{ptr @.str.620, !587, !"<string literal>", i1 false, i1 false}
!722 = !{ptr @test_packed_runtime_all._entry, !587, !"_entry", i1 false, i1 false}
!723 = !{ptr @test_packed_runtime_all._entry_ptr, !587, !"_entry_ptr", i1 false, i1 false}
!724 = !{ptr @.str.622, !587, !"<string literal>", i1 false, i1 false}
!725 = !{ptr @test_packed_runtime_all._entry.621, !587, !"_entry", i1 false, i1 false}
!726 = !{ptr @test_packed_runtime_all._entry_ptr.623, !587, !"_entry_ptr", i1 false, i1 false}
!727 = !{ptr @.str.625, !587, !"<string literal>", i1 false, i1 false}
!728 = !{ptr @test_packed_runtime_all._entry.624, !587, !"_entry", i1 false, i1 false}
!729 = !{ptr @test_packed_runtime_all._entry_ptr.626, !587, !"_entry_ptr", i1 false, i1 false}
!730 = !{ptr @.str.628, !587, !"<string literal>", i1 false, i1 false}
!731 = !{ptr @test_packed_runtime_all._entry.627, !587, !"_entry", i1 false, i1 false}
!732 = !{ptr @test_packed_runtime_all._entry_ptr.629, !587, !"_entry_ptr", i1 false, i1 false}
!733 = !{ptr @.str.631, !587, !"<string literal>", i1 false, i1 false}
!734 = !{ptr @test_packed_runtime_all._entry.630, !587, !"_entry", i1 false, i1 false}
!735 = !{ptr @test_packed_runtime_all._entry_ptr.632, !587, !"_entry_ptr", i1 false, i1 false}
!736 = !{ptr @.str.634, !587, !"<string literal>", i1 false, i1 false}
!737 = !{ptr @test_packed_runtime_all._entry.633, !587, !"_entry", i1 false, i1 false}
!738 = !{ptr @test_packed_runtime_all._entry_ptr.635, !587, !"_entry_ptr", i1 false, i1 false}
!739 = !{ptr @.str.636, !740, !"<string literal>", i1 false, i1 false}
!740 = !{!"../lib/test_stackinit.c", i32 380, i32 1}
!741 = !{ptr @.str.637, !740, !"<string literal>", i1 false, i1 false}
!742 = !{ptr @test_small_hole_assigned_static_partial._entry, !740, !"_entry", i1 false, i1 false}
!743 = !{ptr @test_small_hole_assigned_static_partial._entry_ptr, !740, !"_entry_ptr", i1 false, i1 false}
!744 = !{ptr @.str.639, !740, !"<string literal>", i1 false, i1 false}
!745 = !{ptr @test_small_hole_assigned_static_partial._entry.638, !740, !"_entry", i1 false, i1 false}
!746 = !{ptr @test_small_hole_assigned_static_partial._entry_ptr.640, !740, !"_entry_ptr", i1 false, i1 false}
!747 = !{ptr @.str.642, !740, !"<string literal>", i1 false, i1 false}
!748 = !{ptr @test_small_hole_assigned_static_partial._entry.641, !740, !"_entry", i1 false, i1 false}
!749 = !{ptr @test_small_hole_assigned_static_partial._entry_ptr.643, !740, !"_entry_ptr", i1 false, i1 false}
!750 = !{ptr @.str.645, !740, !"<string literal>", i1 false, i1 false}
!751 = !{ptr @test_small_hole_assigned_static_partial._entry.644, !740, !"_entry", i1 false, i1 false}
!752 = !{ptr @test_small_hole_assigned_static_partial._entry_ptr.646, !740, !"_entry_ptr", i1 false, i1 false}
!753 = !{ptr @.str.648, !740, !"<string literal>", i1 false, i1 false}
!754 = !{ptr @test_small_hole_assigned_static_partial._entry.647, !740, !"_entry", i1 false, i1 false}
!755 = !{ptr @test_small_hole_assigned_static_partial._entry_ptr.649, !740, !"_entry_ptr", i1 false, i1 false}
!756 = !{ptr @.str.651, !740, !"<string literal>", i1 false, i1 false}
!757 = !{ptr @test_small_hole_assigned_static_partial._entry.650, !740, !"_entry", i1 false, i1 false}
!758 = !{ptr @test_small_hole_assigned_static_partial._entry_ptr.652, !740, !"_entry_ptr", i1 false, i1 false}
!759 = !{ptr @.str.653, !740, !"<string literal>", i1 false, i1 false}
!760 = !{ptr @.str.654, !740, !"<string literal>", i1 false, i1 false}
!761 = !{ptr @test_big_hole_assigned_static_partial._entry, !740, !"_entry", i1 false, i1 false}
!762 = !{ptr @test_big_hole_assigned_static_partial._entry_ptr, !740, !"_entry_ptr", i1 false, i1 false}
!763 = !{ptr @.str.656, !740, !"<string literal>", i1 false, i1 false}
!764 = !{ptr @test_big_hole_assigned_static_partial._entry.655, !740, !"_entry", i1 false, i1 false}
!765 = !{ptr @test_big_hole_assigned_static_partial._entry_ptr.657, !740, !"_entry_ptr", i1 false, i1 false}
!766 = !{ptr @.str.659, !740, !"<string literal>", i1 false, i1 false}
!767 = !{ptr @test_big_hole_assigned_static_partial._entry.658, !740, !"_entry", i1 false, i1 false}
!768 = !{ptr @test_big_hole_assigned_static_partial._entry_ptr.660, !740, !"_entry_ptr", i1 false, i1 false}
!769 = !{ptr @.str.662, !740, !"<string literal>", i1 false, i1 false}
!770 = !{ptr @test_big_hole_assigned_static_partial._entry.661, !740, !"_entry", i1 false, i1 false}
!771 = !{ptr @test_big_hole_assigned_static_partial._entry_ptr.663, !740, !"_entry_ptr", i1 false, i1 false}
!772 = !{ptr @.str.665, !740, !"<string literal>", i1 false, i1 false}
!773 = !{ptr @test_big_hole_assigned_static_partial._entry.664, !740, !"_entry", i1 false, i1 false}
!774 = !{ptr @test_big_hole_assigned_static_partial._entry_ptr.666, !740, !"_entry_ptr", i1 false, i1 false}
!775 = !{ptr @.str.668, !740, !"<string literal>", i1 false, i1 false}
!776 = !{ptr @test_big_hole_assigned_static_partial._entry.667, !740, !"_entry", i1 false, i1 false}
!777 = !{ptr @test_big_hole_assigned_static_partial._entry_ptr.669, !740, !"_entry_ptr", i1 false, i1 false}
!778 = !{ptr @.str.670, !740, !"<string literal>", i1 false, i1 false}
!779 = !{ptr @.str.671, !740, !"<string literal>", i1 false, i1 false}
!780 = !{ptr @test_trailing_hole_assigned_static_partial._entry, !740, !"_entry", i1 false, i1 false}
!781 = !{ptr @test_trailing_hole_assigned_static_partial._entry_ptr, !740, !"_entry_ptr", i1 false, i1 false}
!782 = !{ptr @.str.673, !740, !"<string literal>", i1 false, i1 false}
!783 = !{ptr @test_trailing_hole_assigned_static_partial._entry.672, !740, !"_entry", i1 false, i1 false}
!784 = !{ptr @test_trailing_hole_assigned_static_partial._entry_ptr.674, !740, !"_entry_ptr", i1 false, i1 false}
!785 = !{ptr @.str.676, !740, !"<string literal>", i1 false, i1 false}
!786 = !{ptr @test_trailing_hole_assigned_static_partial._entry.675, !740, !"_entry", i1 false, i1 false}
!787 = !{ptr @test_trailing_hole_assigned_static_partial._entry_ptr.677, !740, !"_entry_ptr", i1 false, i1 false}
!788 = !{ptr @.str.679, !740, !"<string literal>", i1 false, i1 false}
!789 = !{ptr @test_trailing_hole_assigned_static_partial._entry.678, !740, !"_entry", i1 false, i1 false}
!790 = !{ptr @test_trailing_hole_assigned_static_partial._entry_ptr.680, !740, !"_entry_ptr", i1 false, i1 false}
!791 = !{ptr @.str.682, !740, !"<string literal>", i1 false, i1 false}
!792 = !{ptr @test_trailing_hole_assigned_static_partial._entry.681, !740, !"_entry", i1 false, i1 false}
!793 = !{ptr @test_trailing_hole_assigned_static_partial._entry_ptr.683, !740, !"_entry_ptr", i1 false, i1 false}
!794 = !{ptr @.str.685, !740, !"<string literal>", i1 false, i1 false}
!795 = !{ptr @test_trailing_hole_assigned_static_partial._entry.684, !740, !"_entry", i1 false, i1 false}
!796 = !{ptr @test_trailing_hole_assigned_static_partial._entry_ptr.686, !740, !"_entry_ptr", i1 false, i1 false}
!797 = !{ptr @.str.687, !740, !"<string literal>", i1 false, i1 false}
!798 = !{ptr @.str.688, !740, !"<string literal>", i1 false, i1 false}
!799 = !{ptr @test_packed_assigned_static_partial._entry, !740, !"_entry", i1 false, i1 false}
!800 = !{ptr @test_packed_assigned_static_partial._entry_ptr, !740, !"_entry_ptr", i1 false, i1 false}
!801 = !{ptr @.str.690, !740, !"<string literal>", i1 false, i1 false}
!802 = !{ptr @test_packed_assigned_static_partial._entry.689, !740, !"_entry", i1 false, i1 false}
!803 = !{ptr @test_packed_assigned_static_partial._entry_ptr.691, !740, !"_entry_ptr", i1 false, i1 false}
!804 = !{ptr @.str.693, !740, !"<string literal>", i1 false, i1 false}
!805 = !{ptr @test_packed_assigned_static_partial._entry.692, !740, !"_entry", i1 false, i1 false}
!806 = !{ptr @test_packed_assigned_static_partial._entry_ptr.694, !740, !"_entry_ptr", i1 false, i1 false}
!807 = !{ptr @.str.696, !740, !"<string literal>", i1 false, i1 false}
!808 = !{ptr @test_packed_assigned_static_partial._entry.695, !740, !"_entry", i1 false, i1 false}
!809 = !{ptr @test_packed_assigned_static_partial._entry_ptr.697, !740, !"_entry_ptr", i1 false, i1 false}
!810 = !{ptr @.str.699, !740, !"<string literal>", i1 false, i1 false}
!811 = !{ptr @test_packed_assigned_static_partial._entry.698, !740, !"_entry", i1 false, i1 false}
!812 = !{ptr @test_packed_assigned_static_partial._entry_ptr.700, !740, !"_entry_ptr", i1 false, i1 false}
!813 = !{ptr @.str.702, !740, !"<string literal>", i1 false, i1 false}
!814 = !{ptr @test_packed_assigned_static_partial._entry.701, !740, !"_entry", i1 false, i1 false}
!815 = !{ptr @test_packed_assigned_static_partial._entry_ptr.703, !740, !"_entry_ptr", i1 false, i1 false}
!816 = !{ptr @.str.704, !740, !"<string literal>", i1 false, i1 false}
!817 = !{ptr @.str.705, !740, !"<string literal>", i1 false, i1 false}
!818 = !{ptr @test_small_hole_assigned_static_all._entry, !740, !"_entry", i1 false, i1 false}
!819 = !{ptr @test_small_hole_assigned_static_all._entry_ptr, !740, !"_entry_ptr", i1 false, i1 false}
!820 = !{ptr @.str.707, !740, !"<string literal>", i1 false, i1 false}
!821 = !{ptr @test_small_hole_assigned_static_all._entry.706, !740, !"_entry", i1 false, i1 false}
!822 = !{ptr @test_small_hole_assigned_static_all._entry_ptr.708, !740, !"_entry_ptr", i1 false, i1 false}
!823 = !{ptr @.str.710, !740, !"<string literal>", i1 false, i1 false}
!824 = !{ptr @test_small_hole_assigned_static_all._entry.709, !740, !"_entry", i1 false, i1 false}
!825 = !{ptr @test_small_hole_assigned_static_all._entry_ptr.711, !740, !"_entry_ptr", i1 false, i1 false}
!826 = !{ptr @.str.713, !740, !"<string literal>", i1 false, i1 false}
!827 = !{ptr @test_small_hole_assigned_static_all._entry.712, !740, !"_entry", i1 false, i1 false}
!828 = !{ptr @test_small_hole_assigned_static_all._entry_ptr.714, !740, !"_entry_ptr", i1 false, i1 false}
!829 = !{ptr @.str.716, !740, !"<string literal>", i1 false, i1 false}
!830 = !{ptr @test_small_hole_assigned_static_all._entry.715, !740, !"_entry", i1 false, i1 false}
!831 = !{ptr @test_small_hole_assigned_static_all._entry_ptr.717, !740, !"_entry_ptr", i1 false, i1 false}
!832 = !{ptr @.str.719, !740, !"<string literal>", i1 false, i1 false}
!833 = !{ptr @test_small_hole_assigned_static_all._entry.718, !740, !"_entry", i1 false, i1 false}
!834 = !{ptr @test_small_hole_assigned_static_all._entry_ptr.720, !740, !"_entry_ptr", i1 false, i1 false}
!835 = !{ptr @.str.721, !740, !"<string literal>", i1 false, i1 false}
!836 = !{ptr @.str.722, !740, !"<string literal>", i1 false, i1 false}
!837 = !{ptr @test_big_hole_assigned_static_all._entry, !740, !"_entry", i1 false, i1 false}
!838 = !{ptr @test_big_hole_assigned_static_all._entry_ptr, !740, !"_entry_ptr", i1 false, i1 false}
!839 = !{ptr @.str.724, !740, !"<string literal>", i1 false, i1 false}
!840 = !{ptr @test_big_hole_assigned_static_all._entry.723, !740, !"_entry", i1 false, i1 false}
!841 = !{ptr @test_big_hole_assigned_static_all._entry_ptr.725, !740, !"_entry_ptr", i1 false, i1 false}
!842 = !{ptr @.str.727, !740, !"<string literal>", i1 false, i1 false}
!843 = !{ptr @test_big_hole_assigned_static_all._entry.726, !740, !"_entry", i1 false, i1 false}
!844 = !{ptr @test_big_hole_assigned_static_all._entry_ptr.728, !740, !"_entry_ptr", i1 false, i1 false}
!845 = !{ptr @.str.730, !740, !"<string literal>", i1 false, i1 false}
!846 = !{ptr @test_big_hole_assigned_static_all._entry.729, !740, !"_entry", i1 false, i1 false}
!847 = !{ptr @test_big_hole_assigned_static_all._entry_ptr.731, !740, !"_entry_ptr", i1 false, i1 false}
!848 = !{ptr @.str.733, !740, !"<string literal>", i1 false, i1 false}
!849 = !{ptr @test_big_hole_assigned_static_all._entry.732, !740, !"_entry", i1 false, i1 false}
!850 = !{ptr @test_big_hole_assigned_static_all._entry_ptr.734, !740, !"_entry_ptr", i1 false, i1 false}
!851 = !{ptr @.str.736, !740, !"<string literal>", i1 false, i1 false}
!852 = !{ptr @test_big_hole_assigned_static_all._entry.735, !740, !"_entry", i1 false, i1 false}
!853 = !{ptr @test_big_hole_assigned_static_all._entry_ptr.737, !740, !"_entry_ptr", i1 false, i1 false}
!854 = !{ptr @.str.738, !740, !"<string literal>", i1 false, i1 false}
!855 = !{ptr @.str.739, !740, !"<string literal>", i1 false, i1 false}
!856 = !{ptr @test_trailing_hole_assigned_static_all._entry, !740, !"_entry", i1 false, i1 false}
!857 = !{ptr @test_trailing_hole_assigned_static_all._entry_ptr, !740, !"_entry_ptr", i1 false, i1 false}
!858 = !{ptr @.str.741, !740, !"<string literal>", i1 false, i1 false}
!859 = !{ptr @test_trailing_hole_assigned_static_all._entry.740, !740, !"_entry", i1 false, i1 false}
!860 = !{ptr @test_trailing_hole_assigned_static_all._entry_ptr.742, !740, !"_entry_ptr", i1 false, i1 false}
!861 = !{ptr @.str.744, !740, !"<string literal>", i1 false, i1 false}
!862 = !{ptr @test_trailing_hole_assigned_static_all._entry.743, !740, !"_entry", i1 false, i1 false}
!863 = !{ptr @test_trailing_hole_assigned_static_all._entry_ptr.745, !740, !"_entry_ptr", i1 false, i1 false}
!864 = !{ptr @.str.747, !740, !"<string literal>", i1 false, i1 false}
!865 = !{ptr @test_trailing_hole_assigned_static_all._entry.746, !740, !"_entry", i1 false, i1 false}
!866 = !{ptr @test_trailing_hole_assigned_static_all._entry_ptr.748, !740, !"_entry_ptr", i1 false, i1 false}
!867 = !{ptr @.str.750, !740, !"<string literal>", i1 false, i1 false}
!868 = !{ptr @test_trailing_hole_assigned_static_all._entry.749, !740, !"_entry", i1 false, i1 false}
!869 = !{ptr @test_trailing_hole_assigned_static_all._entry_ptr.751, !740, !"_entry_ptr", i1 false, i1 false}
!870 = !{ptr @.str.753, !740, !"<string literal>", i1 false, i1 false}
!871 = !{ptr @test_trailing_hole_assigned_static_all._entry.752, !740, !"_entry", i1 false, i1 false}
!872 = !{ptr @test_trailing_hole_assigned_static_all._entry_ptr.754, !740, !"_entry_ptr", i1 false, i1 false}
!873 = !{ptr @.str.755, !740, !"<string literal>", i1 false, i1 false}
!874 = !{ptr @.str.756, !740, !"<string literal>", i1 false, i1 false}
!875 = !{ptr @test_packed_assigned_static_all._entry, !740, !"_entry", i1 false, i1 false}
!876 = !{ptr @test_packed_assigned_static_all._entry_ptr, !740, !"_entry_ptr", i1 false, i1 false}
!877 = !{ptr @.str.758, !740, !"<string literal>", i1 false, i1 false}
!878 = !{ptr @test_packed_assigned_static_all._entry.757, !740, !"_entry", i1 false, i1 false}
!879 = !{ptr @test_packed_assigned_static_all._entry_ptr.759, !740, !"_entry_ptr", i1 false, i1 false}
!880 = !{ptr @.str.761, !740, !"<string literal>", i1 false, i1 false}
!881 = !{ptr @test_packed_assigned_static_all._entry.760, !740, !"_entry", i1 false, i1 false}
!882 = !{ptr @test_packed_assigned_static_all._entry_ptr.762, !740, !"_entry_ptr", i1 false, i1 false}
!883 = !{ptr @.str.764, !740, !"<string literal>", i1 false, i1 false}
!884 = !{ptr @test_packed_assigned_static_all._entry.763, !740, !"_entry", i1 false, i1 false}
!885 = !{ptr @test_packed_assigned_static_all._entry_ptr.765, !740, !"_entry_ptr", i1 false, i1 false}
!886 = !{ptr @.str.767, !740, !"<string literal>", i1 false, i1 false}
!887 = !{ptr @test_packed_assigned_static_all._entry.766, !740, !"_entry", i1 false, i1 false}
!888 = !{ptr @test_packed_assigned_static_all._entry_ptr.768, !740, !"_entry_ptr", i1 false, i1 false}
!889 = !{ptr @.str.770, !740, !"<string literal>", i1 false, i1 false}
!890 = !{ptr @test_packed_assigned_static_all._entry.769, !740, !"_entry", i1 false, i1 false}
!891 = !{ptr @test_packed_assigned_static_all._entry_ptr.771, !740, !"_entry_ptr", i1 false, i1 false}
!892 = !{ptr @.str.772, !281, !"<string literal>", i1 false, i1 false}
!893 = !{ptr @.str.773, !281, !"<string literal>", i1 false, i1 false}
!894 = !{ptr @test_small_hole_assigned_dynamic_all._entry, !281, !"_entry", i1 false, i1 false}
!895 = !{ptr @test_small_hole_assigned_dynamic_all._entry_ptr, !281, !"_entry_ptr", i1 false, i1 false}
!896 = !{ptr @.str.775, !281, !"<string literal>", i1 false, i1 false}
!897 = !{ptr @test_small_hole_assigned_dynamic_all._entry.774, !281, !"_entry", i1 false, i1 false}
!898 = !{ptr @test_small_hole_assigned_dynamic_all._entry_ptr.776, !281, !"_entry_ptr", i1 false, i1 false}
!899 = !{ptr @.str.778, !281, !"<string literal>", i1 false, i1 false}
!900 = !{ptr @test_small_hole_assigned_dynamic_all._entry.777, !281, !"_entry", i1 false, i1 false}
!901 = !{ptr @test_small_hole_assigned_dynamic_all._entry_ptr.779, !281, !"_entry_ptr", i1 false, i1 false}
!902 = !{ptr @.str.781, !281, !"<string literal>", i1 false, i1 false}
!903 = !{ptr @test_small_hole_assigned_dynamic_all._entry.780, !281, !"_entry", i1 false, i1 false}
!904 = !{ptr @test_small_hole_assigned_dynamic_all._entry_ptr.782, !281, !"_entry_ptr", i1 false, i1 false}
!905 = !{ptr @.str.784, !281, !"<string literal>", i1 false, i1 false}
!906 = !{ptr @test_small_hole_assigned_dynamic_all._entry.783, !281, !"_entry", i1 false, i1 false}
!907 = !{ptr @test_small_hole_assigned_dynamic_all._entry_ptr.785, !281, !"_entry_ptr", i1 false, i1 false}
!908 = !{ptr @.str.787, !281, !"<string literal>", i1 false, i1 false}
!909 = !{ptr @test_small_hole_assigned_dynamic_all._entry.786, !281, !"_entry", i1 false, i1 false}
!910 = !{ptr @test_small_hole_assigned_dynamic_all._entry_ptr.788, !281, !"_entry_ptr", i1 false, i1 false}
!911 = !{ptr @.str.789, !281, !"<string literal>", i1 false, i1 false}
!912 = !{ptr @.str.790, !281, !"<string literal>", i1 false, i1 false}
!913 = !{ptr @test_big_hole_assigned_dynamic_all._entry, !281, !"_entry", i1 false, i1 false}
!914 = !{ptr @test_big_hole_assigned_dynamic_all._entry_ptr, !281, !"_entry_ptr", i1 false, i1 false}
!915 = !{ptr @.str.792, !281, !"<string literal>", i1 false, i1 false}
!916 = !{ptr @test_big_hole_assigned_dynamic_all._entry.791, !281, !"_entry", i1 false, i1 false}
!917 = !{ptr @test_big_hole_assigned_dynamic_all._entry_ptr.793, !281, !"_entry_ptr", i1 false, i1 false}
!918 = !{ptr @.str.795, !281, !"<string literal>", i1 false, i1 false}
!919 = !{ptr @test_big_hole_assigned_dynamic_all._entry.794, !281, !"_entry", i1 false, i1 false}
!920 = !{ptr @test_big_hole_assigned_dynamic_all._entry_ptr.796, !281, !"_entry_ptr", i1 false, i1 false}
!921 = !{ptr @.str.798, !281, !"<string literal>", i1 false, i1 false}
!922 = !{ptr @test_big_hole_assigned_dynamic_all._entry.797, !281, !"_entry", i1 false, i1 false}
!923 = !{ptr @test_big_hole_assigned_dynamic_all._entry_ptr.799, !281, !"_entry_ptr", i1 false, i1 false}
!924 = !{ptr @.str.801, !281, !"<string literal>", i1 false, i1 false}
!925 = !{ptr @test_big_hole_assigned_dynamic_all._entry.800, !281, !"_entry", i1 false, i1 false}
!926 = !{ptr @test_big_hole_assigned_dynamic_all._entry_ptr.802, !281, !"_entry_ptr", i1 false, i1 false}
!927 = !{ptr @.str.804, !281, !"<string literal>", i1 false, i1 false}
!928 = !{ptr @test_big_hole_assigned_dynamic_all._entry.803, !281, !"_entry", i1 false, i1 false}
!929 = !{ptr @test_big_hole_assigned_dynamic_all._entry_ptr.805, !281, !"_entry_ptr", i1 false, i1 false}
!930 = !{ptr @.str.806, !281, !"<string literal>", i1 false, i1 false}
!931 = !{ptr @.str.807, !281, !"<string literal>", i1 false, i1 false}
!932 = !{ptr @test_trailing_hole_assigned_dynamic_all._entry, !281, !"_entry", i1 false, i1 false}
!933 = !{ptr @test_trailing_hole_assigned_dynamic_all._entry_ptr, !281, !"_entry_ptr", i1 false, i1 false}
!934 = !{ptr @.str.809, !281, !"<string literal>", i1 false, i1 false}
!935 = !{ptr @test_trailing_hole_assigned_dynamic_all._entry.808, !281, !"_entry", i1 false, i1 false}
!936 = !{ptr @test_trailing_hole_assigned_dynamic_all._entry_ptr.810, !281, !"_entry_ptr", i1 false, i1 false}
!937 = !{ptr @.str.812, !281, !"<string literal>", i1 false, i1 false}
!938 = !{ptr @test_trailing_hole_assigned_dynamic_all._entry.811, !281, !"_entry", i1 false, i1 false}
!939 = !{ptr @test_trailing_hole_assigned_dynamic_all._entry_ptr.813, !281, !"_entry_ptr", i1 false, i1 false}
!940 = !{ptr @.str.815, !281, !"<string literal>", i1 false, i1 false}
!941 = !{ptr @test_trailing_hole_assigned_dynamic_all._entry.814, !281, !"_entry", i1 false, i1 false}
!942 = !{ptr @test_trailing_hole_assigned_dynamic_all._entry_ptr.816, !281, !"_entry_ptr", i1 false, i1 false}
!943 = !{ptr @.str.818, !281, !"<string literal>", i1 false, i1 false}
!944 = !{ptr @test_trailing_hole_assigned_dynamic_all._entry.817, !281, !"_entry", i1 false, i1 false}
!945 = !{ptr @test_trailing_hole_assigned_dynamic_all._entry_ptr.819, !281, !"_entry_ptr", i1 false, i1 false}
!946 = !{ptr @.str.821, !281, !"<string literal>", i1 false, i1 false}
!947 = !{ptr @test_trailing_hole_assigned_dynamic_all._entry.820, !281, !"_entry", i1 false, i1 false}
!948 = !{ptr @test_trailing_hole_assigned_dynamic_all._entry_ptr.822, !281, !"_entry_ptr", i1 false, i1 false}
!949 = !{ptr @.str.823, !281, !"<string literal>", i1 false, i1 false}
!950 = !{ptr @.str.824, !281, !"<string literal>", i1 false, i1 false}
!951 = !{ptr @test_packed_assigned_dynamic_all._entry, !281, !"_entry", i1 false, i1 false}
!952 = !{ptr @test_packed_assigned_dynamic_all._entry_ptr, !281, !"_entry_ptr", i1 false, i1 false}
!953 = !{ptr @.str.826, !281, !"<string literal>", i1 false, i1 false}
!954 = !{ptr @test_packed_assigned_dynamic_all._entry.825, !281, !"_entry", i1 false, i1 false}
!955 = !{ptr @test_packed_assigned_dynamic_all._entry_ptr.827, !281, !"_entry_ptr", i1 false, i1 false}
!956 = !{ptr @.str.829, !281, !"<string literal>", i1 false, i1 false}
!957 = !{ptr @test_packed_assigned_dynamic_all._entry.828, !281, !"_entry", i1 false, i1 false}
!958 = !{ptr @test_packed_assigned_dynamic_all._entry_ptr.830, !281, !"_entry_ptr", i1 false, i1 false}
!959 = !{ptr @.str.832, !281, !"<string literal>", i1 false, i1 false}
!960 = !{ptr @test_packed_assigned_dynamic_all._entry.831, !281, !"_entry", i1 false, i1 false}
!961 = !{ptr @test_packed_assigned_dynamic_all._entry_ptr.833, !281, !"_entry_ptr", i1 false, i1 false}
!962 = !{ptr @.str.835, !281, !"<string literal>", i1 false, i1 false}
!963 = !{ptr @test_packed_assigned_dynamic_all._entry.834, !281, !"_entry", i1 false, i1 false}
!964 = !{ptr @test_packed_assigned_dynamic_all._entry_ptr.836, !281, !"_entry_ptr", i1 false, i1 false}
!965 = !{ptr @.str.838, !281, !"<string literal>", i1 false, i1 false}
!966 = !{ptr @test_packed_assigned_dynamic_all._entry.837, !281, !"_entry", i1 false, i1 false}
!967 = !{ptr @test_packed_assigned_dynamic_all._entry_ptr.839, !281, !"_entry_ptr", i1 false, i1 false}
!968 = !{ptr @.str.840, !969, !"<string literal>", i1 false, i1 false}
!969 = !{!"../lib/test_stackinit.c", i32 382, i32 1}
!970 = !{ptr @.str.841, !969, !"<string literal>", i1 false, i1 false}
!971 = !{ptr @test_small_hole_assigned_copy._entry, !969, !"_entry", i1 false, i1 false}
!972 = !{ptr @test_small_hole_assigned_copy._entry_ptr, !969, !"_entry_ptr", i1 false, i1 false}
!973 = !{ptr @.str.843, !969, !"<string literal>", i1 false, i1 false}
!974 = !{ptr @test_small_hole_assigned_copy._entry.842, !969, !"_entry", i1 false, i1 false}
!975 = !{ptr @test_small_hole_assigned_copy._entry_ptr.844, !969, !"_entry_ptr", i1 false, i1 false}
!976 = !{ptr @.str.846, !969, !"<string literal>", i1 false, i1 false}
!977 = !{ptr @test_small_hole_assigned_copy._entry.845, !969, !"_entry", i1 false, i1 false}
!978 = !{ptr @test_small_hole_assigned_copy._entry_ptr.847, !969, !"_entry_ptr", i1 false, i1 false}
!979 = !{ptr @.str.849, !969, !"<string literal>", i1 false, i1 false}
!980 = !{ptr @test_small_hole_assigned_copy._entry.848, !969, !"_entry", i1 false, i1 false}
!981 = !{ptr @test_small_hole_assigned_copy._entry_ptr.850, !969, !"_entry_ptr", i1 false, i1 false}
!982 = !{ptr @.str.852, !969, !"<string literal>", i1 false, i1 false}
!983 = !{ptr @test_small_hole_assigned_copy._entry.851, !969, !"_entry", i1 false, i1 false}
!984 = !{ptr @test_small_hole_assigned_copy._entry_ptr.853, !969, !"_entry_ptr", i1 false, i1 false}
!985 = !{ptr @.str.855, !969, !"<string literal>", i1 false, i1 false}
!986 = !{ptr @test_small_hole_assigned_copy._entry.854, !969, !"_entry", i1 false, i1 false}
!987 = !{ptr @test_small_hole_assigned_copy._entry_ptr.856, !969, !"_entry_ptr", i1 false, i1 false}
!988 = !{ptr @.str.857, !969, !"<string literal>", i1 false, i1 false}
!989 = !{ptr @.str.858, !969, !"<string literal>", i1 false, i1 false}
!990 = !{ptr @.str.859, !969, !"<string literal>", i1 false, i1 false}
!991 = !{ptr @test_big_hole_assigned_copy._entry, !969, !"_entry", i1 false, i1 false}
!992 = !{ptr @test_big_hole_assigned_copy._entry_ptr, !969, !"_entry_ptr", i1 false, i1 false}
!993 = !{ptr @.str.861, !969, !"<string literal>", i1 false, i1 false}
!994 = !{ptr @test_big_hole_assigned_copy._entry.860, !969, !"_entry", i1 false, i1 false}
!995 = !{ptr @test_big_hole_assigned_copy._entry_ptr.862, !969, !"_entry_ptr", i1 false, i1 false}
!996 = !{ptr @.str.864, !969, !"<string literal>", i1 false, i1 false}
!997 = !{ptr @test_big_hole_assigned_copy._entry.863, !969, !"_entry", i1 false, i1 false}
!998 = !{ptr @test_big_hole_assigned_copy._entry_ptr.865, !969, !"_entry_ptr", i1 false, i1 false}
!999 = !{ptr @.str.867, !969, !"<string literal>", i1 false, i1 false}
!1000 = !{ptr @test_big_hole_assigned_copy._entry.866, !969, !"_entry", i1 false, i1 false}
!1001 = !{ptr @test_big_hole_assigned_copy._entry_ptr.868, !969, !"_entry_ptr", i1 false, i1 false}
!1002 = !{ptr @.str.870, !969, !"<string literal>", i1 false, i1 false}
!1003 = !{ptr @test_big_hole_assigned_copy._entry.869, !969, !"_entry", i1 false, i1 false}
!1004 = !{ptr @test_big_hole_assigned_copy._entry_ptr.871, !969, !"_entry_ptr", i1 false, i1 false}
!1005 = !{ptr @.str.873, !969, !"<string literal>", i1 false, i1 false}
!1006 = !{ptr @test_big_hole_assigned_copy._entry.872, !969, !"_entry", i1 false, i1 false}
!1007 = !{ptr @test_big_hole_assigned_copy._entry_ptr.874, !969, !"_entry_ptr", i1 false, i1 false}
!1008 = !{ptr @.str.875, !969, !"<string literal>", i1 false, i1 false}
!1009 = !{ptr @.str.876, !969, !"<string literal>", i1 false, i1 false}
!1010 = !{ptr @test_trailing_hole_assigned_copy._entry, !969, !"_entry", i1 false, i1 false}
!1011 = !{ptr @test_trailing_hole_assigned_copy._entry_ptr, !969, !"_entry_ptr", i1 false, i1 false}
!1012 = !{ptr @.str.878, !969, !"<string literal>", i1 false, i1 false}
!1013 = !{ptr @test_trailing_hole_assigned_copy._entry.877, !969, !"_entry", i1 false, i1 false}
!1014 = !{ptr @test_trailing_hole_assigned_copy._entry_ptr.879, !969, !"_entry_ptr", i1 false, i1 false}
!1015 = !{ptr @.str.881, !969, !"<string literal>", i1 false, i1 false}
!1016 = !{ptr @test_trailing_hole_assigned_copy._entry.880, !969, !"_entry", i1 false, i1 false}
!1017 = !{ptr @test_trailing_hole_assigned_copy._entry_ptr.882, !969, !"_entry_ptr", i1 false, i1 false}
!1018 = !{ptr @.str.884, !969, !"<string literal>", i1 false, i1 false}
!1019 = !{ptr @test_trailing_hole_assigned_copy._entry.883, !969, !"_entry", i1 false, i1 false}
!1020 = !{ptr @test_trailing_hole_assigned_copy._entry_ptr.885, !969, !"_entry_ptr", i1 false, i1 false}
!1021 = !{ptr @.str.887, !969, !"<string literal>", i1 false, i1 false}
!1022 = !{ptr @test_trailing_hole_assigned_copy._entry.886, !969, !"_entry", i1 false, i1 false}
!1023 = !{ptr @test_trailing_hole_assigned_copy._entry_ptr.888, !969, !"_entry_ptr", i1 false, i1 false}
!1024 = !{ptr @.str.890, !969, !"<string literal>", i1 false, i1 false}
!1025 = !{ptr @test_trailing_hole_assigned_copy._entry.889, !969, !"_entry", i1 false, i1 false}
!1026 = !{ptr @test_trailing_hole_assigned_copy._entry_ptr.891, !969, !"_entry_ptr", i1 false, i1 false}
!1027 = !{ptr @.str.892, !969, !"<string literal>", i1 false, i1 false}
!1028 = !{ptr @.str.893, !969, !"<string literal>", i1 false, i1 false}
!1029 = !{ptr @test_packed_assigned_copy._entry, !969, !"_entry", i1 false, i1 false}
!1030 = !{ptr @test_packed_assigned_copy._entry_ptr, !969, !"_entry_ptr", i1 false, i1 false}
!1031 = !{ptr @.str.895, !969, !"<string literal>", i1 false, i1 false}
!1032 = !{ptr @test_packed_assigned_copy._entry.894, !969, !"_entry", i1 false, i1 false}
!1033 = !{ptr @test_packed_assigned_copy._entry_ptr.896, !969, !"_entry_ptr", i1 false, i1 false}
!1034 = !{ptr @.str.898, !969, !"<string literal>", i1 false, i1 false}
!1035 = !{ptr @test_packed_assigned_copy._entry.897, !969, !"_entry", i1 false, i1 false}
!1036 = !{ptr @test_packed_assigned_copy._entry_ptr.899, !969, !"_entry_ptr", i1 false, i1 false}
!1037 = !{ptr @.str.901, !969, !"<string literal>", i1 false, i1 false}
!1038 = !{ptr @test_packed_assigned_copy._entry.900, !969, !"_entry", i1 false, i1 false}
!1039 = !{ptr @test_packed_assigned_copy._entry_ptr.902, !969, !"_entry_ptr", i1 false, i1 false}
!1040 = !{ptr @.str.904, !969, !"<string literal>", i1 false, i1 false}
!1041 = !{ptr @test_packed_assigned_copy._entry.903, !969, !"_entry", i1 false, i1 false}
!1042 = !{ptr @test_packed_assigned_copy._entry_ptr.905, !969, !"_entry_ptr", i1 false, i1 false}
!1043 = !{ptr @.str.907, !969, !"<string literal>", i1 false, i1 false}
!1044 = !{ptr @test_packed_assigned_copy._entry.906, !969, !"_entry", i1 false, i1 false}
!1045 = !{ptr @test_packed_assigned_copy._entry_ptr.908, !969, !"_entry_ptr", i1 false, i1 false}
!1046 = !{ptr @.str.909, !1047, !"<string literal>", i1 false, i1 false}
!1047 = !{!"../lib/test_stackinit.c", i32 384, i32 1}
!1048 = !{ptr @.str.910, !1047, !"<string literal>", i1 false, i1 false}
!1049 = !{ptr @test_u8_none._entry, !1047, !"_entry", i1 false, i1 false}
!1050 = !{ptr @test_u8_none._entry_ptr, !1047, !"_entry_ptr", i1 false, i1 false}
!1051 = !{ptr @.str.912, !1047, !"<string literal>", i1 false, i1 false}
!1052 = !{ptr @test_u8_none._entry.911, !1047, !"_entry", i1 false, i1 false}
!1053 = !{ptr @test_u8_none._entry_ptr.913, !1047, !"_entry_ptr", i1 false, i1 false}
!1054 = !{ptr @.str.915, !1047, !"<string literal>", i1 false, i1 false}
!1055 = !{ptr @test_u8_none._entry.914, !1047, !"_entry", i1 false, i1 false}
!1056 = !{ptr @test_u8_none._entry_ptr.916, !1047, !"_entry_ptr", i1 false, i1 false}
!1057 = !{ptr @.str.918, !1047, !"<string literal>", i1 false, i1 false}
!1058 = !{ptr @test_u8_none._entry.917, !1047, !"_entry", i1 false, i1 false}
!1059 = !{ptr @test_u8_none._entry_ptr.919, !1047, !"_entry_ptr", i1 false, i1 false}
!1060 = !{ptr @.str.921, !1047, !"<string literal>", i1 false, i1 false}
!1061 = !{ptr @test_u8_none._entry.920, !1047, !"_entry", i1 false, i1 false}
!1062 = !{ptr @test_u8_none._entry_ptr.922, !1047, !"_entry_ptr", i1 false, i1 false}
!1063 = !{ptr @.str.924, !1047, !"<string literal>", i1 false, i1 false}
!1064 = !{ptr @test_u8_none._entry.923, !1047, !"_entry", i1 false, i1 false}
!1065 = !{ptr @test_u8_none._entry_ptr.925, !1047, !"_entry_ptr", i1 false, i1 false}
!1066 = !{ptr @.str.926, !1047, !"<string literal>", i1 false, i1 false}
!1067 = !{ptr @.str.927, !1047, !"<string literal>", i1 false, i1 false}
!1068 = !{ptr @test_u16_none._entry, !1047, !"_entry", i1 false, i1 false}
!1069 = !{ptr @test_u16_none._entry_ptr, !1047, !"_entry_ptr", i1 false, i1 false}
!1070 = !{ptr @.str.929, !1047, !"<string literal>", i1 false, i1 false}
!1071 = !{ptr @test_u16_none._entry.928, !1047, !"_entry", i1 false, i1 false}
!1072 = !{ptr @test_u16_none._entry_ptr.930, !1047, !"_entry_ptr", i1 false, i1 false}
!1073 = !{ptr @.str.932, !1047, !"<string literal>", i1 false, i1 false}
!1074 = !{ptr @test_u16_none._entry.931, !1047, !"_entry", i1 false, i1 false}
!1075 = !{ptr @test_u16_none._entry_ptr.933, !1047, !"_entry_ptr", i1 false, i1 false}
!1076 = !{ptr @.str.935, !1047, !"<string literal>", i1 false, i1 false}
!1077 = !{ptr @test_u16_none._entry.934, !1047, !"_entry", i1 false, i1 false}
!1078 = !{ptr @test_u16_none._entry_ptr.936, !1047, !"_entry_ptr", i1 false, i1 false}
!1079 = !{ptr @.str.938, !1047, !"<string literal>", i1 false, i1 false}
!1080 = !{ptr @test_u16_none._entry.937, !1047, !"_entry", i1 false, i1 false}
!1081 = !{ptr @test_u16_none._entry_ptr.939, !1047, !"_entry_ptr", i1 false, i1 false}
!1082 = !{ptr @.str.941, !1047, !"<string literal>", i1 false, i1 false}
!1083 = !{ptr @test_u16_none._entry.940, !1047, !"_entry", i1 false, i1 false}
!1084 = !{ptr @test_u16_none._entry_ptr.942, !1047, !"_entry_ptr", i1 false, i1 false}
!1085 = !{ptr @.str.943, !1047, !"<string literal>", i1 false, i1 false}
!1086 = !{ptr @.str.944, !1047, !"<string literal>", i1 false, i1 false}
!1087 = !{ptr @test_u32_none._entry, !1047, !"_entry", i1 false, i1 false}
!1088 = !{ptr @test_u32_none._entry_ptr, !1047, !"_entry_ptr", i1 false, i1 false}
!1089 = !{ptr @.str.946, !1047, !"<string literal>", i1 false, i1 false}
!1090 = !{ptr @test_u32_none._entry.945, !1047, !"_entry", i1 false, i1 false}
!1091 = !{ptr @test_u32_none._entry_ptr.947, !1047, !"_entry_ptr", i1 false, i1 false}
!1092 = !{ptr @.str.949, !1047, !"<string literal>", i1 false, i1 false}
!1093 = !{ptr @test_u32_none._entry.948, !1047, !"_entry", i1 false, i1 false}
!1094 = !{ptr @test_u32_none._entry_ptr.950, !1047, !"_entry_ptr", i1 false, i1 false}
!1095 = !{ptr @.str.952, !1047, !"<string literal>", i1 false, i1 false}
!1096 = !{ptr @test_u32_none._entry.951, !1047, !"_entry", i1 false, i1 false}
!1097 = !{ptr @test_u32_none._entry_ptr.953, !1047, !"_entry_ptr", i1 false, i1 false}
!1098 = !{ptr @.str.955, !1047, !"<string literal>", i1 false, i1 false}
!1099 = !{ptr @test_u32_none._entry.954, !1047, !"_entry", i1 false, i1 false}
!1100 = !{ptr @test_u32_none._entry_ptr.956, !1047, !"_entry_ptr", i1 false, i1 false}
!1101 = !{ptr @.str.958, !1047, !"<string literal>", i1 false, i1 false}
!1102 = !{ptr @test_u32_none._entry.957, !1047, !"_entry", i1 false, i1 false}
!1103 = !{ptr @test_u32_none._entry_ptr.959, !1047, !"_entry_ptr", i1 false, i1 false}
!1104 = !{ptr @.str.960, !1047, !"<string literal>", i1 false, i1 false}
!1105 = !{ptr @.str.961, !1047, !"<string literal>", i1 false, i1 false}
!1106 = !{ptr @test_u64_none._entry, !1047, !"_entry", i1 false, i1 false}
!1107 = !{ptr @test_u64_none._entry_ptr, !1047, !"_entry_ptr", i1 false, i1 false}
!1108 = !{ptr @.str.963, !1047, !"<string literal>", i1 false, i1 false}
!1109 = !{ptr @test_u64_none._entry.962, !1047, !"_entry", i1 false, i1 false}
!1110 = !{ptr @test_u64_none._entry_ptr.964, !1047, !"_entry_ptr", i1 false, i1 false}
!1111 = !{ptr @.str.966, !1047, !"<string literal>", i1 false, i1 false}
!1112 = !{ptr @test_u64_none._entry.965, !1047, !"_entry", i1 false, i1 false}
!1113 = !{ptr @test_u64_none._entry_ptr.967, !1047, !"_entry_ptr", i1 false, i1 false}
!1114 = !{ptr @.str.969, !1047, !"<string literal>", i1 false, i1 false}
!1115 = !{ptr @test_u64_none._entry.968, !1047, !"_entry", i1 false, i1 false}
!1116 = !{ptr @test_u64_none._entry_ptr.970, !1047, !"_entry_ptr", i1 false, i1 false}
!1117 = !{ptr @.str.972, !1047, !"<string literal>", i1 false, i1 false}
!1118 = !{ptr @test_u64_none._entry.971, !1047, !"_entry", i1 false, i1 false}
!1119 = !{ptr @test_u64_none._entry_ptr.973, !1047, !"_entry_ptr", i1 false, i1 false}
!1120 = !{ptr @.str.975, !1047, !"<string literal>", i1 false, i1 false}
!1121 = !{ptr @test_u64_none._entry.974, !1047, !"_entry", i1 false, i1 false}
!1122 = !{ptr @test_u64_none._entry_ptr.976, !1047, !"_entry_ptr", i1 false, i1 false}
!1123 = !{ptr @.str.977, !1047, !"<string literal>", i1 false, i1 false}
!1124 = !{ptr @.str.978, !1047, !"<string literal>", i1 false, i1 false}
!1125 = !{ptr @test_char_array_none._entry, !1047, !"_entry", i1 false, i1 false}
!1126 = !{ptr @test_char_array_none._entry_ptr, !1047, !"_entry_ptr", i1 false, i1 false}
!1127 = !{ptr @.str.980, !1047, !"<string literal>", i1 false, i1 false}
!1128 = !{ptr @test_char_array_none._entry.979, !1047, !"_entry", i1 false, i1 false}
!1129 = !{ptr @test_char_array_none._entry_ptr.981, !1047, !"_entry_ptr", i1 false, i1 false}
!1130 = !{ptr @.str.983, !1047, !"<string literal>", i1 false, i1 false}
!1131 = !{ptr @test_char_array_none._entry.982, !1047, !"_entry", i1 false, i1 false}
!1132 = !{ptr @test_char_array_none._entry_ptr.984, !1047, !"_entry_ptr", i1 false, i1 false}
!1133 = !{ptr @.str.986, !1047, !"<string literal>", i1 false, i1 false}
!1134 = !{ptr @test_char_array_none._entry.985, !1047, !"_entry", i1 false, i1 false}
!1135 = !{ptr @test_char_array_none._entry_ptr.987, !1047, !"_entry_ptr", i1 false, i1 false}
!1136 = !{ptr @.str.989, !1047, !"<string literal>", i1 false, i1 false}
!1137 = !{ptr @test_char_array_none._entry.988, !1047, !"_entry", i1 false, i1 false}
!1138 = !{ptr @test_char_array_none._entry_ptr.990, !1047, !"_entry_ptr", i1 false, i1 false}
!1139 = !{ptr @.str.992, !1047, !"<string literal>", i1 false, i1 false}
!1140 = !{ptr @test_char_array_none._entry.991, !1047, !"_entry", i1 false, i1 false}
!1141 = !{ptr @test_char_array_none._entry_ptr.993, !1047, !"_entry_ptr", i1 false, i1 false}
!1142 = !{ptr @.str.994, !1143, !"<string literal>", i1 false, i1 false}
!1143 = !{!"../lib/test_stackinit.c", i32 450, i32 1}
!1144 = !{ptr @.str.995, !1143, !"<string literal>", i1 false, i1 false}
!1145 = !{ptr @test_switch_1_none._entry, !1143, !"_entry", i1 false, i1 false}
!1146 = !{ptr @test_switch_1_none._entry_ptr, !1143, !"_entry_ptr", i1 false, i1 false}
!1147 = !{ptr @.str.997, !1143, !"<string literal>", i1 false, i1 false}
!1148 = !{ptr @test_switch_1_none._entry.996, !1143, !"_entry", i1 false, i1 false}
!1149 = !{ptr @test_switch_1_none._entry_ptr.998, !1143, !"_entry_ptr", i1 false, i1 false}
!1150 = !{ptr @.str.1000, !1143, !"<string literal>", i1 false, i1 false}
!1151 = !{ptr @test_switch_1_none._entry.999, !1143, !"_entry", i1 false, i1 false}
!1152 = !{ptr @test_switch_1_none._entry_ptr.1001, !1143, !"_entry_ptr", i1 false, i1 false}
!1153 = !{ptr @.str.1003, !1143, !"<string literal>", i1 false, i1 false}
!1154 = !{ptr @test_switch_1_none._entry.1002, !1143, !"_entry", i1 false, i1 false}
!1155 = !{ptr @test_switch_1_none._entry_ptr.1004, !1143, !"_entry_ptr", i1 false, i1 false}
!1156 = !{ptr @.str.1006, !1143, !"<string literal>", i1 false, i1 false}
!1157 = !{ptr @test_switch_1_none._entry.1005, !1143, !"_entry", i1 false, i1 false}
!1158 = !{ptr @test_switch_1_none._entry_ptr.1007, !1143, !"_entry_ptr", i1 false, i1 false}
!1159 = !{ptr @.str.1009, !1143, !"<string literal>", i1 false, i1 false}
!1160 = !{ptr @test_switch_1_none._entry.1008, !1143, !"_entry", i1 false, i1 false}
!1161 = !{ptr @test_switch_1_none._entry_ptr.1010, !1143, !"_entry_ptr", i1 false, i1 false}
!1162 = !{ptr @.str.1011, !1163, !"<string literal>", i1 false, i1 false}
!1163 = !{!"../lib/test_stackinit.c", i32 451, i32 1}
!1164 = !{ptr @.str.1012, !1163, !"<string literal>", i1 false, i1 false}
!1165 = !{ptr @test_switch_2_none._entry, !1163, !"_entry", i1 false, i1 false}
!1166 = !{ptr @test_switch_2_none._entry_ptr, !1163, !"_entry_ptr", i1 false, i1 false}
!1167 = !{ptr @.str.1014, !1163, !"<string literal>", i1 false, i1 false}
!1168 = !{ptr @test_switch_2_none._entry.1013, !1163, !"_entry", i1 false, i1 false}
!1169 = !{ptr @test_switch_2_none._entry_ptr.1015, !1163, !"_entry_ptr", i1 false, i1 false}
!1170 = !{ptr @.str.1017, !1163, !"<string literal>", i1 false, i1 false}
!1171 = !{ptr @test_switch_2_none._entry.1016, !1163, !"_entry", i1 false, i1 false}
!1172 = !{ptr @test_switch_2_none._entry_ptr.1018, !1163, !"_entry_ptr", i1 false, i1 false}
!1173 = !{ptr @.str.1020, !1163, !"<string literal>", i1 false, i1 false}
!1174 = !{ptr @test_switch_2_none._entry.1019, !1163, !"_entry", i1 false, i1 false}
!1175 = !{ptr @test_switch_2_none._entry_ptr.1021, !1163, !"_entry_ptr", i1 false, i1 false}
!1176 = !{ptr @.str.1023, !1163, !"<string literal>", i1 false, i1 false}
!1177 = !{ptr @test_switch_2_none._entry.1022, !1163, !"_entry", i1 false, i1 false}
!1178 = !{ptr @test_switch_2_none._entry_ptr.1024, !1163, !"_entry_ptr", i1 false, i1 false}
!1179 = !{ptr @.str.1026, !1163, !"<string literal>", i1 false, i1 false}
!1180 = !{ptr @test_switch_2_none._entry.1025, !1163, !"_entry", i1 false, i1 false}
!1181 = !{ptr @test_switch_2_none._entry_ptr.1027, !1163, !"_entry_ptr", i1 false, i1 false}
!1182 = !{ptr @.str.1028, !1183, !"<string literal>", i1 false, i1 false}
!1183 = !{!"../lib/test_stackinit.c", i32 385, i32 1}
!1184 = !{ptr @.str.1029, !1183, !"<string literal>", i1 false, i1 false}
!1185 = !{ptr @test_small_hole_none._entry, !1183, !"_entry", i1 false, i1 false}
!1186 = !{ptr @test_small_hole_none._entry_ptr, !1183, !"_entry_ptr", i1 false, i1 false}
!1187 = !{ptr @.str.1031, !1183, !"<string literal>", i1 false, i1 false}
!1188 = !{ptr @test_small_hole_none._entry.1030, !1183, !"_entry", i1 false, i1 false}
!1189 = !{ptr @test_small_hole_none._entry_ptr.1032, !1183, !"_entry_ptr", i1 false, i1 false}
!1190 = !{ptr @.str.1034, !1183, !"<string literal>", i1 false, i1 false}
!1191 = !{ptr @test_small_hole_none._entry.1033, !1183, !"_entry", i1 false, i1 false}
!1192 = !{ptr @test_small_hole_none._entry_ptr.1035, !1183, !"_entry_ptr", i1 false, i1 false}
!1193 = !{ptr @.str.1037, !1183, !"<string literal>", i1 false, i1 false}
!1194 = !{ptr @test_small_hole_none._entry.1036, !1183, !"_entry", i1 false, i1 false}
!1195 = !{ptr @test_small_hole_none._entry_ptr.1038, !1183, !"_entry_ptr", i1 false, i1 false}
!1196 = !{ptr @.str.1040, !1183, !"<string literal>", i1 false, i1 false}
!1197 = !{ptr @test_small_hole_none._entry.1039, !1183, !"_entry", i1 false, i1 false}
!1198 = !{ptr @test_small_hole_none._entry_ptr.1041, !1183, !"_entry_ptr", i1 false, i1 false}
!1199 = !{ptr @.str.1043, !1183, !"<string literal>", i1 false, i1 false}
!1200 = !{ptr @test_small_hole_none._entry.1042, !1183, !"_entry", i1 false, i1 false}
!1201 = !{ptr @test_small_hole_none._entry_ptr.1044, !1183, !"_entry_ptr", i1 false, i1 false}
!1202 = !{ptr @.str.1045, !1183, !"<string literal>", i1 false, i1 false}
!1203 = !{ptr @.str.1046, !1183, !"<string literal>", i1 false, i1 false}
!1204 = !{ptr @test_big_hole_none._entry, !1183, !"_entry", i1 false, i1 false}
!1205 = !{ptr @test_big_hole_none._entry_ptr, !1183, !"_entry_ptr", i1 false, i1 false}
!1206 = !{ptr @.str.1048, !1183, !"<string literal>", i1 false, i1 false}
!1207 = !{ptr @test_big_hole_none._entry.1047, !1183, !"_entry", i1 false, i1 false}
!1208 = !{ptr @test_big_hole_none._entry_ptr.1049, !1183, !"_entry_ptr", i1 false, i1 false}
!1209 = !{ptr @.str.1051, !1183, !"<string literal>", i1 false, i1 false}
!1210 = !{ptr @test_big_hole_none._entry.1050, !1183, !"_entry", i1 false, i1 false}
!1211 = !{ptr @test_big_hole_none._entry_ptr.1052, !1183, !"_entry_ptr", i1 false, i1 false}
!1212 = !{ptr @.str.1054, !1183, !"<string literal>", i1 false, i1 false}
!1213 = !{ptr @test_big_hole_none._entry.1053, !1183, !"_entry", i1 false, i1 false}
!1214 = !{ptr @test_big_hole_none._entry_ptr.1055, !1183, !"_entry_ptr", i1 false, i1 false}
!1215 = !{ptr @.str.1057, !1183, !"<string literal>", i1 false, i1 false}
!1216 = !{ptr @test_big_hole_none._entry.1056, !1183, !"_entry", i1 false, i1 false}
!1217 = !{ptr @test_big_hole_none._entry_ptr.1058, !1183, !"_entry_ptr", i1 false, i1 false}
!1218 = !{ptr @.str.1060, !1183, !"<string literal>", i1 false, i1 false}
!1219 = !{ptr @test_big_hole_none._entry.1059, !1183, !"_entry", i1 false, i1 false}
!1220 = !{ptr @test_big_hole_none._entry_ptr.1061, !1183, !"_entry_ptr", i1 false, i1 false}
!1221 = !{ptr @.str.1062, !1183, !"<string literal>", i1 false, i1 false}
!1222 = !{ptr @.str.1063, !1183, !"<string literal>", i1 false, i1 false}
!1223 = !{ptr @test_trailing_hole_none._entry, !1183, !"_entry", i1 false, i1 false}
!1224 = !{ptr @test_trailing_hole_none._entry_ptr, !1183, !"_entry_ptr", i1 false, i1 false}
!1225 = !{ptr @.str.1065, !1183, !"<string literal>", i1 false, i1 false}
!1226 = !{ptr @test_trailing_hole_none._entry.1064, !1183, !"_entry", i1 false, i1 false}
!1227 = !{ptr @test_trailing_hole_none._entry_ptr.1066, !1183, !"_entry_ptr", i1 false, i1 false}
!1228 = !{ptr @.str.1068, !1183, !"<string literal>", i1 false, i1 false}
!1229 = !{ptr @test_trailing_hole_none._entry.1067, !1183, !"_entry", i1 false, i1 false}
!1230 = !{ptr @test_trailing_hole_none._entry_ptr.1069, !1183, !"_entry_ptr", i1 false, i1 false}
!1231 = !{ptr @.str.1071, !1183, !"<string literal>", i1 false, i1 false}
!1232 = !{ptr @test_trailing_hole_none._entry.1070, !1183, !"_entry", i1 false, i1 false}
!1233 = !{ptr @test_trailing_hole_none._entry_ptr.1072, !1183, !"_entry_ptr", i1 false, i1 false}
!1234 = !{ptr @.str.1074, !1183, !"<string literal>", i1 false, i1 false}
!1235 = !{ptr @test_trailing_hole_none._entry.1073, !1183, !"_entry", i1 false, i1 false}
!1236 = !{ptr @test_trailing_hole_none._entry_ptr.1075, !1183, !"_entry_ptr", i1 false, i1 false}
!1237 = !{ptr @.str.1077, !1183, !"<string literal>", i1 false, i1 false}
!1238 = !{ptr @test_trailing_hole_none._entry.1076, !1183, !"_entry", i1 false, i1 false}
!1239 = !{ptr @test_trailing_hole_none._entry_ptr.1078, !1183, !"_entry_ptr", i1 false, i1 false}
!1240 = !{ptr @.str.1079, !1183, !"<string literal>", i1 false, i1 false}
!1241 = !{ptr @.str.1080, !1183, !"<string literal>", i1 false, i1 false}
!1242 = !{ptr @test_packed_none._entry, !1183, !"_entry", i1 false, i1 false}
!1243 = !{ptr @test_packed_none._entry_ptr, !1183, !"_entry_ptr", i1 false, i1 false}
!1244 = !{ptr @.str.1082, !1183, !"<string literal>", i1 false, i1 false}
!1245 = !{ptr @test_packed_none._entry.1081, !1183, !"_entry", i1 false, i1 false}
!1246 = !{ptr @test_packed_none._entry_ptr.1083, !1183, !"_entry_ptr", i1 false, i1 false}
!1247 = !{ptr @.str.1085, !1183, !"<string literal>", i1 false, i1 false}
!1248 = !{ptr @test_packed_none._entry.1084, !1183, !"_entry", i1 false, i1 false}
!1249 = !{ptr @test_packed_none._entry_ptr.1086, !1183, !"_entry_ptr", i1 false, i1 false}
!1250 = !{ptr @.str.1088, !1183, !"<string literal>", i1 false, i1 false}
!1251 = !{ptr @test_packed_none._entry.1087, !1183, !"_entry", i1 false, i1 false}
!1252 = !{ptr @test_packed_none._entry_ptr.1089, !1183, !"_entry_ptr", i1 false, i1 false}
!1253 = !{ptr @.str.1091, !1183, !"<string literal>", i1 false, i1 false}
!1254 = !{ptr @test_packed_none._entry.1090, !1183, !"_entry", i1 false, i1 false}
!1255 = !{ptr @test_packed_none._entry_ptr.1092, !1183, !"_entry_ptr", i1 false, i1 false}
!1256 = !{ptr @.str.1094, !1183, !"<string literal>", i1 false, i1 false}
!1257 = !{ptr @test_packed_none._entry.1093, !1183, !"_entry", i1 false, i1 false}
!1258 = !{ptr @test_packed_none._entry_ptr.1095, !1183, !"_entry_ptr", i1 false, i1 false}
!1259 = !{ptr @.str.1096, !1260, !"<string literal>", i1 false, i1 false}
!1260 = !{!"../lib/test_stackinit.c", i32 387, i32 1}
!1261 = !{ptr @.str.1097, !1260, !"<string literal>", i1 false, i1 false}
!1262 = !{ptr @test_user._entry, !1260, !"_entry", i1 false, i1 false}
!1263 = !{ptr @test_user._entry_ptr, !1260, !"_entry_ptr", i1 false, i1 false}
!1264 = !{ptr @.str.1099, !1260, !"<string literal>", i1 false, i1 false}
!1265 = !{ptr @test_user._entry.1098, !1260, !"_entry", i1 false, i1 false}
!1266 = !{ptr @test_user._entry_ptr.1100, !1260, !"_entry_ptr", i1 false, i1 false}
!1267 = !{ptr @.str.1102, !1260, !"<string literal>", i1 false, i1 false}
!1268 = !{ptr @test_user._entry.1101, !1260, !"_entry", i1 false, i1 false}
!1269 = !{ptr @test_user._entry_ptr.1103, !1260, !"_entry_ptr", i1 false, i1 false}
!1270 = !{ptr @.str.1105, !1260, !"<string literal>", i1 false, i1 false}
!1271 = !{ptr @test_user._entry.1104, !1260, !"_entry", i1 false, i1 false}
!1272 = !{ptr @test_user._entry_ptr.1106, !1260, !"_entry_ptr", i1 false, i1 false}
!1273 = !{ptr @.str.1108, !1260, !"<string literal>", i1 false, i1 false}
!1274 = !{ptr @test_user._entry.1107, !1260, !"_entry", i1 false, i1 false}
!1275 = !{ptr @test_user._entry_ptr.1109, !1260, !"_entry_ptr", i1 false, i1 false}
!1276 = !{ptr @.str.1111, !1260, !"<string literal>", i1 false, i1 false}
!1277 = !{ptr @test_user._entry.1110, !1260, !"_entry", i1 false, i1 false}
!1278 = !{ptr @test_user._entry_ptr.1112, !1260, !"_entry_ptr", i1 false, i1 false}
!1279 = !{i32 1, !"wchar_size", i32 2}
!1280 = !{i32 1, !"min_enum_size", i32 4}
!1281 = !{i32 8, !"branch-target-enforcement", i32 0}
!1282 = !{i32 8, !"sign-return-address", i32 0}
!1283 = !{i32 8, !"sign-return-address-all", i32 0}
!1284 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!1285 = !{i32 7, !"uwtable", i32 1}
!1286 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!1287 = !{!"auto-init"}
